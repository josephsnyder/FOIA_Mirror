KIDS Distribution saved on Aug 20, 2015@17:16:54
DG*5.3*884,GMTS*2.7*111,IB*2*522,LR*5.2*442,ROR*1.5*25,OR*3*406
**KIDS**:DG*5.3*884^GMTS*2.7*111^IB*2.0*522^LR*5.2*442^ROR*1.5*25^OR*3.0*406^

**INSTALL NAME**
DG*5.3*884
"BLD",9662,0)
DG*5.3*884^REGISTRATION^0^3150820^y
"BLD",9662,1,0)
^^2^2^3150327^^^
"BLD",9662,1,1,0)
Please refer to DG*5.3*884 in the National Patch Module for a description
"BLD",9662,1,2,0)
of this patch.
"BLD",9662,4,0)
^9.64PA^45.64^2
"BLD",9662,4,45,0)
45
"BLD",9662,4,45,2,0)
^9.641^45.05^4
"BLD",9662,4,45,2,45,0)
PTF  (File-top level)
"BLD",9662,4,45,2,45,1,0)
^9.6411^82.14^50
"BLD",9662,4,45,2,45,1,79,0)
PRINCIPAL DIAGNOSIS
"BLD",9662,4,45,2,45,1,79.16,0)
SECONDARY DIAGNOSIS 1
"BLD",9662,4,45,2,45,1,79.17,0)
SECONDARY DIAGNOSIS 2
"BLD",9662,4,45,2,45,1,79.18,0)
SECONDARY DIAGNOSIS 3
"BLD",9662,4,45,2,45,1,79.19,0)
SECONDARY DIAGNOSIS 4
"BLD",9662,4,45,2,45,1,79.201,0)
SECONDARY DIAGNOSIS 5
"BLD",9662,4,45,2,45,1,79.21,0)
SECONDARY DIAGNOSIS 6
"BLD",9662,4,45,2,45,1,79.22,0)
SECONDARY DIAGNOSIS 7
"BLD",9662,4,45,2,45,1,79.23,0)
SECONDARY DIAGNOSIS 8
"BLD",9662,4,45,2,45,1,79.24,0)
SECONDARY DIAGNOSIS 9
"BLD",9662,4,45,2,45,1,79.241,0)
SECONDARY DIAGNOSIS 10
"BLD",9662,4,45,2,45,1,79.242,0)
SECONDARY DIAGNOSIS 11
"BLD",9662,4,45,2,45,1,79.243,0)
SECONDARY DIAGNOSIS 12
"BLD",9662,4,45,2,45,1,79.244,0)
SECONDARY DIAGNOSIS 13
"BLD",9662,4,45,2,45,1,79.245,0)
SECONDARY DIAGNOSIS 14
"BLD",9662,4,45,2,45,1,79.246,0)
SECONDARY DIAGNOSIS 15
"BLD",9662,4,45,2,45,1,79.247,0)
SECONDARY DIAGNOSIS 16
"BLD",9662,4,45,2,45,1,79.248,0)
SECONDARY DIAGNOSIS 17
"BLD",9662,4,45,2,45,1,79.249,0)
SECONDARY DIAGNOSIS 18
"BLD",9662,4,45,2,45,1,79.2491,0)
SECONDARY DIAGNOSIS 19
"BLD",9662,4,45,2,45,1,79.24911,0)
SECONDARY DIAGNOSIS 20
"BLD",9662,4,45,2,45,1,79.24912,0)
SECONDARY DIAGNOSIS 21
"BLD",9662,4,45,2,45,1,79.24913,0)
SECONDARY DIAGNOSIS 22
"BLD",9662,4,45,2,45,1,79.24914,0)
SECONDARY DIAGNOSIS 23
"BLD",9662,4,45,2,45,1,79.24915,0)
SECONDARY DIAGNOSIS 24
"BLD",9662,4,45,2,45,1,82.01,0)
POA PRINCIPAL DIAGNOSIS
"BLD",9662,4,45,2,45,1,82.02,0)
POA SECONDARY DIAGNOSIS 1
"BLD",9662,4,45,2,45,1,82.03,0)
POA SECONDARY DIAGNOSIS 2
"BLD",9662,4,45,2,45,1,82.04,0)
POA SECONDARY DIAGNOSIS 3
"BLD",9662,4,45,2,45,1,82.05,0)
POA SECONDARY DIAGNOSIS 4
"BLD",9662,4,45,2,45,1,82.06,0)
POA SECONDARY DIAGNOSIS 5
"BLD",9662,4,45,2,45,1,82.07,0)
POA SECONDARY DIAGNOSIS 6
"BLD",9662,4,45,2,45,1,82.08,0)
POA SECONDARY DIAGNOSIS 7
"BLD",9662,4,45,2,45,1,82.09,0)
POA SECONDARY DIAGNOSIS 8
"BLD",9662,4,45,2,45,1,82.1,0)
POA SECONDARY DIAGNOSIS 9
"BLD",9662,4,45,2,45,1,82.11,0)
POA SECONDARY DIAGNOSIS 10
"BLD",9662,4,45,2,45,1,82.12,0)
POA SECONDARY DIAGNOSIS 11
"BLD",9662,4,45,2,45,1,82.13,0)
POA SECONDARY DIAGNOSIS 12
"BLD",9662,4,45,2,45,1,82.14,0)
POA SECONDARY DIAGNOSIS 13
"BLD",9662,4,45,2,45,1,82.15,0)
POA SECONDARY DIAGNOSIS 14
"BLD",9662,4,45,2,45,1,82.16,0)
POA SECONDARY DIAGNOSIS 15
"BLD",9662,4,45,2,45,1,82.17,0)
POA SECONDARY DIAGNOSIS 16
"BLD",9662,4,45,2,45,1,82.18,0)
POA SECONDARY DIAGNOSIS 17
"BLD",9662,4,45,2,45,1,82.19,0)
POA SECONDARY DIAGNOSIS 18
"BLD",9662,4,45,2,45,1,82.2,0)
POA SECONDARY DIAGNOSIS 19
"BLD",9662,4,45,2,45,1,82.21,0)
POA SECONDARY DIAGNOSIS 20
"BLD",9662,4,45,2,45,1,82.22,0)
POA SECONDARY DIAGNOSIS 21
"BLD",9662,4,45,2,45,1,82.23,0)
POA SECONDARY DIAGNOSIS 22
"BLD",9662,4,45,2,45,1,82.24,0)
POA SECONDARY DIAGNOSIS 23
"BLD",9662,4,45,2,45,1,82.25,0)
POA SECONDARY DIAGNOSIS 24
"BLD",9662,4,45,2,45.01,0)
401  (sub-file)
"BLD",9662,4,45,2,45.01,1,0)
^9.6411^32^25
"BLD",9662,4,45,2,45.01,1,8,0)
OPERATION CODE 1
"BLD",9662,4,45,2,45.01,1,9,0)
OPERATION CODE 2
"BLD",9662,4,45,2,45.01,1,10,0)
OPERATION CODE 3
"BLD",9662,4,45,2,45.01,1,11,0)
OPERATION CODE 4
"BLD",9662,4,45,2,45.01,1,12,0)
OPERATION CODE 5
"BLD",9662,4,45,2,45.01,1,13,0)
OPERATION CODE 6
"BLD",9662,4,45,2,45.01,1,14,0)
OPERATION CODE 7
"BLD",9662,4,45,2,45.01,1,15,0)
OPERATION CODE 8
"BLD",9662,4,45,2,45.01,1,16,0)
OPERATION CODE 9
"BLD",9662,4,45,2,45.01,1,17,0)
OPERATION CODE 10
"BLD",9662,4,45,2,45.01,1,18,0)
OPERATION CODE 11
"BLD",9662,4,45,2,45.01,1,19,0)
OPERATION CODE 12
"BLD",9662,4,45,2,45.01,1,20,0)
OPERATION CODE 13
"BLD",9662,4,45,2,45.01,1,21,0)
OPERATION CODE 14
"BLD",9662,4,45,2,45.01,1,22,0)
OPERATION CODE 15
"BLD",9662,4,45,2,45.01,1,23,0)
OPERATION CODE 16
"BLD",9662,4,45,2,45.01,1,24,0)
OPERATION CODE 17
"BLD",9662,4,45,2,45.01,1,25,0)
OPERATION CODE 18
"BLD",9662,4,45,2,45.01,1,26,0)
OPERATION CODE 19
"BLD",9662,4,45,2,45.01,1,27,0)
OPERATION CODE 20
"BLD",9662,4,45,2,45.01,1,28,0)
OPERATION CODE 21
"BLD",9662,4,45,2,45.01,1,29,0)
OPERATION CODE 22
"BLD",9662,4,45,2,45.01,1,30,0)
OPERATION CODE 23
"BLD",9662,4,45,2,45.01,1,31,0)
OPERATION CODE 24
"BLD",9662,4,45,2,45.01,1,32,0)
OPERATION CODE 25
"BLD",9662,4,45,2,45.02,0)
501  (sub-file)
"BLD",9662,4,45,2,45.02,1,0)
^9.6411^82.1^50
"BLD",9662,4,45,2,45.02,1,5,0)
ICD 1
"BLD",9662,4,45,2,45.02,1,6,0)
ICD 2
"BLD",9662,4,45,2,45.02,1,7,0)
ICD 3
"BLD",9662,4,45,2,45.02,1,8,0)
ICD 4
"BLD",9662,4,45,2,45.02,1,9,0)
ICD 5
"BLD",9662,4,45,2,45.02,1,11,0)
ICD 6
"BLD",9662,4,45,2,45.02,1,12,0)
ICD 7
"BLD",9662,4,45,2,45.02,1,13,0)
ICD 8
"BLD",9662,4,45,2,45.02,1,14,0)
ICD 9
"BLD",9662,4,45,2,45.02,1,15,0)
ICD 10
"BLD",9662,4,45,2,45.02,1,81.01,0)
ICD 11
"BLD",9662,4,45,2,45.02,1,81.02,0)
ICD 12
"BLD",9662,4,45,2,45.02,1,81.03,0)
ICD 13
"BLD",9662,4,45,2,45.02,1,81.04,0)
ICD 14
"BLD",9662,4,45,2,45.02,1,81.05,0)
ICD 15
"BLD",9662,4,45,2,45.02,1,81.06,0)
ICD 16
"BLD",9662,4,45,2,45.02,1,81.07,0)
ICD 17
"BLD",9662,4,45,2,45.02,1,81.08,0)
ICD 18
"BLD",9662,4,45,2,45.02,1,81.09,0)
ICD 19
"BLD",9662,4,45,2,45.02,1,81.1,0)
ICD 20
"BLD",9662,4,45,2,45.02,1,81.11,0)
ICD 21
"BLD",9662,4,45,2,45.02,1,81.12,0)
ICD 22
"BLD",9662,4,45,2,45.02,1,81.13,0)
ICD 23
"BLD",9662,4,45,2,45.02,1,81.14,0)
ICD 24
"BLD",9662,4,45,2,45.02,1,81.15,0)
ICD 25
"BLD",9662,4,45,2,45.02,1,82.01,0)
POA FOR ICD 1
"BLD",9662,4,45,2,45.02,1,82.02,0)
POA FOR ICD 2
"BLD",9662,4,45,2,45.02,1,82.03,0)
POA FOR ICD 3
"BLD",9662,4,45,2,45.02,1,82.04,0)
POA FOR ICD 4
"BLD",9662,4,45,2,45.02,1,82.05,0)
POA FOR ICD 5
"BLD",9662,4,45,2,45.02,1,82.06,0)
POA FOR ICD 6
"BLD",9662,4,45,2,45.02,1,82.07,0)
POA FOR ICD 7
"BLD",9662,4,45,2,45.02,1,82.08,0)
POA FOR ICD 8
"BLD",9662,4,45,2,45.02,1,82.09,0)
POA FOR ICD 9
"BLD",9662,4,45,2,45.02,1,82.1,0)
POA FOR ICD 10
"BLD",9662,4,45,2,45.02,1,82.11,0)
POA FOR ICD 11
"BLD",9662,4,45,2,45.02,1,82.12,0)
POA FOR ICD 12
"BLD",9662,4,45,2,45.02,1,82.13,0)
POA FOR ICD 13
"BLD",9662,4,45,2,45.02,1,82.14,0)
POA FOR ICD 14
"BLD",9662,4,45,2,45.02,1,82.15,0)
POA FOR ICD 15
"BLD",9662,4,45,2,45.02,1,82.16,0)
POA FOR ICD 16
"BLD",9662,4,45,2,45.02,1,82.17,0)
POA FOR ICD 17
"BLD",9662,4,45,2,45.02,1,82.18,0)
POA FOR ICD 18
"BLD",9662,4,45,2,45.02,1,82.19,0)
POA FOR ICD 19
"BLD",9662,4,45,2,45.02,1,82.2,0)
POA FOR ICD 20
"BLD",9662,4,45,2,45.02,1,82.21,0)
POA FOR ICD 21
"BLD",9662,4,45,2,45.02,1,82.22,0)
POA FOR ICD 22
"BLD",9662,4,45,2,45.02,1,82.23,0)
POA FOR ICD 23
"BLD",9662,4,45,2,45.02,1,82.24,0)
POA FOR ICD 24
"BLD",9662,4,45,2,45.02,1,82.25,0)
POA FOR ICD 25
"BLD",9662,4,45,2,45.05,0)
601  (sub-file)
"BLD",9662,4,45,2,45.05,1,0)
^9.6411^28^25
"BLD",9662,4,45,2,45.05,1,4,0)
PROCEDURE CODE 1
"BLD",9662,4,45,2,45.05,1,5,0)
PROCEDURE CODE 2
"BLD",9662,4,45,2,45.05,1,6,0)
PROCEDURE CODE 3
"BLD",9662,4,45,2,45.05,1,7,0)
PROCEDURE CODE 4
"BLD",9662,4,45,2,45.05,1,8,0)
PROCEDURE CODE 5
"BLD",9662,4,45,2,45.05,1,9,0)
PROCEDURE CODE 6
"BLD",9662,4,45,2,45.05,1,10,0)
PROCEDURE CODE 7
"BLD",9662,4,45,2,45.05,1,11,0)
PROCEDURE CODE 8
"BLD",9662,4,45,2,45.05,1,12,0)
PROCEDURE CODE 9
"BLD",9662,4,45,2,45.05,1,13,0)
PROCEDURE CODE 10
"BLD",9662,4,45,2,45.05,1,14,0)
PROCEDURE CODE 11
"BLD",9662,4,45,2,45.05,1,15,0)
PROCEDURE CODE 12
"BLD",9662,4,45,2,45.05,1,16,0)
PROCEDURE CODE 13
"BLD",9662,4,45,2,45.05,1,17,0)
PROCEDURE CODE 14
"BLD",9662,4,45,2,45.05,1,18,0)
PROCEDURE CODE 15
"BLD",9662,4,45,2,45.05,1,19,0)
PROCEDURE CODE 16
"BLD",9662,4,45,2,45.05,1,20,0)
PROCEDURE CODE 17
"BLD",9662,4,45,2,45.05,1,21,0)
PROCEDURE CODE 18
"BLD",9662,4,45,2,45.05,1,22,0)
PROCEDURE CODE 19
"BLD",9662,4,45,2,45.05,1,23,0)
PROCEDURE CODE 20
"BLD",9662,4,45,2,45.05,1,24,0)
PROCEDURE CODE 21
"BLD",9662,4,45,2,45.05,1,25,0)
PROCEDURE CODE 22
"BLD",9662,4,45,2,45.05,1,26,0)
PROCEDURE CODE 23
"BLD",9662,4,45,2,45.05,1,27,0)
PROCEDURE CODE 24
"BLD",9662,4,45,2,45.05,1,28,0)
PROCEDURE CODE 25
"BLD",9662,4,45,222)
y^n^p^^^^n^^n
"BLD",9662,4,45,224)

"BLD",9662,4,45.64,0)
45.64
"BLD",9662,4,45.64,222)
y^n^f^^n^^y^o^n
"BLD",9662,4,"APDD",45,45)

"BLD",9662,4,"APDD",45,45,79)

"BLD",9662,4,"APDD",45,45,79.16)

"BLD",9662,4,"APDD",45,45,79.17)

"BLD",9662,4,"APDD",45,45,79.18)

"BLD",9662,4,"APDD",45,45,79.19)

"BLD",9662,4,"APDD",45,45,79.201)

"BLD",9662,4,"APDD",45,45,79.21)

"BLD",9662,4,"APDD",45,45,79.22)

"BLD",9662,4,"APDD",45,45,79.23)

"BLD",9662,4,"APDD",45,45,79.24)

"BLD",9662,4,"APDD",45,45,79.241)

"BLD",9662,4,"APDD",45,45,79.242)

"BLD",9662,4,"APDD",45,45,79.243)

"BLD",9662,4,"APDD",45,45,79.244)

"BLD",9662,4,"APDD",45,45,79.245)

"BLD",9662,4,"APDD",45,45,79.246)

"BLD",9662,4,"APDD",45,45,79.247)

"BLD",9662,4,"APDD",45,45,79.248)

"BLD",9662,4,"APDD",45,45,79.249)

"BLD",9662,4,"APDD",45,45,79.2491)

"BLD",9662,4,"APDD",45,45,79.24911)

"BLD",9662,4,"APDD",45,45,79.24912)

"BLD",9662,4,"APDD",45,45,79.24913)

"BLD",9662,4,"APDD",45,45,79.24914)

"BLD",9662,4,"APDD",45,45,79.24915)

"BLD",9662,4,"APDD",45,45,82.01)

"BLD",9662,4,"APDD",45,45,82.02)

"BLD",9662,4,"APDD",45,45,82.03)

"BLD",9662,4,"APDD",45,45,82.04)

"BLD",9662,4,"APDD",45,45,82.05)

"BLD",9662,4,"APDD",45,45,82.06)

"BLD",9662,4,"APDD",45,45,82.07)

"BLD",9662,4,"APDD",45,45,82.08)

"BLD",9662,4,"APDD",45,45,82.09)

"BLD",9662,4,"APDD",45,45,82.1)

"BLD",9662,4,"APDD",45,45,82.11)

"BLD",9662,4,"APDD",45,45,82.12)

"BLD",9662,4,"APDD",45,45,82.13)

"BLD",9662,4,"APDD",45,45,82.14)

"BLD",9662,4,"APDD",45,45,82.15)

"BLD",9662,4,"APDD",45,45,82.16)

"BLD",9662,4,"APDD",45,45,82.17)

"BLD",9662,4,"APDD",45,45,82.18)

"BLD",9662,4,"APDD",45,45,82.19)

"BLD",9662,4,"APDD",45,45,82.2)

"BLD",9662,4,"APDD",45,45,82.21)

"BLD",9662,4,"APDD",45,45,82.22)

"BLD",9662,4,"APDD",45,45,82.23)

"BLD",9662,4,"APDD",45,45,82.24)

"BLD",9662,4,"APDD",45,45,82.25)

"BLD",9662,4,"APDD",45,45.01)

"BLD",9662,4,"APDD",45,45.01,8)

"BLD",9662,4,"APDD",45,45.01,9)

"BLD",9662,4,"APDD",45,45.01,10)

"BLD",9662,4,"APDD",45,45.01,11)

"BLD",9662,4,"APDD",45,45.01,12)

"BLD",9662,4,"APDD",45,45.01,13)

"BLD",9662,4,"APDD",45,45.01,14)

"BLD",9662,4,"APDD",45,45.01,15)

"BLD",9662,4,"APDD",45,45.01,16)

"BLD",9662,4,"APDD",45,45.01,17)

"BLD",9662,4,"APDD",45,45.01,18)

"BLD",9662,4,"APDD",45,45.01,19)

"BLD",9662,4,"APDD",45,45.01,20)

"BLD",9662,4,"APDD",45,45.01,21)

"BLD",9662,4,"APDD",45,45.01,22)

"BLD",9662,4,"APDD",45,45.01,23)

"BLD",9662,4,"APDD",45,45.01,24)

"BLD",9662,4,"APDD",45,45.01,25)

"BLD",9662,4,"APDD",45,45.01,26)

"BLD",9662,4,"APDD",45,45.01,27)

"BLD",9662,4,"APDD",45,45.01,28)

"BLD",9662,4,"APDD",45,45.01,29)

"BLD",9662,4,"APDD",45,45.01,30)

"BLD",9662,4,"APDD",45,45.01,31)

"BLD",9662,4,"APDD",45,45.01,32)

"BLD",9662,4,"APDD",45,45.02)

"BLD",9662,4,"APDD",45,45.02,5)

"BLD",9662,4,"APDD",45,45.02,6)

"BLD",9662,4,"APDD",45,45.02,7)

"BLD",9662,4,"APDD",45,45.02,8)

"BLD",9662,4,"APDD",45,45.02,9)

"BLD",9662,4,"APDD",45,45.02,11)

"BLD",9662,4,"APDD",45,45.02,12)

"BLD",9662,4,"APDD",45,45.02,13)

"BLD",9662,4,"APDD",45,45.02,14)

"BLD",9662,4,"APDD",45,45.02,15)

"BLD",9662,4,"APDD",45,45.02,81.01)

"BLD",9662,4,"APDD",45,45.02,81.02)

"BLD",9662,4,"APDD",45,45.02,81.03)

"BLD",9662,4,"APDD",45,45.02,81.04)

"BLD",9662,4,"APDD",45,45.02,81.05)

"BLD",9662,4,"APDD",45,45.02,81.06)

"BLD",9662,4,"APDD",45,45.02,81.07)

"BLD",9662,4,"APDD",45,45.02,81.08)

"BLD",9662,4,"APDD",45,45.02,81.09)

"BLD",9662,4,"APDD",45,45.02,81.1)

"BLD",9662,4,"APDD",45,45.02,81.11)

"BLD",9662,4,"APDD",45,45.02,81.12)

"BLD",9662,4,"APDD",45,45.02,81.13)

"BLD",9662,4,"APDD",45,45.02,81.14)

"BLD",9662,4,"APDD",45,45.02,81.15)

"BLD",9662,4,"APDD",45,45.02,82.01)

"BLD",9662,4,"APDD",45,45.02,82.02)

"BLD",9662,4,"APDD",45,45.02,82.03)

"BLD",9662,4,"APDD",45,45.02,82.04)

"BLD",9662,4,"APDD",45,45.02,82.05)

"BLD",9662,4,"APDD",45,45.02,82.06)

"BLD",9662,4,"APDD",45,45.02,82.07)

"BLD",9662,4,"APDD",45,45.02,82.08)

"BLD",9662,4,"APDD",45,45.02,82.09)

"BLD",9662,4,"APDD",45,45.02,82.1)

"BLD",9662,4,"APDD",45,45.02,82.11)

"BLD",9662,4,"APDD",45,45.02,82.12)

"BLD",9662,4,"APDD",45,45.02,82.13)

"BLD",9662,4,"APDD",45,45.02,82.14)

"BLD",9662,4,"APDD",45,45.02,82.15)

"BLD",9662,4,"APDD",45,45.02,82.16)

"BLD",9662,4,"APDD",45,45.02,82.17)

"BLD",9662,4,"APDD",45,45.02,82.18)

"BLD",9662,4,"APDD",45,45.02,82.19)

"BLD",9662,4,"APDD",45,45.02,82.2)

"BLD",9662,4,"APDD",45,45.02,82.21)

"BLD",9662,4,"APDD",45,45.02,82.22)

"BLD",9662,4,"APDD",45,45.02,82.23)

"BLD",9662,4,"APDD",45,45.02,82.24)

"BLD",9662,4,"APDD",45,45.02,82.25)

"BLD",9662,4,"APDD",45,45.05)

"BLD",9662,4,"APDD",45,45.05,4)

"BLD",9662,4,"APDD",45,45.05,5)

"BLD",9662,4,"APDD",45,45.05,6)

"BLD",9662,4,"APDD",45,45.05,7)

"BLD",9662,4,"APDD",45,45.05,8)

"BLD",9662,4,"APDD",45,45.05,9)

"BLD",9662,4,"APDD",45,45.05,10)

"BLD",9662,4,"APDD",45,45.05,11)

"BLD",9662,4,"APDD",45,45.05,12)

"BLD",9662,4,"APDD",45,45.05,13)

"BLD",9662,4,"APDD",45,45.05,14)

"BLD",9662,4,"APDD",45,45.05,15)

"BLD",9662,4,"APDD",45,45.05,16)

"BLD",9662,4,"APDD",45,45.05,17)

"BLD",9662,4,"APDD",45,45.05,18)

"BLD",9662,4,"APDD",45,45.05,19)

"BLD",9662,4,"APDD",45,45.05,20)

"BLD",9662,4,"APDD",45,45.05,21)

"BLD",9662,4,"APDD",45,45.05,22)

"BLD",9662,4,"APDD",45,45.05,23)

"BLD",9662,4,"APDD",45,45.05,24)

"BLD",9662,4,"APDD",45,45.05,25)

"BLD",9662,4,"APDD",45,45.05,26)

"BLD",9662,4,"APDD",45,45.05,27)

"BLD",9662,4,"APDD",45,45.05,28)

"BLD",9662,4,"B",45,45)

"BLD",9662,4,"B",45.64,45.64)

"BLD",9662,6.3)
31
"BLD",9662,"ABPKG")
n
"BLD",9662,"INI")
PRE^DG884P
"BLD",9662,"INID")
n^n^n
"BLD",9662,"INIT")
POST^DG884P
"BLD",9662,"KRN",0)
^9.67PA^779.2^20
"BLD",9662,"KRN",.4,0)
.4
"BLD",9662,"KRN",.401,0)
.401
"BLD",9662,"KRN",.402,0)
.402
"BLD",9662,"KRN",.402,"NM",0)
^9.68A^11^6
"BLD",9662,"KRN",.402,"NM",6,0)
DG501-10D    FILE #45^45^0
"BLD",9662,"KRN",.402,"NM",7,0)
DG501F-10D    FILE #45^45^0
"BLD",9662,"KRN",.402,"NM",8,0)
DG401-10P    FILE #45^45^0
"BLD",9662,"KRN",.402,"NM",9,0)
DG601-10P    FILE #45^45^0
"BLD",9662,"KRN",.402,"NM",10,0)
DG701-10D    FILE #45^45^0
"BLD",9662,"KRN",.402,"NM",11,0)
DG601    FILE #45^45^0
"BLD",9662,"KRN",.402,"NM","B","DG401-10P    FILE #45",8)

"BLD",9662,"KRN",.402,"NM","B","DG501-10D    FILE #45",6)

"BLD",9662,"KRN",.402,"NM","B","DG501F-10D    FILE #45",7)

"BLD",9662,"KRN",.402,"NM","B","DG601    FILE #45",11)

"BLD",9662,"KRN",.402,"NM","B","DG601-10P    FILE #45",9)

"BLD",9662,"KRN",.402,"NM","B","DG701-10D    FILE #45",10)

"BLD",9662,"KRN",.403,0)
.403
"BLD",9662,"KRN",.5,0)
.5
"BLD",9662,"KRN",.84,0)
.84
"BLD",9662,"KRN",3.6,0)
3.6
"BLD",9662,"KRN",3.8,0)
3.8
"BLD",9662,"KRN",9.2,0)
9.2
"BLD",9662,"KRN",9.8,0)
9.8
"BLD",9662,"KRN",9.8,"NM",0)
^9.68A^87^76
"BLD",9662,"KRN",9.8,"NM",1,0)
DGICDGT^^0^B98953906
"BLD",9662,"KRN",9.8,"NM",2,0)
DGPTFJC^^0^B64477474
"BLD",9662,"KRN",9.8,"NM",3,0)
DGPTFM^^0^B81427420
"BLD",9662,"KRN",9.8,"NM",4,0)
DGPTFM4^^0^B35748755
"BLD",9662,"KRN",9.8,"NM",5,0)
DGPTF4^^0^B30569279
"BLD",9662,"KRN",9.8,"NM",6,0)
DGPTF41^^0^B11239143
"BLD",9662,"KRN",9.8,"NM",7,0)
DGPTF5^^0^B6998580
"BLD",9662,"KRN",9.8,"NM",8,0)
DGPTFM0^^0^B17632645
"BLD",9662,"KRN",9.8,"NM",9,0)
DGPTFM1^^0^B36433048
"BLD",9662,"KRN",9.8,"NM",10,0)
DGPTFM6^^0^B36495035
"BLD",9662,"KRN",9.8,"NM",11,0)
DGPTFQWK^^0^B26393553
"BLD",9662,"KRN",9.8,"NM",12,0)
DGPTFUT^^0^B38258055
"BLD",9662,"KRN",9.8,"NM",13,0)
DGPTFM5^^0^B15479197
"BLD",9662,"KRN",9.8,"NM",14,0)
DGPTIC10^^0^B94542788
"BLD",9662,"KRN",9.8,"NM",15,0)
DGPTFAPI^^0^B6178065
"BLD",9662,"KRN",9.8,"NM",16,0)
DGPTFMO^^0^B42799242
"BLD",9662,"KRN",9.8,"NM",17,0)
DGPTDRG^^0^B52220100
"BLD",9662,"KRN",9.8,"NM",18,0)
DGPTFIC^^0^B57159054
"BLD",9662,"KRN",9.8,"NM",19,0)
DGPTOLC2^^0^B35887229
"BLD",9662,"KRN",9.8,"NM",20,0)
DGPTSUDO^^0^B31462240
"BLD",9662,"KRN",9.8,"NM",21,0)
DGPTFD^^0^B23594019
"BLD",9662,"KRN",9.8,"NM",22,0)
DGPTFUT1^^0^B3593858
"BLD",9662,"KRN",9.8,"NM",23,0)
DGPTRI3^^0^B26721345
"BLD",9662,"KRN",9.8,"NM",32,0)
DGPT101^^0^B16555084
"BLD",9662,"KRN",9.8,"NM",33,0)
DGPT101P^^0^B14198290
"BLD",9662,"KRN",9.8,"NM",34,0)
DGPT401^^0^B22199810
"BLD",9662,"KRN",9.8,"NM",35,0)
DGPT501^^0^B15677318
"BLD",9662,"KRN",9.8,"NM",36,0)
DGPT501P^^0^B13121491
"BLD",9662,"KRN",9.8,"NM",37,0)
DGPT50DI^^0^B12005227
"BLD",9662,"KRN",9.8,"NM",38,0)
DGPT50MS^^0^B6178285
"BLD",9662,"KRN",9.8,"NM",39,0)
DGPT601^^0^B21745672
"BLD",9662,"KRN",9.8,"NM",40,0)
DGPT60PR^^0^B4921445
"BLD",9662,"KRN",9.8,"NM",41,0)
DGPT701^^0^B25074534
"BLD",9662,"KRN",9.8,"NM",42,0)
DGPT701P^^0^B17213050
"BLD",9662,"KRN",9.8,"NM",43,0)
DGPT702^^0^B12007365
"BLD",9662,"KRN",9.8,"NM",44,0)
DGPT70DI^^0^B18406929
"BLD",9662,"KRN",9.8,"NM",45,0)
DGPT70DX^^0^B4054092
"BLD",9662,"KRN",9.8,"NM",46,0)
DGPTAE^^0^B19185351
"BLD",9662,"KRN",9.8,"NM",47,0)
DGPTAE01^^0^B10894380
"BLD",9662,"KRN",9.8,"NM",48,0)
DGPTAE02^^0^B26206444
"BLD",9662,"KRN",9.8,"NM",49,0)
DGPTAE03^^0^B8625430
"BLD",9662,"KRN",9.8,"NM",50,0)
DGPTAE04^^0^B12240703
"BLD",9662,"KRN",9.8,"NM",51,0)
DGPTFVC1^^0^B42593524
"BLD",9662,"KRN",9.8,"NM",52,0)
DGPTFVC3^^0^B11851601
"BLD",9662,"KRN",9.8,"NM",53,0)
DGPTAEE^^0^B24445151
"BLD",9662,"KRN",9.8,"NM",54,0)
DGPTAEE1^^0^B39125544
"BLD",9662,"KRN",9.8,"NM",55,0)
DGPTAEE2^^0^B30765062
"BLD",9662,"KRN",9.8,"NM",56,0)
DGPTDDCR^^0^B172287843
"BLD",9662,"KRN",9.8,"NM",60,0)
DGPTRNU^^0^B55750657
"BLD",9662,"KRN",9.8,"NM",61,0)
DGPTRNU1^^0^B7245862
"BLD",9662,"KRN",9.8,"NM",62,0)
DGPTFTR^^0^B55260983
"BLD",9662,"KRN",9.8,"NM",63,0)
DGPTC1^^0^B29467995
"BLD",9662,"KRN",9.8,"NM",64,0)
DGPTC2^^0^B12393502
"BLD",9662,"KRN",9.8,"NM",65,0)
DGPT535^^0^B7151570
"BLD",9662,"KRN",9.8,"NM",66,0)
DGPTF1^^0^B35051519
"BLD",9662,"KRN",9.8,"NM",67,0)
DGPTTS^^0^B24184788
"BLD",9662,"KRN",9.8,"NM",68,0)
DGPTTS1^^0^B28870180
"BLD",9662,"KRN",9.8,"NM",69,0)
DGPTTS2^^0^B22200737
"BLD",9662,"KRN",9.8,"NM",70,0)
DGPTRI0^^0^B27141499
"BLD",9662,"KRN",9.8,"NM",71,0)
DGPTRI1^^0^B45682125
"BLD",9662,"KRN",9.8,"NM",72,0)
DGPTRI2^^0^B35680960
"BLD",9662,"KRN",9.8,"NM",73,0)
DGPTRI4^^0^B69886418
"BLD",9662,"KRN",9.8,"NM",74,0)
DGPTF2^^0^B26229374
"BLD",9662,"KRN",9.8,"NM",75,0)
DGICP^^0^B28102080
"BLD",9662,"KRN",9.8,"NM",76,0)
DGPTSCAN^^0^B25305178
"BLD",9662,"KRN",9.8,"NM",77,0)
DGPTR0^^0^B26801939
"BLD",9662,"KRN",9.8,"NM",78,0)
DGPTR2^^0^B31431930
"BLD",9662,"KRN",9.8,"NM",79,0)
DGPTR3^^0^B3570598
"BLD",9662,"KRN",9.8,"NM",80,0)
DGPTR4^^0^B21708537
"BLD",9662,"KRN",9.8,"NM",81,0)
DGPTFM7^^0^B21631380
"BLD",9662,"KRN",9.8,"NM",82,0)
DGPTOD1^^0^B9059489
"BLD",9662,"KRN",9.8,"NM",83,0)
DGPTODCM^^0^B17949456
"BLD",9662,"KRN",9.8,"NM",84,0)
DGPTF099^^0^B12766033
"BLD",9662,"KRN",9.8,"NM",85,0)
DGPTF09X^^0^B8106091
"BLD",9662,"KRN",9.8,"NM",86,0)
DGPTRPO^^0^B20840184
"BLD",9662,"KRN",9.8,"NM",87,0)
DGPTFTR3^^0^B13787675
"BLD",9662,"KRN",9.8,"NM","B","DGICDGT",1)

"BLD",9662,"KRN",9.8,"NM","B","DGICP",75)

"BLD",9662,"KRN",9.8,"NM","B","DGPT101",32)

"BLD",9662,"KRN",9.8,"NM","B","DGPT101P",33)

"BLD",9662,"KRN",9.8,"NM","B","DGPT401",34)

"BLD",9662,"KRN",9.8,"NM","B","DGPT501",35)

"BLD",9662,"KRN",9.8,"NM","B","DGPT501P",36)

"BLD",9662,"KRN",9.8,"NM","B","DGPT50DI",37)

"BLD",9662,"KRN",9.8,"NM","B","DGPT50MS",38)

"BLD",9662,"KRN",9.8,"NM","B","DGPT535",65)

"BLD",9662,"KRN",9.8,"NM","B","DGPT601",39)

"BLD",9662,"KRN",9.8,"NM","B","DGPT60PR",40)

"BLD",9662,"KRN",9.8,"NM","B","DGPT701",41)

"BLD",9662,"KRN",9.8,"NM","B","DGPT701P",42)

"BLD",9662,"KRN",9.8,"NM","B","DGPT702",43)

"BLD",9662,"KRN",9.8,"NM","B","DGPT70DI",44)

"BLD",9662,"KRN",9.8,"NM","B","DGPT70DX",45)

"BLD",9662,"KRN",9.8,"NM","B","DGPTAE",46)

"BLD",9662,"KRN",9.8,"NM","B","DGPTAE01",47)

"BLD",9662,"KRN",9.8,"NM","B","DGPTAE02",48)

"BLD",9662,"KRN",9.8,"NM","B","DGPTAE03",49)

"BLD",9662,"KRN",9.8,"NM","B","DGPTAE04",50)

"BLD",9662,"KRN",9.8,"NM","B","DGPTAEE",53)

"BLD",9662,"KRN",9.8,"NM","B","DGPTAEE1",54)

"BLD",9662,"KRN",9.8,"NM","B","DGPTAEE2",55)

"BLD",9662,"KRN",9.8,"NM","B","DGPTC1",63)

"BLD",9662,"KRN",9.8,"NM","B","DGPTC2",64)

"BLD",9662,"KRN",9.8,"NM","B","DGPTDDCR",56)

"BLD",9662,"KRN",9.8,"NM","B","DGPTDRG",17)

"BLD",9662,"KRN",9.8,"NM","B","DGPTF099",84)

"BLD",9662,"KRN",9.8,"NM","B","DGPTF09X",85)

"BLD",9662,"KRN",9.8,"NM","B","DGPTF1",66)

"BLD",9662,"KRN",9.8,"NM","B","DGPTF2",74)

"BLD",9662,"KRN",9.8,"NM","B","DGPTF4",5)

"BLD",9662,"KRN",9.8,"NM","B","DGPTF41",6)

"BLD",9662,"KRN",9.8,"NM","B","DGPTF5",7)

"BLD",9662,"KRN",9.8,"NM","B","DGPTFAPI",15)

"BLD",9662,"KRN",9.8,"NM","B","DGPTFD",21)

"BLD",9662,"KRN",9.8,"NM","B","DGPTFIC",18)

"BLD",9662,"KRN",9.8,"NM","B","DGPTFJC",2)

"BLD",9662,"KRN",9.8,"NM","B","DGPTFM",3)

"BLD",9662,"KRN",9.8,"NM","B","DGPTFM0",8)

"BLD",9662,"KRN",9.8,"NM","B","DGPTFM1",9)

"BLD",9662,"KRN",9.8,"NM","B","DGPTFM4",4)

"BLD",9662,"KRN",9.8,"NM","B","DGPTFM5",13)

"BLD",9662,"KRN",9.8,"NM","B","DGPTFM6",10)

"BLD",9662,"KRN",9.8,"NM","B","DGPTFM7",81)

"BLD",9662,"KRN",9.8,"NM","B","DGPTFMO",16)

"BLD",9662,"KRN",9.8,"NM","B","DGPTFQWK",11)

"BLD",9662,"KRN",9.8,"NM","B","DGPTFTR",62)

"BLD",9662,"KRN",9.8,"NM","B","DGPTFTR3",87)

"BLD",9662,"KRN",9.8,"NM","B","DGPTFUT",12)

"BLD",9662,"KRN",9.8,"NM","B","DGPTFUT1",22)

"BLD",9662,"KRN",9.8,"NM","B","DGPTFVC1",51)

"BLD",9662,"KRN",9.8,"NM","B","DGPTFVC3",52)

"BLD",9662,"KRN",9.8,"NM","B","DGPTIC10",14)

"BLD",9662,"KRN",9.8,"NM","B","DGPTOD1",82)

"BLD",9662,"KRN",9.8,"NM","B","DGPTODCM",83)

"BLD",9662,"KRN",9.8,"NM","B","DGPTOLC2",19)

"BLD",9662,"KRN",9.8,"NM","B","DGPTR0",77)

"BLD",9662,"KRN",9.8,"NM","B","DGPTR2",78)

"BLD",9662,"KRN",9.8,"NM","B","DGPTR3",79)

"BLD",9662,"KRN",9.8,"NM","B","DGPTR4",80)

"BLD",9662,"KRN",9.8,"NM","B","DGPTRI0",70)

"BLD",9662,"KRN",9.8,"NM","B","DGPTRI1",71)

"BLD",9662,"KRN",9.8,"NM","B","DGPTRI2",72)

"BLD",9662,"KRN",9.8,"NM","B","DGPTRI3",23)

"BLD",9662,"KRN",9.8,"NM","B","DGPTRI4",73)

"BLD",9662,"KRN",9.8,"NM","B","DGPTRNU",60)

"BLD",9662,"KRN",9.8,"NM","B","DGPTRNU1",61)

"BLD",9662,"KRN",9.8,"NM","B","DGPTRPO",86)

"BLD",9662,"KRN",9.8,"NM","B","DGPTSCAN",76)

"BLD",9662,"KRN",9.8,"NM","B","DGPTSUDO",20)

"BLD",9662,"KRN",9.8,"NM","B","DGPTTS",67)

"BLD",9662,"KRN",9.8,"NM","B","DGPTTS1",68)

"BLD",9662,"KRN",9.8,"NM","B","DGPTTS2",69)

"BLD",9662,"KRN",19,0)
19
"BLD",9662,"KRN",19,"NM",0)
^9.68A^^
"BLD",9662,"KRN",19.1,0)
19.1
"BLD",9662,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",9662,"KRN",101,0)
101
"BLD",9662,"KRN",101,"NM",0)
^9.68A^^
"BLD",9662,"KRN",409.61,0)
409.61
"BLD",9662,"KRN",771,0)
771
"BLD",9662,"KRN",779.2,0)
779.2
"BLD",9662,"KRN",870,0)
870
"BLD",9662,"KRN",8989.51,0)
8989.51
"BLD",9662,"KRN",8989.52,0)
8989.52
"BLD",9662,"KRN",8994,0)
8994
"BLD",9662,"KRN",8994,"NM",0)
^9.68A^1^1
"BLD",9662,"KRN",8994,"NM",1,0)
DG PATIENT TREATMENT DATA^^0
"BLD",9662,"KRN",8994,"NM","B","DG PATIENT TREATMENT DATA",1)

"BLD",9662,"KRN","B",.4,.4)

"BLD",9662,"KRN","B",.401,.401)

"BLD",9662,"KRN","B",.402,.402)

"BLD",9662,"KRN","B",.403,.403)

"BLD",9662,"KRN","B",.5,.5)

"BLD",9662,"KRN","B",.84,.84)

"BLD",9662,"KRN","B",3.6,3.6)

"BLD",9662,"KRN","B",3.8,3.8)

"BLD",9662,"KRN","B",9.2,9.2)

"BLD",9662,"KRN","B",9.8,9.8)

"BLD",9662,"KRN","B",19,19)

"BLD",9662,"KRN","B",19.1,19.1)

"BLD",9662,"KRN","B",101,101)

"BLD",9662,"KRN","B",409.61,409.61)

"BLD",9662,"KRN","B",771,771)

"BLD",9662,"KRN","B",779.2,779.2)

"BLD",9662,"KRN","B",870,870)

"BLD",9662,"KRN","B",8989.51,8989.51)

"BLD",9662,"KRN","B",8989.52,8989.52)

"BLD",9662,"KRN","B",8994,8994)

"BLD",9662,"PRE")
DG884P
"BLD",9662,"QDEF")
^^^^^^^^^^YES
"BLD",9662,"QUES",0)
^9.62^^
"BLD",9662,"REQB",0)
^9.611^5^5
"BLD",9662,"REQB",1,0)
DG*5.3*850^2
"BLD",9662,"REQB",2,0)
DG*5.3*898^2
"BLD",9662,"REQB",3,0)
DG*5.3*862^2
"BLD",9662,"REQB",4,0)
DG*5.3*905^2
"BLD",9662,"REQB",5,0)
DG*5.3*867^2
"BLD",9662,"REQB","B","DG*5.3*850",1)

"BLD",9662,"REQB","B","DG*5.3*862",3)

"BLD",9662,"REQB","B","DG*5.3*867",5)

"BLD",9662,"REQB","B","DG*5.3*898",2)

"BLD",9662,"REQB","B","DG*5.3*905",4)

"DATA",45.64,1,0)
101^Pseudo indicator not blank or 'P'^2
"DATA",45.64,2,0)
102^Position 6-14 not numeric or position 5=blank, 6 contains 6,8 or 9.^2
"DATA",45.64,3,0)
103^Admission date not a valid date.^3
"DATA",45.64,4,0)
135^Source of Admission inconsistent with station type of station.^6
"DATA",45.64,5,0)
554^Spinal Cord Indicator inconsistent with diagnostic codes.^10
"DATA",45.64,6,0)
745^ASIH and ABO days from 501s greater than total length of stay.^11
"DATA",45.64,7,0)
450^This operation code is not allowed in the first operation field^9
"DATA",45.64,8,0)
532^Invalid Suicide Code^16
"DATA",45.64,9,0)
533^Invalid Substance Abuse Code^17
"DATA",45.64,10,0)
744^Invalid type of disposition through receiving station.^6
"DATA",45.64,11,0)
105^Last name either non alpha character or blank.^4
"DATA",45.64,12,0)
106^First/Second initial error, non alpha character or blank^5
"DATA",45.64,13,0)
107^Invalid source of admission.^6
"DATA",45.64,14,0)
108^Invalid station number (transferred from).^7
"DATA",45.64,15,0)
109^Invalid source of payment code.^8
"DATA",45.64,16,0)
110^Invalid POW indicator.^9
"DATA",45.64,17,0)
111^Invalid Marital Status code.^10
"DATA",45.64,18,0)
112^Invalid Sex code.^11
"DATA",45.64,19,0)
113^Invalid Date of Birth.^12
"DATA",45.64,20,0)
114^Invalid Period of Service code.^13
"DATA",45.64,21,0)
115^Invalid Agent Orange indicator.^14
"DATA",45.64,22,0)
116^Invalid Ionizing Radiation Exposure indicator.^15
"DATA",45.64,23,0)
117^Invalid place of residence code.^16
"DATA",45.64,24,0)
118^Invalid Zip Code.^17
"DATA",45.64,25,0)
119^Invalid Means Test Indicator^18
"DATA",45.64,26,0)
120^Invalid Income code (not numneric or blank).^19
"DATA",45.64,27,0)
130^Pseudo SSN inconsistent with DOB, Name and Initials.^2
"DATA",45.64,28,0)
131^POS inconsistent with Date of Admission.^13
"DATA",45.64,29,0)
132^POS inconsistent with Date of Birth.^13
"DATA",45.64,30,0)
133^POS inconsistent with Agent Orange.^13
"DATA",45.64,31,0)
134^POS inconsistent with Ionizing Radiation Indicator.^13
"DATA",45.64,32,0)
136^POS or POW or AGO or Ion/Rad or C&P inconsistent with Means Test.^13
"DATA",45.64,33,0)
140^Date of Admission must not be later than processing date.^3
"DATA",45.64,34,0)
143^Means Test inconsistent with Admission Date or Station type.^18
"DATA",45.64,35,0)
405^Invalid date of surgery.^4
"DATA",45.64,36,0)
406^Invalid surgical specilaty code.^5
"DATA",45.64,37,0)
407^Invalid Category of Chief Surgeon code.^6
"DATA",45.64,38,0)
408^Invalid Category of First Assistant code.^6
"DATA",45.64,39,0)
409^Invalid Anesthetic Technique code.^7
"DATA",45.64,40,0)
410^Invalid Source of payment code^8
"DATA",45.64,41,0)
411^Invalid Operative code #1^9
"DATA",45.64,42,0)
412^Invalid Operative code #2^9
"DATA",45.64,43,0)
413^Invalid Operative code #3^9
"DATA",45.64,45,0)
415^Invalid Operative code #4^9
"DATA",45.64,46,0)
416^Invalid Operative code #5^9
"DATA",45.64,47,0)
417^Invalid Transplant code^11
"DATA",45.64,48,0)
435^Inconsistency between Cheif Surgeon/First Asst/Anest Tesh and SOP.^6
"DATA",45.64,49,0)
437^Date of Surgery coded earlier than admission date.^4
"DATA",45.64,50,0)
439^Surgical dt/time is equal to Surgical dt/time in another <401>.^4
"DATA",45.64,51,0)
440^Date of surgery coded later than discharge date.^4
"DATA",45.64,52,0)
445^More than 10 <N401> transactions submitted.^1
"DATA",45.64,53,0)
451^Operation code inconsistent with sex code.^9
"DATA",45.64,54,0)
452^One or more operation code inconsistent with each other.^9
"DATA",45.64,55,0)
453^Operation code must have related code.^9
"DATA",45.64,56,0)
456^Incomplete set of Pacemaker Codes.^9
"DATA",45.64,57,0)
470^Transaction does not match 101 Transaction.^1
"DATA",45.64,58,0)
505^Invalid date of movement.^4
"DATA",45.64,59,0)
506^Invalid bed section code.^3
"DATA",45.64,60,0)
507^Invalid leave days.^7
"DATA",45.64,61,0)
508^Invalid pass days.^8
"DATA",45.64,62,0)
509^Invalid Spinal Cord Injury Indicator.^9
"DATA",45.64,63,0)
510^Invalid diagnostic code #1.^10
"DATA",45.64,64,0)
511^Invalid diagnostic code #2.^10
"DATA",45.64,65,0)
512^Invalid diagnostic code #3.^10
"DATA",45.64,66,0)
513^Invalid diagnostic code #4.^10
"DATA",45.64,67,0)
514^Invalid diagnostic code #5.^10
"DATA",45.64,68,0)
515^Invalid character in 7th position of any diagnostic code field.^10
"DATA",45.64,69,0)
530^Invalid Service-Connected treatment code.^20
"DATA",45.64,70,0)
531^Invalid Legionnaires disease code.^15
"DATA",45.64,71,0)
534^Invalid Psychiatry Axis IV code.^18
"DATA",45.64,72,0)
535^Invalid Psychiatry Axis V code.^19
"DATA",45.64,73,0)
537^Date of Movement earlier than Admission date.^4
"DATA",45.64,74,0)
539^N501 Transaction matches the date/time of a previous N501.^4
"DATA",45.64,75,0)
540^Date of Movement later than date of discharge.^4
"DATA",45.64,76,0)
543^Combined leave and pass days greater than total days on bed section.^7
"DATA",45.64,77,0)
550^First Diagnostic code not permitted as the first code.^10
"DATA",45.64,78,0)
551^Diagnostic code not consistent with sex.^10
"DATA",45.64,79,0)
552^Inconsistency between two diagnostic codes.^10
"DATA",45.64,80,0)
575^Invalid PHY LOC CDR code.^5
"DATA",45.64,81,0)
576^Invalid PHY CDE code.^13
"DATA",45.64,82,0)
705^Invalid Date of Discharge.^4
"DATA",45.64,83,0)
706^Invalid Bed Section code.^5
"DATA",45.64,84,0)
707^Invalid type of disposition code.^6
"DATA",45.64,85,0)
708^Invalid outpatient treatment code.^7
"DATA",45.64,86,0)
709^Invalid VA auspices code.^8
"DATA",45.64,87,0)
710^Invalid place of disposition code.^9
"DATA",45.64,88,0)
711^Invalid receiving station number.^10
"DATA",45.64,89,0)
712^Invalid ASIH days.^11
"DATA",45.64,90,0)
713^No Longer Used (Race; field #.06)^12
"DATA",45.64,91,0)
714^Invalid Compensation and Pension code.^13
"DATA",45.64,92,0)
715^Invalid Diagnostic code responsible for length of stay.^14
"DATA",45.64,93,0)
730^Invalid Percent of disability.^18
"DATA",45.64,94,0)
731^Invalid Legionnaires disease code.^19
"DATA",45.64,95,0)
732^Invalid Suicide code.^20
"DATA",45.64,96,0)
733^Invalid Substance abuse code.^21
"DATA",45.64,97,0)
734^Invalid Psychiatry Axis IV code.^22
"DATA",45.64,98,0)
735^Invalid Psychiatry Axis V code.^23
"DATA",45.64,99,0)
736^Category of Beneficiary on <101> inconsistent with C&P on <701>.^13
"DATA",45.64,100,0)
737^Date of Discharge earlier than Date of Admission.^3
"DATA",45.64,101,0)
750^Invalid DXLS.^14
"DATA",45.64,102,0)
751^Diagnostic code not consistent with sex.^14
"DATA",45.64,103,0)
753^C&P not consistent with Means Test Indicator on N101.^13
"DATA",45.64,104,0)
601^Invalid date of procedure.^4
"DATA",45.64,105,0)
602^Invalid bed section.^5
"DATA",45.64,106,0)
603^Invalid dialysis type code.^6
"DATA",45.64,107,0)
604^Invalid number of treatments.^7
"DATA",45.64,108,0)
605^Invalid procedure code #1.^8
"DATA",45.64,109,0)
606^Invalid procedure code #2.^8
"DATA",45.64,110,0)
607^Invalid procedure code #3.^8
"DATA",45.64,111,0)
608^Invalid procedure code #4.^8
"DATA",45.64,112,0)
609^Invalid procedure code #5.^8
"DATA",45.64,113,0)
637^Date of procedure coded earlier than discharge date.^4
"DATA",45.64,114,0)
639^Procedure date/time matches another <601>^4
"DATA",45.64,115,0)
640^Date of procedure coded earlier than discharge date.^4
"DATA",45.64,116,0)
651^Procedure code inconsistent with sex code.^8
"DATA",45.64,117,0)
652^One or more codes inconsistent with each other.^8
"DATA",45.64,118,0)
653^Procedure code must have a related code.^8
"DATA",45.64,119,0)
656^One of the unallowed pacemaker codes used.^8
"DATA",45.64,120,0)
657^Duplicate procedure codes within transaction.^8
"DATA",45.64,121,0)
690^Renal dialysis code may not be used for 1-day live discharges.^6
"DATA",45.64,122,0)
720^Invalid "summary diagnostic" code #1.^5
"DATA",45.64,123,0)
721^Invalid "summary diagnostic" code #2.^5
"DATA",45.64,124,0)
722^Invalid "summary diagnostic" code #3.^5
"DATA",45.64,125,0)
723^Invalid "summary diagnostic" code #4.^5
"DATA",45.64,126,0)
724^Invalid "summary diagnostic" code #5.^5
"DATA",45.64,128,0)
726^Invalid "summary diagnostic" code #6.^5
"DATA",45.64,129,0)
727^Invalid "summary diagnostic" code #7.^5
"DATA",45.64,130,0)
728^Invalid "summary diagnostic" code #8.^5
"DATA",45.64,131,0)
729^Invalid "summary diagnostic" code #9.^5
"DATA",45.64,132,0)
004^station number and suffix invalid
"DATA",45.64,133,0)
070^transaction does not match N101 transaction or Master Record
"DATA",45.64,134,0)
139^101 transaction equal to preceding 101 transaction or Master Record   
"DATA",45.64,135,0)
141^replacement date of admission is later than first date of surgery
"DATA",45.64,136,0)
142^replacement date of admission is later than first movement date
"DATA",45.64,137,0)
170^transaction does not match 101 trans. or Master Record (131 trans only
"DATA",45.64,138,0)
171^update without data in any field except control fields (131 trans only
"DATA",45.64,139,0)
441^surgical date in N402 transaction not equal date of one 401
"DATA",45.64,140,0)
455^a replacement code or a $ eliminated a required related code
"DATA",45.64,141,0)
457^duplicate surg codes or dupe of one in Master in different position
"DATA",45.64,142,0)
471^updte without data in any field except control fields (one field reqrd
"DATA",45.64,143,0)
472^updte 431/432 date of surgery does not match date of surgery in 401/02
"DATA",45.64,144,0)
546^trans. 500 deleted the discharge 501 segment without replacement 501 
"DATA",45.64,145,0)
553^diagnostic code used without a required related code
"DATA",45.64,146,0)
555^a replacement code or a $ eliminated a required related code
"DATA",45.64,147,0)
557^duplicate diag codes or dupe of one in Master in different position
"DATA",45.64,148,0)
570^transaction does not match 101 transaction or Master Record
"DATA",45.64,149,0)
571^updte without data in any field except control fields (one field reqrd
"DATA",45.64,150,0)
572^update date of movement does not match date of movement in record
"DATA",45.64,151,0)
573^combined leave and pass days greater than total elapsed days
"DATA",45.64,152,0)
645^more than 32 transactions submitted
"DATA",45.64,153,0)
655^a replacement code or a $ eliminated a required related code
"DATA",45.64,154,0)
670^transaction does not match N101 transaction or Master Record
"DATA",45.64,155,0)
716^duplication of a report of death. Type of disposition '6' or '7'
"DATA",45.64,156,0)
718^701 without an "X" in ONLY-DX must be accompanied by a 702
"DATA",45.64,157,0)
719^trans. accompanied by 701 with "X" in ONLY-DX or "summary diag" codes
"DATA",45.64,158,0)
739^discharge segment already in Master Record
"DATA",45.64,159,0)
740^date of discharge is later than processing date
"DATA",45.64,160,0)
741^date of discharge does not equal last date of transfer
"DATA",45.64,161,0)
742^date of discharge for fiscal year before earlier than current FY
"DATA",45.64,162,0)
743^replacement date of discharge is earlier than latest date of surgery
"DATA",45.64,163,0)
770^no matching 101 transaction or Master Record
"DATA",45.64,164,0)
771^updte without data in any field except control fields (one field reqrd
"DATA",45.64,165,0)
772^update with matching 101 transaction but without a matching 701/2/3
"DATA",45.64,166,0)
775^invalid PHY LOC CDR code
"DATA",45.64,167,0)
776^invalid PHY CDE code
"DATA",45.64,168,0)
999^six unacceptable edit conditions
"DATA",45.64,169,0)
125^Invalid Emergency Response Indicator.^24
"DATA",45.64,170,0)
152^Invalid MST indicator^20
"DATA",45.64,171,0)
154^Invalid Combat Veteran Date^22
"DATA",45.64,172,0)
155^Invalid Combat Veteran indicator^21
"DATA",45.64,173,0)
156^Invalid SHAD indicator^23
"DATA",45.64,174,0)
574^Invalid POA for ICD 2
"DATA",45.64,175,0)
577^Invalid POA for ICD 3
"DATA",45.64,176,0)
578^Invalid POA for ICD 4
"DATA",45.64,177,0)
579^Invalid POA for ICD 5
"DATA",45.64,178,0)
580^Invalid POA for ICD 6
"DATA",45.64,179,0)
581^Invalid POA for ICD 7
"DATA",45.64,180,0)
582^Invalid POA for ICD 8
"DATA",45.64,181,0)
583^Invalid POA for ICD 9
"DATA",45.64,182,0)
584^Invalid POA for ICD 10
"DATA",45.64,183,0)
585^Invalid POA for ICD 11
"DATA",45.64,184,0)
586^Invalid POA for ICD 12
"DATA",45.64,185,0)
587^Invalid POA for ICD 13
"DATA",45.64,186,0)
588^Invalid POA for ICD 14
"DATA",45.64,187,0)
589^Invalid POA for ICD 15
"DATA",45.64,188,0)
590^Invalid POA for ICD 16
"DATA",45.64,189,0)
569^Invalid POA for ICD 1
"DATA",45.64,190,0)
591^Invalid POA for ICD 17
"DATA",45.64,191,0)
592^Invalid POA for ICD 18
"DATA",45.64,192,0)
593^Invalid POA for ICD 19
"DATA",45.64,193,0)
594^Invalid POA for ICD 20
"DATA",45.64,194,0)
595^Invalid POA for ICD 21
"DATA",45.64,195,0)
596^Invalid POA for ICD 22
"DATA",45.64,196,0)
597^Invalid POA for ICD 23
"DATA",45.64,197,0)
598^Invalid POA for ICD 24
"DATA",45.64,198,0)
599^Invalid POA for ICD 25
"DATA",45.64,199,0)
746^Invalid treatment for service condition indicator
"DATA",45.64,200,0)
747^Invalid agent orange indicator
"DATA",45.64,201,0)
748^Invalid ionizing radiation indicator
"DATA",45.64,202,0)
749^Invalid southwest asia indicator
"DATA",45.64,203,0)
752^Invalid military sexual trauma indicator
"DATA",45.64,204,0)
754^Invalid head/neck cancer indicator
"DATA",45.64,205,0)
755^Invalid combat veteran indicator
"DATA",45.64,206,0)
758^Invalid race 1 indicator
"DATA",45.64,207,0)
759^Invalid race 2 indicator
"DATA",45.64,208,0)
760^Invalid race 3 indicator
"DATA",45.64,209,0)
761^Invalid race 4 indicator
"DATA",45.64,210,0)
762^Invalid race 5 indicator
"DATA",45.64,211,0)
763^Invalid race 6 indicator
"DATA",45.64,212,0)
756^Invalid SHAD indicator
"DATA",45.64,213,0)
757^Invalid POA for DXLS
"DATA",45.64,214,0)
501^Incorrect attending physician ssn
"DATA",45.64,215,0)
516^Invalid diagnostic code #6^10
"DATA",45.64,216,0)
517^Invalid diagnostic code #7^10
"DATA",45.64,217,0)
518^Invalid diagnostic code #8^10
"DATA",45.64,218,0)
519^Invalid diagnostic code #9^10
"DATA",45.64,219,0)
520^Invalid diagnostic code #10^10
"DATA",45.64,220,0)
521^Invalid diagnostic code #11^10
"DATA",45.64,221,0)
522^Invalid diagnostic code #12^10
"DATA",45.64,222,0)
523^Invalid diagnostic code #13^10
"DATA",45.64,223,0)
524^Invalid diagnostic code #14^10
"DATA",45.64,224,0)
525^Invalid diagnostic code #15^10
"DATA",45.64,225,0)
526^Invalid diagnostic code #16^10
"DATA",45.64,226,0)
527^Invalid diagnostic code #17^10
"DATA",45.64,227,0)
528^Invalid diagnostic code #18^10
"DATA",45.64,228,0)
529^Invalid diagnostic code #19^10
"DATA",45.64,229,0)
558^Invalid diagnostic code #20^10
"DATA",45.64,230,0)
559^Invalid diagnostic code #21^10
"DATA",45.64,231,0)
560^Invalid diagnostic code #22^10
"DATA",45.64,232,0)
561^Invalid diagnostic code #23^10
"DATA",45.64,233,0)
562^Invalid diagnostic code #24^10
"DATA",45.64,234,0)
563^Invalid diagnostic code #25^10
"DATA",45.64,235,0)
764^Invalid POA for principle diagnosis
"DATA",45.64,236,0)
765^Invalid POA for secondary diagnosis 1
"DATA",45.64,237,0)
766^Invalid POA for secondary diagnosis 2
"DATA",45.64,238,0)
767^Invalid POA for secondary diagnosis 3
"DATA",45.64,239,0)
768^Invalid POA for secondary diagnosis 4
"DATA",45.64,240,0)
769^Invalid POA for secondary diagnosis 5
"DATA",45.64,241,0)
777^Invalid POA for secondary diagnosis 6
"DATA",45.64,242,0)
778^Invalid POA for secondary diagnosis 7
"DATA",45.64,243,0)
779^Invalid POA for secondary diagnosis 8
"DATA",45.64,244,0)
780^Invalid POA for secondary diagnosis 9
"DATA",45.64,245,0)
781^Invalid POA for secondary diagnosis 10
"DATA",45.64,246,0)
782^Invalid POA for secondary diagnosis 11
"DATA",45.64,247,0)
783^Invalid POA for secondary diagnosis 12
"DATA",45.64,248,0)
784^Invalid POA for secondary diagnosis 13
"DATA",45.64,249,0)
785^Invalid POA for secondary diagnosis 14
"DATA",45.64,250,0)
786^Invalid POA for secondary diagnosis 15
"DATA",45.64,251,0)
787^Invalid POA for secondary diagnosis 16
"DATA",45.64,252,0)
788^Invalid POA for secondary diagnosis 17
"DATA",45.64,253,0)
789^Invalid POA for secondary diagnosis 18
"DATA",45.64,254,0)
790^Invalid POA for secondary diagnosis 19
"DATA",45.64,255,0)
791^Invalid POA for secondary diagnosis 20
"DATA",45.64,256,0)
792^Invalid POA for secondary diagnosis 21
"DATA",45.64,257,0)
793^Invalid POA for secondary diagnosis 22
"DATA",45.64,258,0)
794^Invalid POA for secondary diagnosis 23
"DATA",45.64,259,0)
795^Invalid POA for secondary diagnosis 24
"DATA",45.64,260,0)
796^Invalid POA for secondary diagnosis 25
"DATA",45.64,261,0)
797^Invalid "summary diagnostic" code #10^5
"DATA",45.64,262,0)
798^Invalid "summary diagnostic" code #11^5
"DATA",45.64,263,0)
799^Invalid "summary diagnostic" code #12^5
"DATA",45.64,264,0)
800^Invalid "summary diagnostic" code #13^5
"DATA",45.64,265,0)
801^Invalid "summary diagnostic" code #14^5
"DATA",45.64,266,0)
802^Invalid "summary diagnostic" code #15^5
"DATA",45.64,267,0)
803^Invalid "summary diagnostic" code #16^5
"DATA",45.64,268,0)
804^Invalid "summary diagnostic" code #17^5
"DATA",45.64,269,0)
805^Invalid "summary diagnostic" code #18^5
"DATA",45.64,270,0)
806^Invalid "summary diagnostic" code #19^5
"DATA",45.64,271,0)
807^Invalid "summary diagnostic" code #20^5
"DATA",45.64,272,0)
808^Invalid "summary diagnostic" code #21^5
"DATA",45.64,273,0)
809^Invalid "summary diagnostic" code #22^5
"DATA",45.64,274,0)
810^Invalid "summary diagnostic" code #23^5
"DATA",45.64,275,0)
811^Invalid "summary diagnostic" code #24^5
"DATA",45.64,276,0)
812^Invalid "summary diagnostic" code #25^5
"DATA",45.64,277,0)
137^Invalid value in position 65. Should be a space.
"DATA",45.64,278,0)
704^Invalid ethnic indicator
"DATA",45.64,279,0)
418^Invalid Operative code #6^9
"DATA",45.64,280,0)
419^Invalid Operative code #7^9
"DATA",45.64,281,0)
420^Invalid Operative code #8^9
"DATA",45.64,282,0)
421^Invalid Operative code #9^9
"DATA",45.64,283,0)
422^Invalid Operative code #10^9
"DATA",45.64,284,0)
423^Invalid Operative code #11^9
"DATA",45.64,285,0)
424^Invalid Operative code #12^9
"DATA",45.64,286,0)
425^Invalid Operative code #13^9
"DATA",45.64,287,0)
426^Invalid Operative code #14^9
"DATA",45.64,288,0)
427^Invalid Operative code #15^9
"DATA",45.64,289,0)
428^Invalid Operative code #16^9
"DATA",45.64,290,0)
429^Invalid Operative code #17^9
"DATA",45.64,291,0)
430^Invalid Operative code #18^9
"DATA",45.64,292,0)
431^Invalid Operative code #19^9
"DATA",45.64,293,0)
432^Invalid Operative code #20^9
"DATA",45.64,294,0)
433^Invalid Operative code #21^9
"DATA",45.64,295,0)
434^Invalid Operative code #22^9
"DATA",45.64,296,0)
446^Invalid Operative code #23^9
"DATA",45.64,297,0)
447^Invalid Operative code #24^9
"DATA",45.64,298,0)
448^Invalid Operative code #25^9
"DATA",45.64,299,0)
610^Invalid procedure code #6^8
"DATA",45.64,300,0)
611^Invalid procedure code #7^8
"DATA",45.64,301,0)
612^Invalid procedure code #8^8
"DATA",45.64,302,0)
613^Invalid procedure code #9^8
"DATA",45.64,303,0)
614^Invalid procedure code #10^8
"DATA",45.64,304,0)
615^Invalid procedure code #11^8
"DATA",45.64,305,0)
616^Invalid procedure code #12^8
"DATA",45.64,306,0)
617^Invalid procedure code #13^8
"DATA",45.64,307,0)
618^Invalid procedure code #14^8
"DATA",45.64,308,0)
619^Invalid procedure code #15^8
"DATA",45.64,309,0)
620^Invalid procedure code #16^8
"DATA",45.64,310,0)
621^Invalid procedure code #17^8
"DATA",45.64,311,0)
622^Invalid procedure code #18^8
"DATA",45.64,312,0)
623^Invalid procedure code #19^8
"DATA",45.64,313,0)
624^Invalid procedure code #20^8
"DATA",45.64,314,0)
625^Invalid procedure code #21^8
"DATA",45.64,315,0)
626^Invalid procedure code #22^8
"DATA",45.64,316,0)
627^Invalid procedure code #23^8
"DATA",45.64,317,0)
628^Invalid procedure code #24^8
"DATA",45.64,318,0)
629^Invalid procedure code #25^8
"FIA",45)
PTF
"FIA",45,0)
^DGPT(
"FIA",45,0,0)
45IP
"FIA",45,0,1)
y^n^p^^^^n^^n
"FIA",45,0,10)

"FIA",45,0,11)

"FIA",45,0,"RLRO")

"FIA",45,0,"VR")
5.3^DG
"FIA",45,45)
1
"FIA",45,45,79)

"FIA",45,45,79.16)

"FIA",45,45,79.17)

"FIA",45,45,79.18)

"FIA",45,45,79.19)

"FIA",45,45,79.201)

"FIA",45,45,79.21)

"FIA",45,45,79.22)

"FIA",45,45,79.23)

"FIA",45,45,79.24)

"FIA",45,45,79.241)

"FIA",45,45,79.242)

"FIA",45,45,79.243)

"FIA",45,45,79.244)

"FIA",45,45,79.245)

"FIA",45,45,79.246)

"FIA",45,45,79.247)

"FIA",45,45,79.248)

"FIA",45,45,79.249)

"FIA",45,45,79.2491)

"FIA",45,45,79.24911)

"FIA",45,45,79.24912)

"FIA",45,45,79.24913)

"FIA",45,45,79.24914)

"FIA",45,45,79.24915)

"FIA",45,45,82.01)

"FIA",45,45,82.02)

"FIA",45,45,82.03)

"FIA",45,45,82.04)

"FIA",45,45,82.05)

"FIA",45,45,82.06)

"FIA",45,45,82.07)

"FIA",45,45,82.08)

"FIA",45,45,82.09)

"FIA",45,45,82.1)

"FIA",45,45,82.11)

"FIA",45,45,82.12)

"FIA",45,45,82.13)

"FIA",45,45,82.14)

"FIA",45,45,82.15)

"FIA",45,45,82.16)

"FIA",45,45,82.17)

"FIA",45,45,82.18)

"FIA",45,45,82.19)

"FIA",45,45,82.2)

"FIA",45,45,82.21)

"FIA",45,45,82.22)

"FIA",45,45,82.23)

"FIA",45,45,82.24)

"FIA",45,45,82.25)

"FIA",45,45.01)
1
"FIA",45,45.01,8)

"FIA",45,45.01,9)

"FIA",45,45.01,10)

"FIA",45,45.01,11)

"FIA",45,45.01,12)

"FIA",45,45.01,13)

"FIA",45,45.01,14)

"FIA",45,45.01,15)

"FIA",45,45.01,16)

"FIA",45,45.01,17)

"FIA",45,45.01,18)

"FIA",45,45.01,19)

"FIA",45,45.01,20)

"FIA",45,45.01,21)

"FIA",45,45.01,22)

"FIA",45,45.01,23)

"FIA",45,45.01,24)

"FIA",45,45.01,25)

"FIA",45,45.01,26)

"FIA",45,45.01,27)

"FIA",45,45.01,28)

"FIA",45,45.01,29)

"FIA",45,45.01,30)

"FIA",45,45.01,31)

"FIA",45,45.01,32)

"FIA",45,45.02)
1
"FIA",45,45.02,5)

"FIA",45,45.02,6)

"FIA",45,45.02,7)

"FIA",45,45.02,8)

"FIA",45,45.02,9)

"FIA",45,45.02,11)

"FIA",45,45.02,12)

"FIA",45,45.02,13)

"FIA",45,45.02,14)

"FIA",45,45.02,15)

"FIA",45,45.02,81.01)

"FIA",45,45.02,81.02)

"FIA",45,45.02,81.03)

"FIA",45,45.02,81.04)

"FIA",45,45.02,81.05)

"FIA",45,45.02,81.06)

"FIA",45,45.02,81.07)

"FIA",45,45.02,81.08)

"FIA",45,45.02,81.09)

"FIA",45,45.02,81.1)

"FIA",45,45.02,81.11)

"FIA",45,45.02,81.12)

"FIA",45,45.02,81.13)

"FIA",45,45.02,81.14)

"FIA",45,45.02,81.15)

"FIA",45,45.02,82.01)

"FIA",45,45.02,82.02)

"FIA",45,45.02,82.03)

"FIA",45,45.02,82.04)

"FIA",45,45.02,82.05)

"FIA",45,45.02,82.06)

"FIA",45,45.02,82.07)

"FIA",45,45.02,82.08)

"FIA",45,45.02,82.09)

"FIA",45,45.02,82.1)

"FIA",45,45.02,82.11)

"FIA",45,45.02,82.12)

"FIA",45,45.02,82.13)

"FIA",45,45.02,82.14)

"FIA",45,45.02,82.15)

"FIA",45,45.02,82.16)

"FIA",45,45.02,82.17)

"FIA",45,45.02,82.18)

"FIA",45,45.02,82.19)

"FIA",45,45.02,82.2)

"FIA",45,45.02,82.21)

"FIA",45,45.02,82.22)

"FIA",45,45.02,82.23)

"FIA",45,45.02,82.24)

"FIA",45,45.02,82.25)

"FIA",45,45.05)
1
"FIA",45,45.05,4)

"FIA",45,45.05,5)

"FIA",45,45.05,6)

"FIA",45,45.05,7)

"FIA",45,45.05,8)

"FIA",45,45.05,9)

"FIA",45,45.05,10)

"FIA",45,45.05,11)

"FIA",45,45.05,12)

"FIA",45,45.05,13)

"FIA",45,45.05,14)

"FIA",45,45.05,15)

"FIA",45,45.05,16)

"FIA",45,45.05,17)

"FIA",45,45.05,18)

"FIA",45,45.05,19)

"FIA",45,45.05,20)

"FIA",45,45.05,21)

"FIA",45,45.05,22)

"FIA",45,45.05,23)

"FIA",45,45.05,24)

"FIA",45,45.05,25)

"FIA",45,45.05,26)

"FIA",45,45.05,27)

"FIA",45,45.05,28)

"FIA",45.64)
PTF AUSTIN ERROR CODES
"FIA",45.64,0)
^DGP(45.64,
"FIA",45.64,0,0)
45.64
"FIA",45.64,0,1)
y^n^f^^n^^y^o^n
"FIA",45.64,0,10)

"FIA",45.64,0,11)

"FIA",45.64,0,"RLRO")

"FIA",45.64,0,"VR")
5.3^DG
"FIA",45.64,45.64)
0
"INI")
PRE^DG884P
"INIT")
POST^DG884P
"IX",45,45,"ACRDDXLS",0)
45^ACRDDXLS^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDDXLS",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDDXLS",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDDXLS",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDDXLS",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDDXLS",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDDXLS",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDDXLS",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDDXLS",.1,7,0)
respectively.
"IX",45,45,"ACRDDXLS",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDDXLS",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDDXLS",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDDXLS",.1,11,0)
NAME is the name of the field where the code is stored. An example is DXLS.
"IX",45,45,"ACRDDXLS",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDDXLS",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDDXLS",1)
D SPTFDD^DGPTDDCR(.X,.DA,"DXLS")
"IX",45,45,"ACRDDXLS",2)
D KPTFDD^DGPTDDCR(.X,.DA,"DXLS")
"IX",45,45,"ACRDDXLS",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDDXLS",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDDXLS",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDDXLS",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDDXLS",11.1,4,0)
4^F^45^79^^4^F
"IX",45,45,"ACRDDXLS",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDM1",0)
45^ACRDM1^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM1",.1,0)
^^12^12^3140701
"IX",45,45,"ACRDM1",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM1",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM1",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM1",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM1",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM1",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM1",.1,7,0)
respectively.
"IX",45,45,"ACRDM1",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDM1",.1,9,0)
DATE is the movement date.
"IX",45,45,"ACRDM1",.1,10,0)
NAME is the name of the field where the code is stored. An example is M ICD1, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM1",.1,11,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM1",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDM1",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD1")
"IX",45,45,"ACRDM1",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD1")
"IX",45,45,"ACRDM1",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM1",11.1,1,0)
1^F^45.02^10
"IX",45,45,"ACRDM1",11.1,2,0)
2^F^45.02^5^^1^F
"IX",45,45,"ACRDM10",0)
45^ACRDM10^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM10",.1,0)
^^12^12^3140701
"IX",45,45,"ACRDM10",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM10",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM10",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM10",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM10",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM10",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM10",.1,7,0)
respectively.
"IX",45,45,"ACRDM10",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDM10",.1,9,0)
DATE is the movement date.
"IX",45,45,"ACRDM10",.1,10,0)
NAME is the name of the field where the code is stored. An example is M ICD10, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM10",.1,11,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM10",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDM10",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD10")
"IX",45,45,"ACRDM10",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD10")
"IX",45,45,"ACRDM10",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM10",11.1,1,0)
1^F^45.02^10
"IX",45,45,"ACRDM10",11.1,2,0)
2^F^45.02^15^^1^F
"IX",45,45,"ACRDM11",0)
45^ACRDM11^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM11",.1,0)
^^15^15^3141106^
"IX",45,45,"ACRDM11",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM11",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM11",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM11",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM11",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM11",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM11",.1,7,0)
respectively.
"IX",45,45,"ACRDM11",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDM11",.1,9,0)
system.
"IX",45,45,"ACRDM11",.1,10,0)
DATE is the movement date.
"IX",45,45,"ACRDM11",.1,11,0)
NAME is the name of the field where the code is stored. An example is M 
"IX",45,45,"ACRDM11",.1,12,0)
ICD11, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM11",.1,13,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM11",.1,14,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDM11",.1,15,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDM11",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD11")
"IX",45,45,"ACRDM11",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD11")
"IX",45,45,"ACRDM11",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM11",11.1,1,0)
1^F^45.02^10^^^
"IX",45,45,"ACRDM11",11.1,2,0)
2^F^45.02^81.01^^1^F
"IX",45,45,"ACRDM12",0)
45^ACRDM12^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM12",.1,0)
^^15^15^3141106^
"IX",45,45,"ACRDM12",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM12",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM12",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM12",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM12",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM12",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM12",.1,7,0)
respectively.
"IX",45,45,"ACRDM12",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDM12",.1,9,0)
system.
"IX",45,45,"ACRDM12",.1,10,0)
DATE is the movement date.
"IX",45,45,"ACRDM12",.1,11,0)
NAME is the name of the field where the code is stored. An example is M 
"IX",45,45,"ACRDM12",.1,12,0)
ICD12, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM12",.1,13,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM12",.1,14,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDM12",.1,15,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDM12",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD12")
"IX",45,45,"ACRDM12",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD12")
"IX",45,45,"ACRDM12",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM12",11.1,1,0)
1^F^45.02^10^^^
"IX",45,45,"ACRDM12",11.1,2,0)
2^F^45.02^81.02^^1^F
"IX",45,45,"ACRDM13",0)
45^ACRDM13^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM13",.1,0)
^^15^15^3141106^
"IX",45,45,"ACRDM13",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM13",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM13",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM13",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM13",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM13",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM13",.1,7,0)
respectively.
"IX",45,45,"ACRDM13",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDM13",.1,9,0)
system.
"IX",45,45,"ACRDM13",.1,10,0)
DATE is the movement date.
"IX",45,45,"ACRDM13",.1,11,0)
NAME is the name of the field where the code is stored. An example is M 
"IX",45,45,"ACRDM13",.1,12,0)
ICD13, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM13",.1,13,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM13",.1,14,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDM13",.1,15,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDM13",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD13")
"IX",45,45,"ACRDM13",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD13")
"IX",45,45,"ACRDM13",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM13",11.1,1,0)
1^F^45.02^10^^^
"IX",45,45,"ACRDM13",11.1,2,0)
2^F^45.02^81.03^^1^F
"IX",45,45,"ACRDM14",0)
45^ACRDM14^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM14",.1,0)
^^15^15^3141106^
"IX",45,45,"ACRDM14",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM14",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM14",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM14",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM14",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM14",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM14",.1,7,0)
respectively.
"IX",45,45,"ACRDM14",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDM14",.1,9,0)
system.
"IX",45,45,"ACRDM14",.1,10,0)
DATE is the movement date.
"IX",45,45,"ACRDM14",.1,11,0)
NAME is the name of the field where the code is stored. An example is M 
"IX",45,45,"ACRDM14",.1,12,0)
ICD14, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM14",.1,13,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM14",.1,14,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDM14",.1,15,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDM14",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD14")
"IX",45,45,"ACRDM14",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD14")
"IX",45,45,"ACRDM14",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM14",11.1,1,0)
1^F^45.02^10^^^
"IX",45,45,"ACRDM14",11.1,2,0)
2^F^45.02^81.04^^1^F
"IX",45,45,"ACRDM15",0)
45^ACRDM15^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM15",.1,0)
^^15^15^3141106^
"IX",45,45,"ACRDM15",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM15",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM15",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM15",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM15",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM15",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM15",.1,7,0)
respectively.
"IX",45,45,"ACRDM15",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDM15",.1,9,0)
system.
"IX",45,45,"ACRDM15",.1,10,0)
DATE is the movement date.
"IX",45,45,"ACRDM15",.1,11,0)
NAME is the name of the field where the code is stored. An example is M 
"IX",45,45,"ACRDM15",.1,12,0)
ICD15, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM15",.1,13,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM15",.1,14,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDM15",.1,15,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDM15",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD15")
"IX",45,45,"ACRDM15",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD15")
"IX",45,45,"ACRDM15",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM15",11.1,1,0)
1^F^45.02^10^^^
"IX",45,45,"ACRDM15",11.1,2,0)
2^F^45.02^81.05^^1^F
"IX",45,45,"ACRDM16",0)
45^ACRDM16^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM16",.1,0)
^^15^15^3141203^
"IX",45,45,"ACRDM16",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM16",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM16",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM16",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM16",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM16",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM16",.1,7,0)
respectively.
"IX",45,45,"ACRDM16",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDM16",.1,9,0)
system.
"IX",45,45,"ACRDM16",.1,10,0)
DATE is the movement date.
"IX",45,45,"ACRDM16",.1,11,0)
NAME is the name of the field where the code is stored. An example is M 
"IX",45,45,"ACRDM16",.1,12,0)
ICD4, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM16",.1,13,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM16",.1,14,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDM16",.1,15,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDM16",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD16")
"IX",45,45,"ACRDM16",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD16")
"IX",45,45,"ACRDM16",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM16",11.1,1,0)
1^F^45.02^10^^^
"IX",45,45,"ACRDM16",11.1,1,3)

"IX",45,45,"ACRDM16",11.1,2,0)
2^F^45.02^81.06^^1^F
"IX",45,45,"ACRDM16",11.1,2,3)

"IX",45,45,"ACRDM17",0)
45^ACRDM17^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM17",.1,0)
^^15^15^3141107^
"IX",45,45,"ACRDM17",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM17",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM17",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM17",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM17",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM17",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM17",.1,7,0)
respectively.
"IX",45,45,"ACRDM17",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDM17",.1,9,0)
system.
"IX",45,45,"ACRDM17",.1,10,0)
DATE is the movement date.
"IX",45,45,"ACRDM17",.1,11,0)
NAME is the name of the field where the code is stored. An example is M 
"IX",45,45,"ACRDM17",.1,12,0)
ICD17, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM17",.1,13,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM17",.1,14,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDM17",.1,15,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDM17",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD17")
"IX",45,45,"ACRDM17",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD17")
"IX",45,45,"ACRDM17",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM17",11.1,1,0)
1^F^45.02^10^^^
"IX",45,45,"ACRDM17",11.1,2,0)
2^F^45.02^81.07^^1^F
"IX",45,45,"ACRDM18",0)
45^ACRDM18^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM18",.1,0)
^^15^15^3141107^
"IX",45,45,"ACRDM18",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM18",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM18",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM18",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM18",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM18",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM18",.1,7,0)
respectively.
"IX",45,45,"ACRDM18",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDM18",.1,9,0)
system.
"IX",45,45,"ACRDM18",.1,10,0)
DATE is the movement date.
"IX",45,45,"ACRDM18",.1,11,0)
NAME is the name of the field where the code is stored. An example is M 
"IX",45,45,"ACRDM18",.1,12,0)
ICD18, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM18",.1,13,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM18",.1,14,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDM18",.1,15,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDM18",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD18")
"IX",45,45,"ACRDM18",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD18")
"IX",45,45,"ACRDM18",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM18",11.1,1,0)
1^F^45.02^10^^^
"IX",45,45,"ACRDM18",11.1,2,0)
2^F^45.02^81.08^^1^F
"IX",45,45,"ACRDM19",0)
45^ACRDM19^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM19",.1,0)
^^15^15^3141107^
"IX",45,45,"ACRDM19",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM19",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM19",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM19",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM19",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM19",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM19",.1,7,0)
respectively.
"IX",45,45,"ACRDM19",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDM19",.1,9,0)
system.
"IX",45,45,"ACRDM19",.1,10,0)
DATE is the movement date.
"IX",45,45,"ACRDM19",.1,11,0)
NAME is the name of the field where the code is stored. An example is M 
"IX",45,45,"ACRDM19",.1,12,0)
ICD19, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM19",.1,13,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM19",.1,14,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDM19",.1,15,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDM19",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD19")
"IX",45,45,"ACRDM19",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD19")
"IX",45,45,"ACRDM19",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM19",11.1,1,0)
1^F^45.02^10^^^
"IX",45,45,"ACRDM19",11.1,2,0)
2^F^45.02^81.09^^1^F
"IX",45,45,"ACRDM2",0)
45^ACRDM2^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM2",.1,0)
^^12^12^3140701
"IX",45,45,"ACRDM2",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM2",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM2",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM2",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM2",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM2",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM2",.1,7,0)
respectively.
"IX",45,45,"ACRDM2",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDM2",.1,9,0)
DATE is the movement date.
"IX",45,45,"ACRDM2",.1,10,0)
NAME is the name of the field where the code is stored. An example is M ICD2, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM2",.1,11,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM2",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDM2",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD2")
"IX",45,45,"ACRDM2",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD2")
"IX",45,45,"ACRDM2",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM2",11.1,1,0)
1^F^45.02^10^^^F
"IX",45,45,"ACRDM2",11.1,2,0)
2^F^45.02^6^^1^F
"IX",45,45,"ACRDM20",0)
45^ACRDM20^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM20",.1,0)
^^15^15^3141107^
"IX",45,45,"ACRDM20",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM20",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM20",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM20",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM20",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM20",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM20",.1,7,0)
respectively.
"IX",45,45,"ACRDM20",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDM20",.1,9,0)
system.
"IX",45,45,"ACRDM20",.1,10,0)
DATE is the movement date.
"IX",45,45,"ACRDM20",.1,11,0)
NAME is the name of the field where the code is stored. An example is M 
"IX",45,45,"ACRDM20",.1,12,0)
ICD20, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM20",.1,13,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM20",.1,14,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDM20",.1,15,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDM20",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD20")
"IX",45,45,"ACRDM20",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD20")
"IX",45,45,"ACRDM20",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM20",11.1,1,0)
1^F^45.02^10^^^
"IX",45,45,"ACRDM20",11.1,2,0)
2^F^45.02^81.1^^1^F
"IX",45,45,"ACRDM21",0)
45^ACRDM21^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM21",.1,0)
^^15^15^3141107^
"IX",45,45,"ACRDM21",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM21",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM21",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM21",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM21",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM21",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM21",.1,7,0)
respectively.
"IX",45,45,"ACRDM21",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDM21",.1,9,0)
system.
"IX",45,45,"ACRDM21",.1,10,0)
DATE is the movement date.
"IX",45,45,"ACRDM21",.1,11,0)
NAME is the name of the field where the code is stored. An example is M 
"IX",45,45,"ACRDM21",.1,12,0)
ICD21, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM21",.1,13,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM21",.1,14,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDM21",.1,15,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDM21",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD21")
"IX",45,45,"ACRDM21",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD21")
"IX",45,45,"ACRDM21",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM21",11.1,1,0)
1^F^45.02^10^^^
"IX",45,45,"ACRDM21",11.1,2,0)
2^F^45.02^81.11^^1^F
"IX",45,45,"ACRDM22",0)
45^ACRDM22^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM22",.1,0)
^^15^15^3141107^
"IX",45,45,"ACRDM22",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM22",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM22",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM22",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM22",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM22",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM22",.1,7,0)
respectively.
"IX",45,45,"ACRDM22",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDM22",.1,9,0)
system.
"IX",45,45,"ACRDM22",.1,10,0)
DATE is the movement date.
"IX",45,45,"ACRDM22",.1,11,0)
NAME is the name of the field where the code is stored. An example is M 
"IX",45,45,"ACRDM22",.1,12,0)
ICD22, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM22",.1,13,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM22",.1,14,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDM22",.1,15,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDM22",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD22")
"IX",45,45,"ACRDM22",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD22")
"IX",45,45,"ACRDM22",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM22",11.1,1,0)
1^F^45.02^10^^^
"IX",45,45,"ACRDM22",11.1,2,0)
2^F^45.02^81.12^^1^F
"IX",45,45,"ACRDM23",0)
45^ACRDM23^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM23",.1,0)
^^15^15^3141107^
"IX",45,45,"ACRDM23",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM23",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM23",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM23",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM23",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM23",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM23",.1,7,0)
respectively.
"IX",45,45,"ACRDM23",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDM23",.1,9,0)
system.
"IX",45,45,"ACRDM23",.1,10,0)
DATE is the movement date.
"IX",45,45,"ACRDM23",.1,11,0)
NAME is the name of the field where the code is stored. An example is M 
"IX",45,45,"ACRDM23",.1,12,0)
ICD23, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM23",.1,13,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM23",.1,14,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDM23",.1,15,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDM23",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD23")
"IX",45,45,"ACRDM23",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD23")
"IX",45,45,"ACRDM23",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM23",11.1,1,0)
1^F^45.02^10^^^
"IX",45,45,"ACRDM23",11.1,2,0)
2^F^45.02^81.13^^1^F
"IX",45,45,"ACRDM24",0)
45^ACRDM24^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM24",.1,0)
^^15^15^3141107^
"IX",45,45,"ACRDM24",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM24",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM24",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM24",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM24",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM24",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM24",.1,7,0)
respectively.
"IX",45,45,"ACRDM24",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDM24",.1,9,0)
system.
"IX",45,45,"ACRDM24",.1,10,0)
DATE is the movement date.
"IX",45,45,"ACRDM24",.1,11,0)
NAME is the name of the field where the code is stored. An example is M 
"IX",45,45,"ACRDM24",.1,12,0)
ICD24, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM24",.1,13,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM24",.1,14,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDM24",.1,15,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDM24",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD24")
"IX",45,45,"ACRDM24",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD24")
"IX",45,45,"ACRDM24",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM24",11.1,1,0)
1^F^45.02^10^^^
"IX",45,45,"ACRDM24",11.1,2,0)
2^F^45.02^81.14^^1^F
"IX",45,45,"ACRDM25",0)
45^ACRDM25^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM25",.1,0)
^^15^15^3141107^
"IX",45,45,"ACRDM25",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM25",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM25",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM25",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM25",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM25",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM25",.1,7,0)
respectively.
"IX",45,45,"ACRDM25",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDM25",.1,9,0)
system.
"IX",45,45,"ACRDM25",.1,10,0)
DATE is the movement date.
"IX",45,45,"ACRDM25",.1,11,0)
NAME is the name of the field where the code is stored. An example is M 
"IX",45,45,"ACRDM25",.1,12,0)
ICD25, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM25",.1,13,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM25",.1,14,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDM25",.1,15,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDM25",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD25")
"IX",45,45,"ACRDM25",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD25")
"IX",45,45,"ACRDM25",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM25",11.1,1,0)
1^F^45.02^10^^^
"IX",45,45,"ACRDM25",11.1,2,0)
2^F^45.02^81.15^^1^F
"IX",45,45,"ACRDM3",0)
45^ACRDM3^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM3",.1,0)
^^12^12^3140701
"IX",45,45,"ACRDM3",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM3",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM3",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM3",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM3",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM3",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM3",.1,7,0)
respectively.
"IX",45,45,"ACRDM3",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDM3",.1,9,0)
DATE is the movement date.
"IX",45,45,"ACRDM3",.1,10,0)
NAME is the name of the field where the code is stored. An example is M ICD3, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM3",.1,11,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM3",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDM3",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD3")
"IX",45,45,"ACRDM3",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD3")
"IX",45,45,"ACRDM3",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM3",11.1,1,0)
1^F^45.02^10
"IX",45,45,"ACRDM3",11.1,2,0)
2^F^45.02^7^^1^F
"IX",45,45,"ACRDM4",0)
45^ACRDM4^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM4",.1,0)
^^12^12^3140701
"IX",45,45,"ACRDM4",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM4",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM4",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM4",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM4",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM4",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM4",.1,7,0)
respectively.
"IX",45,45,"ACRDM4",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDM4",.1,9,0)
DATE is the movement date.
"IX",45,45,"ACRDM4",.1,10,0)
NAME is the name of the field where the code is stored. An example is M ICD4, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM4",.1,11,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM4",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDM4",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD4")
"IX",45,45,"ACRDM4",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD4")
"IX",45,45,"ACRDM4",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM4",11.1,1,0)
1^F^45.02^10
"IX",45,45,"ACRDM4",11.1,2,0)
2^F^45.02^8^^1^F
"IX",45,45,"ACRDM5",0)
45^ACRDM5^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM5",.1,0)
^^12^12^3140701
"IX",45,45,"ACRDM5",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM5",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM5",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM5",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM5",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM5",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM5",.1,7,0)
respectively.
"IX",45,45,"ACRDM5",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDM5",.1,9,0)
DATE is the movement date.
"IX",45,45,"ACRDM5",.1,10,0)
NAME is the name of the field where the code is stored. An example is M ICD5, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM5",.1,11,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM5",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDM5",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD5")
"IX",45,45,"ACRDM5",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD5")
"IX",45,45,"ACRDM5",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM5",11.1,1,0)
1^F^45.02^10
"IX",45,45,"ACRDM5",11.1,2,0)
2^F^45.02^9^^1^F
"IX",45,45,"ACRDM6",0)
45^ACRDM6^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM6",.1,0)
^^12^12^3140701
"IX",45,45,"ACRDM6",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM6",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM6",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM6",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM6",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM6",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM6",.1,7,0)
respectively.
"IX",45,45,"ACRDM6",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDM6",.1,9,0)
DATE is the movement date.
"IX",45,45,"ACRDM6",.1,10,0)
NAME is the name of the field where the code is stored. An example is M ICD6, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM6",.1,11,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM6",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDM6",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD6")
"IX",45,45,"ACRDM6",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD6")
"IX",45,45,"ACRDM6",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM6",11.1,1,0)
1^F^45.02^10
"IX",45,45,"ACRDM6",11.1,2,0)
2^F^45.02^11^^1^F
"IX",45,45,"ACRDM7",0)
45^ACRDM7^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM7",.1,0)
^^12^12^3140701
"IX",45,45,"ACRDM7",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM7",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM7",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM7",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM7",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM7",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM7",.1,7,0)
respectively.
"IX",45,45,"ACRDM7",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDM7",.1,9,0)
DATE is the movement date.
"IX",45,45,"ACRDM7",.1,10,0)
NAME is the name of the field where the code is stored. An example is M ICD7, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM7",.1,11,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM7",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDM7",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD7")
"IX",45,45,"ACRDM7",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD7")
"IX",45,45,"ACRDM7",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM7",11.1,1,0)
1^F^45.02^10
"IX",45,45,"ACRDM7",11.1,2,0)
2^F^45.02^12^^1^F
"IX",45,45,"ACRDM8",0)
45^ACRDM8^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM8",.1,0)
^^12^12^3140701
"IX",45,45,"ACRDM8",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM8",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM8",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM8",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM8",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM8",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM8",.1,7,0)
respectively.
"IX",45,45,"ACRDM8",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDM8",.1,9,0)
DATE is the movement date.
"IX",45,45,"ACRDM8",.1,10,0)
NAME is the name of the field where the code is stored. An example is M ICD8, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM8",.1,11,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM8",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDM8",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD8")
"IX",45,45,"ACRDM8",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD8")
"IX",45,45,"ACRDM8",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM8",11.1,1,0)
1^F^45.02^10
"IX",45,45,"ACRDM8",11.1,2,0)
2^F^45.02^13^^1^F
"IX",45,45,"ACRDM9",0)
45^ACRDM9^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM9",.1,0)
^^12^12^3140701
"IX",45,45,"ACRDM9",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM9",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM9",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM9",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM9",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM9",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM9",.1,7,0)
respectively.
"IX",45,45,"ACRDM9",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDM9",.1,9,0)
DATE is the movement date.
"IX",45,45,"ACRDM9",.1,10,0)
NAME is the name of the field where the code is stored. An example is M ICD9, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM9",.1,11,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM9",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDM9",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD9")
"IX",45,45,"ACRDM9",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD9")
"IX",45,45,"ACRDM9",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM9",11.1,1,0)
1^F^45.02^10
"IX",45,45,"ACRDM9",11.1,2,0)
2^F^45.02^14^^1^F
"IX",45,45,"ACRDSD1",0)
45^ACRDSD1^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD1",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD1",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD1",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD1",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD1",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD1",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD1",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD1",.1,7,0)
respectively.
"IX",45,45,"ACRDSD1",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD1",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD1",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD1",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD1, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD1",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD1",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD1",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD1")
"IX",45,45,"ACRDSD1",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD1")
"IX",45,45,"ACRDSD1",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD1",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD1",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD1",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD1",11.1,4,0)
4^F^45^79.16^^4^F
"IX",45,45,"ACRDSD1",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDSD10",0)
45^ACRDSD10^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD10",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD10",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD10",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD10",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD10",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD10",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD10",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD10",.1,7,0)
respectively.
"IX",45,45,"ACRDSD10",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD10",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD10",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD10",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD10, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD10",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD10",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD10",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD10")
"IX",45,45,"ACRDSD10",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD10")
"IX",45,45,"ACRDSD10",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD10",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD10",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD10",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD10",11.1,4,0)
4^F^45^79.241^^4^F
"IX",45,45,"ACRDSD10",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDSD11",0)
45^ACRDSD11^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD11",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD11",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD11",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD11",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD11",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD11",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD11",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD11",.1,7,0)
respectively.
"IX",45,45,"ACRDSD11",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD11",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD11",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD11",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD11, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD11",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD11",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD11",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD11")
"IX",45,45,"ACRDSD11",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD11")
"IX",45,45,"ACRDSD11",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD11",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD11",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD11",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD11",11.1,4,0)
4^F^45^79.242^^4^F
"IX",45,45,"ACRDSD11",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDSD12",0)
45^ACRDSD12^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD12",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD12",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD12",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD12",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD12",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD12",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD12",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD12",.1,7,0)
respectively.
"IX",45,45,"ACRDSD12",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD12",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD12",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD12",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD12, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD12",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD12",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD12",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD12")
"IX",45,45,"ACRDSD12",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD12")
"IX",45,45,"ACRDSD12",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD12",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD12",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD12",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD12",11.1,4,0)
4^F^45^79.243^^4^F
"IX",45,45,"ACRDSD12",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDSD13",0)
45^ACRDSD13^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD13",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD13",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD13",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD13",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD13",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD13",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD13",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD13",.1,7,0)
respectively.
"IX",45,45,"ACRDSD13",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD13",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD13",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD13",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD13, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD13",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD13",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD13",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD13")
"IX",45,45,"ACRDSD13",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD13")
"IX",45,45,"ACRDSD13",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD13",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD13",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD13",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD13",11.1,4,0)
4^F^45^79.244^^4^F
"IX",45,45,"ACRDSD13",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDSD14",0)
45^ACRDSD14^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD14",.1,0)
^^16^16^3140620^
"IX",45,45,"ACRDSD14",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD14",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD14",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD14",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD14",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD14",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD14",.1,7,0)
respectively.
"IX",45,45,"ACRDSD14",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDSD14",.1,9,0)
system.
"IX",45,45,"ACRDSD14",.1,10,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD14",.1,11,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD14",.1,12,0)
NAME is the name of the field where the code is stored. An example is D 
"IX",45,45,"ACRDSD14",.1,13,0)
SD14, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD14",.1,14,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD14",.1,15,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDSD14",.1,16,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDSD14",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD14")
"IX",45,45,"ACRDSD14",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD14")
"IX",45,45,"ACRDSD14",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD14",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD14",11.1,1,3)

"IX",45,45,"ACRDSD14",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD14",11.1,2,3)

"IX",45,45,"ACRDSD14",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD14",11.1,3,3)

"IX",45,45,"ACRDSD14",11.1,4,0)
4^F^45^79.245^^4^F
"IX",45,45,"ACRDSD14",11.1,4,3)

"IX",45,45,"ACRDSD14",11.1,5,0)
5^F^45^70^^^F
"IX",45,45,"ACRDSD14",11.1,5,3)

"IX",45,45,"ACRDSD15",0)
45^ACRDSD15^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD15",.1,0)
^^16^16^3140620^
"IX",45,45,"ACRDSD15",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD15",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD15",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD15",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD15",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD15",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD15",.1,7,0)
respectively.
"IX",45,45,"ACRDSD15",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDSD15",.1,9,0)
system.
"IX",45,45,"ACRDSD15",.1,10,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD15",.1,11,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD15",.1,12,0)
NAME is the name of the field where the code is stored. An example is D 
"IX",45,45,"ACRDSD15",.1,13,0)
SD15, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD15",.1,14,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD15",.1,15,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDSD15",.1,16,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDSD15",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD15")
"IX",45,45,"ACRDSD15",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD15")
"IX",45,45,"ACRDSD15",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD15",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD15",11.1,1,3)

"IX",45,45,"ACRDSD15",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD15",11.1,2,3)

"IX",45,45,"ACRDSD15",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD15",11.1,3,3)

"IX",45,45,"ACRDSD15",11.1,4,0)
4^F^45^79.246^^4^F
"IX",45,45,"ACRDSD15",11.1,4,3)

"IX",45,45,"ACRDSD15",11.1,5,0)
5^F^45^70^^^F
"IX",45,45,"ACRDSD15",11.1,5,3)

"IX",45,45,"ACRDSD16",0)
45^ACRDSD16^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD16",.1,0)
^^16^16^3140620^
"IX",45,45,"ACRDSD16",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD16",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD16",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD16",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD16",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD16",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD16",.1,7,0)
respectively.
"IX",45,45,"ACRDSD16",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDSD16",.1,9,0)
system.
"IX",45,45,"ACRDSD16",.1,10,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD16",.1,11,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD16",.1,12,0)
NAME is the name of the field where the code is stored. An example is D 
"IX",45,45,"ACRDSD16",.1,13,0)
SD16, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD16",.1,14,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD16",.1,15,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDSD16",.1,16,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDSD16",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD16")
"IX",45,45,"ACRDSD16",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD16")
"IX",45,45,"ACRDSD16",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD16",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD16",11.1,1,3)

"IX",45,45,"ACRDSD16",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD16",11.1,2,3)

"IX",45,45,"ACRDSD16",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD16",11.1,3,3)

"IX",45,45,"ACRDSD16",11.1,4,0)
4^F^45^79.247^^4^F
"IX",45,45,"ACRDSD16",11.1,4,3)

"IX",45,45,"ACRDSD16",11.1,5,0)
5^F^45^70^^^F
"IX",45,45,"ACRDSD16",11.1,5,3)

"IX",45,45,"ACRDSD17",0)
45^ACRDSD17^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD17",.1,0)
^^16^16^3140620^
"IX",45,45,"ACRDSD17",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD17",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD17",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD17",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD17",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD17",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD17",.1,7,0)
respectively.
"IX",45,45,"ACRDSD17",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDSD17",.1,9,0)
system.
"IX",45,45,"ACRDSD17",.1,10,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD17",.1,11,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD17",.1,12,0)
NAME is the name of the field where the code is stored. An example is D 
"IX",45,45,"ACRDSD17",.1,13,0)
SD17, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD17",.1,14,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD17",.1,15,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDSD17",.1,16,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDSD17",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD17")
"IX",45,45,"ACRDSD17",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD17")
"IX",45,45,"ACRDSD17",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD17",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD17",11.1,1,3)

"IX",45,45,"ACRDSD17",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD17",11.1,2,3)

"IX",45,45,"ACRDSD17",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD17",11.1,3,3)

"IX",45,45,"ACRDSD17",11.1,4,0)
4^F^45^79.248^^4^F
"IX",45,45,"ACRDSD17",11.1,4,3)

"IX",45,45,"ACRDSD17",11.1,5,0)
5^F^45^70^^^F
"IX",45,45,"ACRDSD17",11.1,5,3)

"IX",45,45,"ACRDSD18",0)
45^ACRDSD18^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD18",.1,0)
^^16^16^3140620^
"IX",45,45,"ACRDSD18",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD18",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD18",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD18",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD18",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD18",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD18",.1,7,0)
respectively.
"IX",45,45,"ACRDSD18",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDSD18",.1,9,0)
system.
"IX",45,45,"ACRDSD18",.1,10,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD18",.1,11,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD18",.1,12,0)
NAME is the name of the field where the code is stored. An example is D 
"IX",45,45,"ACRDSD18",.1,13,0)
SD18, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD18",.1,14,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD18",.1,15,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDSD18",.1,16,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDSD18",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD18")
"IX",45,45,"ACRDSD18",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD18")
"IX",45,45,"ACRDSD18",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD18",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD18",11.1,1,3)

"IX",45,45,"ACRDSD18",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD18",11.1,2,3)

"IX",45,45,"ACRDSD18",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD18",11.1,3,3)

"IX",45,45,"ACRDSD18",11.1,4,0)
4^F^45^79.249^^4^F
"IX",45,45,"ACRDSD18",11.1,4,3)

"IX",45,45,"ACRDSD18",11.1,5,0)
5^F^45^70^^^F
"IX",45,45,"ACRDSD18",11.1,5,3)

"IX",45,45,"ACRDSD19",0)
45^ACRDSD19^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD19",.1,0)
^^16^16^3140620^
"IX",45,45,"ACRDSD19",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD19",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD19",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD19",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD19",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD19",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD19",.1,7,0)
respectively.
"IX",45,45,"ACRDSD19",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDSD19",.1,9,0)
system.
"IX",45,45,"ACRDSD19",.1,10,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD19",.1,11,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD19",.1,12,0)
NAME is the name of the field where the code is stored. An example is D 
"IX",45,45,"ACRDSD19",.1,13,0)
SD19, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD19",.1,14,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD19",.1,15,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDSD19",.1,16,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDSD19",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD19")
"IX",45,45,"ACRDSD19",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD19")
"IX",45,45,"ACRDSD19",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD19",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD19",11.1,1,3)

"IX",45,45,"ACRDSD19",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD19",11.1,2,3)

"IX",45,45,"ACRDSD19",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD19",11.1,3,3)

"IX",45,45,"ACRDSD19",11.1,4,0)
4^F^45^79.2491^^4^F
"IX",45,45,"ACRDSD19",11.1,4,3)

"IX",45,45,"ACRDSD19",11.1,5,0)
5^F^45^70^^^F
"IX",45,45,"ACRDSD19",11.1,5,3)

"IX",45,45,"ACRDSD2",0)
45^ACRDSD2^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD2",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD2",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD2",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD2",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD2",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD2",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD2",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD2",.1,7,0)
respectively.
"IX",45,45,"ACRDSD2",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD2",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD2",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD2",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD2, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD2",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD2",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD2",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD2")
"IX",45,45,"ACRDSD2",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD2")
"IX",45,45,"ACRDSD2",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD2",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD2",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD2",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD2",11.1,4,0)
4^F^45^79.17^^4^F
"IX",45,45,"ACRDSD2",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDSD20",0)
45^ACRDSD20^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD20",.1,0)
^^16^16^3140620^
"IX",45,45,"ACRDSD20",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD20",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD20",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD20",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD20",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD20",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD20",.1,7,0)
respectively.
"IX",45,45,"ACRDSD20",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDSD20",.1,9,0)
system.
"IX",45,45,"ACRDSD20",.1,10,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD20",.1,11,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD20",.1,12,0)
NAME is the name of the field where the code is stored. An example is D 
"IX",45,45,"ACRDSD20",.1,13,0)
SD20, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD20",.1,14,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD20",.1,15,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDSD20",.1,16,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDSD20",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD20")
"IX",45,45,"ACRDSD20",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD20")
"IX",45,45,"ACRDSD20",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD20",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD20",11.1,1,3)

"IX",45,45,"ACRDSD20",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD20",11.1,2,3)

"IX",45,45,"ACRDSD20",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD20",11.1,3,3)

"IX",45,45,"ACRDSD20",11.1,4,0)
4^F^45^79.24911^^4^F
"IX",45,45,"ACRDSD20",11.1,4,3)

"IX",45,45,"ACRDSD20",11.1,5,0)
5^F^45^70^^^F
"IX",45,45,"ACRDSD20",11.1,5,3)

"IX",45,45,"ACRDSD21",0)
45^ACRDSD21^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD21",.1,0)
^^16^16^3140623^
"IX",45,45,"ACRDSD21",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD21",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD21",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD21",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD21",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD21",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD21",.1,7,0)
respectively.
"IX",45,45,"ACRDSD21",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDSD21",.1,9,0)
system.
"IX",45,45,"ACRDSD21",.1,10,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD21",.1,11,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD21",.1,12,0)
NAME is the name of the field where the code is stored. An example is D 
"IX",45,45,"ACRDSD21",.1,13,0)
SD21, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD21",.1,14,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD21",.1,15,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDSD21",.1,16,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDSD21",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD21")
"IX",45,45,"ACRDSD21",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD21")
"IX",45,45,"ACRDSD21",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD21",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD21",11.1,1,3)

"IX",45,45,"ACRDSD21",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD21",11.1,2,3)

"IX",45,45,"ACRDSD21",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD21",11.1,3,3)

"IX",45,45,"ACRDSD21",11.1,4,0)
4^F^45^79.24912^^4^F
"IX",45,45,"ACRDSD21",11.1,4,3)

"IX",45,45,"ACRDSD21",11.1,5,0)
5^F^45^70^^^F
"IX",45,45,"ACRDSD21",11.1,5,3)

"IX",45,45,"ACRDSD22",0)
45^ACRDSD22^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD22",.1,0)
^^16^16^3140623^
"IX",45,45,"ACRDSD22",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD22",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD22",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD22",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD22",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD22",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD22",.1,7,0)
respectively.
"IX",45,45,"ACRDSD22",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDSD22",.1,9,0)
system.
"IX",45,45,"ACRDSD22",.1,10,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD22",.1,11,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD22",.1,12,0)
NAME is the name of the field where the code is stored. An example is D 
"IX",45,45,"ACRDSD22",.1,13,0)
SD22, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD22",.1,14,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD22",.1,15,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDSD22",.1,16,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDSD22",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD22")
"IX",45,45,"ACRDSD22",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD22")
"IX",45,45,"ACRDSD22",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD22",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD22",11.1,1,3)

"IX",45,45,"ACRDSD22",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD22",11.1,2,3)

"IX",45,45,"ACRDSD22",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD22",11.1,3,3)

"IX",45,45,"ACRDSD22",11.1,4,0)
4^F^45^79.24913^^4^F
"IX",45,45,"ACRDSD22",11.1,4,3)

"IX",45,45,"ACRDSD22",11.1,5,0)
5^F^45^70^^^F
"IX",45,45,"ACRDSD22",11.1,5,3)

"IX",45,45,"ACRDSD23",0)
45^ACRDSD23^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD23",.1,0)
^^16^16^3140623^
"IX",45,45,"ACRDSD23",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD23",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD23",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD23",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD23",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD23",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD23",.1,7,0)
respectively.
"IX",45,45,"ACRDSD23",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDSD23",.1,9,0)
system.
"IX",45,45,"ACRDSD23",.1,10,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD23",.1,11,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD23",.1,12,0)
NAME is the name of the field where the code is stored. An example is D 
"IX",45,45,"ACRDSD23",.1,13,0)
SD23, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD23",.1,14,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD23",.1,15,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDSD23",.1,16,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDSD23",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD23")
"IX",45,45,"ACRDSD23",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD23")
"IX",45,45,"ACRDSD23",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD23",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD23",11.1,1,3)

"IX",45,45,"ACRDSD23",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD23",11.1,2,3)

"IX",45,45,"ACRDSD23",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD23",11.1,3,3)

"IX",45,45,"ACRDSD23",11.1,4,0)
4^F^45^79.24914^^4^F
"IX",45,45,"ACRDSD23",11.1,4,3)

"IX",45,45,"ACRDSD23",11.1,5,0)
5^F^45^70^^^F
"IX",45,45,"ACRDSD23",11.1,5,3)

"IX",45,45,"ACRDSD24",0)
45^ACRDSD24^Clinical Reminders Index for ICD diagnosis code lookup^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD24",.1,0)
^^16^16^3140623^
"IX",45,45,"ACRDSD24",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD24",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD24",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD24",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD24",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD24",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD24",.1,7,0)
respectively.
"IX",45,45,"ACRDSD24",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRDSD24",.1,9,0)
system.
"IX",45,45,"ACRDSD24",.1,10,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD24",.1,11,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD24",.1,12,0)
NAME is the name of the field where the code is stored. An example is D 
"IX",45,45,"ACRDSD24",.1,13,0)
SD24, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD24",.1,14,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD24",.1,15,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRDSD24",.1,16,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRDSD24",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD24")
"IX",45,45,"ACRDSD24",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD24")
"IX",45,45,"ACRDSD24",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD24",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD24",11.1,1,3)

"IX",45,45,"ACRDSD24",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD24",11.1,2,3)

"IX",45,45,"ACRDSD24",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD24",11.1,3,3)

"IX",45,45,"ACRDSD24",11.1,4,0)
4^F^45^79.24915^^4^F
"IX",45,45,"ACRDSD24",11.1,4,3)

"IX",45,45,"ACRDSD24",11.1,5,0)
5^F^45^70^^^F
"IX",45,45,"ACRDSD24",11.1,5,3)

"IX",45,45,"ACRDSD3",0)
45^ACRDSD3^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD3",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD3",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD3",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD3",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD3",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD3",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD3",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD3",.1,7,0)
respectively.
"IX",45,45,"ACRDSD3",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD3",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD3",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD3",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD3, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD3",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD3",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD3",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD3")
"IX",45,45,"ACRDSD3",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD3")
"IX",45,45,"ACRDSD3",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD3",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD3",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD3",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD3",11.1,4,0)
4^F^45^79.18^^4^F
"IX",45,45,"ACRDSD3",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDSD4",0)
45^ACRDSD4^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD4",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD4",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD4",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD4",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD4",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD4",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD4",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD4",.1,7,0)
respectively.
"IX",45,45,"ACRDSD4",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD4",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD4",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD4",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD4, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD4",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD4",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD4",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD4")
"IX",45,45,"ACRDSD4",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD4")
"IX",45,45,"ACRDSD4",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD4",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD4",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD4",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD4",11.1,4,0)
4^F^45^79.19^^4^F
"IX",45,45,"ACRDSD4",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDSD5",0)
45^ACRDSD5^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD5",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD5",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD5",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD5",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD5",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD5",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD5",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD5",.1,7,0)
respectively.
"IX",45,45,"ACRDSD5",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD5",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD5",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD5",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD5, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD5",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD5",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD5",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD5")
"IX",45,45,"ACRDSD5",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD5")
"IX",45,45,"ACRDSD5",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD5",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD5",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD5",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD5",11.1,4,0)
4^F^45^79.201^^4^F
"IX",45,45,"ACRDSD5",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDSD6",0)
45^ACRDSD6^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD6",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD6",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD6",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD6",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD6",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD6",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD6",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD6",.1,7,0)
respectively.
"IX",45,45,"ACRDSD6",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD6",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD6",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD6",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD6, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD6",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD6",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD6",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD6")
"IX",45,45,"ACRDSD6",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD6")
"IX",45,45,"ACRDSD6",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD6",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD6",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD6",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD6",11.1,4,0)
4^F^45^79.21^^4^F
"IX",45,45,"ACRDSD6",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDSD7",0)
45^ACRDSD7^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD7",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD7",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD7",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD7",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD7",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD7",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD7",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD7",.1,7,0)
respectively.
"IX",45,45,"ACRDSD7",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD7",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD7",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD7",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD7, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD7",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD7",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD7",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD7")
"IX",45,45,"ACRDSD7",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD7")
"IX",45,45,"ACRDSD7",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD7",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD7",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD7",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD7",11.1,4,0)
4^F^45^79.22^^4^F
"IX",45,45,"ACRDSD7",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDSD8",0)
45^ACRDSD8^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD8",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD8",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD8",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD8",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD8",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD8",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD8",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD8",.1,7,0)
respectively.
"IX",45,45,"ACRDSD8",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD8",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD8",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD8",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD8, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD8",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD8",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD8",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD8")
"IX",45,45,"ACRDSD8",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD8")
"IX",45,45,"ACRDSD8",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD8",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD8",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD8",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD8",11.1,4,0)
4^F^45^79.23^^4^F
"IX",45,45,"ACRDSD8",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDSD9",0)
45^ACRDSD9^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD9",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD9",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD9",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD9",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD9",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD9",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD9",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD9",.1,7,0)
respectively.
"IX",45,45,"ACRDSD9",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD9",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD9",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD9",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD9, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD9",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD9",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD9",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD9")
"IX",45,45,"ACRDSD9",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD9")
"IX",45,45,"ACRDSD9",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD9",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD9",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD9",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD9",11.1,4,0)
4^F^45^79.24^^4^F
"IX",45,45,"ACRDSD9",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRPP1",0)
45^ACRPP1^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP1",.1,0)
^^12^12^3140701
"IX",45,45,"ACRPP1",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP1",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP1",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP1",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP1",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP1",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP1",.1,7,0)
respectively.
"IX",45,45,"ACRPP1",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRPP1",.1,9,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP1",.1,10,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP1",.1,11,0)
P1 means it was found on the P node and it was Procedure Code 1.
"IX",45,45,"ACRPP1",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRPP1",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",1)
"IX",45,45,"ACRPP1",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",1)
"IX",45,45,"ACRPP1",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP1",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP1",11.1,2,0)
2^F^45.05^4^^2^F
"IX",45,45,"ACRPP10",0)
45^ACRPP10^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP10",.1,0)
^^14^14^3140723^
"IX",45,45,"ACRPP10",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP10",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP10",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP10",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP10",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP10",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP10",.1,7,0)
respectively.
"IX",45,45,"ACRPP10",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPP10",.1,9,0)
system.
"IX",45,45,"ACRPP10",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP10",.1,11,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP10",.1,12,0)
P10 means it was found on the P node and it was Procedure Code 10.
"IX",45,45,"ACRPP10",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPP10",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPP10",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",10)
"IX",45,45,"ACRPP10",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",10)
"IX",45,45,"ACRPP10",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP10",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP10",11.1,1,3)

"IX",45,45,"ACRPP10",11.1,2,0)
2^F^45.05^13^^2^F
"IX",45,45,"ACRPP10",11.1,2,3)

"IX",45,45,"ACRPP11",0)
45^ACRPP11^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP11",.1,0)
^^14^14^3140724^
"IX",45,45,"ACRPP11",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP11",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP11",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP11",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP11",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP11",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP11",.1,7,0)
respectively.
"IX",45,45,"ACRPP11",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPP11",.1,9,0)
system.
"IX",45,45,"ACRPP11",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP11",.1,11,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP11",.1,12,0)
P11 means it was found on the P node and it was Procedure Code 11.
"IX",45,45,"ACRPP11",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPP11",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPP11",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",11)
"IX",45,45,"ACRPP11",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",11)
"IX",45,45,"ACRPP11",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP11",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP11",11.1,1,3)

"IX",45,45,"ACRPP11",11.1,2,0)
2^F^45.05^14^^2^F
"IX",45,45,"ACRPP11",11.1,2,3)

"IX",45,45,"ACRPP12",0)
45^ACRPP12^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP12",.1,0)
^^14^14^3140724^
"IX",45,45,"ACRPP12",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP12",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP12",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP12",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP12",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP12",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP12",.1,7,0)
respectively.
"IX",45,45,"ACRPP12",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPP12",.1,9,0)
system.
"IX",45,45,"ACRPP12",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP12",.1,11,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP12",.1,12,0)
P12 means it was found on the P node and it was Procedure Code 12.
"IX",45,45,"ACRPP12",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPP12",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPP12",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",12)
"IX",45,45,"ACRPP12",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",12)
"IX",45,45,"ACRPP12",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP12",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP12",11.1,1,3)

"IX",45,45,"ACRPP12",11.1,2,0)
2^F^45.05^15^^2^F
"IX",45,45,"ACRPP12",11.1,2,3)

"IX",45,45,"ACRPP13",0)
45^ACRPP13^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP13",.1,0)
^^14^14^3140724^
"IX",45,45,"ACRPP13",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP13",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP13",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP13",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP13",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP13",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP13",.1,7,0)
respectively.
"IX",45,45,"ACRPP13",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPP13",.1,9,0)
system.
"IX",45,45,"ACRPP13",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP13",.1,11,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP13",.1,12,0)
P13 means it was found on the P node and it was Procedure Code 13.
"IX",45,45,"ACRPP13",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPP13",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPP13",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",13)
"IX",45,45,"ACRPP13",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",13)
"IX",45,45,"ACRPP13",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP13",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP13",11.1,1,3)

"IX",45,45,"ACRPP13",11.1,2,0)
2^F^45.05^16^^2^F
"IX",45,45,"ACRPP13",11.1,2,3)

"IX",45,45,"ACRPP14",0)
45^ACRPP14^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP14",.1,0)
^^14^14^3140724^
"IX",45,45,"ACRPP14",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP14",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP14",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP14",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP14",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP14",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP14",.1,7,0)
respectively.
"IX",45,45,"ACRPP14",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPP14",.1,9,0)
system.
"IX",45,45,"ACRPP14",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP14",.1,11,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP14",.1,12,0)
P14 means it was found on the P node and it was Procedure Code 14.
"IX",45,45,"ACRPP14",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPP14",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPP14",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",14)
"IX",45,45,"ACRPP14",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",14)
"IX",45,45,"ACRPP14",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP14",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP14",11.1,1,3)

"IX",45,45,"ACRPP14",11.1,2,0)
2^F^45.05^17^^2^F
"IX",45,45,"ACRPP14",11.1,2,3)

"IX",45,45,"ACRPP15",0)
45^ACRPP15^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP15",.1,0)
^^14^14^3140724^
"IX",45,45,"ACRPP15",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP15",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP15",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP15",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP15",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP15",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP15",.1,7,0)
respectively.
"IX",45,45,"ACRPP15",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPP15",.1,9,0)
system.
"IX",45,45,"ACRPP15",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP15",.1,11,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP15",.1,12,0)
P15 means it was found on the P node and it was Procedure Code 15.
"IX",45,45,"ACRPP15",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPP15",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPP15",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",15)
"IX",45,45,"ACRPP15",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",15)
"IX",45,45,"ACRPP15",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP15",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP15",11.1,1,3)

"IX",45,45,"ACRPP15",11.1,2,0)
2^F^45.05^18^^2^F
"IX",45,45,"ACRPP15",11.1,2,3)

"IX",45,45,"ACRPP16",0)
45^ACRPP16^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP16",.1,0)
^^14^14^3140724^
"IX",45,45,"ACRPP16",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP16",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP16",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP16",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP16",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP16",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP16",.1,7,0)
respectively.
"IX",45,45,"ACRPP16",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPP16",.1,9,0)
system.
"IX",45,45,"ACRPP16",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP16",.1,11,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP16",.1,12,0)
P16 means it was found on the P node and it was Procedure Code 16.
"IX",45,45,"ACRPP16",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPP16",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPP16",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",16)
"IX",45,45,"ACRPP16",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",16)
"IX",45,45,"ACRPP16",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP16",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP16",11.1,1,3)

"IX",45,45,"ACRPP16",11.1,2,0)
2^F^45.05^19^^2^F
"IX",45,45,"ACRPP16",11.1,2,3)

"IX",45,45,"ACRPP17",0)
45^ACRPP17^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP17",.1,0)
^^14^14^3140724^
"IX",45,45,"ACRPP17",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP17",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP17",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP17",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP17",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP17",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP17",.1,7,0)
respectively.
"IX",45,45,"ACRPP17",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPP17",.1,9,0)
system.
"IX",45,45,"ACRPP17",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP17",.1,11,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP17",.1,12,0)
P17 means it was found on the P node and it was Procedure Code 17.
"IX",45,45,"ACRPP17",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPP17",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPP17",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",17)
"IX",45,45,"ACRPP17",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",17)
"IX",45,45,"ACRPP17",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP17",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP17",11.1,1,3)

"IX",45,45,"ACRPP17",11.1,2,0)
2^F^45.05^20^^2^F
"IX",45,45,"ACRPP17",11.1,2,3)

"IX",45,45,"ACRPP18",0)
45^ACRPP18^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP18",.1,0)
^^14^14^3140724^
"IX",45,45,"ACRPP18",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP18",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP18",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP18",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP18",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP18",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP18",.1,7,0)
respectively.
"IX",45,45,"ACRPP18",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPP18",.1,9,0)
system.
"IX",45,45,"ACRPP18",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP18",.1,11,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP18",.1,12,0)
P18 means it was found on the P node and it was Procedure Code 18.
"IX",45,45,"ACRPP18",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPP18",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPP18",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",18)
"IX",45,45,"ACRPP18",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",18)
"IX",45,45,"ACRPP18",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP18",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP18",11.1,1,3)

"IX",45,45,"ACRPP18",11.1,2,0)
2^F^45.05^21^^2^F
"IX",45,45,"ACRPP18",11.1,2,3)

"IX",45,45,"ACRPP19",0)
45^ACRPP19^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP19",.1,0)
^^14^14^3140724^
"IX",45,45,"ACRPP19",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP19",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP19",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP19",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP19",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP19",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP19",.1,7,0)
respectively.
"IX",45,45,"ACRPP19",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPP19",.1,9,0)
system.
"IX",45,45,"ACRPP19",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP19",.1,11,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP19",.1,12,0)
P19 means it was found on the P node and it was Procedure Code 19.
"IX",45,45,"ACRPP19",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPP19",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPP19",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",19)
"IX",45,45,"ACRPP19",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",19)
"IX",45,45,"ACRPP19",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP19",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP19",11.1,1,3)

"IX",45,45,"ACRPP19",11.1,2,0)
2^F^45.05^22^^2^F
"IX",45,45,"ACRPP19",11.1,2,3)

"IX",45,45,"ACRPP2",0)
45^ACRPP2^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP2",.1,0)
^^12^12^3140701
"IX",45,45,"ACRPP2",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP2",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP2",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP2",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP2",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP2",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP2",.1,7,0)
respectively.
"IX",45,45,"ACRPP2",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRPP2",.1,9,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP2",.1,10,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP2",.1,11,0)
P2 means it was found on the P node and it was Procedure Code 2.
"IX",45,45,"ACRPP2",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRPP2",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",2)
"IX",45,45,"ACRPP2",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",2)
"IX",45,45,"ACRPP2",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP2",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP2",11.1,2,0)
2^F^45.05^5^^2^F
"IX",45,45,"ACRPP20",0)
45^ACRPP20^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP20",.1,0)
^^14^14^3140724^
"IX",45,45,"ACRPP20",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP20",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP20",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP20",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP20",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP20",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP20",.1,7,0)
respectively.
"IX",45,45,"ACRPP20",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPP20",.1,9,0)
system.
"IX",45,45,"ACRPP20",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP20",.1,11,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP20",.1,12,0)
P20 means it was found on the P node and it was Procedure Code 20.
"IX",45,45,"ACRPP20",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPP20",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPP20",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",20)
"IX",45,45,"ACRPP20",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",20)
"IX",45,45,"ACRPP20",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP20",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP20",11.1,1,3)

"IX",45,45,"ACRPP20",11.1,2,0)
2^F^45.05^23^^2^F
"IX",45,45,"ACRPP20",11.1,2,3)

"IX",45,45,"ACRPP21",0)
45^ACRPP21^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP21",.1,0)
^^14^14^3140724^
"IX",45,45,"ACRPP21",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP21",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP21",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP21",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP21",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP21",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP21",.1,7,0)
respectively.
"IX",45,45,"ACRPP21",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPP21",.1,9,0)
system.
"IX",45,45,"ACRPP21",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP21",.1,11,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP21",.1,12,0)
P21 means it was found on the P node and it was Procedure Code 21.
"IX",45,45,"ACRPP21",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPP21",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPP21",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",21)
"IX",45,45,"ACRPP21",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",21)
"IX",45,45,"ACRPP21",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP21",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP21",11.1,1,3)

"IX",45,45,"ACRPP21",11.1,2,0)
2^F^45.05^24^^2^F
"IX",45,45,"ACRPP21",11.1,2,3)

"IX",45,45,"ACRPP22",0)
45^ACRPP22^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP22",.1,0)
^^14^14^3140724^
"IX",45,45,"ACRPP22",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP22",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP22",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP22",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP22",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP22",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP22",.1,7,0)
respectively.
"IX",45,45,"ACRPP22",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPP22",.1,9,0)
system.
"IX",45,45,"ACRPP22",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP22",.1,11,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP22",.1,12,0)
P22 means it was found on the P node and it was Procedure Code 22.
"IX",45,45,"ACRPP22",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPP22",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPP22",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",22)
"IX",45,45,"ACRPP22",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",22)
"IX",45,45,"ACRPP22",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP22",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP22",11.1,1,3)

"IX",45,45,"ACRPP22",11.1,2,0)
2^F^45.05^25^^2^F
"IX",45,45,"ACRPP22",11.1,2,3)

"IX",45,45,"ACRPP23",0)
45^ACRPP23^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP23",.1,0)
^^14^14^3140724^
"IX",45,45,"ACRPP23",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP23",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP23",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP23",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP23",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP23",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP23",.1,7,0)
respectively.
"IX",45,45,"ACRPP23",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPP23",.1,9,0)
system.
"IX",45,45,"ACRPP23",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP23",.1,11,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP23",.1,12,0)
P23 means it was found on the P node and it was Procedure Code 23.
"IX",45,45,"ACRPP23",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPP23",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPP23",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",23)
"IX",45,45,"ACRPP23",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",23)
"IX",45,45,"ACRPP23",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP23",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP23",11.1,1,3)

"IX",45,45,"ACRPP23",11.1,2,0)
2^F^45.05^26^^2^F
"IX",45,45,"ACRPP23",11.1,2,3)

"IX",45,45,"ACRPP24",0)
45^ACRPP24^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP24",.1,0)
^^14^14^3140724^
"IX",45,45,"ACRPP24",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP24",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP24",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP24",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP24",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP24",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP24",.1,7,0)
respectively.
"IX",45,45,"ACRPP24",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPP24",.1,9,0)
system.
"IX",45,45,"ACRPP24",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP24",.1,11,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP24",.1,12,0)
P24 means it was found on the P node and it was Procedure Code 24.
"IX",45,45,"ACRPP24",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPP24",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPP24",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",24)
"IX",45,45,"ACRPP24",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",24)
"IX",45,45,"ACRPP24",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP24",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP24",11.1,1,3)

"IX",45,45,"ACRPP24",11.1,2,0)
2^F^45.05^27^^2^F
"IX",45,45,"ACRPP24",11.1,2,3)

"IX",45,45,"ACRPP25",0)
45^ACRPP25^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP25",.1,0)
^^14^14^3140724^
"IX",45,45,"ACRPP25",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP25",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP25",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP25",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP25",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP25",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP25",.1,7,0)
respectively.
"IX",45,45,"ACRPP25",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPP25",.1,9,0)
system.
"IX",45,45,"ACRPP25",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP25",.1,11,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP25",.1,12,0)
P25 means it was found on the P node and it was Procedure Code 25.
"IX",45,45,"ACRPP25",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPP25",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPP25",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",25)
"IX",45,45,"ACRPP25",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",25)
"IX",45,45,"ACRPP25",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP25",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP25",11.1,1,3)

"IX",45,45,"ACRPP25",11.1,2,0)
2^F^45.05^28^^2^F
"IX",45,45,"ACRPP25",11.1,2,3)

"IX",45,45,"ACRPP3",0)
45^ACRPP3^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP3",.1,0)
^^12^12^3140701
"IX",45,45,"ACRPP3",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP3",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP3",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP3",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP3",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP3",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP3",.1,7,0)
respectively.
"IX",45,45,"ACRPP3",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRPP3",.1,9,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP3",.1,10,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP3",.1,11,0)
P3 means it was found on the P node and it was Procedure Code 3.
"IX",45,45,"ACRPP3",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRPP3",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",3)
"IX",45,45,"ACRPP3",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",3)
"IX",45,45,"ACRPP3",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP3",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP3",11.1,2,0)
2^F^45.05^6^^2^F
"IX",45,45,"ACRPP4",0)
45^ACRPP4^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP4",.1,0)
^^12^12^3140701
"IX",45,45,"ACRPP4",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP4",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP4",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP4",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP4",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP4",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP4",.1,7,0)
respectively.
"IX",45,45,"ACRPP4",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRPP4",.1,9,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP4",.1,10,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP4",.1,11,0)
P4 means it was found on the P node and it was Procedure Code 4.
"IX",45,45,"ACRPP4",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRPP4",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",4)
"IX",45,45,"ACRPP4",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",4)
"IX",45,45,"ACRPP4",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP4",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP4",11.1,2,0)
2^F^45.05^7^^2^F
"IX",45,45,"ACRPP5",0)
45^ACRPP5^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP5",.1,0)
^^12^12^3140701
"IX",45,45,"ACRPP5",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP5",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP5",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP5",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP5",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP5",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP5",.1,7,0)
respectively.
"IX",45,45,"ACRPP5",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRPP5",.1,9,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP5",.1,10,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP5",.1,11,0)
P5 means it was found on the P node and it was Procedure Code 5.
"IX",45,45,"ACRPP5",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRPP5",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",5)
"IX",45,45,"ACRPP5",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",5)
"IX",45,45,"ACRPP5",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP5",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP5",11.1,2,0)
2^F^45.05^8^^2^F
"IX",45,45,"ACRPP6",0)
45^ACRPP6^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP6",.1,0)
^^14^14^3140722^
"IX",45,45,"ACRPP6",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP6",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP6",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP6",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP6",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP6",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP6",.1,7,0)
respectively.
"IX",45,45,"ACRPP6",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPP6",.1,9,0)
system.
"IX",45,45,"ACRPP6",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP6",.1,11,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP6",.1,12,0)
P6 means it was found on the P node and it was Procedure Code 6.
"IX",45,45,"ACRPP6",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPP6",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPP6",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",6)
"IX",45,45,"ACRPP6",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",6)
"IX",45,45,"ACRPP6",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP6",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP6",11.1,1,3)

"IX",45,45,"ACRPP6",11.1,2,0)
2^F^45.05^9^^2^F
"IX",45,45,"ACRPP6",11.1,2,3)

"IX",45,45,"ACRPP7",0)
45^ACRPP7^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP7",.1,0)
^^14^14^3140722^
"IX",45,45,"ACRPP7",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP7",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP7",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP7",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP7",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP7",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP7",.1,7,0)
respectively.
"IX",45,45,"ACRPP7",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPP7",.1,9,0)
system.
"IX",45,45,"ACRPP7",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP7",.1,11,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP7",.1,12,0)
P7 means it was found on the P node and it was Procedure Code 7.
"IX",45,45,"ACRPP7",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPP7",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPP7",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",7)
"IX",45,45,"ACRPP7",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",7)
"IX",45,45,"ACRPP7",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP7",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP7",11.1,1,3)

"IX",45,45,"ACRPP7",11.1,2,0)
2^F^45.05^10^^2^F
"IX",45,45,"ACRPP7",11.1,2,3)

"IX",45,45,"ACRPP8",0)
45^ACRPP8^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP8",.1,0)
^^14^14^3140722^
"IX",45,45,"ACRPP8",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP8",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP8",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP8",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP8",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP8",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP8",.1,7,0)
respectively.
"IX",45,45,"ACRPP8",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPP8",.1,9,0)
system.
"IX",45,45,"ACRPP8",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP8",.1,11,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP8",.1,12,0)
P8 means it was found on the P node and it was Procedure Code 8.
"IX",45,45,"ACRPP8",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPP8",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPP8",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",8)
"IX",45,45,"ACRPP8",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",8)
"IX",45,45,"ACRPP8",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP8",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP8",11.1,1,3)

"IX",45,45,"ACRPP8",11.1,2,0)
2^F^45.05^11^^2^F
"IX",45,45,"ACRPP8",11.1,2,3)

"IX",45,45,"ACRPP9",0)
45^ACRPP9^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP9",.1,0)
^^14^14^3140723^
"IX",45,45,"ACRPP9",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP9",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP9",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP9",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP9",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP9",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP9",.1,7,0)
respectively.
"IX",45,45,"ACRPP9",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPP9",.1,9,0)
system.
"IX",45,45,"ACRPP9",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP9",.1,11,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP9",.1,12,0)
P9 means it was found on the P node and it was Procedure Code 9.
"IX",45,45,"ACRPP9",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPP9",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPP9",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",9)
"IX",45,45,"ACRPP9",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",9)
"IX",45,45,"ACRPP9",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP9",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP9",11.1,2,0)
2^F^45.05^12^^2^F
"IX",45,45,"ACRPS1",0)
45^ACRPS1^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS1",.1,0)
^^12^12^3140701
"IX",45,45,"ACRPS1",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS1",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS1",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS1",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS1",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS1",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS1",.1,7,0)
respectively.
"IX",45,45,"ACRPS1",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRPS1",.1,9,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS1",.1,10,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS1",.1,11,0)
S1 means it was found on the S node and it was Operation Code 1.
"IX",45,45,"ACRPS1",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRPS1",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",1)
"IX",45,45,"ACRPS1",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",1)
"IX",45,45,"ACRPS1",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS1",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS1",11.1,2,0)
2^F^45.01^8^^2^F
"IX",45,45,"ACRPS10",0)
45^ACRPS10^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS10",.1,0)
^^14^14^3140813^
"IX",45,45,"ACRPS10",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS10",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS10",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS10",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS10",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS10",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS10",.1,7,0)
respectively.
"IX",45,45,"ACRPS10",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPS10",.1,9,0)
system.
"IX",45,45,"ACRPS10",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS10",.1,11,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS10",.1,12,0)
S10 means it was found on the S node and it was Operation Code 10.
"IX",45,45,"ACRPS10",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPS10",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPS10",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",10)
"IX",45,45,"ACRPS10",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",10)
"IX",45,45,"ACRPS10",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS10",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS10",11.1,1,3)

"IX",45,45,"ACRPS10",11.1,2,0)
2^F^45.01^17^^2^F
"IX",45,45,"ACRPS10",11.1,2,3)

"IX",45,45,"ACRPS11",0)
45^ACRPS11^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS11",.1,0)
^^14^14^3140813^
"IX",45,45,"ACRPS11",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS11",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS11",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS11",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS11",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS11",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS11",.1,7,0)
respectively.
"IX",45,45,"ACRPS11",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPS11",.1,9,0)
system.
"IX",45,45,"ACRPS11",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS11",.1,11,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS11",.1,12,0)
S11 means it was found on the S node and it was Operation Code 11.
"IX",45,45,"ACRPS11",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPS11",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPS11",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",11)
"IX",45,45,"ACRPS11",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",11)
"IX",45,45,"ACRPS11",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS11",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS11",11.1,1,3)

"IX",45,45,"ACRPS11",11.1,2,0)
2^F^45.01^18^^2^F
"IX",45,45,"ACRPS11",11.1,2,3)

"IX",45,45,"ACRPS12",0)
45^ACRPS12^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS12",.1,0)
^^14^14^3140813^
"IX",45,45,"ACRPS12",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS12",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS12",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS12",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS12",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS12",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS12",.1,7,0)
respectively.
"IX",45,45,"ACRPS12",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPS12",.1,9,0)
system.
"IX",45,45,"ACRPS12",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS12",.1,11,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS12",.1,12,0)
S12 means it was found on the S node and it was Operation Code 12.
"IX",45,45,"ACRPS12",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPS12",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPS12",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",12)
"IX",45,45,"ACRPS12",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",12)
"IX",45,45,"ACRPS12",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS12",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS12",11.1,1,3)

"IX",45,45,"ACRPS12",11.1,2,0)
2^F^45.01^19^^2^F
"IX",45,45,"ACRPS12",11.1,2,3)

"IX",45,45,"ACRPS13",0)
45^ACRPS13^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS13",.1,0)
^^14^14^3140813^
"IX",45,45,"ACRPS13",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS13",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS13",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS13",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS13",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS13",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS13",.1,7,0)
respectively.
"IX",45,45,"ACRPS13",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPS13",.1,9,0)
system.
"IX",45,45,"ACRPS13",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS13",.1,11,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS13",.1,12,0)
S13 means it was found on the S node and it was Operation Code 13.
"IX",45,45,"ACRPS13",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPS13",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPS13",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",13)
"IX",45,45,"ACRPS13",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",13)
"IX",45,45,"ACRPS13",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS13",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS13",11.1,1,3)

"IX",45,45,"ACRPS13",11.1,2,0)
2^F^45.01^20^^2^F
"IX",45,45,"ACRPS13",11.1,2,3)

"IX",45,45,"ACRPS14",0)
45^ACRPS14^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS14",.1,0)
^^14^14^3140813^
"IX",45,45,"ACRPS14",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS14",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS14",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS14",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS14",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS14",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS14",.1,7,0)
respectively.
"IX",45,45,"ACRPS14",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPS14",.1,9,0)
system.
"IX",45,45,"ACRPS14",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS14",.1,11,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS14",.1,12,0)
S14 means it was found on the S node and it was Operation Code 14.
"IX",45,45,"ACRPS14",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPS14",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPS14",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",14)
"IX",45,45,"ACRPS14",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",14)
"IX",45,45,"ACRPS14",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS14",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS14",11.1,1,3)

"IX",45,45,"ACRPS14",11.1,2,0)
2^F^45.01^21^^2^F
"IX",45,45,"ACRPS14",11.1,2,3)

"IX",45,45,"ACRPS15",0)
45^ACRPS15^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS15",.1,0)
^^14^14^3140813^
"IX",45,45,"ACRPS15",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS15",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS15",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS15",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS15",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS15",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS15",.1,7,0)
respectively.
"IX",45,45,"ACRPS15",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPS15",.1,9,0)
system.
"IX",45,45,"ACRPS15",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS15",.1,11,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS15",.1,12,0)
S15 means it was found on the S node and it was Operation Code 15.
"IX",45,45,"ACRPS15",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPS15",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPS15",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",15)
"IX",45,45,"ACRPS15",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",15)
"IX",45,45,"ACRPS15",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS15",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS15",11.1,1,3)

"IX",45,45,"ACRPS15",11.1,2,0)
2^F^45.01^22^^2^F
"IX",45,45,"ACRPS15",11.1,2,3)

"IX",45,45,"ACRPS16",0)
45^ACRPS16^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS16",.1,0)
^^14^14^3140813^
"IX",45,45,"ACRPS16",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS16",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS16",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS16",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS16",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS16",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS16",.1,7,0)
respectively.
"IX",45,45,"ACRPS16",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPS16",.1,9,0)
system.
"IX",45,45,"ACRPS16",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS16",.1,11,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS16",.1,12,0)
S16 means it was found on the S node and it was Operation Code 16.
"IX",45,45,"ACRPS16",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPS16",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPS16",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",16)
"IX",45,45,"ACRPS16",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",16)
"IX",45,45,"ACRPS16",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS16",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS16",11.1,1,3)

"IX",45,45,"ACRPS16",11.1,2,0)
2^F^45.01^23^^2^F
"IX",45,45,"ACRPS16",11.1,2,3)

"IX",45,45,"ACRPS17",0)
45^ACRPS17^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS17",.1,0)
^^14^14^3140813^
"IX",45,45,"ACRPS17",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS17",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS17",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS17",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS17",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS17",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS17",.1,7,0)
respectively.
"IX",45,45,"ACRPS17",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPS17",.1,9,0)
system.
"IX",45,45,"ACRPS17",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS17",.1,11,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS17",.1,12,0)
S17 means it was found on the S node and it was Operation Code 17.
"IX",45,45,"ACRPS17",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPS17",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPS17",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",17)
"IX",45,45,"ACRPS17",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",17)
"IX",45,45,"ACRPS17",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS17",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS17",11.1,1,3)

"IX",45,45,"ACRPS17",11.1,2,0)
2^F^45.01^24^^2^F
"IX",45,45,"ACRPS17",11.1,2,3)

"IX",45,45,"ACRPS18",0)
45^ACRPS18^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS18",.1,0)
^^14^14^3140813^
"IX",45,45,"ACRPS18",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS18",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS18",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS18",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS18",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS18",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS18",.1,7,0)
respectively.
"IX",45,45,"ACRPS18",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPS18",.1,9,0)
system.
"IX",45,45,"ACRPS18",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS18",.1,11,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS18",.1,12,0)
S18 means it was found on the S node and it was Operation Code 18.
"IX",45,45,"ACRPS18",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPS18",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPS18",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",18)
"IX",45,45,"ACRPS18",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",18)
"IX",45,45,"ACRPS18",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS18",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS18",11.1,1,3)

"IX",45,45,"ACRPS18",11.1,2,0)
2^F^45.01^25^^2^F
"IX",45,45,"ACRPS18",11.1,2,3)

"IX",45,45,"ACRPS19",0)
45^ACRPS19^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS19",.1,0)
^^14^14^3140813^
"IX",45,45,"ACRPS19",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS19",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS19",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS19",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS19",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS19",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS19",.1,7,0)
respectively.
"IX",45,45,"ACRPS19",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPS19",.1,9,0)
system.
"IX",45,45,"ACRPS19",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS19",.1,11,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS19",.1,12,0)
S19 means it was found on the S node and it was Operation Code 19.
"IX",45,45,"ACRPS19",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPS19",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPS19",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",19)
"IX",45,45,"ACRPS19",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",19)
"IX",45,45,"ACRPS19",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS19",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS19",11.1,1,3)

"IX",45,45,"ACRPS19",11.1,2,0)
2^F^45.01^26^^2^F
"IX",45,45,"ACRPS19",11.1,2,3)

"IX",45,45,"ACRPS2",0)
45^ACRPS2^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS2",.1,0)
^^12^12^3140701
"IX",45,45,"ACRPS2",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS2",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS2",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS2",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS2",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS2",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS2",.1,7,0)
respectively.
"IX",45,45,"ACRPS2",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRPS2",.1,9,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS2",.1,10,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS2",.1,11,0)
S2 means it was found on the S node and it was Operation Code 2.
"IX",45,45,"ACRPS2",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRPS2",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",2)
"IX",45,45,"ACRPS2",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",2)
"IX",45,45,"ACRPS2",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS2",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS2",11.1,2,0)
2^F^45.01^9^^2^F
"IX",45,45,"ACRPS20",0)
45^ACRPS20^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS20",.1,0)
^^14^14^3140813^
"IX",45,45,"ACRPS20",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS20",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS20",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS20",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS20",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS20",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS20",.1,7,0)
respectively.
"IX",45,45,"ACRPS20",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPS20",.1,9,0)
system.
"IX",45,45,"ACRPS20",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS20",.1,11,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS20",.1,12,0)
S20 means it was found on the S node and it was Operation Code 20.
"IX",45,45,"ACRPS20",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPS20",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPS20",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",20)
"IX",45,45,"ACRPS20",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",20)
"IX",45,45,"ACRPS20",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS20",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS20",11.1,1,3)

"IX",45,45,"ACRPS20",11.1,2,0)
2^F^45.01^27^^2^F
"IX",45,45,"ACRPS20",11.1,2,3)

"IX",45,45,"ACRPS21",0)
45^ACRPS21^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS21",.1,0)
^^14^14^3140813^
"IX",45,45,"ACRPS21",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS21",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS21",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS21",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS21",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS21",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS21",.1,7,0)
respectively.
"IX",45,45,"ACRPS21",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPS21",.1,9,0)
system.
"IX",45,45,"ACRPS21",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS21",.1,11,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS21",.1,12,0)
S21 means it was found on the S node and it was Operation Code 21.
"IX",45,45,"ACRPS21",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPS21",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPS21",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",21)
"IX",45,45,"ACRPS21",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",21)
"IX",45,45,"ACRPS21",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS21",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS21",11.1,1,3)

"IX",45,45,"ACRPS21",11.1,2,0)
2^F^45.01^28^^2^F
"IX",45,45,"ACRPS21",11.1,2,3)

"IX",45,45,"ACRPS22",0)
45^ACRPS22^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS22",.1,0)
^^14^14^3140813^
"IX",45,45,"ACRPS22",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS22",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS22",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS22",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS22",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS22",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS22",.1,7,0)
respectively.
"IX",45,45,"ACRPS22",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPS22",.1,9,0)
system.
"IX",45,45,"ACRPS22",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS22",.1,11,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS22",.1,12,0)
S22 means it was found on the S node and it was Operation Code 22.
"IX",45,45,"ACRPS22",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPS22",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPS22",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",22)
"IX",45,45,"ACRPS22",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",22)
"IX",45,45,"ACRPS22",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS22",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS22",11.1,1,3)

"IX",45,45,"ACRPS22",11.1,2,0)
2^F^45.01^29^^2^F
"IX",45,45,"ACRPS22",11.1,2,3)

"IX",45,45,"ACRPS23",0)
45^ACRPS23^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS23",.1,0)
^^14^14^3140813^
"IX",45,45,"ACRPS23",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS23",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS23",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS23",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS23",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS23",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS23",.1,7,0)
respectively.
"IX",45,45,"ACRPS23",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPS23",.1,9,0)
system.
"IX",45,45,"ACRPS23",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS23",.1,11,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS23",.1,12,0)
S23 means it was found on the S node and it was Operation Code 23.
"IX",45,45,"ACRPS23",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPS23",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPS23",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",23)
"IX",45,45,"ACRPS23",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",23)
"IX",45,45,"ACRPS23",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS23",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS23",11.1,1,3)

"IX",45,45,"ACRPS23",11.1,2,0)
2^F^45.01^30^^2^F
"IX",45,45,"ACRPS23",11.1,2,3)

"IX",45,45,"ACRPS24",0)
45^ACRPS24^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS24",.1,0)
^^14^14^3140813^
"IX",45,45,"ACRPS24",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS24",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS24",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS24",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS24",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS24",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS24",.1,7,0)
respectively.
"IX",45,45,"ACRPS24",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPS24",.1,9,0)
system.
"IX",45,45,"ACRPS24",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS24",.1,11,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS24",.1,12,0)
S24 means it was found on the S node and it was Operation Code 24.
"IX",45,45,"ACRPS24",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPS24",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPS24",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",24)
"IX",45,45,"ACRPS24",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",24)
"IX",45,45,"ACRPS24",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS24",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS24",11.1,1,3)

"IX",45,45,"ACRPS24",11.1,2,0)
2^F^45.01^31^^2^F
"IX",45,45,"ACRPS24",11.1,2,3)

"IX",45,45,"ACRPS25",0)
45^ACRPS25^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS25",.1,0)
^^14^14^3140813^
"IX",45,45,"ACRPS25",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS25",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS25",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS25",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS25",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS25",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS25",.1,7,0)
respectively.
"IX",45,45,"ACRPS25",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPS25",.1,9,0)
system.
"IX",45,45,"ACRPS25",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS25",.1,11,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS25",.1,12,0)
S25 means it was found on the S node and it was Operation Code 25.
"IX",45,45,"ACRPS25",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPS25",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPS25",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",25)
"IX",45,45,"ACRPS25",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",25)
"IX",45,45,"ACRPS25",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS25",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS25",11.1,1,3)

"IX",45,45,"ACRPS25",11.1,2,0)
2^F^45.01^32^^2^F
"IX",45,45,"ACRPS25",11.1,2,3)

"IX",45,45,"ACRPS3",0)
45^ACRPS3^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS3",.1,0)
^^12^12^3140701
"IX",45,45,"ACRPS3",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS3",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS3",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS3",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS3",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS3",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS3",.1,7,0)
respectively.
"IX",45,45,"ACRPS3",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRPS3",.1,9,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS3",.1,10,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS3",.1,11,0)
S3 means it was found on the S node and it was Operation Code 3.
"IX",45,45,"ACRPS3",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRPS3",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",3)
"IX",45,45,"ACRPS3",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",3)
"IX",45,45,"ACRPS3",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS3",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS3",11.1,2,0)
2^F^45.01^10^^2^F
"IX",45,45,"ACRPS4",0)
45^ACRPS4^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS4",.1,0)
^^12^12^3140701
"IX",45,45,"ACRPS4",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS4",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS4",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS4",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS4",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS4",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS4",.1,7,0)
respectively.
"IX",45,45,"ACRPS4",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRPS4",.1,9,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS4",.1,10,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS4",.1,11,0)
S4 means it was found on the S node and it was Operation Code 4.
"IX",45,45,"ACRPS4",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRPS4",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",4)
"IX",45,45,"ACRPS4",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",4)
"IX",45,45,"ACRPS4",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS4",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS4",11.1,2,0)
2^F^45.01^11^^2^F
"IX",45,45,"ACRPS5",0)
45^ACRPS5^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS5",.1,0)
^^12^12^3140701
"IX",45,45,"ACRPS5",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS5",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS5",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS5",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS5",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS5",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS5",.1,7,0)
respectively.
"IX",45,45,"ACRPS5",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRPS5",.1,9,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS5",.1,10,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS5",.1,11,0)
S5 means it was found on the S node and it was Operation Code 5.
"IX",45,45,"ACRPS5",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRPS5",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",5)
"IX",45,45,"ACRPS5",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",5)
"IX",45,45,"ACRPS5",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS5",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS5",11.1,2,0)
2^F^45.01^12^^2^F
"IX",45,45,"ACRPS6",0)
45^ACRPS6^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS6",.1,0)
^^14^14^3140813^
"IX",45,45,"ACRPS6",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS6",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS6",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS6",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS6",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS6",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS6",.1,7,0)
respectively.
"IX",45,45,"ACRPS6",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPS6",.1,9,0)
system.
"IX",45,45,"ACRPS6",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS6",.1,11,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS6",.1,12,0)
S6 means it was found on the S node and it was Operation Code 6.
"IX",45,45,"ACRPS6",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPS6",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPS6",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",6)
"IX",45,45,"ACRPS6",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",6)
"IX",45,45,"ACRPS6",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS6",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS6",11.1,1,3)

"IX",45,45,"ACRPS6",11.1,2,0)
2^F^45.01^13^^2^F
"IX",45,45,"ACRPS6",11.1,2,3)

"IX",45,45,"ACRPS7",0)
45^ACRPS7^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS7",.1,0)
^^14^14^3140813^
"IX",45,45,"ACRPS7",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS7",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS7",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS7",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS7",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS7",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS7",.1,7,0)
respectively.
"IX",45,45,"ACRPS7",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPS7",.1,9,0)
system.
"IX",45,45,"ACRPS7",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS7",.1,11,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS7",.1,12,0)
S7 means it was found on the S node and it was Operation Code 7.
"IX",45,45,"ACRPS7",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPS7",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPS7",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",7)
"IX",45,45,"ACRPS7",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",7)
"IX",45,45,"ACRPS7",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS7",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS7",11.1,1,3)

"IX",45,45,"ACRPS7",11.1,2,0)
2^F^45.01^14^^2^F
"IX",45,45,"ACRPS7",11.1,2,3)

"IX",45,45,"ACRPS8",0)
45^ACRPS8^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS8",.1,0)
^^14^14^3140813^
"IX",45,45,"ACRPS8",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS8",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS8",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS8",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS8",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS8",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS8",.1,7,0)
respectively.
"IX",45,45,"ACRPS8",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPS8",.1,9,0)
system.
"IX",45,45,"ACRPS8",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS8",.1,11,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS8",.1,12,0)
S8 means it was found on the S node and it was Operation Code 8.
"IX",45,45,"ACRPS8",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPS8",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPS8",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",8)
"IX",45,45,"ACRPS8",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",8)
"IX",45,45,"ACRPS8",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS8",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS8",11.1,1,3)

"IX",45,45,"ACRPS8",11.1,2,0)
2^F^45.01^15^^2^F
"IX",45,45,"ACRPS8",11.1,2,3)

"IX",45,45,"ACRPS9",0)
45^ACRPS9^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS9",.1,0)
^^14^14^3140813^
"IX",45,45,"ACRPS9",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS9",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS9",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS9",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS9",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS9",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS9",.1,7,0)
respectively.
"IX",45,45,"ACRPS9",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding 
"IX",45,45,"ACRPS9",.1,9,0)
system.
"IX",45,45,"ACRPS9",.1,10,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS9",.1,11,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS9",.1,12,0)
S9 means it was found on the S node and it was Operation Code 9.
"IX",45,45,"ACRPS9",.1,13,0)
For complete details, see the Clinical Reminders Index Technical 
"IX",45,45,"ACRPS9",.1,14,0)
Guide/Programmer's Manual.
"IX",45,45,"ACRPS9",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",9)
"IX",45,45,"ACRPS9",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",9)
"IX",45,45,"ACRPS9",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS9",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS9",11.1,1,3)

"IX",45,45,"ACRPS9",11.1,2,0)
2^F^45.01^16^^2^F
"IX",45,45,"ACRPS9",11.1,2,3)

"IX",45,45.01,"AO1",0)
45.01^AO1^Index of Operation Codes^MU^^F^IR^I^45.01^^^^^S
"IX",45,45.01,"AO1",.1,0)
^^2^2^3150130^
"IX",45,45.01,"AO1",.1,1,0)
This will allow a quick reference for sorting Operation Codes performed 
"IX",45,45.01,"AO1",.1,2,0)
on a patient for an episode of care.
"IX",45,45.01,"AO1",1)
S ^DGPT(DA(1),"S","AO",X,DA)=""
"IX",45,45.01,"AO1",2)
K ^DGPT(DA(1),"S","AO",X,DA)
"IX",45,45.01,"AO1",2.5)
K ^DGPT(DA(1),"S","AO")
"IX",45,45.01,"AO1",11.1,0)
^.114IA^1^1
"IX",45,45.01,"AO1",11.1,1,0)
1^F^45.01^8^^1^F
"IX",45,45.01,"AO10",0)
45.01^AO10^Index of Operation Codes^MU^^F^IR^I^45.01^^^^^S
"IX",45,45.01,"AO10",.1,0)
^^2^2^3150130^
"IX",45,45.01,"AO10",.1,1,0)
This will allow a quick reference for sorting Operation Codes performed 
"IX",45,45.01,"AO10",.1,2,0)
on a patient for an episode of care.
"IX",45,45.01,"AO10",1)
S ^DGPT(DA(1),"S","AO",X,DA)=""
"IX",45,45.01,"AO10",2)
K ^DGPT(DA(1),"S","AO",X,DA)
"IX",45,45.01,"AO10",2.5)
K ^DGPT(DA(1),"S","AO")
"IX",45,45.01,"AO10",11.1,0)
^.114IA^1^1
"IX",45,45.01,"AO10",11.1,1,0)
1^F^45.01^17^^1^F
"IX",45,45.01,"AO11",0)
45.01^AO11^Index of Operation Codes^MU^^F^IR^I^45.01^^^^^S
"IX",45,45.01,"AO11",.1,0)
^^2^2^3150130^
"IX",45,45.01,"AO11",.1,1,0)
This will allow a quick reference for sorting Operation Codes performed 
"IX",45,45.01,"AO11",.1,2,0)
on a patient for an episode of care.
"IX",45,45.01,"AO11",1)
S ^DGPT(DA(1),"S","AO",X,DA)=""
"IX",45,45.01,"AO11",2)
K ^DGPT(DA(1),"S","AO",X,DA)
"IX",45,45.01,"AO11",2.5)
K ^DGPT(DA(1),"S","AO")
"IX",45,45.01,"AO11",11.1,0)
^.114IA^1^1
"IX",45,45.01,"AO11",11.1,1,0)
1^F^45.01^18^^1^F
"IX",45,45.01,"AO12",0)
45.01^AO12^Index of Operation Codes^MU^^F^IR^I^45.01^^^^^S
"IX",45,45.01,"AO12",.1,0)
^^2^2^3150130^
"IX",45,45.01,"AO12",.1,1,0)
This will allow a quick reference for sorting Operation Codes performed 
"IX",45,45.01,"AO12",.1,2,0)
on a patient for an episode of care.
"IX",45,45.01,"AO12",1)
S ^DGPT(DA(1),"S","AO",X,DA)=""
"IX",45,45.01,"AO12",2)
K ^DGPT(DA(1),"S","AO",X,DA)
"IX",45,45.01,"AO12",2.5)
K ^DGPT(DA(1),"S","AO")
"IX",45,45.01,"AO12",11.1,0)
^.114IA^1^1
"IX",45,45.01,"AO12",11.1,1,0)
1^F^45.01^19^^1^F
"IX",45,45.01,"AO13",0)
45.01^AO13^Index of Operation Codes^MU^^F^IR^I^45.01^^^^^S
"IX",45,45.01,"AO13",.1,0)
^^2^2^3150130^
"IX",45,45.01,"AO13",.1,1,0)
This will allow a quick reference for sorting Operation Codes performed 
"IX",45,45.01,"AO13",.1,2,0)
on a patient for an episode of care.
"IX",45,45.01,"AO13",1)
S ^DGPT(DA(1),"S","AO",X,DA)=""
"IX",45,45.01,"AO13",2)
K ^DGPT(DA(1),"S","AO",X,DA)
"IX",45,45.01,"AO13",2.5)
K ^DGPT(DA(1),"S","AO")
"IX",45,45.01,"AO13",11.1,0)
^.114IA^1^1
"IX",45,45.01,"AO13",11.1,1,0)
1^F^45.01^20^^1^F
"IX",45,45.01,"AO14",0)
45.01^AO14^Index of Operation Codes^MU^^F^IR^I^45.01^^^^^S
"IX",45,45.01,"AO14",.1,0)
^^2^2^3150130^
"IX",45,45.01,"AO14",.1,1,0)
This will allow a quick reference for sorting Operation Codes performed 
"IX",45,45.01,"AO14",.1,2,0)
on a patient for an episode of care.
"IX",45,45.01,"AO14",1)
S ^DGPT(DA(1),"S","AO",X,DA)=""
"IX",45,45.01,"AO14",2)
K ^DGPT(DA(1),"S","AO",X,DA)
"IX",45,45.01,"AO14",2.5)
K ^DGPT(DA(1),"S","AO")
"IX",45,45.01,"AO14",11.1,0)
^.114IA^1^1
"IX",45,45.01,"AO14",11.1,1,0)
1^F^45.01^21^^1^F
"IX",45,45.01,"AO15",0)
45.01^AO15^Index of Operation Codes^MU^^F^IR^I^45.01^^^^^S
"IX",45,45.01,"AO15",.1,0)
^^2^2^3150130^
"IX",45,45.01,"AO15",.1,1,0)
This will allow a quick reference for sorting Operation Codes performed 
"IX",45,45.01,"AO15",.1,2,0)
on a patient for an episode of care.
"IX",45,45.01,"AO15",1)
S ^DGPT(DA(1),"S","AO",X,DA)=""
"IX",45,45.01,"AO15",2)
K ^DGPT(DA(1),"S","AO",X,DA)
"IX",45,45.01,"AO15",2.5)
K ^DGPT(DA(1),"S","AO")
"IX",45,45.01,"AO15",11.1,0)
^.114IA^1^1
"IX",45,45.01,"AO15",11.1,1,0)
1^F^45.01^22^^1^F
"IX",45,45.01,"AO16",0)
45.01^AO16^Index of Operation Codes^MU^^F^IR^I^45.01^^^^^S
"IX",45,45.01,"AO16",.1,0)
^^2^2^3150130^
"IX",45,45.01,"AO16",.1,1,0)
This will allow a quick reference for sorting Operation Codes performed 
"IX",45,45.01,"AO16",.1,2,0)
on a patient for an episode of care.
"IX",45,45.01,"AO16",1)
S ^DGPT(DA(1),"S","AO",X,DA)=""
"IX",45,45.01,"AO16",2)
K ^DGPT(DA(1),"S","AO",X,DA)
"IX",45,45.01,"AO16",2.5)
K ^DGPT(DA(1),"S","AO")
"IX",45,45.01,"AO16",11.1,0)
^.114IA^1^1
"IX",45,45.01,"AO16",11.1,1,0)
1^F^45.01^23^^1^F
"IX",45,45.01,"AO17",0)
45.01^AO17^Index of Operation Codes^MU^^F^IR^I^45.01^^^^^S
"IX",45,45.01,"AO17",.1,0)
^^2^2^3150130^
"IX",45,45.01,"AO17",.1,1,0)
This will allow a quick reference for sorting Operation Codes performed 
"IX",45,45.01,"AO17",.1,2,0)
on a patient for an episode of care.
"IX",45,45.01,"AO17",1)
S ^DGPT(DA(1),"S","AO",X,DA)=""
"IX",45,45.01,"AO17",2)
K ^DGPT(DA(1),"S","AO",X,DA)
"IX",45,45.01,"AO17",2.5)
K ^DGPT(DA(1),"S","AO")
"IX",45,45.01,"AO17",11.1,0)
^.114IA^1^1
"IX",45,45.01,"AO17",11.1,1,0)
1^F^45.01^24^^1^F
"IX",45,45.01,"AO18",0)
45.01^AO18^Index of Operation Codes^MU^^F^IR^I^45.01^^^^^S
"IX",45,45.01,"AO18",.1,0)
^^2^2^3150130^
"IX",45,45.01,"AO18",.1,1,0)
This will allow a quick reference for sorting Operation Codes performed 
"IX",45,45.01,"AO18",.1,2,0)
on a patient for an episode of care.
"IX",45,45.01,"AO18",1)
S ^DGPT(DA(1),"S","AO",X,DA)=""
"IX",45,45.01,"AO18",2)
K ^DGPT(DA(1),"S","AO",X,DA)
"IX",45,45.01,"AO18",2.5)
K ^DGPT(DA(1),"S","AO")
"IX",45,45.01,"AO18",11.1,0)
^.114IA^1^1
"IX",45,45.01,"AO18",11.1,1,0)
1^F^45.01^25^^1^F
"IX",45,45.01,"AO19",0)
45.01^AO19^Index of Operation Codes^MU^^F^IR^I^45.01^^^^^S
"IX",45,45.01,"AO19",.1,0)
^^2^2^3150130^
"IX",45,45.01,"AO19",.1,1,0)
This will allow a quick reference for sorting Operation Codes performed 
"IX",45,45.01,"AO19",.1,2,0)
on a patient for an episode of care.
"IX",45,45.01,"AO19",1)
S ^DGPT(DA(1),"S","AO",X,DA)=""
"IX",45,45.01,"AO19",2)
K ^DGPT(DA(1),"S","AO",X,DA)
"IX",45,45.01,"AO19",2.5)
K ^DGPT(DA(1),"S","AO")
"IX",45,45.01,"AO19",11.1,0)
^.114IA^1^1
"IX",45,45.01,"AO19",11.1,1,0)
1^F^45.01^26^^1^F
"IX",45,45.01,"AO2",0)
45.01^AO2^Index of Operation Codes^MU^^F^IR^I^45.01^^^^^S
"IX",45,45.01,"AO2",.1,0)
^^2^2^3150130^
"IX",45,45.01,"AO2",.1,1,0)
This will allow a quick reference for sorting Operation Codes performed 
"IX",45,45.01,"AO2",.1,2,0)
on a patient for an episode of care.
"IX",45,45.01,"AO2",1)
S ^DGPT(DA(1),"S","AO",X,DA)=""
"IX",45,45.01,"AO2",2)
K ^DGPT(DA(1),"S","AO",X,DA)
"IX",45,45.01,"AO2",2.5)
K ^DGPT(DA(1),"S","AO")
"IX",45,45.01,"AO2",11.1,0)
^.114IA^1^1
"IX",45,45.01,"AO2",11.1,1,0)
1^F^45.01^9^^1^F
"IX",45,45.01,"AO20",0)
45.01^AO20^Index of Operation Codes^MU^^F^IR^I^45.01^^^^^S
"IX",45,45.01,"AO20",.1,0)
^^2^2^3150130^
"IX",45,45.01,"AO20",.1,1,0)
This will allow a quick reference for sorting Operation Codes performed 
"IX",45,45.01,"AO20",.1,2,0)
on a patient for an episode of care.
"IX",45,45.01,"AO20",1)
S ^DGPT(DA(1),"S","AO",X,DA)=""
"IX",45,45.01,"AO20",2)
K ^DGPT(DA(1),"S","AO",X,DA)
"IX",45,45.01,"AO20",2.5)
K ^DGPT(DA(1),"S","AO")
"IX",45,45.01,"AO20",11.1,0)
^.114IA^1^1
"IX",45,45.01,"AO20",11.1,1,0)
1^F^45.01^27^^1^F
"IX",45,45.01,"AO21",0)
45.01^AO21^Index of Operation Codes^MU^^F^IR^I^45.01^^^^^S
"IX",45,45.01,"AO21",.1,0)
^^2^2^3150130^
"IX",45,45.01,"AO21",.1,1,0)
This will allow a quick reference for sorting Operation Codes performed 
"IX",45,45.01,"AO21",.1,2,0)
on a patient for an episode of care.
"IX",45,45.01,"AO21",1)
S ^DGPT(DA(1),"S","AO",X,DA)=""
"IX",45,45.01,"AO21",2)
K ^DGPT(DA(1),"S","AO",X,DA)
"IX",45,45.01,"AO21",2.5)
K ^DGPT(DA(1),"S","AO")
"IX",45,45.01,"AO21",11.1,0)
^.114IA^1^1
"IX",45,45.01,"AO21",11.1,1,0)
1^F^45.01^28^^1^F
"IX",45,45.01,"AO22",0)
45.01^AO22^Index of Operation Codes^MU^^F^IR^I^45.01^^^^^S
"IX",45,45.01,"AO22",.1,0)
^^2^2^3150130^
"IX",45,45.01,"AO22",.1,1,0)
This will allow a quick reference for sorting Operation Codes performed 
"IX",45,45.01,"AO22",.1,2,0)
on a patient for an episode of care.
"IX",45,45.01,"AO22",1)
S ^DGPT(DA(1),"S","AO",X,DA)=""
"IX",45,45.01,"AO22",2)
K ^DGPT(DA(1),"S","AO",X,DA)
"IX",45,45.01,"AO22",2.5)
K ^DGPT(DA(1),"S","AO")
"IX",45,45.01,"AO22",11.1,0)
^.114IA^1^1
"IX",45,45.01,"AO22",11.1,1,0)
1^F^45.01^29^^1^F
"IX",45,45.01,"AO23",0)
45.01^AO23^Index of Operation Codes^MU^^F^IR^I^45.01^^^^^S
"IX",45,45.01,"AO23",.1,0)
^^2^2^3150130^
"IX",45,45.01,"AO23",.1,1,0)
This will allow a quick reference for sorting Operation Codes performed 
"IX",45,45.01,"AO23",.1,2,0)
on a patient for an episode of care.
"IX",45,45.01,"AO23",1)
S ^DGPT(DA(1),"S","AO",X,DA)=""
"IX",45,45.01,"AO23",2)
K ^DGPT(DA(1),"S","AO",X,DA)
"IX",45,45.01,"AO23",2.5)
K ^DGPT(DA(1),"S","AO")
"IX",45,45.01,"AO23",11.1,0)
^.114IA^1^1
"IX",45,45.01,"AO23",11.1,1,0)
1^F^45.01^30^^1^F
"IX",45,45.01,"AO24",0)
45.01^AO24^Index of Operation Codes^MU^^F^IR^I^45.01^^^^^S
"IX",45,45.01,"AO24",.1,0)
^^2^2^3150130^
"IX",45,45.01,"AO24",.1,1,0)
This will allow a quick reference for sorting Operation Codes performed 
"IX",45,45.01,"AO24",.1,2,0)
on a patient for an episode of care.
"IX",45,45.01,"AO24",1)
S ^DGPT(DA(1),"S","AO",X,DA)=""
"IX",45,45.01,"AO24",2)
K ^DGPT(DA(1),"S","AO",X,DA)
"IX",45,45.01,"AO24",2.5)
K ^DGPT(DA(1),"S","AO")
"IX",45,45.01,"AO24",11.1,0)
^.114IA^1^1
"IX",45,45.01,"AO24",11.1,1,0)
1^F^45.01^31^^1^F
"IX",45,45.01,"AO25",0)
45.01^AO25^Index of Operation Codes^MU^^F^IR^I^45.01^^^^^S
"IX",45,45.01,"AO25",.1,0)
^^2^2^3150130^
"IX",45,45.01,"AO25",.1,1,0)
This will allow a quick reference for sorting Operation Codes performed 
"IX",45,45.01,"AO25",.1,2,0)
on a patient for an episode of care.
"IX",45,45.01,"AO25",1)
S ^DGPT(DA(1),"S","AO",X,DA)=""
"IX",45,45.01,"AO25",2)
K ^DGPT(DA(1),"S","AO",X,DA)
"IX",45,45.01,"AO25",2.5)
K ^DGPT(DA(1),"S","AO")
"IX",45,45.01,"AO25",11.1,0)
^.114IA^1^1
"IX",45,45.01,"AO25",11.1,1,0)
1^F^45.01^32^^1^F
"IX",45,45.01,"AO3",0)
45.01^AO3^Index of Operation Codes^MU^^F^IR^I^45.01^^^^^S
"IX",45,45.01,"AO3",.1,0)
^^2^2^3150130^
"IX",45,45.01,"AO3",.1,1,0)
This will allow a quick reference for sorting Operation Codes performed 
"IX",45,45.01,"AO3",.1,2,0)
on a patient for an episode of care.
"IX",45,45.01,"AO3",1)
S ^DGPT(DA(1),"S","AO",X,DA)=""
"IX",45,45.01,"AO3",2)
K ^DGPT(DA(1),"S","AO",X,DA)
"IX",45,45.01,"AO3",2.5)
K ^DGPT(DA(1),"S","AO")
"IX",45,45.01,"AO3",11.1,0)
^.114IA^1^1
"IX",45,45.01,"AO3",11.1,1,0)
1^F^45.01^10^^1^F
"IX",45,45.01,"AO4",0)
45.01^AO4^Index of Operation Codes^MU^^F^IR^I^45.01^^^^^S
"IX",45,45.01,"AO4",.1,0)
^^2^2^3150130^
"IX",45,45.01,"AO4",.1,1,0)
This will allow a quick reference for sorting Operation Codes performed 
"IX",45,45.01,"AO4",.1,2,0)
on a patient for an episode of care.
"IX",45,45.01,"AO4",1)
S ^DGPT(DA(1),"S","AO",X,DA)=""
"IX",45,45.01,"AO4",2)
K ^DGPT(DA(1),"S","AO",X,DA)
"IX",45,45.01,"AO4",2.5)
K ^DGPT(DA(1),"S","AO")
"IX",45,45.01,"AO4",11.1,0)
^.114IA^1^1
"IX",45,45.01,"AO4",11.1,1,0)
1^F^45.01^11^^1^F
"IX",45,45.01,"AO5",0)
45.01^AO5^Index of Operation Codes^MU^^F^IR^I^45.01^^^^^S
"IX",45,45.01,"AO5",.1,0)
^^2^2^3150130^
"IX",45,45.01,"AO5",.1,1,0)
This will allow a quick reference for sorting Operation Codes performed 
"IX",45,45.01,"AO5",.1,2,0)
on a patient for an episode of care.
"IX",45,45.01,"AO5",1)
S ^DGPT(DA(1),"S","AO",X,DA)=""
"IX",45,45.01,"AO5",2)
K ^DGPT(DA(1),"S","AO",X,DA)
"IX",45,45.01,"AO5",2.5)
K ^DGPT(DA(1),"S","AO")
"IX",45,45.01,"AO5",11.1,0)
^.114IA^1^1
"IX",45,45.01,"AO5",11.1,1,0)
1^F^45.01^12^^1^F
"IX",45,45.01,"AO6",0)
45.01^AO6^Index of Operation Codes^MU^^F^IR^I^45.01^^^^^S
"IX",45,45.01,"AO6",.1,0)
^^2^2^3150130^
"IX",45,45.01,"AO6",.1,1,0)
This will allow a quick reference for sorting Operation Codes performed 
"IX",45,45.01,"AO6",.1,2,0)
on a patient for an episode of care.
"IX",45,45.01,"AO6",1)
S ^DGPT(DA(1),"S","AO",X,DA)=""
"IX",45,45.01,"AO6",2)
K ^DGPT(DA(1),"S","AO",X,DA)
"IX",45,45.01,"AO6",2.5)
K ^DGPT(DA(1),"S","AO")
"IX",45,45.01,"AO6",11.1,0)
^.114IA^1^1
"IX",45,45.01,"AO6",11.1,1,0)
1^F^45.01^13^^1^F
"IX",45,45.01,"AO7",0)
45.01^AO7^Index of Operation Codes^MU^^F^IR^I^45.01^^^^^S
"IX",45,45.01,"AO7",.1,0)
^^2^2^3150130^
"IX",45,45.01,"AO7",.1,1,0)
This will allow a quick reference for sorting Operation Codes performed 
"IX",45,45.01,"AO7",.1,2,0)
on a patient for an episode of care.
"IX",45,45.01,"AO7",1)
S ^DGPT(DA(1),"S","AO",X,DA)=""
"IX",45,45.01,"AO7",2)
K ^DGPT(DA(1),"S","AO",X,DA)
"IX",45,45.01,"AO7",2.5)
K ^DGPT(DA(1),"S","AO")
"IX",45,45.01,"AO7",11.1,0)
^.114IA^1^1
"IX",45,45.01,"AO7",11.1,1,0)
1^F^45.01^14^^1^F
"IX",45,45.01,"AO8",0)
45.01^AO8^Index of Operation Codes^MU^^F^IR^I^45.01^^^^^S
"IX",45,45.01,"AO8",.1,0)
^^2^2^3150130^
"IX",45,45.01,"AO8",.1,1,0)
This will allow a quick reference for sorting Operation Codes performed 
"IX",45,45.01,"AO8",.1,2,0)
on a patient for an episode of care.
"IX",45,45.01,"AO8",1)
S ^DGPT(DA(1),"S","AO",X,DA)=""
"IX",45,45.01,"AO8",2)
K ^DGPT(DA(1),"S","AO",X,DA)
"IX",45,45.01,"AO8",2.5)
K ^DGPT(DA(1),"S","AO")
"IX",45,45.01,"AO8",11.1,0)
^.114IA^1^1
"IX",45,45.01,"AO8",11.1,1,0)
1^F^45.01^15^^1^F
"IX",45,45.01,"AO9",0)
45.01^AO9^Index of Operation Codes^MU^^F^IR^I^45.01^^^^^S
"IX",45,45.01,"AO9",.1,0)
^^2^2^3150130^
"IX",45,45.01,"AO9",.1,1,0)
This will allow a quick reference for sorting Operation Codes performed 
"IX",45,45.01,"AO9",.1,2,0)
on a patient for an episode of care.
"IX",45,45.01,"AO9",1)
S ^DGPT(DA(1),"S","AO",X,DA)=""
"IX",45,45.01,"AO9",2)
K ^DGPT(DA(1),"S","AO",X,DA)
"IX",45,45.01,"AO9",2.5)
K ^DGPT(DA(1),"S","AO")
"IX",45,45.01,"AO9",11.1,0)
^.114IA^1^1
"IX",45,45.01,"AO9",11.1,1,0)
1^F^45.01^16^^1^F
"KRN",.402,675,-1)
0^11
"KRN",.402,675,0)
DG601^3141014.1256^^45^^^3150812
"KRN",.402,675,"DR",1,45)
S DGDUP(8)=0;K DGPTIT;S DGHOLD=$S($D(^DGPT(DGPTF,"P",+P(DGZP,1),0)):^(0),1:"");D CENSUS^DGPTIC10(DA);60///^S X=P(DGZP,1);
"KRN",.402,675,"DR",2,45.05)
S:'$D(DGADD) DGADD=0;S:DGADD Y="@25";S:DGJUMP'[1 Y="@2";S DGNFLD="@10";.01;@10;S DGNFLD="@15";1///^D BS^DGPTFM6 S X=DGMOVM K DGMOVM;@15;S:DGJUMP'[2 Y="";@2;S DGNFLD="@25";S Y="@899";@25;I DGADD,$P(DGHOLD,U,5)]"" S Y="@40";
"KRN",.402,675,"DR",2,45.05,1)
S DGNFLD="@40";4;I X K DGPTIT S DGNFLD="@40",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@40;I DGADD,$P(DGHOLD,U,6)]"" S Y="@50";S DGNFLD="@50";5;I X K DGPTIT S DGNFLD="@50",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@50;
"KRN",.402,675,"DR",2,45.05,2)
I DGADD,$P(DGHOLD,U,7)]"" S Y="@60";S DGNFLD="@60";6;I X K DGPTIT S DGNFLD="@60",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@60;I DGADD,$P(DGHOLD,U,8)]"" S Y="@70";S DGNFLD="@70";7;
"KRN",.402,675,"DR",2,45.05,3)
I X K DGPTIT S DGNFLD="@70",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@70;I DGADD,$P(DGHOLD,U,9)]"" S Y="@80";S DGNFLD="@80";8;I X K DGPTIT S DGNFLD="@80",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@80;K DGNFLD,DGDUP,DGADD S Y="";@800;
"KRN",.402,675,"DR",2,45.05,4)
D SCAN^DGPTSCAN;I '$D(DGBPC(8))!(DGDUP(8)) S Y="@899";3;S:X]"" DGDUP(8)=1 S:X']"" Y="@800";@899;K DGPTIT S Y=DGNFLD;@999;S Y=DGNFLD;
"KRN",.402,2782,-1)
0^6
"KRN",.402,2782,0)
DG501-10D^3141018.122^"@"^45^^"@"^3150728
"KRN",.402,2782,"AR",45.02,1198)
1^DGX510
"KRN",.402,2782,"AR",45.02,1199)
2^DGX510
"KRN",.402,2782,"AR",45.02,1200)
3^DGX510
"KRN",.402,2782,"AR",45.02,1201)
4^DGX510
"KRN",.402,2782,"AR",45.02,1202)
5^DGX510
"KRN",.402,2782,"AR",45.02,1203)
6^DGX510
"KRN",.402,2782,"AR",45.02,1204)
7^DGX510
"KRN",.402,2782,"AR",45.02,1205)
8^DGX510
"KRN",.402,2782,"AR",45.02,1206)
9^DGX510
"KRN",.402,2782,"AR",45.02,1207)
10^DGX510
"KRN",.402,2782,"AR",45.02,1231)
11^DGX510
"KRN",.402,2782,"AR",45.02,1232)
12^DGX510
"KRN",.402,2782,"AR",45.02,1233)
13^DGX510
"KRN",.402,2782,"AR",45.02,1234)
14^DGX510
"KRN",.402,2782,"AR",45.02,1235)
15^DGX510
"KRN",.402,2782,"AR",45.02,1236)
16^DGX510
"KRN",.402,2782,"AR",45.02,1237)
17^DGX510
"KRN",.402,2782,"AR",45.02,1238)
18^DGX510
"KRN",.402,2782,"AR",45.02,1239)
19^DGX510
"KRN",.402,2782,"AR",45.02,1240)
20^DGX510
"KRN",.402,2782,"AR",45.02,1241)
21^DGX510
"KRN",.402,2782,"AR",45.02,1242)
22^DGX510
"KRN",.402,2782,"AR",45.02,1243)
23^DGX510
"KRN",.402,2782,"AR",45.02,1244)
24^DGX510
"KRN",.402,2782,"AR",45.02,1245)
25^DGX510
"KRN",.402,2782,"DIAB",1,1,45.02,1)
TREATED FOR SC CONDITION//NO;"WAS TREATMENT FOR A SERVICE CONNECTED CONDITION?"
"KRN",.402,2782,"DIAB",1,1,45.02,30)
TREATED FOR AO CONDITION;"WAS TREATMENT RELATED TO AGENT ORANGE EXPOSURE?"
"KRN",.402,2782,"DIAB",1,1,45.02,31)
EXPOSED TO SW ASIA CONDITIONS;"WAS TREATMENT RELATED TO SERVICE IN SW ASIA?"
"KRN",.402,2782,"DIAB",1,1,45.02,32)
29;"WAS TREATMENT RELATED TO MILITARY SEXUAL TRAUMA?"
"KRN",.402,2782,"DIAB",5,1,45.02,29)
POTENTIALLY RELATED TO COMBAT//YES;"WAS TREATMENT RELATED TO COMBAT?"
"KRN",.402,2782,"DIAB",7,1,45.02,30)
TREATED FOR IR CONDITION;"WAS TREATMENT RELATED TO IONIZING RADIATION EXPOSURE?"
"KRN",.402,2782,"DIAB",7,1,45.02,31)
32;"WAS TREATMENT RELATED TO PROJ 112/SHAD?"
"KRN",.402,2782,"DIAB",7,1,45.02,32)
30;"WAS TREATMENT RELATED TO HEAD AND/OR NECK CANCER?"
"KRN",.402,2782,"DR",1,45)
F X=2:1:7 S DGDUP(X)=0;K DGPTIT;I $G(DGPTF)<1 S DGPTF=D0 W !!,"Editing PTF Record "_DGPTF_" in VA FileManager.";I $G(DGMOV)<1 S DGMOV=1 W !!,"Editing Discharge Movement in VA FileManager";I $G(DFN)<1 S DFN=+$G(^DGPT(D0,0));
"KRN",.402,2782,"DR",1,45,1)
D CENSUS^DGPTIC10(DA);S DGJUMP=$G(DGJUMP);S DGXX="",DGTYPE=$P(^DGPT(D0,0),U,11),DGCODSYS=$$CODESYS^DGPTIC10(D0);S DGHOLD=$G(^DGPT(DGPTF,"M",+DGMOV,0)),DGHOLD1=$G(^(81));50///^S X=+DGMOV;
"KRN",.402,2782,"DR",2,45.02)
S:'$D(DGADD) DGADD=0;S:DGJUMP'[1 Y="@2";S:DGADD Y="@20";S DGNFLD="@10";3;@10;S DGNFLD="@15";4;I $D(^DPT(+^DGPT(DGPTF,0),.3)),$P(^(.3),U)="Y" S Y="@15";18////^S X=2;S (DGNFLD,Y)="@20";@15;
"KRN",.402,2782,"DR",2,45.02,1)
18WAS TREATMENT FOR A SERVICE CONNECTED CONDITION?~//NO;@20;S:DGJUMP'[2 Y="";@2;S DGNFLD="@25";S Y="@9000";@25;I DGADD,$P(DGHOLD,U,5)]"" S Y="@40";S DGNFLD="@40";5;S DGXX=X;I DGXX="" S Y="@26";82.01;@26;S X=DGXX;
"KRN",.402,2782,"DR",2,45.02,2)
I X K DGPTIT S DGNFLD="@40",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@40;I DGADD,$P(DGHOLD,U,6)]"" S Y="@50";S DGNFLD="@50";6;S DGXX=X;I DGXX="" S Y="@41";82.02;@41;S X=DGXX;
"KRN",.402,2782,"DR",2,45.02,3)
I X K DGPTIT S DGNFLD="@50",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@50;I DGADD,$P(DGHOLD,U,7)]"" S Y="@60";S DGNFLD="@60";7;S DGXX=X;I DGXX="" S Y="@51";82.03;@51;S X=DGXX;
"KRN",.402,2782,"DR",2,45.02,4)
I X K DGPTIT S DGNFLD="@60",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@60;I DGADD,$P(DGHOLD,U,8)]"" S Y="@70";S DGNFLD="@70";8;S DGXX=X;I DGXX="" S Y="@61";82.04;@61;S X=DGXX;
"KRN",.402,2782,"DR",2,45.02,5)
I X K DGPTIT S DGNFLD="@70",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@70;I DGADD,$P(DGHOLD,U,9)]"" S Y="@80";S DGNFLD="@80";9;S DGXX=X;I DGXX="" S Y="@71";82.05;@71;S X=DGXX;
"KRN",.402,2782,"DR",2,45.02,6)
I X K DGPTIT S DGNFLD="@80",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@80;I DGCODSYS="ICD9"!(DGTYPE=2) S Y="@280";I DGADD,$P(DGHOLD,U,11)]"" S Y="@90";S DGNFLD="@90";11;S DGXX=X;I DGXX="" S Y="@81";82.06;@81;S X=DGXX;
"KRN",.402,2782,"DR",2,45.02,7)
I X K DGPTIT S DGNFLD="@90",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@90;I DGADD,$P(DGHOLD,U,12)]"" S Y="@100";S DGNFLD="@100";12;S DGXX=X;I DGXX="" S Y="@91";82.07;@91;S X=DGXX;
"KRN",.402,2782,"DR",2,45.02,8)
I X K DGPTIT S DGNFLD="@100",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@100;I DGADD,$P(DGHOLD,U,13)]"" S Y="@110";S DGNFLD="@110";13;S DGXX=X;I DGXX="" S Y="@101";82.08;@101;S X=DGXX;
"KRN",.402,2782,"DR",2,45.02,9)
I X K DGPTIT S DGNFLD="@110",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@110;I DGADD,$P(DGHOLD,U,14)]"" S Y="@120";S DGNFLD="@120";14;S DGXX=X;I DGXX="" S Y="@111";82.09;@111;S X=DGXX;
"KRN",.402,2782,"DR",2,45.02,10)
I X K DGPTIT S DGNFLD="@120",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@120;I DGADD,$P(DGHOLD,U,15)]"" S Y="@130";S DGNFLD="@130";15;S DGXX=X;I DGXX="" S Y="@121";82.1;@121;S X=DGXX;
"KRN",.402,2782,"DR",2,45.02,11)
I X K DGPTIT S DGNFLD="@130",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@130;I DGADD,$P(DGHOLD1,U,1)]"" S Y="@140";S DGNFLD="@140";81.01;S DGXX=X;I DGXX="" S Y="@131";82.11;@131;S X=DGXX;
"KRN",.402,2782,"DR",2,45.02,12)
I X K DGPTIT S DGNFLD="@140",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@140;I DGADD,$P(DGHOLD1,U,2)]"" S Y="@150";S DGNFLD="@150";81.02;S DGXX=X;I DGXX="" S Y="@141";82.12;@141;S X=DGXX;
"KRN",.402,2782,"DR",2,45.02,13)
I X K DGPTIT S DGNFLD="@150",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@150;I DGADD,$P(DGHOLD1,U,3)]"" S Y="@160";S DGNFLD="@160";81.03;S DGXX=X;I DGXX="" S Y="@151";82.13;@151;S X=DGXX;
"KRN",.402,2782,"DR",2,45.02,14)
I X K DGPTIT S DGNFLD="@160",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@160;I DGADD,$P(DGHOLD1,U,4)]"" S Y="@170";S DGNFLD="@170";81.04;S DGXX=X;I DGXX="" S Y="@161";82.14;@161;S X=DGXX;
"KRN",.402,2782,"DR",2,45.02,15)
I X K DGPTIT S DGNFLD="@170",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@170;I DGADD,$P(DGHOLD1,U,5)]"" S Y="@180";S DGNFLD="@180";81.05;S DGXX=X;I DGXX="" S Y="@171";82.15;@171;S X=DGXX;
"KRN",.402,2782,"DR",2,45.02,16)
I X K DGPTIT S DGNFLD="@180",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@180;I DGADD,$P(DGHOLD1,U,6)]"" S Y="@190";S DGNFLD="@190";81.06;S DGXX=X;I DGXX="" S Y="@181";82.16;@181;S X=DGXX;
"KRN",.402,2782,"DR",2,45.02,17)
I X K DGPTIT S DGNFLD="@190",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@190;I DGADD,$P(DGHOLD1,U,7)]"" S Y="@200";S DGNFLD="@200";81.07;S DGXX=X;I DGXX="" S Y="@191";82.17;@191;S X=DGXX;
"KRN",.402,2782,"DR",2,45.02,18)
I X K DGPTIT S DGNFLD="@200",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@200;I DGADD,$P(DGHOLD1,U,8)]"" S Y="@210";S DGNFLD="@210";81.08;S DGXX=X;I DGCODSYS="ICD9"!(DGTYPE=2)!(DGXX="") S Y="@201";82.18;@201;S X=DGXX;
"KRN",.402,2782,"DR",2,45.02,19)
I X K DGPTIT S DGNFLD="@210",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@210;I DGADD,$P(DGHOLD1,U,9)]"" S Y="@220";S DGNFLD="@220";81.09;S DGXX=X;I DGXX="" S Y="@211";82.19;@211;S X=DGXX;
"KRN",.402,2782,"DR",2,45.02,20)
I X K DGPTIT S DGNFLD="@220",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@220;I DGADD,$P(DGHOLD1,U,10)]"" S Y="@230";S DGNFLD="@230";81.1;S DGXX=X;I DGXX="" S Y="@221";82.2;@221;S X=DGXX;
"KRN",.402,2782,"DR",2,45.02,21)
I X K DGPTIT S DGNFLD="@230",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@230;I DGADD,$P(DGHOLD1,U,11)]"" S Y="@240";S DGNFLD="@240";81.11;S DGXX=X;I DGXX="" S Y="@231";82.21;@231;S X=DGXX;
"KRN",.402,2782,"DR",2,45.02,22)
I X K DGPTIT S DGNFLD="@240",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@240;I DGADD,$P(DGHOLD1,U,12)]"" S Y="@250";S DGNFLD="@250";81.12;S DGXX=X;I DGXX="" S Y="@241";82.22;@241;S X=DGXX;
"KRN",.402,2782,"DR",2,45.02,23)
I X K DGPTIT S DGNFLD="@250",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@250;I DGADD,$P(DGHOLD1,U,13)]"" S Y="@260";S DGNFLD="@260";81.13;S DGXX=X;I DGXX="" S Y="@251";82.23;@251;S X=DGXX;
"KRN",.402,2782,"DR",2,45.02,24)
I X K DGPTIT S DGNFLD="@260",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@260;I DGADD,$P(DGHOLD1,U,14)]"" S Y="@270";S DGNFLD="@270";81.14;S DGXX=X;I DGXX="" S Y="@261";82.24;@261;S X=DGXX;
"KRN",.402,2782,"DR",2,45.02,25)
I X K DGPTIT S DGNFLD="@270",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@270;I DGADD,$P(DGHOLD1,U,15)]"" S Y="@280";S DGNFLD="@280";81.15;S DGXX=X;I DGXX="" S Y="@271";82.25;@271;S X=DGXX;
"KRN",.402,2782,"DR",2,45.02,26)
I X K DGPTIT S DGNFLD="@280",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@280;K DGNFLD,DGDUP,DGADD S Y="";@8000;D SCAN^DGPTSCAN S:'$D(DGBPC) Y="@8990";I '$D(DGBPC(2))!(DGDUP(2)) S Y="@8100";300.02;S:X]"" DGDUP(2)=1;@8100;
"KRN",.402,2782,"DR",2,45.02,27)
I '$D(DGBPC(3))!(DGDUP(3)) S Y="@8200";300.03;S:X]"" DGDUP(3)=1;@8200;I '$D(DGBPC(4))!(DGDUP(4)) S Y="@8300";D DRUG^DGPTSC01 I $D(DGTX) S Y="@8250";300.04;S:X]"" DGDUP(4)=1;S Y="@8300";@8250;300.04//^S X=DGTX;S:X]"" DGDUP(4)=1;
"KRN",.402,2782,"DR",2,45.02,28)
@8300;I '$D(DGBPC(5))!(DGDUP(5)) S Y="@8400";300.05;S:X]"" DGDUP(5)=1;@8400;I '$D(DGBPC(6))!(DGDUP(6)) S Y="@8500";300.06;S:X]"" DGDUP(6)=1;@8500;I '$D(DGBPC(7))!(DGDUP(7)) S Y="@8990";300.07;S:X]"" DGDUP(7)=1;@8990;
"KRN",.402,2782,"DR",2,45.02,29)
K DGPTIT,DGTX S Y=DGNFLD;@9000;K DGEXQ D CHQUES^DGPTSPQ I '$D(DGEXQ) S Y="@9999";I '$D(DGEXQ(6)) S Y="@9040";31WAS TREATMENT RELATED TO COMBAT?~//YES;S Y="@9050";@9040;31///@;@9050;I '$D(DGEXQ(1)) S Y="@9100";
"KRN",.402,2782,"DR",2,45.02,30)
26WAS TREATMENT RELATED TO AGENT ORANGE EXPOSURE?~;S Y="@9150";@9100;26///@;@9150;I '$D(DGEXQ(2)) S Y="@9200";27WAS TREATMENT RELATED TO IONIZING RADIATION EXPOSURE?~;S Y="@9250";@9200;27///@;@9250;I '$D(DGEXQ(3)) S Y="@9300";
"KRN",.402,2782,"DR",2,45.02,31)
28WAS TREATMENT RELATED TO SERVICE IN SW ASIA?~;S Y="@9350";@9300;28///@;@9350;I '$D(DGEXQ(7)) S Y="@9400";32WAS TREATMENT RELATED TO PROJ 112/SHAD?~;S Y="@9450";@9400;32///@;@9450;I '$D(DGEXQ(4)) S Y="@9500";
"KRN",.402,2782,"DR",2,45.02,32)
29WAS TREATMENT RELATED TO MILITARY SEXUAL TRAUMA?~;S Y="@9550";@9500;29///@;@9550;I '$D(DGEXQ(5)) S Y="@9600";30WAS TREATMENT RELATED TO HEAD AND/OR NECK CANCER?~;I X["Y",$D(DFN),$$FILEHNC^DGNTAPI1(DFN);S Y="@9650";@9600;30///@;
"KRN",.402,2782,"DR",2,45.02,33)
@9650;@9999;K DGEXQ S Y=DGNFLD;
"KRN",.402,2782,"ROU")
^DGX5
"KRN",.402,2782,"ROUOLD")
DGX5
"KRN",.402,2783,-1)
0^10
"KRN",.402,2783,0)
DG701-10D^3150317.1247^^45^^^3150812
"KRN",.402,2783,"%D",0)
^^1^1^2950809^
"KRN",.402,2783,"%D",1,0)
 
"KRN",.402,2783,"AR",45,1196)
1^DGX77
"KRN",.402,2783,"AR",45,1208)
2^DGX77
"KRN",.402,2783,"AR",45,1209)
3^DGX77
"KRN",.402,2783,"AR",45,1210)
4^DGX77
"KRN",.402,2783,"AR",45,1211)
5^DGX77
"KRN",.402,2783,"AR",45,1212)
6^DGX77
"KRN",.402,2783,"AR",45,1213)
7^DGX77
"KRN",.402,2783,"AR",45,1214)
8^DGX77
"KRN",.402,2783,"AR",45,1215)
9^DGX77
"KRN",.402,2783,"AR",45,1216)
10^DGX77
"KRN",.402,2783,"AR",45,1217)
11^DGX77
"KRN",.402,2783,"AR",45,1218)
12^DGX77
"KRN",.402,2783,"AR",45,1219)
13^DGX77
"KRN",.402,2783,"AR",45,1220)
14^DGX77
"KRN",.402,2783,"AR",45,1246)
15^DGX77
"KRN",.402,2783,"AR",45,1247)
16^DGX77
"KRN",.402,2783,"AR",45,1248)
17^DGX77
"KRN",.402,2783,"AR",45,1249)
18^DGX77
"KRN",.402,2783,"AR",45,1250)
19^DGX77
"KRN",.402,2783,"AR",45,1251)
20^DGX77
"KRN",.402,2783,"AR",45,1252)
1^DGX78
"KRN",.402,2783,"AR",45,1253)
2^DGX78
"KRN",.402,2783,"AR",45,1254)
3^DGX78
"KRN",.402,2783,"AR",45,1255)
4^DGX78
"KRN",.402,2783,"AR",45,1256)
5^DGX78
"KRN",.402,2783,"DR",1,45)
F X=2:1:7 S DGDUP(X)=0;K DGPTIT D FLAGCHK^DGPTSCAN;S DGNFLD="@10";S DGXX="",DGTYPE=$P(^DGPT(D0,0),U,11),DGCODSYS=$$CODESYS^DGPTIC10(D0);D CENSUS^DGPTIC10(DA);79;S DGXX=X;I DGXX="" S Y="@1";82.01;@1;S X=DGXX;
"KRN",.402,2783,"DR",1,45,1)
I X K DGPTIT S DGNFLD="@10",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,70)),U,10)_$P($G(^DGPT(D0,70)),U,16,24)_$P($G(^DGPT(D0,71)),U,1,3)?."^" Y="@240";@10;S DGNFLD="@20";79.16;S DGXX=X;I DGXX="" S Y="@11";82.02;@11;
"KRN",.402,2783,"DR",1,45,2)
S X=DGXX;I X K DGPTIT S DGNFLD="@20",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,70)),U,16,24)_$P($G(^DGPT(D0,71)),U,1,15)?."^" Y="@240";@20;S DGNFLD="@30";79.17;S DGXX=X;I DGXX="" S Y="@21";82.03;@21;S X=DGXX;
"KRN",.402,2783,"DR",1,45,3)
I X K DGPTIT S DGNFLD="@30",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,70)),U,17,24)_$P($G(^DGPT(D0,71)),U,1,15)?."^" Y="@240";@30;S DGNFLD="@40";79.18;S DGXX=X;I DGXX="" S Y="@31";82.04;@31;S X=DGXX;
"KRN",.402,2783,"DR",1,45,4)
I X K DGPTIT S DGNFLD="@40",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,70)),U,18,24)_$P($G(^DGPT(D0,71)),U,1,15)?."^" Y="@240";@40;S DGNFLD="@50";79.19;S DGXX=X;I DGXX="" S Y="@41";82.05;@41;S X=DGXX;
"KRN",.402,2783,"DR",1,45,5)
I X K DGPTIT S DGNFLD="@50",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,70)),U,19,24)_$P($G(^DGPT(D0,71)),U,1,15)?."^" Y="@240";@50;S DGNFLD="@55";79.201;S DGXX=X;I DGXX="" S Y="@51";82.06;@51;S X=DGXX;
"KRN",.402,2783,"DR",1,45,6)
I X K DGPTIT S DGNFLD="@55",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,70)),U,20,24)_$P($G(^DGPT(D0,71)),U,1,15)?."^" Y="@240";@55;S DGNFLD="@60";79.21;S DGXX=X;I DGXX="" S Y="@56";82.07;@56;S X=DGXX;
"KRN",.402,2783,"DR",1,45,7)
I X K DGPTIT S DGNFLD="@60",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,70)),U,21,24)_$P($G(^DGPT(D0,71)),U,1,15)?."^" Y="@240";@60;S DGNFLD="@70";79.22;S DGXX=X;I DGXX="" S Y="@61";82.08;@61;S X=DGXX;
"KRN",.402,2783,"DR",1,45,8)
I X K DGPTIT S DGNFLD="@70",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,70)),U,22,24)_$P($G(^DGPT(D0,71)),U,1,15)?."^" Y="@240";@70;S DGNFLD="@80";79.23;S DGXX=X;I DGXX="" S Y="@71";82.09;@71;S X=DGXX;
"KRN",.402,2783,"DR",1,45,9)
I X K DGPTIT S DGNFLD="@80",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,70)),U,23,24)_$P($G(^DGPT(D0,71)),U,1,15)?."^" Y="@240";@80;S DGNFLD="@90";79.24;S DGXX=X;I DGXX="" S Y="@81";82.1;@81;S X=DGXX;
"KRN",.402,2783,"DR",1,45,10)
I X K DGPTIT S DGNFLD="@90",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,70)),U,24)_$P($G(^DGPT(D0,71)),U,1,15)?."^" Y="@240";@90;S DGNFLD="@100";79.241;S DGXX=X;I DGXX="" S Y="@91";82.11;@91;S X=DGXX;
"KRN",.402,2783,"DR",1,45,11)
I X K DGPTIT S DGNFLD="@100",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,71)),U,1,15)?."^" Y="@240";@100;S DGNFLD="@110";79.242;S DGXX=X;I DGXX="" S Y="@101";82.12;@101;S X=DGXX;
"KRN",.402,2783,"DR",1,45,12)
I X K DGPTIT S DGNFLD="@110",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,71)),U,2,15)?."^" Y="@240";@110;S DGNFLD="@120";79.243;S DGXX=X;I DGXX="" S Y="@111";82.13;@111;S X=DGXX;
"KRN",.402,2783,"DR",1,45,13)
I X K DGPTIT S DGNFLD="@120",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,71)),U,3,15)?."^" Y="@240";@120;S DGNFLD="@130";79.244;S DGXX=X;I DGXX="" S Y="@121";82.14;@121;S X=DGXX;
"KRN",.402,2783,"DR",1,45,14)
I X K DGPTIT S DGNFLD="@130",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,71)),U,4,15)?."^" Y="@240";@130;S DGNFLD="@140";79.245;S DGXX=X;I DGXX="" S Y="@131";82.15;@131;S X=DGXX;
"KRN",.402,2783,"DR",1,45,15)
I X K DGPTIT S DGNFLD="@140",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,71)),U,5,15)?."^" Y="@240";@140;S DGNFLD="@150";79.246;S DGXX=X;I DGXX="" S Y="@141";82.16;@141;S X=DGXX;
"KRN",.402,2783,"DR",1,45,16)
I X K DGPTIT S DGNFLD="@150",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,71)),U,6,15)?."^" Y="@240";@150;S DGNFLD="@160";79.247;S DGXX=X;I DGXX="" S Y="@151";82.17;@151;S X=DGXX;
"KRN",.402,2783,"DR",1,45,17)
I X K DGPTIT S DGNFLD="@160",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,71)),U,7,15)?."^" Y="@240";@160;S DGNFLD="@170";79.248;S DGXX=X;I DGXX="" S Y="@161";82.18;@161;S X=DGXX;
"KRN",.402,2783,"DR",1,45,18)
I X K DGPTIT S DGNFLD="@170",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,71)),U,8,15)?."^" Y="@240";@170;S DGNFLD="@180";79.249;S DGXX=X;I DGXX="" S Y="@171";82.19;@171;S X=DGXX;
"KRN",.402,2783,"DR",1,45,19)
I X K DGPTIT S DGNFLD="@180",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,71)),U,9,15)?."^" Y="@240";@180;S DGNFLD="@190";79.2491;S DGXX=X;I DGXX="" S Y="@181";82.2;@181;S X=DGXX;
"KRN",.402,2783,"DR",1,45,20)
I X K DGPTIT S DGNFLD="@190",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,71)),U,10,15)?."^" Y="@240";@190;S DGNFLD="@200";79.24911;S DGXX=X;I DGXX="" S Y="@191";82.21;@191;S X=DGXX;
"KRN",.402,2783,"DR",1,45,21)
I X K DGPTIT S DGNFLD="@200",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,71)),U,11,15)?."^" Y="@240";@200;S DGNFLD="@210";79.24912;S DGXX=X;I DGXX="" S Y="@201";82.22;@201;S X=DGXX;
"KRN",.402,2783,"DR",1,45,22)
I X K DGPTIT S DGNFLD="@210",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,71)),U,12,15)?."^" Y="@240";@210;S DGNFLD="@220";79.24913;S DGXX=X;I DGXX="" S Y="@211";82.23;@211;S X=DGXX;
"KRN",.402,2783,"DR",1,45,23)
I X K DGPTIT S DGNFLD="@220",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,71)),U,13,15)?."^" Y="@240";@220;S DGNFLD="@230";79.24914;S DGXX=X;I DGXX="" S Y="@221";82.24;@221;S X=DGXX;
"KRN",.402,2783,"DR",1,45,24)
I X K DGPTIT S DGNFLD="@230",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,71)),U,14,15)?."^" Y="@240";@230;S DGNFLD="@240";79.24915;S DGXX=X;I DGXX="" S Y="@231";82.25;@231;S X=DGXX;
"KRN",.402,2783,"DR",1,45,25)
I X K DGPTIT S DGNFLD="@240",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";@240;K DGNFLD,DGDUP S Y="";@800;D SCAN^DGPTSCAN,ANYPSY^DGPTSCAN S:'$D(DGBPC) Y="@890";I '$D(DGBPC(2))!(DGDUP(2)) S Y="@820";I $P(DG701,U,2)]"" S Y="@820";300.02;
"KRN",.402,2783,"DR",1,45,26)
S:X]"" DGDUP(2)=1;@820;I '$D(DGBPC(3))!(DGDUP(3)) S Y="@840";I $P(DG701,U,3)]"" S Y="@840";300.03;S:X]"" DGDUP(3)=1;@840;I '$D(DGBPC(4))!(DGDUP(4)) S Y="@860";I $P(DG701,U,4)]"" S Y="@860";D DRUG^DGPTSC01 I $D(DGTX) S Y="@850";
"KRN",.402,2783,"DR",1,45,27)
300.04;S:X]"" DGDUP(4)=1;S Y="@860";@850;300.04//^S X=DGTX;S:X]"" DGDUP(4)=1;@860;I '$D(DGPBC(5))!(DGDUP(5)) S Y="@870";I $P(DG701,U,5)]"" S Y="@870";300.05;S:X]"" DGDUP(5)=1;@870;I '$D(DGBPC(6))!(DGDUP(6)) S Y="@880";
"KRN",.402,2783,"DR",1,45,28)
I $P(DG701,U,6)]"" S Y="@880";300.06;S:X]"" DGDUP(6)=1;@880;I '$D(DGBPC(7))!(DGDUP(7)) S Y="@890";I $P(DG701,U,7)]"" S Y="@890";300.07;S:X]"" DGDUP(7)=1;@890;K DGIT,DGPTIT S Y=DGNFLD;
"KRN",.402,2783,"ROU")
^DGX7
"KRN",.402,2783,"ROUOLD")
DGX7
"KRN",.402,2784,-1)
0^7
"KRN",.402,2784,0)
DG501F-10D^3141018.0128^@^45^^@^3150812
"KRN",.402,2784,"AR",45.02,1198)
1^DGX5FD9
"KRN",.402,2784,"AR",45.02,1199)
2^DGX5FD9
"KRN",.402,2784,"AR",45.02,1200)
3^DGX5FD9
"KRN",.402,2784,"AR",45.02,1201)
4^DGX5FD9
"KRN",.402,2784,"AR",45.02,1202)
5^DGX5FD9
"KRN",.402,2784,"AR",45.02,1203)
6^DGX5FD9
"KRN",.402,2784,"AR",45.02,1204)
7^DGX5FD9
"KRN",.402,2784,"AR",45.02,1205)
8^DGX5FD9
"KRN",.402,2784,"AR",45.02,1206)
9^DGX5FD9
"KRN",.402,2784,"AR",45.02,1207)
10^DGX5FD9
"KRN",.402,2784,"AR",45.02,1231)
11^DGX5FD9
"KRN",.402,2784,"AR",45.02,1232)
12^DGX5FD9
"KRN",.402,2784,"AR",45.02,1233)
13^DGX5FD9
"KRN",.402,2784,"AR",45.02,1234)
14^DGX5FD9
"KRN",.402,2784,"AR",45.02,1235)
15^DGX5FD9
"KRN",.402,2784,"AR",45.02,1236)
16^DGX5FD9
"KRN",.402,2784,"AR",45.02,1237)
17^DGX5FD9
"KRN",.402,2784,"AR",45.02,1238)
18^DGX5FD9
"KRN",.402,2784,"AR",45.02,1239)
19^DGX5FD9
"KRN",.402,2784,"AR",45.02,1240)
20^DGX5FD9
"KRN",.402,2784,"AR",45.02,1241)
21^DGX5FD9
"KRN",.402,2784,"AR",45.02,1242)
22^DGX5FD9
"KRN",.402,2784,"AR",45.02,1243)
23^DGX5FD9
"KRN",.402,2784,"AR",45.02,1244)
24^DGX5FD9
"KRN",.402,2784,"AR",45.02,1245)
25^DGX5FD9
"KRN",.402,2784,"DIAB",1,1,45.02,1)
TREATED FOR SC CONDITION//NO;"WAS TREATMENT FOR A SERVICE CONNECTED CONDITION?"
"KRN",.402,2784,"DIAB",1,1,45.02,30)
TREATED FOR AO CONDITION;"WAS TREATMENT RELATED TO AGENT ORANGE EXPOSURE?"
"KRN",.402,2784,"DIAB",1,1,45.02,31)
EXPOSED TO SW ASIA CONDITIONS;"WAS TREATMENT RELATED TO SERVICE IN SW ASIA?"
"KRN",.402,2784,"DIAB",1,1,45.02,32)
29;"WAS TREATMENT RELATED TO MILITARY SEXUAL TRAUMA?"
"KRN",.402,2784,"DIAB",5,1,45.02,29)
POTENTIALLY RELATED TO COMBAT//YES;"WAS TREATMENT RELATED TO COMBAT?"
"KRN",.402,2784,"DIAB",7,1,45.02,30)
TREATED FOR IR CONDITION;"WAS TREATMENT RELATED TO IONIZING RADIATION EXPOSURE?"
"KRN",.402,2784,"DIAB",7,1,45.02,31)
32;"WAS TREATMENT RELATED TO PROJ 112/SHAD?"
"KRN",.402,2784,"DIAB",7,1,45.02,32)
30;"WAS TREATMENT RELATED TO HEAD AND/OR NECK CANCER?"
"KRN",.402,2784,"DR",1,45)
F X=2:1:7 S DGDUP(X)=0;K DGPTIT;I $G(DGPTF)<1 S DGPTF=D0 W !!,"Editing PTF Record "_DGPTF_" in VA FileManager.";I $G(DGMOV)<1 S DGMOV=1 W !!,"Editing Discharge Movement in VA FileManager";I $G(DFN)<1 S DFN=+$G(^DGPT(D0,0));
"KRN",.402,2784,"DR",1,45,1)
D CENSUS^DGPTIC10(DA);S DGJUMP=$G(DGJUMP);S DGXX="",DGTYPE=$P(^DGPT(D0,0),U,11),DGCODSYS=$$CODESYS^DGPTIC10(D0);S DGHOLD=$G(^DGPT(DGPTF,"M",+DGMOV,0)) S:DGHOLD]"" DGHOLD1=$G(^(81));S:'$D(DGADD) DGADD=0;S DGNFLD="@10";
"KRN",.402,2784,"DR",1,45,2)
50///^S X=+DGMOV;
"KRN",.402,2784,"DR",2,45.02)
S:DGJUMP'[1 Y="@2";10;@10;S DGNFLD="@15";2;@15;S DGNFLD="@16";3;@16;S DGNFLD="@17";4;@17;S:DGJUMP'[2 Y=0;@2;I $D(^DPT(+^DGPT(DGPTF,0),.3)),$P(^(.3),U)="Y" S (DGNFLD,Y)="@25";18////^S X=2;S (DGNFLD,Y)="@27";@25;
"KRN",.402,2784,"DR",2,45.02,1)
18WAS TREATMENT FOR A SERVICE CONNECTED CONDITION?~//NO;@27;S DGNFLD="@28";S Y="@9000";@28;I DGADD,$P(DGHOLD,U,5)]"" S Y="@40";S DGNFLD="@40";5;S DGXX=X;I DGXX="" S Y="@26";82.01;@26;S X=DGXX;
"KRN",.402,2784,"DR",2,45.02,2)
I X K DGPTIT S DGNFLD="@40",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@40;I DGADD,$P(DGHOLD,U,6)]"" S Y="@50";S DGNFLD="@50";6;S DGXX=X;I DGXX="" S Y="@41";82.02;@41;S X=DGXX;
"KRN",.402,2784,"DR",2,45.02,3)
I X K DGPTIT S DGNFLD="@50",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@50;I DGADD,$P(DGHOLD,U,7)]"" S Y="@60";S DGNFLD="@60";7;S DGXX=X;I DGXX="" S Y="@51";82.03;@51;S X=DGXX;
"KRN",.402,2784,"DR",2,45.02,4)
I X K DGPTIT S DGNFLD="@60",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@60;I DGADD,$P(DGHOLD,U,8)]"" S Y="@70";S DGNFLD="@70";8;S DGXX=X;I DGXX="" S Y="@61";82.04;@61;S X=DGXX;
"KRN",.402,2784,"DR",2,45.02,5)
I X K DGPTIT S DGNFLD="@70",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@70;I DGADD,$P(DGHOLD,U,9)]"" S Y="@80";S DGNFLD="@80";9;S DGXX=X;I DGXX="" S Y="@71";82.05;@71;S X=DGXX;
"KRN",.402,2784,"DR",2,45.02,6)
I X K DGPTIT S DGNFLD="@80",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@80;I DGADD,$P(DGHOLD,U,11)]"" S Y="@90";S DGNFLD="@90";11;S DGXX=X;I DGXX="" S Y="@81";82.06;@81;S X=DGXX;
"KRN",.402,2784,"DR",2,45.02,7)
I X K DGPTIT S DGNFLD="@90",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@90;I DGADD,$P(DGHOLD,U,12)]"" S Y="@100";S DGNFLD="@100";12;S DGXX=X;I DGXX="" S Y="@91";82.07;@91;S X=DGXX;
"KRN",.402,2784,"DR",2,45.02,8)
I X K DGPTIT S DGNFLD="@100",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@100;I DGADD,$P(DGHOLD,U,13)]"" S Y="@110";S DGNFLD="@110";13;S DGXX=X;I DGXX="" S Y="@101";82.08;@101;S X=DGXX;
"KRN",.402,2784,"DR",2,45.02,9)
I X K DGPTIT S DGNFLD="@110",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@110;I DGADD,$P(DGHOLD,U,14)]"" S Y="@120";S DGNFLD="@120";14;S DGXX=X;I DGXX="" S Y="@111";82.09;@111;S X=DGXX;
"KRN",.402,2784,"DR",2,45.02,10)
I X K DGPTIT S DGNFLD="@120",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@120;I DGADD,$P(DGHOLD,U,15)]"" S Y="@130";S DGNFLD="@130";15;S DGXX=X;I DGXX="" S Y="@121";82.1;@121;S X=DGXX;
"KRN",.402,2784,"DR",2,45.02,11)
I X K DGPTIT S DGNFLD="@130",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@130;I DGADD,$P(DGHOLD1,U,1)]"" S Y="@140";S DGNFLD="@140";81.01;S DGXX=X;I DGXX="" S Y="@131";82.11;@131;S X=DGXX;
"KRN",.402,2784,"DR",2,45.02,12)
I X K DGPTIT S DGNFLD="@140",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@140;I DGADD,$P(DGHOLD1,U,2)]"" S Y="@150";S DGNFLD="@150";81.02;S DGXX=X;I DGXX="" S Y="@141";82.12;@141;S X=DGXX;
"KRN",.402,2784,"DR",2,45.02,13)
I X K DGPTIT S DGNFLD="@150",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@150;I DGADD,$P(DGHOLD1,U,3)]"" S Y="@160";S DGNFLD="@160";81.03;S DGXX=X;I DGXX="" S Y="@151";82.13;@151;S X=DGXX;
"KRN",.402,2784,"DR",2,45.02,14)
I X K DGPTIT S DGNFLD="@160",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@160;I DGADD,$P(DGHOLD1,U,4)]"" S Y="@170";S DGNFLD="@170";81.04;S DGXX=X;I DGXX="" S Y="@161";82.14;@161;S X=DGXX;
"KRN",.402,2784,"DR",2,45.02,15)
I X K DGPTIT S DGNFLD="@170",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@170;I DGADD,$P(DGHOLD1,U,5)]"" S Y="@180";S DGNFLD="@180";81.05;S DGXX=X;I DGXX="" S Y="@171";82.15;@171;S X=DGXX;
"KRN",.402,2784,"DR",2,45.02,16)
I X K DGPTIT S DGNFLD="@180",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@180;I DGADD,$P(DGHOLD1,U,6)]"" S Y="@190";S DGNFLD="@190";81.06;S DGXX=X;I DGXX="" S Y="@181";82.16;@181;S X=DGXX;
"KRN",.402,2784,"DR",2,45.02,17)
I X K DGPTIT S DGNFLD="@190",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@190;I DGADD,$P(DGHOLD1,U,7)]"" S Y="@200";S DGNFLD="@200";81.07;S DGXX=X;I DGXX="" S Y="@191";82.17;@191;S X=DGXX;
"KRN",.402,2784,"DR",2,45.02,18)
I X K DGPTIT S DGNFLD="@200",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@200;I DGADD,$P(DGHOLD1,U,8)]"" S Y="@210";S DGNFLD="@210";81.08;S DGXX=X;I DGXX="" S Y="@201";82.18;@201;S X=DGXX;
"KRN",.402,2784,"DR",2,45.02,19)
I X K DGPTIT S DGNFLD="@210",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@210;I DGADD,$P(DGHOLD1,U,9)]"" S Y="@220";S DGNFLD="@220";81.09;S DGXX=X;I DGXX="" S Y="@211";82.19;@211;S X=DGXX;
"KRN",.402,2784,"DR",2,45.02,20)
I X K DGPTIT S DGNFLD="@220",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@220;I DGADD,$P(DGHOLD1,U,10)]"" S Y="@230";S DGNFLD="@230";81.1;S DGXX=X;I DGXX="" S Y="@221";82.2;@221;S X=DGXX;
"KRN",.402,2784,"DR",2,45.02,21)
I X K DGPTIT S DGNFLD="@230",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@230;I DGADD,$P(DGHOLD1,U,11)]"" S Y="@240";S DGNFLD="@240";81.11;S DGXX=X;I DGXX="" S Y="@231";82.21;@231;S X=DGXX;
"KRN",.402,2784,"DR",2,45.02,22)
I X K DGPTIT S DGNFLD="@240",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@240;I DGADD,$P(DGHOLD1,U,12)]"" S Y="@250";S DGNFLD="@250";81.12;S DGXX=X;I DGXX="" S Y="@241";82.22;@241;S X=DGXX;
"KRN",.402,2784,"DR",2,45.02,23)
I X K DGPTIT S DGNFLD="@250",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@250;I DGADD,$P(DGHOLD1,U,13)]"" S Y="@260";S DGNFLD="@260";81.13;S DGXX=X;I DGXX="" S Y="@251";82.23;@251;S X=DGXX;
"KRN",.402,2784,"DR",2,45.02,24)
I X K DGPTIT S DGNFLD="@260",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@260;I DGADD,$P(DGHOLD1,U,14)]"" S Y="@270";S DGNFLD="@270";81.14;S DGXX=X;I DGXX="" S Y="@261";82.24;@261;S X=DGXX;
"KRN",.402,2784,"DR",2,45.02,25)
I X K DGPTIT S DGNFLD="@270",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@270;I DGADD,$P(DGHOLD1,U,15)]"" S Y="@280";S DGNFLD="@280";81.15;S DGXX=X;I DGXX="" S Y="@271";82.25;@271;S X=DGXX;
"KRN",.402,2784,"DR",2,45.02,26)
I X K DGPTIT S DGNFLD="@280",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@280;K DGNFLD,DGDUP,DGADD,DGXX,DGCODSYS S Y="";@8000;D SCAN^DGPTSCAN S:'$D(DGBPC) Y="@8990";I '$D(DGBPC(2))!(DGDUP(2)) S Y="@8200";300.02;S:X]"" DGDUP(2)=1;@8200;
"KRN",.402,2784,"DR",2,45.02,27)
I '$D(DGBPC(3))!(DGDUP(3)) S Y="@8300";300.03;S:X]"" DGDUP(3)=1;@8300;I '$D(DGBPC(4))!(DGDUP(4)) S Y="@8400";D DRUG^DGPTSC01 I $D(DGTX) S Y="@8350";300.04;S:X]"" DGDUP(4)=1;S Y="@8400";@8350;300.04//^S X=DGTX;S:X]"" DGDUP(4)=1;
"KRN",.402,2784,"DR",2,45.02,28)
@8400;I '$D(DGBPC(5))!(DGDUP(5)) S Y="@8500";300.05;S:X]"" DGDUP(5)=1;@8500;I '$D(DGBPC(6))!(DGDUP(6)) S Y="@8600";300.06;S:X]"" DGDUP(6)=1;@8600;I '$D(DGBPC(7))!(DGDUP(7)) S Y="@8990";300.07;S:X]"" DGDUP(7)=1;@8990;
"KRN",.402,2784,"DR",2,45.02,29)
K DGPTIT S Y=DGNFLD;@9000;K DGEXQ D CHQUES^DGPTSPQ I '$D(DGEXQ) S Y="@9999";I '$D(DGEXQ(6)) S Y="@9040";31WAS TREATMENT RELATED TO COMBAT?~//YES;S Y="@9050";@9040;31///@;@9050;I '$D(DGEXQ(1)) S Y="@9100";
"KRN",.402,2784,"DR",2,45.02,30)
26WAS TREATMENT RELATED TO AGENT ORANGE EXPOSURE?~;S Y="@9150";@9100;26///@;@9150;I '$D(DGEXQ(2)) S Y="@9200";27WAS TREATMENT RELATED TO IONIZING RADIATION EXPOSURE?~;S Y="@9250";@9200;27///@;@9250;I '$D(DGEXQ(3)) S Y="@9300";
"KRN",.402,2784,"DR",2,45.02,31)
28WAS TREATMENT RELATED TO SERVICE IN SW ASIA?~;S Y="@9350";@9300;28///@;@9350;I '$D(DGEXQ(7)) S Y="@9400";32WAS TREATMENT RELATED TO PROJ 112/SHAD?~;S Y="@9450";@9400;32///@;@9450;I '$D(DGEXQ(4)) S Y="@9500";
"KRN",.402,2784,"DR",2,45.02,32)
29WAS TREATMENT RELATED TO MILITARY SEXUAL TRAUMA?~;S Y="@9550";@9500;29///@;@9550;I '$D(DGEXQ(5)) S Y="@9600";30WAS TREATMENT RELATED TO HEAD AND/OR NECK CANCER?~;I X["Y",$D(DFN),$$FILEHNC^DGNTAPI1(DFN);S Y="@9650";@9600;30///@;
"KRN",.402,2784,"DR",2,45.02,33)
@9650;@9999;K DGEXQ S Y=DGNFLD;@99999;
"KRN",.402,2784,"ROU")
^DGX5FD
"KRN",.402,2784,"ROUOLD")
DGX5FD
"KRN",.402,2785,-1)
0^8
"KRN",.402,2785,0)
DG401-10P^3140924.165^@^45^^@^3150812
"KRN",.402,2785,"AR",45.01,1226)
1^DGX45
"KRN",.402,2785,"AR",45.01,1227)
2^DGX45
"KRN",.402,2785,"AR",45.01,1228)
3^DGX45
"KRN",.402,2785,"AR",45.01,1229)
4^DGX45
"KRN",.402,2785,"AR",45.01,1230)
5^DGX45
"KRN",.402,2785,"AR",45.01,1299)
6^DGX45
"KRN",.402,2785,"AR",45.01,1300)
7^DGX45
"KRN",.402,2785,"AR",45.01,1301)
8^DGX45
"KRN",.402,2785,"AR",45.01,1302)
9^DGX45
"KRN",.402,2785,"AR",45.01,1303)
10^DGX45
"KRN",.402,2785,"AR",45.01,1304)
11^DGX45
"KRN",.402,2785,"AR",45.01,1305)
12^DGX45
"KRN",.402,2785,"AR",45.01,1306)
13^DGX45
"KRN",.402,2785,"AR",45.01,1307)
14^DGX45
"KRN",.402,2785,"AR",45.01,1308)
15^DGX45
"KRN",.402,2785,"AR",45.01,1309)
16^DGX45
"KRN",.402,2785,"AR",45.01,1310)
17^DGX45
"KRN",.402,2785,"AR",45.01,1311)
18^DGX45
"KRN",.402,2785,"AR",45.01,1312)
19^DGX45
"KRN",.402,2785,"AR",45.01,1313)
20^DGX45
"KRN",.402,2785,"AR",45.01,1314)
21^DGX45
"KRN",.402,2785,"AR",45.01,1315)
22^DGX45
"KRN",.402,2785,"AR",45.01,1316)
23^DGX45
"KRN",.402,2785,"AR",45.01,1317)
24^DGX45
"KRN",.402,2785,"AR",45.01,1318)
25^DGX45
"KRN",.402,2785,"DR",1,45)
D CENSUS^DGPTIC10(DA);S DGTYPE=$P(^DGPT(D0,0),U,11),DGCODSYS=$$CODESYS^DGPTIC10(D0);40///^S X=+DGSUR;
"KRN",.402,2785,"DR",2,45.01)
K DGPTIT S DGHOLD=$G(^DGPT(DGPTF,"S",DGSUR,0)) S:DGHOLD]"" DGHOLD1=$G(^(1));S DIE("NO^")="BACKOUTOK";S:'$D(DGADD) DGADD=0;S:DGADD Y="@2";S:DGJUMP'[1 (DGNFLD,Y)="@2";.01;3;4;5;6;7;S:DGJUMP'[2 Y=0;@2;S DGNFLD="@30";
"KRN",.402,2785,"DR",2,45.01,1)
I DGADD,$P(DGHOLD,U,8)]"" S Y="@30";8;I X K DGPTIT S DGNFLD="@30",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@30;S DGNFLD="@40";I DGADD,$P(DGHOLD,U,9)]"" S Y="@40";9;I X K DGPTIT S DGNFLD="@40",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@40;
"KRN",.402,2785,"DR",2,45.01,2)
S DGNFLD="@50";I DGADD,$P(DGHOLD,U,10)]"" S Y="@50";10;I X K DGPTIT S DGNFLD="@50",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@50;S DGNFLD="@60";I DGADD,$P(DGHOLD,U,11)]"" S Y="@60";11;
"KRN",.402,2785,"DR",2,45.01,3)
I X K DGPTIT S DGNFLD="@60",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@60;S DGNFLD="@70";I DGADD,$P(DGHOLD,U,12)]"" S Y="@70";12;I X K DGPTIT S DGNFLD="@70",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@70;S DGNFLD="@80";
"KRN",.402,2785,"DR",2,45.01,4)
I DGADD,$P(DGHOLD,U,13)]"" S Y="@80";13;I X K DGPTIT S DGNFLD="@80",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@80;S DGNFLD="@90";I DGADD,$P(DGHOLD,U,14)]"" S Y="@90";14;I X K DGPTIT S DGNFLD="@90",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";
"KRN",.402,2785,"DR",2,45.01,5)
@90;S DGNFLD="@100";I DGADD,$P(DGHOLD,U,15)]"" S Y="@100";15;I X K DGPTIT S DGNFLD="@100",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@100;S DGNFLD="@110";I DGADD,$P(DGHOLD,U,16)]"" S Y="@110";16;
"KRN",.402,2785,"DR",2,45.01,6)
I X K DGPTIT S DGNFLD="@110",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@110;S DGNFLD="@120";I DGADD,$P(DGHOLD,U,17)]"" S Y="@120";17;I X K DGPTIT S DGNFLD="@120",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@120;S DGNFLD="@130";
"KRN",.402,2785,"DR",2,45.01,7)
I DGADD,$P(DGHOLD,U,18)]"" S Y="@130";18;I X K DGPTIT S DGNFLD="@130",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@130;S DGNFLD="@140";I DGADD,$P(DGHOLD,U,19)]"" S Y="@140";19;
"KRN",.402,2785,"DR",2,45.01,8)
I X K DGPTIT S DGNFLD="@140",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@140;S DGNFLD="@150";I DGADD,$P(DGHOLD,U,20)]"" S Y="@150";20;I X K DGPTIT S DGNFLD="@150",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@150;S DGNFLD="@160";
"KRN",.402,2785,"DR",2,45.01,9)
I DGADD,$P(DGHOLD,U,21)]"" S Y="@160";21;I X K DGPTIT S DGNFLD="@160",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@160;S DGNFLD="@170";I DGADD,$P(DGHOLD,U,22)]"" S Y="@170";22;
"KRN",.402,2785,"DR",2,45.01,10)
I X K DGPTIT S DGNFLD="@170",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@170;S DGNFLD="@180";I DGADD,$P(DGHOLD,U,23)]"" S Y="@180";23;I X K DGPTIT S DGNFLD="@180",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@180;S DGNFLD="@190";
"KRN",.402,2785,"DR",2,45.01,11)
I DGADD,$P(DGHOLD,U,24)]"" S Y="@190";24;I X K DGPTIT S DGNFLD="@190",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@190;S DGNFLD="@200";I DGADD,$P(DGHOLD,U,25)]"" S Y="@200";25;
"KRN",.402,2785,"DR",2,45.01,12)
I X K DGPTIT S DGNFLD="@200",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@200;S DGNFLD="@210";I DGADD,$P(DGHOLD,U,26)]"" S Y="@210";26;I X K DGPTIT S DGNFLD="@210",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@210;S DGNFLD="@220";
"KRN",.402,2785,"DR",2,45.01,13)
I DGADD,$P(DGHOLD,U,27)]"" S Y="@220";27;I X K DGPTIT S DGNFLD="@220",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@220;S DGNFLD="@230";I DGADD,$P(DGHOLD1,U,1)]"" S Y="@230";28;
"KRN",.402,2785,"DR",2,45.01,14)
I X K DGPTIT S DGNFLD="@230",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@230;S DGNFLD="240";I DGADD,$P(DGHOLD1,U,2)]"" S Y="@240";29;I X K DGPTIT S DGNFLD="@240",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@240;S DGNFLD="@250";
"KRN",.402,2785,"DR",2,45.01,15)
I DGADD,$P(DGHOLD1,U,3)]"" S Y="@250";30;I X K DGPTIT S DGNFLD="@250",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@250;S DGNFLD="260";I DGADD,$P(DGHOLD1,U,4)]"" S Y="@260";31;
"KRN",.402,2785,"DR",2,45.01,16)
I X K DGPTIT S DGNFLD="@260",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@260;S DGNFLD="@270";I DGADD,$P(DGHOLD1,U,5)]"" S Y="@270";32;I X K DGPTIT S DGNFLD="@270",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@270;K DGNFLD S Y="";@800;
"KRN",.402,2785,"DR",2,45.01,17)
D SCAN^DGPTSCAN I '$D(DGBPC) S Y="@899";I '$D(DGBPC(1)) S Y="@899";300.01;@899;K DGPTIT S Y=DGNFLD;@99999;
"KRN",.402,2785,"ROU")
^DGX4
"KRN",.402,2785,"ROUOLD")
DGX4
"KRN",.402,2786,-1)
0^9
"KRN",.402,2786,0)
DG601-10P^3141014.1258^@^45^^@^3150812
"KRN",.402,2786,"AR",45.05,1221)
1^DGX65
"KRN",.402,2786,"AR",45.05,1222)
2^DGX65
"KRN",.402,2786,"AR",45.05,1223)
3^DGX65
"KRN",.402,2786,"AR",45.05,1224)
4^DGX65
"KRN",.402,2786,"AR",45.05,1225)
5^DGX65
"KRN",.402,2786,"AR",45.05,1257)
6^DGX65
"KRN",.402,2786,"AR",45.05,1258)
7^DGX65
"KRN",.402,2786,"AR",45.05,1259)
8^DGX65
"KRN",.402,2786,"AR",45.05,1260)
9^DGX65
"KRN",.402,2786,"AR",45.05,1261)
10^DGX65
"KRN",.402,2786,"AR",45.05,1262)
11^DGX65
"KRN",.402,2786,"AR",45.05,1263)
12^DGX65
"KRN",.402,2786,"AR",45.05,1264)
13^DGX65
"KRN",.402,2786,"AR",45.05,1265)
14^DGX65
"KRN",.402,2786,"AR",45.05,1266)
15^DGX65
"KRN",.402,2786,"AR",45.05,1267)
16^DGX65
"KRN",.402,2786,"AR",45.05,1268)
17^DGX65
"KRN",.402,2786,"AR",45.05,1269)
18^DGX65
"KRN",.402,2786,"AR",45.05,1292)
19^DGX65
"KRN",.402,2786,"AR",45.05,1293)
20^DGX65
"KRN",.402,2786,"AR",45.05,1294)
21^DGX65
"KRN",.402,2786,"AR",45.05,1295)
22^DGX65
"KRN",.402,2786,"AR",45.05,1296)
23^DGX65
"KRN",.402,2786,"AR",45.05,1297)
24^DGX65
"KRN",.402,2786,"AR",45.05,1298)
25^DGX65
"KRN",.402,2786,"DR",1,45)
S DGDUP(8)=0;K DGPTIT;S DGHOLD=$G(^DGPT(DGPTF,"P",+P(DGZP,1),0)) S:DGHOLD]"" DGHOLD1=$G(^(1));D CENSUS^DGPTIC10(DA);S DGTYPE=$P(^DGPT(D0,0),U,11),DGCODSYS=$$CODESYS^DGPTIC10(D0);60///^S X=P(DGZP,1);
"KRN",.402,2786,"DR",2,45.05)
S:'$D(DGADD) DGADD=0;S:DGADD Y="@25";S:DGJUMP'[1 Y="@2";S DGNFLD="@10";.01;@10;S DGNFLD="@15";1///^D BS^DGPTFM6 S X=DGMOVM K DGMOVM;@15;S:DGJUMP'[2 Y="";@2;S DGNFLD="@25";S Y="@899";@25;I DGADD,$P(DGHOLD,U,5)]"" S Y="@40";
"KRN",.402,2786,"DR",2,45.05,1)
S DGNFLD="@40";4;I X K DGPTIT S DGNFLD="@40",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@40;I DGADD,$P(DGHOLD,U,6)]"" S Y="@50";S DGNFLD="@50";5;I X K DGPTIT S DGNFLD="@50",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@50;
"KRN",.402,2786,"DR",2,45.05,2)
I DGADD,$P(DGHOLD,U,7)]"" S Y="@60";S DGNFLD="@60";6;I X K DGPTIT S DGNFLD="@60",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@60;I DGADD,$P(DGHOLD,U,8)]"" S Y="@70";S DGNFLD="@70";7;
"KRN",.402,2786,"DR",2,45.05,3)
I X K DGPTIT S DGNFLD="@70",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@70;I DGADD,$P(DGHOLD,U,9)]"" S Y="@80";S DGNFLD="@80";8;I X K DGPTIT S DGNFLD="@80",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@80;I DGADD,$P(DGHOLD,U,10)]"" S Y="@90";
"KRN",.402,2786,"DR",2,45.05,4)
S DGNFLD="@90";9;I X K DGPTIT S DGNFLD="@90",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@90;I DGADD,$P(DGHOLD,U,11)]"" S Y="@100";S DGNFLD="@100";10;I X K DGPTIT S DGNFLD="@100",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@100;
"KRN",.402,2786,"DR",2,45.05,5)
I DGADD,$P(DGHOLD,U,12)]"" S Y="@110";S DGNFLD="@110";11;I X K DGPTIT S DGNFLD="@110",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@110;I DGADD,$P(DGHOLD,U,13)]"" S Y="@120";S DGNFLD="@120";12;
"KRN",.402,2786,"DR",2,45.05,6)
I X K DGPTIT S DGNFLD="@120",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@120;I DGADD,$P(DGHOLD,U,14)]"" S Y="@130";S DGNFLD="@130";13;I X K DGPTIT S DGNFLD="@130",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@130;
"KRN",.402,2786,"DR",2,45.05,7)
I DGADD,$P(DGHOLD,U,15)]"" S Y="@140";S DGNFLD="@140";14;I X K DGPTIT S DGNFLD="@140",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@140;I DGADD,$P(DGHOLD,U,16)]"" S Y="@150";S DGNFLD="150";15;
"KRN",.402,2786,"DR",2,45.05,8)
I X K DGPTIT S DGNFLD="@150",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@150;I DGADD,$P(DGHOLD,U,17)]"" S Y="@160";S DGNFLD="@160";16;I X K DGPTIT S DGNFLD="@160",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@160;
"KRN",.402,2786,"DR",2,45.05,9)
I DGADD,$P(DGHOLD,U,18)]"" S Y="@170";S DGNFLD="@170";17;I X K DGPTIT S DGNFLD="@170",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@170;I DGADD,$P(DGHOLD,U,19)]"" S Y="@180";S DGNFLD="@180";18;
"KRN",.402,2786,"DR",2,45.05,10)
I X K DGPTIT S DGNFLD="@180",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@180;I DGADD,$P(DGHOLD,U,20)]"" S Y="@190";S DGNFLD="@190";19;I X K DGPTIT S DGNFLD="@190",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@190;
"KRN",.402,2786,"DR",2,45.05,11)
I DGADD,$P(DGHOLD,U,21)]"" S Y="@200";S DGNFLD="@200";20;I X K DGPTIT S DGNFLD="@200",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@200;I DGADD,$P(DGHOLD,U,22)]"" S Y="@210";S DGNFLD="@210";21;
"KRN",.402,2786,"DR",2,45.05,12)
I X K DGPTIT S DGNFLD="@210",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@210;I DGADD,$P(DGHOLD,U,23)]"" S Y="@220";S DGNFLD="@220";22;I X K DGPTIT S DGNFLD="@220",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@220;
"KRN",.402,2786,"DR",2,45.05,13)
I DGADD,$P(DGHOLD,U,24)]"" S Y="@230";S DGNFLD="@230";23;I X K DGPTIT S DGNFLD="@230",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@230;I DGADD,$P(DGHOLD1,U,1)]"" S Y="@240";S DGNFLD="@240";24;
"KRN",.402,2786,"DR",2,45.05,14)
I X K DGPTIT S DGNFLD="@240",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@240;I DGADD,$P(DGHOLD1,U,2)]"" S Y="@250";S DGNFLD="@250";25;I X K DGPTIT S DGNFLD="@250",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@250;
"KRN",.402,2786,"DR",2,45.05,15)
I DGADD,$P(DGHOLD1,U,3)]"" S Y="@260";S DGNFLD="@260";26;I X K DGPTIT S DGNFLD="@260",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@260;I DGADD,$P(DGHOLD1,U,4)]"" S Y="@270";S DGNFLD="@270";27;
"KRN",.402,2786,"DR",2,45.05,16)
I X K DGPTIT S DGNFLD="@270",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@270;I DGADD,$P(DGHOLD1,U,5)]"" S Y="@280";S DGNFLD="@280";28;I X K DGPTIT S DGNFLD="@280",Y="@800",DGPTIT(X_$C(59)_"ICD0(")="";@280;K DGNFLD,DGDUP,DGADD S Y="";
"KRN",.402,2786,"DR",2,45.05,17)
@800;D SCAN^DGPTSCAN;I '$D(DGBPC(8))!(DGDUP(8)) S Y="@899";3;S:X]"" DGDUP(8)=1 S:X']"" Y="@800";@899;K DGPTIT S Y=DGNFLD;@999;S Y=DGNFLD;@99999;
"KRN",.402,2786,"ROU")
^DGX6
"KRN",.402,2786,"ROUOLD")
DGX6
"KRN",8994,761,-1)
0^1
"KRN",8994,761,0)
DG PATIENT TREATMENT DATA^RPC^DGPTFAPI^2^P
"KRN",8994,761,1,0)
^^18^18^3150819^
"KRN",8994,761,1,1,0)
This RPC will return data from the Patient Treatment (#45) file.
"KRN",8994,761,1,2,0)
 
"KRN",8994,761,1,3,0)
Input: 
"KRN",8994,761,1,4,0)
 PTFNUMBR - The Patient Treatment IFN (.001 of the #45 file record) 
"KRN",8994,761,1,5,0)
  RESULTS - Results array (passed by reference) 
"KRN",8994,761,1,6,0)
    
"KRN",8994,761,1,7,0)
Output: 
"KRN",8994,761,1,8,0)
    RESULTS - Results array (passed by reference) with the following 
"KRN",8994,761,1,9,0)
              nodes.  
"KRN",8994,761,1,10,0)
 RESULTS(0) - 1 (entry found) OR -1 (error) 
"KRN",8994,761,1,11,0)
 RESULTS(1) - Type of Disposition (#72)^Place of Disposition (#75)^ 
"KRN",8994,761,1,12,0)
              Principal Diagnosis (#79)^Coding System Version (pointer to
"KRN",8994,761,1,13,0)
              ICD Coding Systems #80.4 file) 
"KRN",8994,761,1,14,0)
 RESULTS(2) - DX 2^DX 3^...^DX 24 (Secondary Diagnosis 2 through Secondary
"KRN",8994,761,1,15,0)
              Diagnosis 24) 
"KRN",8994,761,1,16,0)
 RESULTS(3) - POA 1^POA 2^...^POA 25 (Present on Admission indicators for
"KRN",8994,761,1,17,0)
              Principal Diagnosis and Secondary Diagnosis 2 through 
"KRN",8994,761,1,18,0)
              Secondary Diagnosis 24) 
"KRN",8994,761,2,0)
^8994.02A^1^1
"KRN",8994,761,2,1,0)
PTFNUMBER^1^^1^1
"KRN",8994,761,2,1,1,0)
^^1^1^3150819^
"KRN",8994,761,2,1,1,1,0)
The Patient Treatment IFN (.001 of the #45 file record) 
"KRN",8994,761,2,"B","PTFNUMBER",1)

"KRN",8994,761,2,"PARAMSEQ",1,1)

"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813^2930930
"PKG",5,22,1,"PAH",1,0)
884^3150820^520736459
"PKG",5,22,1,"PAH",1,1,0)
^^2^2^3150820
"PKG",5,22,1,"PAH",1,1,1,0)
Please refer to DG*5.3*884 in the National Patch Module for a description
"PKG",5,22,1,"PAH",1,1,2,0)
of this patch.
"PRE")
DG884P
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
77
"RTN","DG884P")
0^^B172982622
"RTN","DG884P",1,0)
DG884P ;PD-REMOTE/DDA,KCL,FT - DG*5.3*884 INSTALL UTILITIES ;6/18/15 3:34pm
"RTN","DG884P",2,0)
 ;;5.3;Registration;**884**;Aug 13, 1993;Build 31
"RTN","DG884P",3,0)
 ;;Per VHA Directive 6402, this routine should not be modified.
"RTN","DG884P",4,0)
 ;
"RTN","DG884P",5,0)
 ; XLFDT APIs - #10103
"RTN","DG884P",6,0)
 ; XPDUTL APIs- #10141
"RTN","DG884P",7,0)
 ; %ZTLOAD - #10063
"RTN","DG884P",8,0)
 ; ^DIC(4.2) - #3779
"RTN","DG884P",9,0)
 ; XMBGRP APIs - #1146
"RTN","DG884P",10,0)
 ; ^XMB(3.8) - #6202
"RTN","DG884P",11,0)
 ; ICD globals - #6204
"RTN","DG884P",12,0)
 ; VASITE APIs - #10112
"RTN","DG884P",13,0)
 ; XMD APIs - #10070
"RTN","DG884P",14,0)
 ; XUPROD APIs - #4440 
"RTN","DG884P",15,0)
 ;
"RTN","DG884P",16,0)
 ;--------------------------------------------------
"RTN","DG884P",17,0)
 ;Patch DG*5.3*884: Environment, Pre-Install, and
"RTN","DG884P",18,0)
 ;Post-Install entry points.
"RTN","DG884P",19,0)
 ;--------------------------------------------------
"RTN","DG884P",20,0)
 ;
"RTN","DG884P",21,0)
ENV ;Main entry point for Environment check items
"RTN","DG884P",22,0)
 ;Per KIDS documentation: During the environment check routine,
"RTN","DG884P",23,0)
 ;use of direct WRITEs must be used for output messages.
"RTN","DG884P",24,0)
 ;
"RTN","DG884P",25,0)
 ;KIDS variable to indicate if install should abort
"RTN","DG884P",26,0)
 ;if SET = 2, then abort entire installation
"RTN","DG884P",27,0)
 S XPDABORT=""
"RTN","DG884P",28,0)
 ;
"RTN","DG884P",29,0)
 ;check programmer variables
"RTN","DG884P",30,0)
 W !!,">>> Check programmer variables..."
"RTN","DG884P",31,0)
 D PROGCHK(.XPDABORT)
"RTN","DG884P",32,0)
 Q:XPDABORT=2
"RTN","DG884P",33,0)
 W "Successful"
"RTN","DG884P",34,0)
 ;
"RTN","DG884P",35,0)
 D ICDCHK ;check if ICD*18*64 installed needed entries.
"RTN","DG884P",36,0)
 ;If not, send message to customer support group on FORUM.
"RTN","DG884P",37,0)
 ;Do not abort install.
"RTN","DG884P",38,0)
 ;
"RTN","DG884P",39,0)
 ;Make certain Q-PTI.VA.GOV entry exists in DOMAIN (#4.2) file
"RTN","DG884P",40,0)
 W !!,">>> Checking for 'Q-PTI.VA.GOV entry in DOMAIN (#4.2)..."
"RTN","DG884P",41,0)
 N DGQPTI
"RTN","DG884P",42,0)
 S DGQPTI=+$O(^DIC(4.2,"B","Q-PTI.VA.GOV",0))
"RTN","DG884P",43,0)
 I 'DGQPTI D
"RTN","DG884P",44,0)
 .W !,"There is no 'Q-PTI.VA.GOV' entry in the DOMAIN (#4.2) file."
"RTN","DG884P",45,0)
 .W !,"Please see patch XM*999*179 to create this entry and start"
"RTN","DG884P",46,0)
 .W !,"this installation again.",!
"RTN","DG884P",47,0)
 .S XPDABORT=2
"RTN","DG884P",48,0)
 Q:XPDABORT=2
"RTN","DG884P",49,0)
 W "Successful"
"RTN","DG884P",50,0)
 ;success
"RTN","DG884P",51,0)
 I XPDABORT="" K XPDABORT
"RTN","DG884P",52,0)
 Q
"RTN","DG884P",53,0)
ICDCHK ;Check entry count in some DRG files
"RTN","DG884P",54,0)
 N DGCNT,DGI,DGFLAG,DGICD,DGL,DGLOBAL,DGLOOP,DGMSG,DGTEXT
"RTN","DG884P",55,0)
 N XMDUZ,XMSUB,XMTEXT,XMY
"RTN","DG884P",56,0)
 I $D(XPDENV) D  ;use WRITE in ENV check and use MES/BMES^XPDUTL in pre-init
"RTN","DG884P",57,0)
 .W !!,">>> Checking number of entries in some DRG files..."
"RTN","DG884P",58,0)
 I '$D(XPDENV) D
"RTN","DG884P",59,0)
 .S DGTEXT(1)=" "
"RTN","DG884P",60,0)
 .S DGTEXT(2)=" "
"RTN","DG884P",61,0)
 .S DGTEXT(3)=">>> Checking number of entries in some DRG files..."
"RTN","DG884P",62,0)
 .D BMES^XPDUTL(.DGTEXT)
"RTN","DG884P",63,0)
 S DGICD(80.5)="DRG SURGICAL HIERARCHY"_U_1_U_"ICDRS"
"RTN","DG884P",64,0)
 S DGICD(80.6)="DRG HAC"_U_1_U_"ICDHAC"
"RTN","DG884P",65,0)
 S DGICD(82)="DRG DIAGNOSIS HIERARCHY CODES"_U_265_U_"ICDID"
"RTN","DG884P",66,0)
 S DGICD(82.1)="DRG PROCEDURE IDENTIFIER CODES"_U_214_U_"ICDIP"
"RTN","DG884P",67,0)
 S DGICD(82.11)="DRG PROCEDURE CODE COMBINATIONS"_U_33_U_"ICDIDP"
"RTN","DG884P",68,0)
 S DGICD(82.12)="DRG DIAGNOSIS CODE COMBINATIONS"_U_2_U_"ICDIDD"
"RTN","DG884P",69,0)
 S DGICD(82.13)="DRG CC EXCLUSIONS"_U_1491_U_"ICDCCEX"
"RTN","DG884P",70,0)
 S DGLOOP=0,DGL=2
"RTN","DG884P",71,0)
 F  S DGLOOP=$O(DGICD(DGLOOP)) Q:'DGLOOP  S DGLOBAL=$P(DGICD(DGLOOP),U,3) D:DGLOBAL'="" COUNT
"RTN","DG884P",72,0)
 ;S DGLOOP=0 F  S DGLOOP=$O(DGICD(DGLOOP)) Q:'DGLOOP  S $P(DGICD(DGLOOP),U,4)=0 ;for testing only - FT 6/18/15
"RTN","DG884P",73,0)
 S (DGFLAG,DGLOOP)=0 ;compare their counts with ours
"RTN","DG884P",74,0)
 F  S DGLOOP=$O(DGICD(DGLOOP)) Q:'DGLOOP  D
"RTN","DG884P",75,0)
 .I $P($G(DGICD(DGLOOP)),U,2)'=$P(DGICD(DGLOOP),U,4) D
"RTN","DG884P",76,0)
 ..I $D(XPDENV) D
"RTN","DG884P",77,0)
 ...W !,"There is a discrepancy in the number of entries you have"
"RTN","DG884P",78,0)
 ...W !,"for the "_$P(DGICD(DGLOOP),U,1)_" (#"_DGLOOP_") file."
"RTN","DG884P",79,0)
 ..I '$D(XPDENV) D
"RTN","DG884P",80,0)
 ...K DGTEXT
"RTN","DG884P",81,0)
 ...S DGTEXT(1)="There is a discrepancy in the number of entries you have"
"RTN","DG884P",82,0)
 ...S DGTEXT(2)="for the "_$P(DGICD(DGLOOP),U,1)_" (#"_DGLOOP_") file."
"RTN","DG884P",83,0)
 ...D BMES^XPDUTL(.DGTEXT)
"RTN","DG884P",84,0)
 ..S DGFLAG=1,DGL=DGL+1,DGMSG(DGL)=$P(DGICD(DGLOOP),U,1)_" (#"_DGLOOP_")"
"RTN","DG884P",85,0)
 K DGTEXT
"RTN","DG884P",86,0)
 I DGFLAG=0 D  Q  ;file counts are ok, so quit
"RTN","DG884P",87,0)
 .W:$D(XPDENV) !,"    No discrepancies found.",!
"RTN","DG884P",88,0)
 .D:'$D(XPDENV) MES^XPDUTL("    No discrepancies found.")
"RTN","DG884P",89,0)
 I DGFLAG=1 D  ;counts don't match
"RTN","DG884P",90,0)
 .W:$D(XPDENV) !,"    Please log a Remedy ticket.",!
"RTN","DG884P",91,0)
 .D:'$D(XPDENV) MES^XPDUTL("    Please log a Remedy ticket.")
"RTN","DG884P",92,0)
 Q:$$PROD^XUPROD()=0  ;not a production account. Don't send email.
"RTN","DG884P",93,0)
MAIL ;send MailMan message if file counts don't match
"RTN","DG884P",94,0)
 N DIFROM ;per KIDS manual, NEW DIFROM before calling MailMan in env/pre/post routine
"RTN","DG884P",95,0)
 S XMDUZ=$S($G(DUZ)>0:DUZ,1:.5)
"RTN","DG884P",96,0)
 S XMSUB="DG*5.3*884 - Station "_$P($$SITE^VASITE(),U,3)_" file count issue"
"RTN","DG884P",97,0)
 S DGMSG(1)="DG*5.3*884 was installed and found a difference in the number"
"RTN","DG884P",98,0)
 S DGMSG(2)="of entries for the following files:"
"RTN","DG884P",99,0)
 S XMTEXT="DGMSG("
"RTN","DG884P",100,0)
 S XMY("G.CSADMIN1@FORUM.VA.GOV")="",XMY("FRANK.TRAXLER@FORUM.VA.GOV")=""
"RTN","DG884P",101,0)
 D ^XMD
"RTN","DG884P",102,0)
 Q
"RTN","DG884P",103,0)
COUNT ;count the number entries in the file, put in 4th piece
"RTN","DG884P",104,0)
 S (DGCNT,DGI)=0,DGLOBAL="^"_DGLOBAL
"RTN","DG884P",105,0)
 F  S DGI=$O(@DGLOBAL@(DGI)) Q:'DGI  S DGCNT=DGCNT+1
"RTN","DG884P",106,0)
 S $P(DGICD(DGLOOP),U,4)=DGCNT
"RTN","DG884P",107,0)
 Q
"RTN","DG884P",108,0)
 ;
"RTN","DG884P",109,0)
PRE ;Main entry point for Pre-init items
"RTN","DG884P",110,0)
 ;
"RTN","DG884P",111,0)
 ;Item 1 - Remove the "AO" cross-references from 5 original OPERATION CODE fields.
"RTN","DG884P",112,0)
 D BMES^XPDUTL(">>> Start removal of PTF Operation Code ""AO"" cross-reference...")
"RTN","DG884P",113,0)
 ;EX. where 45.01=401 sub-file#, 8=OPERATION CODE 1 field#, 1=ien of the XREF in ^DD(45.01,8,1,1,0)="45.01^AO"
"RTN","DG884P",114,0)
 D DELIX^DDMOD(45.01,8,1,,"DGAO")
"RTN","DG884P",115,0)
 D DELIX^DDMOD(45.01,9,1,,"DGAO")
"RTN","DG884P",116,0)
 D DELIX^DDMOD(45.01,10,1,,"DGAO")
"RTN","DG884P",117,0)
 D DELIX^DDMOD(45.01,11,1,,"DGAO")
"RTN","DG884P",118,0)
 D DELIX^DDMOD(45.01,12,1,,"DGAO")
"RTN","DG884P",119,0)
 W !
"RTN","DG884P",120,0)
 ;
"RTN","DG884P",121,0)
 D MES^XPDUTL("    ""AO"" removal completed.")
"RTN","DG884P",122,0)
 ;
"RTN","DG884P",123,0)
 D ICDCHK
"RTN","DG884P",124,0)
 ;
"RTN","DG884P",125,0)
 D NEWMG ;create new PTI mail group
"RTN","DG884P",126,0)
 ;
"RTN","DG884P",127,0)
PTF125 ;Item 2 - Update PTF125 entry in TRANSMISSION ROUTER (#407.7)
"RTN","DG884P",128,0)
 ;Make certain Q.PTI.VA.GOV exists in DOMAIN (#4.2)
"RTN","DG884P",129,0)
 ;Make certain PTF125 entry exists in TRANSMISSION ROUTERS (#407.7).
"RTN","DG884P",130,0)
 ;Create PTF125 entry, if necessary.
"RTN","DG884P",131,0)
 ;In PTF125 entry, set TRANSMIT=NO for Q-PTT.VA.GOV (old queue)
"RTN","DG884P",132,0)
 ;In PTF125 entry, set TRANSMIT=YES for Q-PTI.VA.GOV (new queue)
"RTN","DG884P",133,0)
 N DGARRAY,DGFDA,DGERROR,DGFLAG,DGIEN,DGLOOP,DGLOOP1,DGQPTI,DGTEXT
"RTN","DG884P",134,0)
 S DGTEXT(1)=">>> Updating PTF125 entry in TRANSMISSION ROUTER (#407.7) file."
"RTN","DG884P",135,0)
 S DGTEXT(2)="    Setting TRANSMIT=NO for (existing) receiving user@Q-PTT.VA.GOV."
"RTN","DG884P",136,0)
 S DGTEXT(3)="    Creating new receiving user@Q-PTI.VA.GOV."
"RTN","DG884P",137,0)
 D BMES^XPDUTL(.DGTEXT)
"RTN","DG884P",138,0)
 K DGTEXT
"RTN","DG884P",139,0)
 S DGQPTI=+$O(^DIC(4.2,"B","Q-PTI.VA.GOV",0))
"RTN","DG884P",140,0)
 I 'DGQPTI D
"RTN","DG884P",141,0)
 .S DGTEXT(1)="There is no 'Q-PTI.VA.GOV' entry in the DOMAIN (#4.2) file."
"RTN","DG884P",142,0)
 .S DGTEXT(2)="Please see patch XM*999*179 to create this entry and start"
"RTN","DG884P",143,0)
 .S DGTEXT(3)="the installation again."
"RTN","DG884P",144,0)
 .D STOP
"RTN","DG884P",145,0)
 Q:$G(XPDABORT)=1
"RTN","DG884P",146,0)
 S DGIEN=$O(^VAT(407.7,"B","PTF125",0))
"RTN","DG884P",147,0)
 I 'DGIEN D CREATE ;create PTF125 entry if it doesn't exist
"RTN","DG884P",148,0)
 S DGIEN=$O(^VAT(407.7,"B","PTF125",0))
"RTN","DG884P",149,0)
 I 'DGIEN D
"RTN","DG884P",150,0)
 .S DGTEXT(1)="There is no 'PTF125' entry in the TRANSMISSION ROUTERS (#407.7) file."
"RTN","DG884P",151,0)
 .S DGTEXT(2)="Stopping installation. Log a ticket ASAP."
"RTN","DG884P",152,0)
 .D STOP
"RTN","DG884P",153,0)
 Q:$G(XPDABORT)=1
"RTN","DG884P",154,0)
 D GETS^DIQ(407.7,DGIEN_",","**","EI","DGARRAY","DGERROR")
"RTN","DG884P",155,0)
 I $D(DGERROR) D
"RTN","DG884P",156,0)
 .S DGTEXT(1)="Cannot retrieve the 'PTF125' values from the TRANSMISSION ROUTERS"
"RTN","DG884P",157,0)
 .S DGTEXT(2)="(#407.7) file. Stopping installation. Log a ticket ASAP."
"RTN","DG884P",158,0)
 .D STOP
"RTN","DG884P",159,0)
 Q:$G(XPDABORT)=1
"RTN","DG884P",160,0)
 S DGLOOP=""
"RTN","DG884P",161,0)
 S DGLOOP=$O(DGARRAY(407.7,DGLOOP))
"RTN","DG884P",162,0)
 I DGLOOP="" D
"RTN","DG884P",163,0)
 .S DGTEXT(1)="Cannot find the 'PTF125' entry in the TRANSMISSION ROUTERS"
"RTN","DG884P",164,0)
 .S DGTEXT(2)="(#407.7) file. Stopping installation. Log a ticket ASAP."
"RTN","DG884P",165,0)
 .D STOP
"RTN","DG884P",166,0)
 Q:$G(XPDABORT)=1 
"RTN","DG884P",167,0)
 I $G(DGARRAY(407.7,DGLOOP,.01,"E"))'="PTF125" D
"RTN","DG884P",168,0)
 .S DGTEXT(1)="Cannot find the 'PTF125' entry in the TRANSMISSION ROUTERS"
"RTN","DG884P",169,0)
 .S DGTEXT(2)="(#407.7) file. Stopping installation. Log a ticket ASAP."
"RTN","DG884P",170,0)
 .D STOP
"RTN","DG884P",171,0)
 Q:$G(XPDABORT)=1 
"RTN","DG884P",172,0)
 S DGLOOP1=""
"RTN","DG884P",173,0)
 F  S DGLOOP1=$O(DGARRAY(407.71,DGLOOP1)) Q:DGLOOP1=""  D
"RTN","DG884P",174,0)
 .I $G(DGARRAY(407.71,DGLOOP1,1,"E"))'="Q-PTT.VA.GOV" Q
"RTN","DG884P",175,0)
 .I $G(DGARRAY(407.71,DGLOOP1,2,"E"))="NO" Q
"RTN","DG884P",176,0)
 .D TURNOFF ;turn off transmit to Q-PTT
"RTN","DG884P",177,0)
 .I $D(DGERROR) D
"RTN","DG884P",178,0)
 ..S DGTEXT(1)="Could not set TRANSMIT='NO' for Q-PTT.VA.GOV."
"RTN","DG884P",179,0)
 ..S DGTEXT(2)="Stopping installation. Log a ticket ASAP."
"RTN","DG884P",180,0)
 ..D STOP
"RTN","DG884P",181,0)
 Q:$G(XPDABORT)=1
"RTN","DG884P",182,0)
 S DGLOOP1="",DGFLAG=0
"RTN","DG884P",183,0)
 F  S DGLOOP1=$O(DGARRAY(407.71,DGLOOP1)) Q:DGLOOP1=""  D
"RTN","DG884P",184,0)
 .I $G(DGARRAY(407.71,DGLOOP1,1,"E"))'="Q-PTI.VA.GOV" Q
"RTN","DG884P",185,0)
 .I $G(DGARRAY(407.71,DGLOOP1,2,"E"))="YES" S DGFLAG=1 Q
"RTN","DG884P",186,0)
 .D TURNON ;turn on transmit to Q-PTI
"RTN","DG884P",187,0)
 .I $D(DGERROR) D
"RTN","DG884P",188,0)
 ..S DGTEXT(1)="Could not set TRANSMIT='YES' for Q-PTI.VA.GOV."
"RTN","DG884P",189,0)
 ..S DGTEXT(2)="Stopping installation. Log a ticket ASAP."
"RTN","DG884P",190,0)
 ..D STOP
"RTN","DG884P",191,0)
 Q:$G(XPDABORT)=1
"RTN","DG884P",192,0)
 Q:DGFLAG
"RTN","DG884P",193,0)
 D NEWRU ;create new RECEIVING USER (multiple)
"RTN","DG884P",194,0)
 I $D(DGERROR) D
"RTN","DG884P",195,0)
 .S DGTEXT(1)="Could not create a new RECEIVING USER for Q-PTI.VA.GOV."
"RTN","DG884P",196,0)
 .S DGTEXT(2)="Stopping installation. Log a ticket ASAP."
"RTN","DG884P",197,0)
 .D STOP
"RTN","DG884P",198,0)
 Q:$G(XPDABORT)=1
"RTN","DG884P",199,0)
 Q
"RTN","DG884P",200,0)
TURNOFF ;set TRANSMIT field (FILE 407.71, Field 2) to NO
"RTN","DG884P",201,0)
 ;for Q-PTT.VA.GOV (old transmission queue)
"RTN","DG884P",202,0)
 K DGFDA,DGERROR
"RTN","DG884P",203,0)
 S DGFDA(407.71,DGLOOP1,2)=0
"RTN","DG884P",204,0)
 D UPDATE^DIE("","DGFDA",,"DGERROR")
"RTN","DG884P",205,0)
 Q
"RTN","DG884P",206,0)
TURNON ;set TRANSMIT field (FILE 407.71, Field 2) to YES
"RTN","DG884P",207,0)
 ;for Q-PTI.VA.GOV (new transmission queue
"RTN","DG884P",208,0)
 K DGFDA,DGERROR
"RTN","DG884P",209,0)
 S DGFDA(407.71,DGLOOP1,2)=1
"RTN","DG884P",210,0)
 D UPDATE^DIE("","DGFDA",,"DGERROR")
"RTN","DG884P",211,0)
 S DGFLAG=1
"RTN","DG884P",212,0)
 Q
"RTN","DG884P",213,0)
NEWRU ;Create new RECEIVING USER
"RTN","DG884P",214,0)
 K DGFDA,DGERROR
"RTN","DG884P",215,0)
 S DGFDA(407.71,"+1,"_DGIEN_",",.01)="XXX" ;generic user
"RTN","DG884P",216,0)
 S DGFDA(407.71,"+1,"_DGIEN_",",1)=DGQPTI  ;ien of Q-PTI.VA.GOV
"RTN","DG884P",217,0)
 S DGFDA(407.71,"+1,"_DGIEN_",",2)=1       ;1=YES
"RTN","DG884P",218,0)
 D UPDATE^DIE("","DGFDA",,"DGERROR")
"RTN","DG884P",219,0)
 Q
"RTN","DG884P",220,0)
CREATE ;create a PTF125 entry in FILE 407.7
"RTN","DG884P",221,0)
 K DGFDA,DGERROR
"RTN","DG884P",222,0)
 S DGFDA(407.7,"+1,",.01)="PTF125"
"RTN","DG884P",223,0)
 S DGFDA(407.7,"+1,",.02)=100
"RTN","DG884P",224,0)
 S DGFDA(407.7,"+1,",.03)=50
"RTN","DG884P",225,0)
 D UPDATE^DIE("","DGFDA",,"DGERROR")
"RTN","DG884P",226,0)
 Q
"RTN","DG884P",227,0)
STOP ;display message and set XPDABORT=1 (stop patch install)
"RTN","DG884P",228,0)
 D BMES^XPDUTL(.DGTEXT)
"RTN","DG884P",229,0)
 S XPDABORT=1
"RTN","DG884P",230,0)
 Q
"RTN","DG884P",231,0)
 ;
"RTN","DG884P",232,0)
NEWMG ;Create new 'PTI' mail group in FILE #3.8. Add PTT members to PTI.
"RTN","DG884P",233,0)
 ;  Input: None
"RTN","DG884P",234,0)
 ; Output: None
"RTN","DG884P",235,0)
 ;
"RTN","DG884P",236,0)
 N DGIEN ;ien of record in Mail Group (#3.8) file
"RTN","DG884P",237,0)
 N DGGNM ;name of mail group
"RTN","DG884P",238,0)
 N DGTXT ;array of text to put in description field of mail group
"RTN","DG884P",239,0)
 N DGXMY ;array of local users to add to the mail group
"RTN","DG884P",240,0)
 N DGFLAG ;indicator if any PTT members exist
"RTN","DG884P",241,0)
 S DGGNM="PTI",DGFLAG="Y"
"RTN","DG884P",242,0)
 ;
"RTN","DG884P",243,0)
 D BMES^XPDUTL(">>> Creating new 'PTI' mail group...")
"RTN","DG884P",244,0)
 ;
"RTN","DG884P",245,0)
 ;short circuit if mail group already exists
"RTN","DG884P",246,0)
 I $$FIND1^DIC(3.8,"","X",DGGNM,"B") D  Q
"RTN","DG884P",247,0)
 . D MES^XPDUTL("     WARNING: Mail Group "_DGGNM_" already exists.")
"RTN","DG884P",248,0)
 . D MES^XPDUTL("     Since the mail group exists, no action is required.")
"RTN","DG884P",249,0)
 ;
"RTN","DG884P",250,0)
 ;create new mail group and add installer as a member if no PTT members
"RTN","DG884P",251,0)
 D MEMBER
"RTN","DG884P",252,0)
 I '$O(DGXMY(0)) S DGXMY($G(DUZ))="",DGFLAG="N" ;want at least one member
"RTN","DG884P",253,0)
 S DGTXT(1)="This mail group will receive confirmation mail messages from the"
"RTN","DG884P",254,0)
 S DGTXT(2)="Austin Information Technology Center (AITC) postmaster for PTF"
"RTN","DG884P",255,0)
 S DGTXT(3)="transaction messages sent to the Domain Q-PTI.VA.GOV."
"RTN","DG884P",256,0)
 S DGTXT(4)="This mail group supports the interface between PTF and the"
"RTN","DG884P",257,0)
 S DGTXT(5)="AITC."
"RTN","DG884P",258,0)
 ;
"RTN","DG884P",259,0)
 I $$MG^XMBGRP(DGGNM,0,$G(DUZ),0,.DGXMY,.DGTXT,1) D
"RTN","DG884P",260,0)
 . D MES^XPDUTL("     Mail Group "_DGGNM_" was successfully created.")
"RTN","DG884P",261,0)
 . D MES^XPDUTL("     This mail group will receive confirmation mail messages")
"RTN","DG884P",262,0)
 . D MES^XPDUTL("     from the Austin Information Technology Center (AITC)")
"RTN","DG884P",263,0)
 . D MES^XPDUTL("     postmaster for PTF transaction messages sent to the")
"RTN","DG884P",264,0)
 . D MES^XPDUTL("     Domain Q-PTI.VA.GOV.")
"RTN","DG884P",265,0)
 . D MES^XPDUTL("")
"RTN","DG884P",266,0)
 . D:DGFLAG="N" MES^XPDUTL("     You have been added as the sole member of this mail group.")
"RTN","DG884P",267,0)
 . D:DGFLAG="N" MES^XPDUTL("     Please enter other members as appropriate.")
"RTN","DG884P",268,0)
 . D:DGFLAG="Y" MES^XPDUTL("     PTT mail group members have been added to this mail group.")
"RTN","DG884P",269,0)
 E  D
"RTN","DG884P",270,0)
 . D MES^XPDUTL("     ERROR: Mail Group was not created!")
"RTN","DG884P",271,0)
 . D MES^XPDUTL("     Please enter a support ticket for assistance.")
"RTN","DG884P",272,0)
 Q
"RTN","DG884P",273,0)
MEMBER ;find MAIL GROUP (3.8) MEMBERs and set DGXMY array
"RTN","DG884P",274,0)
 N DGARRAY,DGDUZ,DGERROR,DGLOOP,DGMG
"RTN","DG884P",275,0)
 S DGMG=$O(^XMB(3.8,"B","PTT",0))
"RTN","DG884P",276,0)
 Q:'DGMG
"RTN","DG884P",277,0)
 D GETS^DIQ(3.8,DGMG_",","**","EI","DGARRAY","DGERROR")
"RTN","DG884P",278,0)
 Q:'$D(DGARRAY(3.81))  ;no MEMBERs
"RTN","DG884P",279,0)
 S DGLOOP=""
"RTN","DG884P",280,0)
 F  S DGLOOP=$O(DGARRAY(3.81,DGLOOP)) Q:DGLOOP=""  D
"RTN","DG884P",281,0)
 .S DGDUZ=$G(DGARRAY(3.81,DGLOOP,.01,"I"))
"RTN","DG884P",282,0)
 .S:DGDUZ>0 DGXMY(DGDUZ)=""
"RTN","DG884P",283,0)
 Q
"RTN","DG884P",284,0)
 ;
"RTN","DG884P",285,0)
POST ;Main entry point for Post-init items
"RTN","DG884P",286,0)
 ;
"RTN","DG884P",287,0)
 ;Item 1 - Rebuild PTF portion of the Clinical Reminders Global Index ^PXRMINDX(45).
"RTN","DG884P",288,0)
 D REINDEX
"RTN","DG884P",289,0)
 ;
"RTN","DG884P",290,0)
 ;Item 2 - Re-compile input templates
"RTN","DG884P",291,0)
 D RECOMP
"RTN","DG884P",292,0)
 ;
"RTN","DG884P",293,0)
 Q
"RTN","DG884P",294,0)
 ;
"RTN","DG884P",295,0)
PROGCHK(XPDABORT) ;
"RTN","DG884P",296,0)
 ;Check for required programmer variables
"RTN","DG884P",297,0)
 ;This procedure will determine if the installers programmer variables are set up.
"RTN","DG884P",298,0)
 ;Per KIDS documentation: During the environment check routine, use of direct
"RTN","DG884P",299,0)
 ;WRITEs must be used for output messages.
"RTN","DG884P",300,0)
 ;
"RTN","DG884P",301,0)
 ;  Input: 
"RTN","DG884P",302,0)
 ;   XPDABORT - KIDS var to indicate if install should
"RTN","DG884P",303,0)
 ;              abort, passed by reference
"RTN","DG884P",304,0)
 ;
"RTN","DG884P",305,0)
 ; Output:
"RTN","DG884P",306,0)
 ;   XPDABORT - if = 2, then abort entire installation
"RTN","DG884P",307,0)
 ;
"RTN","DG884P",308,0)
 I '$G(DUZ)!($G(DUZ(0))'="@")!('$G(DT))!($G(U)'="^") D
"RTN","DG884P",309,0)
 . W !!,"    **********"
"RTN","DG884P",310,0)
 . W !,"      ERROR: Environment check failed!"
"RTN","DG884P",311,0)
 . W !,"      Your programming variables are not set up properly. Once"
"RTN","DG884P",312,0)
 . W !,"      your programming variables are set up correctly, re-install"
"RTN","DG884P",313,0)
 . W !,"      this patch DG*5.3*884."
"RTN","DG884P",314,0)
 . W !,"    **********"
"RTN","DG884P",315,0)
 . ;tell KIDS to abort the entire installation of the distribution
"RTN","DG884P",316,0)
 . S XPDABORT=2
"RTN","DG884P",317,0)
 Q
"RTN","DG884P",318,0)
 ;
"RTN","DG884P",319,0)
REINDEX ;Rebuild the PTF portion of the Clinical Reminders Global Index
"RTN","DG884P",320,0)
 N DGINSTDT,DGRSLT,DGTEXT,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSK
"RTN","DG884P",321,0)
 ;
"RTN","DG884P",322,0)
 D BMES^XPDUTL(">>> Rebuild PTF portion of the Clinical Reminders Global Index...")
"RTN","DG884P",323,0)
 ;
"RTN","DG884P",324,0)
 ;if patch 884 has already been installed and index rebuilt, skip another rebuild
"RTN","DG884P",325,0)
 I $$INSTALDT^XPDUTL("DG*5.3*884",.DGRSLT) D
"RTN","DG884P",326,0)
 . S DGINSTDT=+$O(DGRSLT(0)) ;get first install date
"RTN","DG884P",327,0)
 . ;if index was built after first install then skip rebuild
"RTN","DG884P",328,0)
 . I $G(^PXRMINDX(45,"DATE BUILT"))>DGINSTDT D
"RTN","DG884P",329,0)
 . . S DGTEXT(1)="    The DG*5.3*884 patch has previously been installed."
"RTN","DG884P",330,0)
 . . S DGTEXT(2)="    Skipping another rebuild of the PTF portion of the index."
"RTN","DG884P",331,0)
 ;quit if a rebuild is not needed
"RTN","DG884P",332,0)
 I $D(DGTEXT(1)) D BMES^XPDUTL(.DGTEXT) Q
"RTN","DG884P",333,0)
 ;
"RTN","DG884P",334,0)
 ;queue off PTF Clinical Reminders Global Index rebuild
"RTN","DG884P",335,0)
 S ZTRTN="INDEX^DGPTDDCR"
"RTN","DG884P",336,0)
 S ZTDESC="DG*5.3*884 PTF Clinical Reminders Global Index rebuild"
"RTN","DG884P",337,0)
 S ZTDTH=$$NOW^XLFDT
"RTN","DG884P",338,0)
 S ZTIO=""
"RTN","DG884P",339,0)
 D ^%ZTLOAD
"RTN","DG884P",340,0)
 S DGTEXT(1)="    PTF Clinical Reminders Global Index rebuild queued."
"RTN","DG884P",341,0)
 S DGTEXT(2)="    The task number is "_$G(ZTSK)_"."
"RTN","DG884P",342,0)
 D MES^XPDUTL(.DGTEXT)
"RTN","DG884P",343,0)
 Q
"RTN","DG884P",344,0)
 ;
"RTN","DG884P",345,0)
RECOMP ;Recompile input templates
"RTN","DG884P",346,0)
 ;Recompile all compiled input templates that contain specific fields.
"RTN","DG884P",347,0)
 ;This is needed because the data dictionary definition of these fields
"RTN","DG884P",348,0)
 ;has changed and they are being exported via KIDS.
"RTN","DG884P",349,0)
 ;
"RTN","DG884P",350,0)
 ; Supported ICR #3352:  This ICR provides the use of DIEZ^DIKCUTL3 to recompile
"RTN","DG884P",351,0)
 ;                       all compiled input templates that contain specific fields.
"RTN","DG884P",352,0)
 ;
"RTN","DG884P",353,0)
 N DGFLD
"RTN","DG884P",354,0)
 ;
"RTN","DG884P",355,0)
 D BMES^XPDUTL(">>> Re-compiling input templates...")
"RTN","DG884P",356,0)
 ;
"RTN","DG884P",357,0)
 ;build array of file and field numbers for top-level (#45) file fields being exported
"RTN","DG884P",358,0)
 ;array format: DGFLD(file#,field)="" 
"RTN","DG884P",359,0)
 F DGFLD=79,79.16,79.17,79.18,79.19,79.201,79.21,79.22,79.23,79.24,79.241,79.242,79.243,79.244 S DGFLD(45,DGFLD)=""
"RTN","DG884P",360,0)
 F DGFLD=79.245,79.246,79.247,79.248,79.249,79.2491,79.24911,79.24912,79.24913,79.24914,79.24915 S DGFLD(45,DGFLD)=""
"RTN","DG884P",361,0)
 F DGFLD=82.01,82.02,82.03,82.04,82.05,82.06,82.07,82.08,82.09,82.1,82.11,82.12,82.13 S DGFLD(45,DGFLD)=""
"RTN","DG884P",362,0)
 F DGFLD=82.14,82.15,82.16,82.17,82.18,82.19,82.2,82.21,82.22,82.23,82.24,82.25 S DGFLD(45,DGFLD)=""
"RTN","DG884P",363,0)
 ;
"RTN","DG884P",364,0)
 ;build array of file and field numbers for 401 (#45.01) sub-file fields being exported
"RTN","DG884P",365,0)
 ;array format: DGFLD(sub-file#,field)=""
"RTN","DG884P",366,0)
 F DGFLD=8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32 S DGFLD(45.01,DGFLD)=""
"RTN","DG884P",367,0)
 ;
"RTN","DG884P",368,0)
 ;build array of file and field numbers for 501 (#45.02) sub-file fields being exported
"RTN","DG884P",369,0)
 ;array format: DGFLD(sub-file#,field)=""
"RTN","DG884P",370,0)
 F DGFLD=5,6,7,8,9,11,12,13,14,15,81.01,81.02,81.03,81.04,81.05,81.06,81.07,81.08,81.09 S DGFLD(45.02,DGFLD)=""
"RTN","DG884P",371,0)
 F DGFLD=81.1,81.11,81.12,81.13,81.14,81.15,82.01,82.02,82.03,82.04,82.05,82.06,82.07,82.08,82.09,82.1 S DGFLD(45.02,DGFLD)=""
"RTN","DG884P",372,0)
 F DGFLD=82.11,82.12,82.13,82.14,82.15,82.16,82.17,82.18,82.19,82.2,82.21,82.22,82.23,82.24,82.25 S DGFLD(45.02,DGFLD)=""
"RTN","DG884P",373,0)
 ;
"RTN","DG884P",374,0)
 ;build array of file and field numbers for 601 (#45.05) sub-file fields being exported
"RTN","DG884P",375,0)
 ;array format: DGFLD(sub-file#,field)=""
"RTN","DG884P",376,0)
 F DGFLD=4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28 S DGFLD(45.05,DGFLD)=""
"RTN","DG884P",377,0)
 ;
"RTN","DG884P",378,0)
 ;recompile all compiled input templates that contain the fields in the DGLFD array passed by reference
"RTN","DG884P",379,0)
 D DIEZ^DIKCUTL3(45,.DGFLD)
"RTN","DG884P",380,0)
 K DGFLD
"RTN","DG884P",381,0)
 ;
"RTN","DG884P",382,0)
 D BMES^XPDUTL("    Re-compile completed.")
"RTN","DG884P",383,0)
 Q
"RTN","DGICDGT")
0^1^B98953906
"RTN","DGICDGT",1,0)
DGICDGT ;BIR/SJA - ALB/AAS - ADT ICD DIAGNOSIS SEARCH ;02-Feb-2012
"RTN","DGICDGT",2,0)
 ;;5.3;Registration;**850,884**;Aug 13, 1993;Build 31
"RTN","DGICDGT",3,0)
 ;
"RTN","DGICDGT",4,0)
 ;This routine does not conform to Standard & Conventions routine naming conventions
"RTN","DGICDGT",5,0)
 ;since package routine names of DG_I* (with the exceptions of Kernel, VA FileMan, and
"RTN","DGICDGT",6,0)
 ;routines created to support the INIT process) should not be used.  The SACC has granted
"RTN","DGICDGT",7,0)
 ;an exemption for this routine.
"RTN","DGICDGT",8,0)
 ;
"RTN","DGICDGT",9,0)
 ; CSI^ICDEX     ICR 5747
"RTN","DGICDGT",10,0)
 ; SYS^ICDEX     ICR 5747
"RTN","DGICDGT",11,0)
 ; LS^ICDEX      ICR 5747
"RTN","DGICDGT",12,0)
 ;
"RTN","DGICDGT",13,0)
 ;Reference to $$ICDDATA^ICDXCODE supported by DBIA #5699
"RTN","DGICDGT",14,0)
 ;
"RTN","DGICDGT",15,0)
GETAPI(APP,TYPE,PTF,CHK,DGNODE) ;ICD-9/ICD-10 selection - called by input transform
"RTN","DGICDGT",16,0)
 ; - INPUT: X    := the initial user input to be searched on (REQUIRED)
"RTN","DGICDGT",17,0)
 ;          APP  := application name "DG PTF" ;drp removed file ref  in file 130.4;.01 (REQUIRED)
"RTN","DGICDGT",18,0)
 ;          TYPE := type of call "DIAG or "PROC" ;drp removed file ref in file 130.4;.04 (REQUIRED)
"RTN","DGICDGT",19,0)
 ;          PTF  := top level entry in file 130 (DA) used to get date to compute correct version (OPTIONAL but needs DA)
"RTN","DGICDGT",20,0)
 ;          CHK  := additional screening logic
"RTN","DGICDGT",21,0)
 ;                  Note: applications using this as an example will need to modify the code that uses this.
"RTN","DGICDGT",22,0)
 ;       DGNODE  := node variable needed to account for increased DX code storage across different
"RTN","DGICDGT",23,0)
 ;                  PTF global nodes, default=0 (OPTIONAL)
"RTN","DGICDGT",24,0)
 ; - OUTPUT: X   := the internal value to be stored in the field.
"RTN","DGICDGT",25,0)
 ;           Y   := the internal value to be stored in the field
"RTN","DGICDGT",26,0)
 ;
"RTN","DGICDGT",27,0)
 N DIC,DIE,DGPTDA,DGDT,IMPDATE,ENTRY,CODE,VERSION,DGX,LEXI,EFFDATE,IMPDATE,DGPTDAT,DGER,KEY,DUOUT,DTOUT
"RTN","DGICDGT",28,0)
 ;
"RTN","DGICDGT",29,0)
 S DGNODE=$G(DGNODE,0) ;default to 0 node if not passed
"RTN","DGICDGT",30,0)
 ;
"RTN","DGICDGT",31,0)
 I X="?BAD" S X="" D MSG("") Q
"RTN","DGICDGT",32,0)
 I X="@" K X Q
"RTN","DGICDGT",33,0)
 I '$L($G(APP)) D MSG("The Application making the call was not specified.") K X Q
"RTN","DGICDGT",34,0)
 I '$L($G(TYPE)) D MSG("The Search Type (diagnosis or procedure) was not specified.") K X Q
"RTN","DGICDGT",35,0)
 I $L($G(X))>100!($L($G(X))<1) D MSG("Answer must be 1-100 characters in length.") K X Q
"RTN","DGICDGT",36,0)
 ;
"RTN","DGICDGT",37,0)
 ;I $G(PTF)=-1 S DGPTDAT=$S($G(DGPTDAT)?7N:DGPTDAT,1:DT) D  G GO ; special case for call not related to PTF record
"RTN","DGICDGT",38,0)
 ;. K CHK
"RTN","DGICDGT",39,0)
 ;. S DGTEMP=$$IMPDATE^DGPTIC10("10D")
"RTN","DGICDGT",40,0)
 ;. S EFFDATE=+DGTEMP
"RTN","DGICDGT",41,0)
 ;. S IMPDATE=$P(DGTEMP,U,1)
"RTN","DGICDGT",42,0)
 ;. I DGPTDAT'<IMPDATE,+$P(DGTEMP,U,2)?7N S EFFDATE=+$P(DGTEMP,U,2)
"RTN","DGICDGT",43,0)
 ;
"RTN","DGICDGT",44,0)
 ; -- next FOUR lines are DG PTF Specific, plus one more line further below
"RTN","DGICDGT",45,0)
 ; - Note: X and EFFDATE are used inside the executed code
"RTN","DGICDGT",46,0)
 S DGPTDA=$S($G(PTF):PTF,$D(DA(2)):DA(2),$D(DA(1)):DA(1),$D(DA):DA,$D(D0):D0,1:"")
"RTN","DGICDGT",47,0)
 I DGPTDA="" S EFFDATE=$G(DGDRGDT),CHK="" D EFFDAT1^DGPTIC10(EFFDATE) G GO
"RTN","DGICDGT",48,0)
 I $G(^DGPT($G(DGPTDA),0))="" D MSG("Entry in the PTF file was not found.") K X Q
"RTN","DGICDGT",49,0)
 ; DGTYPE determines which EFFDATE is used inside executable code. 701 is default.
"RTN","DGICDGT",50,0)
 N DGTYPE S DGTYPE=$P($G(X1,"^701"),U,2) D EFFDATE^DGPTIC10(DGPTDA,DGTYPE)
"RTN","DGICDGT",51,0)
 ;
"RTN","DGICDGT",52,0)
GO ; -- Jump for DRG calculation
"RTN","DGICDGT",53,0)
 S VERSION=$$SYS^ICDEX(TYPE,EFFDATE)
"RTN","DGICDGT",54,0)
 I VERSION'>0 D MSG("Could not acquire the correct ICD Version for '"_TYPE_"' on "_$$FMTE^XLFDT(EFFDATE)) K X Q
"RTN","DGICDGT",55,0)
 I X["?" D  K X,Y Q
"RTN","DGICDGT",56,0)
 . N TAG S TAG=""
"RTN","DGICDGT",57,0)
 . I VERSION=30 S TAG=$S(X["???":"D3",X["??":"D2",X["?":"D1",1:"D1") D @TAG Q
"RTN","DGICDGT",58,0)
 . I VERSION=31 S TAG=$S(X["???":"P3",X["??":"P2",X["?":"P1",1:"P1") D @TAG Q
"RTN","DGICDGT",59,0)
 . I VERSION=1 S TAG="Answer with ICD-9 DIAGNOSIS CODE NUMBER, or DESCRIPTION."
"RTN","DGICDGT",60,0)
 . I VERSION=2 S TAG="Answer with ICD-9 OPERATION/PROCEDURE, or CODE NUMBER, or DESCRIPTION."
"RTN","DGICDGT",61,0)
 . S FORMAT=$S(X["??":"!?8",1:"!?5")
"RTN","DGICDGT",62,0)
 . D EN^DDIOL(TAG,"",FORMAT)
"RTN","DGICDGT",63,0)
 . Q
"RTN","DGICDGT",64,0)
 I VERSION=31,X["*" S X=$P(X,"*",1)_$P(X,"*",2)
"RTN","DGICDGT",65,0)
 ;
"RTN","DGICDGT",66,0)
 ;References to file 130.4  removed to eliminate dependency on Surgery SR*3.0*177
"RTN","DGICDGT",67,0)
 ;I VERSION=30,X?1L1N S X=$$TR(X)
"RTN","DGICDGT",68,0)
 ;S ENTRY=$O(^DIC(130.4,"C",APP,TYPE,VERSION,0))
"RTN","DGICDGT",69,0)
 ;I ENTRY'>0 D MSG("Search Entry in ICD SEARCH API file for application '"_APP_"' of type '"_TYPE_"' for Version '"_VERSION_"' is missing.") K X Q
"RTN","DGICDGT",70,0)
 ;S CODE=$G(^DIC(130.4,ENTRY,1))
"RTN","DGICDGT",71,0)
 ;Replaced previous lines with lines below.
"RTN","DGICDGT",72,0)
 S CODE=$S(VERSION=1:"S Y=$$GETICD9^DGPTF5(EFFDATE)",VERSION=30:"D LEX^DGICD",VERSION=2:"S Y=$$SEARCH^ICDSAPI(""PROC"",(""I $$LS^ICDEX(80.1,+Y,""""""_EFFDATE_"""""")=1""),""QEMZ"",EFFDATE)",VERSION=31:"D ASK^DGICP",1:-1)
"RTN","DGICDGT",73,0)
 I CODE=-1 D MSG("Search Entry in ICD SEARCH API file for application '"_APP_"' of type '"_TYPE_"' for Version '"_VERSION_"' is missing.") K X Q
"RTN","DGICDGT",74,0)
 ;
"RTN","DGICDGT",75,0)
 I '$L(CODE) D MSG("No Executable Code found for a ICD code search for type '"_TYPE_"'.") K X Q
"RTN","DGICDGT",76,0)
 I $L(CODE) X CODE
"RTN","DGICDGT",77,0)
 ;
"RTN","DGICDGT",78,0)
 ; -- execute additional checks for DG PTF
"RTN","DGICDGT",79,0)
 ;    no code entered twice, gender specific codes, requires other codes, 
"RTN","DGICDGT",80,0)
 ;    can't be used with other current codes, etc
"RTN","DGICDGT",81,0)
 S DGER=0 I $G(CHK)'="",$G(Y)>0 D @(CHK_"^DGPTFJC") I $G(DGER) K X,Y Q
"RTN","DGICDGT",82,0)
 ;
"RTN","DGICDGT",83,0)
 I $G(Y)>0 S X=+Y Q
"RTN","DGICDGT",84,0)
 K X,Y
"RTN","DGICDGT",85,0)
 Q
"RTN","DGICDGT",86,0)
MSG(TEXT) ;
"RTN","DGICDGT",87,0)
 D EN^DDIOL(TEXT)
"RTN","DGICDGT",88,0)
 Q
"RTN","DGICDGT",89,0)
 ;
"RTN","DGICDGT",90,0)
TR(X) ;
"RTN","DGICDGT",91,0)
 S X=$TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","DGICDGT",92,0)
 Q X
"RTN","DGICDGT",93,0)
D1 ; -- Diagnosis ?  Help
"RTN","DGICDGT",94,0)
 I X["???" D D3 Q  ;For calls from ^DIR, doesn't support ??? help
"RTN","DGICDGT",95,0)
 I X["??" D D2 Q
"RTN","DGICDGT",96,0)
 D EN^DDIOL("Enter code or ""text"" for more information.","","!?5")
"RTN","DGICDGT",97,0)
 D EN^DDIOL(" ")
"RTN","DGICDGT",98,0)
 Q
"RTN","DGICDGT",99,0)
 ;
"RTN","DGICDGT",100,0)
D2 ; -- Diagnosis ??  Help
"RTN","DGICDGT",101,0)
 D EN^DDIOL("Enter a ""free text"" term or part of a term such as ""femur fracture"".","","!?8")
"RTN","DGICDGT",102,0)
 D EN^DDIOL("    or","","!?8")
"RTN","DGICDGT",103,0)
 D EN^DDIOL("Enter a ""classification code"" (ICD/CPT, etc.) to find the single term","","!?8")
"RTN","DGICDGT",104,0)
 D EN^DDIOL("associated with the code","","!?8")
"RTN","DGICDGT",105,0)
 D EN^DDIOL("    or","","!?8")
"RTN","DGICDGT",106,0)
 D EN^DDIOL("Enter a ""partial code"". Include the decimal when a search criterion","","!?8")
"RTN","DGICDGT",107,0)
 D EN^DDIOL("includes 3 characters or more for code searches.","","!?8")
"RTN","DGICDGT",108,0)
 D EN^DDIOL(" ")
"RTN","DGICDGT",109,0)
 Q
"RTN","DGICDGT",110,0)
 ;
"RTN","DGICDGT",111,0)
D3 ; -- Diagnosis ???  Help
"RTN","DGICDGT",112,0)
 N HLP
"RTN","DGICDGT",113,0)
 S HLP(1)="Number of Code Matches"
"RTN","DGICDGT",114,0)
 S HLP(1,"F")="!?8"
"RTN","DGICDGT",115,0)
 S HLP(2)="----------------------"
"RTN","DGICDGT",116,0)
 S HLP(2,"F")="!?8"
"RTN","DGICDGT",117,0)
 S HLP(3)="The ICD-10 Diagnosis Code search will show the user the number of"
"RTN","DGICDGT",118,0)
 S HLP(3,"F")="!!?8"
"RTN","DGICDGT",119,0)
 S HLP(4)="matches found, indicate if additional characters in ICD code exist,"
"RTN","DGICDGT",120,0)
 S HLP(4,"F")="!?8"
"RTN","DGICDGT",121,0)
 S HLP(5)="and the number of codes within the category or subcategory that are"
"RTN","DGICDGT",122,0)
 S HLP(5,"F")="!?8"
"RTN","DGICDGT",123,0)
 S HLP(6)="available for selection.  For example:"
"RTN","DGICDGT",124,0)
 S HLP(6,"F")="!?8"
"RTN","DGICDGT",125,0)
 S HLP(8)="19 matches found"
"RTN","DGICDGT",126,0)
 S HLP(8,"F")="!!?8"
"RTN","DGICDGT",127,0)
 S HLP(10)="M91. -      Juvenile osteochondrosis of hip and pelvis (19)"
"RTN","DGICDGT",128,0)
 S HLP(10,"F")="!!?8"
"RTN","DGICDGT",129,0)
 S HLP(12)="This indicates that 19 unique matches or matching groups have been"
"RTN","DGICDGT",130,0)
 S HLP(12,"F")="!!?8"
"RTN","DGICDGT",131,0)
 S HLP(13)="found and will be displayed."
"RTN","DGICDGT",132,0)
 S HLP(13,"F")="!?8"
"RTN","DGICDGT",133,0)
 S HLP(15)="M91. -  the ""-"" indicates that there are additional characters"
"RTN","DGICDGT",134,0)
 S HLP(15,"F")="!!?8"
"RTN","DGICDGT",135,0)
 S HLP(16)="that specify unique ICD-10 codes available."
"RTN","DGICDGT",136,0)
 S HLP(16,"F")="!?8"
"RTN","DGICDGT",137,0)
 S HLP(18)="(19)   Indicates that there are 19 additional ICD-10 codes in the"
"RTN","DGICDGT",138,0)
 S HLP(18,"F")="!!?8"
"RTN","DGICDGT",139,0)
 S HLP(19)="M91 ""family"" that are possible selections."
"RTN","DGICDGT",140,0)
 S HLP(19,"F")="!?8"
"RTN","DGICDGT",141,0)
 D EN^DDIOL(.HLP)
"RTN","DGICDGT",142,0)
 Q
"RTN","DGICDGT",143,0)
 ;
"RTN","DGICDGT",144,0)
P1 ;
"RTN","DGICDGT",145,0)
 I X["???" D P3 Q  ;For calls from ^DIR, doesn't support ??? help
"RTN","DGICDGT",146,0)
 I X["??" D P2 Q
"RTN","DGICDGT",147,0)
 D EN^DDIOL("Enter the initial character(s) of an ICD-10 partial code or an","","!?5")
"RTN","DGICDGT",148,0)
 D EN^DDIOL("asterisk (*) for more information.","","!?5")
"RTN","DGICDGT",149,0)
 D EN^DDIOL(" ")
"RTN","DGICDGT",150,0)
 Q
"RTN","DGICDGT",151,0)
 ;
"RTN","DGICDGT",152,0)
P2 ;
"RTN","DGICDGT",153,0)
 D EN^DDIOL("1. Enter an ICD-10 Procedure Code.","","!?8")
"RTN","DGICDGT",154,0)
 D EN^DDIOL("      or  ","","!?8")
"RTN","DGICDGT",155,0)
 D EN^DDIOL("2. Enter any alphanumeric char values of the procedure code to ""build""","","!?8")
"RTN","DGICDGT",156,0)
 D EN^DDIOL("   an ICD-10 Procedure Code.","","!?8")
"RTN","DGICDGT",157,0)
 D EN^DDIOL("      or  ","","!?8")
"RTN","DGICDGT",158,0)
 D EN^DDIOL("3. Enter an asterisk (*) to initiate a procedure code build search. ","","!?8")
"RTN","DGICDGT",159,0)
 D EN^DDIOL(" ")
"RTN","DGICDGT",160,0)
 Q
"RTN","DGICDGT",161,0)
 ;
"RTN","DGICDGT",162,0)
P3 ;
"RTN","DGICDGT",163,0)
 D EN^DDIOL("The procedure code search provides a ""decision tree"" type structure","","!?8")
"RTN","DGICDGT",164,0)
 D EN^DDIOL("that makes use of the specific ICD-10-PCS code format and structure,","","!?8")
"RTN","DGICDGT",165,0)
 D EN^DDIOL("where all codes consist of 7 alphanumeric characters, with each","","!?8")
"RTN","DGICDGT",166,0)
 D EN^DDIOL("position in the code having a specific meaning.","","!?8")
"RTN","DGICDGT",167,0)
 D EN^DDIOL(" ")
"RTN","DGICDGT",168,0)
 Q
"RTN","DGICDGT",169,0)
 ;
"RTN","DGICDGT",170,0)
 ;TEST ; -- test api calls
"RTN","DGICDGT",171,0)
 S X="F1" W !,"1" D GETAPI^DGICDGT(,"DIAG",1) ;no application
"RTN","DGICDGT",172,0)
 S X="F1" W !,"2" D GETAPI^DGICDGT("DG PTF",,1) ;no Type
"RTN","DGICDGT",173,0)
 S X="F1" W !,"3" D GETAPI^DGICDGT("DG PTF","DIAG",199999) ;no entry is PTFF file
"RTN","DGICDGT",174,0)
 S X="" W !,"4" D GETAPI^DGICDGT("DG PTF","DIAG",1) ;Answer too short
"RTN","DGICDGT",175,0)
 S X="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
"RTN","DGICDGT",176,0)
 W !,"5" D GETAPI^DGICDGT("DG PTF","PROC",1) ;answer too long
"RTN","DGICDGT",177,0)
 S X="F1" W !,"6" D GETAPI^DGICDGT("DG PTF","DAIG",1) ; NO VERSION found
"RTN","DGICDGT",178,0)
 S X="F1" W !,"7" D GETAPI^DGICDGT("DG PTF","DIAG",1) ; no entry for Daig
"RTN","DGICDGT",179,0)
 S X="F1" W !,"8" D GETAPI^DGICDGT("DG PTF","PROC",1) ;no executable code
"RTN","DGICDGT",180,0)
 ;
"RTN","DGICDGT",181,0)
 S X="330" W !,"9 - SHOULD WORK" D GETAPI^DGICDGT("DG PTF","DIAG",1) ; This one is icd-9
"RTN","DGICDGT",182,0)
 S X="S62" W !,"10 - SHOULD WORK" D GETAPI^DGICDGT("DG PTF","DIAG",21) ; This one is icd-10
"RTN","DGICDGT",183,0)
 S X="COCAINE" W !,"11 'COCAINE' - SHOULD WORK" D GETAPI^DGICDGT("DG PTF","DIAG",21) ; This one is icd-10
"RTN","DGICDGT",184,0)
T12 S X="fracture" W !,"12 'FRACTURE'- TOO LONG" D GETAPI^DGICDGT("DG PTF","DIAG",14) ; This one is icd-10
"RTN","DGICDGT",185,0)
 Q
"RTN","DGICDGT",186,0)
D19 ;
"RTN","DGICDGT",187,0)
 I X["???" D D29 Q  ;For calls from ^DIR, doesn't support ?? OR ??? help
"RTN","DGICDGT",188,0)
 D EN^DDIOL("Enter a ""free text"" term.  Best results occur using one to")
"RTN","DGICDGT",189,0)
 D EN^DDIOL("      three full or partial words without a suffix.")
"RTN","DGICDGT",190,0)
 D EN^DDIOL("  or ")
"RTN","DGICDGT",191,0)
 D EN^DDIOL("      Enter a classification code (ICD/CPT etc) to find the single")
"RTN","DGICDGT",192,0)
 D EN^DDIOL("      term associated with the code.")
"RTN","DGICDGT",193,0)
 D EN^DDIOL("  or ")
"RTN","DGICDGT",194,0)
 D EN^DDIOL("      Enter a classification code (ICD/CPT etc) followed by a plus")
"RTN","DGICDGT",195,0)
 D EN^DDIOL("      sign (+) to retrieve all terms associated with the code. ")
"RTN","DGICDGT",196,0)
 Q
"RTN","DGICDGT",197,0)
 ;
"RTN","DGICDGT",198,0)
D29 ;
"RTN","DGICDGT",199,0)
 D EN^DDIOL("      Enter a ""free text"" term.  Best results occur using one to ")
"RTN","DGICDGT",200,0)
 D EN^DDIOL("      three full or partial words without a suffix (i.e., ""DIABETES"",")
"RTN","DGICDGT",201,0)
 D EN^DDIOL("      ""DIAB MELL"",""DIAB MELL INSUL"")")
"RTN","DGICDGT",202,0)
 D EN^DDIOL("  or  ")
"RTN","DGICDGT",203,0)
 D EN^DDIOL("      Enter a classification code (ICD/CPT etc) to find the single ")
"RTN","DGICDGT",204,0)
 D EN^DDIOL("      term associated with the code.  Example, a lookup of code 239.0 ")
"RTN","DGICDGT",205,0)
 D EN^DDIOL("      returns one and only one term, that is the preferred ")
"RTN","DGICDGT",206,0)
 D EN^DDIOL("      term for the code 239.0, ""Neoplasm of unspecified nature ")
"RTN","DGICDGT",207,0)
 D EN^DDIOL("      of digestive system""")
"RTN","DGICDGT",208,0)
 D EN^DDIOL("  or  ")
"RTN","DGICDGT",209,0)
 D EN^DDIOL("      Enter a classification code (ICD/CPT etc) followed by a plus")
"RTN","DGICDGT",210,0)
 D EN^DDIOL("      sign (+) to retrieve all terms associated with the code.  Example,")
"RTN","DGICDGT",211,0)
 D EN^DDIOL("      a lookup of 239.0+ returns all terms that are linked to the ")
"RTN","DGICDGT",212,0)
 D EN^DDIOL("      code 239.0.")
"RTN","DGICDGT",213,0)
 Q
"RTN","DGICDGT",214,0)
 ;
"RTN","DGICDGT",215,0)
P19 ;
"RTN","DGICDGT",216,0)
 N DGYN S DGYN=1
"RTN","DGICDGT",217,0)
 D EN^DDIOL("Answer with ICD-9 OPERATION/PROCEDURE, or CODE NUMBER, or DESCRIPTION")
"RTN","DGICDGT",218,0)
 I X="?" D EN^DDIOL("Do you want the entire ICD-9 OPERATION/PROCEDURE List") S %=0 D YN^DICN S DGYN=%
"RTN","DGICDGT",219,0)
 S DIC("S")="I $$CSI^ICDEX(80.1,+Y)=2"
"RTN","DGICDGT",220,0)
 S DIC("W")="N C,DINAME S IEN=+Y W ""  "" D EN^DDIOL(("" ""_$$IDOPS^ICDID(+Y)),"""",""?0"")"
"RTN","DGICDGT",221,0)
 S DIC="^ICD0(",DIC("0")="AEQMZ",DZ="??",D="B",DO="ICD OPERATION/PROCEDURE^80.1OI^4487^4480",DO(2)="80.1OI"
"RTN","DGICDGT",222,0)
 D:DGYN=1 DQ^DICQ
"RTN","DGICDGT",223,0)
 Q
"RTN","DGICDGT",224,0)
 ;
"RTN","DGICP")
0^75^B28102080
"RTN","DGICP",1,0)
DGICP ;AL/AAS/PLT KUM,WIOFO/PMK - LOOK UP ICD-10 PROCEDURE CODE ;04/15/2015 1:17 PM
"RTN","DGICP",2,0)
 ;;5.3;Registration;**850,884**;Aug 13, 1993;Build 31
"RTN","DGICP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGICP",4,0)
 ;
"RTN","DGICP",5,0)
 ;This routine does not conform to Standard & Conventions routine naming
"RTN","DGICP",6,0)
 ;conventions since package routine names of DG_I* (with the exceptions
"RTN","DGICP",7,0)
 ;of Kernel, VA FileMan, and routines created to support the INIT 
"RTN","DGICP",8,0)
 ;process) should not be used.  The SACC has granted an exemption for
"RTN","DGICP",9,0)
 ;this routine.
"RTN","DGICP",10,0)
 ;
"RTN","DGICP",11,0)
 ;copied from ICDCODLK 
"RTN","DGICP",12,0)
 ;
"RTN","DGICP",13,0)
 ; ICDDATE is EFFDATE variable that is passed in from Calling Routine
"RTN","DGICP",14,0)
 ;
"RTN","DGICP",15,0)
EN ; Initialize variables
"RTN","DGICP",16,0)
 W ! ;@IOF
"RTN","DGICP",17,0)
 D LOOK
"RTN","DGICP",18,0)
 G EXIT
"RTN","DGICP",19,0)
LOOK ; Look-up term
"RTN","DGICP",20,0)
 N X
"RTN","DGICP",21,0)
 W !! S X="" D ASK K DIC
"RTN","DGICP",22,0)
AGAIN ; Try again?
"RTN","DGICP",23,0)
 Q
"RTN","DGICP",24,0)
 ;
"RTN","DGICP",25,0)
ASK ; Get user input
"RTN","DGICP",26,0)
 N DIR,DIRUT,DIROUT,ICDDATE,ICDDATE1,ICDT1,ICDX,DGXX
"RTN","DGICP",27,0)
 Q:X="?BAD"!(X["^")
"RTN","DGICP",28,0)
 I X["?" D  K X,Y Q  ; - added here for calls that bypass ^DGICDGT
"RTN","DGICP",29,0)
 . N TAG,FORMAT
"RTN","DGICP",30,0)
 . S TAG=$S(X["???":"P3^DGICDGT",X["??":"P2^DGICDGT",X["?":"P1^DGICDGT",1:"P1^DGICDGT")
"RTN","DGICP",31,0)
 . D @TAG
"RTN","DGICP",32,0)
 . Q
"RTN","DGICP",33,0)
 S ICDDATE=$G(EFFDATE)
"RTN","DGICP",34,0)
 I $G(ICDDATE)'="" S ICDDATE1=ICDDATE
"RTN","DGICP",35,0)
 S ICDPRC=$G(X),ICDX=0
"RTN","DGICP",36,0)
 S ICDPRC=$$TR(X)
"RTN","DGICP",37,0)
 S ICDRES=1
"RTN","DGICP",38,0)
 F ICDT1=1:1 Q:($L($G(ICDPRC))>6)!(ICDPRC["^")!(ICDRES=0)  D
"RTN","DGICP",39,0)
 . S ICDRES=$$PCSDIG^LEX10CS(ICDPRC,$G(ICDDATE1))
"RTN","DGICP",40,0)
 . I ICDRES=1 D
"RTN","DGICP",41,0)
 . . D LOAD
"RTN","DGICP",42,0)
 . . D PRCDESCB
"RTN","DGICP",43,0)
 . . D PRCDESC
"RTN","DGICP",44,0)
 . . S X=$$SEL^DGICPL(.ICDS,5)
"RTN","DGICP",45,0)
 . . I X'=-1 S ICDPRC=ICDPRC_$P(X,"^",1)
"RTN","DGICP",46,0)
 . . S ICDX=1
"RTN","DGICP",47,0)
 . . D GICDPRC
"RTN","DGICP",48,0)
 . I ICDRES'=1 W !,ICDPRC_" IS NOT A VALID ICD PROCEDURE CODE" G EXIT
"RTN","DGICP",49,0)
 I ICDPRC["^" G EXIT
"RTN","DGICP",50,0)
 I $L($G(ICDPRC))=7 D
"RTN","DGICP",51,0)
 . S ICDRES=$$PCSDIG^LEX10CS(ICDPRC,$G(ICDDATE1))
"RTN","DGICP",52,0)
 . I ICDRES=1 D
"RTN","DGICP",53,0)
 . . S ICDPDESC=LEXPCDAT("PCSDESC")
"RTN","DGICP",54,0)
 . . S ICDPSTS=LEXPCDAT("STATUS")
"RTN","DGICP",55,0)
 . . D PRCDESCB
"RTN","DGICP",56,0)
 . . D PRCDESC
"RTN","DGICP",57,0)
 . . W !,"   ",ICDPDESC
"RTN","DGICP",58,0)
 . . S DGXX=+$$CODEN^ICDEX(ICDPRC,80.1)
"RTN","DGICP",59,0)
 . . I '$P(ICDPSTS,"^",1) W "   **CODE INACTIVE" I $P(ICDPSTS,"^",2)'="" S Y=$P(ICDPSTS,"^",2) D DD^%DT W " AS OF   ",Y," **",!
"RTN","DGICP",60,0)
 . I ICDRES'=1 D
"RTN","DGICP",61,0)
 . . W !,ICDPRC_" IS NOT VALID"
"RTN","DGICP",62,0)
 I $L($G(ICDPRC))>7 W !,ICDPRC_" IS NOT A VALID ICD PROCEDURE CODE"
"RTN","DGICP",63,0)
 K X,Y
"RTN","DGICP",64,0)
 S:$G(DGXX) (X,Y)=DGXX
"RTN","DGICP",65,0)
 K ICDDATE1,ICDPRC,ICDRES,ICDPDESC,ICDPSTS,LEXPCDAT
"RTN","DGICP",66,0)
 Q
"RTN","DGICP",67,0)
INPHLP ; Look-up help
"RTN","DGICP",68,0)
 Q:X["^^" "^^"  Q:X["^" "^"
"RTN","DGICP",69,0)
 W !,"      Enter a ""free text"" term.  Best results occur using one to "
"RTN","DGICP",70,0)
 W !,"      three full or partial words without a suffix"
"RTN","DGICP",71,0)
 W:$G(X)'["??" "."
"RTN","DGICP",72,0)
 W:$G(X)["??" " (i.e., ""DIABETES"","
"RTN","DGICP",73,0)
 W:$G(X)["??" !,"      ""DIAB MELL"",""DIAB MELL INSUL"")"
"RTN","DGICP",74,0)
 W !,"  or  "
"RTN","DGICP",75,0)
 W !,"      Enter a classification code (ICD/CPT etc) to find the single "
"RTN","DGICP",76,0)
 W !,"      term associated with the code."
"RTN","DGICP",77,0)
 W:$G(X)["??" "  Example, a lookup of code 239.0 "
"RTN","DGICP",78,0)
 W:$G(X)["??" !,"      returns one and only one term, that is the preferred "
"RTN","DGICP",79,0)
 W:$G(X)["??" !,"      term for the code 239.0, ""Neoplasm of unspecified nature "
"RTN","DGICP",80,0)
 W:$G(X)["??" !,"      of digestive system"""
"RTN","DGICP",81,0)
 W !,"  or  "
"RTN","DGICP",82,0)
 W !,"      Enter a classification code (ICD/CPT etc) followed by a plus"
"RTN","DGICP",83,0)
 W !,"      sign (+) to retrieve all terms associated with the code."
"RTN","DGICP",84,0)
 W:$G(X)["??" "  Example,"
"RTN","DGICP",85,0)
 W:$G(X)["??" !,"      a lookup of 239.0+ returns all terms that are linked to the "
"RTN","DGICP",86,0)
 W:$G(X)["??" !,"      code 239.0."
"RTN","DGICP",87,0)
 Q
"RTN","DGICP",88,0)
EXIT ; Clean up environment and quit
"RTN","DGICP",89,0)
 K %,DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,LEX,X,Y,ICDLEX
"RTN","DGICP",90,0)
 Q
"RTN","DGICP",91,0)
X(ICDLEX) ; Evaluate X
"RTN","DGICP",92,0)
 Q:$L($G(X)) 1  Q 0
"RTN","DGICP",93,0)
Y(ICDLEX) ; Evaluate Y
"RTN","DGICP",94,0)
 Q:+($G(Y))>1 1  Q 0
"RTN","DGICP",95,0)
LOAD ; Load dummy data
"RTN","DGICP",96,0)
 K ICDS
"RTN","DGICP",97,0)
 S ICDLOAD1=1
"RTN","DGICP",98,0)
 S PICDLOAD=""
"RTN","DGICP",99,0)
 S ICDLOAD="" F  S ICDLOAD=$O(LEXPCDAT("NEXLEV",ICDLOAD)) Q:ICDLOAD=""  D
"RTN","DGICP",100,0)
 . I ICDLOAD'=PICDLOAD D
"RTN","DGICP",101,0)
 . . S ICDS(ICDLOAD1,0)=ICDLOAD
"RTN","DGICP",102,0)
 . . S ICDS(ICDLOAD1,"LEX")=LEXPCDAT("NEXLEV",ICDLOAD,"DESC")
"RTN","DGICP",103,0)
 . . S ICDLOAD1=ICDLOAD1+1
"RTN","DGICP",104,0)
 . . S PICDLOAD=ICDLOAD
"RTN","DGICP",105,0)
 K ICDLOAD1,PICDLOAD,ICDLOAD
"RTN","DGICP",106,0)
 Q
"RTN","DGICP",107,0)
PRCDESC ; Display Descriptions of each character
"RTN","DGICP",108,0)
 S ICDPRCT=ICDPRC,ICDPRCT1="",ICDX=0
"RTN","DGICP",109,0)
 F ICDTEMP=1:1 Q:ICDPRCT=""  D
"RTN","DGICP",110,0)
 . S ICDC=$E(ICDPRCT,1,1)
"RTN","DGICP",111,0)
 . S ICDRES=$$PCSDIG^LEX10CS(ICDPRCT1,$G(ICDDATE1))
"RTN","DGICP",112,0)
 . I ICDRES'=1 D
"RTN","DGICP",113,0)
 . . S ICDPRCT=""
"RTN","DGICP",114,0)
 . I ICDRES=1 D
"RTN","DGICP",115,0)
 . . S ICDLOAD="" F  S ICDLOAD=$O(LEXPCDAT("NEXLEV",ICDLOAD)) Q:ICDLOAD=""!(ICDLOAD=ICDC)
"RTN","DGICP",116,0)
 . . I ICDLOAD=ICDC W ICDC_" - "_LEXPCDAT("NEXLEV",ICDLOAD,"DESC") W !
"RTN","DGICP",117,0)
 . . S ICDPRCT=$E(ICDPRCT,2,$L(ICDPRCT))
"RTN","DGICP",118,0)
 . . S ICDPRCT1=ICDPRCT1_ICDC
"RTN","DGICP",119,0)
 K ICDTEMP,ICDPRCT,ICDPRCT1,ICDC,ICDLOAD
"RTN","DGICP",120,0)
 Q
"RTN","DGICP",121,0)
GICDPRC ; Get ICDPRC from User
"RTN","DGICP",122,0)
AA ; Read character by character
"RTN","DGICP",123,0)
 W !
"RTN","DGICP",124,0)
 I $G(ICDX)=1 D PRCDESC  W !
"RTN","DGICP",125,0)
 W "Press '*' to display available choices for next character or '^' to exit."
"RTN","DGICP",126,0)
 W !,"ICD-10 Procedure code:"_ICDPRC
"RTN","DGICP",127,0)
 I $L(ICDPRC)>6 G BB
"RTN","DGICP",128,0)
 S ICDA=$$READ^XGF(1,300) S ICDA=$S($G(DTOUT):13,1:$A(ICDA))
"RTN","DGICP",129,0)
 ; show choices on "*"
"RTN","DGICP",130,0)
 I ICDA=42 G BB
"RTN","DGICP",131,0)
 ; Exit when Enter and is full length else ignore
"RTN","DGICP",132,0)
 I ICDA=13 G:$L(ICDPRC)>6 BB G AA
"RTN","DGICP",133,0)
 ; If Backspace is entered, truncate last character and display the ICDPRC 
"RTN","DGICP",134,0)
 I ICDA=127 S ICDPRC=$E(ICDPRC,1,$L(ICDPRC)-1) S ICDX=1 G AA
"RTN","DGICP",135,0)
 ; If ^ is entered, exit
"RTN","DGICP",136,0)
 I ICDA=94 S ICDPRC=ICDPRC_$C(ICDA) G BB
"RTN","DGICP",137,0)
 ;
"RTN","DGICP",138,0)
 ; check for valid characters
"RTN","DGICP",139,0)
 I ICDA<48!((ICDA>57)&(ICDA<65))!((ICDA>90)&(ICDA<97))!(ICDA>122) G AA
"RTN","DGICP",140,0)
 ;
"RTN","DGICP",141,0)
 ; Any character other than Enter or Backspace
"RTN","DGICP",142,0)
 I ICDA'=127 D  G:$L(ICDPRC)>6 BB G AA
"RTN","DGICP",143,0)
 . S ICDPRC=ICDPRC_$$TR($C(ICDA))
"RTN","DGICP",144,0)
 . S ICDX=1
"RTN","DGICP",145,0)
BB ;Exit
"RTN","DGICP",146,0)
 W !
"RTN","DGICP",147,0)
 K ICDA
"RTN","DGICP",148,0)
 Q
"RTN","DGICP",149,0)
PRCDESCB ; Call Before PRCDESC
"RTN","DGICP",150,0)
 W !,"ICD-10 Procedure code:"_ICDPRC
"RTN","DGICP",151,0)
 W !
"RTN","DGICP",152,0)
 Q
"RTN","DGICP",153,0)
 ;
"RTN","DGICP",154,0)
TR(X) ;
"RTN","DGICP",155,0)
 S X=$TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","DGICP",156,0)
 Q X
"RTN","DGPT101")
0^32^B16555084
"RTN","DGPT101",1,0)
DGPT101 ;ALB/MTC,HIOFO/FT - 101/701 Austin Edit Checks ;2/2/15 10:40am
"RTN","DGPT101",2,0)
 ;;5.3;Registration;**8,164,180,247,415,678,696,884**;Aug 13, 1993;Build 31
"RTN","DGPT101",3,0)
 ;
"RTN","DGPT101",4,0)
 ;no external references
"RTN","DGPT101",5,0)
 ;
"RTN","DGPT101",6,0)
EN ;
"RTN","DGPT101",7,0)
 S (DGPTFEF,DGPTERC)=0
"RTN","DGPT101",8,0)
101 ;-- process 101+701 data
"RTN","DGPT101",9,0)
 N ERROR
"RTN","DGPT101",10,0)
 ;
"RTN","DGPT101",11,0)
PARSE ;Set up record string, Call routine to parse record
"RTN","DGPT101",12,0)
 S DGPTSTR=^TMP("AEDIT",$J,NODE,SEQ)
"RTN","DGPT101",13,0)
 D SET^DGPT101P
"RTN","DGPT101",14,0)
 D NOW^%DTC S DGPTTY=(17+$E(X,1))_$E(X,2,3)
"RTN","DGPT101",15,0)
701 ;PROCESS 701
"RTN","DGPT101",16,0)
 S DGPTAL7=$O(^TMP("AEDIT",$J,"N701",SEQ)) I DGPTAL7="" S DGPTFEF=1 Q
"RTN","DGPT101",17,0)
 D SET^DGPT701 I DGPTFEF Q
"RTN","DGPT101",18,0)
SET ; Start error piece, flags
"RTN","DGPT101",19,0)
 S DGPTEDFL=0,DGPTSTR=^TMP("AEDIT",$J,NODE,SEQ)
"RTN","DGPT101",20,0)
SSN ; Start edits 
"RTN","DGPT101",21,0)
 I DGPTSSN'?9N!((DGPTPS=" ")&("9"[$E(DGPTSSN))) S DGPTERC=102 D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",22,0)
 I " P"'[DGPTPS S DGPTERC=101 D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",23,0)
 S DGPTPS=$S(DGPTPS="P":DGPTPS,1:"A")
"RTN","DGPT101",24,0)
PSEU ;check for pseudo ssn
"RTN","DGPT101",25,0)
 I DGPTPS="P" S DGPTERC=0 D PSE^DGPTAE01 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",26,0)
DTE ;admission date
"RTN","DGPT101",27,0)
 S X=DGPTDTS,%DT="XT" D ^%DT I Y<0 S DGPTERC=103 D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",28,0)
 I Y>0 D DD^%DT S DGPTADT=$E(Y,5,6)_"-"_$E(Y,1,3)_"-"_$E(Y,9,12)_" "_$S($P(Y,"@",2)]"":$E($P(Y,"@",2),1,5),1:"00:00")
"RTN","DGPT101",29,0)
 S X1=DGPTNOW,X2=$$FMDT($E(DGPTSTR,15,20)) D ^%DTC I X<0 S DGPTERC=140 D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",30,0)
 S DGPTDTS=$$FMDT($E(DGPTSTR,15,20))_"."_$E(DGPTSTR,21,24)
"RTN","DGPT101",31,0)
LN ;patient's last name
"RTN","DGPT101",32,0)
 I DGPTLN'?1.U." " S DGPTERC=105 D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",33,0)
 I DGPTFI'?.U&(DGPTFI'=" ")!((DGPTMI'?1U)&(DGPTMI'=" ")) S DGPTERC=106 D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",34,0)
SRA ;source of admission -- may need to add more edits later
"RTN","DGPT101",35,0)
 D ^DGPT10S1 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",36,0)
SRP ;source of payment
"RTN","DGPT101",37,0)
 N I
"RTN","DGPT101",38,0)
 S DGPTERC=0
"RTN","DGPT101",39,0)
 I " 1234"'[DGPTSRP S DGPTERC=109 D ERR G:DGPTEDFL EXIT G POW
"RTN","DGPT101",40,0)
 I "1234"[DGPTSRP S DGPTERC=109 F I=20:1:26 I DGPTSTTY[U_I_U S DGPTERC=0 Q
"RTN","DGPT101",41,0)
 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",42,0)
POW ;prisoner of war
"RTN","DGPT101",43,0)
 I $L(DGPTPOW)'=1!("123456789AB "'[DGPTPOW) S DGPTERC=110 D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",44,0)
MAR ;marital status
"RTN","DGPT101",45,0)
 I "MWDUSN"'[DGPTMRS S DGPTERC=111 D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",46,0)
GEN ;gender
"RTN","DGPT101",47,0)
 I "FM"'[DGPTGEN S DGPTERC=112 D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",48,0)
 S DGPTGEN1=$S(DGPTGEN="F":1,1:0)
"RTN","DGPT101",49,0)
DOB ;date of birth
"RTN","DGPT101",50,0)
 S DGPTERC=0 D DB^DGPTAE01 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",51,0)
POS ;period of service
"RTN","DGPT101",52,0)
 ;I DGPTPOS1'=" " S ERR=___ D ERR G:DGPTEDFL EXIT ;not used. should always be a space. ft 11/5/14
"RTN","DGPT101",53,0)
 S DGPTERC=0 D ^DGPT10CB I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",54,0)
EXP ;agent orange and ionizing radiation
"RTN","DGPT101",55,0)
 S DGPTERC=0 D AGO^DGPTAE01 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",56,0)
 S DGPTERC=0 D IRAD^DGPTAE01 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",57,0)
HOME ;state, county and zip code
"RTN","DGPT101",58,0)
 S DGPTERC=0 D STATE^DGPTAE01 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",59,0)
 S DGPTERC=0 D CNTY^DGPTAE01 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",60,0)
 S DGPTERC=0 D ZIP^DGPTAE01 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",61,0)
MT ;means test
"RTN","DGPT101",62,0)
 S DGPTERC=0 D MT^DGPTAE01 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",63,0)
ERI ;emergency response indicator
"RTN","DGPT101",64,0)
 S DGPTERC=0 I ("^K^"'[(U_DGPTERI_U))&(DGPTERI'=" ") S DGPTERC=125 D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",65,0)
INCOM ;income
"RTN","DGPT101",66,0)
 I DGPTDDS<2911001 G GOOD
"RTN","DGPT101",67,0)
 S DGPTERC=0 D INC^DGPTAE01 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",68,0)
 ;the following checks are added with dg*5.3*884 and will be active when icd10 is turned on. ft 11/4/14
"RTN","DGPT101",69,0)
MST ;military sexual trauma
"RTN","DGPT101",70,0)
 I DGPTFMT=3 S DGPTERC=0 D MST^DGPTAE01 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",71,0)
CV ;combat veteran
"RTN","DGPT101",72,0)
 I DGPTFMT=3 S DGPTERC=0 D CV^DGPTAE01 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",73,0)
CVDATE ;combat veteran date
"RTN","DGPT101",74,0)
 I DGPTFMT=3 S DGPTERC=0 D CVDATE^DGPTAE01 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",75,0)
SHAD ;shipboard hazard and defense
"RTN","DGPT101",76,0)
 I DGPTFMT=3 S DGPTERC=0 D SHAD^DGPTAE01 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",77,0)
GOOD ;
"RTN","DGPT101",78,0)
 W:'$D(ERROR) "."
"RTN","DGPT101",79,0)
 ;
"RTN","DGPT101",80,0)
EXIT ;
"RTN","DGPT101",81,0)
 K DGPTREC,DGPTORBD,DGPTLN,DGPTFI,DGPTMI,DGPTMRS,DGPTSTE,DGPTCTY,DGPTZIP,DGPTINC
"RTN","DGPT101",82,0)
 K DGPTSRA,DGPTTF,DGPTSRP,DGPTPOS1,DGPTEXA,DGPTEXI,DGPTMTC,DGPTDTD,DGPTDSP,DGPTDTY,DGPTDOP,DGPTDVA,DGPTDPD,DGPTDRF,DGPTDAS,DGPTDCP,DGPTDDXE,DGPTDDXO,DGPTDLR,DGPTDLC,DGPTDSC,DGPTDAGE,DGPTDRG,DGPTSTR
"RTN","DGPT101",83,0)
 K DGPT70LG,DGPT70SU,DGPT70DR,DGPT70X4,DGPTDXV1,DGPTDXV2,DGPTMST,DGPTCOMVET,DGPTCOMVETDT,DGPTSHAD
"RTN","DGPT101",84,0)
 Q
"RTN","DGPT101",85,0)
ERR ;
"RTN","DGPT101",86,0)
 D WRTERR^DGPTAE(DGPTERC,NODE,SEQ)
"RTN","DGPT101",87,0)
 S ERROR=1
"RTN","DGPT101",88,0)
 Q
"RTN","DGPT101",89,0)
FMDT(X) ; change to fm date for y2k
"RTN","DGPT101",90,0)
 N Y
"RTN","DGPT101",91,0)
 D ^%DT
"RTN","DGPT101",92,0)
 Q Y
"RTN","DGPT101P")
0^33^B14198290
"RTN","DGPT101P",1,0)
DGPT101P ;ALB/MTC,HIOFO/FT - Parse 101 record ;12/8/2014 1:22pm
"RTN","DGPT101P",2,0)
 ;;5.3;Registration;**164,678,664,884**;Aug 13, 1993;Build 31
"RTN","DGPT101P",3,0)
 ;;
"RTN","DGPT101P",4,0)
SET ; Parse 101 record
"RTN","DGPT101P",5,0)
 D:DGPTFMT=2 SET9
"RTN","DGPT101P",6,0)
 D:DGPTFMT=3 SET10
"RTN","DGPT101P",7,0)
 Q
"RTN","DGPT101P",8,0)
SET9 ;record layout before icd10 turned on
"RTN","DGPT101P",9,0)
 S DGPTDTS=$$FMDT^DGPT101($E(DGPTSTR,15,20))_"."_$E(DGPTSTR,21,24)
"RTN","DGPT101P",10,0)
 S DGPTPS=$E(DGPTSTR,5) ;pseudo ssn
"RTN","DGPT101P",11,0)
 S DGPTSSN=$E(DGPTSTR,6,14) ;social security number
"RTN","DGPT101P",12,0)
 S DGPTDTA=$E(DGPTSTR,15,24) ;admission date (mmddyy) and time (2400 clock)
"RTN","DGPT101P",13,0)
 S DGPTFAC=$E(DGPTSTR,25,30) ;facility number and suffix
"RTN","DGPT101P",14,0)
 S DGPTLN=$E(DGPTSTR,31,42) ;patient's last name
"RTN","DGPT101P",15,0)
 S DGPTFI=$E(DGPTSTR,43) ;patient's first initial
"RTN","DGPT101P",16,0)
 S DGPTMI=$E(DGPTSTR,44) ;patient's middle initial
"RTN","DGPT101P",17,0)
 S DGPTSRA=$E(DGPTSTR,45,46) ;source of admission
"RTN","DGPT101P",18,0)
 S DGPTTF=$E(DGPTSTR,47,52) ;transferring facility & suffix
"RTN","DGPT101P",19,0)
 S DGPTSRP=$E(DGPTSTR,53) ;source of payment
"RTN","DGPT101P",20,0)
 S DGPTPOW=$E(DGPTSTR,54) ;prisoner of war
"RTN","DGPT101P",21,0)
 S DGPTMRS=$E(DGPTSTR,55) ;marital status
"RTN","DGPT101P",22,0)
 S DGPTGEN=$E(DGPTSTR,56) ;sex indicator
"RTN","DGPT101P",23,0)
 S DGPTDOB=$E(DGPTSTR,57,64) ;date of birth
"RTN","DGPT101P",24,0)
 ;S DGPTBY=$E(DGPTSTR,61,64) ;year of birth <-not used. DGPT10CB sets DGPTBYR instead. ft 11/3/14
"RTN","DGPT101P",25,0)
 S DGPTPOS1=$E(DGPTSTR,65) ;space, not used
"RTN","DGPT101P",26,0)
 S DGPTPOS2=$E(DGPTSTR,66) ;period of service indicator
"RTN","DGPT101P",27,0)
 S DGPTEXA=$E(DGPTSTR,67) ;agent orange indicator
"RTN","DGPT101P",28,0)
 S DGPTEXI=$E(DGPTSTR,68) ;ionizing radiation indicator
"RTN","DGPT101P",29,0)
 S DGPTSTE=$E(DGPTSTR,69,70) ;state of residence indicator
"RTN","DGPT101P",30,0)
 S DGPTCTY=$E(DGPTSTR,71,73) ;county of residence indicator
"RTN","DGPT101P",31,0)
 S DGPTZIP=$E(DGPTSTR,74,78) ;zip code
"RTN","DGPT101P",32,0)
 S DGPTMTC=$E(DGPTSTR,79,80) ;means test indicator
"RTN","DGPT101P",33,0)
 S DGPTINC=$E(DGPTSTR,81,86) ;income
"RTN","DGPT101P",34,0)
 S DGPTERI=$E(DGPTSTR,96) ;emergency response indicator
"RTN","DGPT101P",35,0)
 S DGPTCTRY=$E(DGPTSTR,97,99) ;country code
"RTN","DGPT101P",36,0)
 Q
"RTN","DGPT101P",37,0)
SET10 ;record layout after icd10 turned on
"RTN","DGPT101P",38,0)
 S DGPTDTS=$$FMDT^DGPT101($E(DGPTSTR,15,20))_"."_$E(DGPTSTR,21,24)
"RTN","DGPT101P",39,0)
 S DGPTPS=$E(DGPTSTR,5) ;pseudo ssn
"RTN","DGPT101P",40,0)
 S DGPTSSN=$E(DGPTSTR,6,14) ;social security number
"RTN","DGPT101P",41,0)
 S DGPTDTA=$E(DGPTSTR,15,24) ;admission date (mmddyy) and time (2400 clock)
"RTN","DGPT101P",42,0)
 S DGPTFAC=$E(DGPTSTR,25,30) ;facility number and suffix
"RTN","DGPT101P",43,0)
 S DGPTLN=$E(DGPTSTR,31,42) ;patient's last name
"RTN","DGPT101P",44,0)
 S DGPTFI=$E(DGPTSTR,43) ;patient's first initial
"RTN","DGPT101P",45,0)
 S DGPTMI=$E(DGPTSTR,44) ;patient's middle initial
"RTN","DGPT101P",46,0)
 S DGPTSRA=$E(DGPTSTR,45,46) ;source of admission
"RTN","DGPT101P",47,0)
 S DGPTTF=$E(DGPTSTR,47,52) ;transferring facility & suffix
"RTN","DGPT101P",48,0)
 S DGPTSRP=$E(DGPTSTR,53) ;source of payment
"RTN","DGPT101P",49,0)
 S DGPTPOW=$E(DGPTSTR,54) ;prisoner of war
"RTN","DGPT101P",50,0)
 S DGPTMRS=$E(DGPTSTR,55) ;marital status
"RTN","DGPT101P",51,0)
 S DGPTGEN=$E(DGPTSTR,56) ;sex indicator
"RTN","DGPT101P",52,0)
 S DGPTDOB=$E(DGPTSTR,57,64) ;date of birth
"RTN","DGPT101P",53,0)
 S DGPTPOS1=$E(DGPTSTR,65) ;space, not used
"RTN","DGPT101P",54,0)
 S DGPTPOS2=$E(DGPTSTR,66) ;period of service indicator
"RTN","DGPT101P",55,0)
 S DGPTEXA=$E(DGPTSTR,67) ;agent orange indicator
"RTN","DGPT101P",56,0)
 S DGPTEXI=$E(DGPTSTR,68) ;ionizing radiation indicator
"RTN","DGPT101P",57,0)
 S DGPTSTE=$E(DGPTSTR,69,70) ;state of residence indicator
"RTN","DGPT101P",58,0)
 S DGPTCTY=$E(DGPTSTR,71,73) ;county of residence indicator
"RTN","DGPT101P",59,0)
 S DGPTZIP=$E(DGPTSTR,74,78) ;zip code
"RTN","DGPT101P",60,0)
 S DGPTMTC=$E(DGPTSTR,79,80) ;means test indicator
"RTN","DGPT101P",61,0)
 S DGPTINC=$E(DGPTSTR,81,86) ;income
"RTN","DGPT101P",62,0)
 S DGPTMST=$E(DGPTSTR,87) ;military sexual trauma
"RTN","DGPT101P",63,0)
 S DGPTCOMVET=$E(DGPTSTR,88) ;combat vet
"RTN","DGPT101P",64,0)
 S DGPTCOMVETDT=$E(DGPTSTR,89,94) ;combat vet date mmddyy
"RTN","DGPT101P",65,0)
 S DGPTSHAD=$E(DGPTSTR,95) ;shad indicator
"RTN","DGPT101P",66,0)
 S DGPTERI=$E(DGPTSTR,96) ;emergency response indicator
"RTN","DGPT101P",67,0)
 S DGPTCTRY=$E(DGPTSTR,97,99) ;country code
"RTN","DGPT101P",68,0)
 Q
"RTN","DGPT401")
0^34^B22199810
"RTN","DGPT401",1,0)
DGPT401 ;ALB/MTC,HIOFO/FT - 401/402/403 Edits ;2/19/15 2:51pm
"RTN","DGPT401",2,0)
 ;;5.3;Registration;**164,729,884**;Aug 13, 1993;Build 31
"RTN","DGPT401",3,0)
 ;
"RTN","DGPT401",4,0)
 ;no external references
"RTN","DGPT401",5,0)
 ;
"RTN","DGPT401",6,0)
 ;Edits for 401/402/403 transmission
"RTN","DGPT401",7,0)
EN ;called by RTE^DGPTAE (using indirection) 
"RTN","DGPT401",8,0)
 N ERROR
"RTN","DGPT401",9,0)
 S (DGPTEDFL,DGPTERC)=0,DGPTSTR=^TMP("AEDIT",$J,NODE,SEQ)
"RTN","DGPT401",10,0)
 S:$E(DGPTSTR,37,40)="2400" DGPTSTR=$E(DGPTSTR,1,36)_"2359"_$E(DGPTSTR,41,246)
"RTN","DGPT401",11,0)
SET ;parse data string and set variables. different record layout for dg*5.3*884
"RTN","DGPT401",12,0)
 D:DGPTFMT=2 SET9
"RTN","DGPT401",13,0)
 D:DGPTFMT=3 SET10
"RTN","DGPT401",14,0)
DATE ;date of surgery
"RTN","DGPT401",15,0)
 S DGPTSDT=$E(DGPTSTR,31,40),(X,DGPTSDD)=$$FMDT^DGPT101($E(DGPTSDT,1,6))_"."_$E(DGPTSDT,7,10) S %DT="XT" D ^%DT K %DT I Y<0 S DGPTERC=405 D ERR G:DGPTEDFL EXIT
"RTN","DGPT401",16,0)
 I (DGPTSDD<DGPTDTS)!(DGPTSDD>DGPTDDS) S DGPTERC=437 D ERR G:DGPTEDFL EXIT
"RTN","DGPT401",17,0)
 I (DGPTSDD>DGPTDDS) S DGPTERC=440 D ERR G:DGPTEDFL EXIT
"RTN","DGPT401",18,0)
 D DD^%DT S DGPTSDT=$E(Y,5,6)_"-"_$E(Y,1,3)_"-"_$E(Y,9,12)_" "_$S($P(Y,"@",2)]"":$E($P(Y,"@",2),1,5),1:"00:00")
"RTN","DGPT401",19,0)
 I DGPTSDT'?1.2N1"-"3U1"-"4N1" "2N1":"2N S DGPTERC=450 D ERR G:DGPTEDFL EXIT
"RTN","DGPT401",20,0)
 I ($P(DGPTSDD,".",2)="0000")!($P(DGPTDTS,".",2)="0000")!($P(DGPTDDS,".",2)="0000") S DGPTERC=$S(+DGPTSDD<+DGPTDTS:437,+DGPTSDD>+DGPTDDS:440,1:0)
"RTN","DGPT401",21,0)
SPEC ;specialty
"RTN","DGPT401",22,0)
 I ((DGPTSSC>63)!(DGPTSSC<48))&((DGPTSSC'=65)&(DGPTSSC'=78)&(DGPTSSC'=97)) S DGPTERC=406 D ERR G:DGPTEDFL EXIT
"RTN","DGPT401",23,0)
CHFS ;chief surgeon
"RTN","DGPT401",24,0)
 S DGPTERC=0 D CHIEF^DGPTAE04 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT401",25,0)
FAST ;first assistant
"RTN","DGPT401",26,0)
 S DGPTERC=0 D FAST^DGPTAE04 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT401",27,0)
ANES ;anesthesia technique
"RTN","DGPT401",28,0)
 S DGPTERC=0 D ANES^DGPTAE04 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT401",29,0)
SRP ;source of payment
"RTN","DGPT401",30,0)
 N I,FLAG
"RTN","DGPT401",31,0)
 I "12 "'[DGPTSSP S DGPTERC=410 D ERR G:DGPTEDFL EXIT
"RTN","DGPT401",32,0)
 S FLAG=0 F I=20:1:26 I DGPTSTTY[U_I_U S FLAG=1 Q
"RTN","DGPT401",33,0)
 G:FLAG OPCD
"RTN","DGPT401",34,0)
 I "12"[DGPTSSP S DGPTERC=410 F I=10,11,30,40,42 I DGPTSTTY[U_I_U S FLAG=1,DGPTERC=0 Q
"RTN","DGPT401",35,0)
 I FLAG D ERR G:DGPTEDFL EXIT
"RTN","DGPT401",36,0)
OPCD ;operation codes
"RTN","DGPT401",37,0)
 S DGPTERC=0 D FIRST^DGPTAE04 G:DGPTEDFL EXIT
"RTN","DGPT401",38,0)
TRANS ; Transplant status
"RTN","DGPT401",39,0)
 I DGPTFMT=2 D  ;check only if icd-9, otherwise this field will not be used with ICD-10 
"RTN","DGPT401",40,0)
 .I DGPTDDS'<2911001 G GOOD
"RTN","DGPT401",41,0)
 .S DGPTERC=0 D TRAN^DGPTAE04 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT401",42,0)
GOOD ;
"RTN","DGPT401",43,0)
 W:'$D(ERROR) "."
"RTN","DGPT401",44,0)
EXIT ;
"RTN","DGPT401",45,0)
 K DGPTSDT,DGPTSSC,DGPTSCS,DGPTSFA,DGPTSAT,DGPTSSP,DGPTSTR,DGPTSDD,DGPT40PT,DGPTXX
"RTN","DGPT401",46,0)
 K DGPTSO1,DGPTSO2,DGPTSO3,DGPTSO4,DGPTSO5,DGPTSO6,DGPTSO7,DGPTSO8,DGPTSO9,DGPTSO10
"RTN","DGPT401",47,0)
 K DGPTSO11,DGPTSO12,DGPTSO13,DGPTSO14,DGPTSO15,DGPTSO16,DGPTSO17,DGPTSO18,DGPTSO19,DGPTSO20
"RTN","DGPT401",48,0)
 K DGPTSO21,DGPTSO22,DGPTSO23,DGPTSO24,DGPTSO25
"RTN","DGPT401",49,0)
 Q
"RTN","DGPT401",50,0)
ERR ;
"RTN","DGPT401",51,0)
 D WRTERR^DGPTAE(DGPTERC,NODE,SEQ)
"RTN","DGPT401",52,0)
 S ERROR=1
"RTN","DGPT401",53,0)
 Q
"RTN","DGPT401",54,0)
SET9 ;record layout before icd10 turned on
"RTN","DGPT401",55,0)
 S DGPTSDT=$E(DGPTSTR,31,40) ;31-36 is date of surgery, 37-40 is time of surgery
"RTN","DGPT401",56,0)
 S DGPTSSC=$E(DGPTSTR,41,42) ;specialty
"RTN","DGPT401",57,0)
 S DGPTSCS=$E(DGPTSTR,43) ;category of chief surgeon
"RTN","DGPT401",58,0)
 S DGPTSFA=$E(DGPTSTR,44) ;category of first assistant
"RTN","DGPT401",59,0)
 S DGPTSAT=$E(DGPTSTR,45) ;anesthesia technique (principal)
"RTN","DGPT401",60,0)
 S DGPTSSP=$E(DGPTSTR,46) ;source of payment
"RTN","DGPT401",61,0)
 S DGPTSO1=$E(DGPTSTR,47,53) ;operation codes 1-5
"RTN","DGPT401",62,0)
 S DGPTSO2=$E(DGPTSTR,54,60)
"RTN","DGPT401",63,0)
 S DGPTSO3=$E(DGPTSTR,61,67)
"RTN","DGPT401",64,0)
 S DGPTSO4=$E(DGPTSTR,68,74)
"RTN","DGPT401",65,0)
 S DGPTSO5=$E(DGPTSTR,75,81)
"RTN","DGPT401",66,0)
 S DGPTXX=$E(DGPTSTR,82,90) ;set & killed, otherwise not used.
"RTN","DGPT401",67,0)
 S DGPT40PT=$E(DGPTSTR,91) ;transplant status. Note: not used with ICD-10
"RTN","DGPT401",68,0)
 Q
"RTN","DGPT401",69,0)
SET10 ; record layout after icd10 turned on 
"RTN","DGPT401",70,0)
 S DGPTSDT=$E(DGPTSTR,31,40) ;31-36 is date of surgery, 37-40 is time of surgery
"RTN","DGPT401",71,0)
 S DGPTSSC=$E(DGPTSTR,41,42) ;specialty
"RTN","DGPT401",72,0)
 S DGPTSCS=$E(DGPTSTR,43) ;category of chief surgeon
"RTN","DGPT401",73,0)
 S DGPTSFA=$E(DGPTSTR,44) ;category of first assistant
"RTN","DGPT401",74,0)
 S DGPTSAT=$E(DGPTSTR,45) ;anesthesia technique (principal)
"RTN","DGPT401",75,0)
 S DGPTSSP=$E(DGPTSTR,46) ;source of payment
"RTN","DGPT401",76,0)
 S DGPTSO1=$E(DGPTSTR,47,53) ;the procedure code is 7 characters, The 8th character is a space when transmitting.
"RTN","DGPT401",77,0)
 S DGPTSO2=$E(DGPTSTR,55,61) ;grabbing 7 characters instead of 8.
"RTN","DGPT401",78,0)
 S DGPTSO3=$E(DGPTSTR,63,69)
"RTN","DGPT401",79,0)
 S DGPTSO4=$E(DGPTSTR,71,77)
"RTN","DGPT401",80,0)
 S DGPTSO5=$E(DGPTSTR,79,85)
"RTN","DGPT401",81,0)
 S DGPTSO6=$E(DGPTSTR,87,93)
"RTN","DGPT401",82,0)
 S DGPTSO7=$E(DGPTSTR,95,101)
"RTN","DGPT401",83,0)
 S DGPTSO8=$E(DGPTSTR,103,109)
"RTN","DGPT401",84,0)
 S DGPTSO9=$E(DGPTSTR,111,117)
"RTN","DGPT401",85,0)
 S DGPTSO10=$E(DGPTSTR,119,125)
"RTN","DGPT401",86,0)
 S DGPTSO11=$E(DGPTSTR,127,133)
"RTN","DGPT401",87,0)
 S DGPTSO12=$E(DGPTSTR,135,141)
"RTN","DGPT401",88,0)
 S DGPTSO13=$E(DGPTSTR,143,149)
"RTN","DGPT401",89,0)
 S DGPTSO14=$E(DGPTSTR,151,157)
"RTN","DGPT401",90,0)
 S DGPTSO15=$E(DGPTSTR,159,165)
"RTN","DGPT401",91,0)
 S DGPTSO16=$E(DGPTSTR,167,173)
"RTN","DGPT401",92,0)
 S DGPTSO17=$E(DGPTSTR,175,181)
"RTN","DGPT401",93,0)
 S DGPTSO18=$E(DGPTSTR,183,189)
"RTN","DGPT401",94,0)
 S DGPTSO19=$E(DGPTSTR,191,197)
"RTN","DGPT401",95,0)
 S DGPTSO20=$E(DGPTSTR,199,205)
"RTN","DGPT401",96,0)
 S DGPTSO21=$E(DGPTSTR,207,213)
"RTN","DGPT401",97,0)
 S DGPTSO22=$E(DGPTSTR,215,221)
"RTN","DGPT401",98,0)
 S DGPTSO23=$E(DGPTSTR,223,229)
"RTN","DGPT401",99,0)
 S DGPTSO24=$E(DGPTSTR,231,237)
"RTN","DGPT401",100,0)
 S DGPTSO25=$E(DGPTSTR,239,245)
"RTN","DGPT401",101,0)
 Q
"RTN","DGPT501")
0^35^B15677318
"RTN","DGPT501",1,0)
DGPT501 ;ALB/MTC,HIOFO/FT - Set up process 501 transmission ;11/5/14 4:35pm
"RTN","DGPT501",2,0)
 ;;5.3;Registration;**64,164,529,729,884**;Aug 13, 1993;Build 31
"RTN","DGPT501",3,0)
 ;
"RTN","DGPT501",4,0)
 ;no external references
"RTN","DGPT501",5,0)
 ;
"RTN","DGPT501",6,0)
EN ;
"RTN","DGPT501",7,0)
 N ERROR
"RTN","DGPT501",8,0)
 S DGPTEDFL=0
"RTN","DGPT501",9,0)
PARSE ; Set up record string, parse record
"RTN","DGPT501",10,0)
 S DGPTSTR=^TMP("AEDIT",$J,NODE,SEQ)
"RTN","DGPT501",11,0)
 D SET^DGPT501P
"RTN","DGPT501",12,0)
DATE ;date/time of movement
"RTN","DGPT501",13,0)
 S DGPTMDT=$E(DGPTSTR,31,40),(X,DGPTMDTS)=$$FMDT^DGPT101($E(DGPTMDT,1,6))_"."_$E(DGPTMDT,7,10) S %DT="XT" D ^%DT K %DT I Y<0 S DGPTERC=505 D ERR G:DGPTEDFL EXIT G ELAPS
"RTN","DGPT501",14,0)
 D DD^%DT S DGPTMDT=$E(Y,5,6)_"-"_$E(Y,1,3)_"-"_$E(Y,9,12)_" "_$S($P(Y,"@",2)]"":$E($P(Y,"@",2),1,5),1:"00:00")
"RTN","DGPT501",15,0)
 I DGPTMDT'?1.2N1"-"3U1"-"4N1" "2N1":"2N S DGPTERC=505 D ERR G:DGPTEDFL EXIT G TSPEC
"RTN","DGPT501",16,0)
 I DGPTMDTS<DGPTDTS S DGPTERC=537 D ERR G:DGPTEDFL EXIT
"RTN","DGPT501",17,0)
 I DGPTMDTS>DGPTDDS S DGPTERC=540 D ERR G:DGPTEDFL EXIT
"RTN","DGPT501",18,0)
ELAPS ;elapsed days between movement & leave days & pass days
"RTN","DGPT501",19,0)
 S DGPTERC=0 S X1=DGPTMDTS D 501^DGPTAE03 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT501",20,0)
TSPEC ;treating specialty
"RTN","DGPT501",21,0)
 N DGPTMSC1
"RTN","DGPT501",22,0)
 I DGPTMSC'?2AN S DGPTERC=506 D ERR G:DGPTEDFL EXIT G LEAV
"RTN","DGPT501",23,0)
 S DGPTSP1=$E(DGPTMSC,1),DGPTSP2=$E(DGPTMSC,2),DGPTERC=0
"RTN","DGPT501",24,0)
 D CHECK^DGPTAE02 I DGPTERC S DGPTERC=506 D ERR G:DGPTEDFL EXIT G LEAV
"RTN","DGPT501",25,0)
 ;-- Active treating specialty edit check
"RTN","DGPT501",26,0)
 I $E(DGPTMSC,1)=0!($E(DGPTMSC,1)=" ") S DGPTMSC=$E(DGPTMSC,2)
"RTN","DGPT501",27,0)
 ; DGPTMSC  := ptf code (alpha-numeric) value (file:42.4,field:7)
"RTN","DGPT501",28,0)
 ; DGPTMSC1 := dinum value (ien, file:42.4,field:001)
"RTN","DGPT501",29,0)
 S DGPTMSC1=+$O(^DIC(42.4,"C",DGPTMSC,0))
"RTN","DGPT501",30,0)
 ;-- If not active treat spec, set flag to print error msg during
"RTN","DGPT501",31,0)
 ;-- PTF close-out error display at WRER^DGPTAEE
"RTN","DGPT501",32,0)
 I '$$ACTIVE^DGACT(42.4,DGPTMSC1,DGPTMDTS) S DGPTERC=506,DGPTSER(DGPTMDTS_501)=1 D ERR G:DGPTEDFL EXIT
"RTN","DGPT501",33,0)
LEAV ;
"RTN","DGPT501",34,0)
 I DGPTMPD'?1.3N S DGPTERC=508 D ERR G:DGPTEDFL EXIT
"RTN","DGPT501",35,0)
SPINL ;spinal cord injury
"RTN","DGPT501",36,0)
 D SP^DGPTAE03 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT501",37,0)
LOCCDR ;physical location cdr 
"RTN","DGPT501",38,0)
 I DGPTMLR'?6N S DGPTERC=575 D ERR G:DGPTEDFL EXIT G LOCTRS
"RTN","DGPT501",39,0)
 ;
"RTN","DGPT501",40,0)
LOCTRS ;physical location
"RTN","DGPT501",41,0)
 I DGPTMLC'?2AN&(DGPTMLC'="  ") S DGPTERC=576 D ERR G:DGPTEDFL EXIT G DIAG
"RTN","DGPT501",42,0)
 I DGPTMLC="  "&(DGPTMLR="000000") G DIAG
"RTN","DGPT501",43,0)
 S DGPTSP1=$E(DGPTMLC,1),DGPTSP2=$E(DGPTMLC,2),DGPTERC=0
"RTN","DGPT501",44,0)
 D CHECK^DGPTAE02 I DGPTERC S DGPTERC=576 D ERR G:DGPTEDFL EXIT
"RTN","DGPT501",45,0)
DIAG ;diagnosis
"RTN","DGPT501",46,0)
 D ^DGPT50DI G:DGPTEDFL EXIT
"RTN","DGPT501",47,0)
BSTAT ;bed status
"RTN","DGPT501",48,0)
 I "12345 "'[DGPTMBS S DGPTERC=515 D ERR G:DGPTEDFL EXIT
"RTN","DGPT501",49,0)
FY92 ;
"RTN","DGPT501",50,0)
 I DGPTDDS<2911001 G GOOD
"RTN","DGPT501",51,0)
LEG ; Legionnaires disease
"RTN","DGPT501",52,0)
 ;S DGPTERC=0 D LEG^DGPT50MS I DGPTERC D ERR G:DGPTEDFL EXIT //no longer used because of DG*5.3*683 (7/1/06). ft 10/30/14
"RTN","DGPT501",53,0)
 I DGPTFMT=2 D  ;DGPTMLG is still set with ICD9, but will not be set when ICD10 becomes active.
"RTN","DGPT501",54,0)
 .I DGPTMLG'=" " S DGPTERC=531 D ERR
"RTN","DGPT501",55,0)
SUI ; Suicide indicator
"RTN","DGPT501",56,0)
 ;DGPTMSU is set with ICD9, but not set when ICD10 becomes active.
"RTN","DGPT501",57,0)
 I DGPTFMT=2 S DGPTERC=0 D SUI^DGPT50MS I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT501",58,0)
DRUG ; Drug indicator
"RTN","DGPT501",59,0)
 ;DGPTMDG is set with ICD9, but not set when ICD10 becomes active.
"RTN","DGPT501",60,0)
 ;However, this field was made inactive with DG*5.3*683 (7/1/06). ft (10/30/14)
"RTN","DGPT501",61,0)
 ;S DGPTERC=0 D DRUG^DGPT50MS I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT501",62,0)
 I DGPTFMT=2 I DGPTMDG'="    " S DGPTERC=533 D ERR G:DGPTEDFL EXIT
"RTN","DGPT501",63,0)
AXES ;Axis 4 and 5
"RTN","DGPT501",64,0)
 ;DGPTMXIV,DGPTMXV1 & DGPTMXV2 are set with ICD9, but will not be set when ICD10 becomes active. ft (10/30/14)
"RTN","DGPT501",65,0)
 I DGPTFMT=2 D
"RTN","DGPT501",66,0)
 .I '$P($G(^DIC(42.4,+DGPTMSC1,0)),U,4) S (DGPTMXIV,DGPTMXV1,DGPTMXV2)=" " Q  ;why one space apiece? ft 11/5/14
"RTN","DGPT501",67,0)
 .S DGPTERC=0 D AXIV^DGPT50MS I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT501",68,0)
 .S DGPTERC=0 D AXV1^DGPT50MS I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT501",69,0)
 .S DGPTERC=0 D AXV2^DGPT50MS I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT501",70,0)
SERVC ; Service connected indicator
"RTN","DGPT501",71,0)
 ;DGPT50SR is set with ICD9, but will not be set when ICD10 becomes active. ft (10/30/14)
"RTN","DGPT501",72,0)
 I DGPTFMT=2 S DGPTERC=0 D SRVC^DGPT50MS I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT501",73,0)
APSSN ;attending physician ssn
"RTN","DGPT501",74,0)
 ;new with new record layout in DG*5.3*884. ft (10/30/14)
"RTN","DGPT501",75,0)
 I DGPTFMT=3 D APSSN^DGPT50MS I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT501",76,0)
GOOD ;
"RTN","DGPT501",77,0)
 W:'$D(ERROR) "."
"RTN","DGPT501",78,0)
EXIT ;
"RTN","DGPT501",79,0)
 K DGPTMD1,DGPTMD2,DGPTMD3,DGPTMD4,DGPTMD5,DGPTMD6,DGPTMD7,DGPTMD8,DGPTMD9,DGPTMD10,DGPTMD11,DGPTMD12,DGPTMD13,DGPTMD14,DGPTMD15
"RTN","DGPT501",80,0)
 K DGPTMD16,DGPTMD17,DGPTMD18,DGPTMD19,DGPTMD20,DGPTMD21,DGPTMD22,DGPTMD23,DGPTMD24,DGPTMD25
"RTN","DGPT501",81,0)
 K DGPTMDT,DGPTMDTS,DGPTMLC,DGPTMLD,DGPTMLR,DGPTMPD,DGPTMSC,DGPTMSI,DGPTMSR,DGPTMXX,DGPTSTR,DGPTS,DGPTSP1,DGPTSP2
"RTN","DGPT501",82,0)
 K DGPTMLG,DGPTMSU,DGPTMDG,DGPTMXIV,DGPTMXV1,DGPTMXV2,DGPT50SR,DGPTMBS,DGPTAPSSN
"RTN","DGPT501",83,0)
 Q
"RTN","DGPT501",84,0)
ERR ;
"RTN","DGPT501",85,0)
 D WRTERR^DGPTAE(DGPTERC,NODE,SEQ)
"RTN","DGPT501",86,0)
 S ERROR=1
"RTN","DGPT501",87,0)
 Q
"RTN","DGPT501P")
0^36^B13121491
"RTN","DGPT501P",1,0)
DGPT501P ;ALB/MTC,HIOFO/FT - Parse 501 Record ;10/29/2014 3:14pm
"RTN","DGPT501P",2,0)
 ;;5.3;Registration;**884**;Aug 13, 1993;Build 31
"RTN","DGPT501P",3,0)
 ;
"RTN","DGPT501P",4,0)
SET ; Set up 501 variables. Called from PARSE^DGPT501
"RTN","DGPT501P",5,0)
 D:DGPTFMT=2 SET9
"RTN","DGPT501P",6,0)
 D:DGPTFMT=3 SET10
"RTN","DGPT501P",7,0)
 Q
"RTN","DGPT501P",8,0)
SET9 ;record layout before icd10 turned on
"RTN","DGPT501P",9,0)
 S DGPTMSR=$E(DGPTSTR,41,46) ;specialty cdr code
"RTN","DGPT501P",10,0)
 S DGPTMSC=$E(DGPTSTR,47,48) ;specialty code
"RTN","DGPT501P",11,0)
 S DGPTMLD=$E(DGPTSTR,49,51) ;leave days
"RTN","DGPT501P",12,0)
 S DGPTMPD=$E(DGPTSTR,52,54) ;pass days
"RTN","DGPT501P",13,0)
 S DGPTMSI=$E(DGPTSTR,55) ;spinal cord injury indicator
"RTN","DGPT501P",14,0)
 S (DGPTMD1,DGPTMD11)=$P($E(DGPTSTR,56,62)," ") ;diagnosis codes 1-5
"RTN","DGPT501P",15,0)
 S DGPTMD2=$P($E(DGPTSTR,63,69)," ")
"RTN","DGPT501P",16,0)
 S DGPTMD3=$P($E(DGPTSTR,70,76)," ")
"RTN","DGPT501P",17,0)
 S DGPTMD4=$P($E(DGPTSTR,77,83)," ")
"RTN","DGPT501P",18,0)
 S DGPTMD5=$P($E(DGPTSTR,84,90)," ")
"RTN","DGPT501P",19,0)
 S DGPTMXX=$E(DGPTSTR,91,99) ;spaces, not used
"RTN","DGPT501P",20,0)
 S DGPTMLR=$E(DGPTSTR,100,105) ;physical location cdr code
"RTN","DGPT501P",21,0)
 S DGPTMLC=$E(DGPTSTR,106,107) ;physical location code
"RTN","DGPT501P",22,0)
 S DGPTMBS=$E(DGPTSTR,108) ;bed status (discharge movement only)
"RTN","DGPT501P",23,0)
 S DGPTMLG=$E(DGPTSTR,109) ;legionnaires indicator
"RTN","DGPT501P",24,0)
 S DGPTMSU=$E(DGPTSTR,110) ;suicide indicator
"RTN","DGPT501P",25,0)
 S DGPTMDG=$E(DGPTSTR,111,114) ;drug indicator
"RTN","DGPT501P",26,0)
 S DGPTMXIV=$E(DGPTSTR,115) ;axes 4 & 5
"RTN","DGPT501P",27,0)
 S DGPTMXV1=$E(DGPTSTR,116,117) ;axes 4 & 5
"RTN","DGPT501P",28,0)
 S DGPTMXV2=$E(DGPTSTR,118,119) ;axes 4 & 5
"RTN","DGPT501P",29,0)
 S DGPT50SR=$E(DGPTSTR,120) ;service
"RTN","DGPT501P",30,0)
 Q
"RTN","DGPT501P",31,0)
SET10 ;record layout after icd10 turned on
"RTN","DGPT501P",32,0)
 S DGPTMSR=$E(DGPTSTR,41,46) ;specialty cdr code
"RTN","DGPT501P",33,0)
 S DGPTMSC=$E(DGPTSTR,47,48) ;specialty code
"RTN","DGPT501P",34,0)
 S DGPTMLD=$E(DGPTSTR,49,51) ;leave days
"RTN","DGPT501P",35,0)
 S DGPTMPD=$E(DGPTSTR,52,54) ;pass days
"RTN","DGPT501P",36,0)
 S DGPTMSI=$E(DGPTSTR,55) ;spinal cord injury indicator
"RTN","DGPT501P",37,0)
 S DGPTMD1=$E(DGPTSTR,56,62),DGPTMPOA1=$E(DGPTSTR,63) ;diagnosis & poa codes
"RTN","DGPT501P",38,0)
 S DGPTMD2=$E(DGPTSTR,64,70),DGPTMPOA2=$E(DGPTSTR,71)
"RTN","DGPT501P",39,0)
 S DGPTMD3=$E(DGPTSTR,72,78),DGPTMPOA3=$E(DGPTSTR,79)
"RTN","DGPT501P",40,0)
 S DGPTMD4=$E(DGPTSTR,80,86),DGPTMPOA4=$E(DGPTSTR,87)
"RTN","DGPT501P",41,0)
 S DGPTMD5=$E(DGPTSTR,88,94),DGPTMPOA5=$E(DGPTSTR,95)
"RTN","DGPT501P",42,0)
 S DGPTMD6=$E(DGPTSTR,96,102),DGPTMPOA6=$E(DGPTSTR,103)
"RTN","DGPT501P",43,0)
 S DGPTMD7=$E(DGPTSTR,104,110),DGPTMPOA7=$E(DGPTSTR,111)
"RTN","DGPT501P",44,0)
 S DGPTMD8=$E(DGPTSTR,112,118),DGPTMPOA8=$E(DGPTSTR,119)
"RTN","DGPT501P",45,0)
 S DGPTMD9=$E(DGPTSTR,120,126),DGPTMPOA9=$E(DGPTSTR,127)
"RTN","DGPT501P",46,0)
 S DGPTMD10=$E(DGPTSTR,128,134),DGPTMPOA10=$E(DGPTSTR,135)
"RTN","DGPT501P",47,0)
 S DGPTMD11=$E(DGPTSTR,136,142),DGPTMPOA11=$E(DGPTSTR,143)
"RTN","DGPT501P",48,0)
 S DGPTMD12=$E(DGPTSTR,144,150),DGPTMPOA12=$E(DGPTSTR,151)
"RTN","DGPT501P",49,0)
 S DGPTMD13=$E(DGPTSTR,152,158),DGPTMPOA13=$E(DGPTSTR,159)
"RTN","DGPT501P",50,0)
 S DGPTMD14=$E(DGPTSTR,160,166),DGPTMPOA14=$E(DGPTSTR,167)
"RTN","DGPT501P",51,0)
 S DGPTMD15=$E(DGPTSTR,168,174),DGPTMPOA15=$E(DGPTSTR,175)
"RTN","DGPT501P",52,0)
 S DGPTMD16=$E(DGPTSTR,176,182),DGPTMPOA16=$E(DGPTSTR,183)
"RTN","DGPT501P",53,0)
 S DGPTMD17=$E(DGPTSTR,184,190),DGPTMPOA17=$E(DGPTSTR,191)
"RTN","DGPT501P",54,0)
 S DGPTMD18=$E(DGPTSTR,192,198),DGPTMPOA18=$E(DGPTSTR,199)
"RTN","DGPT501P",55,0)
 S DGPTMD19=$E(DGPTSTR,200,206),DGPTMPOA19=$E(DGPTSTR,207)
"RTN","DGPT501P",56,0)
 S DGPTMD20=$E(DGPTSTR,208,214),DGPTMPOA20=$E(DGPTSTR,215)
"RTN","DGPT501P",57,0)
 S DGPTMD21=$E(DGPTSTR,216,222),DGPTMPOA21=$E(DGPTSTR,223)
"RTN","DGPT501P",58,0)
 S DGPTMD22=$E(DGPTSTR,224,230),DGPTMPOA22=$E(DGPTSTR,231)
"RTN","DGPT501P",59,0)
 S DGPTMD23=$E(DGPTSTR,232,238),DGPTMPOA23=$E(DGPTSTR,239)
"RTN","DGPT501P",60,0)
 S DGPTMD24=$E(DGPTSTR,240,246),DGPTMPOA24=$E(DGPTSTR,247)
"RTN","DGPT501P",61,0)
 S DGPTMD25=$E(DGPTSTR,248,254),DGPTMPOA25=$E(DGPTSTR,255)
"RTN","DGPT501P",62,0)
 S DGPTAPSSN=$E(DGPTSTR,256,264) ;attending physician ssn
"RTN","DGPT501P",63,0)
 S DGPTMLR=$E(DGPTSTR,265,270) ;physical location cdr code
"RTN","DGPT501P",64,0)
 S DGPTMLC=$E(DGPTSTR,271,272) ;physical location code
"RTN","DGPT501P",65,0)
 S DGPTMBS=$E(DGPTSTR,273) ;bed status (discharge movement only)
"RTN","DGPT501P",66,0)
 Q
"RTN","DGPT50DI")
0^37^B12005227
"RTN","DGPT50DI",1,0)
DGPT50DI ;ALB/MTC/ADL,HIOFO/FT - Edit diagnoses-Check ICD DIAGNOSES, current, gender correct ;2/20/15 12:19pm
"RTN","DGPT50DI",2,0)
 ;;5.3;Registration;**510,850,884**;Aug 13, 1993;Build 31
"RTN","DGPT50DI",3,0)
 ;;ADL;Updated for CSV project;;Mar 24, 2003
"RTN","DGPT50DI",4,0)
 ;
"RTN","DGPT50DI",5,0)
 ; ICDEX APIs - #5747
"RTN","DGPT50DI",6,0)
 ; ICDXCODE APIs - #5699
"RTN","DGPT50DI",7,0)
 ;
"RTN","DGPT50DI",8,0)
EN ;
"RTN","DGPT50DI",9,0)
 I DGPTFMT=2 F I=1:1:5 S DGPTDIB=$P(@("DGPTMD"_I)," ",1) S DGPTERC=0 D DIAG(I) I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT50DI",10,0)
 I DGPTFMT=3 F I=1:1:25 S DGPTDIB=$P(@("DGPTMD"_I)," ",1),DGPTPOAI=@("DGPTMPOA"_I) D  I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT50DI",11,0)
 .I DGPTDIB="",DGPTPOAI'=" " S DGPTERC=$S(I<6:509+I,I<20:510+I,1:538+I) D ERR ;should not have a poa if the dx is null. using invalid dx error code
"RTN","DGPT50DI",12,0)
 .I "YNUW "'[DGPTPOAI S DGPTREC=$S(I<6:509+I,I<20:510+I,1:538+I) D ERR ;Y,N,U,W or space only
"RTN","DGPT50DI",13,0)
 .S DGPTERC=0 D DIAG(I)
"RTN","DGPT50DI",14,0)
 D EXIT
"RTN","DGPT50DI",15,0)
 Q
"RTN","DGPT50DI",16,0)
DIAG(I) ;
"RTN","DGPT50DI",17,0)
 Q:DGPTDIB=""
"RTN","DGPT50DI",18,0)
 N SYS,EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPT50DI",19,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT50DI",20,0)
 S SYS=$$SYS^ICDEX("DIAG",EFFDATE)
"RTN","DGPT50DI",21,0)
 I SYS=1 I $E(DGPTDIB,1)="E" S DGPTERC=0 D DIAGE Q
"RTN","DGPT50DI",22,0)
 I SYS=1 I $E(DGPTDIB,1)="V" S DGPTERC=0 D DIAGV Q
"RTN","DGPT50DI",23,0)
 S DGPTDIB1=$E(DGPTDIB_"     ",1,3)_"."_$E(DGPTDIB_"     ",4,7)_" "
"RTN","DGPT50DI",24,0)
 I +$$CODEN^ICDEX(DGPTDIB1,80)>0 S DGPTERC=0 D GEN(I) Q
"RTN","DGPT50DI",25,0)
 Q
"RTN","DGPT50DI",26,0)
ERR ;
"RTN","DGPT50DI",27,0)
 D WRTERR^DGPTAE(DGPTERC,NODE,SEQ)
"RTN","DGPT50DI",28,0)
 Q
"RTN","DGPT50DI",29,0)
EXIT ;
"RTN","DGPT50DI",30,0)
 K DGPTDIB,DGPTDIB1,DGPTDIB2,I,DGPTPOAI
"RTN","DGPT50DI",31,0)
 Q
"RTN","DGPT50DI",32,0)
 ;note: E and V codes were eliminated in ICD-10 and incorporated into the main code set.
"RTN","DGPT50DI",33,0)
DIAGE ;Supplementary Classification of Factors Influencing Health Status
"RTN","DGPT50DI",34,0)
 ; and Contact with Health Services.
"RTN","DGPT50DI",35,0)
 N SYS,EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPT50DI",36,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT50DI",37,0)
 Q:$E(DGPTDIB)'="E"
"RTN","DGPT50DI",38,0)
 I I=1 S DGPTERC=550 Q
"RTN","DGPT50DI",39,0)
 S DGPTDIB1=$E(DGPTDIB,1,4)_"."_$E(DGPTDIB,5,$L(DGPTDIB))_" "
"RTN","DGPT50DI",40,0)
 S X=+$$CODEN^ICDEX(DGPTDIB1,80) I X<1 S DGPTERC=$S(I<6:509+I,I<20:510+I,1:538+I) Q
"RTN","DGPT50DI",41,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",X,EFFDATE)
"RTN","DGPT50DI",42,0)
 I DGPTTMP=-1!('$P(DGPTTMP,U,10)) S DGPTERC=$S(I<6:509+I,I<20:510+I,1:538+I) Q
"RTN","DGPT50DI",43,0)
 I ($P(DGPTTMP,U,10)=0)&($E(DGPTMDTS,1,7)>$P(DGPTTMP,U,12)) S DGPTERC=$S(I<6:509+I,I<20:510+I,1:538+I) Q
"RTN","DGPT50DI",44,0)
 ;I ($P(DGPTTMP,U,11)]"")&(DGPTGEN'=$P(DGPTTMP,U,11)) S DGPTERC=791+I Q  ;ft 12/1/14 791 didn't exist before patch 884
"RTN","DGPT50DI",45,0)
 S @("DGPTMD"_I)=$P(DGPTDIB1," ",1)
"RTN","DGPT50DI",46,0)
 Q
"RTN","DGPT50DI",47,0)
DIAGV ; DIAG CODES = "V##.0-2# "
"RTN","DGPT50DI",48,0)
 ;Supplementary Classification of External Causes of Inquiry and Poisoning
"RTN","DGPT50DI",49,0)
 N SYS,EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPT50DI",50,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT50DI",51,0)
 Q:$E(DGPTDIB)'="V"
"RTN","DGPT50DI",52,0)
 S DGPTDIB1=$E(DGPTDIB,1,3)_"."_$E(DGPTDIB,4,$L(DGPTDIB))_" "
"RTN","DGPT50DI",53,0)
 I +$$CODEN^ICDEX(DGPTDIB1,80)<1 S DGPTERC=$S(I<6:509+I,I<20:510+I,1:538+I) Q
"RTN","DGPT50DI",54,0)
 S X=+$$CODEN^ICDEX(DGPTDIB1,80) I X<1 S DGPTERC=$S(I<6:509+I,I<20:510+I,1:538+I) Q
"RTN","DGPT50DI",55,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",X,EFFDATE)  ;use date of movement if defined, else today
"RTN","DGPT50DI",56,0)
 I DGPTTMP=-1!('$P(DGPTTMP,U,10)) S DGPTERC=$S(I<6:509+I,I<20:510+I,1:538+I) Q
"RTN","DGPT50DI",57,0)
 I ($P(DGPTTMP,U,10)=0)&($E(DGPTMDTS,1,7)>$P(DGPTTMP,U,12)) S DGPTERC=$S(I<6:509+I,I<20:510+I,1:538+I) Q
"RTN","DGPT50DI",58,0)
 I ($P(DGPTTMP,U,11)]"")&(DGPTGEN'=$P(DGPTTMP,U,11)) S DGPTERC=$S(I<6:509+I,I<20:510+I,1:538+I) Q
"RTN","DGPT50DI",59,0)
 S @("DGPTMD"_I)=$P(DGPTDIB1," ",1)
"RTN","DGPT50DI",60,0)
 Q
"RTN","DGPT50DI",61,0)
GEN(I) ;gender check - 884 no longer flags a gender error
"RTN","DGPT50DI",62,0)
 N SYS,EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPT50DI",63,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT50DI",64,0)
 S DGPTDIB2=+$$CODEN^ICDEX(DGPTDIB1,80) I DGPTDIB2<1 S DGPTERC=$S(I<6:509+I,I<20:510+I,1:538+I) Q
"RTN","DGPT50DI",65,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",DGPTDIB2,EFFDATE)
"RTN","DGPT50DI",66,0)
 I DGPTTMP=-1!('$P(DGPTTMP,U,10)) S DGPTERC=$S(I<6:509+I,I<20:510+I,1:538+I) Q
"RTN","DGPT50DI",67,0)
 ;I $P(DGPTTMP,U,11)]""&(DGPTGEN'=$P(DGPTTMP,U,11)) S DGPTERC=551 Q
"RTN","DGPT50DI",68,0)
 S @("DGPTMD"_I)=$P(DGPTDIB1," ",1)
"RTN","DGPT50DI",69,0)
 Q
"RTN","DGPT50MS")
0^38^B6178285
"RTN","DGPT50MS",1,0)
DGPT50MS ;ALB/MTC,HIOFO/FT - 501 Edits Cont ;1/26/15 4:18pm
"RTN","DGPT50MS",2,0)
 ;;5.3;Registration;**142,729,884**;Aug 13, 1993;Build 31
"RTN","DGPT50MS",3,0)
 ;
"RTN","DGPT50MS",4,0)
 ;no external references
"RTN","DGPT50MS",5,0)
 ;
"RTN","DGPT50MS",6,0)
 ; Edits for legionnaire's, suicide, drug and psych indicators
"RTN","DGPT50MS",7,0)
 ;
"RTN","DGPT50MS",8,0)
LEG ;legionnaire's indicator
"RTN","DGPT50MS",9,0)
 ;this code was commented out prior to DG*5.3*884. ft 10/30/14
"RTN","DGPT50MS",10,0)
 ;I ((+DGPTMD1=482.8)!(+DGPTMD2=482.8)!(+DGPTMD3=482.8)!(+DGPTMD3=482.8)!(+DGPTMD4=482.8)!(+DGPTMD5=482.8))&("12"'[DGPTMLG) S DGPTERC=531 Q
"RTN","DGPT50MS",11,0)
 Q
"RTN","DGPT50MS",12,0)
SUI ;suicide indicator
"RTN","DGPT50MS",13,0)
 ; -- 850 - aas - hard coded ICD codes
"RTN","DGPT50MS",14,0)
 ; -- Suicide Category is inactive JUL 1,2006
"RTN","DGPT50MS",15,0)
 Q:DGPTFMT=3  ;DGPTMSU is not sent with ICD10. ft 10/30/14
"RTN","DGPT50MS",16,0)
 N I,DGINACT
"RTN","DGPT50MS",17,0)
 S DGPTMSX=0
"RTN","DGPT50MS",18,0)
 I DGPTFMT=2 F I=1:1:5 I ($E(@("DGPTMD"_I),1,3)="E95")&("012345678"[$E(@("DGPTMD"_I),4)) S DGPTMSX=1 Q:DGPTMSX
"RTN","DGPT50MS",19,0)
 Q:'DGPTMSX
"RTN","DGPT50MS",20,0)
 I '$D(DGSCDT) D DC
"RTN","DGPT50MS",21,0)
 S DGINACT=$$GET1^DIQ(45.88,"2,",.03,"I")
"RTN","DGPT50MS",22,0)
 I DGINACT]"",$D(DGSCDT) Q:DGSCDT>DGINACT
"RTN","DGPT50MS",23,0)
 I "123"'[DGPTMSU S DGPTERC=532 Q
"RTN","DGPT50MS",24,0)
 Q
"RTN","DGPT50MS",25,0)
DRUG ;drug/substance abuse
"RTN","DGPT50MS",26,0)
 ; -- 850 - aas - hard coded ICD codes
"RTN","DGPT50MS",27,0)
 ; -- Substance Abuse Category is inactive JUL 1,2006
"RTN","DGPT50MS",28,0)
 Q:DGPTFMT=3  ;DGPTMDG is no longer set with new record layout when ICD10 is turned on, post DG*5.3*883. ft 10/30/14
"RTN","DGPT50MS",29,0)
 I DGPTFMT=2 D  ;should be 4 spaces per DG*5.3*683. ft 10/30/14
"RTN","DGPT50MS",30,0)
 .I DGPTMDG'?4" " S DGPTERC=533 Q
"RTN","DGPT50MS",31,0)
 ;N I,DGINACT
"RTN","DGPT50MS",32,0)
 ;S DGPTMSX=0
"RTN","DGPT50MS",33,0)
 ;I DGPTFMT=2 F I=1:1:5 I ($E(@("DGPTMD"_I),1,4)="304.")&("013456"[$E(@("DGPTMD"_I),5))&("0123"[$E(@("DGPTMD"_I),6)) S DGPTMSX=1 Q:DGPTMSX
"RTN","DGPT50MS",34,0)
 ;G:DGPTMSX DRG1
"RTN","DGPT50MS",35,0)
 ;I DGPTFMT=2 F I=1:1:5 I ($E(@("DGPTMD"_I),1,4)="305.")&("234579"[$E(@("DGPTMD"_I),5))&("0123"[$E(@("DGPTMD"_I),6)) S DGPTMSX=1 Q:DGPTMSX
"RTN","DGPT50MS",36,0)
DRG1 ;
"RTN","DGPT50MS",37,0)
 ;Q:'DGPTMSX
"RTN","DGPT50MS",38,0)
 ;I '$D(DGSCDT) D DC
"RTN","DGPT50MS",39,0)
 ;S DGINACT=$$GET1^DIQ(45.88,"4,",.03,"I")
"RTN","DGPT50MS",40,0)
 ;I DGINACT]"",$D(DGSCDT) Q:DGSCDT>DGINACT
"RTN","DGPT50MS",41,0)
 ;I DGPTMDG'?1A3N S DGPTERC=533 Q
"RTN","DGPT50MS",42,0)
 ;I $E(DGPTMDG,1)'="A" S DGPTERC=533 Q
"RTN","DGPT50MS",43,0)
 ;I ($E(DGPTMDG,2,4))<1!($E(DGPTMDG,2,4)>18) S DGPTERC=533 Q
"RTN","DGPT50MS",44,0)
 Q
"RTN","DGPT50MS",45,0)
AXIV ;psychiatry axis iv code
"RTN","DGPT50MS",46,0)
 Q:DGPTFMT=3  ;this field is inactive when ICD10 becomes active. ft 10/30/14
"RTN","DGPT50MS",47,0)
 N I
"RTN","DGPT50MS",48,0)
 S DGPTMSX=0 F I=1:1:5 I ($E(@("DGPTMD"_I),1,3)'<290)&($E(@("DGPTMD"_I),1,3)<320) S DGPTMSX=1 Q:DGPTMSX
"RTN","DGPT50MS",49,0)
 Q:'DGPTMSX
"RTN","DGPT50MS",50,0)
 I "0123456"'[DGPTMXIV S DGPTERC=534 Q
"RTN","DGPT50MS",51,0)
 Q
"RTN","DGPT50MS",52,0)
AXV1 ;psychiatry axis v code
"RTN","DGPT50MS",53,0)
 Q:DGPTFMT=3  ;this field is inactive when ICD10 becomes active. ft 10/30/14
"RTN","DGPT50MS",54,0)
 Q:'DGPTMSX
"RTN","DGPT50MS",55,0)
 I (DGPTMXV1<1)!(DGPTMXV1>90) S DGPTERC=535 Q
"RTN","DGPT50MS",56,0)
 Q
"RTN","DGPT50MS",57,0)
AXV2 ;psychiatry axis v code
"RTN","DGPT50MS",58,0)
 Q:DGPTFMT=3  ;this field is inactive when ICD10 becomes active. ft 10/30/14
"RTN","DGPT50MS",59,0)
 Q:'DGPTMSX
"RTN","DGPT50MS",60,0)
 Q:DGPTMXV2="  "
"RTN","DGPT50MS",61,0)
 I (DGPTMXV2<1)!(DGPTMXV2>90) S DGPTERC=535 Q
"RTN","DGPT50MS",62,0)
 Q
"RTN","DGPT50MS",63,0)
SRVC ;service indicator
"RTN","DGPT50MS",64,0)
 I " 12"'[DGPT50SR S DGPTERC=530
"RTN","DGPT50MS",65,0)
 Q
"RTN","DGPT50MS",66,0)
APSSN ;attending physician ssn
"RTN","DGPT50MS",67,0)
 ;new field with new 501 record layout in DG*5.3*884. ft (10/30/14)
"RTN","DGPT50MS",68,0)
 I (DGPTAPSSN'?9" ")&(DGPTAPSSN'?9N) S DGPTERC=501
"RTN","DGPT50MS",69,0)
 Q
"RTN","DGPT50MS",70,0)
DC ;get discharge date
"RTN","DGPT50MS",71,0)
 S DGSCDT=$S('$D(^DGPT(PTF,70)):DT,^(70):+^(70),1:DT)
"RTN","DGPT50MS",72,0)
 Q
"RTN","DGPT535")
0^65^B7151570
"RTN","DGPT535",1,0)
DGPT535 ;ALB/MTC,HIOFO/FT - Process 535 transmission ;7/8/15 1:49pm
"RTN","DGPT535",2,0)
 ;;5.3;Registration;**64,164,729,884**;Aug 13, 1993;Build 31
"RTN","DGPT535",3,0)
 ;
"RTN","DGPT535",4,0)
 ;no external references
"RTN","DGPT535",5,0)
 ;
"RTN","DGPT535",6,0)
EN ;
"RTN","DGPT535",7,0)
 S DGPTSTR=^TMP("AEDIT",$J,NODE,SEQ),DGPTEDFL=0
"RTN","DGPT535",8,0)
 S DGPTTDT=$E(DGPTSTR,31,40),(X,DGPTTDTS)=$$FMDT^DGPT101($E(DGPTTDT,1,6))_"."_$E(DGPTTDT,7,10) S %DT="XT" D ^%DT I Y<0 S DGPTERC=505 D ERR G:DGPTEDFL EXIT G SET
"RTN","DGPT535",9,0)
 D DD^%DT S DGPTTDT=$E(Y,5,6)_"-"_$E(Y,1,3)_"-"_$E(Y,9,12)_" "_$S($P(Y,"@",2)]"":$E($P(Y,"@",2),1,5),1:"00:00")
"RTN","DGPT535",10,0)
SET ;
"RTN","DGPT535",11,0)
 S DGPTTLR=$E(DGPTSTR,41,46),DGPTTLC=$E(DGPTSTR,47,48),DGPTTSR=$E(DGPTSTR,49,54),DGPTTSC=$E(DGPTSTR,55,56),DGPTTLD=$E(DGPTSTR,57,59),DGPTTPD=$E(DGPTSTR,60,62),DGPTXX=$E(DGPTSTR,63,71)
"RTN","DGPT535",12,0)
DTE ;
"RTN","DGPT535",13,0)
 S DGPTTDDS=$$FMDT^DGPT101($E(DGPTSTR,31,36))_"."_$E(DGPTSTR,37,40)
"RTN","DGPT535",14,0)
 I (DGPTTDDS'>DGPTDTS)!(DGPTTDDS'<DGPTDDS) S DGPTERC=540 D ERR G:DGPTEDFL EXIT
"RTN","DGPT535",15,0)
TSPEC ;
"RTN","DGPT535",16,0)
 N DGPTTSC1
"RTN","DGPT535",17,0)
 I DGPTTSC'?2AN S DGPTERC=506 D ERR G:DGPTEDFL EXIT
"RTN","DGPT535",18,0)
 S DGPTSP1=$E(DGPTTSC,1),DGPTSP2=$E(DGPTTSC,2),DGPTERC=0
"RTN","DGPT535",19,0)
 D CHECK^DGPTAE02 I DGPTERC S DGPTERC=506 D ERR G:DGPTEDFL EXIT G LSPEC
"RTN","DGPT535",20,0)
 ;-- Active treating specialty edit check
"RTN","DGPT535",21,0)
 I $E(DGPTTSC,1)=0!($E(DGPTTSC,1)=" ") S DGPTTSC=$E(DGPTTSC,2)
"RTN","DGPT535",22,0)
 ; DGPTTSC  := ptf code (alpha-numeric) value (file:42.4,field:7)
"RTN","DGPT535",23,0)
 ; DGPTTSC1 := dinum value (file:42.4,field:.001)
"RTN","DGPT535",24,0)
 S DGPTTSC1=+$O(^DIC(42.4,"C",DGPTTSC,0))
"RTN","DGPT535",25,0)
 ;-- If not active treat spec, set 535 flag to print error msg during
"RTN","DGPT535",26,0)
 ;-- PTF close-out error display at WRER^DGPTAEE
"RTN","DGPT535",27,0)
 ;I '$$ACTIVE^DGACT(42.4,DGPTTSC1,DGPTTDTS) S DGPTERC=506,DGPTSER(DGPTTDTS_535)=1 D ERR G:DGPTEDFL EXIT
"RTN","DGPT535",28,0)
LSPEC ;
"RTN","DGPT535",29,0)
 N DGPTTLC1
"RTN","DGPT535",30,0)
 I DGPTTLC'?2AN S DGPTERC=506 D ERR G:DGPTEDFL EXIT
"RTN","DGPT535",31,0)
 S DGPTSP1=$E(DGPTTLC,1),DGPTSP2=$E(DGPTTLC,2),DGPTERC=0
"RTN","DGPT535",32,0)
 D CHECK^DGPTAE02 I DGPTERC S DGPTERC=506 D ERR G:DGPTEDFL EXIT G LVPAS
"RTN","DGPT535",33,0)
 ;-- Active treating specialty edit check
"RTN","DGPT535",34,0)
 I $E(DGPTTLC,1)=0!($E(DGPTTLC,1)=" ") S DGPTTLC=$E(DGPTTLC,2)
"RTN","DGPT535",35,0)
 ; DGPTTLC  := ptf code (alpha-nemeric) value (file:42.4,field:7)
"RTN","DGPT535",36,0)
 ; DGPTTLC1 := dinum value (file:42.4,field:.001)
"RTN","DGPT535",37,0)
 S DGPTTLC1=+$O(^DIC(42.4,"C",DGPTTLC,0))
"RTN","DGPT535",38,0)
 ;-- If not active treat spec, set 535 flag to print error msg during
"RTN","DGPT535",39,0)
 ;-- PTF close-out error display at WRER^DGPTAEE
"RTN","DGPT535",40,0)
 ;I '$$ACTIVE^DGACT(42.4,DGPTTLC1,DGPTTDTS) S DGPTERC=506,DGPTSER(DGPTTDTS_5351)=1 D ERR G:DGPTEDFL EXIT
"RTN","DGPT535",41,0)
LVPAS ;
"RTN","DGPT535",42,0)
 I DGPTTLD'?1.3N&(DGPTTLD'="   ") S DGPTERC=507 D ERR G:DGPTEDFL EXIT
"RTN","DGPT535",43,0)
 I DGPTTPD'?1.3N&(DGPTTPD'="   ") S DGPTERC=508 D ERR G:DGPTEDFL EXIT
"RTN","DGPT535",44,0)
 S DGPTERC=0 S X1=DGPTTDTS D 535^DGPTAE03 D:DGPTERC ERR G:DGPTEDFL EXIT
"RTN","DGPT535",45,0)
ALLGD ;
"RTN","DGPT535",46,0)
 W "."
"RTN","DGPT535",47,0)
 ;
"RTN","DGPT535",48,0)
EXIT ;
"RTN","DGPT535",49,0)
 K DGPTTDT,DGPTTLR,DGPTTLC,DGPTTSR,DGPTTSC,DGPTTLD,DGPTTPD,DGPTSTR
"RTN","DGPT535",50,0)
 K DGPTLO1,DGPTLO2,DGPTS1,DGPTS2,DGPTTDTS,DGPTTDDS,DGPTXX,X,X1,Y
"RTN","DGPT535",51,0)
 Q
"RTN","DGPT535",52,0)
ERR ;
"RTN","DGPT535",53,0)
 D WRTERR^DGPTAE(DGPTERC,NODE,SEQ)
"RTN","DGPT535",54,0)
 Q
"RTN","DGPT601")
0^39^B21745672
"RTN","DGPT601",1,0)
DGPT601 ;ALB/MTC,HIOFO/FT - Process 601 transmission ;3/23/2015 5:19pm
"RTN","DGPT601",2,0)
 ;;5.3;Registration;**64,164,729,850,884**;Aug 13, 1993;Build 31
"RTN","DGPT601",3,0)
 ;
"RTN","DGPT601",4,0)
 ;no external references
"RTN","DGPT601",5,0)
 ;
"RTN","DGPT601",6,0)
 ;called from RTE^DGPTAE
"RTN","DGPT601",7,0)
EN ; Process 601 transmission
"RTN","DGPT601",8,0)
 N ERROR
"RTN","DGPT601",9,0)
 K DGPTPAR
"RTN","DGPT601",10,0)
 S DGPTSTR=^TMP("AEDIT",$J,NODE,SEQ),DGPTEDFL=0,DGPTERP=7
"RTN","DGPT601",11,0)
 S:$E(DGPTSTR,37,40)="2400" DGPTSTR=$E(DGPTSTR,1,36)_"2359"_$E(DGPTSTR,41,125)
"RTN","DGPT601",12,0)
SET ;parse data string and set variables
"RTN","DGPT601",13,0)
 D:DGPTFMT=2 SET9
"RTN","DGPT601",14,0)
 D:DGPTFMT=3 SET10
"RTN","DGPT601",15,0)
DATE ;date/time of procedure
"RTN","DGPT601",16,0)
 S (X,DGPTPDTS)=$$FMDT^DGPT101($E(DGPTPDT,1,6))_"."_$E(DGPTPDT,7,10),%DT="XT" D ^%DT I Y<0 S DGPTERC=601 D ERR G:DGPTEDFL EXIT G TSPEC
"RTN","DGPT601",17,0)
 D DD^%DT S DGPTPDT=$E(Y,5,6)_"-"_$E(Y,1,3)_"-"_$E(Y,9,12)_" "_$S($P(Y,"@",2)]"":$E($P(Y,"@",2),1,5),1:"00:00")
"RTN","DGPT601",18,0)
 I DGPTPDT'?1.2N1"-"3U1"-"4N1" "2N1":"2N S DGPTERC=601 D ERR G:DGPTEDFL EXIT
"RTN","DGPT601",19,0)
 S X1=DGPTDDS,X2=DGPTPDTS D ^%DTC I (X<0)!(%Y<0) S DGPTERC=640 D ERR G:DGPTEDFL EXIT
"RTN","DGPT601",20,0)
 S X1=DGPTPDTS,X2=DGPTDTS D ^%DTC I (X<0)!(%Y<0) S DGPTERC=637 D ERR G:DGPTEDFL EXIT
"RTN","DGPT601",21,0)
 ;
"RTN","DGPT601",22,0)
TSPEC ;treating specialty
"RTN","DGPT601",23,0)
 N DGPTPSC1
"RTN","DGPT601",24,0)
 I DGPTPSC'?2AN S DGPTERC=602 D ERR G:DGPTEDFL EXIT
"RTN","DGPT601",25,0)
 S DGPTSP1=$E(DGPTPSC,1),DGPTSP2=$E(DGPTPSC,2),DGPTERC=0
"RTN","DGPT601",26,0)
 D CHECK^DGPTAE02 I DGPTERC S DGPTERC=602 D ERR G:DGPTEDFL EXIT G DIAL
"RTN","DGPT601",27,0)
 ;-- Active treating specialty edit check
"RTN","DGPT601",28,0)
 I $E(DGPTPSC,1)=0!($E(DGPTPSC,1)=" ") S DGPTPSC=$E(DGPTPSC,2)
"RTN","DGPT601",29,0)
 ; DGPTPSC  := ptf code (alpha-numeric) value (file:42.4, field:7)
"RTN","DGPT601",30,0)
 ; DGPTPSC1 := dinum value (ien, file:42.4, field:.001)
"RTN","DGPT601",31,0)
 S DGPTPSC1=+$O(^DIC(42.4,"C",DGPTPSC,0))
"RTN","DGPT601",32,0)
 ;-- If not active treat spec, set 601 flag to print error msg during
"RTN","DGPT601",33,0)
 ;-- PTF close-out error display at WRER^DGPTAEE
"RTN","DGPT601",34,0)
 I '$$ACTIVE^DGACT(42.4,DGPTPSC1,DGPTPDTS) S DGPTERC=602,DGPTSER(DGPTPDTS_601)=1 D ERR G:DGPTEDFL EXIT
"RTN","DGPT601",35,0)
DIAL ;dialysis
"RTN","DGPT601",36,0)
 N DGLOOP,DGPTPCODE
"RTN","DGPT601",37,0)
 I DGPTPNT="   "!(+DGPTPNT'>0) D  G:DGPTEDFL EXIT
"RTN","DGPT601",38,0)
 .F DGLOOP=1:1:$S(DGPTFMT=3:25,1:5) S DGPTPCODE=@("DGPTPC"_DGLOOP) D
"RTN","DGPT601",39,0)
 ..I DGPTPCODE="3995   "!(DGPTPCODE="5498   ")!(DGPTPCODE="5092   ") S DGPTERC=604 D ERR
"RTN","DGPT601",40,0)
 ..I DGPTPCODE="5A1C00Z"!(DGPTPCODE="5A1C60Z")!(DGPTPCODE="5A1D00Z")!(DGPTPCODE="5A1D60Z")!(DGPTPCODE="3E1M39Z") S DGPTERC=604 D ERR
"RTN","DGPT601",41,0)
 ;
"RTN","DGPT601",42,0)
OPS ;operation codes
"RTN","DGPT601",43,0)
 S DGPTERC=0 D ^DGPT60PR G:DGPTEDFL EXIT
"RTN","DGPT601",44,0)
 ;
"RTN","DGPT601",45,0)
OPDUP ;--check for duplicate procedure codes
"RTN","DGPT601",46,0)
 I DGPTFMT=2 I ((DGPTPDY=" ")&(DGPTPNT="   "))&($E(DGPTSTR,47,81)?1.35" ") S DGPTERC="605Z" D ERR G EXIT
"RTN","DGPT601",47,0)
 ;I DGPTFMT=3 I ((DGPTPDY=" ")&(DGPTPNT="   "))&($E(DGPTSTR,47,245)?1.199" ") S DGPTERC="605Z" D ERR G EXIT
"RTN","DGPT601",48,0)
 ;commenting out duplicate check with dg*5.3*884 ft 11/5/14
"RTN","DGPT601",49,0)
 ;F DGPTL4=1:1:5 I $E(@("DGPTPC"_DGPTL4),1)'=" " S DGPTPAR(@("DGPTPC"_DGPTL4),DGPTL4)=""
"RTN","DGPT601",50,0)
 ;S DGPTPAR1=0 F DGPTL4=1:1:5 S DGPTPAR1=$O(DGPTPAR(DGPTPAR1)) Q:DGPTPAR1=""  D  G:DGPTEDFL EXIT
"RTN","DGPT601",51,0)
 ;. S DGPTPRA2=$O(DGPTPAR(DGPTPAR1,0))
"RTN","DGPT601",52,0)
 ;. I DGPTPRA2'="" S DGPTPRA3=$O(DGPTPAR(DGPTPAR1,DGPTPRA2))
"RTN","DGPT601",53,0)
 ;. I DGPTPRA3'="" S DGPTERC=657 D ERR
"RTN","DGPT601",54,0)
 K DGPTPAR
"RTN","DGPT601",55,0)
GOOD ;
"RTN","DGPT601",56,0)
 W:'$D(ERROR) "."
"RTN","DGPT601",57,0)
 ;
"RTN","DGPT601",58,0)
EXIT ;
"RTN","DGPT601",59,0)
 K DGPTERC,DGPTL3,DGPTL4,DGPTOP,DGPTOP1,DGPTP1,DGPTP2,DGPTPAR1
"RTN","DGPT601",60,0)
 K DGPTPC1,DGPTPC2,DGPTPC3,DGPTPC4,DGPTPC5,DGPTPC6,DGPTPC7,DGPTPC8,DGPTPC9,DGPTPC10,DGPTPC11,DGPTPC12,DGPTPC13,DGPTPC14,DGPTPC15
"RTN","DGPT601",61,0)
 K DGPTPC16,DGPTPC17,DGPTPC18,DGPTPC19,DGPTPC20,DGPTPC21,DGPTPC22,DGPTPC23,DGPTPC24,DGPTPC25
"RTN","DGPT601",62,0)
 K DGPTPDT,DGPTPDTS,DGPTPDY,DGPTPFL,DGPTPNT,DGPTPP,DGPTPRA2,DGPTPRA3,DGPTPSC,DGPTSTR,DGPTXX
"RTN","DGPT601",63,0)
 K X,X1,X2,Y
"RTN","DGPT601",64,0)
 Q
"RTN","DGPT601",65,0)
ERR ;
"RTN","DGPT601",66,0)
 D WRTERR^DGPTAE(DGPTERC,NODE,SEQ)
"RTN","DGPT601",67,0)
 S ERROR=1
"RTN","DGPT601",68,0)
 Q
"RTN","DGPT601",69,0)
DIALE ;dialysis type
"RTN","DGPT601",70,0)
 I "12345678"'[DGPTPDY S DGPTERC=603 D ERR G:DGPTEDFL EXIT
"RTN","DGPT601",71,0)
 I DGPTPNT="   "!(+DGPTPNT'>0) S DGPTERC=604 D ERR G:DGPTEDFL EXIT
"RTN","DGPT601",72,0)
 Q
"RTN","DGPT601",73,0)
SET9 ;record layout before icd10 turned on
"RTN","DGPT601",74,0)
 S DGPTPDT=$E(DGPTSTR,31,40) ;date/time of procedure
"RTN","DGPT601",75,0)
 S DGPTPSC=$E(DGPTSTR,41,42) ;specialty
"RTN","DGPT601",76,0)
 S DGPTPDY=$E(DGPTSTR,43)    ;dialysis type
"RTN","DGPT601",77,0)
 S DGPTPNT=$E(DGPTSTR,44,46) ;number of dialysis treatments
"RTN","DGPT601",78,0)
 S DGPTPC1=$E(DGPTSTR,47,53) ;procedure codes 1-5
"RTN","DGPT601",79,0)
 S DGPTPC2=$E(DGPTSTR,54,60)
"RTN","DGPT601",80,0)
 S DGPTPC3=$E(DGPTSTR,61,67)
"RTN","DGPT601",81,0)
 S DGPTPC4=$E(DGPTSTR,68,74)
"RTN","DGPT601",82,0)
 S DGPTPC5=$E(DGPTSTR,75,81)
"RTN","DGPT601",83,0)
 Q
"RTN","DGPT601",84,0)
SET10 ;record layout after icd10 turned on
"RTN","DGPT601",85,0)
 S DGPTPDT=$E(DGPTSTR,31,40) ;date/time of procedure
"RTN","DGPT601",86,0)
 S DGPTPSC=$E(DGPTSTR,41,42) ;specialty
"RTN","DGPT601",87,0)
 S DGPTPDY=$E(DGPTSTR,43)    ;dialysis type
"RTN","DGPT601",88,0)
 S DGPTPNT=$E(DGPTSTR,44,46) ;number of dialysis treatments
"RTN","DGPT601",89,0)
 S DGPTPC1=$E(DGPTSTR,47,53) ;procedure codes 1-25. 7 characters long (padded with a space when transmitting)
"RTN","DGPT601",90,0)
 S DGPTPC2=$E(DGPTSTR,55,61)
"RTN","DGPT601",91,0)
 S DGPTPC3=$E(DGPTSTR,63,69)
"RTN","DGPT601",92,0)
 S DGPTPC4=$E(DGPTSTR,71,77)
"RTN","DGPT601",93,0)
 S DGPTPC5=$E(DGPTSTR,79,85)
"RTN","DGPT601",94,0)
 S DGPTPC6=$E(DGPTSTR,87,93)
"RTN","DGPT601",95,0)
 S DGPTPC7=$E(DGPTSTR,95,101)
"RTN","DGPT601",96,0)
 S DGPTPC8=$E(DGPTSTR,103,109)
"RTN","DGPT601",97,0)
 S DGPTPC9=$E(DGPTSTR,111,117)
"RTN","DGPT601",98,0)
 S DGPTPC10=$E(DGPTSTR,119,125)
"RTN","DGPT601",99,0)
 S DGPTPC11=$E(DGPTSTR,127,133)
"RTN","DGPT601",100,0)
 S DGPTPC12=$E(DGPTSTR,135,141)
"RTN","DGPT601",101,0)
 S DGPTPC13=$E(DGPTSTR,143,149)
"RTN","DGPT601",102,0)
 S DGPTPC14=$E(DGPTSTR,151,157)
"RTN","DGPT601",103,0)
 S DGPTPC15=$E(DGPTSTR,159,165)
"RTN","DGPT601",104,0)
 S DGPTPC16=$E(DGPTSTR,167,173)
"RTN","DGPT601",105,0)
 S DGPTPC17=$E(DGPTSTR,175,181)
"RTN","DGPT601",106,0)
 S DGPTPC18=$E(DGPTSTR,183,189)
"RTN","DGPT601",107,0)
 S DGPTPC19=$E(DGPTSTR,191,197)
"RTN","DGPT601",108,0)
 S DGPTPC20=$E(DGPTSTR,199,205)
"RTN","DGPT601",109,0)
 S DGPTPC21=$E(DGPTSTR,207,213)
"RTN","DGPT601",110,0)
 S DGPTPC22=$E(DGPTSTR,215,221)
"RTN","DGPT601",111,0)
 S DGPTPC23=$E(DGPTSTR,223,229)
"RTN","DGPT601",112,0)
 S DGPTPC24=$E(DGPTSTR,231,237)
"RTN","DGPT601",113,0)
 S DGPTPC25=$E(DGPTSTR,239,245)
"RTN","DGPT601",114,0)
 Q
"RTN","DGPT60PR")
0^40^B4921445
"RTN","DGPT60PR",1,0)
DGPT60PR ;ALB/MTC/ADL,HIOFO/FT - Edit procedure codes.  In ICD0 Procedures, current, gender ok ;2/19/15 4:31pm
"RTN","DGPT60PR",2,0)
 ;;5.3;Registration;**510,870,850,884**;Aug 13, 1993;Build 31
"RTN","DGPT60PR",3,0)
 ;;ADL;Update for CSV project;;Mar. 24, 2003
"RTN","DGPT60PR",4,0)
 ;
"RTN","DGPT60PR",5,0)
 ; ICDEX APIs - #5747
"RTN","DGPT60PR",6,0)
 ; ICDXCODE APIs - #5699
"RTN","DGPT60PR",7,0)
 ;
"RTN","DGPT60PR",8,0)
EN ;called from DGPT601
"RTN","DGPT60PR",9,0)
LOOP ;
"RTN","DGPT60PR",10,0)
 S DGPTPRFL=0
"RTN","DGPT60PR",11,0)
 F DGPTL3=1:1:$S(DGPTFMT=3:25,1:5) S DGPTERC=0 D CHKPRC I DGPTERC D ERR
"RTN","DGPT60PR",12,0)
EXIT ;
"RTN","DGPT60PR",13,0)
 K DGPTOP,DGPTOP1,DGPTL3,DGPTL4,DGPTPP,DGPTPRFL,X,X1,X2
"RTN","DGPT60PR",14,0)
 Q
"RTN","DGPT60PR",15,0)
CHKPRC ;check if the procedure code exists in file 80.1
"RTN","DGPT60PR",16,0)
 N SYS,EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPT60PR",17,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT60PR",18,0)
 S SYS=$$SYS^ICDEX("PROC",EFFDATE)
"RTN","DGPT60PR",19,0)
 S DGPTERC=0,DGPTOP=(@("DGPTPC"_DGPTL3)),DGPTOP=$P(DGPTOP," ",1) Q:DGPTOP=""
"RTN","DGPT60PR",20,0)
 S DGPTERC=604+DGPTL3
"RTN","DGPT60PR",21,0)
 I SYS=2 F DGPTL4=1:1:$L(DGPTOP) S DGPTOP1=$E(DGPTOP,1,DGPTL4)_"."_$E(DGPTOP,DGPTL4+1,$L(DGPTOP)) I +$$CODEN^ICDEX(DGPTOP1,80.1)>0 S DGPTERC=0 D GEN Q
"RTN","DGPT60PR",22,0)
 I SYS=31 S DGPTOP1=DGPTOP I +$$CODEN^ICDEX(DGPTOP1,80.1)>0 S DGPTERC=0 D GEN Q
"RTN","DGPT60PR",23,0)
 Q
"RTN","DGPT60PR",24,0)
GEN ;check gender of patient
"RTN","DGPT60PR",25,0)
 N SYS,EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPT60PR",26,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT60PR",27,0)
 ;DG*5.3*850
"RTN","DGPT60PR",28,0)
 S DGPTPP=+$$CODEN^ICDEX(DGPTOP1,80.1) I DGPTPP<1 S DGPTERC=604+DGPTL3 Q
"RTN","DGPT60PR",29,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",DGPTPP,EFFDATE)
"RTN","DGPT60PR",30,0)
 I DGPTTMP<1!('$P(DGPTTMP,U,10)) S DGPTERC=604+DGPTL3 Q
"RTN","DGPT60PR",31,0)
 ;I $P(DGPTTMP,U,11)]""&(DGPTGEN'=$P(DGPTTMP,U,11)) S DGPTERC=651 Q
"RTN","DGPT60PR",32,0)
CURR ;check status and inactive date
"RTN","DGPT60PR",33,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",DGPTPP,EFFDATE)  ;use date of procedure if defined, else today
"RTN","DGPT60PR",34,0)
 I ($P(DGPTTMP,U,10)=0)&($E(DGPTPDTS,1,7)>$P(DGPTTMP,U,12)) S DGPTERC=604+DGPTL3 Q
"RTN","DGPT60PR",35,0)
SAVE ;
"RTN","DGPT60PR",36,0)
 S @("DGPTPC"_DGPTL3)=DGPTOP1
"RTN","DGPT60PR",37,0)
ARRAY ;array is used in DGPTAEE for error display in List Manager interface
"RTN","DGPT60PR",38,0)
 S DGPTPRAR(DGPTPDTS)=$S($D(DGPTPRAR(DGPTPDTS)):DGPTPRAR(DGPTPDTS)_U_DGPTPP,1:DGPTPP_U)
"RTN","DGPT60PR",39,0)
 Q
"RTN","DGPT60PR",40,0)
ERR ;
"RTN","DGPT60PR",41,0)
 D WRTERR^DGPTAE(DGPTERC,NODE,SEQ)
"RTN","DGPT60PR",42,0)
 Q
"RTN","DGPT701")
0^41^B25074534
"RTN","DGPT701",1,0)
DGPT701 ;ALB/MTC,HIOFO/FT - Process 701 Transaction ;11/5/14 1:27pm
"RTN","DGPT701",2,0)
 ;;5.3;Registration;**64,164,251,415,729,850,884**;Aug 13, 1993;Build 31
"RTN","DGPT701",3,0)
 ; 10/06/1999 ACS - Removed Place of Disposition codes M,Y,Z from the list of invalid codes.
"RTN","DGPT701",4,0)
 ;
"RTN","DGPT701",5,0)
 ;no external references
"RTN","DGPT701",6,0)
 ;
"RTN","DGPT701",7,0)
EN ;
"RTN","DGPT701",8,0)
 Q
"RTN","DGPT701",9,0)
SET ;
"RTN","DGPT701",10,0)
 S DGPTSTR=$G(^TMP("AEDIT",$J,"N701",DGPTAL7))
"RTN","DGPT701",11,0)
 ;S DGPTSTR=$G(^TMP("AEDIT",$J,"N701",SEQ))
"RTN","DGPT701",12,0)
 D PARSE^DGPT701P
"RTN","DGPT701",13,0)
DTE ;
"RTN","DGPT701",14,0)
 S (X,DGPTDDS)=$$FMDT^DGPT101($E(DGPTDDTD,1,6))_"."_$E(DGPTDDTD,7,10)
"RTN","DGPT701",15,0)
 S %DT="XT" D ^%DT I Y<0 S DGPTERC=705 D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",16,0)
 I Y>0 D DD^%DT S DGPTDTD=$E(Y,5,6)_"-"_$E(Y,1,3)_"-"_$E(Y,9,12)_" "_$S($P(Y,"@",2)]"":$E($P(Y,"@",2),1,5),1:"00:00")
"RTN","DGPT701",17,0)
 S X1=DGPTNOW,X2=+DGPTDDS D ^%DTC I X<0 S DGPTERC=740 D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",18,0)
 S X1=+DGPTDDS,X2=+DGPTDTS D ^%DTC S DGPTELP=X I X<0 S DGPTERC=737 D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",19,0)
CHECK ;
"RTN","DGPT701",20,0)
TSPEC ; CHECK TREATING SPECIALTY CODE
"RTN","DGPT701",21,0)
 N DGPTDSP1
"RTN","DGPT701",22,0)
 I DGPTDSP'?2AN S DGPTERC=706 D ERR G:DGPTEDFL EXIT G DISPTY
"RTN","DGPT701",23,0)
 S DGPTSP1=$E(DGPTDSP,1),DGPTSP2=$E(DGPTDSP,2),DGPTERC=0
"RTN","DGPT701",24,0)
 D CHECK^DGPTAE02 I DGPTERC S DGPTERC=706 D ERR G:DGPTEDFL EXIT G DISPTY
"RTN","DGPT701",25,0)
 ;-- Active treating specialty edit check
"RTN","DGPT701",26,0)
 I $E(DGPTDSP,1)=0!($E(DGPTDSP,1)=" ") S DGPTDSP=$E(DGPTDSP,2)
"RTN","DGPT701",27,0)
 ; DGPTDSP  := ptf code (alpha-numeric) value (file:42.4,field:7)
"RTN","DGPT701",28,0)
 ; DGPTDSP1 := dinum value (ien, file:42.4,field:.001)
"RTN","DGPT701",29,0)
 S DGPTDSP1=+$O(^DIC(42.4,"C",DGPTDSP,0))
"RTN","DGPT701",30,0)
 ;-- If not active treat spec, set flag to print error msg during
"RTN","DGPT701",31,0)
 ;-- PTF Close-out Error display at WRER^DGPTAEE
"RTN","DGPT701",32,0)
 I '$$ACTIVE^DGACT(42.4,DGPTDSP1,DGPTDDS) S DGPTERC=706,DGPTSER(DGPTDDS_701)=1 D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",33,0)
 ;
"RTN","DGPT701",34,0)
DISPTY ;type of disposition
"RTN","DGPT701",35,0)
 I (DGPTDTY<1)!(DGPTDTY>7) S DGPTERC=707 D ERR G:DGPTEDFL EXIT G OPCAR
"RTN","DGPT701",36,0)
 S DGPTERC=0 D DISPTY^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",37,0)
OPCAR ;outpatient care status
"RTN","DGPT701",38,0)
 I "13 "'[DGPTDOP S DGPTERC=708 D ERR G:DGPTEDFL EXIT G VA
"RTN","DGPT701",39,0)
 I DGPTDOP'=" " S DGPTERC=0 D OP^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",40,0)
VA ;under va auspices
"RTN","DGPT701",41,0)
 I "12 "'[DGPTDVA S DGPTERC=709 D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",42,0)
 ;
"RTN","DGPT701",43,0)
VAOP ;check for inconsistencies between outpatient care and va auspices
"RTN","DGPT701",44,0)
 I DGPTDVA=2,DGPTDOP=1 D  G:DGPTEDFL EXIT
"RTN","DGPT701",45,0)
 . S DGPTERC=708 D ERR
"RTN","DGPT701",46,0)
 . S DGPTERC=709 D ERR
"RTN","DGPT701",47,0)
CDR ;physical location cdr code
"RTN","DGPT701",48,0)
 I DGPTDLR'?6" "&(DGPTDLR'?." "6N) S DGPTERC=775 D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",49,0)
POD ;place of disposition
"RTN","DGPT701",50,0)
 I "68EINOQSVW"[DGPTDPD S DGPTERC=710 D ERR G:DGPTEDFL EXIT G RECF
"RTN","DGPT701",51,0)
 S DGPTERC=0 D POD^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",52,0)
RECF ;receiving facility number & suffix
"RTN","DGPT701",53,0)
 I DGPTDVA'=1!(DGPTDRF="      ") G ASIH
"RTN","DGPT701",54,0)
 I DGPTDRF[" " S DGPTDRF=$P(DGPTDRF," ",1)
"RTN","DGPT701",55,0)
 I DGPTDRF="" S DGPTERC=711 D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",56,0)
ASIH ;extended care days - absent sick in hospital
"RTN","DGPT701",57,0)
 I DGPTDAS'="   ",DGPTDAS'?2E1N S DGPTERC=712 D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",58,0)
 ;
"RTN","DGPT701",59,0)
LEAVE ;check leave days+pass days with total length of stay
"RTN","DGPT701",60,0)
 S DGPTERC=0 D LEAVE^DGPTAE02 D:DGPTERC ERR G:DGPTEDFL EXIT
"RTN","DGPT701",61,0)
SC ;percentage of service connected
"RTN","DGPT701",62,0)
 G:DGPTFMT=3 CP ;not set or checked after icd10 turned on. ft 10/30/14
"RTN","DGPT701",63,0)
 I DGPTDSC'="   "&(DGPTDSC'?3N) S DGPTERC=730 D ERR G:DGPTEDFL EXIT G CP
"RTN","DGPT701",64,0)
 S DGPTDSC=+DGPTDSC
"RTN","DGPT701",65,0)
CP ;compensation & pension status
"RTN","DGPT701",66,0)
 S DGPTERC=0 D CANDP^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",67,0)
DIAG ;check diagnostic code
"RTN","DGPT701",68,0)
 S DGPTERC=0 D ^DGPT70DX I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",69,0)
DXLSPOA ;check dxls poa value ;new field & check with 884 ft 11/3/14
"RTN","DGPT701",70,0)
 I DGPTFMT=3 S DGPTERC=0 D DXLSPOA^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",71,0)
OVER ; Pass FY92 edits for earlier data
"RTN","DGPT701",72,0)
 I DGPTDDS'>2911001 G ONED
"RTN","DGPT701",73,0)
LEG ; LEGIONNAIRE'S DISEASE
"RTN","DGPT701",74,0)
 ;S DGPTERC=0 D LEG^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT //no longer used because of DG*5.3*683 (7/1/06). ft 11/5/14
"RTN","DGPT701",75,0)
 ;DGPT70LG is still set with ICD9 & ICD10, so check for space. ft 10/30/14
"RTN","DGPT701",76,0)
 ;I DGPT70LG'=" " S DGPTERC=7__ D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",77,0)
SUI ; Suicide indicator
"RTN","DGPT701",78,0)
 ;no longer used because of dg*5.3*683 (71/06). ft 11/5/14
"RTN","DGPT701",79,0)
 ;S DGPTERC=0 D SUI^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",80,0)
 ;I DGPT70SU'=" " S DGPTERC=7__ D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",81,0)
DRUG ;drug/substance abuse
"RTN","DGPT701",82,0)
 ;no longer used as of DG*5.3*683 (7/1/06). ft 11/5/14
"RTN","DGPT701",83,0)
 ;S DGPTERC=0 D DRUG^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",84,0)
 ;I DGPT70DR'?4" " S DGPTERC=7__ D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",85,0)
AXES ; Psych axises
"RTN","DGPT701",86,0)
 ;no longer used when ICD10 is turned on, but still in the record so check for spaces. ft 11/5/14
"RTN","DGPT701",87,0)
 I DGPTFMT=3 D  G ONED
"RTN","DGPT701",88,0)
 .I DGPT70X4'=" " S DGPTERC=734 D ERR
"RTN","DGPT701",89,0)
 .I DGPTDXV2'?4" " S DGPTERC=735 D ERR
"RTN","DGPT701",90,0)
 I '$P($G(^DIC(42.4,+$G(DGPTDSP1),0)),U,4) S (DGPT70X4,DGPT7X51,DGPT7X52)=" " G ONED ;don't think DGPT7X51/52 are ever used, just set & killed. ft 11/5/14
"RTN","DGPT701",91,0)
 S DGPTERC=0 D AXIV^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",92,0)
 S DGPTERC=0 D AXV1^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",93,0)
 S DGPTERC=0 D AXV2^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",94,0)
ONED ;check if one diagnostic code only
"RTN","DGPT701",95,0)
 I (DGPTDDXO=" ")&('$D(^TMP("AEDIT",$J,"N702"))&'$D(^TMP("AEDIT",$J,"N703"))) S DGPTERC=718 D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",96,0)
 I (DGPTDDXO="X")&($D(^TMP("AEDIT",$J,"N702"))) S DGPTERC=719 D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",97,0)
RACE ;race
"RTN","DGPT701",98,0)
 I DGPTFMT=3 S DGPTERC=0 D RACE^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",99,0)
TSC ;treated for service condition
"RTN","DGPT701",100,0)
 I DGPTFMT=3 S DGPTERC=0 D TSC^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",101,0)
AO ;agent orange condition
"RTN","DGPT701",102,0)
 I DGPTFMT=3 S DGPTERC=0 D AO^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",103,0)
IR ;ionizing radiation condition
"RTN","DGPT701",104,0)
 I DGPTFMT=3 S DGPTERC=0 D IR^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",105,0)
SWA ;sw asia condition
"RTN","DGPT701",106,0)
 I DGPTFMT=3 S DGPTERC=0 D SWA^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",107,0)
MST ;military sexual trauma
"RTN","DGPT701",108,0)
 I DGPTFMT=3 S DGPTERC=0 D MST^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",109,0)
HNC ;head & neck care
"RTN","DGPT701",110,0)
 I DGPTFMT=3 S DGPTERC=0 D HNC^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",111,0)
ETHNIC ;ethnicity
"RTN","DGPT701",112,0)
 I DGPTFMT=3 S DGPTERC=0 D ETHNIC^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",113,0)
RACE16 ;race 1-6
"RTN","DGPT701",114,0)
 I DGPTFMT=3 D
"RTN","DGPT701",115,0)
 .F DGLOOP=1:1:6 S DGPTRACE16=@("DGPT70RACE"_DGLOOP)
"RTN","DGPT701",116,0)
 .Q:DGPTRACE16="  "  ;two spaces
"RTN","DGPT701",117,0)
 .S DGPTERC=0 D RACE16^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",118,0)
 K DGLOOP,DGPTRACE16
"RTN","DGPT701",119,0)
CV ;combat vet
"RTN","DGPT701",120,0)
 I DGPTFMT=3 S DGPTERC=0 D CV^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",121,0)
SHAD ;shad
"RTN","DGPT701",122,0)
 I DGPTFMT=3 S DGPTERC=0 D SHAD^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",123,0)
EXIT ;
"RTN","DGPT701",124,0)
 Q
"RTN","DGPT701",125,0)
ERR ;
"RTN","DGPT701",126,0)
 D WRTERR^DGPTAE(DGPTERC,"N701",DGPTAL7)
"RTN","DGPT701",127,0)
 ;D WRTERR^DGPTAE(DGPTERC,"N701",SEQ)
"RTN","DGPT701",128,0)
 S ERROR=1
"RTN","DGPT701",129,0)
 Q
"RTN","DGPT701P")
0^42^B17213050
"RTN","DGPT701P",1,0)
DGPT701P ;ALB/MTC,HIOFO/FT - Parse 701 Record String ;2/23/15 9:20am
"RTN","DGPT701P",2,0)
 ;;5.3;Registration;**164,415,884**;Aug 13, 1993;Build 31
"RTN","DGPT701P",3,0)
 ;
"RTN","DGPT701P",4,0)
EN ;
"RTN","DGPT701P",5,0)
PARSE ; Parse record string
"RTN","DGPT701P",6,0)
 D:DGPTFMT=2 SET9
"RTN","DGPT701P",7,0)
 D:DGPTFMT=3 SET10
"RTN","DGPT701P",8,0)
 Q
"RTN","DGPT701P",9,0)
SET9 ;record layout before icd10 turned on
"RTN","DGPT701P",10,0)
 S DGPTDDTD=$E(DGPTSTR,31,40) ;date of disposition
"RTN","DGPT701P",11,0)
 S DGPTDDS=$$FMDT^DGPT101($E(DGPTDDTD,1,6))_"."_$E(DGPTDDTD,7,10)
"RTN","DGPT701P",12,0)
 S DGPTDSP=$E(DGPTSTR,41,42) ;discharge specialty code
"RTN","DGPT701P",13,0)
 S DGPTDTY=$E(DGPTSTR,43) ;type of disposition
"RTN","DGPT701P",14,0)
 S DGPTDOP=$E(DGPTSTR,44) ;outpatient care status
"RTN","DGPT701P",15,0)
 S DGPTDVA=$E(DGPTSTR,45) ;under va auspices
"RTN","DGPT701P",16,0)
 S DGPTDPD=$E(DGPTSTR,46) ;place of disposition
"RTN","DGPT701P",17,0)
 S DGPTDRF=$E(DGPTSTR,47,52) ;receiving facility number and suffix
"RTN","DGPT701P",18,0)
 S DGPTDAS=$E(DGPTSTR,53,55) ;extended care days - absent sick in hospital
"RTN","DGPT701P",19,0)
 S DGPTDCP=$E(DGPTSTR,57) ;compensation & pension status
"RTN","DGPT701P",20,0)
 S DGPTDDXE=$E(DGPTSTR,58,64) ;dxls for entire stay
"RTN","DGPT701P",21,0)
 S DGPTDDXO=$E(DGPTSTR,65) ;present on admission (poa) for dxls
"RTN","DGPT701P",22,0)
 S DGPTDLR=$E(DGPTSTR,66,71) ;physical location cdr code
"RTN","DGPT701P",23,0)
 S DGPTDLC=$E(DGPTSTR,72,73) ;physical location code
"RTN","DGPT701P",24,0)
 S DGPTDSC=$E(DGPTSTR,74,76) ;percentage of service connection
"RTN","DGPT701P",25,0)
 S DGPT70LG=$E(DGPTSTR,77) ;legionnaires
"RTN","DGPT701P",26,0)
 S DGPT70SU=$E(DGPTSTR,78) ;suicide indicator
"RTN","DGPT701P",27,0)
 S DGPT70DR=$E(DGPTSTR,79,82) ;substance abuse
"RTN","DGPT701P",28,0)
 S DGPT70X4=$E(DGPTSTR,83) ;physical axis class
"RTN","DGPT701P",29,0)
 S DGPTDXV1=$E(DGPTSTR,84,85) ;physical axis assessment-1
"RTN","DGPT701P",30,0)
 S DGPTDXV2=$E(DGPTSTR,86,87) ;physical axis assessment-2
"RTN","DGPT701P",31,0)
 Q
"RTN","DGPT701P",32,0)
SET10 ;record layout after icd10 turn on
"RTN","DGPT701P",33,0)
 S DGPTDDTD=$E(DGPTSTR,31,40) ;date of disposition
"RTN","DGPT701P",34,0)
 S DGPTDDS=$$FMDT^DGPT101($E(DGPTDDTD,1,6))_"."_$E(DGPTDDTD,7,10)
"RTN","DGPT701P",35,0)
 S DGPTDSP=$E(DGPTSTR,41,42) ;discharge specialty code
"RTN","DGPT701P",36,0)
 S DGPTDTY=$E(DGPTSTR,43) ;type of disposition
"RTN","DGPT701P",37,0)
 S DGPTDOP=$E(DGPTSTR,44) ;outpatient care status
"RTN","DGPT701P",38,0)
 S DGPTDVA=$E(DGPTSTR,45) ;under va auspices
"RTN","DGPT701P",39,0)
 S DGPTDPD=$E(DGPTSTR,46) ;place of disposition
"RTN","DGPT701P",40,0)
 S DGPTDRF=$E(DGPTSTR,47,52) ;receiving facility number and suffix
"RTN","DGPT701P",41,0)
 S DGPTDAS=$E(DGPTSTR,53,55) ;extended care days - absent sick in hospital
"RTN","DGPT701P",42,0)
 S DGPT70RACE=$E(DGPTSTR,56) ;race
"RTN","DGPT701P",43,0)
 S DGPTDCP=$E(DGPTSTR,57) ;compensation & pension status
"RTN","DGPT701P",44,0)
 S DGPTDDXE=$E(DGPTSTR,58,64) ;dxls for entire stay
"RTN","DGPT701P",45,0)
 S DGPTDXLSPOA=$E(DGPTSTR,65) ;poa for dxls
"RTN","DGPT701P",46,0)
 S DGPTDDXO=$E(DGPTSTR,66) ;dxls only no other codes
"RTN","DGPT701P",47,0)
 S DGPTDLR=$E(DGPTSTR,67,72) ;physical location cdr code
"RTN","DGPT701P",48,0)
 S DGPTDLC=$E(DGPTSTR,73,74) ;physical location code
"RTN","DGPT701P",49,0)
 S DGPTDSC=$E(DGPTSTR,75,77) ;percentage of service connection
"RTN","DGPT701P",50,0)
 S DGPT70LG=$E(DGPTSTR,78) ;legionnaires
"RTN","DGPT701P",51,0)
 S DGPT70SU=$E(DGPTSTR,79) ;suicide indicator
"RTN","DGPT701P",52,0)
 S DGPT70DR=$E(DGPTSTR,80,83) ;substance abuse
"RTN","DGPT701P",53,0)
 S DGPT70X4=$E(DGPTSTR,84) ;physical axis class                <-no longer used with ICD10, should be a space. ft 11/3/14
"RTN","DGPT701P",54,0)
 S DGPTDXV2=$E(DGPTSTR,85,88) ;physical axis assessment 1 & 2  <-no longer used with ICD10, should be 4 spaces. ft 11/3/14
"RTN","DGPT701P",55,0)
 S DGPT70TSC=$E(DGPTSTR,89) ;treated for service condition
"RTN","DGPT701P",56,0)
 S DGPT70AO=$E(DGPTSTR,90) ;treated for agent orange condition
"RTN","DGPT701P",57,0)
 S DGPT70IR=$E(DGPTSTR,91) ;treated for ionizing radiation
"RTN","DGPT701P",58,0)
 S DGPT70SWA=$E(DGPTSTR,92) ;treated for sw asia condition
"RTN","DGPT701P",59,0)
 S DGPT70MST=$E(DGPTSTR,93) ;military sexual trauma care
"RTN","DGPT701P",60,0)
 S DGPT70HNC=$E(DGPTSTR,94) ;head neck cancer
"RTN","DGPT701P",61,0)
 S DGPT70ETHNIC=$E(DGPTSTR,95,96) ;ethnicity
"RTN","DGPT701P",62,0)
 S DGPT70RACE1=$E(DGPTSTR,97,98) ;race-1
"RTN","DGPT701P",63,0)
 S DGPT70RACE2=$E(DGPTSTR,99,100) ;race-2
"RTN","DGPT701P",64,0)
 S DGPT70RACE3=$E(DGPTSTR,101,102) ;race-3
"RTN","DGPT701P",65,0)
 S DGPT70RACE4=$E(DGPTSTR,103,104) ;race-4
"RTN","DGPT701P",66,0)
 S DGPT70RACE5=$E(DGPTSTR,105,106) ;race-5
"RTN","DGPT701P",67,0)
 S DGPT70RACE6=$E(DGPTSTR,107,108) ;race-6
"RTN","DGPT701P",68,0)
 S DGPT70COMVET=$E(DGPTSTR,109) ;combat veteran
"RTN","DGPT701P",69,0)
 S DGPT70SHAD=$E(DGPTSTR,110) ;shipboard hazard and defense
"RTN","DGPT701P",70,0)
 Q
"RTN","DGPT702")
0^43^B12007365
"RTN","DGPT702",1,0)
DGPT702 ;ALB/MTC,HIOFO/FT - Process 702 transmission ;4/14/2014 4:08pm
"RTN","DGPT702",2,0)
 ;;5.3;Registration;**884**;Aug 13, 1993;Build 31
"RTN","DGPT702",3,0)
 ;
"RTN","DGPT702",4,0)
 ;no external references
"RTN","DGPT702",5,0)
 ;
"RTN","DGPT702",6,0)
EN ;called from DGPTAE
"RTN","DGPT702",7,0)
 S DGPTSTR=^TMP("AEDIT",$J,NODE,SEQ)
"RTN","DGPT702",8,0)
 D:DGPTFMT=2 SET9
"RTN","DGPT702",9,0)
 D:DGPTFMT=3 SET10
"RTN","DGPT702",10,0)
DIAG ;
"RTN","DGPT702",11,0)
 S DGPTERC=0 D ^DGPT70DI
"RTN","DGPT702",12,0)
 I 'DGPTERC W "."
"RTN","DGPT702",13,0)
 ;
"RTN","DGPT702",14,0)
EXIT ;
"RTN","DGPT702",15,0)
 K DGPTGD2,DGPTGD3,DGPTGD4,DGPTGD5,DGPTGD6,DGPTGD7,DGPTGD8,DGPTGD9,DGPTGD10,DGPTGD11,DGPTGD12,DGPTGD13,DGPTGD14,DGPTGD15,DGPTGD16,DGPTGD17
"RTN","DGPT702",16,0)
 K DGPTGD18,DGPTGD19,DGPTGD20,DGPTGD21,DGPTGD22,DGPTGD23,DGPTGD24,DGPTGD25,DGPTPOA2,DGPTPOA3,DGPTPOA4,DGPTPOA5,DGPTPOA6,DGPTPOA7
"RTN","DGPT702",17,0)
 K DGPTPOA8,DGPTPOA9,DGPTPOA10,DGPTPOA11,DGPTPOA12,DGPTPOA13,DGPTPOA14,DGPTPOA15,DGPTPOA16,DGPTPOA17,DGPTPOA18,DGPTPOA19,DGPTPOA20,DGPTPOA21,DGPTPOA22
"RTN","DGPT702",18,0)
 K DGPTPOA23,DGPTPOA24,DGPTPOA25,DGPTGD,DGPTSTR
"RTN","DGPT702",19,0)
 Q
"RTN","DGPT702",20,0)
SET9 ;record layout before icd10 turned on
"RTN","DGPT702",21,0)
 S DGPTGD1=$E(DGPTSTR,41,47) ;diagnostic codes 1 - 9, but why 1 when 1 is not in the 702 segment?
"RTN","DGPT702",22,0)
 S DGPTGD2=$E(DGPTSTR,48,54) ;the values are checked in DGPT70DI and reset using indirection into the
"RTN","DGPT702",23,0)
 S DGPTGD3=$E(DGPTSTR,55,61) ;variable name. also, the DGPTDIAR array(date)=procedure ien is set.
"RTN","DGPT702",24,0)
 S DGPTGD4=$E(DGPTSTR,62,68)
"RTN","DGPT702",25,0)
 S DGPTGD5=$E(DGPTSTR,69,75)
"RTN","DGPT702",26,0)
 S DGPTGD6=$E(DGPTSTR,76,82)
"RTN","DGPT702",27,0)
 S DGPTGD7=$E(DGPTSTR,83,89)
"RTN","DGPT702",28,0)
 S DGPTGD8=$E(DGPTSTR,90,96)
"RTN","DGPT702",29,0)
 S DGPTGD9=$E(DGPTSTR,97,103)
"RTN","DGPT702",30,0)
 Q
"RTN","DGPT702",31,0)
SET10 ;record layout after icd10 turned on
"RTN","DGPT702",32,0)
 S DGPTDOD=$E(DGPTSTR,31,36) ;date of discharge
"RTN","DGPT702",33,0)
 S DGPTTOD=$E(DGPTSTR,37,40) ;time of discharge(24 hour time)
"RTN","DGPT702",34,0)
 S DGPTGD2=$E(DGPTSTR,41,47),DGPTPOA2=$E(DGPTSTR,48) ;parse out the 24 secondary dx & poa codes
"RTN","DGPT702",35,0)
 S DGPTGD3=$E(DGPTSTR,49,55),DGPTPOA3=$E(DGPTSTR,56)
"RTN","DGPT702",36,0)
 S DGPTGD4=$E(DGPTSTR,57,63),DGPTPOA4=$E(DGPTSTR,64)
"RTN","DGPT702",37,0)
 S DGPTGD5=$E(DGPTSTR,65,71),DGPTPOA5=$E(DGPTSTR,72)
"RTN","DGPT702",38,0)
 S DGPTGD6=$E(DGPTSTR,73,79),DGPTPOA6=$E(DGPTSTR,80)
"RTN","DGPT702",39,0)
 S DGPTGD7=$E(DGPTSTR,81,87),DGPTPOA7=$E(DGPTSTR,88)
"RTN","DGPT702",40,0)
 S DGPTGD8=$E(DGPTSTR,89,95),DGPTPOA8=$E(DGPTSTR,96)
"RTN","DGPT702",41,0)
 S DGPTGD9=$E(DGPTSTR,97,103),DGPTPOA9=$E(DGPTSTR,104)
"RTN","DGPT702",42,0)
 S DGPTGD10=$E(DGPTSTR,105,111),DGPTPOA10=$E(DGPTSTR,112)
"RTN","DGPT702",43,0)
 S DGPTGD11=$E(DGPTSTR,113,119),DGPTPOA11=$E(DGPTSTR,120)
"RTN","DGPT702",44,0)
 S DGPTGD12=$E(DGPTSTR,121,127),DGPTPOA12=$E(DGPTSTR,128)
"RTN","DGPT702",45,0)
 S DGPTGD13=$E(DGPTSTR,129,135),DGPTPOA13=$E(DGPTSTR,136)
"RTN","DGPT702",46,0)
 S DGPTGD14=$E(DGPTSTR,137,143),DGPTPOA14=$E(DGPTSTR,144)
"RTN","DGPT702",47,0)
 S DGPTGD15=$E(DGPTSTR,145,151),DGPTPOA15=$E(DGPTSTR,152)
"RTN","DGPT702",48,0)
 S DGPTGD16=$E(DGPTSTR,153,159),DGPTPOA16=$E(DGPTSTR,160)
"RTN","DGPT702",49,0)
 S DGPTGD17=$E(DGPTSTR,161,167),DGPTPOA17=$E(DGPTSTR,168)
"RTN","DGPT702",50,0)
 S DGPTGD18=$E(DGPTSTR,169,175),DGPTPOA18=$E(DGPTSTR,176)
"RTN","DGPT702",51,0)
 S DGPTGD19=$E(DGPTSTR,177,183),DGPTPOA19=$E(DGPTSTR,184)
"RTN","DGPT702",52,0)
 S DGPTGD20=$E(DGPTSTR,185,191),DGPTPOA20=$E(DGPTSTR,192)
"RTN","DGPT702",53,0)
 S DGPTGD21=$E(DGPTSTR,193,199),DGPTPOA21=$E(DGPTSTR,200)
"RTN","DGPT702",54,0)
 S DGPTGD22=$E(DGPTSTR,201,207),DGPTPOA22=$E(DGPTSTR,208)
"RTN","DGPT702",55,0)
 S DGPTGD23=$E(DGPTSTR,209,215),DGPTPOA23=$E(DGPTSTR,216)
"RTN","DGPT702",56,0)
 S DGPTGD24=$E(DGPTSTR,217,223),DGPTPOA24=$E(DGPTSTR,224)
"RTN","DGPT702",57,0)
 S DGPTGD25=$E(DGPTSTR,225,231),DGPTPOA25=$E(DGPTSTR,232)
"RTN","DGPT702",58,0)
 Q
"RTN","DGPT70DI")
0^44^B18406929
"RTN","DGPT70DI",1,0)
DGPT70DI ;ALB/MTC/ADL,HIOFO/FT - Diagnosis edits for 700's - E codes, V codes, gender and ICD9 Diag. ;2/20/15 12:20pm
"RTN","DGPT70DI",2,0)
 ;;5.3;Registration;**510,850,884**;Aug 13, 1993;Build 31
"RTN","DGPT70DI",3,0)
 ;;ADL;Update for CSV Project;;Mar. 24, 2003
"RTN","DGPT70DI",4,0)
 ;
"RTN","DGPT70DI",5,0)
 ; ICDEX APIs - #5747
"RTN","DGPT70DI",6,0)
 ; ICDXCODE APIs - #5699
"RTN","DGPT70DI",7,0)
 ;
"RTN","DGPT70DI",8,0)
EN ;called from DGPT702
"RTN","DGPT70DI",9,0)
 I DGPTFMT=2 F DGPTL3=1:1:9 S DGPTDIA=$P((@("DGPTGD"_DGPTL3))," ",1) S DGPTERC=0 D DIAG I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT70DI",10,0)
 I DGPTFMT=3 F DGPTL3=2:1:25 S DGPTDIA=$P((@("DGPTGD"_DGPTL3))," ",1),DGPTPOA=@("DGPTPOA"_DGPTL3),DGPTERC=0 D  I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT70DI",11,0)
 . Q:(DGPTDIA="")!(DGPTPOA="")
"RTN","DGPT70DI",12,0)
 . I DGPTDIA="",DGPTPOA'=" " S DGPTERC=$S(DGPTL3<10:719+DGPTL3,1:787+DGPTL3) ;POA without a DX. using invalid dx error code
"RTN","DGPT70DI",13,0)
 . Q:DGPTDIA=""
"RTN","DGPT70DI",14,0)
 . I "YNUW "'[DGPTPOA S DGPTREC=$S(DGPTL3<10:719+DGPTL3,1:787+DGPTL3) D ERR
"RTN","DGPT70DI",15,0)
 . S DGPTERC=0 D DIAG
"RTN","DGPT70DI",16,0)
 Q
"RTN","DGPT70DI",17,0)
 ;
"RTN","DGPT70DI",18,0)
DIAG ;
"RTN","DGPT70DI",19,0)
 N SYS,EFFDATE,IMPDATE,DGPTDAT,SYS
"RTN","DGPT70DI",20,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT70DI",21,0)
 S SYS=$$SYS^ICDEX("DIAG",EFFDATE)
"RTN","DGPT70DI",22,0)
 Q:DGPTDIA=""
"RTN","DGPT70DI",23,0)
 I SYS=1 I $E(DGPTDIA,1)="E" S DGPTERC=0 D DIAGE Q
"RTN","DGPT70DI",24,0)
 I SYS=1 I $E(DGPTDIA,1)="V" S DGPTERC=0 D DIAGV Q
"RTN","DGPT70DI",25,0)
 S DGPTERC=$S(DGPTL3<10:719+DGPTL3,1:787+DGPTL3)
"RTN","DGPT70DI",26,0)
 F DGPTL4=1:1:$L(DGPTDIA) S DGPTDIA1=$E(DGPTDIA,1,DGPTL4)_"."_$E(DGPTDIA,DGPTL4+1,$L(DGPTDIA))_" " I +$$CODEN^ICDEX(DGPTDIA1,80)>0 S DGPTERC=0 D GEN Q
"RTN","DGPT70DI",27,0)
 Q
"RTN","DGPT70DI",28,0)
ERR ;
"RTN","DGPT70DI",29,0)
 D WRTERR^DGPTAE(DGPTERC,NODE,SEQ)
"RTN","DGPT70DI",30,0)
 Q
"RTN","DGPT70DI",31,0)
EXIT ;
"RTN","DGPT70DI",32,0)
 K DGPTDIA,DGPTDIA1,DGPTDIA2,DGPTL3,DGPTL4,DGPTPOA
"RTN","DGPT70DI",33,0)
 Q
"RTN","DGPT70DI",34,0)
 ;note: E and V codes were eliminated in ICD-10 and incorporated into the main code set.
"RTN","DGPT70DI",35,0)
DIAGE ; Supplementary Classification of Factors Influencing Health Status
"RTN","DGPT70DI",36,0)
 ; and Contact with Health Services.
"RTN","DGPT70DI",37,0)
 N EFFDATE,IMPDATE,DGPTDAT,SYS
"RTN","DGPT70DI",38,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT70DI",39,0)
 Q:$E(DGPTDIA)'="E"
"RTN","DGPT70DI",40,0)
 S SYS=$$SYS^ICDEX("DIAG",EFFDATE)
"RTN","DGPT70DI",41,0)
 S:SYS=30 DGPTDIA1=$E(DGPTDIA,1,3)_"."_$E(DGPTDIA,4,$L(DGPTDIA))_" " ;will it ever be 30 (i.e, ICD10)?
"RTN","DGPT70DI",42,0)
 S:SYS=1 DGPTDIA1=$E(DGPTDIA,1,4)_"."_$E(DGPTDIA,5,$L(DGPTDIA))_" "
"RTN","DGPT70DI",43,0)
 I +$$CODEN^ICDEX(DGPTDIA1,80)<1 S DGPTERC=$S(DGPTL3<10:719+DGPTL3,1:787+DGPTL3) Q
"RTN","DGPT70DI",44,0)
 S DGPTDIA2=+$$CODEN^ICDEX(DGPTDIA1,80) I DGPTDIA2<1 S DGPTERC=$S(DGPTL3<10:719+DGPTL3,1:787+DGPTL3) Q
"RTN","DGPT70DI",45,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",DGPTDIA2,EFFDATE)
"RTN","DGPT70DI",46,0)
 I DGPTTMP=-1!('$P(DGPTTMP,U,10)) S DGPTERC=$S(DGPTL3<10:719+DGPTL3,1:787+DGPTL3) Q
"RTN","DGPT70DI",47,0)
 I ($P(DGPTTMP,U,10)=0)&($E(DGPTDDS,1,7)>$P(DGPTTMP,U,12)) S DGPTERC=$S(DGPTL3<10:719+DGPTL3,1:787+DGPTL3) Q
"RTN","DGPT70DI",48,0)
 I ($P(DGPTTMP,U,11)]"")&(DGPTGEN'=$P(DGPTTMP,U,11)) S DGPTERC=$S(DGPTL3<10:719+DGPTL3,1:787+DGPTL3) Q
"RTN","DGPT70DI",49,0)
 S @("DGPTGD"_DGPTL3)=$P(DGPTDIA1," ",1)
"RTN","DGPT70DI",50,0)
 S DGPTDIAR(DGPTDDS)=$S($D(DGPTDIAR(DGPTDDS)):DGPTDIAR(DGPTDDS)_U_DGPTDIA2,1:DGPTDIA2)
"RTN","DGPT70DI",51,0)
 Q
"RTN","DGPT70DI",52,0)
DIAGV ; Supplementary Classification of External Causes of Inquiry and Poisoning
"RTN","DGPT70DI",53,0)
 N EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPT70DI",54,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT70DI",55,0)
 Q:$E(DGPTDIA)'="V"
"RTN","DGPT70DI",56,0)
 S DGPTDIA1=$E(DGPTDIA,1,3)_"."_$E(DGPTDIA,4,$L(DGPTDIA))_" "
"RTN","DGPT70DI",57,0)
 I +$$CODEN^ICDEX(DGPTDIA1,80)<1 S DGPTERC=$S(DGPTL3<10:719+DGPTL3,1:787+DGPTL3) Q
"RTN","DGPT70DI",58,0)
 S DGPTDIA2=+$$CODEN^ICDEX(DGPTDIA1,80) I DGPTDIA2<1 S DGPTERC=$S(DGPTL3<10:719+DGPTL3,1:787+DGPTL3) Q
"RTN","DGPT70DI",59,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",DGPTDIA2,EFFDATE)  ;use date of disp. if defined, else today
"RTN","DGPT70DI",60,0)
 I DGPTTMP=-1!('$P(DGPTTMP,U,10)) S DGPTERC=$S(DGPTL3<10:719+DGPTL3,1:787+DGPTL3) Q
"RTN","DGPT70DI",61,0)
 I ($P(DGPTTMP,U,10)=0)&($E(DGPTDDS,1,7)>$P(DGPTTMP,U,12)) S DGPTERC=$S(DGPTL3<10:719+DGPTL3,1:787+DGPTL3) Q
"RTN","DGPT70DI",62,0)
 I ($P(DGPTTMP,U,11)]"")&(DGPTGEN'=$P(DGPTTMP,U,11)) S DGPTERC=$S(DGPTL3<10:719+DGPTL3,1:787+DGPTL3) Q
"RTN","DGPT70DI",63,0)
 S @("DGPTGD"_DGPTL3)=$P(DGPTDIA1," ",1)
"RTN","DGPT70DI",64,0)
 S DGPTDIAR(DGPTDDS)=$S($D(DGPTDIAR(DGPTDDS)):DGPTDIAR(DGPTDDS)_U_DGPTDIA2,1:DGPTDIA2)
"RTN","DGPT70DI",65,0)
 Q
"RTN","DGPT70DI",66,0)
GEN ;gender - 884 no longer flags a gender error
"RTN","DGPT70DI",67,0)
 N EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPT70DI",68,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT70DI",69,0)
 S DGPTDIA2=+$$CODEN^ICDEX(DGPTDIA1,80) I DGPTDIA2<1 S DGPTERC=$S(DGPTL3<10:719+DGPTL3,1:787+DGPTL3) Q
"RTN","DGPT70DI",70,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",DGPTDIA2,EFFDATE)  ;use date of disp. if defined, else today
"RTN","DGPT70DI",71,0)
 I DGPTTMP=-1!('$P(DGPTTMP,U,10)) S DGPTERC=$S(DGPTL3<10:719+DGPTL3,1:787+DGPTL3) Q
"RTN","DGPT70DI",72,0)
 ;I $P(DGPTTMP,U,11)]""&(DGPTGEN'=$P(DGPTTMP,U,11)) S DGPTERC=751 Q
"RTN","DGPT70DI",73,0)
 S @("DGPTGD"_DGPTL3)=$P(DGPTDIA1," ",1)
"RTN","DGPT70DI",74,0)
ARRAY ;this array is used to build the error display in the List Manager interface
"RTN","DGPT70DI",75,0)
 S DGPTDIAR(DGPTDDS)=$S($D(DGPTDIAR(DGPTDDS)):DGPTDIAR(DGPTDDS)_U_DGPTDIA2,1:DGPTDIA2)
"RTN","DGPT70DI",76,0)
 Q
"RTN","DGPT70DX")
0^45^B4054092
"RTN","DGPT70DX",1,0)
DGPT70DX ;ALB/MTC/ADL,HIOFO/FT -  DXLS Edit Checks for 701 ;3/3/15 12:46pm
"RTN","DGPT70DX",2,0)
 ;;5.3;Registration;**510,850,884**;Aug 13, 1993;Build 31
"RTN","DGPT70DX",3,0)
 ;;ADL;Update for CSV Project;;Mar 24, 2003
"RTN","DGPT70DX",4,0)
 ;
"RTN","DGPT70DX",5,0)
 ; ICDEX APIs - #5747
"RTN","DGPT70DX",6,0)
 ; ICDXCODE APIs - #5699
"RTN","DGPT70DX",7,0)
 ;
"RTN","DGPT70DX",8,0)
EN ;-- check dxls for entire stay
"RTN","DGPT70DX",9,0)
 S DGPTDDXE=$P(DGPTDDXE," ",1) ;DGPTDDXE = dxls for entire stay
"RTN","DGPT70DX",10,0)
 S DGPTERC=0
"RTN","DGPT70DX",11,0)
NOE ;quit if code starts with E
"RTN","DGPT70DX",12,0)
 ;E = Supplementary Classification of Factors Influencing Health Status
"RTN","DGPT70DX",13,0)
 ;    and Contact with Health Services.
"RTN","DGPT70DX",14,0)
 ;V = Supplementary Classification of External Causes of Inquiry and Poisoning
"RTN","DGPT70DX",15,0)
 N SYS,EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPT70DX",16,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT70DX",17,0)
 S SYS=$$SYS^ICDEX("DIAG",EFFDATE)
"RTN","DGPT70DX",18,0)
 I SYS=1 I $E(DGPTDDXE,1)="E" S DGPTERC=750 Q
"RTN","DGPT70DX",19,0)
 I SYS=1 I $E(DGPTDDXE,1)="V" S DGPTERC=0 D DIAGV G:DGPTERC EXIT D SET G:DGPTERC EXIT G GENDR
"RTN","DGPT70DX",20,0)
 I SYS=1 Q:"VE"[$E(DGPTDDXE,1)
"RTN","DGPT70DX",21,0)
NUM ;
"RTN","DGPT70DX",22,0)
 S J1=$L(DGPTDDXE) F J=1:1:3 S DGPTDIA1=$E(DGPTDDXE,1,J)_"."_$E(DGPTDDXE,J+1,J1)_" " I +$$CODEN^ICDEX(DGPTDIA1,80)>0 D SET G:'DGPTERC GENDR
"RTN","DGPT70DX",23,0)
 S DGPTERC=715 G EXIT
"RTN","DGPT70DX",24,0)
SET ;
"RTN","DGPT70DX",25,0)
 N EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPT70DX",26,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT70DX",27,0)
 S J=+$$CODEN^ICDEX(DGPTDIA1,80) I J<1 S DGPTERC=715 Q
"RTN","DGPT70DX",28,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",J,EFFDATE)
"RTN","DGPT70DX",29,0)
 I DGPTTMP=-1!('$P(DGPTTMP,U,10)) S DGPTERC=715 Q
"RTN","DGPT70DX",30,0)
 I ($P(DGPTTMP,U,10)=0)&($E(DGPTDDS,1,7)>$P(DGPTTMP,U,12)) S DGPTERC=715 Q
"RTN","DGPT70DX",31,0)
 Q
"RTN","DGPT70DX",32,0)
GENDR ;patient's gender
"RTN","DGPT70DX",33,0)
 N EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPT70DX",34,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT70DX",35,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",J,EFFDATE)
"RTN","DGPT70DX",36,0)
 G:$P(DGPTTMP,U,11)']"" DDXE
"RTN","DGPT70DX",37,0)
 ;I $P(DGPTTMP,U,11)'=DGPTGEN S DGPTERC=751 G EXIT
"RTN","DGPT70DX",38,0)
DDXE ;
"RTN","DGPT70DX",39,0)
 S ICDDX(1)=J
"RTN","DGPT70DX",40,0)
 S DGPTDDXE=$P(DGPTDIA1," ",1)
"RTN","DGPT70DX",41,0)
EXIT ;
"RTN","DGPT70DX",42,0)
 K J,J1,DGPTDIA1
"RTN","DGPT70DX",43,0)
 Q
"RTN","DGPT70DX",44,0)
DIAGV ;Supplementary Classification of External Causes of Inquiry and Poisoning
"RTN","DGPT70DX",45,0)
 S DGPTDIA1=$E(DGPTDDXE,1,3)_"."_$E(DGPTDDXE,4,$L(DGPTDDXE))_" "
"RTN","DGPT70DX",46,0)
 I +$$CODEN^ICDEX(DGPTDIA1,80)<1 S DGPTERC=715
"RTN","DGPT70DX",47,0)
 Q
"RTN","DGPTAE")
0^46^B19185351
"RTN","DGPTAE",1,0)
DGPTAE ;ALB/MTC,HIOFO/FT - Austin Edit Checks Driver ;4/8/15 11:23am
"RTN","DGPTAE",2,0)
 ;;5.3;Registration;**58,415,884**;Aug 13, 1993;Build 31
"RTN","DGPTAE",3,0)
 ;
"RTN","DGPTAE",4,0)
 ; VALM APIs - #10118
"RTN","DGPTAE",5,0)
 ;
"RTN","DGPTAE",6,0)
 ; Check for 101, 501, 701; Route processing by type; call DRG and output routine
"RTN","DGPTAE",7,0)
EN ;
"RTN","DGPTAE",8,0)
 N DGPTERP,DGPTERC,DGPRS,DGPTEDFL,DGPTNOW,DGPTFAC
"RTN","DGPTAE",9,0)
 S (DGPTEDFL,DGPTERP)=0,DGPRS="N101^N501^N601^N701^N702^N703^N401^N402^N403^N535^"
"RTN","DGPTAE",10,0)
 D NOW^%DTC S DGPTNOW=+X
"RTN","DGPTAE",11,0)
 ;-- check if record available to process
"RTN","DGPTAE",12,0)
 I '$D(^TMP("AEDIT")) G EXIT
"RTN","DGPTAE",13,0)
 ;-- check if all nodes are present
"RTN","DGPTAE",14,0)
 S DGPTERC=$$PRES() I DGPTERC D WRTERR(DGPTERC,"N101",1) G EXIT
"RTN","DGPTAE",15,0)
 ;-- process record
"RTN","DGPTAE",16,0)
 D ALLPR
"RTN","DGPTAE",17,0)
 ;-- if errors
"RTN","DGPTAE",18,0)
 D ERROR
"RTN","DGPTAE",19,0)
 ;-- exit
"RTN","DGPTAE",20,0)
 D EXIT
"RTN","DGPTAE",21,0)
 Q
"RTN","DGPTAE",22,0)
 ;
"RTN","DGPTAE",23,0)
ALLPR ;-- process all records types
"RTN","DGPTAE",24,0)
 N ERROR,NODE,SEQ
"RTN","DGPTAE",25,0)
 S ERROR=0
"RTN","DGPTAE",26,0)
 ;
"RTN","DGPTAE",27,0)
 D FAC
"RTN","DGPTAE",28,0)
 ;
"RTN","DGPTAE",29,0)
 S NODE="" F  S NODE=$O(^TMP("AEDIT",$J,NODE)) Q:NODE=""!(ERROR)  D
"RTN","DGPTAE",30,0)
 . S SEQ=0 F  S SEQ=$O(^TMP("AEDIT",$J,NODE,SEQ)) Q:SEQ=""  D RTE
"RTN","DGPTAE",31,0)
 ;
"RTN","DGPTAE",32,0)
 Q
"RTN","DGPTAE",33,0)
 ;
"RTN","DGPTAE",34,0)
EXIT ;-- clean-up
"RTN","DGPTAE",35,0)
 K ^TMP("AEDIT",$J),^TMP("AERROR",$J),^TMP("AD",$J)
"RTN","DGPTAE",36,0)
 K DGPTDTS,DGPTPS,DGPTSSN,DGPTDTA,DGPTFAC,DGPTLN,DGPTFI,DGPTMI
"RTN","DGPTAE",37,0)
 K DGPTSRA,DGPTTF,DGPTSRP,DGPTPOW,DGPTMRS,DGPTGEN,DGPTDOB,DGPTPOS1,DGPTPOS2,DGPTEXA,DGPTEXI,DGPTSTE,DGPTCTY,DGPTZIP,DGPTMTC,DGPTBY,DGPTINC
"RTN","DGPTAE",38,0)
 K DGPTDDTD,DGPTDDS,DGPTDSP,DGPTDTY,DGPTDOP,DGPTDVA,DGPTDPD,DGPTDRF,DGPTDAS,DGPTDCP,DGPTDDXE,DGPTDDXO,DGPTDLR,DGPTDLC,DGPTDSC
"RTN","DGPTAE",39,0)
 K DGPT70LG,DGPT70SU,DGPT70DR,DGPT70X4,DGPTDXV1,DGPTDXV2,DGPT70AO,DGPT70COMVET,DGPT70ETHNIC,DGPT70HNC,DGPT70IR,DGPT70MST,DGPTTOD,DGPTDOD
"RTN","DGPTAE",40,0)
 K DGPTMSR,DGPTMSC,DGPTMLD,DGPTMPD,DGPTMSI,DGPTMD1,DGPTMD11,DGPTMD2,DGPTMD3,DGPTMD4,DGPTMD5,DGPTMXX,DGPTMLR,DGPTMLC,DGPTMBS
"RTN","DGPTAE",41,0)
 K DGPTMLG,DGPTMSU,DGPTMDG,DGPTMXIV,DGPTMXV1,DGPTMXV2,DGPT50SR,DGPT70RACE,DGPT70RACE1,DGPT70RACE2,DGPT70RACE3,DGPT70RACE4,DGPT70RACE5,DGPT70RACE6
"RTN","DGPTAE",42,0)
 K DGACNT,DGPT7X51,DGPT7X52,DGPTADT,DGPTAGE,DGPTAL7,DGPTBYR,DGPTDIA,DGPTDIA1,DGPTDIA2,DGPTDIAR,DGPTELP,DGPTFEF,DGPTFMDB,DGPTGEN1,DGPTL3,DGPTL4,DGPTMSX,DGPTS1,DGPTS2,DGPTSTTY,DGPTTY,DGPTXTTY,DGSCDT,DGPTPRAR,DGPTOPAR,DGSCDT,DGPTOC
"RTN","DGPTAE",43,0)
 K DGFNUM,DGLAST,DGMVT,DGOUT,DGPTF,DGPTOPP,DGSCDT,DGSPEC,DGLAST,DGFNUM,DGPT70SHAD,DGPT70SWA,DGPT70TSC,DGPTOD,DGPTDXLSPOA,DGPTGD1
"RTN","DGPTAE",44,0)
 K DGPTMPOA1,DGPTMPOA10,DGPTMPOA11,DGPTMPOA12,DGPTMPOA13,DGPTMPOA14,DGPTMPOA15,DGPTMPOA16,DGPTMPOA17,DGPTMPOA18,DGPTMPOA19,DGPTMPOA2
"RTN","DGPTAE",45,0)
 K DGPTMPOA20,DGPTMPOA21,DGPTMPOA22,DGPTMPOA23,DGPTMPOA24,DGPTMPOA25,DGPTMPOA3,DGPTMPOA4,DGPTMPOA5,DGPTMPOA6,DGPTMPOA7,DGPTMPOA8,DGPTMPOA9
"RTN","DGPTAE",46,0)
 Q
"RTN","DGPTAE",47,0)
 ;
"RTN","DGPTAE",48,0)
RTE ;route processing
"RTN","DGPTAE",49,0)
 N DGFL2,I,J
"RTN","DGPTAE",50,0)
 S DGFL2=0 F I=1:1:10 S:NODE=$P(DGPRS,U,I) DGFL2=1 Q:(DGFL2)!($P(DGPRS,U,I)']"")
"RTN","DGPTAE",51,0)
 I 'DGFL2 S ERROR=101 Q
"RTN","DGPTAE",52,0)
 Q:NODE="N701"
"RTN","DGPTAE",53,0)
 ;
"RTN","DGPTAE",54,0)
 D @("^DGPT"_$S($E(NODE,2)=4:"401",1:$E(NODE,2,4)))
"RTN","DGPTAE",55,0)
RTN ;
"RTN","DGPTAE",56,0)
 Q
"RTN","DGPTAE",57,0)
 ;
"RTN","DGPTAE",58,0)
PRES() ;-- check if required pieces are present
"RTN","DGPTAE",59,0)
 N I,ERROR
"RTN","DGPTAE",60,0)
 S ERROR=0
"RTN","DGPTAE",61,0)
 F I="N101","N501","N701" I '$D(^TMP("AEDIT",$J,I)) S ERROR=188 Q
"RTN","DGPTAE",62,0)
 Q ERROR
"RTN","DGPTAE",63,0)
 ;
"RTN","DGPTAE",64,0)
WRTERR(ERROR,NODE,SEQ) ;-- This function will write out errors to the ^TMP("AERROR"
"RTN","DGPTAE",65,0)
 ; global.
"RTN","DGPTAE",66,0)
 ;  INPUT :  ERROR - code of Austin's error
"RTN","DGPTAE",67,0)
 ;           NODE  - node error occurred on
"RTN","DGPTAE",68,0)
 ;           SEQ   - sequence in ^TMP("AEDIT",
"RTN","DGPTAE",69,0)
 ;
"RTN","DGPTAE",70,0)
 I '$D(ERROR) G WRTQ
"RTN","DGPTAE",71,0)
 S DGPTERP=DGPTERP+1,^TMP("AERROR",$J,SEQ,NODE,DGPTERP)=ERROR
"RTN","DGPTAE",72,0)
 I DGPTERP>12 S DGPTEDFL=1
"RTN","DGPTAE",73,0)
WRTQ Q
"RTN","DGPTAE",74,0)
 ;
"RTN","DGPTAE",75,0)
FAC ;-- check facility id; get station type
"RTN","DGPTAE",76,0)
 N SUFFIX,SOA,STATION,STTY
"RTN","DGPTAE",77,0)
 S DGPTSTTY="",X=$G(^TMP("AEDIT",$J,"N101",1)),DGPTFAC=$E(X,25,30),SUFFIX=$E(X,29,30),SOA=$E(X,45,46)
"RTN","DGPTAE",78,0)
 I SOA="  " D WRTERR(107) G FACQ
"RTN","DGPTAE",79,0)
 I DGPTFAC'="      ",'DGPTFAC D WRTERR(108,"101") G FACQ
"RTN","DGPTAE",80,0)
 I SUFFIX]"" I $D(^DIC(45.81,"D1",SUFFIX)) S DGPTSTTY=$O(^(SUFFIX,0)) S:DGPTSTTY DGPTSTTY=U_DGPTSTTY_U
"RTN","DGPTAE",81,0)
 S X=$O(^DIC(45.1,"B",$E(X,45,46),0))
"RTN","DGPTAE",82,0)
 S STATION="",STTY=0 F  S STTY=$O(^DIC(45.1,X,"ST",STTY)) Q:'STTY  S STATION=STATION_"^"_STTY
"RTN","DGPTAE",83,0)
 S STATION=STATION_"^"
"RTN","DGPTAE",84,0)
 I $P(DGPTSTTY,U,2),STATION'[DGPTSTTY D WRTERR(135,"101") G FACQ
"RTN","DGPTAE",85,0)
 S DGPTSTTY=STATION
"RTN","DGPTAE",86,0)
FACQ Q
"RTN","DGPTAE",87,0)
 ;
"RTN","DGPTAE",88,0)
ERROR ;-- this routine will process the error detected during close-out
"RTN","DGPTAE",89,0)
 G:'$D(^TMP("AERROR",$J)) ERRQ
"RTN","DGPTAE",90,0)
 S DGERR=1
"RTN","DGPTAE",91,0)
 D EN^VALM("DGPT CLOSE-OUT ERROR")
"RTN","DGPTAE",92,0)
ERRQ Q
"RTN","DGPTAE",93,0)
 ;
"RTN","DGPTAE01")
0^47^B10894380
"RTN","DGPTAE01",1,0)
DGPTAE01 ;ALB/MTC,HIOFO/FT - Miss. Austin Edit Checks ;11/13/14 2:22pm
"RTN","DGPTAE01",2,0)
 ;;5.3;Registration;**58,342,466,664,867,884**;Aug 13, 1993;Build 31
"RTN","DGPTAE01",3,0)
 ;
"RTN","DGPTAE01",4,0)
 ;no external references
"RTN","DGPTAE01",5,0)
 ;
"RTN","DGPTAE01",6,0)
INC ; VERIFY INCOME DATA
"RTN","DGPTAE01",7,0)
 I DGPTINC'?." "1.6N." " S DGPTERC=120
"RTN","DGPTAE01",8,0)
 Q
"RTN","DGPTAE01",9,0)
 ;
"RTN","DGPTAE01",10,0)
STATE ;state
"RTN","DGPTAE01",11,0)
 Q:$$FOR^DGADDUTL(DGPTCTRY)>0
"RTN","DGPTAE01",12,0)
 Q:DGPTSTE["X"
"RTN","DGPTAE01",13,0)
 S DGPTSTE=+DGPTSTE I DGPTSTE="" S DGPTERC=117 Q
"RTN","DGPTAE01",14,0)
 I DGPTSTE'?1.2N S DGPTERC=117 Q
"RTN","DGPTAE01",15,0)
 Q
"RTN","DGPTAE01",16,0)
 ;
"RTN","DGPTAE01",17,0)
ZIP ;zip code
"RTN","DGPTAE01",18,0)
 Q:$$FOR^DGADDUTL(DGPTCTRY)>0
"RTN","DGPTAE01",19,0)
 I DGPTZIP'?5N&(DGPTZIP'="XXXXX") S DGPTERC=118 Q
"RTN","DGPTAE01",20,0)
 Q
"RTN","DGPTAE01",21,0)
 ;
"RTN","DGPTAE01",22,0)
CNTY ;county
"RTN","DGPTAE01",23,0)
 Q:$$FOR^DGADDUTL(DGPTCTRY)>0
"RTN","DGPTAE01",24,0)
 I DGPTCTY'?1.3N S DGPTERC=117 Q
"RTN","DGPTAE01",25,0)
 Q
"RTN","DGPTAE01",26,0)
 ;
"RTN","DGPTAE01",27,0)
AGO ;agent orange
"RTN","DGPTAE01",28,0)
 I " 12345"'[DGPTEXA S DGPTERC=115 Q
"RTN","DGPTAE01",29,0)
 I "35"[DGPTEXA&(DGPTPOS2'=7) S DGPTERC=133 Q
"RTN","DGPTAE01",30,0)
 Q
"RTN","DGPTAE01",31,0)
IRAD ;ionizing radiation
"RTN","DGPTAE01",32,0)
 I "024578"'[DGPTPOS2&(DGPTEXI'=" ") S DGPTEXI=" " Q
"RTN","DGPTAE01",33,0)
 I "024578"[DGPTPOS2&("1234 "'[DGPTEXI) S DGPTERC=116 Q
"RTN","DGPTAE01",34,0)
 I DGPTPOS2="Z"&((DGPTEXI=" ")!("1234"'[DGPTEXI)) S DGPTERC=134 Q
"RTN","DGPTAE01",35,0)
 Q
"RTN","DGPTAE01",36,0)
 ;
"RTN","DGPTAE01",37,0)
DB ; DATE OF BIRTH EDITS
"RTN","DGPTAE01",38,0)
 ;
"RTN","DGPTAE01",39,0)
 I $E(DGPTDOB,1,2)="00" S DGPTDOB="01"_$E(DGPTDOB,3,8)
"RTN","DGPTAE01",40,0)
 I $E(DGPTDOB,3,4)="00" S DGPTDOB=$E(DGPTDOB,1,2)_"01"_$E(DGPTDOB,5,8)
"RTN","DGPTAE01",41,0)
 S DGPTFMDB=($E(DGPTDOB,5,6)-17)_$E(DGPTDOB,7,8)_$E(DGPTDOB,1,4)
"RTN","DGPTAE01",42,0)
 S X=DGPTFMDB,%DT="X" D ^%DT I Y<0 S DGPTERC=113 Q
"RTN","DGPTAE01",43,0)
 D DD^%DT S DGPTORBD=$E(Y,5,6)_"-"_$E(Y,1,3)_"-"_$E(Y,9,12) I DGPTORBD'?1.2N1"-"3U1"-"4N S DGPTERC=113 Q
"RTN","DGPTAE01",44,0)
 I $E(DGPTDOB,5,8)<1857 S DGPTERC=113 Q
"RTN","DGPTAE01",45,0)
 S X1=+DGPTDTS,X2=DGPTFMDB D ^%DTC I X<0 S DGPTERC=113 Q
"RTN","DGPTAE01",46,0)
 S DGPTAGE=X\365 I DGPTAGE>124 S DGPTERC=113 Q   ;BL;NEWBORN CLAIMS DG*5.3*867;Removed check for age less than 1 year
"RTN","DGPTAE01",47,0)
DBQ ;
"RTN","DGPTAE01",48,0)
 K X,X1,X2,Y
"RTN","DGPTAE01",49,0)
 Q
"RTN","DGPTAE01",50,0)
 ;
"RTN","DGPTAE01",51,0)
MT ; Means test edits and consistency check
"RTN","DGPTAE01",52,0)
 ;
"RTN","DGPTAE01",53,0)
 I DGPTSTTY["^30^" S DGPTMTC="  " Q
"RTN","DGPTAE01",54,0)
 D EDIT Q:DGPTERC
"RTN","DGPTAE01",55,0)
 D CONSIS Q:DGPTERC
"RTN","DGPTAE01",56,0)
 Q
"RTN","DGPTAE01",57,0)
EDIT ;
"RTN","DGPTAE01",58,0)
 D NUMACT^DGPTSUF(30) I DGANUM>0 F I=1:1:DGANUM I $E(DGPTFAC,4,6)[DGSUFNAM(I) S:DGPTMTC'="X " DGPTMTC="X " K DGANUM,DGSUFNAM,I Q
"RTN","DGPTAE01",59,0)
 I "ABCGNXU"'[$E(DGPTMTC) S DGPTERC=119 Q
"RTN","DGPTAE01",60,0)
 I $E(DGPTMTC,1)="A"&("SN"'[$E(DGPTMTC,2)) S DGPTERC=119 Q
"RTN","DGPTAE01",61,0)
 I $E(DGPTMTC,2)=" "&("BCGNXU"'[$E(DGPTMTC)) S DGPTERC=119 Q
"RTN","DGPTAE01",62,0)
 Q
"RTN","DGPTAE01",63,0)
CONSIS ;check for invalid means test indicator
"RTN","DGPTAE01",64,0)
 I DGPTMTC="X "&(+DGPTTY'<2860701) S DGPTERC="119" Q
"RTN","DGPTAE01",65,0)
 Q
"RTN","DGPTAE01",66,0)
 ;
"RTN","DGPTAE01",67,0)
PSE ;-- check for pseudo ssn
"RTN","DGPTAE01",68,0)
 S DGPTALF="ABC^DEF^GHI^JKL^MNO^PQR^STU^VWX^YZ^ "
"RTN","DGPTAE01",69,0)
FI ;patient's first initial
"RTN","DGPTAE01",70,0)
 I DGPTFI=" "&($E(DGPTSSN,1)=0) G MI
"RTN","DGPTAE01",71,0)
 I $P(DGPTALF,U,$E(DGPTSSN,1))'[DGPTFI S DGPTERC=130 G PSEQ
"RTN","DGPTAE01",72,0)
MI ;patient's middle initial
"RTN","DGPTAE01",73,0)
 I DGPTMI=" "&($E(DGPTSSN,2)=0) G LN
"RTN","DGPTAE01",74,0)
 I $P(DGPTALF,U,$E(DGPTSSN,2))'[DGPTMI S DGPTERC=130 G PSEQ
"RTN","DGPTAE01",75,0)
LN ;patient's last name
"RTN","DGPTAE01",76,0)
 I $P(DGPTALF,U,$E(DGPTSSN,3))'[$E(DGPTLN,1) S DGPTERC=130 G PSEQ
"RTN","DGPTAE01",77,0)
COMP ;check pseudo ssn, name and dob for consistency
"RTN","DGPTAE01",78,0)
 I $E(DGPTDOB,1,4)_$E(DGPTDOB,7,8)'=$E(DGPTSSN,4,9) S DGPTERC=130
"RTN","DGPTAE01",79,0)
 Q
"RTN","DGPTAE01",80,0)
PSEQ ;
"RTN","DGPTAE01",81,0)
 K DGPTALF
"RTN","DGPTAE01",82,0)
 Q
"RTN","DGPTAE01",83,0)
MST ;military sexual trauma
"RTN","DGPTAE01",84,0)
 I "YNDU "'[DGPTMST S ERR=152
"RTN","DGPTAE01",85,0)
 Q
"RTN","DGPTAE01",86,0)
CV ;combat veteran
"RTN","DGPTAE01",87,0)
 I "12 "'[DGPTCOMVET S ERR=155
"RTN","DGPTAE01",88,0)
 Q
"RTN","DGPTAE01",89,0)
CVDATE ;combat veteran date
"RTN","DGPTAE01",90,0)
 N X,Y
"RTN","DGPTAE01",91,0)
 Q:DGPTCOMVETDT?6" "
"RTN","DGPTAE01",92,0)
 S X=DGPTCOMVETDT,%DT="X" D ^%DT I Y<0 S DGPTERC=154
"RTN","DGPTAE01",93,0)
 Q
"RTN","DGPTAE01",94,0)
SHAD ;shipboard hazard and defense
"RTN","DGPTAE01",95,0)
 I "10 "'[DGPTSHAD S ERR=156
"RTN","DGPTAE01",96,0)
 Q
"RTN","DGPTAE02")
0^48^B26206444
"RTN","DGPTAE02",1,0)
DGPTAE02 ;ALB/MTC,HIOFO/FT - 701 Edit Checks ;3/12/15 1:51pm
"RTN","DGPTAE02",2,0)
 ;;5.3;Registration;**8,22,39,114,176,251,247,270,446,418,482,466,683,729,884**;Aug 13, 1993;Build 31
"RTN","DGPTAE02",3,0)
 ;10/06/1999 ACS - Added Place of Disposition codes M,Y,Z to the
"RTN","DGPTAE02",4,0)
 ;validity checks
"RTN","DGPTAE02",5,0)
 ;5/15/2000 ACS - Added Treating Specialty 37 as a valid code
"RTN","DGPTAE02",6,0)
 ;5/16/2000 MM  - Added Treating Specialties 38 & 39 as valid codes
"RTN","DGPTAE02",7,0)
 ;5/26/2000 JRP - Place of Disposition code M valid for station
"RTN","DGPTAE02",8,0)
 ;                types 10, 11, 30, and 40
"RTN","DGPTAE02",9,0)
 ;09/27/2006 JRC - Added Treating Specialties 13, 30, 48, 49, 78,
"RTN","DGPTAE02",10,0)
 ;                 82 and 97
"RTN","DGPTAE02",11,0)
 ;
"RTN","DGPTAE02",12,0)
CHECK ;
"RTN","DGPTAE02",13,0)
 I (DGPTSP1'?1AN)!(DGPTSP2'?1AN) S DGPTERC=1 Q
"RTN","DGPTAE02",14,0)
 I DGPTSP1="0"&((DGPTSP2'?1AN)!(DGPTSP2="0")) S DGPTERC=1 G EXIT
"RTN","DGPTAE02",15,0)
 ; No zero or double zeroes allowed
"RTN","DGPTAE02",16,0)
 I DGPTSP1=5 G EXIT
"RTN","DGPTAE02",17,0)
 ; All codes 50-59 allowable
"RTN","DGPTAE02",18,0)
 ; New code 95:p-418
"RTN","DGPTAE02",19,0)
 ; New code 96;p-446
"RTN","DGPTAE02",20,0)
EXIT ;
"RTN","DGPTAE02",21,0)
 K DGPTSP1,DGPTSP2
"RTN","DGPTAE02",22,0)
 Q
"RTN","DGPTAE02",23,0)
 ;
"RTN","DGPTAE02",24,0)
DISPTY ;
"RTN","DGPTAE02",25,0)
 N I
"RTN","DGPTAE02",26,0)
 S DGPTERC=0
"RTN","DGPTAE02",27,0)
 Q:"1"[DGPTDTY
"RTN","DGPTAE02",28,0)
 I DGPTDTY=2 S DGPTERC=707 F I=10,11,30,40,42 I DGPTSTTY["^"_I_"^" S DGPTERC=0 Q
"RTN","DGPTAE02",29,0)
 I DGPTERC Q
"RTN","DGPTAE02",30,0)
 ;
"RTN","DGPTAE02",31,0)
 ;-- if dis type = To Non-Bed Care then VA aus and Out pat = no
"RTN","DGPTAE02",32,0)
 ;I DGPTDTY=2,((DGPTDVA'=2)!(DGPTDOP'=3)) S DGPTERC=707 Q
"RTN","DGPTAE02",33,0)
 ;
"RTN","DGPTAE02",34,0)
 I DGPTDTY=3&(DGPTSTTY'["^42^") S DGPTERC=707 Q
"RTN","DGPTAE02",35,0)
 ;-- if dis type = Transfer then Out pat cannot be yes
"RTN","DGPTAE02",36,0)
 I DGPTDTY=5,DGPTDOP=1 S DGPTERC=707
"RTN","DGPTAE02",37,0)
 ;-- if dis type = Transfer then Out pat cannot be yes, rec sta'=""
"RTN","DGPTAE02",38,0)
 I DGPTDTY=5,DGPTDOP'=1,'DGPTDRF S DGPTERC=711 Q
"RTN","DGPTAE02",39,0)
 ;-- if dis type irr, death w/aotopsy then va asp, op care, pod = ""
"RTN","DGPTAE02",40,0)
 I "467"[DGPTDTY,(DGPTDOP!DGPTDVA!DGPTDPD) S DGPTERC=707 Q
"RTN","DGPTAE02",41,0)
 Q
"RTN","DGPTAE02",42,0)
OP ;
"RTN","DGPTAE02",43,0)
 Q:"13"'[DGPTDOP
"RTN","DGPTAE02",44,0)
 S DGPTERC=708 F I=10,11,40,42 I DGPTSTTY["^"_I_"^" S DGPTERC=0 Q
"RTN","DGPTAE02",45,0)
 Q
"RTN","DGPTAE02",46,0)
POD ;place of disposition
"RTN","DGPTAE02",47,0)
 N I
"RTN","DGPTAE02",48,0)
 Q:"X012347BCDFGHJKL "[DGPTDPD
"RTN","DGPTAE02",49,0)
 ; if POD NHCU then Out=no VA aus=yes
"RTN","DGPTAE02",50,0)
 I DGPTDPD=5,((DGPTDOP'=3)!(DGPTDVA'=1)) S DGPTERC=710 Q
"RTN","DGPTAE02",51,0)
 ; if POD NHCU then Out=no VA aus=yes, rec station'=""
"RTN","DGPTAE02",52,0)
 I DGPTDPD=5,DGPTDOP=3,DGPTDVA=1,'DGPTDRF S DGPTERC=711 Q
"RTN","DGPTAE02",53,0)
 I "PR"[DGPTDPD,((DGPTSTTY'["^10^")!(DGPTSTTY'["^11^")) S DGPTERC=710 Q
"RTN","DGPTAE02",54,0)
 I DGPTDPD="M" S DGPTERC=710 F I=10,11,30,40 I DGPTSTTY["^"_I_"^" S DGPTERC=0 Q
"RTN","DGPTAE02",55,0)
 I DGPTDPD="T" S DGPTERC=710 F I=10,11,40 I DGPTSTTY["^"_I_"^" S DGPTERC=0 Q
"RTN","DGPTAE02",56,0)
 I "UYZ"[DGPTDPD S DGPTERC=710 F I=10,11,20:1:27,30,40:1:42 I DGPTSTTY["^"_I_"^" S DGPTERC=0 Q
"RTN","DGPTAE02",57,0)
 Q
"RTN","DGPTAE02",58,0)
LEAVE ;
"RTN","DGPTAE02",59,0)
 S DGPTLVDY=0
"RTN","DGPTAE02",60,0)
 S DGPTL3=0 F  S DGPTL3=$O(^TMP("AEDIT",$J,"N501",DGPTL3)) Q:DGPTL3=""  S DGPTLVDY=DGPTLVDY+$E(^TMP("AEDIT",$J,"N501",DGPTL3),49,51)+$E(^TMP("AEDIT",$J,"N501",DGPTL3),52,54)
"RTN","DGPTAE02",61,0)
 I (DGPTLVDY+DGPTDAS)>DGPTELP S DGPTERC=745
"RTN","DGPTAE02",62,0)
 K DGPTL3,DGPTLVDY
"RTN","DGPTAE02",63,0)
 Q
"RTN","DGPTAE02",64,0)
 ;
"RTN","DGPTAE02",65,0)
CANDP ;compensation and pension status
"RTN","DGPTAE02",66,0)
 I "12345678"'[DGPTDCP S DGPTERC=714 Q
"RTN","DGPTAE02",67,0)
 ;-- if no POS then no edit
"RTN","DGPTAE02",68,0)
 Q:DGPTPOS2=9
"RTN","DGPTAE02",69,0)
 ;-- if WWI then no edit
"RTN","DGPTAE02",70,0)
 Q:DGPTPOS2=1
"RTN","DGPTAE02",71,0)
 ;-- if POW then no edit
"RTN","DGPTAE02",72,0)
 I $L(DGPTPOW)=1,("23456789AB"[DGPTPOW) Q
"RTN","DGPTAE02",73,0)
 D CONSIS Q:DGPTERC
"RTN","DGPTAE02",74,0)
 D STATYP Q:DGPTERC
"RTN","DGPTAE02",75,0)
 D CPMT Q:DGPTERC
"RTN","DGPTAE02",76,0)
 Q
"RTN","DGPTAE02",77,0)
CONSIS ;
"RTN","DGPTAE02",78,0)
 I ("01234578X"[DGPTPOS2)&("1234567"'[DGPTDCP) S DGPTERC=736 Q
"RTN","DGPTAE02",79,0)
 I ("ABCD"[DGPTPOS2) Q
"RTN","DGPTAE02",80,0)
 I DGPTPOS2="Z"&("1234567"'[DGPTDCP) S DGPTERC=736 Q
"RTN","DGPTAE02",81,0)
 Q:"012345678ABCDXZ"[DGPTPOS2
"RTN","DGPTAE02",82,0)
 S:DGPTDCP'=8 DGPTERC=736
"RTN","DGPTAE02",83,0)
 Q
"RTN","DGPTAE02",84,0)
STATYP ;
"RTN","DGPTAE02",85,0)
 Q:(DGPTSTTY["^30^")!(DGPTSTTY="^")!(DGPTSTTY="")
"RTN","DGPTAE02",86,0)
 ;Note: There is not sufficient information contained in the
"RTN","DGPTAE02",87,0)
 ;station type to adequately perform the error check of Means Test
"RTN","DGPTAE02",88,0)
 ;indicator vs admissions date.  This issue should be revisited in 5.4.
"RTN","DGPTAE02",89,0)
 ;For now, error code 143 (previously set as 744) will not be checked
"RTN","DGPTAE02",90,0)
 ;in order to be sure that an error is not erroneously generated.
"RTN","DGPTAE02",91,0)
 Q
"RTN","DGPTAE02",92,0)
MT ;means test
"RTN","DGPTAE02",93,0)
 I DGPTMTC="X "&((+DGPTDTS)'<2860701) S DGPTERC=143 Q
"RTN","DGPTAE02",94,0)
 Q:DGPTMTC="X "
"RTN","DGPTAE02",95,0)
 I DGPTDTS<2860701 S DGPTERC=143 Q
"RTN","DGPTAE02",96,0)
 Q
"RTN","DGPTAE02",97,0)
 ;
"RTN","DGPTAE02",98,0)
CPMT ;-- mt and c&p checks
"RTN","DGPTAE02",99,0)
 I DGPTMTC="N ",DGPTDCP'=8 S DGPTERC=753 Q
"RTN","DGPTAE02",100,0)
 I DGPTMTC="AN","24567"'[DGPTDCP S DGPTERC=753 Q
"RTN","DGPTAE02",101,0)
 I ((DGPTMTC="B ")!(DGPTMTC="C ")!(DGPTMTC="G ")),"2467"'[DGPTDCP S DGPTERC=753 Q
"RTN","DGPTAE02",102,0)
 I DGPTMTC="AS","1234567"'[DGPTDCP S DGPTERC=753 Q
"RTN","DGPTAE02",103,0)
 Q
"RTN","DGPTAE02",104,0)
LEG ;legionnaires indicator
"RTN","DGPTAE02",105,0)
 ;I DGPTDDXE=482.8&("12"'[DGPT70LG) S DGPTERC=731 Q
"RTN","DGPTAE02",106,0)
 Q
"RTN","DGPTAE02",107,0)
SUI ;suicide indicator
"RTN","DGPTAE02",108,0)
 ; -- 850 - aas - hard coded ICD codes
"RTN","DGPTAE02",109,0)
 ; -- Suicide Category is inactive JUL 1,2006
"RTN","DGPTAE02",110,0)
 N DGINACT
"RTN","DGPTAE02",111,0)
 I ($E(DGPTDDXE,1,3)="E95")&("12345678"[$E(DGPTDDXE,4))&("12"'[DGPT70SU) D
"RTN","DGPTAE02",112,0)
 . I '$D(DGSCDT) D DC
"RTN","DGPTAE02",113,0)
 . S DGINACT=$$GET1^DIQ(45.88,"2,",.03,"I")
"RTN","DGPTAE02",114,0)
 . I DGINACT]"",$D(DGSCDT) Q:DGSCDT>DGINACT
"RTN","DGPTAE02",115,0)
 . S DGPTERC=732 Q
"RTN","DGPTAE02",116,0)
 Q
"RTN","DGPTAE02",117,0)
DRUG ;drug/substance abuse
"RTN","DGPTAE02",118,0)
 ; -- 850 - aas - hard coded ICD codes
"RTN","DGPTAE02",119,0)
 ; -- Substance Abuse Category is inactive JUL 1,2006
"RTN","DGPTAE02",120,0)
 I DGPT70DR'?4" " S DGPTERC=733 ;should be spaces as of DG*5.3*683. 11/13/14 
"RTN","DGPTAE02",121,0)
 ;S DGPTMSX=0
"RTN","DGPTAE02",122,0)
 ;I ($E(DGPTDDXE,1,4)="304.")&("013456"[$E(DGPTDDXE,5))&("0123"[$E(DGPTDDXE,6)) S DGPTMSX=1
"RTN","DGPTAE02",123,0)
 ;I ($E(DGPTDDXE,1,4)="305.")&("234579"[$E(DGPTDDXE,5))&("0123"[$E(DGPTDDXE,6)) S DGPTMSX=1
"RTN","DGPTAE02",124,0)
 ;Q:'DGPTMSX
"RTN","DGPTAE02",125,0)
 ;N DGINACT
"RTN","DGPTAE02",126,0)
 ;I $E(DGPT70DR,1)'="A"!($E(DGPT70DR,2,4)<1)!(+$E(DGPT70DR>16)) D
"RTN","DGPTAE02",127,0)
 ;. I '$D(DGSCDT) D DC
"RTN","DGPTAE02",128,0)
 ;. S DGINACT=$$GET1^DIQ(45.88,"4,",.03,"I")
"RTN","DGPTAE02",129,0)
 ;. I DGINACT]"",$D(DGSCDT) Q:DGSCDT>DGINACT
"RTN","DGPTAE02",130,0)
 ;. S DGPTERC=733
"RTN","DGPTAE02",131,0)
 ;S DGPTMSX=0
"RTN","DGPTAE02",132,0)
 Q
"RTN","DGPTAE02",133,0)
AXIV ;physical sxis class
"RTN","DGPTAE02",134,0)
 ;this code will not be called when ICD10 is turned on. ft 11/13/14
"RTN","DGPTAE02",135,0)
 I $E(DGPTDDXE,1,3)>295,$E(DGPTDDXE,1,3)<320,"0123456"'[DGPT70X4 S DGPTERC=734
"RTN","DGPTAE02",136,0)
 Q
"RTN","DGPTAE02",137,0)
AXV1 ;physical axis assessment 1
"RTN","DGPTAE02",138,0)
 ;this code will not be called when ICD10 is turned on. ft 11/13/14
"RTN","DGPTAE02",139,0)
 I (DGPTDXV1<0)!(DGPTDXV1>90) S DGPTERC=735 Q
"RTN","DGPTAE02",140,0)
 Q
"RTN","DGPTAE02",141,0)
AXV2 ;physical axis assessment 2
"RTN","DGPTAE02",142,0)
 ;this code will not be called when ICD10 is turned on. ft 11/13/14
"RTN","DGPTAE02",143,0)
 Q:DGPTDXV2="  "
"RTN","DGPTAE02",144,0)
 I (DGPTDXV2<0)!(DGPTDXV2>90) S DGPTERC=735 Q
"RTN","DGPTAE02",145,0)
 Q
"RTN","DGPTAE02",146,0)
DC ;find discharge date
"RTN","DGPTAE02",147,0)
 S DGSCDT=$S('$D(^DGPT(PTF,70)):DT,^(70):+^(70),1:DT)
"RTN","DGPTAE02",148,0)
 Q
"RTN","DGPTAE02",149,0)
RACE ;Race
"RTN","DGPTAE02",150,0)
 I "1234567X "'[DGPT70RACE S DGPTERC=713
"RTN","DGPTAE02",151,0)
 Q
"RTN","DGPTAE02",152,0)
TSC ;treatment for service condition
"RTN","DGPTAE02",153,0)
 I "12YN "'[DGPT70TSC S DGPTERC=746
"RTN","DGPTAE02",154,0)
 Q
"RTN","DGPTAE02",155,0)
AO ;agent orange
"RTN","DGPTAE02",156,0)
 I "YN "'[DGPT70AO S DGPTERC=747
"RTN","DGPTAE02",157,0)
 Q
"RTN","DGPTAE02",158,0)
IR ;ionizing radiation
"RTN","DGPTAE02",159,0)
 I "YN "'[DGPT70IR S DGPTERC=748
"RTN","DGPTAE02",160,0)
 Q
"RTN","DGPTAE02",161,0)
SWA ;southwest asia
"RTN","DGPTAE02",162,0)
 I "YN "'[DGPT70SWA S DGPTERC=749
"RTN","DGPTAE02",163,0)
 Q
"RTN","DGPTAE02",164,0)
MST ;military sexual trauma
"RTN","DGPTAE02",165,0)
 I "YN "'[DGPT70MST S DGPTERC=752
"RTN","DGPTAE02",166,0)
 Q
"RTN","DGPTAE02",167,0)
HNC ;head & neck cancer (aka environmental contaminants)
"RTN","DGPTAE02",168,0)
 I "YN "'[DGPT70HNC S DGPTERC=754
"RTN","DGPTAE02",169,0)
 Q
"RTN","DGPTAE02",170,0)
ETHNIC ;ethnicity
"RTN","DGPTAE02",171,0)
 I '$F("^D ^DO^DP^DS^DU^H ^HO^HP^HS^HU^N ^NO^NP^NS^NU^U ^UO^UP^US^UU^  ^",U_DGPT70ETHNIC_U) S DGPTERC=704
"RTN","DGPTAE02",172,0)
 Q
"RTN","DGPTAE02",173,0)
RACE16 ;races 1-6
"RTN","DGPTAE02",174,0)
 N DGLIST
"RTN","DGPTAE02",175,0)
 S DGLIST="^A ^AO^AP^AS^AU^B ^BO^BP^BS^BU^C ^CO^CP^CS^CU^D ^DO^DP^DS^DU^3 ^30^3P^3S^3U^8 ^80^8P^8S^8U^9 ^9O^9P^9S^9U^"
"RTN","DGPTAE02",176,0)
 I $F(DGLIST,U_DGPTRACE16_U) S DGPTREC=757+DGLOOP
"RTN","DGPTAE02",177,0)
 Q
"RTN","DGPTAE02",178,0)
CV ;combat veteran
"RTN","DGPTAE02",179,0)
 I "012YN "'[DGPT70COMVET S DGPTERC=755
"RTN","DGPTAE02",180,0)
 Q
"RTN","DGPTAE02",181,0)
SHAD ;shipboard hazard and defense
"RTN","DGPTAE02",182,0)
 I "012YN "'[DGPT70SHAD S DGPTERC=756
"RTN","DGPTAE02",183,0)
 Q
"RTN","DGPTAE02",184,0)
DXLSPOA ;check dxls poa value
"RTN","DGPTAE02",185,0)
 I "YNUW "'[DGPTDXLSPOA S DGPTERC=720
"RTN","DGPTAE02",186,0)
 Q
"RTN","DGPTAE03")
0^49^B8625430
"RTN","DGPTAE03",1,0)
DGPTAE03 ;ALB/MTC,HIOFO/FT - 501 Edit Checks Cont ;10/29/2014 3:42pm
"RTN","DGPTAE03",2,0)
 ;;5.3;Registration;**8,52,164,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTAE03",3,0)
 ;
"RTN","DGPTAE03",4,0)
 ; ICDEX APIs - #5747
"RTN","DGPTAE03",5,0)
 ;
"RTN","DGPTAE03",6,0)
501 ;--Check elapsed days between movements vs leave and pass days
"RTN","DGPTAE03",7,0)
 ;
"RTN","DGPTAE03",8,0)
 S (X2,X3,DGPTL3)=0 F DGPTL4=0:0 S DGPTL3=$O(^TMP("AEDIT",$J,"N501",DGPTL3)) Q:DGPTL3=""  D
"RTN","DGPTAE03",9,0)
 . S X3=$$FMDT^DGPT101($E(^TMP("AEDIT",$J,"N501",DGPTL3),31,36))_"."_$E(^TMP("AEDIT",$J,"N501",DGPTL3),37,40) I (X3<DGPTMDTS)&(X3>X2) S X2=X3
"RTN","DGPTAE03",10,0)
 I X2=0 S X2=DGPTDTS
"RTN","DGPTAE03",11,0)
 D ^%DTC I X>0,(X-DGPTMLD-DGPTMPD<0) S DGPTERC=543
"RTN","DGPTAE03",12,0)
 K X,X1,X2,X3,DGPTL3,DGPTL4
"RTN","DGPTAE03",13,0)
 Q
"RTN","DGPTAE03",14,0)
 ;
"RTN","DGPTAE03",15,0)
535 ;--Check elapsed days between movements vs leave and pass days
"RTN","DGPTAE03",16,0)
 ;
"RTN","DGPTAE03",17,0)
 S (X2,X3,DGPTL3)=0 F DGPTL4=0:0 S DGPTL3=$O(^TMP("AEDIT",$J,"N535",DGPTL3)) Q:DGPTL3=""  D
"RTN","DGPTAE03",18,0)
 . S X3=$$FMDT^DGPT101($E(^TMP("AEDIT",$J,"N535",DGPTL3),31,36))_"."_$E(^TMP("AEDIT",$J,"N535",DGPTL3),37,40) I (X3<DGPTTDTS)&(X3>X2) S X2=X3
"RTN","DGPTAE03",19,0)
 I X2=0 S X2=DGPTDTS
"RTN","DGPTAE03",20,0)
 D ^%DTC I X>0,(X-DGPTTLD-DGPTTPD<0) S DGPTERC=543
"RTN","DGPTAE03",21,0)
 K X,X1,X2,X3,DGPTL3,DGPTL4
"RTN","DGPTAE03",22,0)
 Q
"RTN","DGPTAE03",23,0)
 ;
"RTN","DGPTAE03",24,0)
SP ; Spinal injury and related diagnosis edits
"RTN","DGPTAE03",25,0)
 D EDIT I DGPTERC Q
"RTN","DGPTAE03",26,0)
 D DIA
"RTN","DGPTAE03",27,0)
 Q
"RTN","DGPTAE03",28,0)
EDIT ;
"RTN","DGPTAE03",29,0)
 N FLAG,I
"RTN","DGPTAE03",30,0)
 I "1234X "'[DGPTMSI S DGPTERC=509 Q
"RTN","DGPTAE03",31,0)
 I DGPTSTTY="^"!(DGPTSTTY="") Q
"RTN","DGPTAE03",32,0)
 I "1234X"[DGPTMSI S DGPTERC=509,FLAG=1 F I=10,11,30,40,42 S I=U_I_U I DGPTSTTY[I S DGPTERC=0,FLAG=0 Q
"RTN","DGPTAE03",33,0)
 Q
"RTN","DGPTAE03",34,0)
DIA ; - Diagnosis check for Spinal Cord Injury
"RTN","DGPTAE03",35,0)
 Q:(DGPTSTTY'["^10^")!(DGPTSTTY'["^11^")
"RTN","DGPTAE03",36,0)
 N SYS,EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPTAE03",37,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPTAE03",38,0)
 S SYS=$$SYS^ICDEX("DIAG",EFFDATE)
"RTN","DGPTAE03",39,0)
 I SYS=1 D
"RTN","DGPTAE03",40,0)
 . I DGPTMSI="X"&((DGPTMD1?1"3440"1N)!(DGPTMD1=3441)!(DGPTMD2?1"3440"1N)!(DGPTMD2=3441)!(DGPTMD3?1"3440"1N)!(DGPTMD3=3441)!(DGPTMD4?1"3440"1N)!(DGPTMD4=3441)!(DGPTMD5?1"3440"1N)!(DGPTMD5=3441)) S DGPTERC=554 Q
"RTN","DGPTAE03",41,0)
 . I "13"[DGPTMSI&((DGPTMD1'=3441)&(DGPTMD2'=3441)&(DGPTMD3'=3441)&(DGPTMD4'=3441)&(DGPTMD5'=3441)) S DGPTERC=554 Q
"RTN","DGPTAE03",42,0)
 . I "24"[DGPTMSI&((DGPTMD1'?1"3440"1N)&(DGPTMD2'?1"3440"1N)&(DGPTMD3'?1"3440"1N)&(DGPTMD4'?1"3440"1N)&(DGPTMD5'?1"3440"1N)) S DGPTERC=554 Q
"RTN","DGPTAE03",43,0)
 I SYS=30 D  ;icd10
"RTN","DGPTAE03",44,0)
 . N DGLOOP,DGPTDXCODE,DGPTFLAG
"RTN","DGPTAE03",45,0)
 . S DGPTFLAG=0
"RTN","DGPTAE03",46,0)
 . F DGLOOP=1:1:25 S DGPTDXCODE=@("DGPTMD"_DGLOOP) D  Q:DGPTFLAG
"RTN","DGPTAE03",47,0)
 .. I (DGPTDXCODE?1"G822"1N)!(DGPTDXCODE?1"G825"1N) S DGPTFLAG=1
"RTN","DGPTAE03",48,0)
 . I DGPTMSI="X"&(DGPTFLAG=1) S DGPTERC=554 Q
"RTN","DGPTAE03",49,0)
 . I "13"[DGPTMSI&(DGPTFLAG=1) S DGPTERC=554 Q
"RTN","DGPTAE03",50,0)
 . I "24"[DGPTMSI&(DGPTFLAG=1) S DGPTERC=554 Q
"RTN","DGPTAE03",51,0)
 . Q
"RTN","DGPTAE03",52,0)
 Q
"RTN","DGPTAE04")
0^50^B12240703
"RTN","DGPTAE04",1,0)
DGPTAE04 ;ALB/MTC/ADL,HIOFO/FT - 401 Edit Checks Cont ;6/11/15 11:10am
"RTN","DGPTAE04",2,0)
 ;;5.3;Registration;**510,744,870,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTAE04",3,0)
 ;;ADL;Updated for CSV Project;;Mar 24, 2003
"RTN","DGPTAE04",4,0)
 ;
"RTN","DGPTAE04",5,0)
 ; ICDEX APIs - #5747
"RTN","DGPTAE04",6,0)
 ; ICDXCODE APIs - #5699
"RTN","DGPTAE04",7,0)
 ;
"RTN","DGPTAE04",8,0)
TRAN ;-- verify transplant status
"RTN","DGPTAE04",9,0)
 Q:DGPTFMT=3  ;transplant status is not used with ICD-10
"RTN","DGPTAE04",10,0)
 I " 12"'[DGPT40PT S DGPTERC=417
"RTN","DGPTAE04",11,0)
 Q
"RTN","DGPTAE04",12,0)
 ;
"RTN","DGPTAE04",13,0)
CHIEF ;chief surgeon
"RTN","DGPTAE04",14,0)
 N FLAG,I
"RTN","DGPTAE04",15,0)
 Q:"VMN"[DGPTSCS
"RTN","DGPTAE04",16,0)
 I "1234567"'[DGPTSCS S DGPTERC=407 Q
"RTN","DGPTAE04",17,0)
 S FLAG=1 F I=10,11,30,40,42 I DGPTSTTY["^"_I_"^" S FLAG=0 Q
"RTN","DGPTAE04",18,0)
 S:FLAG DGPTERC=407
"RTN","DGPTAE04",19,0)
 Q
"RTN","DGPTAE04",20,0)
FAST ;first assistant
"RTN","DGPTAE04",21,0)
 N FLAG,I
"RTN","DGPTAE04",22,0)
 Q:DGPTSFA=" "
"RTN","DGPTAE04",23,0)
 S FLAG=0 F I=20:1:26 I DGPTSTTY["^"_I_"^" S FLAG=1,DGPTSFA=" " Q
"RTN","DGPTAE04",24,0)
 I FLAG Q
"RTN","DGPTAE04",25,0)
 I "12345678"'[DGPTSFA S DGPTERC=408 Q
"RTN","DGPTAE04",26,0)
 Q
"RTN","DGPTAE04",27,0)
ANES ;anesthesia technique
"RTN","DGPTAE04",28,0)
 N FLAG,I
"RTN","DGPTAE04",29,0)
 Q:DGPTSAT=" "
"RTN","DGPTAE04",30,0)
 S FLAG=0 F I=20:1:26 I DGPTSTTY["^"_I_"^" S FLAG=1,DGPTSAT=" " Q
"RTN","DGPTAE04",31,0)
 I FLAG Q
"RTN","DGPTAE04",32,0)
 I "0123456789RX"'[DGPTSAT S DGPTERC=409 Q
"RTN","DGPTAE04",33,0)
 S DGPTERC=409 F I=10,11,30,40,42 I DGPTSTTY["^"_I_"^" S DGPTERC=0 Q
"RTN","DGPTAE04",34,0)
 Q
"RTN","DGPTAE04",35,0)
 ;
"RTN","DGPTAE04",36,0)
FIRST ;-- Edit surgeries - present in ICD0 OPERATIONS, current, gender ok
"RTN","DGPTAE04",37,0)
 ;
"RTN","DGPTAE04",38,0)
 ; -- 850 - aas - hard coded ICD codes
"RTN","DGPTAE04",39,0)
 ; -- 39.610, 39.611, 39.612 inactive 10/1/79
"RTN","DGPTAE04",40,0)
 I (DGPTSO1="1371   ")!(DGPTSO1="39610  ")!(DGPTSO1="39611  ")!(DGPTSO1="39612  ") S DGPTERC=450 D ERR G:DGPTEDFL EXIT
"RTN","DGPTAE04",41,0)
LOOP ;check surgery procedure codes
"RTN","DGPTAE04",42,0)
 I DGPTFMT=2 F DGPTL3=1:1:5 S DGPTERC=0 D CHKOPC I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPTAE04",43,0)
 I DGPTFMT=3 F DGPTL3=1:1:25 S DGPTERC=0 D CHKOPC I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPTAE04",44,0)
 Q
"RTN","DGPTAE04",45,0)
CHKOPC ;
"RTN","DGPTAE04",46,0)
 N SYS,EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPTAE04",47,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPTAE04",48,0)
 S SYS=$$SYS^ICDEX("PROC",EFFDATE)
"RTN","DGPTAE04",49,0)
 S DGPTOC=@("DGPTSO"_DGPTL3),DGPTOC=$P(DGPTOC," ",1) Q:DGPTOC=""
"RTN","DGPTAE04",50,0)
 S DGPTERC=$S(DGPTL3<6:410+DGPTL3,DGPTL3<23:412+DGPTL3,1:423+DGPTL3)
"RTN","DGPTAE04",51,0)
 I SYS=2 S DGPTOC=$E(DGPTOC_"       ",1,2)_"."_$E(DGPTOC,3,7)
"RTN","DGPTAE04",52,0)
 S DGPTOPP=+$$CODEN^ICDEX(DGPTOC,80.1) I $P(DGPTOPP,U,1)'=-1 S DGPTERC=0 D GEN Q
"RTN","DGPTAE04",53,0)
 Q
"RTN","DGPTAE04",54,0)
GEN ;check patient's gender - 884 no longer flags a gender error
"RTN","DGPTAE04",55,0)
 N EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPTAE04",56,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPTAE04",57,0)
 ; DG*5.3*850
"RTN","DGPTAE04",58,0)
 S DGPTOPP=+$$CODEN^ICDEX(DGPTOC,80.1) I $P(DGPTOPP,U,1)=-1 S DGPTERC=$S(DGPTL3<6:410+DGPTL3,DGPTL3<23:412+DGPTL3,1:423+DGPTL3) Q
"RTN","DGPTAE04",59,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",DGPTOPP,EFFDATE)
"RTN","DGPTAE04",60,0)
 ; DG*744 - check against discharge date
"RTN","DGPTAE04",61,0)
 I DGPTTMP=-1!('$P(DGPTTMP,U,10)) S DGPTERC=$S(DGPTL3<6:410+DGPTL3,DGPTL3<23:412+DGPTL3,1:423+DGPTL3) N DGPTDAT S DGPTDAT=+$G(^DGPT(PTF,70)) I DGPTDAT S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",DGPTOPP,EFFDATE) I $P(DGPTTMP,U,10)=1 S DGPTERC=0
"RTN","DGPTAE04",62,0)
 ;I DGPTERC=451 Q
"RTN","DGPTAE04",63,0)
 ;I $P(DGPTTMP,U,11)]""&(DGPTGEN'=$P(DGPTTMP,U,11)) S DGPTERC=451 Q
"RTN","DGPTAE04",64,0)
CURR ;current procedure. check procedure status, inactive date and surgery date
"RTN","DGPTAE04",65,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",DGPTOPP,EFFDATE)
"RTN","DGPTAE04",66,0)
 I ($P(DGPTTMP,U,10)=0)&($P(DGPTSDD,1,7)>$P(DGPTTMP,U,12)) S DGPTERC=$S(DGPTL3<6:410+DGPTL3,DGPTL3<23:412+DGPTL3,1:423+DGPTL3) Q
"RTN","DGPTAE04",67,0)
SAVE ;
"RTN","DGPTAE04",68,0)
 S @("DGPTSO"_DGPTL3)=DGPTOC
"RTN","DGPTAE04",69,0)
ARRAY ;
"RTN","DGPTAE04",70,0)
 S DGPTOPAR(DGPTSDD)=$S($D(DGPTOPAR(DGPTSDD)):DGPTOPAR(DGPTSDD)_U_DGPTOPP,1:DGPTOPP_U)
"RTN","DGPTAE04",71,0)
 Q
"RTN","DGPTAE04",72,0)
EXIT ;
"RTN","DGPTAE04",73,0)
 K DGPTL3,DGPTOC,DGPTOC1,DGPTOPP
"RTN","DGPTAE04",74,0)
 Q
"RTN","DGPTAE04",75,0)
ERR ;
"RTN","DGPTAE04",76,0)
 D WRTERR^DGPTAE(DGPTERC,NODE,SEQ)
"RTN","DGPTAE04",77,0)
 Q
"RTN","DGPTAEE")
0^53^B24445151
"RTN","DGPTAEE",1,0)
DGPTAEE ;ALB/MTC,HIOFO/FT - Austin Edit Checks Error Driver ;7/6/15 10:06am
"RTN","DGPTAEE",2,0)
 ;;5.3;Registration;**64,338,678,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTAEE",3,0)
 ;
"RTN","DGPTAEE",4,0)
 ;no external references
"RTN","DGPTAEE",5,0)
 ;
"RTN","DGPTAEE",6,0)
EN ;-- entry point for list manager
"RTN","DGPTAEE",7,0)
 D BUILD
"RTN","DGPTAEE",8,0)
 Q
"RTN","DGPTAEE",9,0)
 ;
"RTN","DGPTAEE",10,0)
HDR ;-- header function for Editing List.
"RTN","DGPTAEE",11,0)
 S VALMHDR(1)="Patient : "_$P($G(^DPT(DFN,0)),U)
"RTN","DGPTAEE",12,0)
 S VALMHDR(2)="Admission Date : "_$$FTIME^VALM1($P(^DGPT(PTF,0),U,2))
"RTN","DGPTAEE",13,0)
 S VALMHDR(3)="Discharge Date : "_$$FTIME^VALM1($P(^DGPT(PTF,70),U))
"RTN","DGPTAEE",14,0)
 Q
"RTN","DGPTAEE",15,0)
 ;
"RTN","DGPTAEE",16,0)
BUILD ;-- this function will build the display array - similar to Austin's EAL
"RTN","DGPTAEE",17,0)
 ;
"RTN","DGPTAEE",18,0)
 Q:'$D(^TMP("AERROR",$J))!'($D(^TMP("AEDIT",$J)))
"RTN","DGPTAEE",19,0)
 K ^TMP("AD",$J)
"RTN","DGPTAEE",20,0)
 N NODE,SEQ,DGER,ERSTR,SP,ROU,REC,DGPTLINE,DGPTLGTH,DGFLAG
"RTN","DGPTAEE",21,0)
 S (DGFLAG,VALMCNT,SEQ)=0,NODE="",SP=" "
"RTN","DGPTAEE",22,0)
 F  S SEQ=$O(^TMP("AERROR",$J,SEQ)) Q:SEQ=""  D
"RTN","DGPTAEE",23,0)
 . S NODE=$O(^TMP("AERROR",$J,SEQ,0))
"RTN","DGPTAEE",24,0)
 . S DGFLAG=$S(NODE="N101":1,NODE="N401":1,NODE="N501":1,NODE="N601":1,NODE="N701":1,NODE="N702":1,1:0)
"RTN","DGPTAEE",25,0)
 . Q:DGFLAG=0
"RTN","DGPTAEE",26,0)
 . Q:'$D(^TMP("AERROR",$J,SEQ,NODE))
"RTN","DGPTAEE",27,0)
 . S REC=$G(^TMP("AEDIT",$J,NODE,SEQ))
"RTN","DGPTAEE",28,0)
 . Q:REC=""
"RTN","DGPTAEE",29,0)
 . S DGPTLGTH=$L(REC),DGPTLINE=1
"RTN","DGPTAEE",30,0)
 . S:NODE="N101" DGPTLINE=$S(DGPTLGTH=125:1,1:2)  ;1 is for ICD9 layout, 2 is for ICD10 layout
"RTN","DGPTAEE",31,0)
 . S:NODE="N401" DGPTLINE=$S(DGPTLGTH=125:1,1:2)
"RTN","DGPTAEE",32,0)
 . S:NODE="N501" DGPTLINE=$S(DGPTLGTH=125:1,1:2)
"RTN","DGPTAEE",33,0)
 . S:NODE="N601" DGPTLINE=$S(DGPTLGTH=125:1,1:2)
"RTN","DGPTAEE",34,0)
 . S:NODE="N701" DGPTLINE=$S(DGPTLGTH=125:1,1:2)
"RTN","DGPTAEE",35,0)
 . S:NODE="N702" DGPTLINE=$S(DGPTLGTH=125:1,1:2)
"RTN","DGPTAEE",36,0)
 . S ERSTR=$P($T(@("ER"_$E(NODE,2,4))+DGPTLINE),";;",2) D LOADER
"RTN","DGPTAEE",37,0)
 . S ROU="H"_$E(NODE,2,4)_"^"_$S(NODE="N101"!(NODE="N401")!(NODE="N501"):"DGPTAEE1",1:"DGPTAEE2")_"(REC)" D @ROU
"RTN","DGPTAEE",38,0)
 Q
"RTN","DGPTAEE",39,0)
 ;
"RTN","DGPTAEE",40,0)
EXIT ;-- exit point for list manager
"RTN","DGPTAEE",41,0)
 K ^TMP("AD",$J)
"RTN","DGPTAEE",42,0)
 D CLEAR^VALM1
"RTN","DGPTAEE",43,0)
 Q
"RTN","DGPTAEE",44,0)
 ;
"RTN","DGPTAEE",45,0)
LOADER ;-- This function will load the array DGER
"RTN","DGPTAEE",46,0)
 ;
"RTN","DGPTAEE",47,0)
 N Y,J,X1,X2
"RTN","DGPTAEE",48,0)
 K DGER
"RTN","DGPTAEE",49,0)
 S DGER=""
"RTN","DGPTAEE",50,0)
 S Y="",J=0 F  S J=$O(^TMP("AERROR",$J,SEQ,NODE,J)) Q:'J  S X2=$G(^(J)) D
"RTN","DGPTAEE",51,0)
 . S X1=$O(^DGP(45.64,"B",$G(X2),0)),Y=$G(^DGP(45.64,+$G(X1),0))
"RTN","DGPTAEE",52,0)
 . S DGER(J)=Y,DGER=DGER_$P(ERSTR,U,$P(Y,U,3))_","
"RTN","DGPTAEE",53,0)
 S DGER=$E(DGER,1,$L(DGER)-1)
"RTN","DGPTAEE",54,0)
 Q
"RTN","DGPTAEE",55,0)
 ;
"RTN","DGPTAEE",56,0)
WRER ;-- This function will write errors in DGER into ^TMP
"RTN","DGPTAEE",57,0)
 ;
"RTN","DGPTAEE",58,0)
 N I
"RTN","DGPTAEE",59,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)="Error Code(s) : "
"RTN","DGPTAEE",60,0)
 S I="" F  S I=$O(DGER(I)) Q:'I  D
"RTN","DGPTAEE",61,0)
 . S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=$P(DGER(I),U)_" - "_$P(DGER(I),U,2)
"RTN","DGPTAEE",62,0)
 D TRTCHK
"RTN","DGPTAEE",63,0)
 I '$G(DGPTERR) S VALMCNT=VALMCNT+1,$P(^TMP("AD",$J,VALMCNT,0),"=",80)=""
"RTN","DGPTAEE",64,0)
 K DGPTERR
"RTN","DGPTAEE",65,0)
 Q
"RTN","DGPTAEE",66,0)
 ;
"RTN","DGPTAEE",67,0)
 ;-- This data is used to determine where in the output string a '#'
"RTN","DGPTAEE",68,0)
 ;   should be printed. The format of the each datum is:
"RTN","DGPTAEE",69,0)
 ;      <position in transmission string>:<position in display string>
"RTN","DGPTAEE",70,0)
 ;  first ";;" line represents ICD9 layout
"RTN","DGPTAEE",71,0)
 ; second" ;;" line represents ICD10 layout
"RTN","DGPTAEE",72,0)
ER101 ;-- 101 error position string
"RTN","DGPTAEE",73,0)
 ;;1:1^2:8^3:18^4:32^5:47^6:52^7:55^8:62^9:66^10:70^11:73^12:1^13:15^14:20^15:24^16:27^17:34^18:41^19:44^20:52^^^^24:71
"RTN","DGPTAEE",74,0)
 ;;1:1^2:8^3:18^4:32^5:47^6:52^7:55^8:62^9:66^10:70^11:73^12:1^13:15^14:20^15:24^16:27^17:34^18:41^19:44^20:52^^^^24:71
"RTN","DGPTAEE",75,0)
 ;
"RTN","DGPTAEE",76,0)
ER501 ;-- 501 error position string
"RTN","DGPTAEE",77,0)
 ;;1:1^2:8^3:18^4:32^5:47^6:56^7:60^8:64^9:69^10:1^11:9^12:17^13:25^14:33^15:1^16:14^17:23^18:27^19:31^20:34^21:37^22:42^23:45:^24:50^
"RTN","DGPTAEE",78,0)
 ;;1:1^2:8^3:18^4:32^5:47^6:56^7:60^8:64^9:69^10:1^11:10^12:20^13:30^14:40^15:1^16:10^17:20^18:30^19:40^20:1^21:20^22:30^23:30^24:40^25:1^26:20^27:30^28:30^29:40^30:1^31:20^32:30^33:30^34:40
"RTN","DGPTAEE",79,0)
 ;
"RTN","DGPTAEE",80,0)
ER401 ;-- 401 error position string
"RTN","DGPTAEE",81,0)
 ;;1:1^2:8^3:18^4:32^5:48^6:53^7:59^8:64^9:1^10:9^11:17^12:25^13:33^14:42^15:52^
"RTN","DGPTAEE",82,0)
 ;;1:1^2:8^3:18^4:32^5:48^6:53^7:59^8:64^9:1^10:9^11:17^12:25^13:33^14:1^15:9^16:17^17:25^18:33^19:1^20:9^21:17^22:25^23:33^24:1^25:9^26:17^27:25^28:33^29:1^30:9^31:17^32:25^33:33
"RTN","DGPTAEE",83,0)
 ;
"RTN","DGPTAEE",84,0)
ER601 ;-- 601 error position string
"RTN","DGPTAEE",85,0)
 ;;1:1^2:10^3:18^4:32^5:47^6:52^7:57^8:1^9:9^10:17^11:25^12:33^
"RTN","DGPTAEE",86,0)
 ;;1:1^2:10^3:18^4:32^5:47^6:52^7:57^8:1^9:9^10:17^11:25^12:33^13:1^14:9^15:17^16:25^17:33^18:1^19:9^20:17^21:25^22:33^23:1^24:9^25:17^26:25^27:33^28:1^29:9^30:17^31:25^32:33
"RTN","DGPTAEE",87,0)
 ;
"RTN","DGPTAEE",88,0)
ER701 ;-- 701 error position string
"RTN","DGPTAEE",89,0)
 ;;1:1^2:8^3:18^4:32^5:46^6:51^7:56^8:62^9:69^10:75^11:1^12:8^13:12^14:16^15:23^16:28^17:39^18:48^19:52^20:55^21:58^22:63^23:66^
"RTN","DGPTAEE",90,0)
 ;;1:1^2:8^3:18^4:32^5:46^6:51^7:56^8:62^9:69^10:75^11:1^12:8^13:12^14:16^15:23^16:28^17:39^18:48^19:52^20:55^21:58^22:63^23:66^24:1^25:4^26:8^27:12^28:16^29:20^30:25^31:30^32:50^33:55
"RTN","DGPTAEE",91,0)
 ;
"RTN","DGPTAEE",92,0)
ER702 ;-- 702 error position string
"RTN","DGPTAEE",93,0)
 ;;1:1^2:8^3:18^4:32^5:1^6:9^7:17^8:25^9:33^10:41^11:49^12:57^13:65^
"RTN","DGPTAEE",94,0)
 ;;1:1^2:8^3:18^4:32^5:1^6:9^7:17^8:25^9:33^10:1^11:9^12:17^13:25^14:33^15:1^16:9^17:17^18:25^19:33^20:1^21:9^22:17^23:25^24:33^25:1^26:9^27:17^28:25^29:33
"RTN","DGPTAEE",95,0)
 ;
"RTN","DGPTAEE",96,0)
TRTCHK ;-- Check for treating spec error flag and print error message if flag
"RTN","DGPTAEE",97,0)
 ;-- exists.
"RTN","DGPTAEE",98,0)
 N I,X
"RTN","DGPTAEE",99,0)
 S I=0,I=$O(DGPTSER(I)) G:'I TRTCHKQ
"RTN","DGPTAEE",100,0)
 I $G(DGPTSER(+I))=1 D
"RTN","DGPTAEE",101,0)
 . S X="*** Bed section code is not active for the date/time period listed. ***"
"RTN","DGPTAEE",102,0)
 . S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X,DGPTERR=1
"RTN","DGPTAEE",103,0)
TRTCHKQ K DGPTSER(+I)
"RTN","DGPTAEE",104,0)
 Q
"RTN","DGPTAEE1")
0^54^B39125544
"RTN","DGPTAEE1",1,0)
DGPTAEE1 ;ALB/MTC,HIOFO/FT - Austin Edits EAL Listing Continued ;12/4/14 3:05pm
"RTN","DGPTAEE1",2,0)
 ;;5.3;Registration;**338,565,678,729,664,884**;Aug 13, 1993;Build 31
"RTN","DGPTAEE1",3,0)
 ;
"RTN","DGPTAEE1",4,0)
 ;no external references
"RTN","DGPTAEE1",5,0)
 ;
"RTN","DGPTAEE1",6,0)
 ;DGPTLINE=1 is icd9 layout
"RTN","DGPTAEE1",7,0)
 ;DGPTLINE=2 is icd10 layout
"RTN","DGPTAEE1",8,0)
H101(REC) ;-- 101 header //patch 850 made the needed changes for 101 so 884 did have to modify this subrtn. ft 12/2/14
"RTN","DGPTAEE1",9,0)
 ; INPUT : REC - Node that contains the error
"RTN","DGPTAEE1",10,0)
 N I,X,X1,X2
"RTN","DGPTAEE1",11,0)
 S X="ADM    SSN       ADM-DATE-TIME LAST-NAME     INIT SOU FROM  SOP POW MS SX"
"RTN","DGPTAEE1",12,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",13,0)
 S X=$E(REC,1,4)_"  "_$E(REC,5,14)_SP_$E(REC,15,16)_SP_$E(REC,17,18)_SP_$E(REC,19,20)_SP_$E(REC,21,24)_SP_$E(REC,31,42)_"   "_$E(REC,43,44)_"   "_$E(REC,45,46)_SP_$E(REC,47,52)_SP_$E(REC,53)_"   "_$E(REC,54)_"   "_$E(REC,55)_"  "_$E(REC,56)
"RTN","DGPTAEE1",14,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",15,0)
 S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")<12 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE1",16,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",17,0)
 S X="BIRTHDATE    POS AGO ION ST-CNTY  ZIP   MT INCOME MST CV CV-END SHAD ERI CNTRY"
"RTN","DGPTAEE1",18,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",19,0)
 S X=$E(REC,57,58)_SP_$E(REC,59,60)_SP_$E(REC,61,64)_"   "_$E(REC,65,66)_"    "_$E(REC,67)_"   "_$E(REC,68)_"  "_$E(REC,69,73)_"  "_$E(REC,74,78)_"  "_$E(REC,79,80)_SP_$E(REC,81,86)_"  "_$E(REC,87)_"   "_$E(REC,88)_" "_$E(REC,89,94)
"RTN","DGPTAEE1",20,0)
 S X=X_"    "_$E(REC,95)_"  "_$E(REC,96)_"   "_$E(REC,97,99)
"RTN","DGPTAEE1",21,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",22,0)
 S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")>11 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE1",23,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",24,0)
 D WRER^DGPTAEE
"RTN","DGPTAEE1",25,0)
 Q
"RTN","DGPTAEE1",26,0)
 ;
"RTN","DGPTAEE1",27,0)
H401(REC) ;-- 401 header
"RTN","DGPTAEE1",28,0)
 ; INPUT : REC - Node that contains the error
"RTN","DGPTAEE1",29,0)
 N X,X1,X2
"RTN","DGPTAEE1",30,0)
 S X="SURG   SSN       ADM-DATE-TIME SURG-DATE-TIME  SPEC CATEG TECH SOP"
"RTN","DGPTAEE1",31,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",32,0)
 S X=$E(REC,1,4)_"  "_$E(REC,5,14)_SP_$E(REC,15,16)_SP_$E(REC,17,18)_SP_$E(REC,19,20)_SP_$E(REC,21,24)_"  "_$E(REC,31,32)_SP_$E(REC,33,34)_SP_$E(REC,35,36)_SP_$E(REC,37,40)_"   "
"RTN","DGPTAEE1",33,0)
 S X=X_$E(REC,41,42)_"  "_$E(REC,43)_"   "_$E(REC,44)_"   "_$E(REC,45)_"   "_$E(REC,46)
"RTN","DGPTAEE1",34,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",35,0)
 S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")<9 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE1",36,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",37,0)
 I DGPTLINE=1 D  ;icd9 layout.  ft  12/2/14
"RTN","DGPTAEE1",38,0)
 .S X="------------SURGICAL CODES-------------  PHY SSN   TRNSPLNT"
"RTN","DGPTAEE1",39,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",40,0)
 .S X=$E(REC,47,53)_SP_$E(REC,54,60)_SP_$E(REC,61,67)_SP_$E(REC,68,74)_SP_$E(REC,75,81)_"  "_$E(REC,82,90)_"     "_$E(REC,91)
"RTN","DGPTAEE1",41,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",42,0)
 .S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")>8 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE1",43,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",44,0)
 I DGPTLINE=2 D  ;icd10 layout.  ft  12/2/14
"RTN","DGPTAEE1",45,0)
 .S X="------------SURGICAL CODES-------------"
"RTN","DGPTAEE1",46,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",47,0)
 .S X=$E(REC,47,53)_SP_$E(REC,55,61)_SP_$E(REC,63,69)_SP_$E(REC,71,77)_SP_$E(REC,79,85)
"RTN","DGPTAEE1",48,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",49,0)
 .S X=$E(REC,87,93)_SP_$E(REC,95,101)_SP_$E(REC,103,109)_SP_$E(REC,111,117)_SP_$E(REC,119,125)
"RTN","DGPTAEE1",50,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",51,0)
 .S X=$E(REC,127,133)_SP_$E(REC,135,141)_SP_$E(REC,143,149)_SP_$E(REC,151,157)_SP_$E(REC,159,167)
"RTN","DGPTAEE1",52,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",53,0)
 .S X=$E(REC,167,173)_SP_$E(REC,175,181)_SP_$E(REC,183,189)_SP_$E(REC,191,197)_SP_$E(REC,199,205)
"RTN","DGPTAEE1",54,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",55,0)
 .S X=$E(REC,207,213)_SP_$E(REC,215,221)_SP_$E(REC,223,229)_SP_$E(REC,231,237)_SP_$E(REC,239,246)
"RTN","DGPTAEE1",56,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",57,0)
 .S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")>8 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE1",58,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",59,0)
 D WRER^DGPTAEE
"RTN","DGPTAEE1",60,0)
 Q
"RTN","DGPTAEE1",61,0)
 ;
"RTN","DGPTAEE1",62,0)
H501(REC) ;-- 501 header
"RTN","DGPTAEE1",63,0)
 ; INPUT : REC - Node that contains the error
"RTN","DGPTAEE1",64,0)
 N X,X1,X2
"RTN","DGPTAEE1",65,0)
 S X="DIAG   SSN       ADM-DATE-TIME MOVE DATE-TIME MPCR CODE SPC LVE PASS SCI"
"RTN","DGPTAEE1",66,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",67,0)
 S X=$E(REC,1,4)_"  "_$E(REC,5,14)_SP_$E(REC,15,16)_SP_$E(REC,17,18)_SP_$E(REC,19,20)_SP_$E(REC,21,24)_SP_$E(REC,31,32)_SP_$E(REC,33,34)_SP_$E(REC,35,36)_SP_$E(REC,37,40)_SP
"RTN","DGPTAEE1",68,0)
 S X=X_"  "_$E(REC,41,46)_"  "_$E(REC,47,48)_"  "_$E(REC,49,51)_"  "_$E(REC,52,54)_"  "_$E(REC,55)
"RTN","DGPTAEE1",69,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",70,0)
 S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")<10 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE1",71,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",72,0)
 I DGPTLINE=1 D  ;icd9 layout. ft  12/2/14
"RTN","DGPTAEE1",73,0)
 .S X="-----------DIAGNOSTIC CODES------------"
"RTN","DGPTAEE1",74,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",75,0)
 .S X=$E(REC,56,62)_SP_$E(REC,63,69)_SP_$E(REC,70,76)_SP_$E(REC,77,83)_SP_$E(REC,84,90)
"RTN","DGPTAEE1",76,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",77,0)
 .S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")=10 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE1",78,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",79,0)
 .S X="SSN ATTY PHY PHY LOC  CDE BSI LI SI DRUG A4 A5   SC AO IR SWAC"
"RTN","DGPTAEE1",80,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",81,0)
 .S X=$E(REC,91,99)_"    "_$E(REC,100,105)_"    "_$E(REC,106,107)_"  "_$E(REC,108)_"   "_$E(REC,109)_"  "_$E(REC,110)_SP_$E(REC,111,114)_"  "_$E(REC,115)_SP_$E(REC,116,119)_"  "_$E(REC,120)_"  "_$E(REC,121)_"  "_$E(REC,122)_"  "_$E(REC,123)
"RTN","DGPTAEE1",82,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",83,0)
 .S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")>10 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE1",84,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",85,0)
 I DGPTLINE=2 D  ;icd10 layout. ft  12/2/14
"RTN","DGPTAEE1",86,0)
 .S X="-----------DIAGNOSTIC CODES------------"
"RTN","DGPTAEE1",87,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",88,0)
 .S X=$E(REC,56,63)_SP_$E(REC,64,71)_SP_$E(REC,72,79)_SP_$E(REC,80,87)_SP_$E(REC,88,95)
"RTN","DGPTAEE1",89,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",90,0)
 .S X=$E(REC,96,103)_SP_$E(REC,104,111)_SP_$E(REC,112,119)_SP_$E(REC,120,127)_SP_$E(REC,128,135)
"RTN","DGPTAEE1",91,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",92,0)
 .S X=$E(REC,136,143)_SP_$E(REC,144,151)_SP_$E(REC,152,159)_SP_$E(REC,160,167)_SP_$E(REC,168,175)
"RTN","DGPTAEE1",93,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",94,0)
 .S X=$E(REC,176,183)_SP_$E(REC,184,191)_SP_$E(REC,192,199)_SP_$E(REC,200,207)_SP_$E(REC,208,215)
"RTN","DGPTAEE1",95,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",96,0)
 .S X=$E(REC,216,223)_SP_$E(REC,224,231)_SP_$E(REC,232,239)_SP_$E(REC,240,247)_SP_$E(REC,248,255)_SP_$E(REC,265,270)_SP_$E(REC,271,272)_SP_$E(REC,273)
"RTN","DGPTAEE1",97,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",98,0)
 .S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")>9 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE1",99,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",100,0)
 D WRER^DGPTAEE
"RTN","DGPTAEE1",101,0)
 Q
"RTN","DGPTAEE1",102,0)
 ;
"RTN","DGPTAEE2")
0^55^B30765062
"RTN","DGPTAEE2",1,0)
DGPTAEE2 ;ALB/MTC,HIOFO/FT - Austin Edits EAL Report Continued ;12/17/14 11:09am
"RTN","DGPTAEE2",2,0)
 ;;5.3;Registration;**8,338,415,565,729,664,884**;Aug 13, 1993;Build 31
"RTN","DGPTAEE2",3,0)
 ;
"RTN","DGPTAEE2",4,0)
 ;no external references
"RTN","DGPTAEE2",5,0)
 ;
"RTN","DGPTAEE2",6,0)
 ;DGPTLINE=1 is icd9 layout
"RTN","DGPTAEE2",7,0)
 ;DGPTLINE=2 is icd10 layout
"RTN","DGPTAEE2",8,0)
H601(REC) ;-- 601 error processing
"RTN","DGPTAEE2",9,0)
 ; INPUT : REC - Record that contains the errors
"RTN","DGPTAEE2",10,0)
 N X,X1
"RTN","DGPTAEE2",11,0)
 S X="PROC     SSN     ADM-DATE-TIME PROC-DATE-TIME SPC  TYPE TRT"
"RTN","DGPTAEE2",12,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",13,0)
 S X=$E(REC,1,4)_"  "_$E(REC,5,14)_SP_$E(REC,15,16)_SP_$E(REC,17,18)_SP_$E(REC,19,20)_SP_$E(REC,21,24)_SP_$E(REC,31,32)_SP_$E(REC,33,34)_SP_$E(REC,35,36)_SP_$E(REC,37,40)_"  "
"RTN","DGPTAEE2",14,0)
 S X=X_$E(REC,41,42)_"     "_$E(REC,43)_"  "_$E(REC,44,46)
"RTN","DGPTAEE2",15,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",16,0)
 S X="-----------PROCEDURE CODES-------------"
"RTN","DGPTAEE2",17,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",18,0)
 I DGPTLINE=1 D  ;icd9 layout. ft  12/2/14
"RTN","DGPTAEE2",19,0)
 .S X=$E(REC,47,53)_SP_$E(REC,54,60)_SP_$E(REC,61,67)_SP_$E(REC,68,74)_SP_$E(REC,75,81)
"RTN","DGPTAEE2",20,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",21,0)
 I DGPTLINE=2 D  ;icd10 layout. ft  11/19/14
"RTN","DGPTAEE2",22,0)
 .S X=$E(REC,47,53)_SP_$E(REC,55,61)_SP_$E(REC,63,69)_SP_$E(REC,71,77)_SP_$E(REC,79,85)
"RTN","DGPTAEE2",23,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",24,0)
 .S X=$E(REC,87,93)_SP_$E(REC,95,101)_SP_$E(REC,103,109)_SP_$E(REC,111,117)_SP_$E(REC,119,125)
"RTN","DGPTAEE2",25,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",26,0)
 .S X=$E(REC,127,133)_SP_$E(REC,135,141)_SP_$E(REC,143,149)_SP_$E(REC,151,157)_SP_$E(REC,159,165)
"RTN","DGPTAEE2",27,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",28,0)
 .S X=$E(REC,167,173)_SP_$E(REC,175,181)_SP_$E(REC,183,189)_SP_$E(REC,191,197)_SP_$E(REC,199,205)
"RTN","DGPTAEE2",29,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",30,0)
 .S X=$E(REC,207,213)_SP_$E(REC,215,221)_SP_$E(REC,223,229)_SP_$E(REC,231,237)_SP_$E(REC,239,245)
"RTN","DGPTAEE2",31,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",32,0)
 D WRER^DGPTAEE
"RTN","DGPTAEE2",33,0)
 Q
"RTN","DGPTAEE2",34,0)
 ;
"RTN","DGPTAEE2",35,0)
H701(REC) ;-- 701 header
"RTN","DGPTAEE2",36,0)
 ; INPUT : REC - Record that contains the errors
"RTN","DGPTAEE2",37,0)
 N X,X1,X2
"RTN","DGPTAEE2",38,0)
 S X="DISP   SSN       ADM-DATE-TIME DIS-DATE-TIME SPC  TYPE OP/RX VA/AUS PLACE RECVNG"
"RTN","DGPTAEE2",39,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",40,0)
 S X=$E(REC,1,4)_"  "_$E(REC,5,14)_SP_$E(REC,15,16)_SP_$E(REC,17,18)_SP_$E(REC,19,20)_SP_$E(REC,21,24)_SP_$E(REC,31,32)_SP_$E(REC,33,34)_SP_$E(REC,35,36)_SP_$E(REC,37,40)_SP
"RTN","DGPTAEE2",41,0)
 S X=X_$E(REC,41,42)_"    "_$E(REC,43)_"     "_$E(REC,44)_"     "_$E(REC,45)_"      "_$E(REC,46)_"   "_$E(REC,47,52)
"RTN","DGPTAEE2",42,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",43,0)
 S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")<11 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE2",44,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",45,0)
 I DGPTLINE=1 D
"RTN","DGPTAEE2",46,0)
 .S X="ASIH XXXX C/P  DXLS   ODX  MPCR CODE   PHY LOC  %SC LI SI DRUG A4 A5"
"RTN","DGPTAEE2",47,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",48,0)
 .S X=$E(REC,53,55)_"    "_$E(REC,56)_"   "_$E(REC,57)_"   "_$E(REC,58,64)_"  "_$E(REC,65)_"  "_$E(REC,66,71)_"       "_$E(REC,72,73)_"     "_$E(REC,74,76)_"  "_$E(REC,77)_"  "_$E(REC,78)_SP_$E(REC,79,82)_"  "_$E(REC,83)_SP_$E(REC,84,87)
"RTN","DGPTAEE2",49,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",50,0)
 .S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")>10 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE2",51,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",52,0)
 I DGPTLINE=2 D
"RTN","DGPTAEE2",53,0)
 .S X="ASIH RACE C/P  DXLS   ODX  MPCR CODE   PHY LOC  %SC LI SI DRUG A4 A5"
"RTN","DGPTAEE2",54,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",55,0)
 .S X=$E(REC,53,55)_"    "_$E(REC,56)_"   "_$E(REC,57)_"   "_$E(REC,58,65)_"  "_$E(REC,66)_"  "_$E(REC,67,72)_"       "_$E(REC,73,74)_"     "_$E(REC,75,77)_"  "_$E(REC,78)_"  "_$E(REC,79)_SP_$E(REC,80,83)_"  "_$E(REC,84)_SP_$E(REC,85,88)
"RTN","DGPTAEE2",56,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",57,0)
 .S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")>10,$P(I,":")<24 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE2",58,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",59,0)
 .S X="SC AO IR SWAC MST HNC ETH RACE         CV SHAD"
"RTN","DGPTAEE2",60,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",61,0)
 .S X=$E(REC,89)_"  "_$E(REC,90)_"  "_$E(REC,91)_"  "_$E(REC,92)_"     "_$E(REC,93)_"   "_$E(REC,94)_"  "_$E(REC,95,96)_"  "_$E(REC,99,108)_"  "_$E(REC,109)_"  "_$E(REC,110)
"RTN","DGPTAEE2",62,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",63,0)
 D WRER^DGPTAEE
"RTN","DGPTAEE2",64,0)
 Q
"RTN","DGPTAEE2",65,0)
 ;
"RTN","DGPTAEE2",66,0)
H702(REC) ;-- 702 header
"RTN","DGPTAEE2",67,0)
 ; INPUT : REC - Record that contains the errors
"RTN","DGPTAEE2",68,0)
 N X,X1
"RTN","DGPTAEE2",69,0)
 S X="ADM    SSN       ADM-DATE-TIME DIS-DATE-TIME"
"RTN","DGPTAEE2",70,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",71,0)
 S X=$E(REC,1,4)_"  "_$E(REC,5,14)_SP_$E(REC,15,16)_SP_$E(REC,17,18)_SP_$E(REC,19,20)_SP_$E(REC,21,24)_SP_$E(REC,31,32)_SP_$E(REC,33,34)_SP_$E(REC,35,36)_SP_$E(REC,37,40)
"RTN","DGPTAEE2",72,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",73,0)
 S X="----------------------------DIAGNOSTIC CODES----------------------------"
"RTN","DGPTAEE2",74,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",75,0)
 I DGPTLINE=1 D  ;icd9 layout. ft  11/19/14
"RTN","DGPTAEE2",76,0)
 .S X=$E(REC,41,47)_SP_$E(REC,48,54)_SP_$E(REC,55,61)_SP_$E(REC,62,68)_SP_$E(REC,69,75)_SP_$E(REC,76,82)_SP_$E(REC,83,89)_SP_$E(REC,90,96)_SP_$E(REC,97,103)
"RTN","DGPTAEE2",77,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",78,0)
 I DGPTLINE=2 D  ;icd10 layout. ft  11/19/14
"RTN","DGPTAEE2",79,0)
 .S X=$E(REC,41,48)_SP_$E(REC,49,56)_SP_$E(REC,57,64)_SP_$E(REC,65,72)_SP_$E(REC,73,80)
"RTN","DGPTAEE2",80,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",81,0)
 .S X=$E(REC,81,88)_SP_$E(REC,89,96)_SP_$E(REC,97,104)_SP_$E(REC,105,112)_SP_$E(REC,113,120)
"RTN","DGPTAEE2",82,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",83,0)
 .S X=$E(REC,121,128)_SP_$E(REC,129,136)_SP_$E(REC,137,144)_SP_$E(REC,145,152)_SP_$E(REC,153,160)
"RTN","DGPTAEE2",84,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",85,0)
 .S X=$E(REC,161,168)_SP_$E(REC,169,176)_SP_$E(REC,177,184)_SP_$E(REC,185,192)_SP_$E(REC,193,200)
"RTN","DGPTAEE2",86,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",87,0)
 .S X=$E(REC,201,208)_SP_$E(REC,209,216)_SP_$E(REC,217,224)_SP_$E(REC,225,232)
"RTN","DGPTAEE2",88,0)
 .S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",89,0)
 D WRER^DGPTAEE
"RTN","DGPTAEE2",90,0)
 Q
"RTN","DGPTAEE2",91,0)
 ;
"RTN","DGPTC1")
0^63^B29467995
"RTN","DGPTC1",1,0)
DGPTC1 ;ALN/MJK/PLT - Census Record Processing ;4/14/15 4:14pm
"RTN","DGPTC1",2,0)
 ;;5.3;Registration;**37,413,643,701,850,905,884**;Aug 13, 1993;Build 31
"RTN","DGPTC1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPTC1",4,0)
 ;
"RTN","DGPTC1",5,0)
CEN ; -- determine if PTF rec is current Census rec
"RTN","DGPTC1",6,0)
 ; input: PTF   := ptf rec #
"RTN","DGPTC1",7,0)
 ;     DGPMCA   := corres. adm           (non-fee)
"RTN","DGPTC1",8,0)
 ;     DGPMAN   := 0th node of corrs adm     "
"RTN","DGPTC1",9,0)
 ;output: DGCI  := census rec #
"RTN","DGPTC1",10,0)
 ;        DGCST := census rec status
"RTN","DGPTC1",11,0)
 ;        DGCN  := census date entry to 45.86
"RTN","DGPTC1",12,0)
 ;
"RTN","DGPTC1",13,0)
 K DGCST,DGCI,DGCN,DGCN0,DGFEE
"RTN","DGPTC1",14,0)
 S DGFEE=0
"RTN","DGPTC1",15,0)
 G CENQ:'$D(^DGPT(PTF,0)) N DFN S DGPTF0=^(0),DFN=+DGPTF0
"RTN","DGPTC1",16,0)
 D CEN^DGPTUTL I DGCN0=""!(DT'>DGCN0) K DGCN G CENQ
"RTN","DGPTC1",17,0)
 S DGT=$P(DGCN0,U)_".9" I '$P(DGPTF0,U,4) D WARD I 'Y K DGCN G CENQ
"RTN","DGPTC1",18,0)
 ;if Fee Basis quit if admit > census date or admit < census date if disch
"RTN","DGPTC1",19,0)
 I $P(DGPTF0,U,4)=1,$P(DGPTF0,U,2)>DGT G CENQ
"RTN","DGPTC1",20,0)
 I $P(DGPTF0,U,4)=1,+$P($G(^DGPT(PTF,70)),U),$P(DGPTF0,U,2)<DGT G CENQ
"RTN","DGPTC1",21,0)
 I $P(DGPTF0,U,4)=1 D FEE G CENQ
"RTN","DGPTC1",22,0)
 S DGCST=0,DGCI=""
"RTN","DGPTC1",23,0)
 F  S DGCI=$O(^DGPT("ACENSUS",PTF,DGCI)) Q:'DGCI  I $D(^DGPT(DGCI,0)),$P(^(0),U,13)=DGCN S DGCST=$P(^(0),U,6) Q:DGCST'=0  D  Q
"RTN","DGPTC1",24,0)
 .S DGCI=$$RDGCI(DGCI),DGCST=1
"RTN","DGPTC1",25,0)
CENQ K DGCN0,DGA1,DGT,X,DGPTF0,DGFEE Q
"RTN","DGPTC1",26,0)
 ;
"RTN","DGPTC1",27,0)
KVAR K DGCN,DGCI,DGCST Q
"RTN","DGPTC1",28,0)
 ;
"RTN","DGPTC1",29,0)
FEE ;
"RTN","DGPTC1",30,0)
 S DGCST=0,DGCI="",DGFEE=1
"RTN","DGPTC1",31,0)
 F  S DGCI=$O(^DGPT("ACENSUS",PTF,DGCI)) Q:'DGCI  I $D(^DGPT(DGCI,0)),$P(^(0),U,13)=DGCN S DGCST=$P(^(0),U,6) Q:DGCST'=0  D  Q
"RTN","DGPTC1",32,0)
 . S DGCI=$$RDGCI(DGCI),DGCST=+$P(^DGPT(DGCI,0),U,6)
"RTN","DGPTC1",33,0)
 Q
"RTN","DGPTC1",34,0)
ACT ; -- census actions with input of X
"RTN","DGPTC1",35,0)
 Q:'$D(X)
"RTN","DGPTC1",36,0)
 S Y=2 D RTY^DGPTUTL
"RTN","DGPTC1",37,0)
 I X="L" D CLS G ACTQ
"RTN","DGPTC1",38,0)
 I X="P" D OPEN G ACTQ
"RTN","DGPTC1",39,0)
 I X="E" S DGPTFLE=1,DGPTIFN=DGCI D EN^DGPTFREL K DGRTY,DGRTY0 G ^DGPTF
"RTN","DGPTC1",40,0)
ACTQ K DGRTY,DGRTY0 G EN1^DGPTF4
"RTN","DGPTC1",41,0)
 ;
"RTN","DGPTC1",42,0)
RDGCI(DGCI) ;-- eliminating 'OPEN' status census record and duplicates
"RTN","DGPTC1",43,0)
 S DGDL=DGCI,DGCIR="" D
"RTN","DGPTC1",44,0)
 .F  S DGCIR=$O(^DGPT("ACENSUS",PTF,DGCIR),-1) Q:DGCIR<DGDL  D
"RTN","DGPTC1",45,0)
 ..I $D(^DGPT(DGCIR,0)),$P(^(0),U,13)=DGCN S:DGCI=DGDL DGCI=DGCIR D
"RTN","DGPTC1",46,0)
 ...I DGCIR<DGCI S DGPTIFN=DGCIR,DGRTY=2 D KDGP^DGPTFDEL,KDGPT^DGPTFDEL
"RTN","DGPTC1",47,0)
 Q DGCI
"RTN","DGPTC1",48,0)
 ;
"RTN","DGPTC1",49,0)
CLS ;
"RTN","DGPTC1",50,0)
 S DGFEE=0
"RTN","DGPTC1",51,0)
 I $P(^DGPT(DGPTF,0),U,4)'=1 W !,"Updating TRANSFER DRGs..." S DGADM=$P(^DGPT(PTF,0),U,2) D SUDO1^DGPTSUDO
"RTN","DGPTC1",52,0)
 S J=PTF,DGERR=-1,T2=^DG(45.86,DGCN,0)+.9,T1=$P(^(0),U,5)
"RTN","DGPTC1",53,0)
 S DGPTFMTX=DGPTFMT S Y=T2 D FMT^DGPTUTL
"RTN","DGPTC1",54,0)
 W !,"Performing edit checks..."
"RTN","DGPTC1",55,0)
 ;-- init for Austin Edits
"RTN","DGPTC1",56,0)
 K ^TMP("AEDIT",$J),^TMP("AERROR",$J) S DGACNT=0
"RTN","DGPTC1",57,0)
 ;
"RTN","DGPTC1",58,0)
 D LOG^DGPTFTR1:DGPTFMT=1,LOG^DGPTR1:DGPTFMT=2,LOG^DGPTR1:DGPTFMT=3,COM1^DGPTFTR
"RTN","DGPTC1",59,0)
 K DGLOGIC,T1,T2,DGCCO D LO^DGUTL
"RTN","DGPTC1",60,0)
 D VERCHK^DGPTRI3(DGPTF) I DGERR>0 D HANG^DGPTUTL K DGERR G CLSQ
"RTN","DGPTC1",61,0)
 I DGERR>0 K DGERR D ^DGPTF2 G CLSQ
"RTN","DGPTC1",62,0)
 ;-- do austin edits
"RTN","DGPTC1",63,0)
 ;
"RTN","DGPTC1",64,0)
 D ^DGPTAE I DGERR>0 K DGERR D ^DGPTF2 G CLSQ
"RTN","DGPTC1",65,0)
 K DGERR,^TMP("AEDIT",$J),DGACNT
"RTN","DGPTC1",66,0)
 I $P(^DGPT(PTF,0),U,4) S DGFEE=1 D FEE1 G CLSQ:'DGCI
"RTN","DGPTC1",67,0)
 I $P(^DGPT(PTF,0),U,4)'=1 D CREATE G CLSQ:'DGCI
"RTN","DGPTC1",68,0)
 S DR="7////"_DUZ_";8///T",DA=DGCI,DIE="^DGPT(" D ^DIE K DIE,DR
"RTN","DGPTC1",69,0)
 S (X,DINUM)=DGCI,DIC(0)="L",DIC="^DGP(45.84,",DIC("DR")="2///NOW;3////"_DUZ
"RTN","DGPTC1",70,0)
 K DD,DO D FILE^DICN K DIC,DINUM,DO
"RTN","DGPTC1",71,0)
 F I=0,.11,.52,.321,.32,57,.3 S:$D(^DPT(DFN,I)) ^DGP(45.84,DGCI,$S(I=0:10,1:I))=^DPT(DFN,I)
"RTN","DGPTC1",72,0)
 W !,"****** CENSUS CLOSED OUT ******" D HANG^DGPTUTL
"RTN","DGPTC1",73,0)
 S DGCST=1
"RTN","DGPTC1",74,0)
CLSQ S DGPTFMT=DGPTFMTX K DGPTFMTX,DGFEE Q
"RTN","DGPTC1",75,0)
 ;
"RTN","DGPTC1",76,0)
CREATE ; -- create census record
"RTN","DGPTC1",77,0)
 W !,"Creating Census Record..."
"RTN","DGPTC1",78,0)
 S Y=$P(^DGPT(PTF,0),U,2) D CREATE^DGPTFCR G CREATEQ:Y<0 S DGCI=+Y W "#",DGCI
"RTN","DGPTC1",79,0)
 S DGEND=+^DG(45.86,DGCN,0)_".2359",DGBEG=+$P(^(0),U,5)
"RTN","DGPTC1",80,0)
 S ^DGPT(DGCI,0)=$P(^DGPT(PTF,0),U,1,10)_"^2^"_PTF_"^"_DGCN,DGCSUF=$P(^(0),U,5)
"RTN","DGPTC1",81,0)
 ;S ^DGPT(DGCI,0)=$P(^DGPT(PTF,0),U,1,5)_"^1^"_$P(^DGPT(PTF,0),U,7,10)_"^2^"_PTF_"^"_DGCN,DGCSUF=$P(^(0),U,5)
"RTN","DGPTC1",82,0)
 S Y=DGEND D BS^DGPTC2 S X="",$P(X,U)=DGEND,$P(X,U,14)=Y
"RTN","DGPTC1",83,0)
 I $D(^DGPT(PTF,70)) S Y=^(70) F I=8,9,10 S $P(X,U,I)=$P(Y,U,I)
"RTN","DGPTC1",84,0)
 S ^DGPT(DGCI,70)=X D ASIH
"RTN","DGPTC1",85,0)
 ;move code after reindex
"RTN","DGPTC1",86,0)
 ;I $D(^DGPT(PTF,82)) S ^DGPT(DGCI,82)=^DGPT(PTF,82)
"RTN","DGPTC1",87,0)
 I $D(^DGPT(PTF,101)) S ^DGPT(DGCI,101)=^DGPT(PTF,101)
"RTN","DGPTC1",88,0)
 F NODE="M","P","S",535 F I=0:0 S I=$O(^DGPT(PTF,NODE,I)) Q:'I  I $D(^DGPT(PTF,NODE,I,0)) S X=^(0) D @("SET"_NODE_"^DGPTC2")
"RTN","DGPTC1",89,0)
 K DA,DIKLM S DA=DGCI,DIK="^DGPT(" D IX1^DIK
"RTN","DGPTC1",90,0)
 ;set poa data in census record after reindex
"RTN","DGPTC1",91,0)
 D POA
"RTN","DGPTC1",92,0)
CREATEQ K X,Y,DGCSUF,DGBEG,DGEND Q
"RTN","DGPTC1",93,0)
 ;
"RTN","DGPTC1",94,0)
FEE1 ; -- create census record for fee record
"RTN","DGPTC1",95,0)
 W !,"Creating Census Record..."
"RTN","DGPTC1",96,0)
 S Y=$P(^DGPT(PTF,0),U,2) D CREATE^DGPTFCR G CREATEQ:Y<0 S DGCI=+Y W "#",DGCI
"RTN","DGPTC1",97,0)
 S DGEND=+^DG(45.86,DGCN,0)_".2359",DGBEG=+$P(^(0),U,5)
"RTN","DGPTC1",98,0)
 S ^DGPT(DGCI,0)=$P(^DGPT(PTF,0),U,1,10)_"^2^"_PTF_"^"_DGCN,DGCSUF=$P(^(0),U,5)
"RTN","DGPTC1",99,0)
 I $D(^DGPT(PTF,70)) S ^DGPT(DGCI,70)=^DGPT(PTF,70)
"RTN","DGPTC1",100,0)
 I $D(^DGPT(PTF,71)) S ^DGPT(DGCI,71)=^DGPT(PTF,71)
"RTN","DGPTC1",101,0)
 S $P(^DGPT(DGCI,70),U)=DGEND
"RTN","DGPTC1",102,0)
 ;move code after reindex
"RTN","DGPTC1",103,0)
 ;I $D(^DGPT(PTF,82)) S ^DGPT(DGCI,82)=^DGPT(PTF,82)
"RTN","DGPTC1",104,0)
 I $D(^DGPT(PTF,101)) S ^DGPT(DGCI,101)=^DGPT(PTF,101)
"RTN","DGPTC1",105,0)
 F NODE="M","P","S",535 F I=0:0 S I=$O(^DGPT(PTF,NODE,I)) Q:'I  I $D(^DGPT(PTF,NODE,I,0)) S X=^(0) D @("SET"_NODE_"^DGPTC2")
"RTN","DGPTC1",106,0)
 K DA,DIKLM S DA=DGCI,DIK="^DGPT(" D IX1^DIK
"RTN","DGPTC1",107,0)
 ;set poa data in census record after reindex
"RTN","DGPTC1",108,0)
 D POA
"RTN","DGPTC1",109,0)
FEE1Q K X,Y,DGCSUF,DGBEG,DGEND Q
"RTN","DGPTC1",110,0)
 ;
"RTN","DGPTC1",111,0)
POA ;set poa data from ptf to its census record
"RTN","DGPTC1",112,0)
 N A,B
"RTN","DGPTC1",113,0)
 I $D(^DGPT(PTF,82)) S ^DGPT(DGCI,82)=$P(^DGPT(PTF,82),U,1,DGFEE>0*999+1)
"RTN","DGPTC1",114,0)
 S A=0 F  S A=$O(^DGPT(DGCI,"M",A)) QUIT:'A  I $D(^DGPT(PTF,"M",A,82)) S ^DGPT(DGCI,"M",A,82)=^DGPT(PTF,"M",A,82)
"RTN","DGPTC1",115,0)
 QUIT
"RTN","DGPTC1",116,0)
 ;
"RTN","DGPTC1",117,0)
OPEN ; -- re-open census rec by deleting
"RTN","DGPTC1",118,0)
 S DGPTIFN=DGCI D OPEN^DGPTFDEL S (DGCI,DGCST)=0
"RTN","DGPTC1",119,0)
 K DGPTIFN Q
"RTN","DGPTC1",120,0)
 ;
"RTN","DGPTC1",121,0)
WARD ; -- ward @ census d/t for an adm(even if nhcu/dom adm that is ASIH)
"RTN","DGPTC1",122,0)
 ;  input:  DGPMCA := corres adm
"RTN","DGPTC1",123,0)
 ;          DGPMAN := corres adm 0th node
"RTN","DGPTC1",124,0)
 ; output:       Y := ward ptr or null
"RTN","DGPTC1",125,0)
 ;
"RTN","DGPTC1",126,0)
 N MVT,M
"RTN","DGPTC1",127,0)
 S Y=""
"RTN","DGPTC1",128,0)
 I +DGPMAN>DGT Q
"RTN","DGPTC1",129,0)
 I $D(^DGPM(+$P(DGPMAN,U,17),0)),+^(0)<DGT Q
"RTN","DGPTC1",130,0)
 F %=(9999999.9999999-DGT):0 S %=$O(^DGPM("APMV",+$G(DFN),+$G(DGPMCA),%)) Q:'%  D
"RTN","DGPTC1",131,0)
 . F MVT=0:0 S MVT=$O(^DGPM("APMV",$G(DFN),$G(DGPMCA),%,MVT)) Q:'MVT  D
"RTN","DGPTC1",132,0)
 .. I $D(^DGPM(MVT,0)) S M=^(0) D
"RTN","DGPTC1",133,0)
 ... I "^13^43^44^45^"'[(U_$P(M,U,18)_U),$D(^DIC(42,+$P(M,U,6),0)) S Y=+$P(M,U,6),%=9999999.9999999
"RTN","DGPTC1",134,0)
 ... QUIT
"RTN","DGPTC1",135,0)
 .. QUIT
"RTN","DGPTC1",136,0)
 . QUIT
"RTN","DGPTC1",137,0)
 QUIT
"RTN","DGPTC1",138,0)
 ;
"RTN","DGPTC1",139,0)
ASIH ; -- calc asih days
"RTN","DGPTC1",140,0)
 N DGADM,DGREC,DGBDT,DGEDT,DGMVTP
"RTN","DGPTC1",141,0)
 S X1=DGBEG,X2=-1 D C^%DTC S DGBDT=X
"RTN","DGPTC1",142,0)
 S X1=$P(DGEND,"."),X2=1 D C^%DTC S DGEDT=X
"RTN","DGPTC1",143,0)
 S DGADM=$P(^DGPT(DGCI,0),U,2) D ASIH^DGUTL2
"RTN","DGPTC1",144,0)
 S $P(^DGPT(DGCI,70),U,8)=DGREC
"RTN","DGPTC1",145,0)
 Q
"RTN","DGPTC2")
0^64^B12393502
"RTN","DGPTC2",1,0)
DGPTC2 ;ALN/MJ/PLT - Census Record Processing ;4/14/15 4:14pm
"RTN","DGPTC2",2,0)
 ;;5.3;Registration;**58,189,643,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTC2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPTC2",4,0)
 ;
"RTN","DGPTC2",5,0)
SETP ; -- P node processing
"RTN","DGPTC2",6,0)
 ;I DGCSUF="9AA"!(DGCSUF="BU") S I=999 G SETPQ
"RTN","DGPTC2",7,0)
 G SETPQ:X<DGBEG!(X>DGEND) S ^DGPT(DGCI,"P",I,0)=X
"RTN","DGPTC2",8,0)
 S:'$D(^DGPT(DGCI,"P",0)) ^(0)="^45.05D^^" S X=^(0),^(0)=$P(X,U,1,2)_"^"_I_"^"_($P(X,U,4)+1)
"RTN","DGPTC2",9,0)
 S:$D(^DGPT(PTF,"P",I,1)) ^DGPT(DGCI,"P",I,1)=^DGPT(PTF,"P",I,1)
"RTN","DGPTC2",10,0)
SETPQ Q
"RTN","DGPTC2",11,0)
 ;
"RTN","DGPTC2",12,0)
SETS ; -- S node processing
"RTN","DGPTC2",13,0)
 D GETSUFF
"RTN","DGPTC2",14,0)
 I $G(DGSFLAG) S I=999 G SETSQ
"RTN","DGPTC2",15,0)
 G SETSQ:X<DGBEG!(X>DGEND) S ^DGPT(DGCI,"S",I,0)=X
"RTN","DGPTC2",16,0)
 S:'$D(^DGPT(DGCI,"S",0)) ^(0)="^45.01D^^" S X=^(0),^(0)=$P(X,U,1,2)_"^"_I_"^"_($P(X,U,4)+1)
"RTN","DGPTC2",17,0)
 S:$D(^DGPT(PTF,"S",I,1)) ^DGPT(DGCI,"S",I,1)=^DGPT(PTF,"S",I,1)
"RTN","DGPTC2",18,0)
SETSQ K DGSFLAG Q
"RTN","DGPTC2",19,0)
 ;
"RTN","DGPTC2",20,0)
SET535 ; -- 535 node processing
"RTN","DGPTC2",21,0)
 D GETSUFF
"RTN","DGPTC2",22,0)
 I '$P(X,U,7),$G(DGSFLAG) G SET535Q
"RTN","DGPTC2",23,0)
 I $P(X,U,7) D CONE G SET535Q
"RTN","DGPTC2",24,0)
 G SET535Q:$P(X,U,10)<DGBEG!($P(X,U,10)>DGEND) S ^DGPT(DGCI,535,I,0)=X
"RTN","DGPTC2",25,0)
 S:'$D(^DGPT(DGCI,535,0)) ^(0)="^45.0535^^" S X=^(0),^(0)=$P(X,U,1,2)_"^"_I_"^"_($P(X,U,4)+1)
"RTN","DGPTC2",26,0)
SET535Q K DGSFLAG Q
"RTN","DGPTC2",27,0)
 ;
"RTN","DGPTC2",28,0)
SETM ; -- M node processing
"RTN","DGPTC2",29,0)
 D GETSUFF
"RTN","DGPTC2",30,0)
 I I'=1,$G(DGSFLAG) S I=999 G SETMQ
"RTN","DGPTC2",31,0)
 I I=1 D ONE G SETMQ
"RTN","DGPTC2",32,0)
 G SETMQ:($P(X,U,10)<DGBEG)!($P(X,U,10)>DGEND) S ^DGPT(DGCI,"M",I,0)=X
"RTN","DGPTC2",33,0)
 S:'$D(^DGPT(DGCI,"M",0)) ^(0)="^45.02AI^^" S X=^(0),^(0)=$P(X,U,1,2)_"^"_I_"^"_($P(X,U,4)+1)
"RTN","DGPTC2",34,0)
 S:$D(^DGPT(PTF,"M",I,"P")) ^DGPT(DGCI,"M",I,"P")=^DGPT(PTF,"M",I,"P")
"RTN","DGPTC2",35,0)
 S:$D(^DGPT(PTF,"M",I,81)) ^DGPT(DGCI,"M",I,81)=^DGPT(PTF,"M",I,81)
"RTN","DGPTC2",36,0)
 ;set poa data after reindexthe new census reocrd
"RTN","DGPTC2",37,0)
 ;S:$D(^DGPT(PTF,"M",I,82)) ^DGPT(DGCI,"M",I,82)=^DGPT(PTF,"M",I,82)
"RTN","DGPTC2",38,0)
SETMQ K DGSFLAG Q
"RTN","DGPTC2",39,0)
 ;
"RTN","DGPTC2",40,0)
BSEC ; -- set bed sec in 1 mvt ; input X := one node of "M" ; output := same
"RTN","DGPTC2",41,0)
 N Y
"RTN","DGPTC2",42,0)
 S Y=+$O(^DGPM("ATS",DFN,DGPMCA,9999999.9999999-DGEND)),Y=+$O(^(Y,0))
"RTN","DGPTC2",43,0)
 I Y=0 S Y=+$O(^DGPM("ATS",DFN,DGPMCA,9999999.9999999-DGEND,0)) ;aas 850 fix
"RTN","DGPTC2",44,0)
 S $P(X,U,2)=$S($D(^DIC(45.7,+Y,0)):$P(^(0),U,2),1:0)
"RTN","DGPTC2",45,0)
 Q
"RTN","DGPTC2",46,0)
 ;
"RTN","DGPTC2",47,0)
BS ; -- determine bed status on census date
"RTN","DGPTC2",48,0)
 S I=+$O(^DGPM("APMV",DFN,DGPMCA,9999999.9999999-Y)),I=+$O(^(I,0))
"RTN","DGPTC2",49,0)
 S I=$S($D(^DGPM(I,0)):$P(^(0),U,18),1:0),Y=1
"RTN","DGPTC2",50,0)
 I I S I=U_I_U,Y=$S("^43^44^13^45^"[I:4,"^1^"[I:2,"^2^3^"[I:3,1:1)
"RTN","DGPTC2",51,0)
 Q
"RTN","DGPTC2",52,0)
 ;
"RTN","DGPTC2",53,0)
CONE ;-- find last 535 before last census date
"RTN","DGPTC2",54,0)
 S DGX=$O(^DGPT(PTF,535,"AM",DGEND)) S DGX=+$S(DGX:$O(^(DGX,0)),1:$O(^DGPT(PTF,535,"ADC",1,0))) I $D(^DGPT(PTF,535,DGX,0)) S ^DGPT(DGCI,535,DGX,0)=^DGPT(PTF,535,DGX,0),$P(^DGPT(DGCI,535,DGX,0),U,10)=DGEND
"RTN","DGPTC2",55,0)
 S:'$D(^DGPT(DGCI,535,0)) ^(0)="^45.0535^^" S X=^(0),^(0)=$P(X,U,1,2)_"^"_I_"^"_($P(X,U,4)+1)
"RTN","DGPTC2",56,0)
 Q
"RTN","DGPTC2",57,0)
 ;
"RTN","DGPTC2",58,0)
ONE ; -- find last mvt before census date
"RTN","DGPTC2",59,0)
 S M=$O(^DGPT(PTF,"M","AM",DGEND)),M=$S('M:M,1:$O(^(M,0))),M=$S(M:M,1:1)
"RTN","DGPTC2",60,0)
 I M>1,$D(^DGPT(PTF,"M",M,0)) S X="1^"_$P(^(0),U,2,99)
"RTN","DGPTC2",61,0)
 I M=1,DGFEE=0 D BSEC
"RTN","DGPTC2",62,0)
 S $P(X,U,10)=DGEND,^DGPT(DGCI,"M",1,0)=X
"RTN","DGPTC2",63,0)
 S:'$D(^DGPT(DGCI,"M",0)) ^(0)="^45.02AI^^" S X=^(0),^(0)=$P(X,U,1,2)_"^1^"_($P(X,U,4)+1)
"RTN","DGPTC2",64,0)
 ;;Following code added to transmit GAF scores in Census Record
"RTN","DGPTC2",65,0)
 ;;Code added by EDS-GRR 6/4/1998
"RTN","DGPTC2",66,0)
 ;;
"RTN","DGPTC2",67,0)
 M ^DGPT(DGCI,"M",M,300)=^DGPT(PTF,"M",M,300)
"RTN","DGPTC2",68,0)
 M ^DGPT(DGCI,"M",M,81)=^DGPT(PTF,"M",M,81)
"RTN","DGPTC2",69,0)
 ;poa data copied after reindex the new census entry
"RTN","DGPTC2",70,0)
 ;M ^DGPT(DGCI,"M",M,82)=^DGPT(PTF,"M",M,82) ; move POA fields to Census
"RTN","DGPTC2",71,0)
 ;;
"RTN","DGPTC2",72,0)
 ;;End of GAF enhancement
"RTN","DGPTC2",73,0)
 ;;
"RTN","DGPTC2",74,0)
 S:$D(^DGPT(PTF,"M",M,"P")) ^DGPT(DGCI,"M",1,"P")=^("P")
"RTN","DGPTC2",75,0)
 Q
"RTN","DGPTC2",76,0)
GETSUFF ; -- get suffix if from Va Domiciliary or VA Nursing home
"RTN","DGPTC2",77,0)
 F DGSTA=30,40 D
"RTN","DGPTC2",78,0)
 .D NUMACT^DGPTSUF(DGSTA)
"RTN","DGPTC2",79,0)
 .I DGANUM>0 D
"RTN","DGPTC2",80,0)
 ..F DGCTR=1:1:DGANUM I DGCSUF=DGSUFNAM(DGCTR) S DGSFLAG=1
"RTN","DGPTC2",81,0)
 .K DGANUM,DGCTR,DGSUFNAM
"RTN","DGPTC2",82,0)
 K DGSTA
"RTN","DGPTC2",83,0)
 Q
"RTN","DGPTDDCR")
0^56^B172287843
"RTN","DGPTDDCR",1,0)
DGPTDDCR ;SLC/PKR,ALB/KCL - Routines for setting and killing Clinical Reminders Index. ;5/11/2015
"RTN","DGPTDDCR",2,0)
 ;;5.3;Registration;**478,862,884**;Aug 13, 1993;Build 31
"RTN","DGPTDDCR",3,0)
 ;=============================================
"RTN","DGPTDDCR",4,0)
 ;The structure of the Index is:
"RTN","DGPTDDCR",5,0)
 ; ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE/TIME,DAS)
"RTN","DGPTDDCR",6,0)
 ; ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE/TIME,DAS)
"RTN","DGPTDDCR",7,0)
 ;where code is the actual code and not a pointer.
"RTN","DGPTDDCR",8,0)
 ;
"RTN","DGPTDDCR",9,0)
 ;DBIA #4114 covers setting and killing of ^PXRMINDX(45).
"RTN","DGPTDDCR",10,0)
 ;DBIA #4521 covers use of INDEX entry point to build
"RTN","DGPTDDCR",11,0)
 ;the Clinical Reminders Index for the PTF (#45) file.
"RTN","DGPTDDCR",12,0)
 ;DBIA #5679 covers references to ^LEXU entry points.
"RTN","DGPTDDCR",13,0)
 ;DBIA #5747 covers references to ^ICDEX entry points.
"RTN","DGPTDDCR",14,0)
 ;
"RTN","DGPTDDCR",15,0)
 ;=============================================
"RTN","DGPTDDCR",16,0)
INDEX ;Build all the indexes for PTF.
"RTN","DGPTDDCR",17,0)
 N ADMDT,CC,CODE,CODEP,CODESYS,D1,DA,DAS,DATE,DFN,END,ENTRIES,ETEXT
"RTN","DGPTDDCR",18,0)
 N GLOBAL,IND,JND,KND,NERROR,NODE,START
"RTN","DGPTDDCR",19,0)
 N TEMP0,TEMP70,TEMP71,TEMPP,TEMPS,TENP,TEXT,TOTAL
"RTN","DGPTDDCR",20,0)
 ;DBIA #4114
"RTN","DGPTDDCR",21,0)
 ;Don't leave any old stuff around.
"RTN","DGPTDDCR",22,0)
 K ^PXRMINDX(45)
"RTN","DGPTDDCR",23,0)
 S GLOBAL=$$GET1^DID(45,"","","GLOBAL NAME")
"RTN","DGPTDDCR",24,0)
 S ENTRIES=$P(^DGPT(0),U,4)
"RTN","DGPTDDCR",25,0)
 S TENP=ENTRIES/10
"RTN","DGPTDDCR",26,0)
 S TENP=+$P(TENP,".",1)
"RTN","DGPTDDCR",27,0)
 I TENP<1 S TENP=1
"RTN","DGPTDDCR",28,0)
 D BMES^XPDUTL("Building indexes for DGPT")
"RTN","DGPTDDCR",29,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","DGPTDDCR",30,0)
 D MES^XPDUTL(TEXT)
"RTN","DGPTDDCR",31,0)
 S START=$H
"RTN","DGPTDDCR",32,0)
 ;Initialize the ICD coding system variable.
"RTN","DGPTDDCR",33,0)
 S CODESYS=""
"RTN","DGPTDDCR",34,0)
 ;DBIA #5679
"RTN","DGPTDDCR",35,0)
 F  S CODESYS=$$NXSAB^LEXU(CODESYS,0) Q:CODESYS=""  I $P($$CSYS^LEXU(CODESYS),U,4)["ICD" S CC(CODESYS)=0
"RTN","DGPTDDCR",36,0)
 S (DA,IND,NERROR)=0
"RTN","DGPTDDCR",37,0)
 F  S DA=+$O(^DGPT(DA)) Q:DA=0  D
"RTN","DGPTDDCR",38,0)
 .;Make sure the 0 node is defined.
"RTN","DGPTDDCR",39,0)
 . I '$D(^DGPT(DA,0)) D  Q
"RTN","DGPTDDCR",40,0)
 .. S ETEXT="IEN "_DA_" is missing the 0 node."
"RTN","DGPTDDCR",41,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",42,0)
 .;Save the admission date.
"RTN","DGPTDDCR",43,0)
 . S ADMDT=$P(^DGPT(DA,0),U,2)
"RTN","DGPTDDCR",44,0)
 . I ADMDT="" D  Q
"RTN","DGPTDDCR",45,0)
 .. S ETEXT="IEN "_DA_" is missing the Admission Date which is a required field."
"RTN","DGPTDDCR",46,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",47,0)
 . S IND=IND+1
"RTN","DGPTDDCR",48,0)
 . I IND#TENP=0 D
"RTN","DGPTDDCR",49,0)
 .. S TEXT="Processing entry "_IND
"RTN","DGPTDDCR",50,0)
 .. D MES^XPDUTL(TEXT)
"RTN","DGPTDDCR",51,0)
 . I IND#10000=0 W "."
"RTN","DGPTDDCR",52,0)
 . S TEMP0=$G(^DGPT(DA,0))
"RTN","DGPTDDCR",53,0)
 .;Census records are not indexed.
"RTN","DGPTDDCR",54,0)
 . I $P(TEMP0,U,11)=2 Q
"RTN","DGPTDDCR",55,0)
 . S DFN=$P(TEMP0,U,1)
"RTN","DGPTDDCR",56,0)
 . I DFN="" D  Q
"RTN","DGPTDDCR",57,0)
 .. S ETEXT=DA_" no patient"
"RTN","DGPTDDCR",58,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",59,0)
 .;Check the surgery nodes.
"RTN","DGPTDDCR",60,0)
 . S D1=0
"RTN","DGPTDDCR",61,0)
 .;loop thru surgeries on zero node
"RTN","DGPTDDCR",62,0)
 . F  S D1=+$O(^DGPT(DA,"S",D1)) Q:D1=0  D
"RTN","DGPTDDCR",63,0)
 .. S TEMPS=$G(^DGPT(DA,"S",D1,0))
"RTN","DGPTDDCR",64,0)
 .. S DATE=$P(TEMPS,U,1)
"RTN","DGPTDDCR",65,0)
 .. I DATE="" D  Q
"RTN","DGPTDDCR",66,0)
 ... S ETEXT=DA_" S node missing date"
"RTN","DGPTDDCR",67,0)
 ... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR) Q
"RTN","DGPTDDCR",68,0)
 .. S DAS=DA_";S;"_D1_";0"
"RTN","DGPTDDCR",69,0)
 .. S KND=0
"RTN","DGPTDDCR",70,0)
 .. F JND=8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27 D
"RTN","DGPTDDCR",71,0)
 ... S KND=KND+1
"RTN","DGPTDDCR",72,0)
 ... S CODEP=$P(TEMPS,U,JND)
"RTN","DGPTDDCR",73,0)
 ... I CODEP="" Q
"RTN","DGPTDDCR",74,0)
 ... S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80.1,CODEP)),U,3)
"RTN","DGPTDDCR",75,0)
 ... S CODE=$$CODEC^ICDEX(80.1,CODEP)
"RTN","DGPTDDCR",76,0)
 ... I $P(CODE,U,1)=-1 D  Q
"RTN","DGPTDDCR",77,0)
 .... S ETEXT=DAS_" has the invalid code "_CODE
"RTN","DGPTDDCR",78,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",79,0)
 ... S CC(CODESYS)=CC(CODESYS)+1
"RTN","DGPTDDCR",80,0)
 ... S NODE="S"_KND
"RTN","DGPTDDCR",81,0)
 ... S ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS)=""
"RTN","DGPTDDCR",82,0)
 ... S ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)=""
"RTN","DGPTDDCR",83,0)
 .;
"RTN","DGPTDDCR",84,0)
 .;Begin block of code for 401 Operation Code 21 field through Operation Code 25 field.
"RTN","DGPTDDCR",85,0)
 . N DGDATA,DGPIECE
"RTN","DGPTDDCR",86,0)
 . S D1=0
"RTN","DGPTDDCR",87,0)
 .;loop thru surgeries on one node
"RTN","DGPTDDCR",88,0)
 . F  S D1=+$O(^DGPT(DA,"S",D1)) Q:D1=0  D
"RTN","DGPTDDCR",89,0)
 .. S TEMPS=$G(^DGPT(DA,"S",D1,1)) ;Operation Code 21-25
"RTN","DGPTDDCR",90,0)
 .. S DGDATA=0
"RTN","DGPTDDCR",91,0)
 .. F DGPIECE=1:1:5 I +$P(TEMPS,U,DGPIECE) S DGDATA=1
"RTN","DGPTDDCR",92,0)
 .. Q:'$G(DGDATA)  ;quit if no data on the node
"RTN","DGPTDDCR",93,0)
 .. S DATE=+$G(^DGPT(DA,"S",D1,0)) ;Surgery/Procedure Date
"RTN","DGPTDDCR",94,0)
 .. I DATE=0 D  Q
"RTN","DGPTDDCR",95,0)
 ... S ETEXT=DA_" S node missing date"
"RTN","DGPTDDCR",96,0)
 ... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR) Q
"RTN","DGPTDDCR",97,0)
 .. S DAS=DA_";S;"_D1_";1"
"RTN","DGPTDDCR",98,0)
 .. S KND=20
"RTN","DGPTDDCR",99,0)
 .. F JND=1,2,3,4,5 D
"RTN","DGPTDDCR",100,0)
 ... S KND=KND+1
"RTN","DGPTDDCR",101,0)
 ... S CODEP=$P(TEMPS,U,JND)
"RTN","DGPTDDCR",102,0)
 ... I CODEP="" Q
"RTN","DGPTDDCR",103,0)
 ... S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80.1,CODEP)),U,3)
"RTN","DGPTDDCR",104,0)
 ... S CODE=$$CODEC^ICDEX(80.1,CODEP)
"RTN","DGPTDDCR",105,0)
 ... I $P(CODE,U,1)=-1 D  Q
"RTN","DGPTDDCR",106,0)
 .... S ETEXT=DAS_" has the invalid code "_CODE
"RTN","DGPTDDCR",107,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",108,0)
 ... S CC(CODESYS)=CC(CODESYS)+1
"RTN","DGPTDDCR",109,0)
 ... S NODE="S"_KND
"RTN","DGPTDDCR",110,0)
 ... S ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS)=""
"RTN","DGPTDDCR",111,0)
 ... S ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)=""
"RTN","DGPTDDCR",112,0)
 .;End block of code for 401 Operation Code 21 field through Operation Code 25 field.
"RTN","DGPTDDCR",113,0)
 .;
"RTN","DGPTDDCR",114,0)
 .;Check the procedure nodes.
"RTN","DGPTDDCR",115,0)
 . S D1=0
"RTN","DGPTDDCR",116,0)
 .;loop thru procedures on zero node
"RTN","DGPTDDCR",117,0)
 . F  S D1=+$O(^DGPT(DA,"P",D1)) Q:D1=0  D
"RTN","DGPTDDCR",118,0)
 .. S TEMPP=$G(^DGPT(DA,"P",D1,0))
"RTN","DGPTDDCR",119,0)
 .. S DATE=$P(TEMPP,U,1)
"RTN","DGPTDDCR",120,0)
 .. I DATE="" D  Q
"RTN","DGPTDDCR",121,0)
 ... S ETEXT=DA_" P node missing date"
"RTN","DGPTDDCR",122,0)
 ... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR) Q
"RTN","DGPTDDCR",123,0)
 .. S DAS=DA_";P;"_D1_";0"
"RTN","DGPTDDCR",124,0)
 .. S KND=0
"RTN","DGPTDDCR",125,0)
 .. F JND=5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24 D
"RTN","DGPTDDCR",126,0)
 ... S KND=KND+1
"RTN","DGPTDDCR",127,0)
 ... S CODEP=$P(TEMPP,U,JND)
"RTN","DGPTDDCR",128,0)
 ... I CODEP="" Q
"RTN","DGPTDDCR",129,0)
 ... S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80.1,CODEP)),U,3)
"RTN","DGPTDDCR",130,0)
 ... S CODE=$$CODEC^ICDEX(80.1,CODEP)
"RTN","DGPTDDCR",131,0)
 ... I $P(CODE,U,1)=-1 D  Q
"RTN","DGPTDDCR",132,0)
 .... S ETEXT=DAS_" has the invalid code "_CODE
"RTN","DGPTDDCR",133,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",134,0)
 ... S CC(CODESYS)=CC(CODESYS)+1
"RTN","DGPTDDCR",135,0)
 ... S NODE="P"_KND
"RTN","DGPTDDCR",136,0)
 ... S ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS)=""
"RTN","DGPTDDCR",137,0)
 ... S ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)=""
"RTN","DGPTDDCR",138,0)
 .;
"RTN","DGPTDDCR",139,0)
 .;Begin block of code for 601 Procedure Code fields ICD 21 through ICD 25.
"RTN","DGPTDDCR",140,0)
 . N DGDATA,DGPIECE
"RTN","DGPTDDCR",141,0)
 . S D1=0
"RTN","DGPTDDCR",142,0)
 .;loop thru procedures on one node
"RTN","DGPTDDCR",143,0)
 . F  S D1=+$O(^DGPT(DA,"P",D1)) Q:D1=0  D
"RTN","DGPTDDCR",144,0)
 .. S TEMPP=$G(^DGPT(DA,"P",D1,1)) ;ICD 21 through ICD 25
"RTN","DGPTDDCR",145,0)
 .. S DGDATA=0
"RTN","DGPTDDCR",146,0)
 .. F DGPIECE=1:1:5 I +$P(TEMPP,U,DGPIECE) S DGDATA=1
"RTN","DGPTDDCR",147,0)
 .. Q:'$G(DGDATA)  ;quit if no data on the node
"RTN","DGPTDDCR",148,0)
 .. S DATE=+$G(^DGPT(DA,"P",D1,0)) ;Procedure Date
"RTN","DGPTDDCR",149,0)
 .. I DATE=0 D  Q
"RTN","DGPTDDCR",150,0)
 ... S ETEXT=DA_" P node missing date"
"RTN","DGPTDDCR",151,0)
 ... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR) Q
"RTN","DGPTDDCR",152,0)
 .. S DAS=DA_";P;"_D1_";1"
"RTN","DGPTDDCR",153,0)
 .. S KND=20
"RTN","DGPTDDCR",154,0)
 .. F JND=1,2,3,4,5 D
"RTN","DGPTDDCR",155,0)
 ... S KND=KND+1
"RTN","DGPTDDCR",156,0)
 ... S CODEP=$P(TEMPP,U,JND)
"RTN","DGPTDDCR",157,0)
 ... I CODEP="" Q
"RTN","DGPTDDCR",158,0)
 ... S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80.1,CODEP)),U,3)
"RTN","DGPTDDCR",159,0)
 ... S CODE=$$CODEC^ICDEX(80.1,CODEP)
"RTN","DGPTDDCR",160,0)
 ... I $P(CODE,U,1)=-1 D  Q
"RTN","DGPTDDCR",161,0)
 .... S ETEXT=DAS_" has the invalid code "_CODE
"RTN","DGPTDDCR",162,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",163,0)
 ... S CC(CODESYS)=CC(CODESYS)+1
"RTN","DGPTDDCR",164,0)
 ... S NODE="P"_KND
"RTN","DGPTDDCR",165,0)
 ... S ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS)=""
"RTN","DGPTDDCR",166,0)
 ... S ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)=""
"RTN","DGPTDDCR",167,0)
 .;End block of code for 601 Procedure Code fields ICD 21 through ICD 25.
"RTN","DGPTDDCR",168,0)
 .;
"RTN","DGPTDDCR",169,0)
 .;Discharge ICD codes
"RTN","DGPTDDCR",170,0)
 . I $D(^DGPT(DA,70)) D
"RTN","DGPTDDCR",171,0)
 .. S TEMP70=$G(^DGPT(DA,70))
"RTN","DGPTDDCR",172,0)
 .. S TEMP71=$G(^DGPT(DA,71))
"RTN","DGPTDDCR",173,0)
 .. S DATE=$P(TEMP70,U,1)
"RTN","DGPTDDCR",174,0)
 .. I DATE="" S DATE=$P(TEMP0,U,2)
"RTN","DGPTDDCR",175,0)
 .. S DAS=DA_";70"
"RTN","DGPTDDCR",176,0)
 .. S CODEP=$P(TEMP70,U,10)
"RTN","DGPTDDCR",177,0)
 .. I CODEP'="" D
"RTN","DGPTDDCR",178,0)
 ... S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,CODEP)),U,3)
"RTN","DGPTDDCR",179,0)
 ... S CODE=$$CODEC^ICDEX(80,CODEP)
"RTN","DGPTDDCR",180,0)
 ... I $P(CODE,U,1)=-1 D  Q
"RTN","DGPTDDCR",181,0)
 .... S ETEXT=DAS_" DXLS has the invalid code "_CODE
"RTN","DGPTDDCR",182,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",183,0)
 ... E  D
"RTN","DGPTDDCR",184,0)
 .... S CC(CODESYS)=CC(CODESYS)+1
"RTN","DGPTDDCR",185,0)
 .... S ^PXRMINDX(45,CODESYS,"INP",CODE,"DXLS",DFN,DATE,DAS)=""
"RTN","DGPTDDCR",186,0)
 .... S ^PXRMINDX(45,CODESYS,"PNI",DFN,"DXLS",CODE,DATE,DAS)=""
"RTN","DGPTDDCR",187,0)
 ..;
"RTN","DGPTDDCR",188,0)
 .. S CODEP=$P(TEMP70,U,11)
"RTN","DGPTDDCR",189,0)
 .. I CODEP'="" D
"RTN","DGPTDDCR",190,0)
 ... S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,CODEP)),U,3)
"RTN","DGPTDDCR",191,0)
 ... S CODE=$$CODEC^ICDEX(80,CODEP)
"RTN","DGPTDDCR",192,0)
 ... I $P(CODE,U,1)=-1 D  Q
"RTN","DGPTDDCR",193,0)
 .... S ETEXT=DAS_" PDX has the invalid code "_CODE
"RTN","DGPTDDCR",194,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",195,0)
 ... E  D
"RTN","DGPTDDCR",196,0)
 .... S CC(CODESYS)=CC(CODESYS)+1
"RTN","DGPTDDCR",197,0)
 .... S ^PXRMINDX(45,CODESYS,"INP",CODE,"PDX",DFN,DATE,DAS)=""
"RTN","DGPTDDCR",198,0)
 .... S ^PXRMINDX(45,CODESYS,"PNI",DFN,"PDX",CODE,DATE,DAS)=""
"RTN","DGPTDDCR",199,0)
 ..;
"RTN","DGPTDDCR",200,0)
 ..;70 node secondary diagnosis
"RTN","DGPTDDCR",201,0)
 .. S KND=0
"RTN","DGPTDDCR",202,0)
 .. F JND=16,17,18,19,20,21,22,23,24 D
"RTN","DGPTDDCR",203,0)
 ... S KND=KND+1
"RTN","DGPTDDCR",204,0)
 ... S CODEP=$P(TEMP70,U,JND)
"RTN","DGPTDDCR",205,0)
 ... I CODEP="" Q
"RTN","DGPTDDCR",206,0)
 ... S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,CODEP)),U,3)
"RTN","DGPTDDCR",207,0)
 ... S CODE=$$CODEC^ICDEX(80,CODEP)
"RTN","DGPTDDCR",208,0)
 ... I $P(CODE,U,1)=-1 D  Q
"RTN","DGPTDDCR",209,0)
 .... S ETEXT=DAS_" node has the invalid code "_CODE
"RTN","DGPTDDCR",210,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",211,0)
 ... S CC(CODESYS)=CC(CODESYS)+1
"RTN","DGPTDDCR",212,0)
 ... S NODE="D SD"_KND
"RTN","DGPTDDCR",213,0)
 ... S ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS)=""
"RTN","DGPTDDCR",214,0)
 ... S ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)=""
"RTN","DGPTDDCR",215,0)
 ..;
"RTN","DGPTDDCR",216,0)
 ..;71 node secondary diagnosis
"RTN","DGPTDDCR",217,0)
 .. S DAS=DA_";71"
"RTN","DGPTDDCR",218,0)
 .. S KND=9
"RTN","DGPTDDCR",219,0)
 .. F JND=1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 D
"RTN","DGPTDDCR",220,0)
 ... S KND=KND+1
"RTN","DGPTDDCR",221,0)
 ... S CODEP=$P(TEMP71,U,JND)
"RTN","DGPTDDCR",222,0)
 ... I CODEP="" Q
"RTN","DGPTDDCR",223,0)
 ... S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,CODEP)),U,3)
"RTN","DGPTDDCR",224,0)
 ... S CODE=$$CODEC^ICDEX(80,CODEP)
"RTN","DGPTDDCR",225,0)
 ... I $P(CODE,U,1)=-1 D  Q
"RTN","DGPTDDCR",226,0)
 .... S ETEXT=DAS_" node has the invalid code "_CODE
"RTN","DGPTDDCR",227,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",228,0)
 ... S CC(CODESYS)=CC(CODESYS)+1
"RTN","DGPTDDCR",229,0)
 ... S NODE="D SD"_KND
"RTN","DGPTDDCR",230,0)
 ... S ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS)=""
"RTN","DGPTDDCR",231,0)
 ... S ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)=""
"RTN","DGPTDDCR",232,0)
 ..;
"RTN","DGPTDDCR",233,0)
 .;Movement diagnosis codes
"RTN","DGPTDDCR",234,0)
 . I '$D(^DGPT(DA,"M")) Q
"RTN","DGPTDDCR",235,0)
 . S D1=0
"RTN","DGPTDDCR",236,0)
 .;Loop thru Movement diagnosis codes on zero node
"RTN","DGPTDDCR",237,0)
 . F  S D1=+$O(^DGPT(DA,"M",D1)) Q:D1=0  D 
"RTN","DGPTDDCR",238,0)
 .. S TEMPS=$G(^DGPT(DA,"M",D1,0))
"RTN","DGPTDDCR",239,0)
 .. S DAS=DA_";M;"_D1_";"_0
"RTN","DGPTDDCR",240,0)
 .. S DATE=$P(TEMPS,U,10)
"RTN","DGPTDDCR",241,0)
 ..;If the movement date is missing use the admission date.
"RTN","DGPTDDCR",242,0)
 .. I DATE="" S DATE=ADMDT
"RTN","DGPTDDCR",243,0)
 .. S KND=0
"RTN","DGPTDDCR",244,0)
 .. F JND=5,6,7,8,9,11,12,13,14,15 D
"RTN","DGPTDDCR",245,0)
 ... S CODEP=$P(TEMPS,U,JND)
"RTN","DGPTDDCR",246,0)
 ... I CODEP="" Q
"RTN","DGPTDDCR",247,0)
 ... S KND=KND+1
"RTN","DGPTDDCR",248,0)
 ... S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,CODEP)),U,3)
"RTN","DGPTDDCR",249,0)
 ... S CODE=$$CODEC^ICDEX(80,CODEP)
"RTN","DGPTDDCR",250,0)
 ... I $P(CODE,U,1)=-1 D  Q
"RTN","DGPTDDCR",251,0)
 .... S ETEXT=DAS_" node has the invalid code "_CODE
"RTN","DGPTDDCR",252,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",253,0)
 ... S CC(CODESYS)=CC(CODESYS)+1
"RTN","DGPTDDCR",254,0)
 ... S NODE="M ICD"_KND
"RTN","DGPTDDCR",255,0)
 ... S ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS)=""
"RTN","DGPTDDCR",256,0)
 ... S ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)=""
"RTN","DGPTDDCR",257,0)
 .;
"RTN","DGPTDDCR",258,0)
 .;Begin block of code for 501 Movement fields ICD 11 through ICD 25.
"RTN","DGPTDDCR",259,0)
 . S D1=0
"RTN","DGPTDDCR",260,0)
 .;Loop thru Movement diagnosis codes on 81 node
"RTN","DGPTDDCR",261,0)
 . F  S D1=+$O(^DGPT(DA,"M",D1)) Q:D1=0  D
"RTN","DGPTDDCR",262,0)
 .. S TEMPS=$G(^DGPT(DA,"M",D1,81)) ;ICD 11 through ICD 25
"RTN","DGPTDDCR",263,0)
 .. S DAS=DA_";M;"_D1_";"_81
"RTN","DGPTDDCR",264,0)
 .. S DATE=$P($G(^DGPT(DA,"M",D1,0)),U,10) ;Movement Date
"RTN","DGPTDDCR",265,0)
 ..;If the movement date is missing use the admission date.
"RTN","DGPTDDCR",266,0)
 .. I DATE="" S DATE=ADMDT
"RTN","DGPTDDCR",267,0)
 .. S KND=10
"RTN","DGPTDDCR",268,0)
 .. F JND=1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 D
"RTN","DGPTDDCR",269,0)
 ... S CODEP=$P(TEMPS,U,JND)
"RTN","DGPTDDCR",270,0)
 ... I CODEP="" Q
"RTN","DGPTDDCR",271,0)
 ... S KND=KND+1
"RTN","DGPTDDCR",272,0)
 ... S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,CODEP)),U,3)
"RTN","DGPTDDCR",273,0)
 ... S CODE=$$CODEC^ICDEX(80,CODEP)
"RTN","DGPTDDCR",274,0)
 ... I $P(CODE,U,1)=-1 D  Q
"RTN","DGPTDDCR",275,0)
 .... S ETEXT=DAS_" node has the invalid code "_CODE
"RTN","DGPTDDCR",276,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",277,0)
 ... S CC(CODESYS)=CC(CODESYS)+1
"RTN","DGPTDDCR",278,0)
 ... S NODE="M ICD"_KND
"RTN","DGPTDDCR",279,0)
 ... S ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS)=""
"RTN","DGPTDDCR",280,0)
 ... S ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)=""
"RTN","DGPTDDCR",281,0)
 .;End block of code for 501 Movement fields ICD 11 through ICD 25.
"RTN","DGPTDDCR",282,0)
 .;
"RTN","DGPTDDCR",283,0)
 S END=$H
"RTN","DGPTDDCR",284,0)
 S CODESYS="",TOTAL=0
"RTN","DGPTDDCR",285,0)
 F  S CODESYS=$O(CC(CODESYS)) Q:CODESYS=""  D
"RTN","DGPTDDCR",286,0)
 . S TOTAL=TOTAL+CC(CODESYS)
"RTN","DGPTDDCR",287,0)
 . S TEXT=CC(CODESYS)_" PTF "_CODESYS_" results indexed."
"RTN","DGPTDDCR",288,0)
 . D MES^XPDUTL(TEXT)
"RTN","DGPTDDCR",289,0)
 D DETIME^PXRMSXRM(START,END)
"RTN","DGPTDDCR",290,0)
 ;If there were errors send a message.
"RTN","DGPTDDCR",291,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL)
"RTN","DGPTDDCR",292,0)
 ;Send a MailMan message with the results.
"RTN","DGPTDDCR",293,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,TOTAL,NERROR)
"RTN","DGPTDDCR",294,0)
 S ^PXRMINDX(45,"GLOBAL NAME")=GLOBAL
"RTN","DGPTDDCR",295,0)
 S ^PXRMINDX(45,"BUILT BY")=DUZ
"RTN","DGPTDDCR",296,0)
 S ^PXRMINDX(45,"DATE BUILT")=$$NOW^XLFDT
"RTN","DGPTDDCR",297,0)
 Q
"RTN","DGPTDDCR",298,0)
 ;
"RTN","DGPTDDCR",299,0)
 ;=============================================
"RTN","DGPTDDCR",300,0)
KPTFDD(X,DA,NODE) ;Delete index for PTF discharge ICD diagnosis data.
"RTN","DGPTDDCR",301,0)
 ;X(1)=DFN, X(2)=ADMISSION DATE, X(3)=TYPE OF RECORD,
"RTN","DGPTDDCR",302,0)
 ;X(4)=ICD DIAGNOSIS, X(5)=DISCHARGE DATE
"RTN","DGPTDDCR",303,0)
 ;NODE name for:
"RTN","DGPTDDCR",304,0)
 ; - PRINCIPAL DIAGNOSIS is DXLS
"RTN","DGPTDDCR",305,0)
 ; - PRINCIPAL DIAGNOSIS pre 1986 it is PDX
"RTN","DGPTDDCR",306,0)
 ; - SECONDARY DIAGNOSIS 1 through 24 is 'D SD1' through 'D SD24'.
"RTN","DGPTDDCR",307,0)
 ;
"RTN","DGPTDDCR",308,0)
 ;Census records are not indexed.
"RTN","DGPTDDCR",309,0)
 I X(3)=2 Q
"RTN","DGPTDDCR",310,0)
 N CODE,CODESYS,DAS,DATE
"RTN","DGPTDDCR",311,0)
 ;If there is no discharge date use the admission date.
"RTN","DGPTDDCR",312,0)
 S DATE=$S(X(5)'="":X(5),1:X(2))
"RTN","DGPTDDCR",313,0)
 ;PRINCIPAL DIAGNOSIS and SECONDARY DIAGNOSIS 1 through 9 on 70 node
"RTN","DGPTDDCR",314,0)
 ;SECONDARY DIAGNOSIS 10 through 24 on 71 node
"RTN","DGPTDDCR",315,0)
 S DAS=$S($E(NODE,5,6)<10:DA_";70",1:DA_";71")
"RTN","DGPTDDCR",316,0)
 S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,X(4))),U,3)
"RTN","DGPTDDCR",317,0)
 S CODE=$$CODEC^ICDEX(80,X(4))
"RTN","DGPTDDCR",318,0)
 K ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,X(1),DATE,DAS)
"RTN","DGPTDDCR",319,0)
 K ^PXRMINDX(45,CODESYS,"PNI",X(1),NODE,CODE,DATE,DAS)
"RTN","DGPTDDCR",320,0)
 Q
"RTN","DGPTDDCR",321,0)
 ;
"RTN","DGPTDDCR",322,0)
 ;=============================================
"RTN","DGPTDDCR",323,0)
KPTFMD(X,DA,NODE) ;Delete index for PTF movement ICD diagnosis data.
"RTN","DGPTDDCR",324,0)
 ;X(1)=MOVEMENT DATE, X(2)=ICD DIAGNOSIS
"RTN","DGPTDDCR",325,0)
 ;NODE names for ICD1 1 through ICD 25 are 'M ICD1' through 'M ICD25'.
"RTN","DGPTDDCR",326,0)
 ;
"RTN","DGPTDDCR",327,0)
 ;Census records are not indexed.
"RTN","DGPTDDCR",328,0)
 I $P(^DGPT(DA(1),0),U,11)=2 Q
"RTN","DGPTDDCR",329,0)
 N ADMDT,CODE,CODESYS,DAS,DFN,LOCATION,MDATE,TEMP
"RTN","DGPTDDCR",330,0)
 S TEMP=^DGPT(DA(1),0)
"RTN","DGPTDDCR",331,0)
 S DFN=$P(TEMP,U,1)
"RTN","DGPTDDCR",332,0)
 S ADMDT=$P(TEMP,U,2)
"RTN","DGPTDDCR",333,0)
 ;If the Movement Date is null use the Admission Date.
"RTN","DGPTDDCR",334,0)
 S MDATE=$S(X(1)="":ADMDT,1:X(1))
"RTN","DGPTDDCR",335,0)
 ;ICD 1 through ICD 10 on 0 node, ICD 11 through ICD 25 on 81 node
"RTN","DGPTDDCR",336,0)
 S LOCATION=$S($E(NODE,6,7)<11:0,1:"81")
"RTN","DGPTDDCR",337,0)
 S DAS=DA(1)_";M;"_DA_";"_LOCATION
"RTN","DGPTDDCR",338,0)
 S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,X(2))),U,3)
"RTN","DGPTDDCR",339,0)
 S CODE=$$CODEC^ICDEX(80,X(2))
"RTN","DGPTDDCR",340,0)
 K ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,MDATE,DAS)
"RTN","DGPTDDCR",341,0)
 K ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,MDATE,DAS)
"RTN","DGPTDDCR",342,0)
 Q
"RTN","DGPTDDCR",343,0)
 ;
"RTN","DGPTDDCR",344,0)
 ;=============================================
"RTN","DGPTDDCR",345,0)
KPTFP(X,DA,NODE,NUM) ;Delete index entry for PTF ICD surgeries & procedure data.
"RTN","DGPTDDCR",346,0)
 ;For node 401 surgery node:
"RTN","DGPTDDCR",347,0)
 ;X(1)=SURGERY/PROCEDURE DATE, X(2)=ICD procedure
"RTN","DGPTDDCR",348,0)
 ;For node 601, procedure node:
"RTN","DGPTDDCR",349,0)
 ;X(1)=PROCEDURE DATE, X(2)=ICD procedure
"RTN","DGPTDDCR",350,0)
 ;NODE name is S (for 401 surgery) or P (for 601 procedure). 
"RTN","DGPTDDCR",351,0)
 ;NUM is either a:
"RTN","DGPTDDCR",352,0)
 ; - procedure code number for PROCEDURE CODE 1 through PROCEDURE CODE 25
"RTN","DGPTDDCR",353,0)
 ;   or surgery code number for OPERATION CODE 1 through OPERATION CODE 25
"RTN","DGPTDDCR",354,0)
 ;
"RTN","DGPTDDCR",355,0)
 ;Census records are not indexed.
"RTN","DGPTDDCR",356,0)
 I $P(^DGPT(DA(1),0),U,11)=2 Q
"RTN","DGPTDDCR",357,0)
 N DAS,DFN,NNAME,CSI,LOCATION
"RTN","DGPTDDCR",358,0)
 S DFN=$P(^DGPT(DA(1),0),U,1)
"RTN","DGPTDDCR",359,0)
 S NNAME=NODE_NUM
"RTN","DGPTDDCR",360,0)
 ;401 OPERATION CODE 1 through 20 on 0 node, OPERATION CODE 21 through 25 on 1 node
"RTN","DGPTDDCR",361,0)
 ;601 PROCEDURE 1 through 20 on 0 node, PROCEDURE CODE 21 through 25 on 1 node
"RTN","DGPTDDCR",362,0)
 S LOCATION=$S(NUM<21:0,1:1)
"RTN","DGPTDDCR",363,0)
 S DAS=DA(1)_";"_NODE_";"_DA_";"_LOCATION
"RTN","DGPTDDCR",364,0)
 S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80.1,X(2))),U,3)
"RTN","DGPTDDCR",365,0)
 S CODE=$$CODEC^ICDEX(80.1,X(2))
"RTN","DGPTDDCR",366,0)
 K ^PXRMINDX(45,CODESYS,"INP",CODE,NNAME,DFN,X(1),DAS)
"RTN","DGPTDDCR",367,0)
 K ^PXRMINDX(45,CODESYS,"PNI",DFN,NNAME,CODE,X(1),DAS)
"RTN","DGPTDDCR",368,0)
 Q
"RTN","DGPTDDCR",369,0)
 ;
"RTN","DGPTDDCR",370,0)
 ;=============================================
"RTN","DGPTDDCR",371,0)
SPTFDD(X,DA,NODE) ;Set index for PTF discharge ICD diagnoses.
"RTN","DGPTDDCR",372,0)
 ;X(1)=DFN, X(2)=ADMISSION DATE, X(3)=TYPE OF RECORD,
"RTN","DGPTDDCR",373,0)
 ;X(4)=ICD DIAGNOSIS, X(5)=DISCHARGE DATE
"RTN","DGPTDDCR",374,0)
 ;NODE name for:
"RTN","DGPTDDCR",375,0)
 ; - PRINCIPAL DIAGNOSIS is DXLS
"RTN","DGPTDDCR",376,0)
 ; - PRINCIPAL DIAGNOSIS pre 1986 it is PDX
"RTN","DGPTDDCR",377,0)
 ; - SECONDARY DIAGNOSIS 1 through 24 is 'D SD1' through 'D SD24'.
"RTN","DGPTDDCR",378,0)
 ;
"RTN","DGPTDDCR",379,0)
 ;Census records are not indexed.
"RTN","DGPTDDCR",380,0)
 I X(3)=2 Q
"RTN","DGPTDDCR",381,0)
 N CODE,CODESYS,DAS,DATE
"RTN","DGPTDDCR",382,0)
 ;If there is no discharge date use the admission date.
"RTN","DGPTDDCR",383,0)
 S DATE=$S(X(5)'="":X(5),1:X(2))
"RTN","DGPTDDCR",384,0)
 ;PRINCIPAL DIAGNOSIS and SECONDARY DIAGNOSIS 1 through 9 on 70 node
"RTN","DGPTDDCR",385,0)
 ;SECONDARY DIAGNOSIS 10 through 24 on 71 node
"RTN","DGPTDDCR",386,0)
 S DAS=$S($E(NODE,5,6)<10:DA_";70",1:DA_";71")
"RTN","DGPTDDCR",387,0)
 S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,X(4))),U,3)
"RTN","DGPTDDCR",388,0)
 S CODE=$$CODEC^ICDEX(80,X(4))
"RTN","DGPTDDCR",389,0)
 S ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,X(1),DATE,DAS)=""
"RTN","DGPTDDCR",390,0)
 S ^PXRMINDX(45,CODESYS,"PNI",X(1),NODE,CODE,DATE,DAS)=""
"RTN","DGPTDDCR",391,0)
 Q
"RTN","DGPTDDCR",392,0)
 ;
"RTN","DGPTDDCR",393,0)
 ;=============================================
"RTN","DGPTDDCR",394,0)
SPTFMD(X,DA,NODE) ;Set index for PTF movement ICD diagnosis data.
"RTN","DGPTDDCR",395,0)
 ;X(1)=MOVEMENT DATE, X(2)=ICD DIAGNOSIS
"RTN","DGPTDDCR",396,0)
 ;NODE names for ICD1 1 through ICD 25 are 'M ICD1' through 'M ICD25'.
"RTN","DGPTDDCR",397,0)
 ;
"RTN","DGPTDDCR",398,0)
 ;Census records are not indexed.
"RTN","DGPTDDCR",399,0)
 I $P(^DGPT(DA(1),0),U,11)=2 Q
"RTN","DGPTDDCR",400,0)
 N ADMDT,CODE,CODESYS,DAS,DFN,LOCATION,MDATE,TEMP
"RTN","DGPTDDCR",401,0)
 S TEMP=^DGPT(DA(1),0)
"RTN","DGPTDDCR",402,0)
 S DFN=$P(TEMP,U,1)
"RTN","DGPTDDCR",403,0)
 S ADMDT=$P(TEMP,U,2)
"RTN","DGPTDDCR",404,0)
 ;If the Movement Date is null use the Admission Date.
"RTN","DGPTDDCR",405,0)
 S MDATE=$S(X(1)="":ADMDT,1:X(1))
"RTN","DGPTDDCR",406,0)
 ;ICD 1 through ICD 10 on 0 node, ICD 11 through ICD 25 on 81 node
"RTN","DGPTDDCR",407,0)
 S LOCATION=$S($E(NODE,6,7)<11:0,1:"81")
"RTN","DGPTDDCR",408,0)
 S DAS=DA(1)_";M;"_DA_";"_LOCATION
"RTN","DGPTDDCR",409,0)
 S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,X(2))),U,3)
"RTN","DGPTDDCR",410,0)
 S CODE=$$CODEC^ICDEX(80,X(2))
"RTN","DGPTDDCR",411,0)
 S ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,MDATE,DAS)=""
"RTN","DGPTDDCR",412,0)
 S ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,MDATE,DAS)=""
"RTN","DGPTDDCR",413,0)
 Q
"RTN","DGPTDDCR",414,0)
 ;
"RTN","DGPTDDCR",415,0)
 ;=============================================
"RTN","DGPTDDCR",416,0)
SPTFP(X,DA,NODE,NUM) ;Set index for PTF ICD surgeries & procedures.
"RTN","DGPTDDCR",417,0)
 ;For node 401 surgery node:
"RTN","DGPTDDCR",418,0)
 ;X(1)=SURGERY/PROCEDURE DATE, X(2)=ICD procedure
"RTN","DGPTDDCR",419,0)
 ;For node 601, procedure node:
"RTN","DGPTDDCR",420,0)
 ;X(1)=PROCEDURE DATE, X(2)=ICD procedure
"RTN","DGPTDDCR",421,0)
 ;NODE name is S (for 401 surgery) or P (for 601 procedure). 
"RTN","DGPTDDCR",422,0)
 ;NUM is either a:
"RTN","DGPTDDCR",423,0)
 ; - procedure code number for PROCEDURE CODE 1 through PROCEDURE CODE 25
"RTN","DGPTDDCR",424,0)
 ;   or surgery code number for OPERATION CODE 1 through OPERATION CODE 25
"RTN","DGPTDDCR",425,0)
 ;
"RTN","DGPTDDCR",426,0)
 ;Census records are not indexed.
"RTN","DGPTDDCR",427,0)
 I $P(^DGPT(DA(1),0),U,11)=2 Q
"RTN","DGPTDDCR",428,0)
 N CODE,CODESYS,DAS,DFN,NNAME,LOCATION
"RTN","DGPTDDCR",429,0)
 S DFN=$P(^DGPT(DA(1),0),U,1)
"RTN","DGPTDDCR",430,0)
 S NNAME=NODE_NUM
"RTN","DGPTDDCR",431,0)
 ;401 OPERATION CODE 1 through 20 on 0 node, OPERATION CODE 21 through 25 on 1 node
"RTN","DGPTDDCR",432,0)
 ;601 PROCEDURE 1 through 20 on 0 node, PROCEDURE CODE 21 through 25 on 1 node
"RTN","DGPTDDCR",433,0)
 S LOCATION=$S(NUM<21:0,1:1)
"RTN","DGPTDDCR",434,0)
 S DAS=DA(1)_";"_NODE_";"_DA_";"_LOCATION
"RTN","DGPTDDCR",435,0)
 S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80.1,X(2))),U,3)
"RTN","DGPTDDCR",436,0)
 S CODE=$$CODEC^ICDEX(80.1,X(2))
"RTN","DGPTDDCR",437,0)
 S ^PXRMINDX(45,CODESYS,"INP",CODE,NNAME,DFN,X(1),DAS)=""
"RTN","DGPTDDCR",438,0)
 S ^PXRMINDX(45,CODESYS,"PNI",DFN,NNAME,CODE,X(1),DAS)=""
"RTN","DGPTDDCR",439,0)
 Q
"RTN","DGPTDRG")
0^17^B52220100
"RTN","DGPTDRG",1,0)
DGPTDRG ;ALB/ABS,HIOFO/FT - DRG Information Report User Prompts ;07/01/2015  11:21 AM
"RTN","DGPTDRG",2,0)
 ;;5.3;Registration;**60,441,510,559,599,606,669,729,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTDRG",3,0)
 ;;ADL;Update for CSV Project;;Mar 28, 2003
"RTN","DGPTDRG",4,0)
 ;
"RTN","DGPTDRG",5,0)
 ; %ZIS APIs - #10086
"RTN","DGPTDRG",6,0)
 ;
"RTN","DGPTDRG",7,0)
 ; called by entry action of DRG Information Report [DG PTF DRG INFORMATION OUTPUT] DGPTODR=1
"RTN","DGPTDRG",8,0)
 ; called by DRG Calculation [DG DRG CALCULATION]
"RTN","DGPTDRG",9,0)
 ;
"RTN","DGPTDRG",10,0)
 S U="^" D Q,DT^DICRW
"RTN","DGPTDRG",11,0)
PAT ;
"RTN","DGPTDRG",12,0)
 D EFFDATE G Q:$D(DUOUT),Q:$D(DTOUT)
"RTN","DGPTDRG",13,0)
 W !!,"Choose Patient from PATIENT file" S %=1 D YN^DICN G Q:%=-1
"RTN","DGPTDRG",14,0)
 I %Y["?"!('%) W !?3,"Enter <RET> for YES if you want DRGs for a patient from your PATIENT File",!?3,"Answer 'N' for NO if you want DRGs for a hypothetical patient" G PAT
"RTN","DGPTDRG",15,0)
 S DGPTHOW=% I %=2 S NAME="" G AGE
"RTN","DGPTDRG",16,0)
 N DOB
"RTN","DGPTDRG",17,0)
 S DIC="^DPT(",DIC(0)="AEQMZ"
"RTN","DGPTDRG",18,0)
 W ! D ^DIC G Q:Y'>0
"RTN","DGPTDRG",19,0)
 S DFN=+Y,NAME=$P(Y(0),"^"),(DOB,AGE)=$P(Y(0),U,3),SEX=$P(Y(0),U,2)
"RTN","DGPTDRG",20,0)
 S X1=DT,X2=AGE D ^%DTC S AGE=X\365.25 W "  AGE:",AGE
"RTN","DGPTDRG",21,0)
 ; -- is patient Expired
"RTN","DGPTDRG",22,0)
 S DGEXP=$S($D(^DPT(DFN,.35))#2:1,1:0) I DGEXP,'$P(^(.35),"^") S DGEXP=0
"RTN","DGPTDRG",23,0)
 G EXP:DGEXP,TRS
"RTN","DGPTDRG",24,0)
 ;
"RTN","DGPTDRG",25,0)
AGE ;
"RTN","DGPTDRG",26,0)
 R !!,"Patient's AGE: ",AGE:DTIME
"RTN","DGPTDRG",27,0)
 G Q:AGE["^"!('$T)
"RTN","DGPTDRG",28,0)
 S:AGE<0!(AGE="")!(AGE>124)!(AGE'?.N) AGE="?"
"RTN","DGPTDRG",29,0)
 I AGE["?" W !,"Enter a number for patient's age in years (0-124)" G AGE
"RTN","DGPTDRG",30,0)
 ;
"RTN","DGPTDRG",31,0)
SEX ;
"RTN","DGPTDRG",32,0)
 R !!,"Patient's SEX: MALE// ",X:DTIME G Q:X["^"!('$T)
"RTN","DGPTDRG",33,0)
 S Z="^MALE^FEMALE" I X="" S X="M" W X
"RTN","DGPTDRG",34,0)
 D IN^DGHELP I %=-1 W !?3,"Enter <RET> for MALE if hypothetical patient is male",!?3,"Enter 'F' for Female" G SEX
"RTN","DGPTDRG",35,0)
 S SEX=$E(X)
"RTN","DGPTDRG",36,0)
 ;
"RTN","DGPTDRG",37,0)
EXP ;
"RTN","DGPTDRG",38,0)
 W !!,"Did patient die during this episode" S %=2 D YN^DICN G Q:%=-1
"RTN","DGPTDRG",39,0)
 I %Y["?"!('%) W !?3,"Enter <RET> for NO if patient did not die during the hospital",!?15,"stay for which this DRG is to be calculated",!?3,"Enter 'Y' for YES" G EXP
"RTN","DGPTDRG",40,0)
 S DGEXP=$S(%=1:1,1:0) I DGEXP S (DGTRS,DGDMS)=0 G DX
"RTN","DGPTDRG",41,0)
 ;
"RTN","DGPTDRG",42,0)
TRS W !!,"Transfer to an acute care facility" S %=2 D YN^DICN G Q:%=-1
"RTN","DGPTDRG",43,0)
 I %Y["?"!('%) W !?3,"Enter <RET> for NO if patient not transfered to an acute care facility",!?3,"Enter 'Y' for YES if patient was transfered to acute care facility" G TRS
"RTN","DGPTDRG",44,0)
 S DGTRS=$S(%=1:1,1:0)
"RTN","DGPTDRG",45,0)
 ;
"RTN","DGPTDRG",46,0)
DMS ;
"RTN","DGPTDRG",47,0)
 W !!,"Discharged against medical advice" S %=2 D YN^DICN G Q:%=-1 I %Y["?"!('%) W !?3,"Enter <RET> for NO if patient did not leave against medical advice",!?3,"Enter 'Y' for YES if patient did leave against medical advice",!,*7 G DMS
"RTN","DGPTDRG",48,0)
 S DGDMS=$S(%=1:1,1:0)
"RTN","DGPTDRG",49,0)
 ;
"RTN","DGPTDRG",50,0)
DX ;
"RTN","DGPTDRG",51,0)
 N DXINF,ICDVDT
"RTN","DGPTDRG",52,0)
 K X,Y
"RTN","DGPTDRG",53,0)
 ;
"RTN","DGPTDRG",54,0)
 ; What terminology to use, ICD9 or ICD10
"RTN","DGPTDRG",55,0)
 I DGDAT<IMPDATE S DGTERMIN="ICD"
"RTN","DGPTDRG",56,0)
 I DGDAT'<IMPDATE S DGTERMIN="10D"
"RTN","DGPTDRG",57,0)
 ;
"RTN","DGPTDRG",58,0)
 W !
"RTN","DGPTDRG",59,0)
 S (DGDX,DGSURG)="" S PROMPT="Enter PRINCIPAL diagnosis "_$$DISP()_": "
"RTN","DGPTDRG",60,0)
 ;D ICDEN1^DGPTF5
"RTN","DGPTDRG",61,0)
 S CODESET=$S(DGTERMIN="ICD":9,1:10) D DIAG^DGPTFIC
"RTN","DGPTDRG",62,0)
 Q:$G(X)["^"!($G(X)="")
"RTN","DGPTDRG",63,0)
 Q:$G(DTOUT)!$G(DUOUT)!$G(DIRUT)!$G(DIROUT)
"RTN","DGPTDRG",64,0)
 ;
"RTN","DGPTDRG",65,0)
 S DGPTTMP=Y ; -- ICDEN1^DGPTF5 returns Y=$$ICDDATA^ICDXCODE
"RTN","DGPTDRG",66,0)
 I $P(DGPTTMP,U,5) D  G DX
"RTN","DGPTDRG",67,0)
 . W !,*7,">>>You have selected diagnosis code that is not considered"
"RTN","DGPTDRG",68,0)
 . W !,"a primary diagnosis code.  Please enter a PRIMARY code."
"RTN","DGPTDRG",69,0)
 ;
"RTN","DGPTDRG",70,0)
 I '$P(DGPTTMP,U,10) D INAC G DX
"RTN","DGPTDRG",71,0)
 S:$P(DGPTTMP,U,10) DGDX=+Y,DGDX(1)=$P(DGPTTMP,"^",2)_"^"_$P(DGPTTMP,"^",4)
"RTN","DGPTDRG",72,0)
 ;S:DGTERMIN="10D" DGDXPOA=$$ASKPOA(0)
"RTN","DGPTDRG",73,0)
 S DGDXPOA=$S(DGTERMIN="10D":$$ASKPOA(0),1:"Y")
"RTN","DGPTDRG",74,0)
 ;
"RTN","DGPTDRG",75,0)
 S PROMPT="Enter SECONDARY diagnosis "_$$DISP()_": " W !
"RTN","DGPTDRG",76,0)
 F DGI=2:1:25 D DIAG^DGPTFIC Q:$G(X)["^"!($G(X)="")  D
"RTN","DGPTDRG",77,0)
 . S DGPTTMP=Y
"RTN","DGPTDRG",78,0)
 . I '$P(DGPTTMP,U,10) D INAC S DGI=DGI-1 Q
"RTN","DGPTDRG",79,0)
 . I +DGPTTMP>0&($P(DGPTTMP,U,10)) S DGDX=DGDX_"^"_+Y,DGDX(DGI)=$P(DGPTTMP,"^",2)_"^"_$P(DGPTTMP,"^",4)
"RTN","DGPTDRG",80,0)
 . S:DGTERMIN="10D" DGDXPOA=DGDXPOA_"^"_$$ASKPOA(DGI-1)
"RTN","DGPTDRG",81,0)
 . S:DGTERMIN="ICD" DGDXPOA=DGDXPOA_"^"_"Y"
"RTN","DGPTDRG",82,0)
 . W !
"RTN","DGPTDRG",83,0)
 ;
"RTN","DGPTDRG",84,0)
 G Q:$G(X)["^"
"RTN","DGPTDRG",85,0)
 S DIC(0)="AEQMZ",DIC("S")="I $$ISVALID^ICDGTDRG(+Y,DGDAT,80.1)"
"RTN","DGPTDRG",86,0)
 ;
"RTN","DGPTDRG",87,0)
 D OP
"RTN","DGPTDRG",88,0)
 ;
"RTN","DGPTDRG",89,0)
 I ($G(X)["^") G Q ; User exiting up front 
"RTN","DGPTDRG",90,0)
 I ($D(DGSURG)<10),$D(DTOUT)!($D(DUOUT))!($D(DIROUT)) G Q ;Continue to DRG calc unless user failed to finish.
"RTN","DGPTDRG",91,0)
 I $D(DGPTODR) S DGVAR="AGE^NAME^SEX^DGDMS^DGEXP^DGTRS^DGDX#^DGSURG#^DGDAT^DGDXPOA",DGPGM="^DGPTODR" W ! D ZIS^DGUTQ G:POP Q U IO D ^DGPTODR,CLOSE^DGUTQ,Q S DGPTODR=1 G PAT
"RTN","DGPTDRG",92,0)
 ;
"RTN","DGPTDRG",93,0)
 ;S DGDRGPRT=1 D ^DGPTICD,Q G PAT  ;return DRG code even if inactive
"RTN","DGPTDRG",94,0)
 D NEWOUT,Q G PAT
"RTN","DGPTDRG",95,0)
 ;
"RTN","DGPTDRG",96,0)
Q K DFN,DGI,DGPGM,AGE,NAME,DGDMS,DGDX,DGEXP,DGPTHOW,DGSURG,DGTRS,DGVAR,DGDRGPRT,DRG,DIC,SEX,POP,X,Y,Z,X1,X2,%,%Y
"RTN","DGPTDRG",97,0)
 K EFFDATE,IMPDATE,DGTERMIN,DGTEMP,ICDVDT,DGDXPOA,CODESET,PROMPT,TERM,DGENR,DGPTTMP
"RTN","DGPTDRG",98,0)
 K ICDDRG,ICDDX,ICDPOA,ICDPDRG,ICDSEX,ICDSYS,ICDTMP,ICDY
"RTN","DGPTDRG",99,0)
 Q
"RTN","DGPTDRG",100,0)
DISP() ; -- Return value to display
"RTN","DGPTDRG",101,0)
 Q $S(DGTERMIN="10D":"(ICD 10)",DGTERMIN="ICD":"(ICD 9)",1:"")
"RTN","DGPTDRG",102,0)
 ;
"RTN","DGPTDRG",103,0)
 ;
"RTN","DGPTDRG",104,0)
EFFDATE ;prompts for effective date for DRG grouper?
"RTN","DGPTDRG",105,0)
 K DIR S DIR(0)="D^::AEX",DIR("B")="TODAY",DIR("A")="Effective Date"
"RTN","DGPTDRG",106,0)
 S DIR("?")="The effective to be used when calculating the DRG code for the patient."
"RTN","DGPTDRG",107,0)
 D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
"RTN","DGPTDRG",108,0)
 S DGDAT=Y
"RTN","DGPTDRG",109,0)
 D EFFDAT1^DGPTIC10(DGDAT)
"RTN","DGPTDRG",110,0)
 Q
"RTN","DGPTDRG",111,0)
 ;
"RTN","DGPTDRG",112,0)
INAC ;
"RTN","DGPTDRG",113,0)
 W !,*7,">>> You have selected an INACTIVE diagnosis code."
"RTN","DGPTDRG",114,0)
 W !,"    This code is not used by the grouper and may cause"
"RTN","DGPTDRG",115,0)
 W !,"    the case to be grouped into DRG 470 - UNGROUPABLE.",!
"RTN","DGPTDRG",116,0)
 W !,"    Therefore, this diagnosis code will NOT be passed"
"RTN","DGPTDRG",117,0)
 W !,"    to the grouper. Please enter another code."
"RTN","DGPTDRG",118,0)
 Q
"RTN","DGPTDRG",119,0)
 ;
"RTN","DGPTDRG",120,0)
ASKPOA(CNT) ; -- asks POA for each Diagnosis
"RTN","DGPTDRG",121,0)
 N X,Y,DIR,DUOUT,DTOUT,DIRUT,DIROUT,DGPOA,DA
"RTN","DGPTDRG",122,0)
 S DIR(0)="45,82.01"
"RTN","DGPTDRG",123,0)
 S DIR("A")=$S(+$G(CNT)=0:"POA FOR PRINCIPAL diagnosis",1:"POA FOR SECONDARY diagnosis "_+$G(CNT))
"RTN","DGPTDRG",124,0)
 S DIR("B")="Y"
"RTN","DGPTDRG",125,0)
 D ^DIR K DIR
"RTN","DGPTDRG",126,0)
 S DGPOA=$$POA^DGPTFD(Y)
"RTN","DGPTDRG",127,0)
 Q DGPOA
"RTN","DGPTDRG",128,0)
 ;
"RTN","DGPTDRG",129,0)
OP() ; -- asks Operation Procedure code.
"RTN","DGPTDRG",130,0)
 N DIR,DUOUT,DTOUT,DIRUT,DIROUT,DGPOA,DA,DGI,PROMPT,TERM
"RTN","DGPTDRG",131,0)
 S TERM="PROC"
"RTN","DGPTDRG",132,0)
 W !
"RTN","DGPTDRG",133,0)
 I $G(DGDAT)="" S DGDAT=DT
"RTN","DGPTDRG",134,0)
 S DGI=1
"RTN","DGPTDRG",135,0)
 S PROMPT="Enter Operation/Procedure "_$$DISP()_": "
"RTN","DGPTDRG",136,0)
 S DGDRGDT=DGDAT
"RTN","DGPTDRG",137,0)
 F DGI=1:1:25 D PROC^DGPTFIC Q:$G(X)["^"!($G(X)="")  D
"RTN","DGPTDRG",138,0)
 . I +Y>0,($P(Y,U,10)'=0) S DGSURG=+Y_"^"_$G(DGSURG)
"RTN","DGPTDRG",139,0)
 . S:$P(Y,U,10)'=0 DGSURG(DGI)=$P(Y,U,2)_U_$P(Y,U,5)
"RTN","DGPTDRG",140,0)
 ; added next line for DG*5.3*441
"RTN","DGPTDRG",141,0)
 S DGSURG=U_$G(DGSURG)
"RTN","DGPTDRG",142,0)
 Q
"RTN","DGPTDRG",143,0)
NEWOUT ;
"RTN","DGPTDRG",144,0)
 D HOME^%ZIS
"RTN","DGPTDRG",145,0)
 S DGTMP=DGDX,DGDRGPRT=1,(DGPG,DGQ)=0,$P(DGLN,"=",81)="" D HDR
"RTN","DGPTDRG",146,0)
 D ^DGPTICD ;S DGDX=$P(DGDX,"^",2,99)_"^"_$P(DGDX,"^")
"RTN","DGPTDRG",147,0)
 W !!
"RTN","DGPTDRG",148,0)
 ;D CONT:$E(IOST,1,2)="C-"
"RTN","DGPTDRG",149,0)
Q2 K AGE,NAME,SEX,DGDMS,DGDRGPRT,DGDX,DGEXP,DGSURG,DGTRS,DGLN,DGPG,DGQ,DGTMP,DGX,DGPTODR,I,Y
"RTN","DGPTDRG",150,0)
 Q
"RTN","DGPTDRG",151,0)
 ;
"RTN","DGPTDRG",152,0)
HDR ;print heading
"RTN","DGPTDRG",153,0)
 S DGPG=$G(DGPG)+1 W:$Y>0 @IOF,"DRG Calculation",?45,"Date: " S Y=DT X ^DD("DD") W Y,"  Page: ",DGPG,!!
"RTN","DGPTDRG",154,0)
 S Y=DGDAT D DD^%DT ; Y = external format of effective date
"RTN","DGPTDRG",155,0)
 W "Effective Date: ",Y,! I NAME]"" W "Patient: ",NAME,?40
"RTN","DGPTDRG",156,0)
 W "Sex: ",$S(SEX="M":"Male",1:"Female"),?61,"Age: ",AGE,!,"Expired: ",$S(DGEXP:"Yes",1:"No"),?18,"Transferred to Acute Care: ",$S(DGTRS:"Yes",1:"No"),?55,"Irreg D/C: ",$S(DGDMS:"Yes",1:"No")
"RTN","DGPTDRG",157,0)
 W !!,"Diagnosis Codes:"
"RTN","DGPTDRG",158,0)
 F I=0:0 S I=$O(DGDX(I)) Q:I'>0  W !,$J($P(DGDX(I),"^"),8),"  ",$P(DGDX(I),"^",2) I $G(DGDXPOA)'="" D
"RTN","DGPTDRG",159,0)
 . W:DGTERMIN="10D" "  (POA="_$P(DGDXPOA,"^",I)_")"
"RTN","DGPTDRG",160,0)
 ;
"RTN","DGPTDRG",161,0)
 I $D(DGSURG) W !!,"Operation/Procedure Codes:" F I=0:0 S I=$O(DGSURG(I)) Q:I'>0  W !,$J($P(DGSURG(I),"^"),8),"  ",$P(DGSURG(I),"^",2)
"RTN","DGPTDRG",162,0)
 Q
"RTN","DGPTDRG",163,0)
CONT I $Y+8>IOSL R !!?20,"Press <RET> to continue or ""^"" to EXIT ",DGQ:DTIME S:'$T DGQ="^" Q:DGQ["^"
"RTN","DGPTDRG",164,0)
 Q
"RTN","DGPTF099")
0^84^B12766033
"RTN","DGPTF099",1,0)
DGPTF099 ;ALB/MTC,HIOFO/FT - TRANSMIT DELETE PTF MASTER RECORD ;5/20/15 5:19pm
"RTN","DGPTF099",2,0)
 ;;5.3;Registration;**884**;Aug 13, 1993;Build 31
"RTN","DGPTF099",3,0)
 ;
"RTN","DGPTF099",4,0)
 ; VATRAN - #1011
"RTN","DGPTF099",5,0)
 ; XMD - #10070
"RTN","DGPTF099",6,0)
 ; VASITE - #10112
"RTN","DGPTF099",7,0)
 ; ^DPT - #10035
"RTN","DGPTF099",8,0)
 ; %ZIS - #10086
"RTN","DGPTF099",9,0)
 ; XLFSTR - #10104
"RTN","DGPTF099",10,0)
 ;
"RTN","DGPTF099",11,0)
EN ;099 Transmission [DG PTF 099 TRANSMISSION]
"RTN","DGPTF099",12,0)
 D INIT G QUIT:DGOUT W !!
"RTN","DGPTF099",13,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="Do you wish to send a free-form 099"
"RTN","DGPTF099",14,0)
 D ^DIR K DIR G QUIT:$D(DTOUT)!($D(DUOUT))
"RTN","DGPTF099",15,0)
 I Y W ! D EN1^DGPTF09X G ENQ
"RTN","DGPTF099",16,0)
ASK W !! S DIC("A")="Enter 099 "_$P(DGRTY0,U)_" record: ",DIC="^DGP(45.84,",DIC(0)="AEQMZ",DIC("S")="I $D(^DGP(45.83,""C"",+Y)),$D(^DGPT(+Y,0)),$P(^(0),U,11)="_+DGRTY D ^DIC K DIC G QUIT:X=""!(X[U),NOT:Y'>0 S DGA=+Y
"RTN","DGPTF099",17,0)
 I DGRTY=2 S DGPTIFN=DGA D CHK^DGPTFDEL G QUIT:'DGPTIFN
"RTN","DGPTF099",18,0)
 S DIC="^DGPT(",X=DGA,DIC(0)="NME" W ! D ^DIC
"RTN","DGPTF099",19,0)
 S VATNAME="PTF125" D ^VATRAN G QUIT:VATERR
"RTN","DGPTF099",20,0)
OK W !,"REOPEN & TRANSMIT 099" S %=2 D YN^DICN
"RTN","DGPTF099",21,0)
 I '% W !!?15,"Enter <RET> to exit routine",!?10,"Enter 'Y' for YES to REOPEN & TRANSMIT",! G OK
"RTN","DGPTF099",22,0)
 G ASK:%=2,QUIT:%'=1 S (DA,DGD)=+$O(^DGP(45.83,"C",DGA,0))
"RTN","DGPTF099",23,0)
 I $D(^DGP(45.83,DGD,"P",DGA,0)),'$P(^(0),U,2) G NOTRAN
"RTN","DGPTF099",24,0)
 S DIK="^DGP(45.83,DGD,""P"",",DA(1)=DGD,DA=DGA D ^DIK
"RTN","DGPTF099",25,0)
 I '$O(^DGP(45.83,DGD,"P",0)) S DIK="^DGP(45.83,",DA=DGD D ^DIK
"RTN","DGPTF099",26,0)
 D BUL,LOG W !,"****** 099 TRANSACTION SENT ******"
"RTN","DGPTF099",27,0)
 S DGPTIFN=DGA D OPEN^DGPTFDEL
"RTN","DGPTF099",28,0)
ENQ G EN
"RTN","DGPTF099",29,0)
 ;
"RTN","DGPTF099",30,0)
BUL ;
"RTN","DGPTF099",31,0)
 S DGINFO=^DGPT(DGA,0),SSN=$P(^DPT(+DGINFO,0),U,9),DGADM=$P($P(DGINFO,U,2),".",1),DGXX="",$P(DGXX," ",241)=""
"RTN","DGPTF099",32,0)
 S DGHEAD="N099"_$S($E(SSN,10)="P":"P",1:" ")_$E(SSN,1,9)
"RTN","DGPTF099",33,0)
 S DGHEAD=DGHEAD_$E(DGADM,4,5)_$E(DGADM,6,7)_$E(DGADM,2,3)_$E($P($P(DGINFO,U,2),".",2)_"0000",1,4)
"RTN","DGPTF099",34,0)
 S DGHEAD=DGHEAD_$J($P(DGINFO,U,3),3)_$E($P(DGINFO,U,5)_"   ",1,3),^UTILITY($J,"T099",1,1,1,0)=$E(DGHEAD_DGXX,1,240)
"RTN","DGPTF099",35,0)
 S ^UTILITY($J,"T099",1,1,2,0)=$$REPEAT^XLFSTR(" ",144)
"RTN","DGPTF099",36,0)
TRAN ;
"RTN","DGPTF099",37,0)
 K XMY D ROUTER^DGPTFTR S XMSUB="PTF 099",XMTEXT="^UTILITY("_$J_",""T099"",1,1," D ^XMD
"RTN","DGPTF099",38,0)
 Q
"RTN","DGPTF099",39,0)
LOG ;-- ptf transaction request log
"RTN","DGPTF099",40,0)
 S DIC="^DGP(45.87,",DIC(0)="L" K DO,DD D NOW^%DTC S X=% D FILE^DICN K DIC,DO
"RTN","DGPTF099",41,0)
 G LOGQ:Y<0 S DA=+Y
"RTN","DGPTF099",42,0)
 S DIE="^DGP(45.87,",DR=".02////"_DUZ_";.04////N099;.05////"_SSN_";.06////"_$P(DGINFO,"^",2)_";.03////"_XMZ_";.08////"_$E($P($$SITE^VASITE,U,3)_"     ",1,6)_";.07////"_$J($P(DGINFO,U,3),3)_$E($P(DGINFO,U,5)_"   ",1,3)
"RTN","DGPTF099",43,0)
 D ^DIE
"RTN","DGPTF099",44,0)
 K DIE,DR
"RTN","DGPTF099",45,0)
LOGQ Q
"RTN","DGPTF099",46,0)
 ;
"RTN","DGPTF099",47,0)
QUIT ;
"RTN","DGPTF099",48,0)
 L -^DGP(45.83)
"RTN","DGPTF099",49,0)
 K DIE,DR,^UTILITY($J),DA,DUOUT,DTOUT,DGOUT,DGA,DGA1,DFN,DGT,DGX,DFN,DGADM,DGD,DGHEAD,DGINFO,DGJ,DGXX,DIC,DIK,SSN,X,Y,%,XMDUZ,XMSUB,XMTEXT,XMY,XMZ,DGRTY,DGRTY0,DGPTIFN,DGPTFMT,VATNAME,VATERR,VAT,DGSDI Q
"RTN","DGPTF099",50,0)
NOT W !,"RECORD HAS NOT BEEN CLOSED YET!",! K DIC G ASK
"RTN","DGPTF099",51,0)
NOTRAN W !,"RECORD HAS NOT BEEN TRANSMITTED YET",! K DIC G ASK
"RTN","DGPTF099",52,0)
 ;
"RTN","DGPTF099",53,0)
INIT ;
"RTN","DGPTF099",54,0)
 D LO^DGUTL,HOME^%ZIS S DGOUT=0
"RTN","DGPTF099",55,0)
 L +^DGP(45.83):5 I '$T W !,"Cannot transmit 099 while transmitting other records",! S DGOUT=1 G INITQ
"RTN","DGPTF099",56,0)
 I '$D(DGRTY) S Y=1 D RTY^DGPTUTL
"RTN","DGPTF099",57,0)
INITQ Q
"RTN","DGPTF09X")
0^85^B8106091
"RTN","DGPTF09X",1,0)
DGPTF09X ;ALB/MTC,HIOFO/FT - TRANSMIT DELETE PTF MASTER RECORD ;5/26/15 4:27pm
"RTN","DGPTF09X",2,0)
 ;;5.3;Registration;**58,884**;Aug 13, 1993;Build 31
"RTN","DGPTF09X",3,0)
 ;
"RTN","DGPTF09X",4,0)
 ; VATRAN - #1011
"RTN","DGPTF09X",5,0)
 ; VASITE - #10112
"RTN","DGPTF09X",6,0)
 ; XLFSTR - #10104
"RTN","DGPTF09X",7,0)
 ;
"RTN","DGPTF09X",8,0)
EN ; -- generic 099 call
"RTN","DGPTF09X",9,0)
 D INIT^DGPTF099 G ENQ:DGOUT
"RTN","DGPTF09X",10,0)
 F DGLOOP=0:0 D EN1,CONT Q:DGOUT
"RTN","DGPTF09X",11,0)
 K DGLOOP
"RTN","DGPTF09X",12,0)
 G ENQ
"RTN","DGPTF09X",13,0)
EN1 ; -- init already done
"RTN","DGPTF09X",14,0)
 D SETUP G ENQ:DGOUT
"RTN","DGPTF09X",15,0)
 S DIC="^DGP(45.87,",DIC(0)="L" K DO,DD D NOW^%DTC S X=% D FILE^DICN K DIC,DO
"RTN","DGPTF09X",16,0)
 G ENQ:Y<0 S (DGDA,DA)=+Y
"RTN","DGPTF09X",17,0)
EDIT S DGPAT=$P(^DGP(45.87,DGDA,0),U,9)
"RTN","DGPTF09X",18,0)
 F DGI=0:0 S DA=DGDA,DIE="^DGP(45.87,",DR="[DGPT 099]" D ^DIE,CHKFLD^DGPTRPO Q:'DGOUT  D ASK^DGPTRPO I DGOUT D DEL^DGPTRPO G ENQ
"RTN","DGPTF09X",19,0)
SEND S DGOUT=0,DIR(0)="Y",DIR("A")="Ok to Send "_DGCTL,DIR("B")="YES"
"RTN","DGPTF09X",20,0)
 D ^DIR I $D(DIRUT)!(Y=0) D ASK^DGPTRPO G EDIT:'DGOUT I DGOUT D DEL^DGPTRPO G ENQ
"RTN","DGPTF09X",21,0)
 I Y K X D
"RTN","DGPTF09X",22,0)
 .S $P(X," ",241)=""
"RTN","DGPTF09X",23,0)
 .S:$E(DGSSN,10)="P" DGSSN="P"_$E(DGSSN,1,9)
"RTN","DGPTF09X",24,0)
 .S ^UTILITY($J,"T099",1,1,1,0)=$E(DGCTL_$J(DGSSN,10)_$J(DGADM,10)_$J(DGRFAC,6)_X,1,240)
"RTN","DGPTF09X",25,0)
 .S ^UTILITY($J,"T099",1,1,2,0)=$$REPEAT^XLFSTR(" ",144)
"RTN","DGPTF09X",26,0)
 .D TRAN^DGPTF099
"RTN","DGPTF09X",27,0)
 .W !,"***** 099 TRANSACTION SENT *****"
"RTN","DGPTF09X",28,0)
 .S DIE="^DGP(45.87,",DA=DGDA,DR=".03////"_XMZ D ^DIE
"RTN","DGPTF09X",29,0)
 .K DA,XMZ,DIE,DR
"RTN","DGPTF09X",30,0)
ENQ K %,DGRTY,DGRFAC,DGTADM,DGPAT,DGINST,DGFNAM,DGNAME,DGCTL,DGADM,DA,DGDA,DGRPO,DIR,DIE,DIK,X,Y,DGOUT,DIRUT,XMTEXT,XMSUB,XMDUZ,DGSSN,DGFAC,DIC,DR,DD,DO,DGI,DQ,DB,DE
"RTN","DGPTF09X",31,0)
 Q
"RTN","DGPTF09X",32,0)
HD099 ;-- header for 099 transaction. called from [DGPT 099] input template
"RTN","DGPTF09X",33,0)
 W @IOF,$C(13),?10,">>> Facsimile of 099 Transaction <<<"
"RTN","DGPTF09X",34,0)
 W:DGNAME]"" !,"Patient : ",DGNAME
"RTN","DGPTF09X",35,0)
 S:$E(DGSSN,10)="P" DGSSN="P"_$E(DGSSN,1,9)
"RTN","DGPTF09X",36,0)
 W !!,?9,"'",$J(DGCTL,4),"' '",$J(DGSSN,10),"' '",$J(DGADM,10),"' '",$J(DGRFAC,6),"'"
"RTN","DGPTF09X",37,0)
 W !?2,"col# :"
"RTN","DGPTF09X",38,0)
 W ?10,"1--4   5--------1   1--------2   2----3",!
"RTN","DGPTF09X",39,0)
 W ?10,"                4   5        4   5    0",!
"RTN","DGPTF09X",40,0)
 W !?2,"block:"
"RTN","DGPTF09X",41,0)
 W ?10,"       SSN          Admitting    Requesting",!
"RTN","DGPTF09X",42,0)
 W ?10,"                    Date/Time    Facility",!
"RTN","DGPTF09X",43,0)
 W ?10,"                                 Num/Suffix",!!
"RTN","DGPTF09X",44,0)
 Q
"RTN","DGPTF09X",45,0)
 ;
"RTN","DGPTF09X",46,0)
CONT ;-- ask the user if they want to do another
"RTN","DGPTF09X",47,0)
 S DGOUT=0
"RTN","DGPTF09X",48,0)
 S DIR(0)="Y",DIR("A")="Would you like to do another 099 transaction",DIR("B")="NO"
"RTN","DGPTF09X",49,0)
 D ^DIR
"RTN","DGPTF09X",50,0)
 I $D(DIRUT)!(Y=0) S DGOUT=1
"RTN","DGPTF09X",51,0)
CONTQ K DIR
"RTN","DGPTF09X",52,0)
 Q
"RTN","DGPTF09X",53,0)
 ;
"RTN","DGPTF09X",54,0)
SETUP S DGOUT=0,VATNAME="PTF125" D ^VATRAN I VATERR S DGOUT=1 G SETQ
"RTN","DGPTF09X",55,0)
 S (DGPAT,DGINST,DGADM,DGSSN,DGTADM,DGFAC,DGFNAM,DGNAME)="",DGRFAC=$E($P($$SITE^VASITE,U,3)_"      ",1,6),DGCTL="N099"
"RTN","DGPTF09X",56,0)
SETQ K VATERR,VATNAME
"RTN","DGPTF09X",57,0)
 Q
"RTN","DGPTF09X",58,0)
 ;
"RTN","DGPTF1")
0^66^B35051519
"RTN","DGPTF1",1,0)
DGPTF1 ;ALB/JDS/PLT - PTF ENTRY/EDIT ;5/17/05 3:29pm
"RTN","DGPTF1",2,0)
 ;;5.3;Registration;**69,114,195,397,342,415,565,664,884**;Aug 13, 1993;Build 31
"RTN","DGPTF1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPTF1",4,0)
 ;
"RTN","DGPTF1",5,0)
 I '$D(IOF) S IOP="HOME" D ^%ZIS K IOP
"RTN","DGPTF1",6,0)
 S:'$D(IOST) IOST="C" S DGVI="""""",DGVO=DGVI I $D(IOST(0)) S:$D(^%ZIS(2,IOST(0),5)) I=^(5) S:$L($P(I,U,4)) DGVI=$P(I,U,4) S:$L($P(I,U,5)) DGVO=$P(I,U,5) I $L(DGVI_DGVO)>4 S X=132 X ^%ZOSF("RM")
"RTN","DGPTF1",7,0)
WR G GET:'$D(A)!('$D(B)) W @IOF,HEAD,?72,@DGVI,"<101>",@DGVO
"RTN","DGPTF1",8,0)
FAC W ! I $D(DGCST) S:$G(DGCN) X=$G(^DG(45.86,DGCN,0)) W ?37,"Census " W:$G(DGCN) "Date: ",$E(X,4,5),"/",$E(X,6,7),"/",$E(X,2,3),"  " W "Status: ",$$EXTERNAL^DILFD(45,6,,+DGCST)
"RTN","DGPTF1",9,0)
 W ! S Z=1 D Z W "   Facility: " S Z=$P(B(0),U,3)_$P(B(0),U,5),Z1=23 D Z1
"RTN","DGPTF1",10,0)
MAR S Z=2 D Z W " Marit Stat: ",$S($D(^DIC(11,+$P(A(0),U,5),0)):$P(^(0),U,1),1:"")
"RTN","DGPTF1",11,0)
SA W !," Source of Adm: ",$S($D(^DIC(45.1,+B(101),0)):$P(^(0),U,5),1:"")
"RTN","DGPTF1",12,0)
 N VADM D DEM^VADPT
"RTN","DGPTF1",13,0)
 W ?39,"Ethnic: " D
"RTN","DGPTF1",14,0)
 .I 'VADM(11) W "" Q
"RTN","DGPTF1",15,0)
 .N NODE,NUM,ETHNIC,I
"RTN","DGPTF1",16,0)
 .S I=0
"RTN","DGPTF1",17,0)
 .F NUM=0:1 S I=+$O(VADM(11,I)) Q:'I  D
"RTN","DGPTF1",18,0)
 ..S X=$$PTR2CODE^DGUTL4(+VADM(11,I),2,4)
"RTN","DGPTF1",19,0)
 ..S ETHNIC=$S(X="":"?",1:X)
"RTN","DGPTF1",20,0)
 ..S X=$$PTR2CODE^DGUTL4(+$G(VADM(11,I,1)),3,4)
"RTN","DGPTF1",21,0)
 ..S ETHNIC=ETHNIC_$S(X="":"?",1:X)
"RTN","DGPTF1",22,0)
 ..I NUM S ETHNIC=","_ETHNIC
"RTN","DGPTF1",23,0)
 ..W ETHNIC
"RTN","DGPTF1",24,0)
 W ?55,"Race: " D
"RTN","DGPTF1",25,0)
 .I 'VADM(12) W "" Q
"RTN","DGPTF1",26,0)
 .N NODE,NUM,RACE,I
"RTN","DGPTF1",27,0)
 .S I=0
"RTN","DGPTF1",28,0)
 .F NUM=0:1 S I=+$O(VADM(12,I)) Q:'I  D
"RTN","DGPTF1",29,0)
 ..S X=$$PTR2CODE^DGUTL4(+VADM(12,I),1,4)
"RTN","DGPTF1",30,0)
 ..S RACE=$S(X="":"?",1:X)
"RTN","DGPTF1",31,0)
 ..S X=$$PTR2CODE^DGUTL4(+$G(VADM(12,I,1)),3,4)
"RTN","DGPTF1",32,0)
 ..S RACE=RACE_$S(X="":"?",1:X)
"RTN","DGPTF1",33,0)
 ..I NUM S RACE=","_RACE
"RTN","DGPTF1",34,0)
 ..W RACE
"RTN","DGPTF1",35,0)
 K VADM
"RTN","DGPTF1",36,0)
 W !," Source of Pay: ",$$EXTERNAL^DILFD(45,22,,$P(B(101),U,3))
"RTN","DGPTF1",37,0)
SEX S SEX=$P(A(0),U,2) W ?39,"           Sex: ",$S(SEX="M":"MALE",SEX="F":"FEMALE",1:"")
"RTN","DGPTF1",38,0)
 W !,"Trans Facility: ",$P(B(101),U,5)_$P(B(101),U,6)
"RTN","DGPTF1",39,0)
DOB S DOB=$P(A(0),U,3),Y=DOB D D^DGPTUTL W ?39," Date of Birth: ",Y
"RTN","DGPTF1",40,0)
CAT I DGPTFMT<2 W !,"    Cat of Ben: ",$S($D(^DIC(45.82,+$P(B(101),U,4),0)):$E($P(^(0),U,2),1,26),1:"")
"RTN","DGPTF1",41,0)
 W:$X>50 !
"RTN","DGPTF1",42,0)
 W "    Admit Elig: "_$S(+$P(B(101),U,8):$P($G(^DIC(8,+$P(B(101),U,8),0)),U),1:"UNKNOWN") W ?50,"SCI: ",$$EXTERNAL^DILFD(2,57.4,,$P(A(57),U,4))
"RTN","DGPTF1",43,0)
VIET W ! S Z=3 D Z W "Vietnam SRV: " S L=$P(A(.321),U,1),Z=$S(L="Y":"YES",L="N":"NO",1:"UNKNOWN"),Z1=27 D Z1
"RTN","DGPTF1",44,0)
ST S Z=4 D Z W $S('$$FORIEN^DGADDUTL($P(A(.11),U,10))!('$P(A(.11),U,10)):"  State: "_$S($D(^DIC(5,+$P(A(.11),U,5),0)):$P(^(0),U,1),1:""),1:"Country: "_$$CNTRYI^DGADDUTL($P(A(.11),U,10)))
"RTN","DGPTF1",45,0)
POW W !?11,"POW: " S L=$P(A(.52),U,5) W $S(L="Y":"YES",L="N":"NO",1:"UNKNOWN")
"RTN","DGPTF1",46,0)
ZIP W ?42,$S('$$FORIEN^DGADDUTL($P(A(.11),U,10))!('$P(A(.11),U,10)):"   Zip Code: "_$P(A(.11),U,6),1:"Postal Code: "_$P(A(.11),U,9))
"RTN","DGPTF1",47,0)
POS W !,?6," POW SRV: " S L=$P(A(.52),U,6) W $E($S($D(^DIC(22,+L,0)):$P(^(0),U,1),1:""),1,23)
"RTN","DGPTF1",48,0)
COU W ?45,$S('$$FORIEN^DGADDUTL($P(A(.11),U,10))!('$P(A(.11),U,10)):"  County: "_$S($D(^DIC(5,+$P(A(.11),U,5),1,+$P(A(.11),U,7),0)):$P(^(0),U,1),1:""),1:"Province: "_$P(A(.11),U,8))
"RTN","DGPTF1",49,0)
ION W !,"   Ion Rad Exp: " S L=$P(A(.321),U,3) W $S(L="Y":"YES",L="N":"NO",1:"UNKNOWN")
"RTN","DGPTF1",50,0)
METH S L=$P(A(.321),U,12) W:L'="" ?38,"Exposure Method: ",$S(L="N":"Nagasaki/Hiroshima",L="T":"Nuclear Testing",L="B":"Both",1:"")
"RTN","DGPTF1",51,0)
AO W !,"    AO Exp/Loc: " S L=$P(A(.321),U,2) W $S(L="Y":"YES",L="N":"NO",1:"UNKNOWN")
"RTN","DGPTF1",52,0)
 S L=$P(A(.321),U,13) W:L'="" $S(L="V":"/VIET",L="K":"/DMZ",L="O":"/OTHER",1:"")
"RTN","DGPTF1",53,0)
SHAD W ?40,"PROJ 112/SHAD: ",$S(A("SHAD")=1:"YES",1:"NO")
"RTN","DGPTF1",54,0)
MST W !,"    Claims MST: " S L=$P(A("MST"),U) W $S(L="Y":"YES",L="N":"NO",L="D":"DECLINED TO ANSWER",1:"UNKNOWN") ; added 6/17/98 for MST enhancement
"RTN","DGPTF1",55,0)
NTR W ?39,"    N/T Radium: " S L=A("NTR") W $E($S(L'="":L,1:"UNKNOWN"),1,25)
"RTN","DGPTF1",56,0)
CV S L=$S($P(A("CV"),U,1)>0:1,1:0)
"RTN","DGPTF1",57,0)
 W !,"Combat Veteran: ",$S(L:"YES",1:"NO")
"RTN","DGPTF1",58,0)
 I L S Y=$P(A("CV"),U,2) D D^DGPTUTL W ?45,"End Date: ",Y
"RTN","DGPTF1",59,0)
 ;
"RTN","DGPTF1",60,0)
 D EN^DGPTF4 K A,B Q:DGPR
"RTN","DGPTF1",61,0)
 ;
"RTN","DGPTF1",62,0)
JUMP F I=$Y:1:20 W !
"RTN","DGPTF1",63,0)
 G 101^DGPTFJC:DGN S (DGZM0,DGZS0)=0
"RTN","DGPTF1",64,0)
 R "Enter:  <RET> for <MAS>,",!,"1-7 to edit,'^N' for screen N, or '^' to abort: <MAS>// ",X:DTIME S:'$T X="^",DGPTOUT=""
"RTN","DGPTF1",65,0)
 G ^DGPTFM:X="",Q:X="^"
"RTN","DGPTF1",66,0)
 I X?1"^".E S DGPTSCRN=101 G ^DGPTFJ
"RTN","DGPTF1",67,0)
 G PR:X?.N&($L(X)>2)
"RTN","DGPTF1",68,0)
 I X["-" S K=X,X="" F I=1:1 S J=$P(K,",",I) Q:J']""  I +J<8 S:J'["-" X=X_J_"," I J["-"&(+J) I +J<+$P(J,"-",2) F L=+J:1:+$P(J,"-",2) S:L<8 X=X_L_","
"RTN","DGPTF1",69,0)
 I X'[",",1234567'[X G PR
"RTN","DGPTF1",70,0)
 F I=1:1 S J=$P(X,",",I) Q:'J  G:J<1!(J>7)!(J'?1N) PR
"RTN","DGPTF1",71,0)
 I X<1!(X>7) G PR
"RTN","DGPTF1",72,0)
 S (PT(1),PT(2))="",DGJUMP=X,DA=PTF,DIE="^DGPT(",DR="[DG101"_$E("F",DGPTFE)_"]" D ^DIE
"RTN","DGPTF1",73,0)
 ;--
"RTN","DGPTF1",74,0)
 N DGPMCA,DGPMAN D PM^DGPTUTL
"RTN","DGPTF1",75,0)
 I '$G(DGADM) S DGADM=+^DGPT(PTF,0)
"RTN","DGPTF1",76,0)
 D MT^DGPTUTL
"RTN","DGPTF1",77,0)
GET F I=.32,.52,57,.521,0,.321,.11,.3 S A(I)="" S:$D(^DPT(DFN,I))&('DGST) A(I)=^(I) I DGN S:$D(^DGP(45.84,PTF,$S('I:10,1:I))) A(I)=^($S('I:10,1:I))
"RTN","DGPTF1",78,0)
 ; The following line added for MST enhancement 4/21/99
"RTN","DGPTF1",79,0)
 S A("MST")=$P($$GETSTAT^DGMSTAPI(DFN),U,2,5)
"RTN","DGPTF1",80,0)
 K DGNTARR
"RTN","DGPTF1",81,0)
 S A("NTR")=$S($$GETCUR^DGNTAPI(DFN,"DGNTARR")>0:DGNTARR("INTRP"),1:"")
"RTN","DGPTF1",82,0)
 K DGNTARR
"RTN","DGPTF1",83,0)
 F I=0,101,70 S B(I)="" S:$D(^DGPT(PTF,I)) B(I)=^(I)
"RTN","DGPTF1",84,0)
 S DGDD=+B(70),DGFC=+$P(B(0),U,3)
"RTN","DGPTF1",85,0)
 S A("CV")=$$CVEDT^DGCV(DFN,$P($G(B(0)),U,2))
"RTN","DGPTF1",86,0)
 S A("SHAD")=$$GETSHAD^DGUTL3(DFN)
"RTN","DGPTF1",87,0)
 K PT G DGPTF1
"RTN","DGPTF1",88,0)
PR W !,"Enter '^' to stop the display and edit of data",!,"'^N' to jump to screen #N (screen # appears in upper right of screen '<N>')",!,"<RET> to continue on to the next screen or 1-7 to edit:"
"RTN","DGPTF1",89,0)
 W !?10,"1-Facility, Source of admis, Payment, Transf facil, and Cat. of Benef",!?10,"2-Marital Stat, Race, Ethnicity, Sex, SCI, DOB"
"RTN","DGPTF1",90,0)
 W !?10,"3-Agent Orange, Prisoner of War, Ionizing Radiation, MST, N/T Radium",!?10,"4-State, County, Zip code"
"RTN","DGPTF1",91,0)
 W !?10,"5-Discharge date, type & specialty",!?10,"6-Outpatient treat & VA Auspices",!?10,"7-Receiving Facility, ASIH Days & C&P Status"
"RTN","DGPTF1",92,0)
 W !,"You may also enter any combination of the above, separated by commas(ex:1,3,5)",!
"RTN","DGPTF1",93,0)
 R !!,"Enter <RET> : ",X:DTIME G WR
"RTN","DGPTF1",94,0)
Q G Q^DGPTF
"RTN","DGPTF1",95,0)
 Q
"RTN","DGPTF1",96,0)
Z I 'DGN S Z=$S(IOST="C-QUME"&($L(DGVI)'=2):Z,1:"["_Z_"]") W @DGVI,Z,@DGVO
"RTN","DGPTF1",97,0)
 E  W "   "
"RTN","DGPTF1",98,0)
 Q
"RTN","DGPTF1",99,0)
Z1 F I=1:1:(Z1-$L(Z)) S Z=Z_" "
"RTN","DGPTF1",100,0)
 W Z
"RTN","DGPTF2")
0^74^B26229374
"RTN","DGPTF2",1,0)
DGPTF2 ;ALB/JDS,HIOFO/FT,WIOFO/PMK - PTF CORRECTIONS ;3/19/2015 3:43 pm
"RTN","DGPTF2",2,0)
 ;;5.3;Registration;**37,342,643,861,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTF2",3,0)
 ;
"RTN","DGPTF2",4,0)
 ; XUSEC APIs - 10076
"RTN","DGPTF2",5,0)
 ; %ZOSF APIs - 10096
"RTN","DGPTF2",6,0)
 ; %ZIS APIs - 10086
"RTN","DGPTF2",7,0)
 ; %ZISC APIs - 10089
"RTN","DGPTF2",8,0)
 ;
"RTN","DGPTF2",9,0)
EN ;This code allows the user to edit some PTF record fields.
"RTN","DGPTF2",10,0)
 ;The transmission building code builds each segment (e.g., 101) and validates the data in that segment string.
"RTN","DGPTF2",11,0)
 ;Some errors are flagged and noted in the ^UTILITY("DG",$J) global. This global identifies the fields the user can edit.
"RTN","DGPTF2",12,0)
 ;For each segment (e.g., 101), the string of fields that can be edited are in the DGL variable.
"RTN","DGPTF2",13,0)
 ;The DGL value is determined by the value of the DGPTFMT variable which is either 1, 2, or 3.
"RTN","DGPTF2",14,0)
 ;DGPTFMT is set in the calling routine(s).
"RTN","DGPTF2",15,0)
 ;DGPTFMT=3 means the site is using ICD10 codes/record format.
"RTN","DGPTF2",16,0)
 ;DGPTFMT=2 means the site is using ICD9 codes/record format.
"RTN","DGPTF2",17,0)
 ;DGPTFMT=1 means the site is using something prior to ICD9 codes/record format
"RTN","DGPTF2",18,0)
 ;
"RTN","DGPTF2",19,0)
 I DGPTFMT'=1,DGPTFMT'=2,DGPTFMT'=3 Q  ; not valid parameter value - pmk 3/19/2015
"RTN","DGPTF2",20,0)
 Q:'$D(^UTILITY("DG",$J))  ;^UTILITY is set in DGPTR1, DGPTRI1, DGPTFTR1, DGPTFVC2
"RTN","DGPTF2",21,0)
 S Q=0,DG2=""
"RTN","DGPTF2",22,0)
 F DG9=101,401,501,701,601,"HEADER" D @DG9 F I1=0:0 S I1=$O(^UTILITY("DG",$J,DG9,I1)) Q:I1'>0!(Q)  S DG45="",DGJ=^(I1) F J=2:1 S K=$P(DGJ,U,J) Q:'K  D SET Q:Q  I '$P(DGJ,U,J+1) D @($S(DG9=401!(DG9=501)!(DG9=601):"D5",1:"DO1")) Q:Q
"RTN","DGPTF2",23,0)
 ;
"RTN","DGPTF2",24,0)
Q D DO:'Q
"RTN","DGPTF2",25,0)
 K DG9,I1,DR,DG45,DG2,DGJ,Q,M,L,^UTILITY("DG",$J)
"RTN","DGPTF2",26,0)
 Q
"RTN","DGPTF2",27,0)
SET ;
"RTN","DGPTF2",28,0)
 S L=$P(DGL,U,K) I DGPTFE!('$P(L,"*",3)) S M="DG"_$P(L,"*",2) I @M'[($P(L,"*",1)_";") S @M=@M_$P(L,"*",1)_";"
"RTN","DGPTF2",29,0)
 Q
"RTN","DGPTF2",30,0)
 ; -- DGL sets
"RTN","DGPTF2",31,0)
101 ;
"RTN","DGPTF2",32,0)
 I DGPTFMT<2 S DGL=".01*2^20*45^21.1;21.2*45^22*45^.526*2^.05*2^.02*2^.03*2^23*45^.32103;.32102;.3212*2^.115;.117;.1112*2^10*45"
"RTN","DGPTF2",33,0)
 ;the following DGL set can be used when DGPTFMT=2 or 3
"RTN","DGPTF2",34,0)
 I DGPTFMT>1 S DGL=".01*2^20*45^21.1;21.2*45^22*45^.526*2^.05*2^.02*2^.03*2^.323*2^.32101;.32103;.3212;.32102;.3213*2^.115;.117;.1112*2^10*45"
"RTN","DGPTF2",35,0)
 Q
"RTN","DGPTF2",36,0)
701 ;
"RTN","DGPTF2",37,0)
 I DGPTFMT<3 S DGL="70*45*1^71*45*1^72*45*1^73*45^74*45^75*45^76.1;76.2*45^77*45^.06*2^78*45^79*45"
"RTN","DGPTF2",38,0)
 I DGPTFMT=3 S DGL="70*45*1^71*45*1^72*45*1^73*45^74*45^75*45^76.1;76.2*45^77*45^.06*2^78*45^79;82.01*45"
"RTN","DGPTF2",39,0)
 Q
"RTN","DGPTF2",40,0)
401 ;
"RTN","DGPTF2",41,0)
 I DGPTFMT<3 S DGL=".01*45^3*45^4*45^5*45^6*45^7*45^8:12*45"
"RTN","DGPTF2",42,0)
 I DGPTFMT=3 S DGL=".01*45^3*45^4*45^5*45^6*45^7*45^8:32*45"
"RTN","DGPTF2",43,0)
 Q
"RTN","DGPTF2",44,0)
501 ;
"RTN","DGPTF2",45,0)
 I DGPTFMT<2 S DGL="10*45*1^2*45*1^3*45^4*45^57.4*2^5:9*45^72.1*45*1"
"RTN","DGPTF2",46,0)
 I DGPTFMT=2 S DGL="10*45*1^2*45*1^2*45*1^3*45^4*45^57.4*2^5:9*45^^^^72.1*45*1"
"RTN","DGPTF2",47,0)
 I DGPTFMT=3 S DGL="10*45*1^2*45*1^2*45*1^3*45^4*45^57.4*2^5:9;11:15;81.01:81.15*45^^^^72.1*45*1"
"RTN","DGPTF2",48,0)
 ;OR
"RTN","DGPTF2",49,0)
 ;I DGPTFMT=3 S DGL="10*45*1^2*45*1^???*45*1^3*45*1^4*45*1^57.4*2^5:9;11:15;81.01:81.15*45^^^^72.1*45"
"RTN","DGPTF2",50,0)
 Q
"RTN","DGPTF2",51,0)
601 ;
"RTN","DGPTF2",52,0)
 I DGPTFMT<3 S DGL=".01*45^1*45^^^4:9*45"
"RTN","DGPTF2",53,0)
 I DGPTFMT=3 S DGL=".01*45^1*45^^^4:28*45"
"RTN","DGPTF2",54,0)
 Q
"RTN","DGPTF2",55,0)
HEADER ;
"RTN","DGPTF2",56,0)
 S DGL=".09*2^2*45*1^3*45*1"
"RTN","DGPTF2",57,0)
 Q
"RTN","DGPTF2",58,0)
 ;
"RTN","DGPTF2",59,0)
DO ;
"RTN","DGPTF2",60,0)
 I DG2]"" W !!,"Editing patient information:" S DIE="^DPT(",DR=DG2,DA=+^DGPT(PTF,0) D ^DIE
"RTN","DGPTF2",61,0)
 W !!,"Exiting the correction process." H 2
"RTN","DGPTF2",62,0)
 Q
"RTN","DGPTF2",63,0)
DO1 ;
"RTN","DGPTF2",64,0)
 I DG45]"" W !!,"Editing PTF information:" S DIE="^DGPT(",DR=DG45,DA=PTF D DIE
"RTN","DGPTF2",65,0)
 Q
"RTN","DGPTF2",66,0)
D5 ;
"RTN","DGPTF2",67,0)
 G D5Q:DG45=""
"RTN","DGPTF2",68,0)
 S DIE="^DGPT(PTF,"_$S(DG9=601:"""P""",DG9=401:"""S""",1:"""M""")_",",DA(1)=PTF,DA=I1,DR=DG45
"RTN","DGPTF2",69,0)
 I $G(@(DIE_DA_",0)"))="" G D5Q
"RTN","DGPTF2",70,0)
 S Y=$G(@(DIE_DA_",0)")),Y=$P(Y,U,$S(DG9=601!(DG9=401):1,1:10)) D D^DGPTUTL
"RTN","DGPTF2",71,0)
 W !!,"Editing ",$S(DG9=601:"Procedure",DG9=401:"Surgery",1:"Movement")," of ",Y D DIE
"RTN","DGPTF2",72,0)
D5Q Q
"RTN","DGPTF2",73,0)
 ;
"RTN","DGPTF2",74,0)
DIE D ^DIE
"RTN","DGPTF2",75,0)
D Q:'$D(Y)
"RTN","DGPTF2",76,0)
D1 K DR W !,"Do you want to stop correcting" S %=1 D YN^DICN
"RTN","DGPTF2",77,0)
 I %=1!(%=-1) S Q=1 Q
"RTN","DGPTF2",78,0)
 I %=0 W !?10,"Enter 'YES' or '^' to stop making corrections",!?10,"and   'NO'         to continue making corrections" G D1
"RTN","DGPTF2",79,0)
 Q
"RTN","DGPTF2",80,0)
PRINT ;
"RTN","DGPTF2",81,0)
 W !,"Want to print error log " S %=2 D YN^DICN G PRINT:%'>0 Q:%=2
"RTN","DGPTF2",82,0)
 K IOP D ^%ZIS Q:IO']""  S Y=DT X ^DD("DD") W @IOF W !!,"Error log for PTF record ",PTF,"  "_$P(^DPT(DFN,0),U,1)_"  ",Y,!! S DGERR=-1,J=PTF D LOG^DGPTFTR D ^%ZISC
"RTN","DGPTF2",83,0)
 S IOP="" D ^%ZIS K IOP I $L(DGVO_DGVI)>4 S X=132 X ^%ZOSF("RM")
"RTN","DGPTF2",84,0)
 Q
"RTN","DGPTF2",85,0)
CLS ;called from DGPTF4
"RTN","DGPTF2",86,0)
 I $D(^DGM("PT",DFN)) W !!,"Not all messages have been cleared up for this patient--cannot close.",*7,*7 S DGPTF=DFN,X="??" K DGALL D HELP^DGPTMSGD K DGPTF G EN1:'$D(DGALL) K DGALL
"RTN","DGPTF2",87,0)
 W !,"Performing edit checks..."
"RTN","DGPTF2",88,0)
 ;-- init for Austin Edits
"RTN","DGPTF2",89,0)
 K ^TMP("AEDIT",$J),^TMP("AERROR",$J) S DGACNT=0
"RTN","DGPTF2",90,0)
 ;
"RTN","DGPTF2",91,0)
 S Y=1 D RTY^DGPTUTL
"RTN","DGPTF2",92,0)
 S J=PTF,DGERR=-1 D LOG^DGPTFTR K DGLOGIC D LO^DGUTL K T1,T2 I DGERR>0 K DGERR H 4 D DGPTF2 G EN1
"RTN","DGPTF2",93,0)
 ;
"RTN","DGPTF2",94,0)
 ;-- new Austin edit checks
"RTN","DGPTF2",95,0)
 D ^DGPTAE I DGERR>0 K DGERR D DGPTF2 G EN1
"RTN","DGPTF2",96,0)
 ;
"RTN","DGPTF2",97,0)
 K DGERR S DR=$S($P(^DGPT(PTF,0),U,7):"",1:";7////"_DUZ_";8///T"),DA=PTF,DIE="^DGPT(",DP=45 D ^DIE K DR
"RTN","DGPTF2",98,0)
 S DIC(0)="LN",(DINUM,X)=PTF,DIC="^DGP(45.84," K DD,DO D FILE^DICN K DINUM,DO,DIC
"RTN","DGPTF2",99,0)
 I Y>0 S DA=+Y,DR="2///NOW;3////"_DUZ,DIE="^DGP(45.84," D ^DIE K DR
"RTN","DGPTF2",100,0)
 K DIE,DIC
"RTN","DGPTF2",101,0)
 I '$D(^DGP(45.84,PTF)) W !,"Cannot close without proper fileman access",*7 D HANG^DGPTUTL G EN1
"RTN","DGPTF2",102,0)
 F I=0,.11,.52,.321,.32,.36,57,.3 S:$D(^DPT(DFN,I)) ^DGP(45.84,PTF,$S(I=0:10,1:I))=^DPT(DFN,I)
"RTN","DGPTF2",103,0)
 S $P(^DGP(45.84,PTF,0),U,6)=DRG
"RTN","DGPTF2",104,0)
 W !,"****** PTF CLOSED OUT ******" D HANG^DGPTUTL
"RTN","DGPTF2",105,0)
 ;DG*5.3*861 Added DGRELKEY variable to hold the value for DGREL that is killed in ^EASECU21
"RTN","DGPTF2",106,0)
 I '$G(DGREL) S DGREL=$S($D(^XUSEC("DG PTFREL",DUZ)):1,1:0)
"RTN","DGPTF2",107,0)
 I $G(DGREL) S (DGN,DGST)=1 G EN1
"RTN","DGPTF2",108,0)
 K DGRTY,DGRTY0 G Q^DGPTF
"RTN","DGPTF2",109,0)
EN1 K DGRTY,DGRTY0 G EN1^DGPTF4
"RTN","DGPTF4")
0^5^B30569279
"RTN","DGPTF4",1,0)
DGPTF4 ;ALB/JDS/PLT - PTF ENTRY/EDIT-4 ;2/19/04 9:33am
"RTN","DGPTF4",2,0)
 ;;5.3;Registration;**114,115,397,510,517,478,683,775,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTF4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPTF4",4,0)
 ;
"RTN","DGPTF4",5,0)
WR ;
"RTN","DGPTF4",6,0)
 W @IOF,HEAD,?72 S Z="<701>" D Z^DGPTFM K X S $P(X,"-",81)="" W !,X
"RTN","DGPTF4",7,0)
 Q
"RTN","DGPTF4",8,0)
EN S Y=+B(70) D D^DGPTUTL W ! S Z=5 D Z W $S($P(B(0),U,11)=1:"Date of Disch: ",1:"Census Date  : ") S Z=Y,Z1=20 D Z1 W "Disch Specialty: ",$S($D(^DIC(42.4,+$P(B(70),U,2),0)):$E($P(^(0),U,1),1,25),1:"")
"RTN","DGPTF4",9,0)
 W !,"   Type of Disch: ",$$EXTERNAL^DILFD(45,72,,$P(B(70),U,3))
"RTN","DGPTF4",10,0)
 W ?41,"Disch Status: ",$$EXTERNAL^DILFD(45,72.1,,$P(B(70),U,14))
"RTN","DGPTF4",11,0)
 W !,"   Place of Disp: ",$S($D(^DIC(45.6,+$P(B(70),U,6),0)):$E($P(^(0),U,1),1,21),1:"")
"RTN","DGPTF4",12,0)
 W ?40 S Z=6 D Z W " Out Treat: ",$P("YES^^NO",U,+$P(B(70),U,4))
"RTN","DGPTF4",13,0)
 W !?6,"Means Test: ",$$EXTERNAL^DILFD(45,10,,$P(B(0),U,10))
"RTN","DGPTF4",14,0)
 W ?42,"VA Auspices: ",$S($P(B(70),U,5)=1:"YES",$P(B(70),U,5)=2:"NO",1:"")
"RTN","DGPTF4",15,0)
 W ! S Z=7 D Z W " Receiv facil: " S Z=$P(B(70),U,12)_$P(B(70),U,13),Z1=18 D Z1 W ?38 S Z="Other Fields" D Z
"RTN","DGPTF4",16,0)
 S DGINC=$P(B(101),U,7)
"RTN","DGPTF4",17,0)
 I DGINC>1000 S DGINC=$E(DGINC,1,$L(DGINC)-3)_","_$E(DGINC,$L(DGINC)-2,$L(DGINC))
"RTN","DGPTF4",18,0)
 W !,"      C&P Status: ",$$EXTERNAL^DILFD(45,78,,$P(B(70),U,9)),?47,"Income: $",DGINC
"RTN","DGPTF4",19,0)
 K DGINC
"RTN","DGPTF4",20,0)
AS ;
"RTN","DGPTF4",21,0)
 N DGRSC
"RTN","DGPTF4",22,0)
 S DGRSC=$S($P(A(.3),U)="Y":$$RTEN^DGPTR4($P(A(.3),U,2)),1:"")
"RTN","DGPTF4",23,0)
 W !,"       ASIH Days: ",$P(B(70),U,8)
"RTN","DGPTF4",24,0)
 W ?40,"SC Percentage: ",$S($P(A(.3),U)="Y":$P(A(.3),U,2)_"%",1:"")
"RTN","DGPTF4",25,0)
 I DGRSC]"",DGRSC'=$P(A(.3),U,2) W ?60,"Transmitted: ["_DGRSC_"%]"
"RTN","DGPTF4",26,0)
 W !,?39,"Period Of Serv: "
"RTN","DGPTF4",27,0)
 W $S($D(^DIC(21,$S('$D(^DGPM(+$O(^DGPM("APTF",PTF,0)),"ODS")):+$$CKPOS^DGPTUTL($P(B(101),U,8),+$P(A(.32),U,3)),+^("ODS"):+$O(^DIC(21,"D",6,0)),1:$$CKPOS^DGPTUTL($P(B(101),U,8),+$P(A(.32),U,3))),0)):$E($P(^(0),U),1,26),1:""),!
"RTN","DGPTF4",28,0)
 Q
"RTN","DGPTF4",29,0)
 ;
"RTN","DGPTF4",30,0)
EN1 ;LOAD AND DISPLAY DIAGNOSES FOR PTF 701 SCREEN
"RTN","DGPTF4",31,0)
 K DRG S B(70)=$S($D(^DGPT(PTF,70)):^(70),1:""),B(71)=$S($D(^DGPT(PTF,71)):^(71),1:"") D WR
"RTN","DGPTF4",32,0)
 N EFFDATE,IMPDATE,J
"RTN","DGPTF4",33,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTF4",34,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(B(70),U,10),EFFDATE)
"RTN","DGPTF4",35,0)
 S ICDLABEL=$$GETLABEL^DGPTIC10(DGPTDAT,"D")
"RTN","DGPTF4",36,0)
 ;
"RTN","DGPTF4",37,0)
 W ! S Z=1 D Z W "  Principal Diagnosis: ",ICDLABEL
"RTN","DGPTF4",38,0)
 D WRITECOD^DGPTIC10("DIAG",+$P(B(70),U,10),EFFDATE,2,1,7)
"RTN","DGPTF4",39,0)
 W $S(+DGPTTMP<1!('$P(DGPTTMP,U,10)):"*",1:"")
"RTN","DGPTF4",40,0)
 ; Piece 11 is pre 1986 prin diag
"RTN","DGPTF4",41,0)
 W:$P(B(70),U,11)&('$P(B(70),U,10)) !,"  Principal Diag: ",ICDLABEL,!?7,$S(DGPTTMP&$P(DGPTTMP,U,10):$P(DGPTTMP,U,4)_" ("_$P(DGPTTMP,U,2)_")",1:"")
"RTN","DGPTF4",42,0)
 N DGPTPOA S DGPTPOA=$G(^DGPT(PTF,82))
"RTN","DGPTF4",43,0)
 ;
"RTN","DGPTF4",44,0)
 I $P(DGPTTMP,U,20)=30 W " (POA=",$S($P(DGPTPOA,U)]"":$P(DGPTPOA,U),1:"''"),")"
"RTN","DGPTF4",45,0)
 W !?5,"Secondary Diag: ",ICDLABEL
"RTN","DGPTF4",46,0)
 S K=B(70) F I=16:1:24 S DGPOA=$P(DGPTPOA,"^",(I-14)) D DSP
"RTN","DGPTF4",47,0)
 S K=B(71) F I=1:1:15 S DGPOA=$P(DGPTPOA,"^",(I+10)) D DSP
"RTN","DGPTF4",48,0)
 D:$Y>(IOSL-10) PGBR,WR
"RTN","DGPTF4",49,0)
 S DGPTF=PTF D:'DGST CHK701^DGPTSCAN,UP701^DGPTSPQ
"RTN","DGPTF4",50,0)
 ; display contents of 300th node
"RTN","DGPTF4",51,0)
 S DG300=$S($D(^DGPT(PTF,300)):^(300),1:"") D:DG300]"" PRN2^DGPTFM8 K DG300
"RTN","DGPTF4",52,0)
EN2 K DRG
"RTN","DGPTF4",53,0)
 I $D(^DGPT(PTF,0)),$P(^(0),U,11)=1 D
"RTN","DGPTF4",54,0)
 .S DA=DFN
"RTN","DGPTF4",55,0)
 .D EN1^DGPTFD
"RTN","DGPTF4",56,0)
 .I $D(DRG),$D(^DGP(45.84,PTF,0)),$P(^(0),U,6)'=DRG D
"RTN","DGPTF4",57,0)
 ..N DGFDA,DGMSG
"RTN","DGPTF4",58,0)
 ..S DGFDA(45.84,PTF_",",6)=DRG
"RTN","DGPTF4",59,0)
 ..D FILE^DIE("","DGFDA","DGMSG")
"RTN","DGPTF4",60,0)
JUMP K AGE,B,CC,DA,DAM,DOB,DXLS,EXP,I,L1,L2,SEX,DRGCAL,S,DIC,DR,DIE
"RTN","DGPTF4",61,0)
 Q:DGPR
"RTN","DGPTF4",62,0)
 K X S $P(X,"-",81)="" W X
"RTN","DGPTF4",63,0)
 ;
"RTN","DGPTF4",64,0)
 G O:DGST&(('$D(DRG))!('DGDD)!('$D(^DGP(45.84,PTF))))
"RTN","DGPTF4",65,0)
X G ACT^DGPTF41
"RTN","DGPTF4",66,0)
CLS ;
"RTN","DGPTF4",67,0)
 D VERCHK^DGPTRI3(PTF) I $G(DGERR)>0 D HANG^DGPTUTL K DGERR G EN1 ; icd-10 remediation, validate all codes are of correct version
"RTN","DGPTF4",68,0)
 G NOT:('$D(DRG))!('DGDD)!('DGFC)
"RTN","DGPTF4",69,0)
 ;change made to allow release of 470, before grouper released to vamc's
"RTN","DGPTF4",70,0)
 ;  patch 115
"RTN","DGPTF4",71,0)
 ;DGDAT = effective date of DRG used in DGPTICD (468=CMS-DRG,998=MS-DRG)
"RTN","DGPTF4",72,0)
 I DRG=469,(+$G(DGDAT)<3071001)  W !!,*7,"Unable to release DRG ",DRG,". Please verify data entered.",*7 D HANG^DGPTUTL G EN1
"RTN","DGPTF4",73,0)
 I DRG=998 W !!,*7,"Unable to release DRG ",DRG,".  Please verify data entered.",*7 D HANG^DGPTUTL G EN1
"RTN","DGPTF4",74,0)
 I $D(DGCST),'DGCST D CEN G EN1:'DGCST
"RTN","DGPTF4",75,0)
 I '$P(^DGPT(PTF,0),"^",4) W !,"Updating TRANSFER DRGs..." S DGADM=$P(^DGPT(PTF,0),U,2) D SUDO1^DGPTSUDO
"RTN","DGPTF4",76,0)
 I DGDD>(DT+1) W !,"Cannot close with Discharge date in future." D HANG^DGPTUTL G EN1
"RTN","DGPTF4",77,0)
 I $D(^DGM("PT",DFN)) F I=0:0 S I=$O(^DGM("PT",DFN,I)) Q:'I  I '$D(^DGM(I,0)) K ^DGM(I),^DGM("PT",DFN,I)
"RTN","DGPTF4",78,0)
 I $D(^DGM("PT",DFN)) W !!,"Not all messages have been cleared up for this patient--cannot close.",*7,*7 S DGPTF=DFN,X="??" K DGALL D HELP^DGPTMSGD K DGPTF G EN1:'$D(DGALL) K DGALL
"RTN","DGPTF4",79,0)
 G CLS^DGPTF2
"RTN","DGPTF4",80,0)
 ;
"RTN","DGPTF4",81,0)
O I '$D(^DGP(45.84,PTF,0)) S DR="6///0",DIE="^DGPT(",DA=PTF,(DGST,DGN)=0 D ^DIE W !,"  NOT CLOSED " D HANG^DGPTUTL G EN1
"RTN","DGPTF4",82,0)
 S (DGST,DGN)=0
"RTN","DGPTF4",83,0)
 S DGPTIFN=PTF,DGRTY=1 D OPEN^DGPTFDEL S DGST=0
"RTN","DGPTF4",84,0)
 K DGPTIFN,DGRTY G EN1
"RTN","DGPTF4",85,0)
 ;
"RTN","DGPTF4",86,0)
Q G Q^DGPTF
"RTN","DGPTF4",87,0)
 ;
"RTN","DGPTF4",88,0)
NOT I 'DGFC S DR="3//^S X=$P($$SITE^VASITE,U,2);5",DIE="^DGPT(",DA=PTF D ^DIE S DGFC=$P(^DGPT(PTF,0),U,3) I DGFC G EN1
"RTN","DGPTF4",89,0)
 W !!,"Unable to close without a ",$S('$D(DRG):"DRG being calculated.",'DGDD:" discharge date.",1:" facility specified"),!!,*7,*7 H 4 G EN1
"RTN","DGPTF4",90,0)
 Q
"RTN","DGPTF4",91,0)
 ;
"RTN","DGPTF4",92,0)
Z D Z^DGPTF5 Q
"RTN","DGPTF4",93,0)
Z1 D Z1^DGPTF5 Q
"RTN","DGPTF4",94,0)
CEN D CEN^DGPTF5 Q
"RTN","DGPTF4",95,0)
DSP ;
"RTN","DGPTF4",96,0)
 Q:'+$P(K,U,I)
"RTN","DGPTF4",97,0)
 N J2
"RTN","DGPTF4",98,0)
 D WRITECOD^DGPTIC10("DIAG",+$P(K,U,I),EFFDATE,2,1,7)
"RTN","DGPTF4",99,0)
 S J2=$$ICDDATA^ICDXCODE("DIAG",+$P(K,U,I),EFFDATE)
"RTN","DGPTF4",100,0)
 I $P(J2,U,20)=30 W:$X>73 !,"           " W " (POA=",$S(DGPOA]"":DGPOA,1:"''"),")"
"RTN","DGPTF4",101,0)
 W $S(+J2<1!('$P(J2,U,10)):"*",1:"")
"RTN","DGPTF4",102,0)
 I $Y>(IOSL-3) D PGBR,WR
"RTN","DGPTF4",103,0)
 Q
"RTN","DGPTF4",104,0)
POA(TEXT) ; -- Returns POA Text
"RTN","DGPTF4",105,0)
 N POA
"RTN","DGPTF4",106,0)
 Q:TEXT="" ""
"RTN","DGPTF4",107,0)
 S POA("Y")="PRESENT ON ADMISSION"
"RTN","DGPTF4",108,0)
 S POA("N")="NOT PRESENT ON ADMISSION"
"RTN","DGPTF4",109,0)
 S POA("U")="INSUFFICIENT DOCUM TO PRESENT ON ADMISSION"
"RTN","DGPTF4",110,0)
 S POA("W")="UNABLE TO DETERM IF PRESENT ON ADMISSION"
"RTN","DGPTF4",111,0)
 Q $G(POA(TEXT))
"RTN","DGPTF4",112,0)
POA1 ;Y:PRESENT ON ADMISSION;N:NOT PRESENT ON ADMISSION;U:INSUFFICIENT DOCUM TO PRESENT ON ADMISSION;W:UNABLE TO DETERM IF PRESENT ON ADMISSION
"RTN","DGPTF4",113,0)
 ;
"RTN","DGPTF4",114,0)
 ;
"RTN","DGPTF4",115,0)
 ;page break
"RTN","DGPTF4",116,0)
PGBR N DIR,X,Y S DIR(0)="E",DIR("A")="Enter RETURN to continue" D ^DIR QUIT
"RTN","DGPTF41")
0^6^B11239143
"RTN","DGPTF41",1,0)
DGPTF41 ;ALB/JDS/PLT - PTF ENTRY/EDIT-4 ;11/15/06 8:37am
"RTN","DGPTF41",2,0)
 ;;5.3;Registration;**64,635,729,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTF41",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPTF41",4,0)
 ;
"RTN","DGPTF41",5,0)
ACT ; -- 701 actions
"RTN","DGPTF41",6,0)
 G ACT1:DGST
"RTN","DGPTF41",7,0)
 S DGCFL=0 I $D(DGCST),DGCST<2,'DGCST!$G(DGREL) S DGCFL=1
"RTN","DGPTF41",8,0)
 W !,"   PTF ",$J("#"_PTF,7),?15,"actions: 1=Edit   C=Close       ^N=Another Screen",!
"RTN","DGPTF41",9,0)
 I DGCFL W "CENSUS ",$S(DGCI:$J("#"_DGCI,7),1:" record"),?15,"actions: ",$S(DGCST=1:"P=Open   E=Release",1:"         L=Close")
"RTN","DGPTF41",10,0)
 S Z="^CLOSE^1 Edit"
"RTN","DGPTF41",11,0)
 I DGCFL S Z=Z_"^"_$S(DGCST=1:"P Open Census^E Release Census",1:"L Close for Census")
"RTN","DGPTF41",12,0)
 W !?15,"         ^=Abort   <RET> to Continue: "
"RTN","DGPTF41",13,0)
 D READ
"RTN","DGPTF41",14,0)
 ;
"RTN","DGPTF41",15,0)
 I X="^"!(X="") G Q^DGPTF
"RTN","DGPTF41",16,0)
 I DGCFL,DGCST=1,$E(X)="P"!($E(X)="E") G ACT^DGPTC1
"RTN","DGPTF41",17,0)
 I DGCFL,'DGCST,$E(X)="L" G ACT^DGPTC1
"RTN","DGPTF41",18,0)
 I X?1"^".E S DGPTSCRN=701 G ^DGPTFJ
"RTN","DGPTF41",19,0)
 I X?1"C".E,'DGN G CLS^DGPTF4
"RTN","DGPTF41",20,0)
 I X="O" G O^DGPTF4
"RTN","DGPTF41",21,0)
 I X="R",DGN G REL
"RTN","DGPTF41",22,0)
 I X'=1 D HELP G EN1^DGPTF4
"RTN","DGPTF41",23,0)
 S DGCODSYS=$$CODESYS^DGPTIC10(PTF),DR=$S(DGCODSYS="ICD10":"[DG701-10D]",1:"[DG701]")
"RTN","DGPTF41",24,0)
 ;used only for roll back icd10 to icd9
"RTN","DGPTF41",25,0)
 I DR="[DG701]",$P($G(^DGPT(PTF,71)),U,4,999)'?."^" S DR="[DG701-10D]"
"RTN","DGPTF41",26,0)
 S DIE="^DGPT(",(DGPTF,DA)=PTF D ^DIE
"RTN","DGPTF41",27,0)
 F I=0,70 S B(I)="" S:$D(^DGPT(PTF,I)) B(I)=^(I)
"RTN","DGPTF41",28,0)
 K DGPTF,DR,DGCODSYS,DGXX,DGTYPE
"RTN","DGPTF41",29,0)
 G EN1^DGPTF4
"RTN","DGPTF41",30,0)
 ;
"RTN","DGPTF41",31,0)
READ ; -- read X
"RTN","DGPTF41",32,0)
 R X:DTIME S:'$T X="^",DGPTOUT="" D IN^DGHELP
"RTN","DGPTF41",33,0)
 Q
"RTN","DGPTF41",34,0)
 ;
"RTN","DGPTF41",35,0)
HELP ;
"RTN","DGPTF41",36,0)
 W !,"Enter  '1'  to edit Principal & Admit Diagnosis"
"RTN","DGPTF41",37,0)
 W !,"       'C'  to close out PTF record"
"RTN","DGPTF41",38,0)
 I DGCFL W:DGCST=1 !,"       'P'  to re-open a Census record",!,"       'E'  to release a Census record" W:'DGCST !,"       'L'  to close for Census"
"RTN","DGPTF41",39,0)
 W !,"       '^'  to stop the display"
"RTN","DGPTF41",40,0)
 W !,"       '^N' to jump to screen #N (appears in upper right of screen '<N>')"
"RTN","DGPTF41",41,0)
 W !,"      <RET> to continue on to the next screen"
"RTN","DGPTF41",42,0)
 R !!,"Enter <RET> to continue: ",XS:DTIME
"RTN","DGPTF41",43,0)
 Q
"RTN","DGPTF41",44,0)
 ;
"RTN","DGPTF41",45,0)
ACT1 ;
"RTN","DGPTF41",46,0)
 W !,"   PTF ",$J("#"_PTF,7),?15,"actions: O=Open   R=Release   ^N=Another Screen",!
"RTN","DGPTF41",47,0)
 I $D(DGCST),DGCST=1 W "CENSUS ",$J("#"_DGCI,7),?15,"action :          E=Release"
"RTN","DGPTF41",48,0)
 W !?15,"         ^=Abort    <RET> to continue: "
"RTN","DGPTF41",49,0)
 S Z="^OPEN^RELEASE PTF^E RELEASE CENSUS"
"RTN","DGPTF41",50,0)
 D READ
"RTN","DGPTF41",51,0)
 I $D(DGCST),DGCST=1,$E(X)="E" G ACT^DGPTC1
"RTN","DGPTF41",52,0)
 I X=""!(X=U) G Q^DGPTF
"RTN","DGPTF41",53,0)
 I X?1"^".E S DGPTSCRN=701 G ^DGPTFJ
"RTN","DGPTF41",54,0)
 I X="O" G O^DGPTF4
"RTN","DGPTF41",55,0)
 I X="R" G REL
"RTN","DGPTF41",56,0)
 ;
"RTN","DGPTF41",57,0)
 W !,"Enter  'O'  to re-open a PTF record"
"RTN","DGPTF41",58,0)
 W !,"       'R'  to release a PTF record"
"RTN","DGPTF41",59,0)
 I $D(DGCST),DGCST=1 W !,"       'E'  to release a Census record"
"RTN","DGPTF41",60,0)
 W !,"       '^'  to stop the display"
"RTN","DGPTF41",61,0)
 W !,"       '^N' to jump to screen #N (appears in upper right of screen '<N>')"
"RTN","DGPTF41",62,0)
 W !,"      <RET> to continue on to the next screen"
"RTN","DGPTF41",63,0)
 R !!,"Enter <RET> to continue: ",XS:DTIME
"RTN","DGPTF41",64,0)
 G EN1^DGPTF4
"RTN","DGPTF41",65,0)
 ;
"RTN","DGPTF41",66,0)
REL ;
"RTN","DGPTF41",67,0)
 S Y=1 D RTY^DGPTUTL S DGPTFLE=1,DGPTIFN=PTF D EN^DGPTFREL G ^DGPTF
"RTN","DGPTF41",68,0)
 ;
"RTN","DGPTF5")
0^7^B6998580
"RTN","DGPTF5",1,0)
DGPTF5 ;ALB/MTC/PLT - PTF ENTRY/EDIT-4 ;07 JUN 91 
"RTN","DGPTF5",2,0)
 ;;5.3;Registration;**669,701,744,868,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTF5",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPTF5",4,0)
 ;
"RTN","DGPTF5",5,0)
Z I 'DGN S Z=$S(IOST="C-QUME"&($L(DGVI)'=2):Z,1:"["_Z_"]") W @DGVI,Z,@DGVO
"RTN","DGPTF5",6,0)
 E  W "   "
"RTN","DGPTF5",7,0)
 Q
"RTN","DGPTF5",8,0)
 ;
"RTN","DGPTF5",9,0)
Z1 F I=1:1:(Z1-$L(Z)) S Z=Z_" "
"RTN","DGPTF5",10,0)
 W Z
"RTN","DGPTF5",11,0)
 Q
"RTN","DGPTF5",12,0)
 ;
"RTN","DGPTF5",13,0)
CEN ;
"RTN","DGPTF5",14,0)
 W !!,*7,"Record #",PTF," MUST be closed for CENSUS first.",!
"RTN","DGPTF5",15,0)
ASK W !,"Would you like to close this record for CENSUS" S %=2 D YN^DICN
"RTN","DGPTF5",16,0)
 I '% W !?5,"Answer 'YES' to close record for CENSUS also",!?5,"  or   'NO'  to not close this record at all." G ASK
"RTN","DGPTF5",17,0)
 I %=1 S Y=2 D RTY^DGPTUTL D CLS^DGPTC1
"RTN","DGPTF5",18,0)
 K DGRTY,DGRTY0 Q
"RTN","DGPTF5",19,0)
ICDEN ;enter icd codes
"RTN","DGPTF5",20,0)
 I $G(X)["?" Q
"RTN","DGPTF5",21,0)
 N DIC,Y I $G(X)="?BAD" S X="" Q
"RTN","DGPTF5",22,0)
 ; DG*5.3*701 (movement)
"RTN","DGPTF5",23,0)
 I DA'=$G(DGPTF),DA<25,$G(DA(1))>0 D CONFIG^LEXSET("ICD","ICD",$E($$GETDATE^ICDGTDRG(DA(1)),1,7)) ;868 patch,$E($$getdate...),1,7)
"RTN","DGPTF5",24,0)
 ; DG*5.3*744 (801 screen)
"RTN","DGPTF5",25,0)
 E  I DA'=$G(PTF),$D(^DGPT(PTF)) D CONFIG^LEXSET("ICD","ICD",$E($$GETDATE^ICDGTDRG($G(PTF)),1,7)) ;868 patch
"RTN","DGPTF5",26,0)
 E  D CONFIG^LEXSET("ICD",,$E($$GETDATE^ICDGTDRG(DA)),1,7) ;patch 868
"RTN","DGPTF5",27,0)
 S DIC="^LEX(757.01,",DIC(0)=$S('$L($G(X)):"",1:"")_"EQM"
"RTN","DGPTF5",28,0)
 S DIC("A")="Enter ICD: "
"RTN","DGPTF5",29,0)
 D ^DIC
"RTN","DGPTF5",30,0)
 I Y=-1 S X="" Q
"RTN","DGPTF5",31,0)
 S X=$G(Y(1))
"RTN","DGPTF5",32,0)
 Q
"RTN","DGPTF5",33,0)
ICDEN1 ;enter icd codes for DRG
"RTN","DGPTF5",34,0)
 ; called from DGPTFIC and DGPTDRG
"RTN","DGPTF5",35,0)
 ; removed kills to X and Y and set for DIC("A")to suppress prompts DG*5.3*850
"RTN","DGPTF5",36,0)
 N DIC,EFFDATE,IMPDATE,TERM,DGTEMP,LEXVDT
"RTN","DGPTF5",37,0)
 I '$G(DGDAT) S DGDAT=DT
"RTN","DGPTF5",38,0)
 S EFFDATE=DGDAT
"RTN","DGPTF5",39,0)
 S DGTEMP=$$IMPDATE^DGPTIC10("10D")
"RTN","DGPTF5",40,0)
 S IMPDATE=$P(DGTEMP,U,1)
"RTN","DGPTF5",41,0)
 ;
"RTN","DGPTF5",42,0)
 ; What terminology to use, ICD9 or ICD10
"RTN","DGPTF5",43,0)
 I DGDAT<IMPDATE S TERM="ICD"
"RTN","DGPTF5",44,0)
 I DGDAT'<IMPDATE S TERM="10D"
"RTN","DGPTF5",45,0)
 ;
"RTN","DGPTF5",46,0)
 ; I Testing, set effective date to one stored in file 43
"RTN","DGPTF5",47,0)
 ;piece 2 of dgtemp has no 7n value and code below removed
"RTN","DGPTF5",48,0)
 ;I EFFDATE'<IMPDATE,+$P(DGTEMP,U,2)?7N S EFFDATE=+$P(DGTEMP,U,2)
"RTN","DGPTF5",49,0)
 ;
"RTN","DGPTF5",50,0)
 I $G(PROMPT)'="" S DIC("A")=PROMPT
"RTN","DGPTF5",51,0)
 D CONFIG^LEXSET(TERM,TERM,EFFDATE)
"RTN","DGPTF5",52,0)
 S DIC="^LEX(757.01,",DIC(0)=$S('$L($G(X)):"",1:"")_"EQM"
"RTN","DGPTF5",53,0)
 D ^DIC
"RTN","DGPTF5",54,0)
 I Y=-1 S X="" Q
"RTN","DGPTF5",55,0)
 S:TERM="ICD" X=$G(Y(1))
"RTN","DGPTF5",56,0)
 S:TERM="10D" X=$G(Y(30))
"RTN","DGPTF5",57,0)
 S Y=$$ICDDATA^ICDXCODE("DIAG",X,EFFDATE)
"RTN","DGPTF5",58,0)
 K LEXVDT
"RTN","DGPTF5",59,0)
 Q
"RTN","DGPTF5",60,0)
GETICD9(EFFDATE) ;enter icd codes
"RTN","DGPTF5",61,0)
 N DGXT,DIC,Y,LEXVDT,CUR,ICDV,LEXQ,DO,DISYS,DGY
"RTN","DGPTF5",62,0)
 I $G(X)="?BAD" S X="" G GET9Q
"RTN","DGPTF5",63,0)
 D CONFIG^LEXSET("ICD",EFFDATE)
"RTN","DGPTF5",64,0)
 S DIC="^LEX(757.01,",DIC(0)=$S('$L($G(X)):"",1:"")_"EQM"
"RTN","DGPTF5",65,0)
 S DIC("A")="Enter ICD: "
"RTN","DGPTF5",66,0)
 S LEXVDT=EFFDATE
"RTN","DGPTF5",67,0)
 D ^DIC
"RTN","DGPTF5",68,0)
 I Y=-1 S X="" G GET9Q
"RTN","DGPTF5",69,0)
 S DGXT=$G(Y(1))
"RTN","DGPTF5",70,0)
 S X=+$$CODEN^ICDEX(DGXT,80)
"RTN","DGPTF5",71,0)
GET9Q ; exit point
"RTN","DGPTF5",72,0)
 Q X
"RTN","DGPTFAPI")
0^15^B6178065
"RTN","DGPTFAPI",1,0)
DGPTFAPI ;BAY/JAT/ADL,HIOFO/FT - Returns data from Patient Treatment (PTF) file ;10/8/14 12:38pm
"RTN","DGPTFAPI",2,0)
 ;;5.3;Registration;**309,510,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTFAPI",3,0)
 ;;ADL;Update for CSV Project;;Mar 24, 2003
"RTN","DGPTFAPI",4,0)
 ;
"RTN","DGPTFAPI",5,0)
 ;uses ICRs:
"RTN","DGPTFAPI",6,0)
 ; ICDEX APIs - #5747
"RTN","DGPTFAPI",7,0)
 ;
"RTN","DGPTFAPI",8,0)
 ;supports ICRs:
"RTN","DGPTFAPI",9,0)
 ; RPC entry point #3157 (routine usage)
"RTN","DGPTFAPI",10,0)
 ; RPC entry point #3164 (remote procedure usage)
"RTN","DGPTFAPI",11,0)
 ;
"RTN","DGPTFAPI",12,0)
RPC(RESULTS,PTFNUMBR) ;DG PATIENT TREATMENT DATA rpc
"RTN","DGPTFAPI",13,0)
 ; input :  PTFNUMBR, the Patient Treatment IFN (.001 of file #45)
"RTN","DGPTFAPI",14,0)
 ;          RESULTS (passed by reference)
"RTN","DGPTFAPI",15,0)
 ; output:  RESULTS(0) = 1 (entry found) OR -1 (error)
"RTN","DGPTFAPI",16,0)
 ;          RESULTS(1) = #72: type of disposition^#75: place of disposition (name)^#79: primary ICD code^Coding system Version (pointer to 80.4)
"RTN","DGPTFAPI",17,0)
 ;          RESULTS(2) = DX 2^DX 3^...^DX 24
"RTN","DGPTFAPI",18,0)
 ;          RESULTS(3) = POA 1^POA 2^...^POA 25          
"RTN","DGPTFAPI",19,0)
 N DGPTF,DG70,DG71,DGDISP,DGDXE,DGDXI,DGDXLS,DGDISTYP,DGLOOP,DGNODE,DGPOA,DGPTDAT,DXLS,EFFDATE,ICDVER,IMPDATE
"RTN","DGPTFAPI",20,0)
 S DGPTF=$G(PTFNUMBR)
"RTN","DGPTFAPI",21,0)
 S ICDVER=""
"RTN","DGPTFAPI",22,0)
 K RESULTS S RESULTS(0)=-1
"RTN","DGPTFAPI",23,0)
 I 'DGPTF Q
"RTN","DGPTFAPI",24,0)
 I '$D(^DGPT(DGPTF,0)) Q
"RTN","DGPTFAPI",25,0)
 S DG70=$G(^DGPT(DGPTF,70)),DG71=$G(^DGPT(DGPTF,71)),DGPOA=$G(^DGPT(DGPTF,82))
"RTN","DGPTFAPI",26,0)
 S DGDISP=$P(DG70,U,6)
"RTN","DGPTFAPI",27,0)
 I DGDISP S DGDISP=$P($G(^DIC(45.6,DGDISP,0)),U)
"RTN","DGPTFAPI",28,0)
 S DGDISTYP=$P(DG70,U,3)
"RTN","DGPTFAPI",29,0)
 I DGDISTYP S DGDISTYP=$S(DGDISTYP=1:"REGULAR",DGDISTYP=2:"NBC OR WHILE ASIH",DGDISTYP=3:"EXPIRATION 6 MONTH LIMIT",DGDISTYP=4:"IRREGULAR",DGDISTYP=5:"TRANSFER",DGDISTYP=6:"DEATH WITH AUTOPSY",DGDISTYP=7:"DEATH WITHOUT AUTOPSY",1:"")
"RTN","DGPTFAPI",30,0)
 S DGDXLS=$P(DG70,U,10)
"RTN","DGPTFAPI",31,0)
 S DGPTDAT=$$GETDATE^ICDEX(DGPTF)
"RTN","DGPTFAPI",32,0)
 D EFFDATE^DGPTIC10(DGPTF)
"RTN","DGPTFAPI",33,0)
 I DGDXLS S DXLS=$$CODEC^ICDEX(80,DGDXLS),ICDVER=$$CSI^ICDEX(80,DGDXLS)
"RTN","DGPTFAPI",34,0)
 S RESULTS(0)=1
"RTN","DGPTFAPI",35,0)
 ; #72: type of disposition^#75: place of disposition (name)^#79: primary ICD code^Coding system Version (pointer to 80.4)
"RTN","DGPTFAPI",36,0)
 S RESULTS(1)=DGDISTYP_U_DGDISP_U_$G(DXLS)_U_$G(ICDVER)
"RTN","DGPTFAPI",37,0)
 ; get secondary DXs: #79.16 - #79.24 and #79.241 - #79.24915
"RTN","DGPTFAPI",38,0)
 S DGNODE="",RESULTS(2)="^^^^^^^^^^^^^^^^^^^^^^^^"
"RTN","DGPTFAPI",39,0)
 F DGLOOP=16:1:24 S $P(DGNODE,U,DGLOOP-15)=$P(DG70,U,DGLOOP)
"RTN","DGPTFAPI",40,0)
 F DGLOOP=1:1:15 S $P(DGNODE,U,DGLOOP+9)=$P(DG71,U,DGLOOP)
"RTN","DGPTFAPI",41,0)
 F DGLOOP=1:1:24 D
"RTN","DGPTFAPI",42,0)
 . S DGDXI=$P(DGNODE,U,DGLOOP)
"RTN","DGPTFAPI",43,0)
 . I DGDXI S DGDXE=$$CODEC^ICDEX(80,DGDXI) D
"RTN","DGPTFAPI",44,0)
 .. S $P(RESULTS(2),U,DGLOOP)=DGDXE
"RTN","DGPTFAPI",45,0)
 ; get the POA indicator for diagnosis, #82.01 - #82.25
"RTN","DGPTFAPI",46,0)
 S RESULTS(3)=""
"RTN","DGPTFAPI",47,0)
 F DGLOOP=1:1:25 D
"RTN","DGPTFAPI",48,0)
 . S $P(RESULTS(3),U,DGLOOP)=$P(DGPOA,U,DGLOOP)
"RTN","DGPTFAPI",49,0)
 Q
"RTN","DGPTFD")
0^21^B23594019
"RTN","DGPTFD",1,0)
DGPTFD ;ALB/MTC/ADL,HIOFO/FT,WOIFO/PMK - Sets Required Variables for DRG on 701 Screen ;6/2/15 11:28am
"RTN","DGPTFD",2,0)
 ;;5.3;Registration;**60,441,510,785,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTFD",3,0)
 ;;ADL;Update for CSV Project;;Mar 24, 2003
"RTN","DGPTFD",4,0)
 ;
"RTN","DGPTFD",5,0)
 ; XLFSTR APIs - #10104
"RTN","DGPTFD",6,0)
 ; ICDEX APIs - #5747
"RTN","DGPTFD",7,0)
 ; ICDGTDRG APIs - #4052
"RTN","DGPTFD",8,0)
 ; ICDXCODE APIs - #5699
"RTN","DGPTFD",9,0)
 ;
"RTN","DGPTFD",10,0)
EN1 ;-- entry point from 701
"RTN","DGPTFD",11,0)
 Q:'$D(^DGPT(PTF,70))  S DGPT(70)=^(70)
"RTN","DGPTFD",12,0)
 ;
"RTN","DGPTFD",13,0)
 ;-- check for DXLS
"RTN","DGPTFD",14,0)
 I $P(DGPT(70),U,10)="",$P(DGPT(70),U,11)="" G Q
"RTN","DGPTFD",15,0)
 ;-- did patient die during care
"RTN","DGPTFD",16,0)
 S DGEXP=$S($P(DGPT(70),U,3)>5:1,1:0)
"RTN","DGPTFD",17,0)
 ;-- discharged against med advice
"RTN","DGPTFD",18,0)
 S DGDMS=$S($P(DGPT(70),U,3)=4:1,1:0)
"RTN","DGPTFD",19,0)
 ;-- transfer to acute care facility
"RTN","DGPTFD",20,0)
 S DGTRS=$S($P(DGPT(70),U,13):1,1:0)
"RTN","DGPTFD",21,0)
 ;-- sex,age
"RTN","DGPTFD",22,0)
 S SEX=$P(^DPT(DFN,0),U,2),AGE=$S(+DGPT(70):+DGPT(70),1:DT)-$P(^(0),U,3)\10000,DOB=$P(^(0),U,3) ; DOB added by abr for ICD calc.
"RTN","DGPTFD",23,0)
 ; DRP DG*5.3*850 If not discharged and census is open then use System Date, else get effective date.
"RTN","DGPTFD",24,0)
 S DGDAT=$S(($G(DISDATE)="")!$G(DGCST,0)>0:DT,1:$$GETDATE^ICDGTDRG(PTF))
"RTN","DGPTFD",25,0)
  ;-- build diagnosis string
"RTN","DGPTFD",26,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTFD",27,0)
 ;DRP If not discharged, and Effective date is valid and Census status is open then use Effective date
"RTN","DGPTFD",28,0)
 I $G(DISDATE)="",+$G(EFFDATE),$G(DGCST,0)<1 S DGDAT=EFFDATE
"RTN","DGPTFD",29,0)
 N DGPOA,DGPOACNT,DGDXPOA,DG701
"RTN","DGPTFD",30,0)
 S DGDX="",DGDXPOA=""
"RTN","DGPTFD",31,0)
 ;-- new record after 10/1/86
"RTN","DGPTFD",32,0)
 S DGPOA=$$STR701P^DGPTFUT(PTF) ;returns string with POAs
"RTN","DGPTFD",33,0)
 S DGPOACNT=1
"RTN","DGPTFD",34,0)
 I '+DGPT(70)!(+DGPT(70)>2861000) D
"RTN","DGPTFD",35,0)
 . S DG701=$$STR701^DGPTFUT(PTF) ;returns string with DX codes
"RTN","DGPTFD",36,0)
 . ;F DGI=2:1:25 I $P(DG701,U,DGI)]"" S DGPOACNT=$G(DGPOACNT)+1 D
"RTN","DGPTFD",37,0)
 . F DGI=2:1:25 I $P(DG701,U,DGI)]"" D
"RTN","DGPTFD",38,0)
 .. S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(DG701,U,DGI),EFFDATE)
"RTN","DGPTFD",39,0)
 .. I +DGPTTMP>0,$P(DGPTTMP,U,10) D
"RTN","DGPTFD",40,0)
 ... S DGDX=DGDX_U_$P(DG701,U,DGI)
"RTN","DGPTFD",41,0)
 ... ;I EFFDATE'<$$IMPDATE^LEXU("10D") S DGDXPOA=DGDXPOA_U_$$POA($P(DGPOA,U,DGPOACNT))
"RTN","DGPTFD",42,0)
 ... I EFFDATE'<$$IMPDATE^LEXU("10D") S DGDXPOA=DGDXPOA_U_$$POA($P(DGPOA,U,DGI))
"RTN","DGPTFD",43,0)
 ;-- old record format
"RTN","DGPTFD",44,0)
 I +DGPT(70),+DGPT(70)<2861000 F DGI=0:0 S DGI=$O(^DGPT(PTF,"M","AM",DGI)) Q:DGI'>0  S DGJ=$O(^DGPT(PTF,"M","AM",DGI,0)) I $D(^DGPT(PTF,"M",+DGJ,0)) S DGNODE=$P(^(0),U,5,9) I DGNODE'="^^^^" D OLD
"RTN","DGPTFD",45,0)
 ;
"RTN","DGPTFD",46,0)
 S DGTMP=$S($P(DGPT(70),U,10):$P(DGPT(70),"^",10),1:$P(DGPT(70),U,11))
"RTN","DGPTFD",47,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",DGTMP,EFFDATE)
"RTN","DGPTFD",48,0)
 I +DGPTTMP>0,$P(DGPTTMP,U,10) S DGDX=DGTMP_DGDX,DGDXPOA=$$POA($P(DGPOA,U,1))_DGDXPOA
"RTN","DGPTFD",49,0)
 ;
"RTN","DGPTFD",50,0)
 ;-- build surgery and procedure strings
"RTN","DGPTFD",51,0)
 K DGSURG,DGPROC
"RTN","DGPTFD",52,0)
 ;-- start with surgeries (401)
"RTN","DGPTFD",53,0)
 F DGI=0:0 S DGI=$O(^DGPT(PTF,"S",DGI)) Q:DGI'>0  D
"RTN","DGPTFD",54,0)
 .S X=$$STR401^DGPTFUT(PTF,DGI) ;returns string with procedure codes
"RTN","DGPTFD",55,0)
 .I $$STRIP^XLFSTR(X,"^")'="" S K=+^DGPT(PTF,"S",DGI,0),K=$S('$D(DGSURG(K)):K,K[".":K_DGI_1,1:K_".0000"_DGI_1),DGSURG(K)="" S DGVAR=0 D TAG
"RTN","DGPTFD",56,0)
 ;-- build DGSURG
"RTN","DGPTFD",57,0)
 N I,X,Y,Z ; eliminate duplicates as we go
"RTN","DGPTFD",58,0)
 N SUB S SUB=0
"RTN","DGPTFD",59,0)
 I $D(DGSURG) S DGSURG=U F DGI=0:0 S DGI=$O(DGSURG(DGI)) Q:DGI'>0  D
"RTN","DGPTFD",60,0)
 .S X=DGSURG(DGI)
"RTN","DGPTFD",61,0)
 .F I=1:1:25 S Y=$P(X,U,I) Q:Y=""  D
"RTN","DGPTFD",62,0)
 ..;Q:$L(DGSURG)>240 ; - no longer needed
"RTN","DGPTFD",63,0)
 ..S Z=U_Y_U
"RTN","DGPTFD",64,0)
 ..S ICDSURG(I)=Y
"RTN","DGPTFD",65,0)
 ..S DGSURG=DGSURG_Y_U
"RTN","DGPTFD",66,0)
 ..S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",Y,EFFDATE) ; added this line of code - PMK
"RTN","DGPTFD",67,0)
 ..I +DGPTTMP>0,($P(DGPTTMP,U,10)) S SUB=SUB+1,DGSURG(SUB)=$P(DGPTTMP,U,2)
"RTN","DGPTFD",68,0)
 ;-- procedures next old records before 10/1/87
"RTN","DGPTFD",69,0)
 I +DGPT(70),+DGPT(70)<2871000 G DRG:'$D(^DGPT(PTF,"401P")) S DGPROC="",X=^("401P") D:X]""&(X'="^^^^")  G DRG
"RTN","DGPTFD",70,0)
 . F DGI=1:1:5 I $P(X,U,DGI)]"" S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",$P(X,U,DGI),EFFDATE) I +DGPTTMP>0,$P(DGPTTMP,U,10) S DGPROC=DGPROC_$P(X,U,DGI)_U
"RTN","DGPTFD",71,0)
 ;-- get 601 (procedures)
"RTN","DGPTFD",72,0)
 F DGI=0:0 S DGI=$O(^DGPT(PTF,"P",DGI)) Q:DGI'>0  D
"RTN","DGPTFD",73,0)
 .S X=$$STR601^DGPTFUT(PTF,DGI) ;returns string with procedure codes
"RTN","DGPTFD",74,0)
 .I $$STRIP^XLFSTR(X,"^")'="" S K=+^DGPT(PTF,"P",DGI,0),K=$S('$D(DGPROC(K)):K,K[".":K_DGI_1,1:K_".0000"_DGI_1),DGPROC(K)="" S DGVAR=1 D TAG
"RTN","DGPTFD",75,0)
 ;-- build DGPROC and eliminate duplicates as we go
"RTN","DGPTFD",76,0)
 I $D(DGPROC) S DGPROC=U F DGI=0:0 S DGI=$O(DGPROC(DGI)) Q:DGI'>0  D
"RTN","DGPTFD",77,0)
 .S X=DGPROC(DGI)
"RTN","DGPTFD",78,0)
 .F I=1:1:25 S Y=$P(X,U,I) Q:Y=""  D
"RTN","DGPTFD",79,0)
 ..;Q:$L(DGPROC)>240 ; - no longer needed
"RTN","DGPTFD",80,0)
 ..S Z=U_Y_U
"RTN","DGPTFD",81,0)
 ..S DGPROC(I)=Y
"RTN","DGPTFD",82,0)
 ..;Q:DGPROC[Z
"RTN","DGPTFD",83,0)
 ..S DGPROC=DGPROC_Y_U
"RTN","DGPTFD",84,0)
DRG ;
"RTN","DGPTFD",85,0)
 S:'$D(DGCPT) DGDRGPRT=1 D ^DGPTICD  ;return DRG code even if inactive
"RTN","DGPTFD",86,0)
 ;
"RTN","DGPTFD",87,0)
Q K AGE,SEX,DGEXP,DGDMS,DGPT,DGTRS,DGDX,DGNODE,DGPROC,DGSURG,DGDRGPRT,DGI,DGJ,K,DOB,ICDSURG Q
"RTN","DGPTFD",88,0)
 ;
"RTN","DGPTFD",89,0)
OLD ;-- used to format diagnostic codes for old PTF records
"RTN","DGPTFD",90,0)
 S X="" F DGJ=1:1:5 I $P(DGNODE,"^",DGJ)]"",$P($$CODEC^ICDEX(80,$P(DGNODE,"^",DGJ)),U,1)'=-1 S X=X_"^"_$P(DGNODE,"^",DGJ)
"RTN","DGPTFD",91,0)
 S DGDX=X_$P(DGDX,"^",1,40)
"RTN","DGPTFD",92,0)
 Q
"RTN","DGPTFD",93,0)
TAG ;-- used to build sur/proc string date
"RTN","DGPTFD",94,0)
 F DGJ=1:1:25 I $P(X,U,DGJ)]"" S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",$P(X,U,DGJ),EFFDATE) I +DGPTTMP>0,$P(DGPTTMP,U,10) S:DGVAR=0 DGSURG(K)=DGSURG(K)_$P(X,U,DGJ)_U S:DGVAR=1 DGPROC(K)=DGPROC(K)_$P(X,U,DGJ)_U
"RTN","DGPTFD",95,0)
 Q
"RTN","DGPTFD",96,0)
POA(POA) ; Calculate of POA should be used in DRG
"RTN","DGPTFD",97,0)
 ;  coordinate with POA^DGPTRI4
"RTN","DGPTFD",98,0)
 ;
"RTN","DGPTFD",99,0)
 ; -- On 8/9/2012 the ADT SME Determined that null POA should be defaulted to Yes
"RTN","DGPTFD",100,0)
 ;    Due to the fact that the COTS PTF software was not uploading POA information.
"RTN","DGPTFD",101,0)
 ;
"RTN","DGPTFD",102,0)
 S POA=$G(POA)
"RTN","DGPTFD",103,0)
 Q $S(POA="Y":"Y",POA="N":"N",POA="":"Y",POA="U":"U",POA="W":"W",1:"Y")
"RTN","DGPTFD",104,0)
 ;
"RTN","DGPTFIC")
0^18^B57159054
"RTN","DGPTFIC",1,0)
DGPTFIC ;ALB/JDS/ADL,HIOFO/FT - PTF CODE SEARCH ;4/21/2015 4:14pm
"RTN","DGPTFIC",2,0)
 ;;5.3;Registration;**510,559,599,669,704,744,832,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTFIC",3,0)
 ;;ADL;;Update for CSV Project;;Mar 25, 2003
"RTN","DGPTFIC",4,0)
 ;
"RTN","DGPTFIC",5,0)
 ; LEXU APIs - #5679
"RTN","DGPTFIC",6,0)
 ; ICDEX APISs - #5747
"RTN","DGPTFIC",7,0)
 ; ICDSAPI APIs - #5757
"RTN","DGPTFIC",8,0)
 ; ICDXCODE APIs - #5699
"RTN","DGPTFIC",9,0)
 ;
"RTN","DGPTFIC",10,0)
 ;;Patch DG*5.3*832 notations are for additional checks to insure the
"RTN","DGPTFIC",11,0)
 ;;                 search includes looking at secondary diagnostic 
"RTN","DGPTFIC",12,0)
 ;;                 codes 10-13, in node ^DGPT(ien,71)
"RTN","DGPTFIC",13,0)
EN ;Diagnostic Code PTF Record Search [DG PTF ICD DIAGNOSTIC SEARCH]
"RTN","DGPTFIC",14,0)
 K DG1 S DIC="^ICD9("
"RTN","DGPTFIC",15,0)
 D CODESET^DGPTEXPR Q:CODESET<1
"RTN","DGPTFIC",16,0)
 G RANGE
"RTN","DGPTFIC",17,0)
E9 K DIC S DHD=DHD_"  Diagnostic Code Search"
"RTN","DGPTFIC",18,0)
 ;
"RTN","DGPTFIC",19,0)
F9 ; search ^DGPT for the DX codes
"RTN","DGPTFIC",20,0)
 S DIS(0)="I $D(^DGPT(D0,0)),$P(^(0),U,11)=1 S DG2=0,L=1,D1=+$O(^DGPT(D0,""M"",0)) X DIS(""0AAA""),DIS(""0A"") I DG2 S ^UTILITY($J,""DG"",0)=""D"""   ;;DG*832
"RTN","DGPTFIC",21,0)
 S DIS("0A")="F E=0:0 X DIS(""0AA"") S D1=$O(^DGPT(D0,""M"",D1)) Q:D1'>0"
"RTN","DGPTFIC",22,0)
 S DG9=$S('DGR:"I DG1[(U_DGIEN_U)",1:"D EFFDATE^DGPTIC10(D0) S DG=$$ICDDATA^ICDXCODE(""DIAG"",+DGIEN,EFFDATE) I $P(DG,U,20)=DGTERMIE S DG4=$S(+DG>0&($P(DG,U,10)):$P(DG,U,2),1:"""")_""!"" I DG4]DG1&(DG6]DG4)")
"RTN","DGPTFIC",23,0)
 S XAA="S DG2=DG2+1,^UTILITY($J,""DG"",D0,DG2)=DGZD_U_DG3DT_U_DGIEN"
"RTN","DGPTFIC",24,0)
 S DIS("0AA")="I $D(^DGPT(D0,""M"",D1,0)) D 501^DGPTFIC F DGZD=1:1:25 S DGIEN=$P(DG3,U,DGZD) "_DG9_" X XAA"
"RTN","DGPTFIC",25,0)
 S XAAA="D EFFDATE^DGPTIC10(D0) S DG2=DG2+1,$P(^UTILITY($J,""DG"",D0,""A""),U,DGZD)=$$CODEC^ICDEX(80,+DGIEN)"
"RTN","DGPTFIC",26,0)
 S DIS("0AAA")="I $D(^DGPT(D0,70)) D 701^DGPTFIC F DGZD=1:1:25 S DGIEN=$P(DG3,U,DGZD) "_DG9_" X XAAA"
"RTN","DGPTFIC",27,0)
 S L=0
"RTN","DGPTFIC",28,0)
 ;
"RTN","DGPTFIC",29,0)
GO ;
"RTN","DGPTFIC",30,0)
 K DG9 W !,"Searching the PTF file  Select fields to sort by",! S DIC="^DGPT(",L=0
"RTN","DGPTFIC",31,0)
 S FLDS=$S($G(CODESET)=9:"[DGICD-9]",$G(CODESET)=10:"[DGICD-10]",1:"[DGICD]") D EN1^DIP
"RTN","DGPTFIC",32,0)
Q ; kill variables
"RTN","DGPTFIC",33,0)
 K DIS,DGZD,DGZJ,DINS,DXS,DTOUT,DG4,DGR,DIP,DP,%,DGZJJ,DGZT,DG1,DHD,I,J,DG2,DG3,DG3DT,DG5,DG6,DG7,DG8,DG9,D0,DJ,DTOT,FLDS,L,PROMPT,Z,X,DIC,X1,Y,XAA,XAAA,XAAAA
"RTN","DGPTFIC",34,0)
 K CODESET,DGDAT,DGPTDAT,DGTERM,DGTERMIE,DGVDT,LEXQ,LEXVDT,EFFDATE,IMPDATE,DG,DGIEN
"RTN","DGPTFIC",35,0)
 Q
"RTN","DGPTFIC",36,0)
 ;
"RTN","DGPTFIC",37,0)
EN1 ;Surgical Code PTF Record Search [DG PTF ICD SURGICAL SEARCH]
"RTN","DGPTFIC",38,0)
 S DIC="^ICD0("
"RTN","DGPTFIC",39,0)
 D CODESET^DGPTEXPR Q:CODESET<1
"RTN","DGPTFIC",40,0)
 G RANGE
"RTN","DGPTFIC",41,0)
E0 K DIC S DHD=DHD_" Surgical Code Search"
"RTN","DGPTFIC",42,0)
F0 ; search ^DGPT for the procedure codes
"RTN","DGPTFIC",43,0)
 S DIS(0)="I $D(^DGPT(D0,0)),$P(^(0),U,11)=1 S DG2=0,L=1 X:$D(^DGPT(D0,""P"")) DIS(""0AAAA"") S D1=+$O(^DGPT(D0,""S"",0)) X DIS(""0AAA"") X DIS(""0A"") I DG2 S ^UTILITY($J,""DG"",0)=""P"""
"RTN","DGPTFIC",44,0)
 S DIS("0A")="F E=0:0 X DIS(""0AA"") S D1=$O(^DGPT(D0,""S"",D1)) Q:D1'>0"
"RTN","DGPTFIC",45,0)
 S DG9=$S('DGR:"I DG1[(U_+DGIEN_U)",1:"D EFFDATE^DGPTIC10(D0) S DG=$$ICDDATA^ICDXCODE(""PROC"",+DGIEN,EFFDATE) I $P(DG,U,15)=DGTERMIE S DG4=$S(+DG>0&($P(DG,U,10)):$P(DG,U,2),1:"""")_""!"" I DG4]DG1&(DG6]DG4)")
"RTN","DGPTFIC",46,0)
 S XAA="S DG2=DG2+1,^UTILITY($J,""DG"",D0,DG2)=DGZD_U_DG3DT_U_DGIEN"
"RTN","DGPTFIC",47,0)
 S DIS("0AA")="I $D(^DGPT(D0,""S"",D1,0)) D 401^DGPTFIC F DGZD=1:1:25 S DGIEN=$P(DG3,U,DGZD) "_DG9_" X XAA"
"RTN","DGPTFIC",48,0)
 S XAAA="S DG2=DG2+1,^UTILITY($J,""DG"",D0,DG2)=DGZD_U_U_DGIEN"
"RTN","DGPTFIC",49,0)
 S DIS("0AAA")="I $D(^DGPT(D0,""401P"")) S DG3=^(""401P"") F DGZD=1:1:5 S DGIEN=$P(DG3,U,DGZD) "_DG9_" X XAAA"
"RTN","DGPTFIC",50,0)
 S XAAAA="S DG2=DG2+1,^UTILITY($J,""DG"",D0,DG2)=DGZD_U_DG3DT_U_DGIEN"
"RTN","DGPTFIC",51,0)
 S DIS("0AAAA")="F D1=0:0 S D1=$O(^DGPT(D0,""P"",D1)) Q:D1'>0  I $D(^DGPT(D0,""P"",D1,0)) D 601^DGPTFIC F DGZD=1:1:25 S DGIEN=$P(DG3,U,DGZD) "_DG9_" X XAAAA"
"RTN","DGPTFIC",52,0)
 S L=0
"RTN","DGPTFIC",53,0)
 G GO
"RTN","DGPTFIC",54,0)
 Q
"RTN","DGPTFIC",55,0)
OUT ; -- Output called from Print templates DGICD and DGICD-10
"RTN","DGPTFIC",56,0)
 S DGZJ=$X,DG2=$S(DGZT["ICD":"^ICD9(",1:"^ICD0("),DIO=1
"RTN","DGPTFIC",57,0)
 F I=0:0 S I=$O(^UTILITY($J,"DG",D0,I)) Q:I'>0  D
"RTN","DGPTFIC",58,0)
 . S J=^(I),Y=$P($P(J,U,2),".",1) X ^DD("DD") ;^(I) references global in line above 
"RTN","DGPTFIC",59,0)
 . W:I>1 !?DGZJ W DGZT_$P(J,U,1)_"  "_Y
"RTN","DGPTFIC",60,0)
 . W ?DGZJ+23,$P(@(DG2_"$P(J,U,3)"_",0)"),U,1)
"RTN","DGPTFIC",61,0)
 . I DG5 S DJ=$S($D(DJ):DJ,1:0)+1,DTOT=1
"RTN","DGPTFIC",62,0)
 ;
"RTN","DGPTFIC",63,0)
 Q:'$D(^UTILITY($J,"DG",D0,"A"))  S J=^("A")
"RTN","DGPTFIC",64,0)
 F I=1:1:25 S K=$P(J,U,I) I K]"" W !?DGZJ,$S(I=1:"PRINCIPAL DIAGNOSIS",1:"SECONDARY DIAG "_I),?DGZJ+23,K I DG5 S DJ=$S($D(DJ):DJ,1:0)+1,DTOT=1
"RTN","DGPTFIC",65,0)
 Q
"RTN","DGPTFIC",66,0)
HDRR ;
"RTN","DGPTFIC",67,0)
 N HDR,OLDHDR
"RTN","DGPTFIC",68,0)
 S OLDHDR="FOUND______DATE________CODE" ;L30
"RTN","DGPTFIC",69,0)
 I CODESYS=9 S HDR="FOUND______DATE________ICD-9 CODE"
"RTN","DGPTFIC",70,0)
 I CODESYS=10 S HDR="FOUND______DATE________ICD-10 CODE"
"RTN","DGPTFIC",71,0)
 ;
"RTN","DGPTFIC",72,0)
DHD S PROMPT="Then search for: ",DIC("S")=$S($G(DIC("S"))="":"I DG1'[(U_+Y_U)",1:DIC("S")_"&(DG1'[(U_+Y_U))")
"RTN","DGPTFIC",73,0)
 F I=0:0 D  Q:Y<1  S DG1=DG1_+Y_U Q:$L(DG1)>235
"RTN","DGPTFIC",74,0)
 . S Y=$$ICDLOOK(DGTERM,DGVDT,DIC("A")) Q:Y<1  S DG1=DG1_+Y_U Q:$L(DG1)>235
"RTN","DGPTFIC",75,0)
 S DHD="" F I=2:1 S DHD=DHD_$S(I'=2:",  ",1:"")_$P(@(DIC_"$P(DG1,U,I)"_",0)"),U,1) Q:'$P(DG1,U,I+1)  I $L(DHD)>200 S DHD=DHD_"....." Q
"RTN","DGPTFIC",76,0)
 ;
"RTN","DGPTFIC",77,0)
C W !,"Total by PTF record or ICD count: P// " S Z="^PTF record^ICD count" R X:DTIME G Q:X=U!'$T X:X="" "S X=""P"" W X" D IN^DGHELP G H:%=-1 S DG5=$S(X="I":1,1:0) Q
"RTN","DGPTFIC",78,0)
 ;
"RTN","DGPTFIC",79,0)
H W !!,"The search may have more than 1 match per PTF record",!,"Type 'P' to total only PTF records",!,"Type 'I' to total all matches",! G C
"RTN","DGPTFIC",80,0)
H1 W !!,"Type 'R' to specify a range of codes",!,"     'E' to specify a series of codes to match exactly",!
"RTN","DGPTFIC",81,0)
 ;
"RTN","DGPTFIC",82,0)
RANGE ;
"RTN","DGPTFIC",83,0)
 S DIC(0)="AMEQZ" K LEXVDT
"RTN","DGPTFIC",84,0)
 S DGTERM=$S(DIC[9&(CODESET=9):"ICD",DIC[9&(CODESET=10):"10D",DIC[0&(CODESET=9):"ICP",DIC[0&(CODESET=10):"10P",1:"")
"RTN","DGPTFIC",85,0)
 S DGTERMIE=$S(DIC[9&(CODESET=9):1,DIC[9&(CODESET=10):30,DIC[0&(CODESET=9):2,DIC[0&(CODESET=10):31,1:"")
"RTN","DGPTFIC",86,0)
 S DGVDT=$$IMPDATE^LEXU("10D")
"RTN","DGPTFIC",87,0)
 I CODESET=9 S DGVDT=DGVDT-30000
"RTN","DGPTFIC",88,0)
 I CODESET=10 S DGVDT=DGVDT+3 ; 3 days later
"RTN","DGPTFIC",89,0)
 W !,"Search by Range or Exact match: E// "
"RTN","DGPTFIC",90,0)
 S Z="^RANGE^EXACT MATCH" R X:DTIME
"RTN","DGPTFIC",91,0)
 G Q:X=U!'$T X:X="" "S X=""E"" W X" D IN^DGHELP G H1:%=-1 S DGR=$S(X="R":1,1:0)
"RTN","DGPTFIC",92,0)
 S DG7=$S(DIC[9:"Diagnosis",1:"Surgical") G E:'DGR
"RTN","DGPTFIC",93,0)
 S DIC("A")="Start with "_DG7_" code: "
"RTN","DGPTFIC",94,0)
 S Y=$$ICDLOOK(DGTERM,DGVDT,DIC("A")) G Q:Y'>0 S DG1=$P(Y,U,2)_" "
"RTN","DGPTFIC",95,0)
F ;
"RTN","DGPTFIC",96,0)
 S DIC("A")="Go to "_DG7_" code: " S Y=$$ICDLOOK(DGTERM,DGVDT,DIC("A")) G Q:+Y<1
"RTN","DGPTFIC",97,0)
 S DG6=$P(Y,U,2)_"! " I DG6']DG1 W !,"Must be after start code",! G F
"RTN","DGPTFIC",98,0)
 S DHD=DG1_" to "_$P(DG6,"!",1)_" "_DG7_" Code Search" D C G Q:'$D(X),@("F"_$E(DIC,5))
"RTN","DGPTFIC",99,0)
 Q
"RTN","DGPTFIC",100,0)
 ;
"RTN","DGPTFIC",101,0)
E ;
"RTN","DGPTFIC",102,0)
 S DIC("A")="Select "_DG7_" code: "
"RTN","DGPTFIC",103,0)
 S Y=$$ICDLOOK(DGTERM,DGVDT,DIC("A"))
"RTN","DGPTFIC",104,0)
 G Q:Y'>0 S DG1=U_+Y_U D DHD G Q:'$D(X),@("E"_$E(DIC,5))
"RTN","DGPTFIC",105,0)
 Q
"RTN","DGPTFIC",106,0)
ICDLOOK(TERM,EFFDATE,PROMPT) ; icd lookup
"RTN","DGPTFIC",107,0)
 ; called from DGPTFIC and DGPTDRG
"RTN","DGPTFIC",108,0)
 K X,Y,LEXVDT
"RTN","DGPTFIC",109,0)
 N DIC,DGDAT ;,EFFDATE,IMPDATE,TERM,DGTEMP
"RTN","DGPTFIC",110,0)
 S DGDAT=$S(EFFDATE'="":EFFDATE,1:DT)
"RTN","DGPTFIC",111,0)
 I TERM="10D"!(TERM="ICD") D DIAG
"RTN","DGPTFIC",112,0)
 I TERM="10P"!(TERM="ICP") D PROC
"RTN","DGPTFIC",113,0)
 Q $G(Y)
"RTN","DGPTFIC",114,0)
 ;
"RTN","DGPTFIC",115,0)
DIAG ; Ask diagnosis
"RTN","DGPTFIC",116,0)
 N DGSAV,DIR
"RTN","DGPTFIC",117,0)
 ;
"RTN","DGPTFIC",118,0)
 I $G(PROMPT)'="" S DIR("A")=PROMPT
"RTN","DGPTFIC",119,0)
 ;1/16/2014 String must be at least 3 chars and up to 30 chars, 
"RTN","DGPTFIC",120,0)
 ;but API's truncate, so no need to reject over 30. ICD-9 has no listed upper boundary
"RTN","DGPTFIC",121,0)
 ;lower boundary needs to be 1 to allow for "?"
"RTN","DGPTFIC",122,0)
 I CODESET=10 S DIR(0)="FAO^1:",DIR("?")="^D D1^DGICDGT",DIR("??")="^D D2^DGICDGT"
"RTN","DGPTFIC",123,0)
 I CODESET=9 S DIR(0)="FAO^1:",DIR("?")="^D D19^DGICDGT",DIR("??")="^D D29^DGICDGT"
"RTN","DGPTFIC",124,0)
 D ^DIR
"RTN","DGPTFIC",125,0)
 S DGSAV=$G(Y)
"RTN","DGPTFIC",126,0)
 I $D(DTOUT)!($D(DUOUT))!($D(DIRUT))!($D(DIROUT))!(Y="") S Y=-1 Q
"RTN","DGPTFIC",127,0)
 I CODESET=9 D ICDEN1^DGPTF5 ;maintain legacy search
"RTN","DGPTFIC",128,0)
 I CODESET=10 D LEX^DGICD
"RTN","DGPTFIC",129,0)
 I ($D(DUOUT))!($D(DIRUT)),DGSAV=$G(Y) G DIAG ;User entered an "^" during the search - start over.
"RTN","DGPTFIC",130,0)
 I $G(X)="",$G(Y)'=-1,$L($G(Y))=1,$L($G(DGSAV))=1 G DIAG ; If 1 character answer, repeat request
"RTN","DGPTFIC",131,0)
 I '$D(X),'$D(Y) G DIAG ;Invalid ICD-10 entry
"RTN","DGPTFIC",132,0)
 I $G(Y)<1,$G(X)=DGSAV G DIAG ; Invalid ICD-9 entry
"RTN","DGPTFIC",133,0)
 I $G(Y)>0 S X=+Y,Y=$$ICDDATA^ICDXCODE("DIAG",$G(X),EFFDATE)
"RTN","DGPTFIC",134,0)
 Q
"RTN","DGPTFIC",135,0)
 ;
"RTN","DGPTFIC",136,0)
PROC ; Ask Procedure
"RTN","DGPTFIC",137,0)
 N DGSAV,DIR,IMPDATE
"RTN","DGPTFIC",138,0)
 S IMPDATE=$$IMPDATE^LEXU(31)
"RTN","DGPTFIC",139,0)
 I $G(CODESET)="" S CODESET=$S(DT<$G(IMPDATE):9,1:10)
"RTN","DGPTFIC",140,0)
 I '$D(EFFDATE) S EFFDATE=$S(CODESET=10:IMPDATE+1,1:IMPDATE-1)
"RTN","DGPTFIC",141,0)
 ;
"RTN","DGPTFIC",142,0)
 S DIR(0)="FAO^1:12"
"RTN","DGPTFIC",143,0)
 I $G(PROMPT)'="" S DIR("A")=PROMPT
"RTN","DGPTFIC",144,0)
 I $G(CODESET)=10 S DIR("?")="^D P1^DGICDGT",DIR("??")="^D P2^DGICDGT"
"RTN","DGPTFIC",145,0)
 I $G(CODESET)=9 S DIR("?")="^D P19^DGICDGT",%=0
"RTN","DGPTFIC",146,0)
 D ^DIR
"RTN","DGPTFIC",147,0)
 S DGSAV=$G(Y)
"RTN","DGPTFIC",148,0)
 I $D(DTOUT)!($D(DUOUT))!($D(DIRUT))!($D(DIROUT))!(Y="") S Y=-1 Q
"RTN","DGPTFIC",149,0)
 I CODESET=9 S Y=$$SEARCH^ICDSAPI("PROC",,"QEMZ",EFFDATE) D
"RTN","DGPTFIC",150,0)
 . I +$G(DGSAV)>0,$G(Y)<1,'+$G(X) K X,Y ; Original Search value was valid but ICDSAPI returned -1
"RTN","DGPTFIC",151,0)
 . Q
"RTN","DGPTFIC",152,0)
 I CODESET=10 D
"RTN","DGPTFIC",153,0)
 . I X["*" S X=$P(X,"*",1)_$P(X,"*",2)
"RTN","DGPTFIC",154,0)
 . D ASK^DGICP
"RTN","DGPTFIC",155,0)
 ;
"RTN","DGPTFIC",156,0)
 I '$D(X),'$D(Y) G PROC ;Invalid ICD entry
"RTN","DGPTFIC",157,0)
 I $G(Y)<1,$G(X)=DGSAV G PROC ; Invalid ICD-9 entry
"RTN","DGPTFIC",158,0)
 I $G(Y)>0 S X=+Y,Y=$$ICDDATA^ICDXCODE("PROC",$G(X),EFFDATE)
"RTN","DGPTFIC",159,0)
 K LEXVDT
"RTN","DGPTFIC",160,0)
 Q Y
"RTN","DGPTFIC",161,0)
 ;
"RTN","DGPTFIC",162,0)
401 ; Build 25 piece string with OPERATION codes
"RTN","DGPTFIC",163,0)
 N DG401
"RTN","DGPTFIC",164,0)
 S DG401=$G(^DGPT(D0,"S",D1,0)),DG3=$$STR401^DGPTFUT(D0,D1),DG3DT=$P(DG401,U,1)
"RTN","DGPTFIC",165,0)
 Q
"RTN","DGPTFIC",166,0)
501 ; Build 25 piece string with MOVEMENT codes
"RTN","DGPTFIC",167,0)
 N DG501
"RTN","DGPTFIC",168,0)
 S DG501=$G(^DGPT(D0,"M",D1,0)),DG3=$$STR501^DGPTFUT(D0,D1),DG3DT=$P(DG501,U,10)
"RTN","DGPTFIC",169,0)
 Q
"RTN","DGPTFIC",170,0)
601 ; Build 25 piece string with PROCEDURE codes
"RTN","DGPTFIC",171,0)
 N DG601
"RTN","DGPTFIC",172,0)
 S DG601=$G(^DGPT(D0,"P",D1,0)),DG3=$$STR601^DGPTFUT(D0,D1),DG3DT=$P(DG601,U,1)
"RTN","DGPTFIC",173,0)
 Q
"RTN","DGPTFIC",174,0)
701 ; Build 25 piece string with DIAGNOSTIC codes
"RTN","DGPTFIC",175,0)
 S DG3=$$STR701^DGPTFUT(D0)
"RTN","DGPTFIC",176,0)
 Q
"RTN","DGPTFJC")
0^2^B64477474
"RTN","DGPTFJC",1,0)
DGPTFJC ;ALB/ADL,HIOFT/FT - CLOSED PTF ;12/12/14 2:15pm
"RTN","DGPTFJC",2,0)
 ;;5.3;Registration;**158,510,517,590,636,635,701,729,785,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTFJC",3,0)
 ;;ADL;;Update for CSV Project;;Mar 25, 2003
"RTN","DGPTFJC",4,0)
101 W !,"Enter '^N' for Screen N, RETURN for <MAS>,'^' to Abort: <MAS>//"
"RTN","DGPTFJC",5,0)
 D READ G Q^DGPTF:X=U,^DGPTFM:X="",^DGPTFJ:X?1"^".E D H G 101
"RTN","DGPTFJC",6,0)
 ;
"RTN","DGPTFJC",7,0)
H D HELP^DGPTFJ W ! Q
"RTN","DGPTFJC",8,0)
 ;
"RTN","DGPTFJC",9,0)
MAS W !!,"Enter '^N' for Screen N, RETURN for <",DGNUM,">,'^' to Abort: <",DGNUM,">//"
"RTN","DGPTFJC",10,0)
 D READ G Q^DGPTF:X=U,^DGPTFJ:X?1"^".E
"RTN","DGPTFJC",11,0)
 I X="" S (ST,ST1)=J+1 G @($S($D(DGZDIAG):"NDG",$D(DGZSER):"NSR",$D(DGZPRO):"NPR",$D(DGZSUR):"EN",+DGZPRF-1'=$P(DGZPRF,U,3):"NPS",1:"DONE")_"^DGPTFM")
"RTN","DGPTFJC",12,0)
 D H G MAS
"RTN","DGPTFJC",13,0)
 ;
"RTN","DGPTFJC",14,0)
401 S DGNUM=$S($D(S(DGZS0+1)):401_"-"_(DGZS0+1),1:"MAS")
"RTN","DGPTFJC",15,0)
 W !,"Enter '^N' for Screen N, RETURN for <",DGNUM,">,'^' to Abort: <",DGNUM,">//"
"RTN","DGPTFJC",16,0)
 D READ G Q^DGPTF:X=U,NEXM^DGPTFM5:X="",^DGPTFJ:X?1"^".E D H G 401
"RTN","DGPTFJC",17,0)
 ;
"RTN","DGPTFJC",18,0)
501 W !,"Enter '^N' for Screen N, RETURN for <",DGNUM,">,'^' to Abort: <",DGNUM,">//"
"RTN","DGPTFJC",19,0)
 D READ G Q^DGPTF:X=U,NEXM^DGPTFM4:X="",^DGPTFJ:X?1"^".E D H G 501
"RTN","DGPTFJC",20,0)
 ;
"RTN","DGPTFJC",21,0)
601 W !,"Enter '^N' for Screen N, RETURN for <",DGNUM,">,'^' to Abort: <",DGNUM,">//"
"RTN","DGPTFJC",22,0)
 D READ G Q^DGPTF:X=U,NEXP^DGPTFM6:X="",^DGPTFJ:X?1"^".E D H G 601
"RTN","DGPTFJC",23,0)
 ;
"RTN","DGPTFJC",24,0)
701 ;
"RTN","DGPTFJC",25,0)
 G ACT1^DGPTF41 ; new code
"RTN","DGPTFJC",26,0)
 ;
"RTN","DGPTFJC",27,0)
 ;Display screen prompt and process user response for 801 screen
"RTN","DGPTFJC",28,0)
801 W !,"Enter '^N' for Screen N, RETURN for <",DGNUM,">,'^' to Abort: <",DGNUM,">//"
"RTN","DGPTFJC",29,0)
 D READ G Q^DGPTF:X=U,NEXP^DGPTFM2:X="",^DGPTFJ:X?1"^".E D H G 801
"RTN","DGPTFJC",30,0)
READ ; -- read X
"RTN","DGPTFJC",31,0)
 R X:DTIME S:'$T X="^",DGPTOUT=""
"RTN","DGPTFJC",32,0)
 Q
"RTN","DGPTFJC",33,0)
 ;
"RTN","DGPTFJC",34,0)
EN ; DG*636 ; DG*5.3*850
"RTN","DGPTFJC",35,0)
 ; Called from Diagnosis fields in 501 movements
"RTN","DGPTFJC",36,0)
 ; Variable DGN is passed globally as a node identifier
"RTN","DGPTFJC",37,0)
 ;
"RTN","DGPTFJC",38,0)
 N EFFDATE,DGTEMP,IMPDATE,DGINAC
"RTN","DGPTFJC",39,0)
 D EFFDATE^DGPTIC10(DA(1))
"RTN","DGPTFJC",40,0)
 S K=$S($D(K):K,1:1),DGER=0 ;S DGPTDAT=$$GETDATE^ICDGTDRG(DA(1))
"RTN","DGPTFJC",41,0)
 ;
"RTN","DGPTFJC",42,0)
 ;if there is a disch and a previous movement, if disch
"RTN","DGPTFJC",43,0)
 ;is >Oct 1 (next FY) and movement <Oct 1, then use the movement date
"RTN","DGPTFJC",44,0)
 I $G(DGZM0)="" S DGZM0=1,M(DGZM0)="0^"  ; to prevent sys err from TD5^DGPTTS2 and ptf quick load (DG*701/729)
"RTN","DGPTFJC",45,0)
 N DGPTMVDT I DGPTDAT=$P($G(^DGPT(DA(1),70)),U,1)&(DGPTDAT=$P($G(^DGPT(DA(1),"M",1,0)),U,10))&($D(M(DGZM0)))&($P($G(M(DGZM0)),U)'=1) S DGPTMVDT=$P($G(^DGPT(DA(1),"M",2,0)),U,10)
"RTN","DGPTFJC",46,0)
 ;next line is if using "Add a code" in MAS screen
"RTN","DGPTFJC",47,0)
 I '$G(DGPTMVDT)&($D(DGADD))&($G(DGMOV)'=1) S DGPTMVDT=$P($G(^DGPT(DA(1),"M",2,0)),U,10)
"RTN","DGPTFJC",48,0)
 I $G(DGPTMVDT) D
"RTN","DGPTFJC",49,0)
 .;if same calendar year
"RTN","DGPTFJC",50,0)
 .I $E(DGPTDAT,1,3)=$E(DGPTMVDT,1,3),$E(DGPTDAT,4,7)>0930,$E(DGPTMVDT,4,7)<1001 S DGPTDAT=DGPTMVDT Q
"RTN","DGPTFJC",51,0)
 .;if different calendar year
"RTN","DGPTFJC",52,0)
 .I ($E(DGPTDAT,1,3)-$E(DGPTMVDT,1,3))>1 S DGPTDAT=DGPTMVDT Q
"RTN","DGPTFJC",53,0)
 .I $E(DGPTMVDT,4,7)<1001 S DGPTDAT=DGPTMVDT Q
"RTN","DGPTFJC",54,0)
 .I $E(DGPTDAT,4,7)>0930 S DGPTDAT=DGPTMVDT Q
"RTN","DGPTFJC",55,0)
 I $G(DGPMT)!$G(DGQWK) K M(DGZM0),DGZM0  ; DG*701/729
"RTN","DGPTFJC",56,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+Y,EFFDATE)
"RTN","DGPTFJC",57,0)
 I +DGPTTMP<0 D MSG("Can not use inactive codes.") S DGER=1 Q
"RTN","DGPTFJC",58,0)
 I '$P(DGPTTMP,U,10) S DGINAC=$P(DGPTTMP,U,12) I DGINAC<EFFDATE D MSG("Can not use inactive codes.") S DGER=1 Q
"RTN","DGPTFJC",59,0)
 ;end DG*636
"RTN","DGPTFJC",60,0)
 ;===================================================================
"RTN","DGPTFJC",61,0)
 ;
"RTN","DGPTFJC",62,0)
 ;Allow sex-unique ICD codes to be assigned to the opposite sex
"RTN","DGPTFJC",63,0)
 ;for 501 movements, output warning only (Ref: DG*5.3*884)
"RTN","DGPTFJC",64,0)
 I $P(DGPTTMP,U,11)]""&($P(DGPTTMP,U,11)'=$S($D(^DPT(+^DGPT(DA(1),0),0)):$P(^(0),U,2),1:"M")) D
"RTN","DGPTFJC",65,0)
 . D:K<24 MSG($P(DGPTTMP,U,2)_" should only be used with "_$S($P(DGPTTMP,U,11)="F":"FEMALES",1:"MALES")) S K=K+1 Q
"RTN","DGPTFJC",66,0)
 ;
"RTN","DGPTFJC",67,0)
 ; -- can't enter a code already in the movement
"RTN","DGPTFJC",68,0)
 I $D(^DGPT(DA(1),"M","AC",+Y,DA)) W !,"Cannot enter the same code twice." S DGER=1 Q
"RTN","DGPTFJC",69,0)
 ;
"RTN","DGPTFJC",70,0)
 S %=U_$P(^DGPT(DA(1),"M",DA,0),U,5,15),$P(%,U,7)=U ;take movement date out of %
"RTN","DGPTFJC",71,0)
 D NOT(+Y,%)
"RTN","DGPTFJC",72,0)
 Q:DGER
"RTN","DGPTFJC",73,0)
 D REQ(+Y,%)
"RTN","DGPTFJC",74,0)
 Q
"RTN","DGPTFJC",75,0)
 ;
"RTN","DGPTFJC",76,0)
EN1 ; called from 601 movement procedure codes and 401 Surgical operations
"RTN","DGPTFJC",77,0)
 S K=$S($D(K):K,1:1),DGER=0
"RTN","DGPTFJC",78,0)
 ;
"RTN","DGPTFJC",79,0)
 N EFFDATE,DGTEMP,IMPDATE,DGPTDAT
"RTN","DGPTFJC",80,0)
 ;
"RTN","DGPTFJC",81,0)
 ;Next 2 lines commented out since they were used to prevent duplicate operation/procedure codes (401 & 601)
"RTN","DGPTFJC",82,0)
 ;from being entered. If duplicate checking is ever implemented for operation/procedure data, a replacement
"RTN","DGPTFJC",83,0)
 ;multi-field xref will need to be created. (Ref: DG*5.3*884)
"RTN","DGPTFJC",84,0)
 ;S:$G(DGIT)=5 DGCR="AP6",DGSB="P"
"RTN","DGPTFJC",85,0)
 ;S:$G(DGIT)=8 DGCR="AO",DGSB="S"
"RTN","DGPTFJC",86,0)
 ;
"RTN","DGPTFJC",87,0)
 D EFFDATE^DGPTIC10(DA(1))
"RTN","DGPTFJC",88,0)
 ;S DGICD0=$$ICDDATA^ICDXCODE("PROC",+Y,EFFDATE)
"RTN","DGPTFJC",89,0)
 N DGPRDT S DGPRDT=$S(+$G(DGPROCD):+DGPROCD,1:+$G(DGPROCI))
"RTN","DGPTFJC",90,0)
 S:'+$G(DGPRDT) DGICD0=$$ICDDATA^ICDXCODE("PROC",+Y,EFFDATE)
"RTN","DGPTFJC",91,0)
 I +$G(DGPRDT) D
"RTN","DGPTFJC",92,0)
 . ;if procedure before ICD-10 era but the effective date (discharge date) is after then use the eff date and quit
"RTN","DGPTFJC",93,0)
 . I DGPRDT<IMPDATE,EFFDATE'<IMPDATE S DGICD0=$$ICDDATA^ICDXCODE("PROC",+Y,EFFDATE) Q
"RTN","DGPTFJC",94,0)
 . ;otherwise use the procedure date
"RTN","DGPTFJC",95,0)
 . S DGICD0=$$ICDDATA^ICDXCODE("PROC",+Y,DGPRDT)
"RTN","DGPTFJC",96,0)
 ;
"RTN","DGPTFJC",97,0)
 I +DGICD0,0!('$P(DGICD0,U,10)) S DGER=1 Q
"RTN","DGPTFJC",98,0)
 ;
"RTN","DGPTFJC",99,0)
 ;Allow sex-unique ICD codes to be assigned to the opposite sex for
"RTN","DGPTFJC",100,0)
 ;401 Surgeries and 601 Procedures, output warning only (Ref: DG*5.3*884)
"RTN","DGPTFJC",101,0)
 I $P(DGICD0,U,11)]""&($P(DGICD0,U,11)'=$S($D(^DPT(+^DGPT(DA(1),0),0)):$P(^(0),U,2),1:"M")) D
"RTN","DGPTFJC",102,0)
 . D:K<24 MSG($P(DGICD0,U,2)_" should only be used with "_$S($P(DGICD0,U,11)="F":"FEMALES",1:"MALES")) S K=K+1 Q
"RTN","DGPTFJC",103,0)
 ;
"RTN","DGPTFJC",104,0)
 ;Next 2 lines commented out since user may enter duplicate operation/procedure codes (401 & 601) as sometimes
"RTN","DGPTFJC",105,0)
 ;they must code left and right when there aren't specific codes, they enter the code twice. (Ref: DG*5.3*884)
"RTN","DGPTFJC",106,0)
 ;S %=$P(^DGPT(DA(1),$G(DGSB),DA,0),U,DGI)
"RTN","DGPTFJC",107,0)
 ;I $D(^DGPT(DA(1),$G(DGSB),$G(DGCR),Y,DA)),%'=Y S DGER=1 D MSG("Cannot enter the same code more than once within a "_$S(DGSB="S":"401",1:"601")_" transaction") Q
"RTN","DGPTFJC",108,0)
 ;
"RTN","DGPTFJC",109,0)
 Q
"RTN","DGPTFJC",110,0)
EN2 ; Called from 701 movement procedure codes
"RTN","DGPTFJC",111,0)
 S K=$S($D(K):K,1:1),DGER=0
"RTN","DGPTFJC",112,0)
 N EFFDATE,DGTEMP,IMPDATE,DGPTDAT
"RTN","DGPTFJC",113,0)
 D EFFDATE^DGPTIC10(DA)
"RTN","DGPTFJC",114,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+Y,EFFDATE)
"RTN","DGPTFJC",115,0)
 ; 
"RTN","DGPTFJC",116,0)
 I +DGPTTMP<0!('$P(DGPTTMP,U,10)) S DGER=1 Q
"RTN","DGPTFJC",117,0)
 ;
"RTN","DGPTFJC",118,0)
 ;Allow sex-unique ICD codes to be assigned to the opposite sex for
"RTN","DGPTFJC",119,0)
 ;401P Procedures, output warning only (Ref: DG*5.3*884)
"RTN","DGPTFJC",120,0)
 I $P(DGPTTMP,U,11)]""&($P(DGPTTMP,U,11)'=$S($D(^DPT(+^DGPT(DA,0),0)):$P(^(0),U,2),1:"M")) D
"RTN","DGPTFJC",121,0)
 . D:K<24 MSG($P(DGPTTMP,U,2)_" should only be used with "_$S($P(DGPTTMP,U,11)="F":"FEMALES",1:"MALES")) S K=K+1 Q
"RTN","DGPTFJC",122,0)
 ;
"RTN","DGPTFJC",123,0)
 S L=$P($S($D(^DGPT((DA),"401P")):^("401P"),1:0),U,1,5)
"RTN","DGPTFJC",124,0)
 S %=$P(L,U,DGI)
"RTN","DGPTFJC",125,0)
 S L=$P(L,U,1,DGI-1)_U_$P(L,U,DGI+1,5)
"RTN","DGPTFJC",126,0)
 I L[+Y D MSG("Cannot enter the same code twice.") S DGER=1 Q
"RTN","DGPTFJC",127,0)
 Q
"RTN","DGPTFJC",128,0)
EN3 ;Called from 701 movement diagnosis fields (top level)
"RTN","DGPTFJC",129,0)
 ; - EFFDATE := date of interest e.g. patient discharge date
"RTN","DGPTFJC",130,0)
 ; - IMPDATE := ICD-10 implementation date
"RTN","DGPTFJC",131,0)
 ; - DGTEMP  := temp variable to hold data from $$IMPDATE^DGPTIC10
"RTN","DGPTFJC",132,0)
 ;
"RTN","DGPTFJC",133,0)
 N EFFDATE,DGTEMP,IMPDATE,DGINAC
"RTN","DGPTFJC",134,0)
 ;
"RTN","DGPTFJC",135,0)
 D EFFDATE^DGPTIC10(DA)
"RTN","DGPTFJC",136,0)
 ;
"RTN","DGPTFJC",137,0)
 S K=$S($D(K):K,1:1),DGER=0,DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+Y,EFFDATE)
"RTN","DGPTFJC",138,0)
 I +DGPTTMP<0 D MSG("Can not use inactive codes.") S DGER=1 Q
"RTN","DGPTFJC",139,0)
 I '$P(DGPTTMP,U,10) S DGINAC=$P(DGPTTMP,U,12) I DGINAC<EFFDATE D MSG("Can not use inactive codes.") S DGER=1 Q
"RTN","DGPTFJC",140,0)
 ; 
"RTN","DGPTFJC",141,0)
 ; - unacceptable as primary DX
"RTN","DGPTFJC",142,0)
 I DGI=1,$P(DGPTTMP,U,5) D MSG("Not acceptable as a primary Diagnosis.") S DGER=1 Q
"RTN","DGPTFJC",143,0)
 ;
"RTN","DGPTFJC",144,0)
 ;Allow sex-unique ICD codes to be assigned to the opposite sex for
"RTN","DGPTFJC",145,0)
 ;Primary and Secondary Dx's, output warning only (Ref: DG*5.3*884)
"RTN","DGPTFJC",146,0)
 I $P(DGPTTMP,U,11)]""&($P(DGPTTMP,U,11)'=$S($D(^DPT(+^DGPT(DA,0),0)):$P(^(0),U,2),1:"M")) D
"RTN","DGPTFJC",147,0)
 . D:K<24 MSG($P(DGPTTMP,U,2)_" should only be used with "_$S($P(DGPTTMP,U,11)="F":"FEMALES",1:"MALES")) S K=K+1 Q
"RTN","DGPTFJC",148,0)
 ;
"RTN","DGPTFJC",149,0)
 ; -- build string of 701 dx codes
"RTN","DGPTFJC",150,0)
 S %=$S($D(^DGPT(DA,70)):^(70),1:""),%=U_$P(%,U,10)_U_$P(%,U,16,24)_U
"RTN","DGPTFJC",151,0)
 S:$G(^DGPT(DA,71))'="" %=%_^(71)_U
"RTN","DGPTFJC",152,0)
 ;
"RTN","DGPTFJC",153,0)
 ; -- can't enter the same entry twice
"RTN","DGPTFJC",154,0)
 S $P(%,U,DGI+1)=U I %[(U_+Y_U) S DGER=1 D MSG("Cannot enter the same code twice.") Q
"RTN","DGPTFJC",155,0)
 ;
"RTN","DGPTFJC",156,0)
 D NOT(+Y,%)
"RTN","DGPTFJC",157,0)
 Q:DGER
"RTN","DGPTFJC",158,0)
 ;
"RTN","DGPTFJC",159,0)
 D REQ(+Y,%)
"RTN","DGPTFJC",160,0)
 Q
"RTN","DGPTFJC",161,0)
EN4 ; called from ??
"RTN","DGPTFJC",162,0)
 S K=$S($D(K):K,1:1),DGER=0,N=$$ICDDATA^ICDXCODE("DIAG",+Y,$$GETDATE^ICDGTDRG(DA)) I N<0!'$P(N,U,10) S DGER=1 Q
"RTN","DGPTFJC",163,0)
 I DGI=1,$P(N,U,5) S DGER=1 Q
"RTN","DGPTFJC",164,0)
 I $P(N,U,11)]""&($P(N,U,11)'=$S($D(^DPT(+^DGPT(DA(2),0),0)):$P(^(0),U,2),1:"M")) D:K<24 MSG($P(N,U,2)_" can only be used with "_$S($P(N,U,11)="F":"FEMALES",1:"MALES")) S K=K+1,DGER=1 Q
"RTN","DGPTFJC",165,0)
 S %=$S($D(^DGPT(DA(2),"C",DA(1),"CPT",DA,0)):^(0),1:""),%=U_$P(%,U,4,7)_U,$P(%,U,DGI+1)=U I %[(U_+Y_U) S DGER=1 Q
"RTN","DGPTFJC",166,0)
 D NOT(+Y,%)
"RTN","DGPTFJC",167,0)
 Q:DGER
"RTN","DGPTFJC",168,0)
 D REQ(DA(2),+Y,%)
"RTN","DGPTFJC",169,0)
 Q
"RTN","DGPTFJC",170,0)
EN5 ; DG*5.3*850
"RTN","DGPTFJC",171,0)
 ; called from the diagnosis input transforms in file 46
"RTN","DGPTFJC",172,0)
 N EFFDATE,DGTEMP,IMPDATE
"RTN","DGPTFJC",173,0)
 I $G(PTF) D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPTFJC",174,0)
 S K=$S($D(K):K,1:1),DGER=0,DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+Y,EFFDATE)
"RTN","DGPTFJC",175,0)
 I +DGPTTMP<0!('$P(DGPTTMP,U,10)) D MSG("Must be an active code.") S DGER=1 Q
"RTN","DGPTFJC",176,0)
 ;
"RTN","DGPTFJC",177,0)
 I $P(DGPTTMP,U,11)]""&($P(DGPTTMP,U,11)'=$S($D(^DPT(+^DGPT(PTF,0),0)):$P(^(0),U,2),1:"M")) D
"RTN","DGPTFJC",178,0)
 . D:K<24 MSG($P(DGPTTMP,U,2)_" can only be used with "_$S($P(DGPTTMP,U,11)="F":"FEMALES",1:"MALES")) S K=K+1,DGER=1 Q
"RTN","DGPTFJC",179,0)
 ;
"RTN","DGPTFJC",180,0)
 S K=^DGCPT(46,DA,0) I $P(K,U,4,7)_U_$P(K,U,15,18)[Y D MSG("Cannot enter the same code twice.") S DGER=1 Q
"RTN","DGPTFJC",181,0)
 Q
"RTN","DGPTFJC",182,0)
EN6 ; -- called from file 46; .01 field
"RTN","DGPTFJC",183,0)
 I $P($G(^(0)),U,2)?.N S DGER=1 Q
"RTN","DGPTFJC",184,0)
 S DGER=0,N=$$CPT^ICPTCOD(+Y,$$GETDATE^ICDGTDRG($G(DA))) I N<0!'$P(N,"^",7) S DGER=1 Q
"RTN","DGPTFJC",185,0)
 S L=0 F  S L=$O(^DGCPT(46,L)) Q:L'>0  I +$G(^(L,1))=$G(DGPRD),$P(^(1),U,3)=$G(PTF),+^(0)=Y,'$G(^(9)) S DGER=1 Q
"RTN","DGPTFJC",186,0)
 K L Q
"RTN","DGPTFJC",187,0)
 Q
"RTN","DGPTFJC",188,0)
 ;
"RTN","DGPTFJC",189,0)
REQ(DX,STRING) ; - is another ICD code required with this code
"RTN","DGPTFJC",190,0)
 ; -- input     DX - code being entered
"RTN","DGPTFJC",191,0)
 ;          STRING - string of code iens already entered for movement ("^123^456^789^")
"RTN","DGPTFJC",192,0)
 ; -- output - writes message if another code is required
"RTN","DGPTFJC",193,0)
 ;
"RTN","DGPTFJC",194,0)
 N I,IEN,DGI,DZ
"RTN","DGPTFJC",195,0)
 K ^TMP("DGPTF-R",$J)
"RTN","DGPTFJC",196,0)
 Q:$G(DX)<1
"RTN","DGPTFJC",197,0)
 Q:'$$REQ^ICDEX(DX,"DGPTF-R",1)
"RTN","DGPTFJC",198,0)
 ;
"RTN","DGPTFJC",199,0)
 S DGI=1 S DZ="" F I=0:0 S DZ=$O(^TMP("DGPTF-R",$J,"B",DZ)) Q:DZ=""  D  Q:DG1=1
"RTN","DGPTFJC",200,0)
 . S IEN=$O(^TMP("DGPTF-R",$J,"B",DZ,0)) Q:IEN<1  S DG1=0 I STRING[(U_IEN_U) S DG1=1 Q
"RTN","DGPTFJC",201,0)
 I DG1=0 D MSG($S(+DGPTTMP>0:$P(DGPTTMP,U,2),1:"")_" requires additional code.")
"RTN","DGPTFJC",202,0)
 K ^TMP("DGPTF-R",$J)
"RTN","DGPTFJC",203,0)
 Q
"RTN","DGPTFJC",204,0)
 ;
"RTN","DGPTFJC",205,0)
NOT(DX,STRING) ; - is icd code not to use with existing codes
"RTN","DGPTFJC",206,0)
 ; -- input     DX - code being entered
"RTN","DGPTFJC",207,0)
 ;          STRING - string of code iens already entered for movement ("^123^456^789^")
"RTN","DGPTFJC",208,0)
 ; -- output  DGER :=1 if error
"RTN","DGPTFJC",209,0)
 ;            writes message if not allowed
"RTN","DGPTFJC",210,0)
 ;
"RTN","DGPTFJC",211,0)
 N I,IEN,DGI,DZ
"RTN","DGPTFJC",212,0)
 K ^TMP("DGPTF-N",$J)
"RTN","DGPTFJC",213,0)
 S DGER=0
"RTN","DGPTFJC",214,0)
 Q:$G(DX)<1
"RTN","DGPTFJC",215,0)
 ;
"RTN","DGPTFJC",216,0)
 Q:'$$NOT^ICDEX(DX,"DGPTF-N",1)
"RTN","DGPTFJC",217,0)
 ;
"RTN","DGPTFJC",218,0)
 S DGI=1 S DZ="" F I=0:0 S DZ=$O(^TMP("DGPTF-N",$J,"B",DZ)) Q:DZ=""  D  Q:DGER
"RTN","DGPTFJC",219,0)
 . S IEN=$O(^TMP("DGPTF-N",$J,"B",DZ,0)) Q:IEN<1  I STRING[(U_IEN_U) S DGER=1 D  Q:DGER
"RTN","DGPTFJC",220,0)
 .. D MSG("Cannot use "_$$CODEC^ICDEX(80,DX)_"  with "_$$CODEC^ICDEX(80,IEN)) Q
"RTN","DGPTFJC",221,0)
 K ^TMP("DGPTF-N",$J)
"RTN","DGPTFJC",222,0)
 Q
"RTN","DGPTFJC",223,0)
MSG(TEXT) ;
"RTN","DGPTFJC",224,0)
 D EN^DDIOL(TEXT)
"RTN","DGPTFJC",225,0)
 Q
"RTN","DGPTFM")
0^3^B81427420
"RTN","DGPTFM",1,0)
DGPTFM ;ALB/MTC/PLT - PTF OP-PRO-DIAG ;07/01/2015  8:03 AM
"RTN","DGPTFM",2,0)
 ;;5.3;Registration;**510,517,590,594,606,635,683,696,664,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTFM",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPTFM",4,0)
 ;
"RTN","DGPTFM",5,0)
 K X1,M,S,P,M1,M2,M3,S1,S2,PS2,P1,P2,P1P,P2P,SDCLY,^TMP("PTF",$J)
"RTN","DGPTFM",6,0)
 N EFFDATE,IMPDATE,DGMOVCNT,DGSURCNT,DGPROCNT,DGMMORE,DGPMORE
"RTN","DGPTFM",7,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTFM",8,0)
 S DGMOVCNT=0,DGSURCNT=0,DGPROCNT=0
"RTN","DGPTFM",9,0)
 S I=0 F I1=1:1 S I=$O(^DGPT(PTF,"M",I)) Q:'I  S DGMOVCNT=$G(DGMOVCNT)+1
"RTN","DGPTFM",10,0)
 S I=0 F I1=1:1 S I=$O(^DGPT(PTF,"S",I)) Q:'I  S DGSURCNT=$G(DGSURCNT)+1
"RTN","DGPTFM",11,0)
 S I=0 F I1=1:1 S I=$O(^DGPT(PTF,"P",I)) Q:'I  S DGPROCNT=$G(DGPROCNT)+1
"RTN","DGPTFM",12,0)
 S I=0 F I1=1:1:5 S I=$P($G(^DGPT(PTF,"401P")),U,I1) I +I S DGPRCNT=$G(DGPRCNT)+1
"RTN","DGPTFM",13,0)
 S DGMMORE=$G(DGSURCNT)+$G(DGPROCNT)+$G(DGPRCNT)
"RTN","DGPTFM",14,0)
 S DGPMORE=$G(DGPROCNT)+$G(DGPRCNT)
"RTN","DGPTFM",15,0)
 ;
"RTN","DGPTFM",16,0)
GET ;set m,m3 local array of movement records
"RTN","DGPTFM",17,0)
 S I=0 F I1=1:1 S I=$O(^DGPT(PTF,"M",I)) Q:'I  D
"RTN","DGPTFM",18,0)
 . S M(I1)=^(I,0),M3(+M(I1))=M(I1) ;,M(I1,82)=$G(^DGPT(PTF,"M",I,82))
"RTN","DGPTFM",19,0)
 . I $D(^DGPT(PTF,"M",I,"P")) S $P(M(I1),U,20)=^("P")
"RTN","DGPTFM",20,0)
 . QUIT
"RTN","DGPTFM",21,0)
 ;sort m array in chronological order for display, not m3
"RTN","DGPTFM",22,0)
 K MT D ORDER^DGPTF K MT
"RTN","DGPTFM",23,0)
 D GETVAR^DGPTFM6,CL^SDCO21(DFN,$P(^DGPT(PTF,0),U,2),"",.SDCLY),MOB^DGPTFM2
"RTN","DGPTFM",24,0)
 S DGPC=I1-1
"RTN","DGPTFM",25,0)
 D WR ; creates header
"RTN","DGPTFM",26,0)
 K M1,M2,^UTILITY($J)
"RTN","DGPTFM",27,0)
 S ST=1,M2=0
"RTN","DGPTFM",28,0)
DIAG ;
"RTN","DGPTFM",29,0)
 K DGZSER,DGZPRO,DGZSUR S DGZDIAG=1
"RTN","DGPTFM",30,0)
 G PRO1:$Y>16 W !
"RTN","DGPTFM",31,0)
 F J=ST:1:PM S NL=1,L5=0,L6=J D WD2,WD G PRO1:$Y>16 D WD3^DGPTFM8 W !
"RTN","DGPTFM",32,0)
 S ST=1 G SER
"RTN","DGPTFM",33,0)
WD ;
"RTN","DGPTFM",34,0)
 N DGMPOA
"RTN","DGPTFM",35,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTFM",36,0)
 W !?2,"Movement Diagnosis: ",$$GETLABEL^DGPTIC10(DGPTDAT,"D")
"RTN","DGPTFM",37,0)
 ;F J1=1:1:11 I J1'=6 S L=$P(M(J),U,J1+4),L1=0,L3=1 I +L D
"RTN","DGPTFM",38,0)
 D PTFICD^DGPTFUT(501,PTF,+M(J),.DGX501)
"RTN","DGPTFM",39,0)
 S J1=0 F  S J1=$O(DGX501(J1)) QUIT:'J1  S L=DGX501(J1),L1=0,L3=1 I +L D
"RTN","DGPTFM",40,0)
 . S DGMPOA=$P(L,U,2)
"RTN","DGPTFM",41,0)
 . D:+L WD1
"RTN","DGPTFM",42,0)
 . QUIT
"RTN","DGPTFM",43,0)
 K DGX501
"RTN","DGPTFM",44,0)
 QUIT
"RTN","DGPTFM",45,0)
WD1 ;
"RTN","DGPTFM",46,0)
 S N=$$ICDDATA^ICDXCODE("DIAG",+L,EFFDATE),M2=M2+1
"RTN","DGPTFM",47,0)
 W !,?L1,$J(M2,3)," "
"RTN","DGPTFM",48,0)
 D WRITECOD^DGPTIC10("DIAG",+L,EFFDATE,1,0,0)
"RTN","DGPTFM",49,0)
 I $P(N,U,20)=30 W:$X>73 !,"            " W " (POA=",$S(DGMPOA]"":DGMPOA,1:"''"),")"
"RTN","DGPTFM",50,0)
 W $S(+N<1!('$P(N,U,10)):"*",1:"")
"RTN","DGPTFM",51,0)
 K ^UTILITY($J,"M2",M2) S ^UTILITY($J,"M2",M2)=+M(J+L1)_U_J1_U_(+L)_U_DGMPOA
"RTN","DGPTFM",52,0)
 I $Y>(IOSL-4) D PGBR W @IOF,HEAD,?70 S Z="<MAS>" D Z W !
"RTN","DGPTFM",53,0)
 QUIT
"RTN","DGPTFM",54,0)
WD2 ;
"RTN","DGPTFM",55,0)
 N Z3
"RTN","DGPTFM",56,0)
 W !?L5,"Move #",+L6 S Z=M(L6),Z3=M3(+Z) W:+Z=1 " D/C" S Y=$P(Z,U,10)\1 D D^DGPTUTL W " ",Y," "
"RTN","DGPTFM",57,0)
 W " <",$S($P(Z3,U,18)=1:"",1:"N"),"SC"_$S($P(Z3,U,26)="Y":",AO",1:"")_$S($P(Z3,U,27)="Y":",IR",1:"")_$S($P(Z3,U,28)="Y":",SWAC",1:"")_$S($P(Z3,U,32)="Y":",SHAD",1:"")_">"
"RTN","DGPTFM",58,0)
 I $D(^DIC(42.4,+$P(Z,U,2),0)) D
"RTN","DGPTFM",59,0)
 . I $P(^DIC(42.4,+$P(Z,U,2),0),U,2)'="" W $E($P(^DIC(42.4,+$P(Z,U,2),0),U,2),1,10)
"RTN","DGPTFM",60,0)
 . E  W $E($P(^(0),U,1),1,10) ;^(0) references global in line above
"RTN","DGPTFM",61,0)
 . QUIT
"RTN","DGPTFM",62,0)
 QUIT
"RTN","DGPTFM",63,0)
 ;
"RTN","DGPTFM",64,0)
NDG D WR S I=0 K M,M1,M2 S M2=0 F I1=1:1 S I=$O(^DGPT(PTF,"M",I)) Q:I'>0  S M(I1)=^(I,0) ;,M(I1,82)=$G(^DGPT(PTF,"M",I,82))
"RTN","DGPTFM",65,0)
 ;sort m array in chronological order for display
"RTN","DGPTFM",66,0)
 S PM=I1-1 D ORDER^DGPTF K MT G DIAG:$D(ST) G GET S ST=1
"RTN","DGPTFM",67,0)
 ;
"RTN","DGPTFM",68,0)
SER ;
"RTN","DGPTFM",69,0)
 K DGZDIAG,DGZPRO,DGZSUR
"RTN","DGPTFM",70,0)
 S DGZSER=1
"RTN","DGPTFM",71,0)
 ;G PRO1:$Y>19
"RTN","DGPTFM",72,0)
 K S1,S2
"RTN","DGPTFM",73,0)
 S S2=0 G SERV:ST G PRO
"RTN","DGPTFM",74,0)
 ;
"RTN","DGPTFM",75,0)
SERV ;
"RTN","DGPTFM",76,0)
 ;F J=ST:2:SU S NL=1,L5=0,L6=J D SD2 S L5=1,L6=J+1 D:$D(S(L6)) SD2 D SD G PRO1:$Y>11 D SD3^DGPTFM8 G PRO1:$Y>11 W !
"RTN","DGPTFM",77,0)
 F J=ST:1:SU S NL=1,L5=0,L6=J D SD2,SD D SD3^DGPTFM8 G:(J<SU) PRO1:$Y>12 W !
"RTN","DGPTFM",78,0)
 K DGZSER
"RTN","DGPTFM",79,0)
 G PRC^DGPTFM0
"RTN","DGPTFM",80,0)
SD ;
"RTN","DGPTFM",81,0)
 ;F J1=1:1:5 S L=$P(S(J),U,J1+7),L1=0,L3=1 D:+L SD1
"RTN","DGPTFM",82,0)
 D PTFICD^DGPTFUT(401,PTF,S(J,1),.DGX401)
"RTN","DGPTFM",83,0)
 S J1=0 F  S J1=$O(DGX401(J1)) QUIT:'J1  S L=DGX401(J1),L1=0,L3=1 D:+L SD1
"RTN","DGPTFM",84,0)
 K DGX401
"RTN","DGPTFM",85,0)
 QUIT
"RTN","DGPTFM",86,0)
SD1 ;
"RTN","DGPTFM",87,0)
 S N=$$ICDDATA^ICDXCODE("PROC",+L,EFFDATE)
"RTN","DGPTFM",88,0)
 S S2=S2+1
"RTN","DGPTFM",89,0)
 W !,?L1,$J(S2,3)," " D WRITECOD^DGPTIC10("PROC",+L,EFFDATE,1,0,0)  W $S(+N<1!('$P(N,U,10)):"*",1:"")
"RTN","DGPTFM",90,0)
 K S2(S2) S S2(S2)=J+L1_U_J1_U_(+L)
"RTN","DGPTFM",91,0)
 I $Y>(IOSL-4) D PGBR W @IOF,HEAD,?70 S Z="<MAS>" D Z W !
"RTN","DGPTFM",92,0)
 Q
"RTN","DGPTFM",93,0)
 ;
"RTN","DGPTFM",94,0)
SD2 ;
"RTN","DGPTFM",95,0)
 S Y=+S(L6) D D^DGPTUTL W !?L5,L6,"-Surgery date: ",Y,$$GETLABEL^DGPTIC10(EFFDATE,"P")
"RTN","DGPTFM",96,0)
 Q
"RTN","DGPTFM",97,0)
NSR K S,S1,S2 S I=0 F I1=1:1 S I=$O(^DGPT(PTF,"S",I)) Q:I'>0  S S(I1)=^(I,0),S(I1,1)=I
"RTN","DGPTFM",98,0)
 S S2=0,SU=I1-1 D WR G SERV
"RTN","DGPTFM",99,0)
 ;
"RTN","DGPTFM",100,0)
WR W @IOF,HEAD,?70 S Z="<MAS>" D Z
"RTN","DGPTFM",101,0)
 Q
"RTN","DGPTFM",102,0)
PRO ;load 401p code before 2871000
"RTN","DGPTFM",103,0)
 K DGZSER,DGZDIAG,DGZSUR
"RTN","DGPTFM",104,0)
 S DGZPRO=1
"RTN","DGPTFM",105,0)
 G:$G(DGPRCNT) PRO1:$Y>14
"RTN","DGPTFM",106,0)
 K P1P,P2P S ST=1,P2P=0
"RTN","DGPTFM",107,0)
 G NPR:'$D(PROC)
"RTN","DGPTFM",108,0)
 ;
"RTN","DGPTFM",109,0)
PROC ; Display procedures in field 45.01 - 45.05
"RTN","DGPTFM",110,0)
 ;
"RTN","DGPTFM",111,0)
 G PRO1:$Y>14 ;D:$Y>14 WR
"RTN","DGPTFM",112,0)
 S PROC=$S($D(^DGPT(PTF,"401P")):^("401P"),1:"")
"RTN","DGPTFM",113,0)
 F PR=1:1:5 S DGPROC=$G(DGPROC)_$P(PROC,"^",PR)
"RTN","DGPTFM",114,0)
 K PR
"RTN","DGPTFM",115,0)
 W:DGPROC]"" !,"Procedures: ",$$GETLABEL^DGPTIC10(DGPTDAT,"P")
"RTN","DGPTFM",116,0)
 F J1=1:1:5 S L=$P(PROC,"^",J1) I L'="" S P2P=P2P+1 D
"RTN","DGPTFM",117,0)
 . S N=$$ICDDATA^ICDXCODE("PROC",+L,EFFDATE)
"RTN","DGPTFM",118,0)
 . S L2=$S(N:$P(N,U,2,99),1:"")
"RTN","DGPTFM",119,0)
 . W !,$J(P2P,3)," " D WRITECOD^DGPTIC10("PROC",+L,EFFDATE,1,0,0)
"RTN","DGPTFM",120,0)
 . W $S(+N<1!('$P(N,U,10)):"*",1:"")
"RTN","DGPTFM",121,0)
 . K P2P(P2P) S P2P(P2P)=J1 W:$X>45 !
"RTN","DGPTFM",122,0)
 K DGZSER,DGZPRO,DGZDIAG,DGZSUR
"RTN","DGPTFM",123,0)
 ;
"RTN","DGPTFM",124,0)
ENC ;G PRO1:$Y>7,PRO1:'$P(DGZPRF,U,3)
"RTN","DGPTFM",125,0)
 G PRO1:'$P(DGZPRF,U,3)
"RTN","DGPTFM",126,0)
 G PRO1:$Y>12
"RTN","DGPTFM",127,0)
 ;
"RTN","DGPTFM",128,0)
PF S PS2=0,J=+DGZPRF,Y=+DGZPRF(J),DGSTRT=$S(+$P(DGZPRF,U,4):$P(DGZPRF,U,4),1:4),DGLST=0
"RTN","DGPTFM",129,0)
 D CL^SDCO21(DFN,+DGZPRF(J),"",.SDCLY),ICDINFO^DGAPI(DFN,PTF),XREF^DGPTFM21 ; load SCI info and DGN's for this service date
"RTN","DGPTFM",130,0)
 D D^DGPTUTL W !,J,"-CPT Capture Date/Time: ",Y W:($P(DGZPRF,U,2)-1!($G(PGBRK))) " (cont.)"
"RTN","DGPTFM",131,0)
 I $P(DGZPRF(J),U,2) W !,?5,"Referring or Ordering Provider: " S L=$P(DGZPRF(J),U,2) D PRV
"RTN","DGPTFM",132,0)
 W !,?5,"Rendering Provider: " S L=$P(DGZPRF(J),U,3) D PRV
"RTN","DGPTFM",133,0)
 I $P(DGZPRF(J),U,5) W !,?5,"Rendering Location: ",$P($G(^SC($P(DGZPRF(J),U,5),0)),U)
"RTN","DGPTFM",134,0)
 S (L1,PGBRK)=0
"RTN","DGPTFM",135,0)
 F K=$P(DGZPRF,U,2):1 Q:'$D(DGZPRF(J,K))  I '$G(DGZPRF(J,K,9)) S PS2=PS2+1 W !,?2,PS2," " D CPT^DGPTUTL1 D  Q:$Y+$G(DGZPRF(J,K+1,1))>16!($G(PGBRK))
"RTN","DGPTFM",136,0)
 .; Add 801 logic
"RTN","DGPTFM",137,0)
 . W !,?4 S $P(DS,"-",21)="" W DS," Related Diagnosis",$$GETLABEL^DGPTIC10(+DGZPRF(J),"D")," ",DS
"RTN","DGPTFM",138,0)
 . F L1=DGSTRT:1:11 S DGLOC=$S(L1<8:L1,1:L1+7),CD=$P(DGZPRF(J,K),U,DGLOC) I CD D  I $Y+$G(CKSCI)>16 S PGBRK=1 Q
"RTN","DGPTFM",139,0)
 . . S N=$$ICDDATA^ICDXCODE("DIAG",CD,+DGZPRF(J)) ;,N=$S(N:$P(N,U,2,99),1:"")
"RTN","DGPTFM",140,0)
 . . D WRITECOD^DGPTIC10("DIAG",CD,+DGZPRF(J),2,1,8)
"RTN","DGPTFM",141,0)
 . . W $S(+N<1!('$P(N,U,10)):"*",1:"")
"RTN","DGPTFM",142,0)
 . . D CKSCI($P(DGZPRF(J,K),U,DGLOC))
"RTN","DGPTFM",143,0)
 . S PS2(PS2)=J_U_K,CD=1,DGLOC=0,DGSTRT=4
"RTN","DGPTFM",144,0)
 I L1'=11,$S(L1<8:$P($G(DGZPRF(J,K)),U,L1+1,7),1:"")_$P($G(DGZPRF(J,K)),U,$S(L1<8:15,1:L1+8),18)?."^" S L1=11
"RTN","DGPTFM",145,0)
 I L1=11 S $P(DGZPRF,U,1,2)=$S($D(DGZPRF(J,K+1)):J_U_(K+1),1:J+1_U_1),$P(DGZPRF,U,4)="",PGBRK=0
"RTN","DGPTFM",146,0)
 E  S $P(DGZPRF,U,1,2)=J_U_K,$P(DGZPRF,U,4)=L1+1
"RTN","DGPTFM",147,0)
 K I,K,L,L1,CD,N,DS G PRO1
"RTN","DGPTFM",148,0)
 ;
"RTN","DGPTFM",149,0)
CKSCI(IEN)      ;print SCI for each Diagnosis code
"RTN","DGPTFM",150,0)
 N DGINFO Q:'$D(XREF(IEN))
"RTN","DGPTFM",151,0)
 S DGINFO=$G(^DGICD9(46.1,(XREF(IEN)),0)),CKSCI=0
"RTN","DGPTFM",152,0)
 I 'DGINFO Q
"RTN","DGPTFM",153,0)
 F I=3,7,1,2,4,5,6,8 I $D(SDCLY(I)) S L=$S(I=3:8,I<4:8+I,1:7+I) D
"RTN","DGPTFM",154,0)
 .W ?45 S M=1,CKSCI=CKSCI+1
"RTN","DGPTFM",155,0)
 .W !?8
"RTN","DGPTFM",156,0)
 .W $P("Treated for AO Condition^Treated for IR Condition^Treated for SC Condition^Exposed to SW Asia Conditions^Treatment for MST^Treatment for Head/Neck CA^Related to Combat^Treatment for SHAD Condition",U,I)
"RTN","DGPTFM",157,0)
 .W ": ",$S($P(DGINFO,U,($S(I<3:I+2,I=3:2,1:I+1))):"YES",1:"NO"),!
"RTN","DGPTFM",158,0)
 Q  ;CKSCI
"RTN","DGPTFM",159,0)
 ;
"RTN","DGPTFM",160,0)
NPR S ST=1,PROC=$S($D(^DGPT(PTF,"401P")):^("401P"),1:"") D WR G PRO
"RTN","DGPTFM",161,0)
 ;
"RTN","DGPTFM",162,0)
NPS D WR G PF
"RTN","DGPTFM",163,0)
 ;
"RTN","DGPTFM",164,0)
DONE G EN1^DGPTF4
"RTN","DGPTFM",165,0)
PRO1 ;SET MENU TYPE AND DISPLAY MENU
"RTN","DGPTFM",166,0)
 N ICDVDT,ICPTVDT
"RTN","DGPTFM",167,0)
 I $G(PTF)'="",$G(EFFDATE)="" D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTFM",168,0)
 S (ICDVDT,ICPTVDT)=$S($G(EFFDATE)'="":EFFDATE,$D(PTF):$$GETDATE^ICDGTDRG(PTF),1:DT)
"RTN","DGPTFM",169,0)
 S DGNUM=$S($D(DGZDIAG)!($D(DGZPRO))!($D(DGZSER))!($D(DGZSUR)!(+DGZPRF-1'=$P(DGZPRF,U,3))):"MAS",1:"701") G MAS^DGPTFJC:DGST F X=$Y:1:(IOSL-9) W !
"RTN","DGPTFM",170,0)
 W !! S Z="Patient Movements:" W Z S Z=" "_$S(DGPTFE:"M=Add PM  X=Delete PM",1:"M=Edit Treat Spec/PM ")_"  A=Add Code  D=Delete Code  V=Edit Mov" W Z
"RTN","DGPTFM",171,0)
 W ! S Z="Surgical Episodes:" W Z S Z=" S=Add SE  Z=Delete SE  O=Add Code  C=Delete Code  J=Edit SE" W Z
"RTN","DGPTFM",172,0)
 W ! S Z="Procedure Records:" W Z S Z=" T=Add PR  R=Delete PR  P=Add Code  Q=Delete Code  E=Edit PR" W Z
"RTN","DGPTFM",173,0)
 W ! S Z="              801:" W Z S Z=" I=Add 801 Y=Delete 801 N=Add CPT   G=Delete CPT   F=Edit 801" W Z K Z
"RTN","DGPTFM",174,0)
 W !,"                   ^=Abort   <RET> to Continue:<",DGNUM,">// " R ANS:DTIME K DGNUM
"RTN","DGPTFM",175,0)
A S Z="^C Delete Code^A Add Code^O Add Code^P Add NOP^S Add SE^D Delete Code^M Add PM^X Delete PM^Z Delete SE^J Edit SE^Q Delete NOP^V Edit Move^"
"RTN","DGPTFM",176,0)
 S Z=Z_"T Add PR^R Delete PR^E Edit PR^I Add 801^Y Delete 801^N Add CPT^G Delete CPT^F Edit 801"
"RTN","DGPTFM",177,0)
 I 'DGPTFE S $P(Z,U,8,9)="M Edit treat Spec/PM"
"RTN","DGPTFM",178,0)
 S X=ANS G Q^DGPTF:ANS="^" G ^DGPTFJ:ANS?1"^".E S (A,X)=ANS,X=$E(X,1) D IN^DGHELP
"RTN","DGPTFM",179,0)
 I $P(^DGPT(PTF,0),U,4),X'="","IYNGF"[X W !,"***WARNING: This is a Fee Basis PTF record*** 801 encounters are not allowed." H 3 G DGPTFM
"RTN","DGPTFM",180,0)
 I ANS="" S (ST,ST1)=J+1 D:$D(DGZSUR) WR G @($S($D(DGZDIAG):"NDG",$D(DGZSER):"NSR",$D(DGZPRO):"NPR",$D(DGZSUR):"EN^DGPTFM0",+DGZPRF-1'=$P(DGZPRF,U,3):"NPS",1:"DONE"))
"RTN","DGPTFM",181,0)
 G HELP^DGPTFM1A:$G(%)=-1 S Z=$L(A)-1 G @(X_$S(X="X":"",1:"^DGPTFM1"))
"RTN","DGPTFM",182,0)
PRV I $D(^VA(200,L,0)) W $P(^(0),U) Q
"RTN","DGPTFM",183,0)
 W L Q
"RTN","DGPTFM",184,0)
X ;
"RTN","DGPTFM",185,0)
 I 'Z S:PM=1 RC=1 G X1:PM=1 W !!,"Delete Patient move <1",$S(PM<3:"",1:"-"_(PM-1)),">: " R RC:DTIME G ^DGPTFM:RC["^"!(RC="")
"RTN","DGPTFM",186,0)
 E  S RC=$E(A,2,99) W !
"RTN","DGPTFM",187,0)
 I +RC'=RC!('$D(M(RC))) W !!,"Enter the record # to delete from the PTF file, 1",$S(PM<3:"",1:"-"_(PM-1)) S Z=0 G X
"RTN","DGPTFM",188,0)
X1 I +M(RC)=1 W !,*7,"Cannot delete discharge movement",! H 3 G ^DGPTFM
"RTN","DGPTFM",189,0)
 S DIE="^DGPT("_PTF_",""M"",",DP=45.02,DR=".01///@",DA(1)=PTF,DA=+M(RC) D ^DIE K DR W "  ",RC,"-DELETED***" H 2 G ^DGPTFM
"RTN","DGPTFM",190,0)
Z ;
"RTN","DGPTFM",191,0)
 W @DGVI,Z,@DGVO Q  ; Writes reverse video
"RTN","DGPTFM",192,0)
EN D WR G EN^DGPTFM0
"RTN","DGPTFM",193,0)
 Q
"RTN","DGPTFM",194,0)
 ;
"RTN","DGPTFM",195,0)
PGBR N DIR,X,Y S DIR(0)="E",DIR("A")="Enter RETURN to continue" D ^DIR QUIT
"RTN","DGPTFM",196,0)
 ;
"RTN","DGPTFM0")
0^8^B17632645
"RTN","DGPTFM0",1,0)
DGPTFM0 ;ALB/MAC/ADL/PLT - ROUTINE TO DISPLAY PROCEDURE CODES ON THE MAS SCREEN IN PTF LOAD/EDIT ;AUG 1 1989@1200
"RTN","DGPTFM0",2,0)
 ;;5.3;Registration;**510,517,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTFM0",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPTFM0",4,0)
 ;
"RTN","DGPTFM0",5,0)
 ;;ADL;;Update for CSV Project;;Mar 25, 2003
"RTN","DGPTFM0",6,0)
EN ;
"RTN","DGPTFM0",7,0)
 N EFFDATE,IMPDATE
"RTN","DGPTFM0",8,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTFM0",9,0)
 K P,P1,P2 S I=0 K P F I1=1:1 S I=$O(^DGPT(PTF,"P",I)) Q:I'>0  S P(I1)=^(I,0),P(I1,1)=I I P(I1)']"" K P(I1) S I1=I1-1
"RTN","DGPTFM0",10,0)
 S DGPC=I1-1
"RTN","DGPTFM0",11,0)
 S (L6,P,P2)=0 F J=ST:1:(I1-1) S NL=1,L5=0,L6=J D PD2 D PD G PRO1^DGPTFM:$Y>12 W !
"RTN","DGPTFM0",12,0)
 G PRO^DGPTFM
"RTN","DGPTFM0",13,0)
PD ;
"RTN","DGPTFM0",14,0)
 ;F J1=1:1:5 S L=$P($G(P(J)),U,J1+4),L1=0,L3=1 D:+L PD1
"RTN","DGPTFM0",15,0)
 D PTFICD^DGPTFUT(601,PTF,P(J,1),.DGX601)
"RTN","DGPTFM0",16,0)
 S J1=0 F  S J1=$O(DGX601(J1)) QUIT:'J1  S L=DGX601(J1),L1=0,L3=1 D:+L PD1
"RTN","DGPTFM0",17,0)
 K DGX601
"RTN","DGPTFM0",18,0)
 QUIT
"RTN","DGPTFM0",19,0)
PD1 ;
"RTN","DGPTFM0",20,0)
 N J2
"RTN","DGPTFM0",21,0)
 S J2=$$ICDDATA^ICDXCODE("PROC",+L,EFFDATE)
"RTN","DGPTFM0",22,0)
 S P2=P2+1
"RTN","DGPTFM0",23,0)
 W !,?L1,$J(P2,3)," " D WRITECOD^DGPTIC10("PROC",+L,EFFDATE,1,0,0) W $S(+J2<1!('$P(J2,U,10)):"*",1:"")
"RTN","DGPTFM0",24,0)
 K P2(P2) S P2(P2)=J+L1_U_J1_U_(+L)
"RTN","DGPTFM0",25,0)
 I $Y>(IOSL-4) D PGBR D WR^DGPTFM W !
"RTN","DGPTFM0",26,0)
 QUIT
"RTN","DGPTFM0",27,0)
PD2 ;
"RTN","DGPTFM0",28,0)
 S Y=+$G(P(L6)) D D^DGPTUTL W !,L6,"-Procedure date: ",Y,$$GETLABEL^DGPTIC10(EFFDATE,"P")
"RTN","DGPTFM0",29,0)
 Q
"RTN","DGPTFM0",30,0)
PRC ;
"RTN","DGPTFM0",31,0)
 K DGZSER,DGZDIAG,DGZPRO S DGZSUR=1,J=0
"RTN","DGPTFM0",32,0)
 ;G:$G(DGMMORE) PRO1^DGPTFM:$Y>12
"RTN","DGPTFM0",33,0)
 K P1,P2 S ST=1,P2=0
"RTN","DGPTFM0",34,0)
 G:$G(DGMMORE) PRO1^DGPTFM:$Y>12
"RTN","DGPTFM0",35,0)
 S ST=1 G EN
"RTN","DGPTFM0",36,0)
 ;
"RTN","DGPTFM0",37,0)
C ; -- help for surgery delete code
"RTN","DGPTFM0",38,0)
 W !!,"Enter the item #'s of the operation codes, 1-",S2,", that you wish to delete:"
"RTN","DGPTFM0",39,0)
 F L=1:1:S2 Q:'$D(S2(L))  I $D(S(+S2(L),1)),$D(^DGPT(PTF,"S",+S(+S2(L),1),0)) D
"RTN","DGPTFM0",40,0)
 . W !?5,$J(L,2),": " D WRITECOD^DGPTIC10("PROC",$P(S2(L),U,3),EFFDATE,1,0,0)
"RTN","DGPTFM0",41,0)
 . ;W !,"here",*7
"RTN","DGPTFM0",42,0)
 . I $Y>(IOSL-4) D PGBR W @IOF
"RTN","DGPTFM0",43,0)
 . QUIT
"RTN","DGPTFM0",44,0)
 QUIT
"RTN","DGPTFM0",45,0)
 ;
"RTN","DGPTFM0",46,0)
DX ; -- help for movment delete dx's
"RTN","DGPTFM0",47,0)
 W !!,"Enter the item #'s of the diagnoses, 1-",M2,", that you wish to delete:"
"RTN","DGPTFM0",48,0)
 S UTL="^UTILITY($J,""M2"")"
"RTN","DGPTFM0",49,0)
 F L=1:1:M2 Q:'$D(@UTL@(L))  D:$P(@UTL@(L),U,3)  ;I $D(^DGPT(PTF,"M",+@UTL@(L),0)) D
"RTN","DGPTFM0",50,0)
 . N DGPTTMP
"RTN","DGPTFM0",51,0)
 . W !?5,$J(L,2),": " D WRITECOD^DGPTIC10("DIAG",$P(@UTL@(L),U,3),EFFDATE,1,0,0)
"RTN","DGPTFM0",52,0)
 . S DGMPOA=$P(@UTL@(L),U,4),DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",$P(@UTL@(L),U,3),EFFDATE)
"RTN","DGPTFM0",53,0)
 . I $P(DGPTTMP,U,20)=30 W:$X>73 !,"            " W " (POA=",$S(DGMPOA]"":DGMPOA,1:"''"),")"
"RTN","DGPTFM0",54,0)
 . I $Y>(IOSL-4) D PGBR W @IOF
"RTN","DGPTFM0",55,0)
 . QUIT
"RTN","DGPTFM0",56,0)
 K UTL,L Q
"RTN","DGPTFM0",57,0)
 ;
"RTN","DGPTFM0",58,0)
Q ; -- help for procedure delete code
"RTN","DGPTFM0",59,0)
 W !!,"Enter the item #'s of the procedure codes, 1-",P2,", that you wish to delete"
"RTN","DGPTFM0",60,0)
 F L=1:1:P2 Q:'$D(P2(L))  I $D(P(+P2(L),1)),$D(^DGPT(PTF,"P",+P(+P2(L),1),0)) D
"RTN","DGPTFM0",61,0)
 . W !?5,$J(L,2),": " D WRITECOD^DGPTIC10("PROC",$P(P2(L),U,3),EFFDATE,1,0,0)
"RTN","DGPTFM0",62,0)
 . I $Y>(IOSL-4) D PGBR W @IOF
"RTN","DGPTFM0",63,0)
 . QUIT
"RTN","DGPTFM0",64,0)
 QUIT
"RTN","DGPTFM0",65,0)
 ;
"RTN","DGPTFM0",66,0)
 ; -- help for procedure 401p delete code
"RTN","DGPTFM0",67,0)
Q1 W !!,"Type the number of the procedure code, 1-",P2P," for 401P transactions"
"RTN","DGPTFM0",68,0)
 W !,"(admissions prior to 10/1/87) you wish to delete.",!
"RTN","DGPTFM0",69,0)
 F L=1:1:P2P Q:'$D(P2P(L))  D
"RTN","DGPTFM0",70,0)
 . N N
"RTN","DGPTFM0",71,0)
 . S N=$$ICDDATA^ICDXCODE("PROC",$P($G(^DGPT(PTF,"401P")),U,P2P(L)),EFFDATE)
"RTN","DGPTFM0",72,0)
 . W !,$J(L,3)," " D WRITECOD^DGPTIC10("PROC",$P($G(^DGPT(PTF,"401P")),U,P2P(L)),EFFDATE,1,0,0)
"RTN","DGPTFM0",73,0)
 . W $S(+N<1!('$P(N,U,10)):"*",1:"")
"RTN","DGPTFM0",74,0)
 . I $Y>(IOSL-4) D PGBR W @IOF
"RTN","DGPTFM0",75,0)
 . QUIT
"RTN","DGPTFM0",76,0)
 ;W !,"Howwever, this deletion function is not applicable"
"RTN","DGPTFM0",77,0)
 ;W !,"for procedures listed under 'Procedure date:' displays."
"RTN","DGPTFM0",78,0)
 ;W !,"Delete these codes using the 601 screen functionality."
"RTN","DGPTFM0",79,0)
 QUIT
"RTN","DGPTFM0",80,0)
 ;
"RTN","DGPTFM0",81,0)
D G DEL:Z
"RTN","DGPTFM0",82,0)
 I $D(M2),'M2 W !,"No codes to delete",! H 2 G ^DGPTFM
"RTN","DGPTFM0",83,0)
D1 R !!,"Enter the item #'s of the ICD Diagnosis codes to delete: ",A1:DTIME
"RTN","DGPTFM0",84,0)
 I A1'?1N.NP G ^DGPTFM:"^"[A1 W:A1'["?" "  ???",*7 D DX G D1
"RTN","DGPTFM0",85,0)
 S A=A_A1
"RTN","DGPTFM0",86,0)
DEL D EXPL^DGPTUTL
"RTN","DGPTFM0",87,0)
 K X,A1 S DIE="^DGPT("_PTF_",""M"",",DA(1)=PTF W !!
"RTN","DGPTFM0",88,0)
 F J=1:1 S DP=45.02,L=+$P(DGA,",",J) Q:'L  S L1=$S($D(^UTILITY($J,"M2",L)):^(L),1:"Undefined, ") W:'L1 " ",L,"-",L1 I L1 S DA=+L1,DR=$$FLDNUM^DILFD(45.02,"ICD "_$P(L1,U,2))_"///@",DA(1)=PTF D ^DIE K DR W " ",L,"-Deleted, " W:$X>70 !
"RTN","DGPTFM0",89,0)
 S DGPTF=PTF,DGMOV=+L1 D CHK501^DGPTSCAN
"RTN","DGPTFM0",90,0)
 H 2 G ^DGPTFM
"RTN","DGPTFM0",91,0)
 Q
"RTN","DGPTFM0",92,0)
 ;
"RTN","DGPTFM0",93,0)
PGBR N DIR,X,Y S DIR(0)="E",DIR("A")="Enter RETURN to continue" D ^DIR QUIT
"RTN","DGPTFM0",94,0)
 ;
"RTN","DGPTFM1")
0^9^B36433048
"RTN","DGPTFM1",1,0)
DGPTFM1 ;ALB/MTC/PLT,WOIFO/PMK - MASTER DIAG/OP/PRO CODE ENTER/EDIT ;7/6/15 3:37PM
"RTN","DGPTFM1",2,0)
 ;;5.3;Registration;**114,517,635,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTFM1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPTFM1",4,0)
 ;
"RTN","DGPTFM1",5,0)
D G D^DGPTFM0
"RTN","DGPTFM1",6,0)
 ;
"RTN","DGPTFM1",7,0)
A S DGCODSYS=$$CODESYS^DGPTIC10(PTF),L="" F I=1:1:PM S L2=1 D
"RTN","DGPTFM1",8,0)
 . N A
"RTN","DGPTFM1",9,0)
 . F J=5:1:9 I $P(M(I),U,J)="" S L=L_I_",",L2=0 QUIT
"RTN","DGPTFM1",10,0)
 . QUIT:DGCODSYS="ICD9"!'L2
"RTN","DGPTFM1",11,0)
 . F J=11:1:15 I $P(M(I),U,J)="" S L=L_I_",",L2=0 QUIT
"RTN","DGPTFM1",12,0)
 . QUIT:'L2
"RTN","DGPTFM1",13,0)
 . S A=$G(^DGPT(PTF,"M",+M(I),81)) F J=1:1:15 I $P(A,U,J)="" S L=L_I_",",L2=0 QUIT
"RTN","DGPTFM1",14,0)
 . QUIT
"RTN","DGPTFM1",15,0)
 I L="" W !!,"There are no movement records that can be added to.",*7,*7 H 2 G ^DGPTFM
"RTN","DGPTFM1",16,0)
 S L=$E(L,1,$L(L)-1) I L=+L S RC=+L G A2
"RTN","DGPTFM1",17,0)
A1 I 'Z W !!,"Add to movement record <",L,"> : " R RC:DTIME G ^DGPTFM:RC[U!('$T)!(RC="")
"RTN","DGPTFM1",18,0)
 E  S RC=+$E(A,2,99)
"RTN","DGPTFM1",19,0)
A2 I +RC'=RC!(","_L_","'[(","_RC_",")) W !!,"Enter the movement record number to add ICD diagnosis to: ",L S Z="" G A1
"RTN","DGPTFM1",20,0)
 S DGCODSYS=$$CODESYS^DGPTIC10(PTF),DIE="^DGPT(",(DA,DGPTF)=PTF,DR=$S(DGCODSYS="ICD10":"[DG501-10D]",1:"[DG501]"),DGJUMP="" S:DGPTFE DR=$S(DGCODSYS="ICD10":"[DG501F-10D]",1:"[DG501F]")
"RTN","DGPTFM1",21,0)
 S DGMOV=+M(RC),DGADD=1 D ^DIE K DR,DA,DGADD,DIE,DGJUMP,DGCODSYS,DGXX,DGTYPE D CHK501^DGPTSCAN K DGPTF,DGMOV,DGADD
"RTN","DGPTFM1",22,0)
 G ^DGPTFM
"RTN","DGPTFM1",23,0)
 ;
"RTN","DGPTFM1",24,0)
M I DGPTFE G ADD^DGPTFM4
"RTN","DGPTFM1",25,0)
 S X=80 X ^%ZOSF("RM") D MVT K T,AM,M I $L(DGVO_DGVI)>4 S X=132 X ^%ZOSF("RM")
"RTN","DGPTFM1",26,0)
 G ^DGPTFM:'$D(DGPMDA) S DA=$S('$D(^DGPM(DGPMDA,"PTF")):"",1:$P(^("PTF"),"^",3)) G ^DGPTFM:'$D(^DGPT(PTF,"M",+DA,0)) S Y=^(0)
"RTN","DGPTFM1",27,0)
 S X=$S($D(^DIC(42.4,+$P(Y,U,2),0)):$P(^(0),U,1),1:""),Y=$P(Y,U,10)
"RTN","DGPTFM1",28,0)
 D D^DGPTUTL K M W !,"Editing ",$S(DA=1:"Discharge ",1:""),"Movement " W:Y]"" "of ",Y W "  Losing Specialty ",X
"RTN","DGPTFM1",29,0)
 S DGCODSYS=$$CODESYS^DGPTIC10(PTF),DGMOV=DA,(DA,DGPTF)=PTF,DIE="^DGPT(",DR=$S(DGCODSYS="ICD10":"[DG501-10D]",1:"[DG501]"),DGJUMP="1-2" D ^DIE
"RTN","DGPTFM1",30,0)
 K DA,DR,DIE,DGJUMP,DGCODSYS,DGXX,DGTYPE D CHK501^DGPTSCAN K DGPTF,DGMOV
"RTN","DGPTFM1",31,0)
 ;- update MT indicator after edit movement
"RTN","DGPTFM1",32,0)
 N DGPMCA,DGPMAN D PM^DGPTUTL
"RTN","DGPTFM1",33,0)
 I '$G(DGADM) S DGADM=+^DGPT(PTF,0)
"RTN","DGPTFM1",34,0)
 D MT^DGPTUTL
"RTN","DGPTFM1",35,0)
 G ^DGPTFM
"RTN","DGPTFM1",36,0)
 ;
"RTN","DGPTFM1",37,0)
Z I 'SU W !,"No surgeries to delete",! H 3 G ^DGPTFM
"RTN","DGPTFM1",38,0)
 S ST=1 I 'Z W !!,"Delete surgery record <1",$S(SU=1:"",1:"-"_SU),">: " R RC:DTIME G ^DGPTFM:'$T!(RC[U)!(RC="")
"RTN","DGPTFM1",39,0)
 E  S RC=$E(A,2,99) W !
"RTN","DGPTFM1",40,0)
 I +RC'=RC!('$D(S(RC))) W !!,"Enter the record # to delete from the PTF file, 1",$S(SU=1:"",1:"-"_SU) S Z=0 G Z
"RTN","DGPTFM1",41,0)
 K DA S DIK="^DGPT("_PTF_",""S"",",ST=1,(DGPTF,DA(1))=PTF,(DGSUR,DA)=+S(RC,1) D ^DIK K DA W "  ",RC,"-DELETED***" D CHK401^DGPTSCAN K DGPTF,DGSUR H 2 G ^DGPTFM
"RTN","DGPTFM1",42,0)
 ;
"RTN","DGPTFM1",43,0)
C G CEL:Z
"RTN","DGPTFM1",44,0)
 I '$D(S2) W !,"View Surgery Codes first",! H 2 G ^DGPTFM
"RTN","DGPTFM1",45,0)
 I 'S2 W !,"No codes to delete",! H 2 G ^DGPTFM
"RTN","DGPTFM1",46,0)
C1 R !!,"Enter the item #'s of the ICD operation codes to delete: ",A1:DTIME
"RTN","DGPTFM1",47,0)
 S:'$T A1=U I A1'?1N.NP G ^DGPTFM:"^"[A1 W:A1'["?" "  ???",*7 D C^DGPTFM0 G C1
"RTN","DGPTFM1",48,0)
 S A=A_A1
"RTN","DGPTFM1",49,0)
CEL D EXPL^DGPTUTL
"RTN","DGPTFM1",50,0)
 K X,A1 S DA(1)=PTF,DP=45.01 W !!
"RTN","DGPTFM1",51,0)
 F J=1:1 S L=+$P(DGA,",",J),DIE="^DGPT("_PTF_",""S""," Q:'L  D
"RTN","DGPTFM1",52,0)
 .S L1=$S($D(S2(L)):S2(L),1:"Undefined, ") W:'L1 " ",L,"-",L1
"RTN","DGPTFM1",53,0)
 .I L1 S (DA,DGSUR)=+S(+L1,1),(DA(1),DGPTF)=PTF,DR=$$FLDNUM^DILFD(45.01,"OPERATION CODE "_$P(S2(+L),U,2))_"///@" D ^DIE,CEL1
"RTN","DGPTFM1",54,0)
 H 3 S ST=1 G ^DGPTFM
"RTN","DGPTFM1",55,0)
 ;
"RTN","DGPTFM1",56,0)
CEL1 ;
"RTN","DGPTFM1",57,0)
 K DR W " ",L,"-Deleted, " W:$X>70 ! D CHK401^DGPTSCAN K DGPTF,DGSUR
"RTN","DGPTFM1",58,0)
 Q
"RTN","DGPTFM1",59,0)
 ;
"RTN","DGPTFM1",60,0)
O I '$D(S2) W !,"View Surgery Codes first",! H 2 G ^DGPTFM
"RTN","DGPTFM1",61,0)
 I 'S2 W !,"No codes can be added to a Surgery Record.",! H 2 G ^DGPTFM
"RTN","DGPTFM1",62,0)
 S DGCODSYS=$$CODESYS^DGPTIC10(PTF),L="" F I=1:1:SU S L2=1 D
"RTN","DGPTFM1",63,0)
 . N A
"RTN","DGPTFM1",64,0)
 . F J=8:1:12 I $P(S(I),U,J)="" S L=L_I_",",L2=0 QUIT:'L2
"RTN","DGPTFM1",65,0)
 . QUIT:DGCODSYS="ICD9"!'L2
"RTN","DGPTFM1",66,0)
 . F J=13:1:27 I $P(S(I),U,J)="" S L=L_I_",",L2=0 QUIT:'L2
"RTN","DGPTFM1",67,0)
 . QUIT:'L2
"RTN","DGPTFM1",68,0)
 . S A=$G(^DGPT(PTF,"S",+S(I,1),1)) F J=1:1:5 I $P(A,U,J)="" S L=L_I_",",L2=0 QUIT:'L2
"RTN","DGPTFM1",69,0)
 . QUIT
"RTN","DGPTFM1",70,0)
 I L="" W !!,"There are no surgery records that can be added to.",*7 H 2 S ST=1 G ^DGPTFM
"RTN","DGPTFM1",71,0)
 S L=$E(L,1,$L(L)-1) I L=+L S RC=+L G O2
"RTN","DGPTFM1",72,0)
O1 I 'Z S ST=1 W !!,"Add to surgery record <",L,"> : " R RC:DTIME G ^DGPTFM:'$T!(RC[U)!(RC="")
"RTN","DGPTFM1",73,0)
 E  S RC=+$E(A,2,99)
"RTN","DGPTFM1",74,0)
O2 I +RC'=RC!(","_L_","'[(","_RC_",")) W !!,"Enter the surgery record number to add ICD operation codes to: ",L G O1:'Z S Z="" G O1
"RTN","DGPTFM1",75,0)
 S DGCODSYS=$$CODESYS^DGPTIC10(PTF),DIE="^DGPT(",(DGPTF,DA)=PTF,DR=$S(DGCODSYS="ICD10":"[DG401-10P]",1:"[DG401]")
"RTN","DGPTFM1",76,0)
 S ST=1,DGZS0=RC,DGADD=1,DGSUR=S(DGZS0,1) D ^DIE,CHK401^DGPTSCAN K DR,DGPTF,DGSUR,DGADD G ^DGPTFM
"RTN","DGPTFM1",77,0)
 ;
"RTN","DGPTFM1",78,0)
S G ADD^DGPTFM5
"RTN","DGPTFM1",79,0)
V S DGZM0=0 G ^DGPTFM4
"RTN","DGPTFM1",80,0)
J S DGZS0=0 G ^DGPTFM5
"RTN","DGPTFM1",81,0)
 ;
"RTN","DGPTFM1",82,0)
 ;delete procedure code in 401p(before 2871000) or procedure record
"RTN","DGPTFM1",83,0)
Q I $G(P2P) G Q401P
"RTN","DGPTFM1",84,0)
 G QELP:Z
"RTN","DGPTFM1",85,0)
 I '$D(P2) W !,"View Prodedure Codes first",! H 2 G ^DGPTFM
"RTN","DGPTFM1",86,0)
 I 'P2 W !,"No codes to delete",! H 2 G ^DGPTFM
"RTN","DGPTFM1",87,0)
QP1 R !!,"Enter the item #'s of the ICD procedure codes to delete: ",A1:DTIME
"RTN","DGPTFM1",88,0)
 S:'$T A1=U I A1'?1N.NP G ^DGPTFM:"^"[A1 W:A1'["?" "  ???",*7 D Q^DGPTFM0 G QP1
"RTN","DGPTFM1",89,0)
 S A=A_A1
"RTN","DGPTFM1",90,0)
QELP D EXPL^DGPTUTL
"RTN","DGPTFM1",91,0)
 K X,A1 S DA(1)=PTF,DP=45.05 W !!
"RTN","DGPTFM1",92,0)
 F J=1:1 S L=+$P(DGA,",",J),DIE="^DGPT("_PTF_",""P""," Q:'L  D
"RTN","DGPTFM1",93,0)
 . S L1=$S($D(P2(L)):P2(L),1:"Undefined, ") I 'L1 W " ",L,"-",L1 W:$X>70 ! Q  ; P884
"RTN","DGPTFM1",94,0)
 . I L1 S DA=+P(+L1,1),DGZP=+L1,(DA(1),DGPTF)=PTF,DR=$$FLDNUM^DILFD(45.05,"PROCEDURE CODE "_$P(P2(+L),U,2))_"///@" D ^DIE
"RTN","DGPTFM1",95,0)
 . K DR W " ",L,"-Deleted, " W:$X>70 ! D CHK601^DGPTSCAN K DGPTF,DGZP
"RTN","DGPTFM1",96,0)
 . QUIT
"RTN","DGPTFM1",97,0)
 H 3 S ST=1 G ^DGPTFM
"RTN","DGPTFM1",98,0)
 ;
"RTN","DGPTFM1",99,0)
Q401P G QEL:Z
"RTN","DGPTFM1",100,0)
 I $G(^DGPT(PTF,70))>2871000!'$G(^(70)) D EN^DDIOL("Patient with no Discharge Date or after 09/30/1987 needs to have all Procedure Codes deleted in 401P Transaction.")
"RTN","DGPTFM1",101,0)
QQ R !!,"Enter the item #'s of the 401P - Procedure codes to delete: ",A1:DTIME
"RTN","DGPTFM1",102,0)
 S:'$T A1=U I A1'?1N.NP G ^DGPTFM:"^"[A1 W:A1'["?" "  ???",*7 D Q1^DGPTFM0 G QQ
"RTN","DGPTFM1",103,0)
 S A=A_A1
"RTN","DGPTFM1",104,0)
QEL D EXPL^DGPTUTL
"RTN","DGPTFM1",105,0)
 S DGA=$E(A,2,999) K X,A1 S DIE="^DGPT(",DA=PTF W !!
"RTN","DGPTFM1",106,0)
 F J=1:1 S DP=45,L=+$P(DGA,",",J) Q:'L  D
"RTN","DGPTFM1",107,0)
 . S L1=$S($D(P2P(L)):P2P(L),1:"Undefined, ")
"RTN","DGPTFM1",108,0)
 . W:'L1 " ",L,"-",L1
"RTN","DGPTFM1",109,0)
 . I L1 S DR=+P2P(+L)/100+45_"///@",DA(1)=PTF D
"RTN","DGPTFM1",110,0)
 .. D ^DIE
"RTN","DGPTFM1",111,0)
 .. K DR W " ",L,"-Deleted, " W:$X>70 !
"RTN","DGPTFM1",112,0)
 H 3 G ^DGPTFM
"RTN","DGPTFM1",113,0)
 ;
"RTN","DGPTFM1",114,0)
P G P^DGPTFM6
"RTN","DGPTFM1",115,0)
Q1 Q
"RTN","DGPTFM1",116,0)
T G ^DGPTFM6
"RTN","DGPTFM1",117,0)
R G R^DGPTFM4
"RTN","DGPTFM1",118,0)
E I $D(^DGPT(PTF,70)),+^(70)>2871000 D MOB^DGPTFM6 G SET^DGPTFM6
"RTN","DGPTFM1",119,0)
 I DT>2871000 D MOB^DGPTFM6 G SET^DGPTFM6
"RTN","DGPTFM1",120,0)
 G ^DGPTFM6
"RTN","DGPTFM1",121,0)
 ;
"RTN","DGPTFM1",122,0)
MVT ;
"RTN","DGPTFM1",123,0)
 N PTF,DGPMAN
"RTN","DGPTFM1",124,0)
 S DGPMT=6 D CA^DGPMV S DGPMDA=+Y
"RTN","DGPTFM1",125,0)
 K DGPMT Q
"RTN","DGPTFM1",126,0)
I G ADD^DGPTFM2
"RTN","DGPTFM1",127,0)
Y G DEL^DGPTFM2
"RTN","DGPTFM1",128,0)
N G N^DGPTFM2
"RTN","DGPTFM1",129,0)
G G DC^DGPTFM2
"RTN","DGPTFM1",130,0)
F G F^DGPTFM2
"RTN","DGPTFM1",131,0)
 Q
"RTN","DGPTFM4")
0^4^B35748755
"RTN","DGPTFM4",1,0)
DGPTFM4 ;ALB/MTC/ADL/PLT - PTF ENTRY/EDIT-2 ;12/18/07 11:37am
"RTN","DGPTFM4",2,0)
 ;;5.3;Registration;**114,195,397,510,565,775,664,759,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTFM4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPTFM4",4,0)
 ;
"RTN","DGPTFM4",5,0)
 ;;ADL;Update for CSV Project;;Mar 26, 2003
"RTN","DGPTFM4",6,0)
 ;
"RTN","DGPTFM4",7,0)
 S DGZM0=DGZM0+1
"RTN","DGPTFM4",8,0)
EN ;
"RTN","DGPTFM4",9,0)
 N M3,M82,DGMPOA
"RTN","DGPTFM4",10,0)
 D MOB:'$D(M)
"RTN","DGPTFM4",11,0)
 S M(DGZM0)=$S($D(M(DGZM0)):M(DGZM0),1:"") G NEXM:M(DGZM0)=""
"RTN","DGPTFM4",12,0)
 S (M3,M(DGZM0),M1)=$S($D(^DGPT(PTF,"M",+M(DGZM0),0)):^DGPT(PTF,"M",+M(DGZM0),0),1:"")
"RTN","DGPTFM4",13,0)
 S M82=$G(^DGPT(PTF,"M",+M(DGZM0),82))
"RTN","DGPTFM4",14,0)
 I $D(^DGPT(PTF,"M",+M(DGZM0),"P")) S $P(M(DGZM0),U,20)=^("P"),$P(M1,U,20)=^("P")
"RTN","DGPTFM4",15,0)
WR S DG300=$S($D(^DGPT(PTF,"M",+M(DGZM0),300)):^(300),1:"")
"RTN","DGPTFM4",16,0)
 W @IOF,HEAD,?70 S Z="<501-"_DGZM0_">" D Z^DGPTFM I +M(DGZM0)=1 W !,?62,"Discharge Movement"
"RTN","DGPTFM4",17,0)
M S L=+$P(M1,U,10),Y=L D D^DGPTUTL W !! S Z=1 D Z W "Date of Move: " S Z=Y,Z1=20 D Z1 W "Losing Specialty: ",$E($S($D(^DIC(42.4,+$P(M1,U,2),0)):$P(^(0),U,1),1:""),1,25)
"RTN","DGPTFM4",18,0)
 W !,"     Leave days: ",$P(M1,U,3),?44,"Pass days: ",$P(M1,U,4)
"RTN","DGPTFM4",19,0)
 W !,"Treated for SC Condition: ",$S($P(M3,U,18)=1:"Yes",1:"No")
"RTN","DGPTFM4",20,0)
 N NL S NL=0
"RTN","DGPTFM4",21,0)
 I $P(M3,U,31)'="" W @($S(NL#2:"!",1:"?37")),"Potentially Related to Combat: ",$S($P(M3,U,31)="Y":"Yes",1:"No") S NL=NL+1
"RTN","DGPTFM4",22,0)
 I $P(M3,U,26)'="" W @($S(NL#2:"!",1:"?37")),"Treated for AO Condition: ",$S($P(M3,U,26)="Y":"Yes",1:"No") S NL=NL+1
"RTN","DGPTFM4",23,0)
 I $P(M3,U,27)'="" W @($S(NL#2:"!",1:"?37")),"Treated for IR Condition: ",$S($P(M3,U,27)="Y":"Yes",1:"No") S NL=NL+1
"RTN","DGPTFM4",24,0)
 I $P(M3,U,28)'="" W @($S(NL#2:"!",1:"?37")),"Treated for service in SW Asia: ",$S($P(M3,U,28)="Y":"Yes",1:"No") S NL=NL+1
"RTN","DGPTFM4",25,0)
 I $P(M3,U,29)'="" W @($S(NL#2:"!",1:"?37")),"Treated for MST Condition: ",$S($P(M3,U,29)="Y":"Yes",1:"No") S NL=NL+1
"RTN","DGPTFM4",26,0)
 K DGNTARR
"RTN","DGPTFM4",27,0)
 S DGNTARR=$$GETCUR^DGNTAPI(DFN,"DGNTARR")
"RTN","DGPTFM4",28,0)
 I $P(M3,U,30)="",(",3,4,5,"[(","_$P($G(DGNTARR("STAT")),U)_",")) S $P(M3,U,30)="N"
"RTN","DGPTFM4",29,0)
 I $P(M3,U,30)'="" W @($S(NL#2:"!",1:"?37")),"Treated for HEAD/NECK CA Condition: ",$S($P(M3,U,30)="Y":"Yes",1:"No") S NL=NL+1
"RTN","DGPTFM4",30,0)
 I $P(M3,U,32)'="" W @($S(NL#2:"!",1:"?37")),"Treated for Project 112/SHAD: ",$S($P(M3,U,32)="Y":"Yes",1:"No")
"RTN","DGPTFM4",31,0)
 K NL
"RTN","DGPTFM4",32,0)
 N EFFDATE,IMPDATE
"RTN","DGPTFM4",33,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTFM4",34,0)
 W !! S Z=2 D Z W "          DX: ",$$GETLABEL^DGPTIC10(EFFDATE,"D")
"RTN","DGPTFM4",35,0)
 ;F I=1:1:11 S L=$P(M1,U,I+4) I L'=""&(I'=6) D
"RTN","DGPTFM4",36,0)
 D PTFICD^DGPTFUT(501,PTF,+M(DGZM0),.DGX501)
"RTN","DGPTFM4",37,0)
 S I=0 F  S I=$O(DGX501(I)) QUIT:'I  S L=DGX501(I) D
"RTN","DGPTFM4",38,0)
 . S DGMPOA=$P(L,U,2)
"RTN","DGPTFM4",39,0)
 . S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+L,EFFDATE)
"RTN","DGPTFM4",40,0)
 . D WRITECOD^DGPTIC10("DIAG",+L,EFFDATE,2,1,15)
"RTN","DGPTFM4",41,0)
 . I $P(DGPTTMP,U,20)=30 W:$X>73 !,"            " W " (POA=",$S(DGMPOA]"":DGMPOA,1:"''"),")"
"RTN","DGPTFM4",42,0)
 . W $S(+DGPTTMP<1!('$P(DGPTTMP,U,10)):"*",1:"")
"RTN","DGPTFM4",43,0)
 . I $Y>(IOSL-4) D PGBR W @IOF,HEAD,?72 S Z="<501-"_DGZM0_">" D Z^DGPTFM W !
"RTN","DGPTFM4",44,0)
 . QUIT
"RTN","DGPTFM4",45,0)
 K DGX501
"RTN","DGPTFM4",46,0)
 D PRN2^DGPTFM8:DG300]""
"RTN","DGPTFM4",47,0)
 ;
"RTN","DGPTFM4",48,0)
 I $P(M1,U,20) S DRG=$P(M1,U,20) W:DRG=998!(DRG=999)!((DRG=468!(DRG=469)!(DRG=470))&(+$P($G(M1),U,10)<3071001)) *7 W !!?14,"TRANSFER DRG: ",DRG D
"RTN","DGPTFM4",49,0)
 . N DXD,DGDX
"RTN","DGPTFM4",50,0)
 . S DXD=$$DRGD^ICDGTDRG(DRG,"DGDX",,$P(M1,U,10)),DGDS=0
"RTN","DGPTFM4",51,0)
 . F  S DGDS=$O(DGDX(DGDS)) Q:'+DGDS  Q:DGDX(DGDS)=" "  W !,DGDX(DGDS)
"RTN","DGPTFM4",52,0)
JUMP K DG300 F I=$Y:1:21 W !
"RTN","DGPTFM4",53,0)
X S DGNUM=$S($D(M(DGZM0+1)):501_"-"_(DGZM0+1),1:"MAS") G 501^DGPTFJC:DGST
"RTN","DGPTFM4",54,0)
 W "Enter <RET> to continue, 1-2 to edit,",!,"'M' ",$S(DGPTFE:" to add a patient movement",1:"to edit Treat. Specialty"),", '^N' for screen N, or '^' to abort:<",DGNUM,">// " R X:DTIME
"RTN","DGPTFM4",55,0)
 K DGNUM G Q:X="^",NEXM:X="",^DGPTFJ:X?1"^".E,M^DGPTFM1:X="M"!(X="m")
"RTN","DGPTFM4",56,0)
X1 I X'=1,X'=2,X'="1-2" G PR
"RTN","DGPTFM4",57,0)
 S DGCODSYS=$$CODESYS^DGPTIC10(PTF)
"RTN","DGPTFM4",58,0)
 S DR=$S(DGPTFE:"[DG501F-10D]",1:"[DG501-10D]") I DGCODSYS="ICD9" S DR=$S(DGPTFE:"[DG501F]",1:"[DG501]")
"RTN","DGPTFM4",59,0)
 S DGJUMP=X,DIE="^DGPT(",(DA,DGPTF)=PTF,DGMOV=+M(DGZM0) D ^DIE
"RTN","DGPTFM4",60,0)
 I DR'["-10D" K DR,DA,DIE,DIC S DR="" X:(+M(DGZM0)=1) "S J=^DGPT(PTF,""M"",1,0) F I=11:1:15 I $P(J,U,I) S DR=DR_I_"";""" I DR'="" D
"RTN","DGPTFM4",61,0)
 . S DGJUMP=X,DIE="^DGPT("_DGPTF_",""M"",",(DA(1),DGPTF)=PTF,(DA,DGMOV)=+M(DGZM0)
"RTN","DGPTFM4",62,0)
 . D ^DIE
"RTN","DGPTFM4",63,0)
 . QUIT
"RTN","DGPTFM4",64,0)
 K M,DR,DIE D CHK501^DGPTSCAN K DGPTF,DGMOV
"RTN","DGPTFM4",65,0)
 ; Determine if NTR HISTORY (#28.11) filer is called if question for
"RTN","DGPTFM4",66,0)
 ;  'Treated for Head/Neck CA Condition:' is answered YES.
"RTN","DGPTFM4",67,0)
 ; Only a NTR screening status of 3=PENDING DIAGNOSIS gets Filed.
"RTN","DGPTFM4",68,0)
 I $P($G(M3),U,30)="Y",$P($G(DGNTARR("STAT")),U)=3 D
"RTN","DGPTFM4",69,0)
 . S DGNTARR=$$FILEHNC^DGNTAPI1(DFN)
"RTN","DGPTFM4",70,0)
 . QUIT
"RTN","DGPTFM4",71,0)
 K DGNTARR
"RTN","DGPTFM4",72,0)
 ;- update MT indicator after edit movement
"RTN","DGPTFM4",73,0)
 N DGPMCA,DGPMAN D PM^DGPTUTL
"RTN","DGPTFM4",74,0)
 I '$G(DGADM) S DGADM=+^DGPT(PTF,0)
"RTN","DGPTFM4",75,0)
 D MT^DGPTUTL
"RTN","DGPTFM4",76,0)
 G EN
"RTN","DGPTFM4",77,0)
 ;
"RTN","DGPTFM4",78,0)
PR W !,"Enter '^' to stop the display and edit of data",!,"'^N' to jump to screen #N (appears in upper right of screen '<N>'",!,"<RET> to continue on to the next screen or 1-2 to edit:"
"RTN","DGPTFM4",79,0)
 W !?10,"1-",$S(DGPTFE:"Date of movement, Losing Specialty, ",1:""),"Leave and Pass days",!?10,"2-ICD DIAGNOSIS CODES"
"RTN","DGPTFM4",80,0)
 W !,"You may also enter 1-2",!
"RTN","DGPTFM4",81,0)
 R !!,"Enter <RET>: ",X:DTIME G WR
"RTN","DGPTFM4",82,0)
 Q
"RTN","DGPTFM4",83,0)
NEXM S DGZM0=DGZM0+1 G ^DGPTFM:'$D(M(DGZM0)),EN
"RTN","DGPTFM4",84,0)
 ;
"RTN","DGPTFM4",85,0)
ADD ;add movement record of fee basis patent
"RTN","DGPTFM4",86,0)
 S DGZM0=$S($D(DGZM0):DGZM0+1,1:0) S L=$S($D(^DGPT(PTF,"M",0)):^(0),1:"^45.02DA^^"),L1=$P(L,U,3) F I=1:1 Q:'$D(^DGPT(PTF,"M",L1+I))
"RTN","DGPTFM4",87,0)
 S DA(1)=PTF,DIC="^DGPT("_DA(1)_",""M"",",X=L1+I,DIC(0)="LMZQE" D ^DIC K DIC,DIE G ^DGPTFM:Y'>0
"RTN","DGPTFM4",88,0)
 S M(DGZM0)=L1+I S X="1-2" G X1
"RTN","DGPTFM4",89,0)
 Q
"RTN","DGPTFM4",90,0)
MOB S I=0 K M,M1,M2 S M2=0 F I1=1:1 S I=$O(^DGPT(PTF,"M",I)) Q:'I  S M(I1)=^(I,0)
"RTN","DGPTFM4",91,0)
 S PM=I1-1 D ORDER^DGPTF Q
"RTN","DGPTFM4",92,0)
Q G Q^DGPTF
"RTN","DGPTFM4",93,0)
Z I 'DGN S Z=$S(IOST="C-QUME"&($L(DGVI)'=2):Z,1:"["_Z_"]") W @DGVI,Z,@DGVO
"RTN","DGPTFM4",94,0)
 E  W "   "
"RTN","DGPTFM4",95,0)
 Q
"RTN","DGPTFM4",96,0)
Z1 F I=1:1:(Z1-$L(Z)) S Z=Z_" "
"RTN","DGPTFM4",97,0)
 W Z
"RTN","DGPTFM4",98,0)
 Q
"RTN","DGPTFM4",99,0)
R ;DELETE PROCEDURE RECORD
"RTN","DGPTFM4",100,0)
 I '$D(^DGPT(PTF,"P")) G NOPROC
"RTN","DGPTFM4",101,0)
 I $O(^DGPT(PTF,"P",0))']"" G NOPROC
"RTN","DGPTFM4",102,0)
 S DGPNUM="" F DGPROC=0:0 S DGPROC=$O(P(DGPROC)) Q:'DGPROC  S:$D(P(DGPROC,1)) DGPNUM=DGPNUM_","_DGPROC
"RTN","DGPTFM4",103,0)
 S DGPNUM=DGPNUM_","
"RTN","DGPTFM4",104,0)
ASKPRO W !!,"Delete procedure record <",$P(DGPNUM,",",2,99),"> : " R DGPROC:DTIME I DGPROC[U!(DGPROC="") K DGPNUM,DGPROC G ^DGPTFM
"RTN","DGPTFM4",105,0)
 I DGPNUM'[(","_DGPROC_",") W !!,"Enter the record # to delete from the PTF file <",$P(DGPNUM,",",2,99),">",! G ASKPRO
"RTN","DGPTFM4",106,0)
 K DA N DGJ
"RTN","DGPTFM4",107,0)
 F DGJ=1:1 S DA=+$P(DGPROC,",",DGJ) Q:'DA  S DA=$S($D(P(DA,1)):+P(DA,1),1:0) I DA S DA(1)=PTF,DIK="^DGPT("_PTF_",""P""," D ^DIK K DA W "   ",$P(DGPROC,",",DGJ),"-DELETED***" H:'$P(DGPROC,",",DGJ+1) 2
"RTN","DGPTFM4",108,0)
 K DIK,DA,DGPROC,DGPNUM G ^DGPTFM
"RTN","DGPTFM4",109,0)
NOPROC W !!,*7,"No procedures to delete",! H 3 G ^DGPTFM
"RTN","DGPTFM4",110,0)
 Q
"RTN","DGPTFM4",111,0)
 ;
"RTN","DGPTFM4",112,0)
PGBR N DIR,X,Y S DIR(0)="E",DIR("A")="Enter RETURN to continue" D ^DIR QUIT
"RTN","DGPTFM4",113,0)
 ;
"RTN","DGPTFM5")
0^13^B15479197
"RTN","DGPTFM5",1,0)
DGPTFM5 ;ALB/MTK/ADL/PLT - PTF ENTRY/EDIT-3 ;11 MAR 91  15:15
"RTN","DGPTFM5",2,0)
 ;;5.3;Registration;**510,606,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTFM5",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPTFM5",4,0)
 ;
"RTN","DGPTFM5",5,0)
 ;;ADL;Update for CSV Project;;Mar 26, 2003
"RTN","DGPTFM5",6,0)
 ;
"RTN","DGPTFM5",7,0)
 S DGZS0=DGZS0+1
"RTN","DGPTFM5",8,0)
EN D MOB:'$D(S) S S(DGZS0,1)=$S($D(S(DGZS0,1)):S(DGZS0,1),1:"") G NEXM:S(DGZS0,1)="" S (S1,S(DGZS0))=$S($D(^DGPT(PTF,"S",S(DGZS0,1),0)):^DGPT(PTF,"S",S(DGZS0,1),0),1:"")
"RTN","DGPTFM5",9,0)
WR ;
"RTN","DGPTFM5",10,0)
 N EFFDATE,IMPDATE
"RTN","DGPTFM5",11,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTFM5",12,0)
 W @IOF,HEAD,?72 S Z="<401-"_DGZS0_">" D Z^DGPTFM
"RTN","DGPTFM5",13,0)
 S L=+S(DGZS0),Y=L D D^DGPTUTL W !! S Z=1 D Z W "Date of Surg: " S Z=Y,Z1=28 D Z1 W "Chief Surg: ",$$EXTERNAL^DILFD(45.01,4,,$P(S1,U,4))
"RTN","DGPTFM5",14,0)
 W !,"    Anesth Tech: ",$$EXTERNAL^DILFD(45.01,6,,$P(S1,U,6)),?45,"First Asst: ",$$EXTERNAL^DILFD(45.01,5,,$P(S1,U,5))
"RTN","DGPTFM5",15,0)
 W !,"  Source of pay: ",$$EXTERNAL^DILFD(45.01,7,,$P(S1,U,7))
"RTN","DGPTFM5",16,0)
 W ?46,"Surg spec: ",$E($S($D(^DIC(45.3,+$P(S1,U,3),0)):$P(^(0),U,2),1:""),1,23)
"RTN","DGPTFM5",17,0)
 W !! S Z=2 D Z W "  Surg/pro: ",$$GETLABEL^DGPTIC10(EFFDATE,"P") ;,!?7
"RTN","DGPTFM5",18,0)
 ;F I=1:1:5 S L=$P(S1,U,I+7) I L'="" D
"RTN","DGPTFM5",19,0)
 D PTFICD^DGPTFUT(401,PTF,S(DGZS0,1),.DGX401)
"RTN","DGPTFM5",20,0)
 S I=0 F  S I=$O(DGX401(I)) QUIT:'I  S L=+DGX401(I) D
"RTN","DGPTFM5",21,0)
 . S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+L,EFFDATE)
"RTN","DGPTFM5",22,0)
 . D WRITECOD^DGPTIC10("PROC",+L,EFFDATE,2,1,7) W $S(+DGPTTMP<1!('$P(DGPTTMP,U,10)):"*",1:"")
"RTN","DGPTFM5",23,0)
 . I $Y>(IOSL-4) D PGBR W @IOF,HEAD,?72 N Z S Z="<401-"_DGZS0_">" D Z^DGPTFM W !
"RTN","DGPTFM5",24,0)
 . QUIT
"RTN","DGPTFM5",25,0)
 K DGX401
"RTN","DGPTFM5",26,0)
 ;-- kidney transplant source
"RTN","DGPTFM5",27,0)
 S DG300=$S($D(^DGPT(PTF,"S",S(DGZS0,1),300)):^(300),1:"") D:DG300]"" PRN3^DGPTFM8 K DG300
"RTN","DGPTFM5",28,0)
 W !!
"RTN","DGPTFM5",29,0)
JUMP F I=$Y:1:19 W !
"RTN","DGPTFM5",30,0)
X S DGNUM=$S($D(S(DGZS0+1)):401_"-"_(DGZS0+1),1:"MAS") G 401^DGPTFJC:DGST
"RTN","DGPTFM5",31,0)
 W "Enter <RET> to continue, 1-2 to edit,",!,"'S' to add a Surgical segment, '^N' for screen N, or '^' to abort:<",DGNUM,">// " R X:DTIME K DGNUM G Q:X="^",NEXM:X="",^DGPTFJ:X?1"^".E,ADD:X="S"!(X="s")
"RTN","DGPTFM5",32,0)
X1 I X'=1,X'=2,X'="1-2" G PR
"RTN","DGPTFM5",33,0)
X2 S DGCODSYS=$$CODESYS^DGPTIC10(PTF),DR=$S(DGCODSYS="ICD10":"[DG401-10P]",1:"[DG401]"),DGJUMP=X,DGSUR=+S(DGZS0,1)
"RTN","DGPTFM5",34,0)
 N ICDVDT,ICPTVDT,EFFDATE,IMPDATE
"RTN","DGPTFM5",35,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTFM5",36,0)
 ;S (ICDVDT,ICPTVDT)=$S($D(PTF):$$GETDATE^ICDGTDRG(PTF),1:DT)
"RTN","DGPTFM5",37,0)
 S (ICDVDT,ICPTVDT)=$S($G(EFFDATE)'="":EFFDATE,$D(PTF):$$GETDATE^ICDGTDRG(PTF),1:DT)
"RTN","DGPTFM5",38,0)
 K DA S DIE="^DGPT(",(DGPTF,DA)=PTF D ^DIE K DA,DR,DA
"RTN","DGPTFM5",39,0)
 D CHK401^DGPTSCAN K DGPTF,DGSUR D MOB G EN
"RTN","DGPTFM5",40,0)
PR W !,"Enter '^' to stop the display and edit of data",!,"'^N' to jump to screen #N (appears in upper right of screen '<N>'",!,"<RET> to continue on to the next screen or 1-2 to edit:"
"RTN","DGPTFM5",41,0)
 W !?10,"1-Surgical information",!?10,"2-Surgical/Procedure Codes"
"RTN","DGPTFM5",42,0)
 W !,"You may also enter any combination of the above, separated by commas(ex:1,3,5)",!
"RTN","DGPTFM5",43,0)
 R !!,"Enter <RET>: ",X:DTIME G WR
"RTN","DGPTFM5",44,0)
 Q
"RTN","DGPTFM5",45,0)
NEXM S DGZS0=DGZS0+1 G ^DGPTFM:'$D(S(DGZS0)) G EN
"RTN","DGPTFM5",46,0)
 ;
"RTN","DGPTFM5",47,0)
ADD ;add 401 surgery record
"RTN","DGPTFM5",48,0)
 K SUR S DGZS0=0 S:'$D(^DGPT(PTF,"S",0)) ^(0)="^45.01DA^^"
"RTN","DGPTFM5",49,0)
 S DIC="^DGPT("_PTF_",""S"",",DIC(0)="QEALM",DA(1)=PTF D ^DIC G ^DGPTFM:+Y'>0!('$D(^DGPT(PTF,"S",+Y)))
"RTN","DGPTFM5",50,0)
 D MOB I SU F I=1:1:SU S:S(I,1)=+Y DGZS0=I
"RTN","DGPTFM5",51,0)
 G ^DGPTFM:'DGZS0 S SUR(DGZS0)=+Y,X="1,2" G X2
"RTN","DGPTFM5",52,0)
MOB K S,S1,S2 S I=0,S2=0 F I1=1:1 S I=$O(^DGPT(PTF,"S",I)) Q:'I  S S(I1)=^(I,0),S(I1,1)=I I S(I1)']"" K S(I1) S I1=I1-1
"RTN","DGPTFM5",53,0)
 S SU=I1-1 Q
"RTN","DGPTFM5",54,0)
Q G Q^DGPTF
"RTN","DGPTFM5",55,0)
 Q
"RTN","DGPTFM5",56,0)
1 ;;.01;2;3;4;5;6;7
"RTN","DGPTFM5",57,0)
2 ;;8;9;10;11;12
"RTN","DGPTFM5",58,0)
 Q
"RTN","DGPTFM5",59,0)
Z I 'DGN S Z=$S(IOST="C-QUME"&($L(DGVI)'=2):Z,1:"["_Z_"]") W @DGVI,Z,@DGVO
"RTN","DGPTFM5",60,0)
 E  W "   "
"RTN","DGPTFM5",61,0)
 Q
"RTN","DGPTFM5",62,0)
Z1 F I=1:1:(Z1-$L(Z)) S Z=Z_" "
"RTN","DGPTFM5",63,0)
 W Z
"RTN","DGPTFM5",64,0)
 Q
"RTN","DGPTFM5",65,0)
 ;
"RTN","DGPTFM5",66,0)
PGBR N DIR,X,Y S DIR(0)="E",DIR("A")="Enter RETURN to continue" D ^DIR QUIT
"RTN","DGPTFM5",67,0)
 ;
"RTN","DGPTFM6")
0^10^B36495035
"RTN","DGPTFM6",1,0)
DGPTFM6 ;ALB/BOK/ADL/PLT - 601 SCREEN: PROCEDURE ENTER/EDIT ;21 JUL 88 @ 0900
"RTN","DGPTFM6",2,0)
 ;;5.3;Registration;**164,510,729,850,898,884**;Aug 13, 1993;Build 31
"RTN","DGPTFM6",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPTFM6",4,0)
 ;
"RTN","DGPTFM6",5,0)
 ;;ADL;Update for CSV Project;;Mar 26, 2003
"RTN","DGPTFM6",6,0)
EN ; Entry point - begin date checks
"RTN","DGPTFM6",7,0)
 I $G(^DGPT(PTF,70)),^(70)<2871000 W !!,"Data can't be entered into Procedure Records until 10/1/1987" H 5 G ^DGPTFM
"RTN","DGPTFM6",8,0)
 G @($S(X=6:"E",1:X))
"RTN","DGPTFM6",9,0)
 ;
"RTN","DGPTFM6",10,0)
T ;add procedure record
"RTN","DGPTFM6",11,0)
 S DGZP=0 S:'$D(^DGPT(PTF,"P",0)) ^(0)="^45.05DA^^"
"RTN","DGPTFM6",12,0)
 S DIC="^DGPT("_PTF_",""P"",",DIC(0)="AEQLMZ",DA(1)=PTF D ^DIC G ^DGPTFM:Y'>0!('$D(^DGPT(PTF,"P",+Y))) S DGPROCM=+Y,DGPROCD=$P(Y,U,2) D MOB I DGPC F I=1:1:DGPC S:P(I,1)=DGPROCM DGZP=I
"RTN","DGPTFM6",13,0)
 G:'DGZP ^DGPTFM S DGPROC(DGZP)=DGPROCM,X="1,2"
"RTN","DGPTFM6",14,0)
EDIT ;
"RTN","DGPTFM6",15,0)
 I X'=1,X'=2,X'="1,2",X'="1-2" G HELP
"RTN","DGPTFM6",16,0)
 S DGCODSYS=$$CODESYS^DGPTIC10(PTF),DIE="^DGPT(",(DA,DGPTF)=PTF,DR=$S(DGCODSYS="ICD10":"[DG601-10P]",1:"[DG601]"),DGJUMP=X
"RTN","DGPTFM6",17,0)
 S DIE="^DGPT(",DGJUMP=X D ^DIE,CHK601^DGPTSCAN K DR,DIE,DIC,DA,DGADD,DGJUMP D MOB
"RTN","DGPTFM6",18,0)
SET D MOB:'$D(P) S:'$D(DGZP) DGZP=1 S P(DGZP,1)=$S($D(P(DGZP,1)):P(DGZP,1),1:"") I P(DGZP,1)="" K P(DGZP) G NEXP
"RTN","DGPTFM6",19,0)
 S (P1,P(DGZP))=$S($D(^DGPT(PTF,"P",P(DGZP,1),0)):^(0),1:"")
"RTN","DGPTFM6",20,0)
WRT ;
"RTN","DGPTFM6",21,0)
 N EFFDATE,IMPDATE
"RTN","DGPTFM6",22,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTFM6",23,0)
 G:'$D(^DGPT(PTF,"P",P(DGZP,1),0)) ^DGPTFM S DGPROCI=^(0) W @IOF,HEAD,?68 S Z="<601-"_DGZP_">" W @DGVI,Z,@DGVO,!! S (Y,L)=+P(DGZP),Z=1 D D^DGPTUTL,Z^DGPTFM5 W $J("Date of Proc:  ",32),Y,!,$J("Specialty:  ",35)
"RTN","DGPTFM6",24,0)
 W $S($D(^DIC(42.4,+$P(P(DGZP),U,2),0)):$P(^(0),U),1:""),! I $P(P(DGZP),U,4) W "   Number of Dialysis Treatments:  ",$P(P(DGZP),U,4),!
"RTN","DGPTFM6",25,0)
 W !! S Z=2 D Z^DGPTFM5 W "  Procedures: ",$$GETLABEL^DGPTIC10(EFFDATE,"P")
"RTN","DGPTFM6",26,0)
 ;F I=1:1:5 S L=$P(P(DGZP),U,4+I) I L D
"RTN","DGPTFM6",27,0)
 D PTFICD^DGPTFUT(601,PTF,P(DGZP,1),.DGX601)
"RTN","DGPTFM6",28,0)
 S I=0 F  S I=$O(DGX601(I)) QUIT:'I  S L=+DGX601(I) D
"RTN","DGPTFM6",29,0)
 . S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+L,EFFDATE)
"RTN","DGPTFM6",30,0)
 . D WRITECOD^DGPTIC10("PROC",+L,EFFDATE,2,1,7) W $S(+DGPTTMP<1!('$P(DGPTTMP,U,10)):"*",1:"") ;W !?7
"RTN","DGPTFM6",31,0)
 . I $Y>(IOSL-4) D PGBR W @IOF,HEAD,?72 S Z="<601-"_DGZP_">" D Z^DGPTFM W !
"RTN","DGPTFM6",32,0)
 . QUIT
"RTN","DGPTFM6",33,0)
 K DGX601
"RTN","DGPTFM6",34,0)
 F I=1:1:(IOSL-$Y-5) W !
"RTN","DGPTFM6",35,0)
 S DGNUM=$S($D(P(DGZP+1)):601_"-"_(DGZP+1),1:"MAS") G 601^DGPTFJC:DGST
"RTN","DGPTFM6",36,0)
 W "Enter <RET> to continue, 1-2 to edit,",!,"'T' to add a Procedure Segment, '^N' for screen N, or '^' to abort: <",DGNUM,">//"
"RTN","DGPTFM6",37,0)
 R X:DTIME S:'$T X="^",DGPTOUT=""
"RTN","DGPTFM6",38,0)
 K DGNUM G Q^DGPTF:X="^"
"RTN","DGPTFM6",39,0)
 I X?1"^".E S DGPTSCRN=601 G ^DGPTFJ
"RTN","DGPTFM6",40,0)
 G T:X="T"!(X="t"),HELP:X["?"
"RTN","DGPTFM6",41,0)
 I X[1!(X[2) S DA=+P(DGZP) G EDIT
"RTN","DGPTFM6",42,0)
 I X'="" G HELP
"RTN","DGPTFM6",43,0)
NEXP ;S DGZP=DGZP+1 G ^DGPTFM:'$D(P(DGZP)),SET
"RTN","DGPTFM6",44,0)
 S DGZP=DGZP+1 I '$D(P(DGZP)) S DGZP=1 G ^DGPTFM
"RTN","DGPTFM6",45,0)
 G SET
"RTN","DGPTFM6",46,0)
 ;
"RTN","DGPTFM6",47,0)
HELP W !,"Enter '^' to stop display and edit of data",!,"'^N' to jump to screen #N (appears in upper right of screen as <N>)",!,"<RET> to continue on to next screen or 1-2 to edit:"
"RTN","DGPTFM6",48,0)
 W !?10,"1-Procedure information",!,?10,"2-Procedure codes",!,"You may also enter any combination of the above, separated by commas (ex:1,2)",!
"RTN","DGPTFM6",49,0)
 R !!,"Enter <RET>: ",X:DTIME G WRT
"RTN","DGPTFM6",50,0)
MOB K P,P1,P2 S (I,P2)=0 F I1=1:1 S I=$O(^DGPT(PTF,"P",I)) Q:I'>0  S P(I1)=^(I,0),P(I1,1)=I I P(I1)']"" K P(I1) S I1=I1-1
"RTN","DGPTFM6",51,0)
 S DGPC=I1-1 Q
"RTN","DGPTFM6",52,0)
BS ;CALLED FROM [DG601]
"RTN","DGPTFM6",53,0)
 S I=$O(^DGPT(PTF,"M","AM",^DGPT(PTF,"P",DA,0)-.0000001)),I=$O(^(+I,0))
"RTN","DGPTFM6",54,0)
 S DGMOVM=$S($D(^DGPT(PTF,"M",$S(I:I,1:1),0)):$P(^(0),U,2),1:"")
"RTN","DGPTFM6",55,0)
 Q
"RTN","DGPTFM6",56,0)
R ;DELETE PROCEDURE RECORD
"RTN","DGPTFM6",57,0)
 G R^DGPTFM4
"RTN","DGPTFM6",58,0)
E ;EDIT PROCEDURE RECORD
"RTN","DGPTFM6",59,0)
 G E^DGPTFM1
"RTN","DGPTFM6",60,0)
 ;
"RTN","DGPTFM6",61,0)
 ;add procedure codes in 601p (before 2871000) or procedure record
"RTN","DGPTFM6",62,0)
P I $G(^DGPT(PTF,70)),^(70)<2871000 G FY86
"RTN","DGPTFM6",63,0)
 I '$D(P2) W !,"View Prodedure Codes first",! H 3 G ^DGPTFM
"RTN","DGPTFM6",64,0)
 I 'P2 W !,"No codes can be added to a Procedure Record",! H 3 G ^DGPTFM
"RTN","DGPTFM6",65,0)
 S L=""
"RTN","DGPTFM6",66,0)
 S DGCODSYS=$$CODESYS^DGPTIC10(PTF),L="" F I=1:1:DGPC S L2=1 D
"RTN","DGPTFM6",67,0)
 . N A
"RTN","DGPTFM6",68,0)
 . F J=5:1:9 I $P(P(I),U,J)="" S L=L_I_",",L2=0 QUIT
"RTN","DGPTFM6",69,0)
 . QUIT:DGCODSYS="ICD9"!'L2
"RTN","DGPTFM6",70,0)
 . F J=10:1:24 I $P(P(I),U,J)="" S L=L_I_",",L2=0 QUIT:'L2
"RTN","DGPTFM6",71,0)
 . QUIT:'L2
"RTN","DGPTFM6",72,0)
 . S A=$G(^DGPT(PTF,"P",+P(I,1),1)) F J=1:1:5 I $P(A,U,J)="" S L=L_I_",",L2=0 QUIT:'L2
"RTN","DGPTFM6",73,0)
 . QUIT
"RTN","DGPTFM6",74,0)
 I L="" W !!,"There are no procedure records that can be added to.",*7 H 3 G ^DGPTFM
"RTN","DGPTFM6",75,0)
 S L=$E(L,1,$L(L)-1) I L=+L S DGRC=+L G P2
"RTN","DGPTFM6",76,0)
P1 I 'Z W !!,"Add to procedure record <",L,"> : " R DGRC:DTIME G ^DGPTFM:DGRC[U!(DGRC="")
"RTN","DGPTFM6",77,0)
 E  S DGRC=+$E(A,2,99)
"RTN","DGPTFM6",78,0)
P2 I +DGRC'=DGRC!(","_L_","'[(","_DGRC_",")) W !!,"Enter the procedure record number to add ICD operation codes to: ",L G P1:'Z S Z="" G P1
"RTN","DGPTFM6",79,0)
 S DGCODSYS=$$CODESYS^DGPTIC10(PTF),DIE="^DGPT(",(DGPTF,DA)=PTF,DR=$S(DGCODSYS="ICD10":"[DG601-10P]",1:"[DG601]")
"RTN","DGPTFM6",80,0)
 S ST=1,DGZS0=DGRC,DGADD=1,DGZP=P(DGZS0,1) D ^DIE,CHK601^DGPTSCAN K DR,DGPTF,DGZP,DGADD G ^DGPTFM
"RTN","DGPTFM6",81,0)
 ;
"RTN","DGPTFM6",82,0)
FY86 S DR="" F J=1:1:5 I $P(PROC,U,J)="" S DR=DR_(J/100+45)_";"
"RTN","DGPTFM6",83,0)
 I DR="" W !!,"No more 401P procedures (before 10/01/1987) can be added.",*7 H 3 G ^DGPTFM
"RTN","DGPTFM6",84,0)
 S DR=$E(DR,1,$L(DR)-1),DP=45,DIE="^DGPT(",DA=PTF D ^DIE K DR,DIE G ^DGPTFM
"RTN","DGPTFM6",85,0)
GETVAR ;CALLED FROM GET+1^DGPTFM
"RTN","DGPTFM6",86,0)
 S PM=I1-1,I=0 F I1=1:1 S I=$O(^DGPT(PTF,"S",I)) Q:I'>0  S S(I1)=^(I,0),S(I1,1)=I
"RTN","DGPTFM6",87,0)
 K P2P S SU=I1-1 S PROC=$S($D(^DGPT(PTF,"401P")):^("401P"),1:""),P2P=0 F J1=1:1:5 S:$P(PROC,U,J1) P2P=P2P+1,P2P(P2P)=J1
"RTN","DGPTFM6",88,0)
 QUIT
"RTN","DGPTFM6",89,0)
 ;
"RTN","DGPTFM6",90,0)
BADDT(DGPROCD) ; Check patients admit date and entered date against census DATE
"RTN","DGPTFM6",91,0)
 ; If admit date is after census date then we're done
"RTN","DGPTFM6",92,0)
 ; checks to see if Patient has been discharged or has a closed census and returns false 
"RTN","DGPTFM6",93,0)
 ; If not discharged or closed and the admit and procedure date is within census date range then return false
"RTN","DGPTFM6",94,0)
 ; If admit date and procedure date is past the date range then return true
"RTN","DGPTFM6",95,0)
 S:$G(DGADM)="" DGADM=$P(^DGPT(DA(1),0),U,2) ; DGADM gets killed at end of option
"RTN","DGPTFM6",96,0)
 I $G(DGPROCD,0)<DGADM D EN^DDIOL("Not Before Admission ") Q 1
"RTN","DGPTFM6",97,0)
 I $G(DGPROCD,0)>($S($D(^DGPT(DA(1),70)):$S(+^(70):+^(70),1:9999999),1:9999999)) D EN^DDIOL("Not After discharge") Q 1
"RTN","DGPTFM6",98,0)
 I (DGADM>DGPTDAT) Q 0 ; Admit date is after census date
"RTN","DGPTFM6",99,0)
 I ($G(DGADM,$P(^DGPT(PTF,0),U,2))>DGPTDAT) Q 0 ; Admit date is after census date
"RTN","DGPTFM6",100,0)
 K DGI N DG601DT
"RTN","DGPTFM6",101,0)
 F DGI=0:0 S DGI=$O(^DGPT("ACENSUS",PTF,DGI)) Q:'DGI  I $D(^DGPT(DGI,0)),$P(^(0),U,12)=PTF,$D(^DG(45.86,+$P(^(0),U,13),0)) S Y=+^(0) X ^DD("DD") S DGI(DGI)=Y
"RTN","DGPTFM6",102,0)
 Q:($D(DGI)>1) 0 ;Closed Census
"RTN","DGPTFM6",103,0)
 I $D(^DGPT(PTF,70)),$P($G(^(70)),U)'="" Q 0 ; Patient has been discharged
"RTN","DGPTFM6",104,0)
 S DG601DT=$S($G(DGPROCD):DGPROCD,1:$G(EFFDATE))
"RTN","DGPTFM6",105,0)
 Q:(DGADM<(DGPTDAT+.09))&(DG601DT<(DGPTDAT+.09)) 0 ;Admit and procedure Date in Census Range
"RTN","DGPTFM6",106,0)
 D EN^DDIOL("Not After Census Date") Q 1 ; Reject date
"RTN","DGPTFM6",107,0)
 ;
"RTN","DGPTFM6",108,0)
 ;
"RTN","DGPTFM6",109,0)
PGBR N DIR,X,Y S DIR(0)="E",DIR("A")="Enter RETURN to continue" D ^DIR QUIT
"RTN","DGPTFM6",110,0)
 ;
"RTN","DGPTFM7")
0^81^B21631380
"RTN","DGPTFM7",1,0)
DGPTFM7 ;ALB/MJ/PLT - Display Phys. MPCR mvts ; 11/30/06 8:31am
"RTN","DGPTFM7",2,0)
 ;;5.3;Registration;**78,590,594,683,729,884**;Aug 13, 1993;Build 31
"RTN","DGPTFM7",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPTFM7",4,0)
 ;
"RTN","DGPTFM7",5,0)
EN ; entry pt to display MPCR screen
"RTN","DGPTFM7",6,0)
 ; -- PTF and DGPTFMT must be defined
"RTN","DGPTFM7",7,0)
 ;
"RTN","DGPTFM7",8,0)
 S DGMAX=7,DGPTIFN=PTF,DGTOT=0 G BYPASS:DGPTFMT<2
"RTN","DGPTFM7",9,0)
 D FDT^DGPTUTL S DGFMTDT=Y
"RTN","DGPTFM7",10,0)
 F NODE=535,"M" F I=0:0 S I=$O(^DGPT(DGPTIFN,NODE,I)) Q:'I  I $D(^(I,0)) S Y=$S($P(^(0),U,10):$P(^(0),U,10),1:DT+.2359),^UTILITY($J,"DGCDR",Y)=NODE_U_I,^UTILITY($J,"DG"_NODE,Y)=I
"RTN","DGPTFM7",11,0)
 S P=$S('$D(^DGPT(DGPTIFN,0)):DGFMTDT+1,$P(^(0),U,2)>DGFMTDT:$P(^(0),U,2),1:DGFMTDT)
"RTN","DGPTFM7",12,0)
 F I=0:0 S I=$O(^UTILITY($J,"DGCDR",I)) Q:'I  I I>DGFMTDT S DGTOT=DGTOT+1,^(I)=^(I)_"^"_P,P=I
"RTN","DGPTFM7",13,0)
BYPASS S (DGC,DGLDT)=0
"RTN","DGPTFM7",14,0)
LOOP ;
"RTN","DGPTFM7",15,0)
 D HEADER:$Y>(IOSL-15) S DGLAST("DT")=DGLDT,DGLAST("C")=DGC
"RTN","DGPTFM7",16,0)
 I DGPTFMT<2 W !!,"  MPCR information not required for this admission."
"RTN","DGPTFM7",17,0)
 F DGLDT=DGLDT:0 S DGLDT=$O(^UTILITY($J,"DGCDR",DGLDT)) Q:'DGLDT  I DGLDT>DGFMTDT S X=^(DGLDT) D PRT I 'DGPR Q:'(DGC#DGMAX)!(DGC=DGTOT)
"RTN","DGPTFM7",18,0)
 I DGPR D KILL Q
"RTN","DGPTFM7",19,0)
 W:DGC<DGTOT !,"...more movements available"
"RTN","DGPTFM7",20,0)
 F I=$Y:1:18 W !
"RTN","DGPTFM7",21,0)
 ;
"RTN","DGPTFM7",22,0)
 K X S $P(X,"-",81)="" W X
"RTN","DGPTFM7",23,0)
 I $D(DGBRCH) G @DGBRCH
"RTN","DGPTFM7",24,0)
 W !,"Enter <RET> to ",$S(DGC'<DGTOT:"go to MAS screen",1:"display more MPCR information"),!,"      '^N'  to go to screen N,  or '^' to abort: <",$S(DGC'<DGTOT:"MAS",1:"RET"),">// " R X:DTIME S:'$T X="^",DGPTOUT=""
"RTN","DGPTFM7",25,0)
 I X="^" D KILL G Q^DGPTF
"RTN","DGPTFM7",26,0)
 I X="",DGC<DGTOT G LOOP
"RTN","DGPTFM7",27,0)
 S:X="" X="^MAS"
"RTN","DGPTFM7",28,0)
 I X?1"^".E D KILL S DGPTSCRN="CDR" G ^DGPTFJ
"RTN","DGPTFM7",29,0)
 ;
"RTN","DGPTFM7",30,0)
HELP ; -- screen help
"RTN","DGPTFM7",31,0)
 I DGC<DGTOT W !,"Press return to see more MPCR information"
"RTN","DGPTFM7",32,0)
 I DGC'<DGTOT W !,"Press return to go to the 'MAS' screen"
"RTN","DGPTFM7",33,0)
 W !,"        '^'  to stop the display"
"RTN","DGPTFM7",34,0)
 W !,"        '^N' to jump to screen #N (appears in upper right of screen '<N>')"
"RTN","DGPTFM7",35,0)
 R !!,"Enter <RET>: ",X:DTIME
"RTN","DGPTFM7",36,0)
 S DGC=DGLAST("C"),DGLDT=DGLAST("DT") G LOOP
"RTN","DGPTFM7",37,0)
 ;
"RTN","DGPTFM7",38,0)
KILL ; -- kill off locals
"RTN","DGPTFM7",39,0)
 K ^UTILITY($J,"DGCDR"),^("DG535"),^("DGM"),DGCDR,DGC,DGI0,DGICDR,DGLDT,DGLVE,DGPASS,DG5SP,DG5CDR,DGMSP,DGMCDR,DGMDRG,DGMAX,DGTOT,DGWARD,DGPTIFN,DGLAST,DGFMTDT,DGLDTE,DGCDR0,DGM0,DGMTY,P,I
"RTN","DGPTFM7",40,0)
 Q
"RTN","DGPTFM7",41,0)
 ;
"RTN","DGPTFM7",42,0)
HEADER ;
"RTN","DGPTFM7",43,0)
 I DGPR D HEAD^DGPTFMO
"RTN","DGPTFM7",44,0)
 I 'DGPR W @IOF,HEAD,?72 S Z="<MPCR>" D Z^DGPTFM
"RTN","DGPTFM7",45,0)
 W !?23,"Rec",?38,"Losing Ward",?54,"PTF"
"RTN","DGPTFM7",46,0)
 W !?4,"Losing Date",?23,"Type",?28,"Ward/DRG",?38,"MPCR/Spec",?54,"MPCR/Spec",?68,"Lve/Pas/ Los"
"RTN","DGPTFM7",47,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","DGPTFM7",48,0)
 Q
"RTN","DGPTFM7",49,0)
 ;
"RTN","DGPTFM7",50,0)
PRT ; -- collect 501 and 535 data and then print
"RTN","DGPTFM7",51,0)
 ; 
"RTN","DGPTFM7",52,0)
 I $P(X,U)="M" S DGMTY=501,(Z,DGM0)=^DGPT(DGPTIFN,"M",+$P(X,U,2),0),DGMDRG=$S($D(^("P")):$P(^("P"),U),1:""),Y=+$O(^UTILITY($J,"DG535",DGLDT-.0000001)),DGCDR0=$S('$D(^(Y)):"",$D(^DGPT(DGPTIFN,535,+^(Y),0)):^(0),1:"")
"RTN","DGPTFM7",53,0)
 ;
"RTN","DGPTFM7",54,0)
 I $P(X,U)="535" S DGMTY=535,(Z,DGCDR0)=^DGPT(DGPTIFN,535,+$P(X,U,2),0),Y=+$O(^UTILITY($J,"DGM",DGLDT-.0000001)),DGM0=$S('$D(^(Y)):"",$D(^DGPT(DGPTIFN,"M",+^(Y),0)):^(0),1:""),DGMDRG=""
"RTN","DGPTFM7",55,0)
 ;
"RTN","DGPTFM7",56,0)
 N DGLOS S X1=DGLDT,X2=$P(X,U,3) D ^%DTC S X=X-$P(Z,U,3),DGLOS=$J($S(X>0:X,1:1),4)
"RTN","DGPTFM7",57,0)
 S DGC=DGC+1,DGLVE=$J($P(Z,U,3),3),DGPASS=$J($P(Z,U,4),3)
"RTN","DGPTFM7",58,0)
 S Y=DGLDT X ^DD("DD") S DGLDTE=Y
"RTN","DGPTFM7",59,0)
 ;S DGMSP=$E($S($D(^DIC(42.4,+$P(DGM0,U,2),0)):$P(^(0),U),1:"UNKNOWN"),1,14),DGMCDR=$J(+$P(DGM0,U,16),7,2)
"RTN","DGPTFM7",60,0)
 ;S DG5SP=$E($S($D(^DIC(42.4,+$P(DGCDR0,U,2),0)):$P(^(0),U),1:"UNKNOWN"),1,14),DG5CDR=$J(+$P(DGCDR0,U,16),7,2)
"RTN","DGPTFM7",61,0)
 I $D(^DIC(42.4,+$P(DGM0,U,2),0)) D
"RTN","DGPTFM7",62,0)
 . S DGMSP=$P(^DIC(42.4,+$P(DGM0,U,2),0),"^",2)
"RTN","DGPTFM7",63,0)
 . I DGMSP="" S DGMSP=$P(^DIC(42.4,+$P(DGM0,U,2),0),"^")
"RTN","DGPTFM7",64,0)
 . S DGMSP=$E(DGMSP,1,14)
"RTN","DGPTFM7",65,0)
 E  S DGMSP="UNKNOWN"
"RTN","DGPTFM7",66,0)
 S DGMCDR=$J(+$P(DGM0,U,16),7,2)
"RTN","DGPTFM7",67,0)
 I $D(^DIC(42.4,+$P(DGCDR0,U,2),0)) D
"RTN","DGPTFM7",68,0)
 . S DG5SP=$P(^DIC(42.4,+$P(DGCDR0,U,2),0),"^",2)
"RTN","DGPTFM7",69,0)
 . I DG5SP="" S DG5SP=$P(^DIC(42.4,+$P(DGCDR0,U,2),0),"^")
"RTN","DGPTFM7",70,0)
 . S DG5SP=$E(DG5SP,1,14)
"RTN","DGPTFM7",71,0)
 E  S DG5SP="UNKNOWN"
"RTN","DGPTFM7",72,0)
 S DG5CDR=$J(+$P(DGCDR0,U,16),7,2)
"RTN","DGPTFM7",73,0)
 S DGWARD=$E($S($D(^DIC(42,+$P(DGCDR0,U,6),0)):$P(^(0),U),1:"UNKNOWN"),1,8)
"RTN","DGPTFM7",74,0)
 ;
"RTN","DGPTFM7",75,0)
 W !,$J(DGC,3),?4,DGLDTE,?23,DGMTY,?28,DGWARD,?38,DG5CDR,?54,DGMCDR,?68,DGLVE,"/",DGPASS,"/",DGLOS,!?28,DGMDRG,?38,DG5SP,?54,DGMSP
"RTN","DGPTFM7",76,0)
 Q
"RTN","DGPTFM7",77,0)
 ;
"RTN","DGPTFM7",78,0)
INQ ; -- entry point for inquire option
"RTN","DGPTFM7",79,0)
 ;
"RTN","DGPTFM7",80,0)
 S:'$D(DC) DC=0 S PTF=D0,DGPR=1 D EN,KILL K PTF Q:$Y<(IOSL-15)
"RTN","DGPTFM7",81,0)
 I $E(IOST,1)="C" W *7 R X:DTIME I X=U S DN=0 Q
"RTN","DGPTFM7",82,0)
 W @IOF,! X:$D(^UTILITY($J,2)) ^(2) W ! F %=1:1:IOM W "_"
"RTN","DGPTFM7",83,0)
 W !,"("_$P(^DPT(+^DGPT(D0,0),0),U,1)_")",!
"RTN","DGPTFM7",84,0)
 Q
"RTN","DGPTFM7",85,0)
DT I Y W $P("JAN^FEB^MAR^APR^MAY^JUN^JUL^AUG^SEP^OCT^NOV^DEC",U,$E(Y,4,5))," " W:Y#100 $J(Y#100\1,2),"," W Y\10000+1700 W:Y#1 "  ",$E(Y_0,9,10),":",$E(Y_"000",11,12)
"RTN","DGPTFM7",86,0)
 Q
"RTN","DGPTFM7",87,0)
 ;
"RTN","DGPTFMO")
0^16^B42799242
"RTN","DGPTFMO",1,0)
DGPTFMO ;ALB/JDS/ADL,HIOFO/FT - DGPTF PRINT TEMPLATE ;10/15/14 2:25pm
"RTN","DGPTFMO",2,0)
 ;;5.3;Registration;**195,397,510,590,594,606,683,729,664,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTFMO",3,0)
 ;;ADL;Updated for CSV Project;;Mar 4, 2003
"RTN","DGPTFMO",4,0)
 ;
"RTN","DGPTFMO",5,0)
 ; ICDEX APIs - #5747
"RTN","DGPTFMO",6,0)
 ; ICDGTDRG APIs - #4052
"RTN","DGPTFMO",7,0)
 ; ICDXCODE APIs - #5699
"RTN","DGPTFMO",8,0)
 ;
"RTN","DGPTFMO",9,0)
EN ;called from print template DGPT CENSUS INQUIRY
"RTN","DGPTFMO",10,0)
 K A,B,AD,ADA,DGDD,DGDDPTR,DGLOOP,DGFC,HEAD,DGPTFE,DGST,DGN,T,T82,DGM82,EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPTFMO",11,0)
 F DGLOOP=4:1:7 D  ;get the set of codes for fields 4,5,6, & 7 in 45.01 (401 data - Surgery)
"RTN","DGPTFMO",12,0)
 .K DGERROR,DGRESULT
"RTN","DGPTFMO",13,0)
 .S DGDDPTR(DGLOOP)=""
"RTN","DGPTFMO",14,0)
 .D FIELD^DID(45.01,DGLOOP,,"POINTER","DGRESULT","DGERROR")
"RTN","DGPTFMO",15,0)
 .I '$D(DGERROR) S DGDDPTR(DGLOOP)=$G(DGRESULT("POINTER"))
"RTN","DGPTFMO",16,0)
 K DGERROR,DGRESULT
"RTN","DGPTFMO",17,0)
 ;
"RTN","DGPTFMO",18,0)
 F I=0:0 S I=$O(^DGPT(D0,"M",I)) Q:I'>0  I $D(^(I,0)) S J=+$P(^(0),U,10) S:'J J=999999999 S:$D(T(J)) J=J+.01*I S T(J)=I
"RTN","DGPTFMO",19,0)
 F I=0:0 S I=$O(T(I)) Q:I'>0  S DGM=$S($D(^DGPT(D0,"M",T(I),0)):^(0),1:"") D:DGM]"" WRITE
"RTN","DGPTFMO",20,0)
 ;
"RTN","DGPTFMO",21,0)
 K T F I=0:0 S I=$O(^DGPT(D0,"S",I)) Q:I'>0  D SUR
"RTN","DGPTFMO",22,0)
 S DGOP1=$S($D(^DGPT(D0,"401P")):^("401P"),1:"")
"RTN","DGPTFMO",23,0)
 I DGOP1]"" D HEAD:$Y>(IOSL-10) G Q:'DN D PROC
"RTN","DGPTFMO",24,0)
 I $D(^DGPT(D0,"P")) D HEAD:$Y>(IOSL-10) G Q:'DN F I=0:0 S I=$O(^DGPT(D0,"P",I)) Q:I'>0  S DG601=^DGPT(D0,"P",I,0),Y=+DG601 D D^DGPTUTL W !!?5,"Procedure Date: ",Y,$$GETLABEL^DGPTIC10(EFFDATE,"P") D 601
"RTN","DGPTFMO",25,0)
 S DGPT=$G(^DGPT(D0,70)) I DGPT]"" G Q:'DN D DXLS
"RTN","DGPTFMO",26,0)
 K %,DGL,DGM,DGPT,DGOP,DGOP1,DGF,DGP,DXLS,DGICD,L1,S1,T,J,K,DGPR,DGN,AGE,B,DA,DAM,DFN,DGST,DOB,DP,DRG,EXP,NO,P,PTF,DGPTFE,SD1,SEX,TAC,TRS,DGDS,DGTD,DGPROC,DG601,DGPTDAT
"RTN","DGPTFMO",27,0)
 W !
"RTN","DGPTFMO",28,0)
 K T82,DGM82,DGMPOA,DGLOOP
"RTN","DGPTFMO",29,0)
 Q
"RTN","DGPTFMO",30,0)
WRITE D HEAD:$Y>(IOSL-12) G Q:'DN S Y=$P(DGM,U,10),DGL=+$P(DGM,U,2),DGL=$S($D(^DIC(42.4,DGL,0)):^(0),1:""),DGL=$P(DGL,U,1) D D^DGPTUTL
"RTN","DGPTFMO",31,0)
 ; ICD-10 CALLS
"RTN","DGPTFMO",32,0)
 D EFFDATE^DGPTIC10(D0)
"RTN","DGPTFMO",33,0)
 ;
"RTN","DGPTFMO",34,0)
 W !!,"Movement Date: ",Y,?40,"Losing Specialty: ",$E(DGL,1,22),!,"Leave Days: ",$P(DGM,U,3),?40,"Pass Days: ",$P(DGM,U,4)
"RTN","DGPTFMO",35,0)
 W !,"Treated for SC condition: ",$S($P(DGM,U,18)=1:"Yes",1:"No")
"RTN","DGPTFMO",36,0)
 W:$P(DGM,U,31)'="" !,"Potentially Related to Combat: ",$S($P(DGM,U,31)="Y":"Yes",1:"No")
"RTN","DGPTFMO",37,0)
 W:$P(DGM,U,26)'="" !,"Treated for AO condition: ",$S($P(DGM,U,26)="Y":"Yes",1:"No")
"RTN","DGPTFMO",38,0)
 W:$P(DGM,U,27)'="" !,"Treated for IR condition: ",$S($P(DGM,U,27)="Y":"Yes",1:"No")
"RTN","DGPTFMO",39,0)
 W:$P(DGM,U,28)'="" !,"Treated for service in SW Asia: ",$S($P(DGM,U,28)="Y":"Yes",1:"No")
"RTN","DGPTFMO",40,0)
 W:$P(DGM,U,29)'="" !,"Treated for MST condition: ",$S($P(DGM,U,29)="Y":"Yes",$P(DGM,U,29)="N":"No",1:"Declined to answer") ; added 6/17/98 for MST enhancement
"RTN","DGPTFMO",41,0)
 W:$P(DGM,U,30)'="" !,"Treated for HEAD/NECK CA condition: ",$S($P(DGM,U,30)="Y":"Yes",1:"No")
"RTN","DGPTFMO",42,0)
 W:$P(DGM,U,32)'="" !,"Treated for SHAD Condition: ",$S($P(DGM,U,32)="Y":"Yes",1:"No")
"RTN","DGPTFMO",43,0)
 W:T(I)=1 !,"Discharge "
"RTN","DGPTFMO",44,0)
 S DGF="",J=0 K DG501
"RTN","DGPTFMO",45,0)
 D PTFICD^DGPTFUT(501,D0,T(I),.DG501,1)
"RTN","DGPTFMO",46,0)
 F  S J=$O(DG501(J)) Q:'J  D
"RTN","DGPTFMO",47,0)
 . S DGMPOA=$P(DG501(J),U,2) ;get POA code
"RTN","DGPTFMO",48,0)
 . S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(DG501(J),U,1),EFFDATE)
"RTN","DGPTFMO",49,0)
 . W:DGF="" !!?5,"DX: ",$$GETLABEL^DGPTIC10(EFFDATE,"D")
"RTN","DGPTFMO",50,0)
 . D WRITECOD^DGPTIC10("DIAG",+$P(DG501(J),U,1),EFFDATE,2,1,8)
"RTN","DGPTFMO",51,0)
 . I $P(DGPTTMP,U,20)=30 W:$X>73 !,"            " W " (POA=",$S(DGMPOA]"":DGMPOA,1:"''"),")"
"RTN","DGPTFMO",52,0)
 . W $S(+DGPTTMP<1!('$P(DGPTTMP,U,10)):"*",1:"")
"RTN","DGPTFMO",53,0)
 . S DGF=1
"RTN","DGPTFMO",54,0)
 K DG501
"RTN","DGPTFMO",55,0)
 ;-- display expanded codes 
"RTN","DGPTFMO",56,0)
 S DG300=$S($D(^DGPT(D0,"M",T(I),300)):^(300),1:"") I DG300]"" D HEAD:$Y>(IOSL-6) D PRN2^DGPTFM8 W !
"RTN","DGPTFMO",57,0)
 K DG300
"RTN","DGPTFMO",58,0)
 ;Display TRANSFER DRG with description
"RTN","DGPTFMO",59,0)
 Q:'$D(^DGPT(D0,"M",T(I),"P"))  S DGTD=+^("P") Q:$P($$CODEC^ICDEX(80,DGTD),U,1)="-1"  W !?3,"TRANSFER DRG: ",DGTD," - "
"RTN","DGPTFMO",60,0)
 N DXD,DGDX
"RTN","DGPTFMO",61,0)
 S DXD=$$DRGD^ICDGTDRG(DGTD,"DGDX",,$$GETDATE^ICDGTDRG(D0)),DGDS=0
"RTN","DGPTFMO",62,0)
 F  S DGDS=$O(DGDX(DGDS)) Q:'+DGDS  Q:DGDX(DGDS)=" "  W !,DGDX(DGDS)
"RTN","DGPTFMO",63,0)
 Q
"RTN","DGPTFMO",64,0)
HEAD I $E(IOST,1)="C" W *7 R X:DTIME I X=U S DN=0 Q
"RTN","DGPTFMO",65,0)
 S DC=DC+1 W @IOF,! X:$D(^UTILITY($J,2)) ^(2) W ! F K=1:1:IOM W "_"
"RTN","DGPTFMO",66,0)
 W !,"("_$P(^DPT(+^DGPT(D0,0),0),U,1)_")",!
"RTN","DGPTFMO",67,0)
 Q
"RTN","DGPTFMO",68,0)
SUR ;
"RTN","DGPTFMO",69,0)
 D HEAD:$Y>(IOSL-7) G Q:'DN S S1=^DGPT(D0,"S",I,0),Y=+S1 D D^DGPTUTL W !!,"   Date of Surg: ",Y,?45,"Chief Surg: "
"RTN","DGPTFMO",70,0)
 S L=";"_DGDDPTR(4),L1=";"_$P(S1,U,4)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTFMO",71,0)
 W !,"    Anesth Tech: " S L=";"_DGDDPTR(6),L1=";"_$P(S1,U,6)_":" W $P($P(L,L1,2),";",1),?45,"First Asst: "
"RTN","DGPTFMO",72,0)
 S L=";"_DGDDPTR(5),L1=";"_$P(S1,U,5)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTFMO",73,0)
 W !,"  Source of pay: " S L=";"_DGDDPTR(7),L1=";"_$P(S1,U,7)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTFMO",74,0)
 W ?46,"Surg spec: ",$S($D(^DIC(45.3,+$P(S1,U,3),0)):$P(^(0),U,2),1:"")
"RTN","DGPTFMO",75,0)
 W !!,?5,"Surg/pro: ",$$GETLABEL^DGPTIC10(EFFDATE,"P"),!?7
"RTN","DGPTFMO",76,0)
 S K=0 K DG401
"RTN","DGPTFMO",77,0)
 D PTFICD^DGPTFUT(401,D0,I,.DG401,1)
"RTN","DGPTFMO",78,0)
 F  S K=$O(DG401(K)) Q:'K  D
"RTN","DGPTFMO",79,0)
 . S L=$P(DG401(K),U,1),DGPTTMP=""
"RTN","DGPTFMO",80,0)
 . I L'="" S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+L,EFFDATE) D
"RTN","DGPTFMO",81,0)
 .. D WRITECOD^DGPTIC10("PROC",+L,EFFDATE,2,1,8)
"RTN","DGPTFMO",82,0)
 .. W $S(+DGPTTMP<1!('$P(DGPTTMP,U,10)):"*",1:"")
"RTN","DGPTFMO",83,0)
 K DG401
"RTN","DGPTFMO",84,0)
 ;-- display expanded codes
"RTN","DGPTFMO",85,0)
 S DG300=$S($D(^DGPT(D0,"S",I,300)):^(300),1:"") I DG300]"" D PRN3^DGPTFM8
"RTN","DGPTFMO",86,0)
 K DG300
"RTN","DGPTFMO",87,0)
 Q
"RTN","DGPTFMO",88,0)
PROC ;
"RTN","DGPTFMO",89,0)
 S DGF="" F I=1:1:5 D:$P(DGOP1,U,I)'=""
"RTN","DGPTFMO",90,0)
 . S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+$P(DGOP1,U,I),EFFDATE)
"RTN","DGPTFMO",91,0)
 . W:'DGF !!?5,"Procedure: ",$$GETLABEL^DGPTIC10(EFFDATE,"P") S DGF=1
"RTN","DGPTFMO",92,0)
 . D WRITECOD^DGPTIC10("PROC",+$P(DGOP1,U,I),EFFDATE,2,1,8)
"RTN","DGPTFMO",93,0)
 . W $S(+DGPTTMP<1!('$P(DGPTTMP,U,10)):"*",1:"")
"RTN","DGPTFMO",94,0)
 Q
"RTN","DGPTFMO",95,0)
601 ;print the procedures/dates from the 601 procedure multiple (eff. 10/1/87)
"RTN","DGPTFMO",96,0)
 K DG601 S J=0
"RTN","DGPTFMO",97,0)
 D PTFICD^DGPTFUT(601,D0,I,.DG601,1)
"RTN","DGPTFMO",98,0)
 F  S J=$O(DG601(J)) Q:'J  D
"RTN","DGPTFMO",99,0)
 . S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+$P(DG601(J),U,1),EFFDATE)
"RTN","DGPTFMO",100,0)
 . D WRITECOD^DGPTIC10("PROC",+$P(DG601(J),U,1),EFFDATE,2,1,8)
"RTN","DGPTFMO",101,0)
 . W $S(+DGPTTMP<1!('$P(DGPTTMP,U,10)):"*",1:"")
"RTN","DGPTFMO",102,0)
 K DG601
"RTN","DGPTFMO",103,0)
 Q
"RTN","DGPTFMO",104,0)
DXLS D HEAD:$Y>(IOSL-16)
"RTN","DGPTFMO",105,0)
 S DGPOA1=$P($G(^DGPT(D0,82)),U,1) ;POA for principal DX
"RTN","DGPTFMO",106,0)
 I +$P(DGPT,U,10) D
"RTN","DGPTFMO",107,0)
 . S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(DGPT,U,10),EFFDATE),DXLS=$S(+DGPTTMP>0:$P(DGPTTMP,U,2,99),1:"")
"RTN","DGPTFMO",108,0)
 . W !!?5,"PRINCIPAL DIAGNOSIS: ",$$GETLABEL^DGPTIC10(EFFDATE,"D")
"RTN","DGPTFMO",109,0)
 . D WRITECOD^DGPTIC10("DIAG",+$P(DGPT,U,10),EFFDATE,2,1,8)
"RTN","DGPTFMO",110,0)
 . W $S(+DGPTTMP<1!('$P(DGPTTMP,U,10)):"*",1:"")
"RTN","DGPTFMO",111,0)
 . Q:$P(DGPTTMP,U,20)'=30  ;not an ICD10 DX
"RTN","DGPTFMO",112,0)
 . W " ["_$S(DGPOA1]"":DGPOA1,1:" ")_"]" ;show POA value
"RTN","DGPTFMO",113,0)
 ;
"RTN","DGPTFMO",114,0)
 I +$P(DGPT,U,11) D
"RTN","DGPTFMO",115,0)
 . S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(DGPT,U,11),EFFDATE)
"RTN","DGPTFMO",116,0)
 . D WRITECOD^DGPTIC10("DIAG",+$P(DGPT,U,11),EFFDATE,2,1,8)
"RTN","DGPTFMO",117,0)
 . W $S(+DGPTTMP<1!('$P(DGPTTMP,U,10)):"*",1:"")
"RTN","DGPTFMO",118,0)
 . Q:$P(DGPTTMP,U,20)'=30  ;not an ICD10 DX
"RTN","DGPTFMO",119,0)
 . W " ["_$S(DGPOA1]"":DGPOA1,1:" ")_"]" ;show POA value. there shouldn't be one for old records
"RTN","DGPTFMO",120,0)
 K DG701,DGPOA1 S K=0
"RTN","DGPTFMO",121,0)
 D PTFICD^DGPTFUT(701,D0,,.DG701,1)
"RTN","DGPTFMO",122,0)
 F  S K=$O(DG701(K)) Q:'K  D:$P(DG701(K),U,1)>0 DSP
"RTN","DGPTFMO",123,0)
 K DG701
"RTN","DGPTFMO",124,0)
 ;-- display expanded code information
"RTN","DGPTFMO",125,0)
 S DG300=$S($D(^DGPT(D0,300)):^(300),1:"") D:DG300]"" PRN2^DGPTFM8 K DG300
"RTN","DGPTFMO",126,0)
 D EN2^DGPTF4 ;calls ^DGPTFD to get DX/OP codes and then calls DGPTICD to calculate & store DRG value in PTF CLOSE OUT (#45.84) file.
"RTN","DGPTFMO",127,0)
 Q
"RTN","DGPTFMO",128,0)
Q Q
"RTN","DGPTFMO",129,0)
Q1 K ^UTILITY(U,$J),DG1
"RTN","DGPTFMO",130,0)
 Q
"RTN","DGPTFMO",131,0)
DT I Y W $P("JAN^FEB^MAR^APR^MAY^JUN^JUL^AUG^SEP^OCT^NOV^DEC",U,$E(Y,4,5))," " W:Y#100 $J(Y#100\1,2),"," W Y\10000+1700 W:Y#1 "  ",$E(Y_0,9,10),":",$E(Y_"000",11,12)
"RTN","DGPTFMO",132,0)
 Q
"RTN","DGPTFMO",133,0)
DSP ;
"RTN","DGPTFMO",134,0)
 S J=$$ICDDATA^ICDXCODE("DIAG",+$P(DG701(K),U,1),EFFDATE) D
"RTN","DGPTFMO",135,0)
 . D WRITECOD^DGPTIC10("DIAG",+$P(DG701(K),U,1),EFFDATE,2,1,8)
"RTN","DGPTFMO",136,0)
 . W $S(+J<1!('$P(J,U,10)):"*",1:"")
"RTN","DGPTFMO",137,0)
 . Q:$P(J,U,20)'=30  ;not an ICD-10 DX
"RTN","DGPTFMO",138,0)
 . W " ["_$S($P(DG701(K),U,2)]"":$P(DG701(K),U,2),1:" ")_"]"
"RTN","DGPTFMO",139,0)
 Q
"RTN","DGPTFQWK")
0^11^B26393553
"RTN","DGPTFQWK",1,0)
DGPTFQWK ;ALB/AS/PLT - QUICK/LOAD PTF DATA ;7/21/05 2:44pm
"RTN","DGPTFQWK",2,0)
 ;;5.3;Registration;**517,594,635,729,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTFQWK",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPTFQWK",4,0)
 ;
"RTN","DGPTFQWK",5,0)
 S (DGPTF,DA)=PTF,DIE="^DGPT(",DR="[DGQWK"_$S('DGPTFE:"]",1:"F]") W !,"* editing 101 & 701 transactions" D ^DIE
"RTN","DGPTFQWK",6,0)
 S DGCODSYS=$$CODESYS^DGPTIC10(PTF),(DGPTF,DA)=PTF,DIE="^DGPT(",DR=$S(DGCODSYS="ICD10":"[DG701-10D]",1:"[DG701]")
"RTN","DGPTFQWK",7,0)
 ;used only for roll back icd10 to icd9
"RTN","DGPTFQWK",8,0)
 I DR="[DG701]",$P($G(^DGPT(PTF,71)),U,4,999)'?."^" S DR="[DG701-10D]"
"RTN","DGPTFQWK",9,0)
 D ^DIE
"RTN","DGPTFQWK",10,0)
 ;
"RTN","DGPTFQWK",11,0)
 W !,"* editing 501 transactions"
"RTN","DGPTFQWK",12,0)
 F DGM=0:0 D S501 Q:Y'>0  K DA S (DGPTF,DA)=PTF S DGMOV=+Y,DGJUMP=$S('DGPTFE:"",1:"1-2"),DGCODSYS=$$CODESYS^DGPTIC10(PTF) D  S DIE="^DGPT(" D ^DIE,CHK501^DGPTSCAN K DGMOV
"RTN","DGPTFQWK",13,0)
 . I 'DGPTFE S DR=$S(DGCODSYS="ICD10":"[DG501-10D]",1:"[DG501]") QUIT
"RTN","DGPTFQWK",14,0)
 . S DR=$S(DGCODSYS="ICD10":"[DG501F-10D]",1:"[DG501F]")
"RTN","DGPTFQWK",15,0)
 . QUIT
"RTN","DGPTFQWK",16,0)
 K DIC,DA,DR,DIE,DGCODSYS,DGXX,DGTYPE
"RTN","DGPTFQWK",17,0)
 ;
"RTN","DGPTFQWK",18,0)
 W !,"* editing 401 transactions"
"RTN","DGPTFQWK",19,0)
 F DGM=0:0 D S401 Q:Y'>0  K DA S DGSUR=+Y,DGJUMP="1-2",DGCODSYS=$$CODESYS^DGPTIC10(PTF),DR=$S(DGCODSYS="ICD10":"[DG401-10P]",1:"[DG401]"),DIE="^DGPT(",(DA,DGPTF)=PTF D ^DIE,CHK401^DGPTSCAN K DGSUR
"RTN","DGPTFQWK",20,0)
 I '$P(^DGPT(PTF,0),U,4) W !,"* editing 801 transactions" D S801
"RTN","DGPTFQWK",21,0)
 K DIC,DA,DR,DIE
"RTN","DGPTFQWK",22,0)
 W !,"* editing 601 transactions"
"RTN","DGPTFQWK",23,0)
 F DGM=0:0 S DGZP=1 D S601 Q:Y'>0  K DA S P(DGZP,1)=+Y,DGJUMP="1-2",DGCODSYS=$$CODESYS^DGPTIC10(PTF),DR=$S(DGCODSYS="ICD10":"[DG601-10P]",1:"[DG601]"),DIE="^DGPT(",(DA,DGPTF)=PTF D ^DIE,CHK601^DGPTSCAN K P
"RTN","DGPTFQWK",24,0)
 K DIC,DA,DR,DIE
"RTN","DGPTFQWK",25,0)
 I '$P(^DGPT(PTF,0),"^",4)&('DGST) W !,"  Updating TRANSFER DRGs" S DGADM=$P(^DGPT(PTF,0),U,2) D SUDO1^DGPTSUDO
"RTN","DGPTFQWK",26,0)
 K DGM,DA,DGMOVENO,DIC,DIE,DR,Y,DGPTF,DGJUMP Q
"RTN","DGPTFQWK",27,0)
 ;
"RTN","DGPTFQWK",28,0)
S501 ;-- set up 501 
"RTN","DGPTFQWK",29,0)
 ;set screen transaction identity
"RTN","DGPTFQWK",30,0)
 S X1="^501"
"RTN","DGPTFQWK",31,0)
 S DA(1)=PTF,DIC("A")="Select 501 MOVEMENT NUMBER: ",DIC(0)="AEQ",DIC="^DGPT("_PTF_",""M""," S:'$D(^DGPT(PTF,"M",0)) ^(0)="^45.02AI^^" D ^DIC
"RTN","DGPTFQWK",32,0)
 K DA,DIC
"RTN","DGPTFQWK",33,0)
 Q
"RTN","DGPTFQWK",34,0)
 ;
"RTN","DGPTFQWK",35,0)
S401 ;-- set up 401
"RTN","DGPTFQWK",36,0)
 ;set screen transaction identity
"RTN","DGPTFQWK",37,0)
 S X1="^401"
"RTN","DGPTFQWK",38,0)
 S DA(1)=PTF,DIC("A")="Select 401 SURGERY DATE: ",DIC(0)="AEQL",DIC="^DGPT("_PTF_",""S""," S:'$D(^DGPT(PTF,"S",0)) ^(0)="^45.01DA^^" D ^DIC
"RTN","DGPTFQWK",39,0)
 K DA,DIC
"RTN","DGPTFQWK",40,0)
 Q
"RTN","DGPTFQWK",41,0)
 ;
"RTN","DGPTFQWK",42,0)
S601 ;-- set up 601
"RTN","DGPTFQWK",43,0)
 ;set screen transaction identity
"RTN","DGPTFQWK",44,0)
 S X1="^601"
"RTN","DGPTFQWK",45,0)
 S DA(1)=PTF,DIC("A")="Select 601 PROCEDURE DATE: ",DIC(0)="AEQL",DIC="^DGPT("_PTF_",""P""," S:'$D(^DGPT(PTF,"P",0)) ^(0)="^45.05DA^^" D ^DIC
"RTN","DGPTFQWK",46,0)
 K DA,DIC
"RTN","DGPTFQWK",47,0)
 Q
"RTN","DGPTFQWK",48,0)
S801 ;-- set up 801
"RTN","DGPTFQWK",49,0)
 ;set screen transaction identity
"RTN","DGPTFQWK",50,0)
 S X1="^801"
"RTN","DGPTFQWK",51,0)
 F  D  D REQ:$D(PSIEN) Q:$G(RFL)=1!(Y<0)  D PCE
"RTN","DGPTFQWK",52,0)
 .S DIC("A")="Select 801 CPT DATE/TIME: "
"RTN","DGPTFQWK",53,0)
 .S DA(1)=PTF,DIC(0)="AEQLZ",DIC="^DGPT("_PTF_",""C"",",DLAYGO=45
"RTN","DGPTFQWK",54,0)
 .S:'$D(^DGPT(PTF,"C",0)) ^(0)="^45.06^^" D ^DIC
"RTN","DGPTFQWK",55,0)
 .K DA,DIC,PSIEN Q:Y'>0  S DGPRD=+Y(0),DGPSM=+Y D MOB^DGPTFM2 I $P(DGZPRF,U,3) F I=1:1:$P(DGZPRF,U,3) S:DGZPRF(I,0)=DGPSM DGZP=I
"RTN","DGPTFQWK",56,0)
 .S (DA(1),REC)=PTF,DIE="^DGPT("_PTF_",""C"",",(DA,PSIEN)=DGZPRF(DGZP,0),DR=".02;.03;.05" D FMDIE I $D(Y)>9!$D(DTOUT) S Y=-1 Q
"RTN","DGPTFQWK",57,0)
 .S DGI=0,DR=".01;" D CL^SDCO21(DFN,DGPRD,"",.SDCLY) D  S Y=1
"RTN","DGPTFQWK",58,0)
 ..F  S DGI=$O(^DGCPT(46,"C",PTF,DGI)) Q:DGI'>0  I +^DGCPT(46,DGI,1)=+DGZPRF(DGZP)&'$D(^(9)) S (DA,REC)=DGI,DR=".01;",DIE="^DGCPT(46," D GETINFO^DGPTFM21
"RTN","DGPTFQWK",59,0)
 ..F  S DA=PTF,DIC="^DGCPT(46,",DIC(0)="AELQMZ",DLAYGO=46,DIC("S")="D EN6^DGPTFJC I 'DGER" D ^DIC K DIC Q:Y'>0  D SED^DGPTFM2
"RTN","DGPTFQWK",60,0)
 ..S Y=1
"RTN","DGPTFQWK",61,0)
 ..Q
"RTN","DGPTFQWK",62,0)
 .Q
"RTN","DGPTFQWK",63,0)
 K DR,DIE,DIC,DA,DGI,DGJUMP,DGPRD,DLAYGO,RFL Q
"RTN","DGPTFQWK",64,0)
REQ ;CHECK FOR REQUIRED FIELDS IN CPT RECORDS.  RECORDS MISSING ONE OR MORE REQUIRED FIELDS ARE DELETED.
"RTN","DGPTFQWK",65,0)
 S RFL=0 I '$P(^DGPT(PTF,"C",PSIEN,0),U,3) S DA(1)=PTF,DA=DGPSM,DIK="^DGPT("_PTF_",""C""," D  G REQQ
"RTN","DGPTFQWK",66,0)
 .D ^DIK K DA W !!,"No CPT records have been filed because no performing provider was specified." S RFL=1
"RTN","DGPTFQWK",67,0)
 S (I,FCPT)=0 D RESEQ^DGPTFM3(PTF)
"RTN","DGPTFQWK",68,0)
 F J=1:1 S I=$O(^DGCPT(46,"C",PTF,I)) Q:'I  D:+^DGCPT(46,I,1)=DGPRD&'$G(^(9))
"RTN","DGPTFQWK",69,0)
 .I $P(^DGCPT(46,I,0),U,4) S FCPT=1 Q
"RTN","DGPTFQWK",70,0)
 .S DA=I,DIK="^DGCPT(46,",CPT=+^DGCPT(46,I,0) D ^DIK
"RTN","DGPTFQWK",71,0)
 .W !!,"CPT " S N=$$CPT^ICPTCOD(CPT,$$GETDATE^ICDGTDRG(PTF)) W $P(N,U,2)," ",$P(N,U,3)," not filed because no diagnosis 1 was entered."
"RTN","DGPTFQWK",72,0)
 .S RFL=2
"RTN","DGPTFQWK",73,0)
 I FCPT K FCPT,I,J,N G REQQ
"RTN","DGPTFQWK",74,0)
 S DA(1)=PTF,DA=PSIEN,DIK="^DGPT("_PTF_",""C"","
"RTN","DGPTFQWK",75,0)
 D ^DIK K DA W !!,"No CPT records have been filed because no CPT codes were filed." S RFL=1 K FCPT,I,J,N
"RTN","DGPTFQWK",76,0)
REQQ ;D RESEQ^DGPTFM3(PTF)
"RTN","DGPTFQWK",77,0)
 Q
"RTN","DGPTFQWK",78,0)
SED S DR=".14////"_DGPRD_";.16////"_PTF_";",DA=+Y,DIE="^DGCPT(46,"
"RTN","DGPTFQWK",79,0)
 S REC=PTF D SDR^DGPTFM21,FMDIE Q
"RTN","DGPTFQWK",80,0)
PCE S DIR("A")="Send record to PCE? ",DIR(0)="S^Y:YES;N:NO",DIR("B")="NO"
"RTN","DGPTFQWK",81,0)
 D ^DIR K DIR Q:Y="N"!$D(DIRUT)
"RTN","DGPTFQWK",82,0)
 D MOB^DGPTFM2 S RES=$$DATA2PCE^DGAPI1(DFN,PTF,DGZP)
"RTN","DGPTFQWK",83,0)
 I RES=1 L -^DGPT(PTF) W !,"PTF Record sent to PCE" H 2 Q
"RTN","DGPTFQWK",84,0)
 W @IOF
"RTN","DGPTFQWK",85,0)
 W !,"The PTF Record may not have been filed in PCE due to errors."
"RTN","DGPTFQWK",86,0)
 W !,"Press return to continue." R X:DTIME
"RTN","DGPTFQWK",87,0)
 L -^DGPT(PTF) Q
"RTN","DGPTFQWK",88,0)
FMDIE L +^DGPT(45,REC):2
"RTN","DGPTFQWK",89,0)
 I  D ^DIE S RES=$$DELVFILE^DGAPI1(DFN,PTF,DGZP) L -^DGPT(45,REC) Q
"RTN","DGPTFQWK",90,0)
ERR W !,"CPT record is being edited by another user" K DIE,REC S ERRFKG=1 H 2 Q
"RTN","DGPTFTR")
0^62^B55260983
"RTN","DGPTFTR",1,0)
DGPTFTR ;ALB/JDS,HIOFO/FT - TRANSMISSION OF PTF ;8/20/15 3:47pm
"RTN","DGPTFTR",2,0)
 ;;5.3;Registration;**37,415,530,601,614,645,787,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTFTR",3,0)
 ;
"RTN","DGPTFTR",4,0)
 ; VA(200) - #10060
"RTN","DGPTFTR",5,0)
 ; XMB(3.9) - #10113
"RTN","DGPTFTR",6,0)
 ; VATRAN - #1011
"RTN","DGPTFTR",7,0)
 ; XLFDT - #10103
"RTN","DGPTFTR",8,0)
 ; XMA21 - #10067
"RTN","DGPTFTR",9,0)
 ; XMD - #10070
"RTN","DGPTFTR",10,0)
 ; %ZTLOAD - #10063
"RTN","DGPTFTR",11,0)
 ;
"RTN","DGPTFTR",12,0)
ENN ;PTF Transmission [DG PTF TRANSMISSION VADATS]
"RTN","DGPTFTR",13,0)
 L +^DGP(45.83):$G(DILOCKTM,5) I '$T W !,"Another user is already transmitting. Please try again later." Q  ;45.83 is PTF RELEASE
"RTN","DGPTFTR",14,0)
 D CEN^DGPTUTL ;find current census (file 45.86). returns DGCN=ien,DGCN0=zero node
"RTN","DGPTFTR",15,0)
 I '$D(DGRTY) S Y=1 D RTY^DGPTUTL ;determine record type. If Y=1, then DGRTY=1,DGRTY0="PTF". If Y=2, then DGRTY=2,DGRTY0="CENSUS"
"RTN","DGPTFTR",16,0)
 D FDT^DGPTUTL S DGFMTDT=Y ;sets Y=2901000
"RTN","DGPTFTR",17,0)
 ;
"RTN","DGPTFTR",18,0)
EN5 ;select a PTF RELEASE date or range
"RTN","DGPTFTR",19,0)
 K DIC S DIC=45.83,DIC(0)="AZEQ",DIC("A")="Enter Start Date: "
"RTN","DGPTFTR",20,0)
 S DIC("S")="I $O(^DGP(45.83,+Y,""P"",0)) F DGX=0:0 S DGX=$O(^DGP(45.83,+Y,""P"",DGX)) Q:'DGX  I '$P(^DGP(45.83,+Y,""P"",DGX,0),U,2),$D(^DGPT(DGX,0)),$D(^(70)),+^(70)>2901000,$P(^(0),U,11)=+DGRTY Q"
"RTN","DGPTFTR",21,0)
 S D="ANT" D IX^DIC G ENQ1:X["^"!(X="")
"RTN","DGPTFTR",22,0)
 I Y'>0 W !,"There are no "_$S($G(DGRTY)=2:"CENSUS",1:"PTF")_" records in this date range to transmit." G EN5
"RTN","DGPTFTR",23,0)
 S DGSD=+Y(0),DIC(0)="EAZQ",DIC("S")="I Y'<DGSD"_" "_DIC("S"),DIC("A")="Enter Through Date: TODAY//  ",D="ANT" D IX^DIC K DIC,D
"RTN","DGPTFTR",24,0)
 ;
"RTN","DGPTFTR",25,0)
 G ENQ1:X["^" S DGED=$S(Y>0:+Y(0),1:DT)
"RTN","DGPTFTR",26,0)
 ;call VATRAN to get transmission variables 
"RTN","DGPTFTR",27,0)
 ;PTF125 should be an entry in TRANSMISSION ROUTERS (#407.7)
"RTN","DGPTFTR",28,0)
 ;VATERR returns null if no error. 1 or 2 or 3 if can't process
"RTN","DGPTFTR",29,0)
 ;returns VAT array. VAT(1) & VAT(2) are receiving users
"RTN","DGPTFTR",30,0)
 ;VAT("F")=message length (fixed record), VAT("V")=message length (variable record)
"RTN","DGPTFTR",31,0)
 S VATNAME="PTF125" D ^VATRAN I VATERR K VATNAME,VATERR,VAT L -^DGP(45.83) G ENQ
"RTN","DGPTFTR",32,0)
 S DGFMT=2 D SCAN G:DGOUTX ENQ1
"RTN","DGPTFTR",33,0)
ENQ D SCAN^DGPTFTR3 ;loops thru 45.83 and updates transmission date
"RTN","DGPTFTR",34,0)
ENQ1 L -^DGP(45.83) K DGACNT,DGXM,XMDUN,XMY,DGOUTX,DGSTCNT,DIC,DGX,DGRTY,DGRTY0,DGCN,DGCN0,DGPTFMT,DGFMT,DGFMTDT,DGLOGIC,VAT,VATERR,VATNAME,DGSD,DGED,DGPTSLF
"RTN","DGPTFTR",35,0)
 Q
"RTN","DGPTFTR",36,0)
 ;
"RTN","DGPTFTR",37,0)
SCAN K DGERR
"RTN","DGPTFTR",38,0)
 N DGY S DGY=$G(Y) D FMT^DGPTUTL S Y=$G(DGY) ;sets DGPTFMT=1, 2 (ICD9 format) or 3 (ICD10 format)
"RTN","DGPTFTR",39,0)
 D LOG S DGCNT=1,DGD=DGSD-.01,DGTR=0,DGID=1
"RTN","DGPTFTR",40,0)
 ;DGTR=counter for # of messges generated, DGID=counter for DGIDN array (DGIDN(DGID)=XMZ)
"RTN","DGPTFTR",41,0)
 ;DGCNT=counter for number of lines in MailMan message. Bumped up in DGPTRI* routines
"RTN","DGPTFTR",42,0)
 ;DGD=release date-.01
"RTN","DGPTFTR",43,0)
 ; DG*5.3*614 - DGFIRST identifies first record in a batch
"RTN","DGPTFTR",44,0)
 N DGFIRST S DGFIRST=1
"RTN","DGPTFTR",45,0)
 W !!,"Now transmitting ",$P(DGRTY0,U)," records..."
"RTN","DGPTFTR",46,0)
 W !,"Includes records of "
"RTN","DGPTFTR",47,0)
 ;
"RTN","DGPTFTR",48,0)
DAT ;create a MailMan message, transmit it and move on to process additional PTFs 
"RTN","DGPTFTR",49,0)
 D:DGCNT>1 XMIT Q:$G(DGPTSLF)>0  ;quit if segment lengths are wrong
"RTN","DGPTFTR",50,0)
 S DGD=$O(^DGP(45.83,DGD)) ;first time thru, DGCNT is 1, so XMIT is not executed.
"RTN","DGPTFTR",51,0)
 I DGD>0,DGD'>DGED D SETTRAN^DGPTUTL1 Q:DGOUTX  ;create MailMan message
"RTN","DGPTFTR",52,0)
 I DGD'>0!(DGD>DGED) D BULL^DGPTFTR3 G DATQ ;create/send bulletin
"RTN","DGPTFTR",53,0)
 S J=0 G PWR
"RTN","DGPTFTR",54,0)
DATQ Q
"RTN","DGPTFTR",55,0)
 ;
"RTN","DGPTFTR",56,0)
PWR ;get the PTF record and start processing it
"RTN","DGPTFTR",57,0)
 Q:$G(DGPTSLF)>0  ;quit if segment lengths are wrong
"RTN","DGPTFTR",58,0)
 D CEN^DGPTUTL ;check if census can be sent
"RTN","DGPTFTR",59,0)
 S P=J,J=$O(^DGP(45.83,DGD,"P",J)) G DAT:J'>0,PWR:$P(^(J,0),U,2)
"RTN","DGPTFTR",60,0)
 I $D(^DGPT(J,0)),$P(^(0),U,11)'=+DGRTY G PWR
"RTN","DGPTFTR",61,0)
 I $P(DGCN0,U,3)>DT,DGRTY=1 D CEN^DGPTFTR3 G PWR:'Y
"RTN","DGPTFTR",62,0)
 S Y=$S($D(^DGPT(J,70)):+^(70),1:0) D FMT^DGPTUTL G PWR:DGPTFMT<DGFMT
"RTN","DGPTFTR",63,0)
 ;LINES^DGPTFVC2 counts number of lines for transmission
"RTN","DGPTFTR",64,0)
 S T1=0,T2=9999999,Y=J,X=0 S:DGRTY=2 T2=+DGCN0_".9",T1=+$P(DGCN0,U,5) D LINES^DGPTFVC2 I (DGCNT+X)>VAT("F"),'$G(DGFIRST) S J=P G XMIT
"RTN","DGPTFTR",65,0)
 I $G(DGFIRST)=1 S DGFIRST=0
"RTN","DGPTFTR",66,0)
 K DICR S DGERR=0,DGSTCNT("P",J)=DGCNT
"RTN","DGPTFTR",67,0)
 ;^TMP("AEDIT",$J) & ^TMP("AERROR",$J) are set in DGPTAE* routines. Used to validate data
"RTN","DGPTFTR",68,0)
 W !,$E($P(^DPT(+^DGPT(J,0),0),U),1,25),?27,"(#",J,")" S X=^DGPT(J,0) Q:'$D(^(0))  S DGNODE=^(0),DGADM=$P(DGNODE,U,2) D
"RTN","DGPTFTR",69,0)
 . W "  Admitted: ",$TR($$FMTE^XLFDT(DGADM,"5DF")," ","0")," " K ^TMP("AEDIT",$J),^TMP("AERROR",$J) S DGACNT=0
"RTN","DGPTFTR",70,0)
 . F DGZ=6,4 W $$GET1^DIQ(45,J_",",DGZ)_" "
"RTN","DGPTFTR",71,0)
 . K DGNODE,DGZ Q
"RTN","DGPTFTR",72,0)
 I DGRTY=1 D COM
"RTN","DGPTFTR",73,0)
 I DGRTY=2 S T2=+DGCN0_".9",T1=+$P(DGCN0,U,5),(PTF,DGCI)=J D COM1
"RTN","DGPTFTR",74,0)
 I DGERR D OPEN^DGPTFTR3 ;does cleanup. deletes 45.83 data. kills XMY, removes segments from MailMan message. sends Mailman message to user that record is re-opened.
"RTN","DGPTFTR",75,0)
 K ^TMP("AEDIT",$J)
"RTN","DGPTFTR",76,0)
 I 'DGERR W ?70," Okay" S DGTR=DGTR+1 G XMIT:DGCNT>VAT("F")
"RTN","DGPTFTR",77,0)
 G PWR
"RTN","DGPTFTR",78,0)
 Q
"RTN","DGPTFTR",79,0)
 ;
"RTN","DGPTFTR",80,0)
XMIT ;transmit message with PTF segments
"RTN","DGPTFTR",81,0)
 K XMY D ROUTER
"RTN","DGPTFTR",82,0)
 S XMZ=DGXMZ,^XMB(3.9,XMZ,2,0)="^3.92A^"_(DGCNT-1)_"^"_(DGCNT-1)_"^"_DT,DGJ=J
"RTN","DGPTFTR",83,0)
 S XMDUZ=.5,XMDUN=$P(^VA(200,DUZ,0),U)
"RTN","DGPTFTR",84,0)
 S DGPTSLF=0 D CHECK(XMZ) ;are segment lengths correct?
"RTN","DGPTFTR",85,0)
 I DGPTSLF>0 Q
"RTN","DGPTFTR",86,0)
 D ENT1^XMD ;forward  message, don't ask for recipients
"RTN","DGPTFTR",87,0)
 W !,"Transmission Queued" S DGIDN(DGID)=XMZ
"RTN","DGPTFTR",88,0)
 F DGK=0:0 S DGK=$O(DGSTCNT("P",DGK)) Q:DGK'>0  D REC
"RTN","DGPTFTR",89,0)
 S DGFIRST=1
"RTN","DGPTFTR",90,0)
 K DGK S DGCNT=1,DGID=DGID+1,J=DGJ Q:J'>0  D SETTRAN^DGPTUTL1 G:'DGOUTX PWR
"RTN","DGPTFTR",91,0)
 Q
"RTN","DGPTFTR",92,0)
 ;
"RTN","DGPTFTR",93,0)
REC ;update PTF RECORD multiple in PTF RELEASE (45.83). includes PTF record ien, date transmitted, & message ien
"RTN","DGPTFTR",94,0)
 ;set PTF STATUS="Transmitted"
"RTN","DGPTFTR",95,0)
 S DGSENFLG=""
"RTN","DGPTFTR",96,0)
 S DIE="^DGP(45.83,",DA=DGD,DR="10///"_DGK,DR(2,45.831)="1///TODAY;2///"_XMZ D ^DIE K DA,DR,DIE
"RTN","DGPTFTR",97,0)
 S DIE="^DGPT(",DR="6///3",DA=DGK D ^DIE K DA,DR,DIE
"RTN","DGPTFTR",98,0)
 K DGSENFLG
"RTN","DGPTFTR",99,0)
 Q
"RTN","DGPTFTR",100,0)
 ;
"RTN","DGPTFTR",101,0)
COM S T1=0,T2=9999999 S:'$D(PTF) PTF=J S:PTF'=J PTF=J
"RTN","DGPTFTR",102,0)
COM1 ;called from DGPTC1
"RTN","DGPTFTR",103,0)
 ;pulls data from PTF (45), PATIENT(2) and PTF CLOSE OUT (45.84). Values are used to build segments and do data validation
"RTN","DGPTFTR",104,0)
 F K=0,70,71,101,"401P" S @("DG"_K)=$S($D(^DGPT(J,K)):^(K),1:"")
"RTN","DGPTFTR",105,0)
 F K=10,.11,.3,.32,.321,.52,57 S @("DG"_$S(K[".":$E(K,2,99),1:K))=$S($D(^DGP(45.84,J,K)):^(K),$D(^DPT(+^DGPT(J,0),$S(K'=10:K,1:0))):$S(K'=10:^(K),1:^(0)),1:"")
"RTN","DGPTFTR",106,0)
 F K=.02,.06 M @("DG"_$S(K[".":$E(K,2,99),1:K))=^DPT(+^DGPT(J,0),K)
"RTN","DGPTFTR",107,0)
 ;uses different processing routines to build segments and MaiLMan based on record format.
"RTN","DGPTFTR",108,0)
 ;DGPTFMT=1 is very old record format, perhaps before ICD9 usage (not sure).
"RTN","DGPTFTR",109,0)
 ;DGPTFMT=2 is ICD9 record format
"RTN","DGPTFTR",110,0)
 ;DGPTFMT=3 is ICD10 record format
"RTN","DGPTFTR",111,0)
 ;DGPTR* & DGPTRI* routines and similiar, but record format is different.
"RTN","DGPTFTR",112,0)
 D ^DGPTFTR0:DGPTFMT=1,^DGPTR0:DGPTFMT=2,^DGPTRI0:DGPTFMT=3
"RTN","DGPTFTR",113,0)
 ;
"RTN","DGPTFTR",114,0)
Q ;
"RTN","DGPTFTR",115,0)
 L -^DGP(45.83)
"RTN","DGPTFTR",116,0)
 F K=0,10,701,"401P",101,11,3,32,41,52,57,70,321,502,702,"02","06" K @("DG"_K)
"RTN","DGPTFTR",117,0)
 K DGPICD10,DGCDR,DGT,DIC,DGADM,DGAO,DGDOB,DGHEAD,DGJ,DGK,DGL,DGM,DGNAM,DGNT,DGO,DGSSN,DGSUD,DGSUR,DGTD,DGX,DGXLS,E,ERR,F,G,H,I,K,L,T,W,Z,DGPROC,DGPROCD ;** NOTE: do not kill variables needed by PTF load/edit option!!!
"RTN","DGPTFTR",118,0)
 ;DGPTFVC1 & DGPTFVC2 do expanded ptf close out edits
"RTN","DGPTFTR",119,0)
 ;DGPTFVC3 does validation checks for ptf additional questions
"RTN","DGPTFTR",120,0)
 I $D(DGERR),DGERR<1 D ^DGPTFVC1 D:'T1 ^DGPTFVC3
"RTN","DGPTFTR",121,0)
 I $D(DGERR),DGERR<1 D EN^DGPTFVC2
"RTN","DGPTFTR",122,0)
 Q
"RTN","DGPTFTR",123,0)
 ;
"RTN","DGPTFTR",124,0)
LOG ;called from PRINT+1^DGPTF2,CLS+1^DGPTF2,EN^DGPTFVC
"RTN","DGPTFTR",125,0)
 D LOG^DGPTFTR1:DGPTFMT=1,LOG^DGPTR1:DGPTFMT=2,LOG^DGPTRI1:DGPTFMT=3,COM:$D(DGERR) ;note: COM is not called unless DGERR exists
"RTN","DGPTFTR",126,0)
 Q
"RTN","DGPTFTR",127,0)
 ;
"RTN","DGPTFTR",128,0)
 ;-- check for real queue if census should be removed for national rel
"RTN","DGPTFTR",129,0)
ROUTER ;called from DGPTF099,DGPTRPO
"RTN","DGPTFTR",130,0)
 ;DGSDI is local or remote address
"RTN","DGPTFTR",131,0)
 ;I $D(XMDF) then all addressing restrictions are waived
"RTN","DGPTFTR",132,0)
 ;XMN - Can't find this variable in MailMan documentation. May not do anything.
"RTN","DGPTFTR",133,0)
 S XMDUZ=.5 F DGSDI=0:0 S DGSDI=$O(VAT(DGSDI)) Q:'DGSDI  S X=VAT(DGSDI),XMN=0,XMDF="" D INST^XMA21 K XMN,XMDF
"RTN","DGPTFTR",134,0)
 S XMY(DUZ)=""
"RTN","DGPTFTR",135,0)
 Q
"RTN","DGPTFTR",136,0)
 ;
"RTN","DGPTFTR",137,0)
CHECK(DGPTXMZ) ;check if every two lines in message body equal 384 characters
"RTN","DGPTFTR",138,0)
 N DGPTLAST,DGPTLOOP,DGPTNODE,DGPTTEXT,DGPTTOT
"RTN","DGPTFTR",139,0)
 S DGPTNODE=$G(^XMB(3.9,DGPTXMZ,2,0))
"RTN","DGPTFTR",140,0)
 S DGPTLAST=$P(DGPTNODE,U,4)
"RTN","DGPTFTR",141,0)
 F DGPTLOOP=1:2:DGPTLAST D  Q:$G(DGPTSLF)=1
"RTN","DGPTFTR",142,0)
 .S DGPTTOT=$L($G(^XMB(3.9,DGPTXMZ,2,DGPTLOOP,0)))+$L($G(^XMB(3.9,DGPTXMZ,2,DGPTLOOP+1,0)))
"RTN","DGPTFTR",143,0)
 .I DGPTTOT'=384 D
"RTN","DGPTFTR",144,0)
 ..S DGPTSLF=1 ;segment length flag
"RTN","DGPTFTR",145,0)
 ..D QMSG(DGPTXMZ)
"RTN","DGPTFTR",146,0)
 ..W !!,"There is a problem with the segment length of a PTF record."
"RTN","DGPTFTR",147,0)
 ..W !,"The MailMan message number is "_DGPTXMZ_"."
"RTN","DGPTFTR",148,0)
 ..W !,"Please log a Remedy ticket. Stopping transmission.",!
"RTN","DGPTFTR",149,0)
 Q
"RTN","DGPTFTR",150,0)
 ;
"RTN","DGPTFTR",151,0)
QMSG(DGPTMIEN) ;notify others about bad segment length
"RTN","DGPTFTR",152,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","DGPTFTR",153,0)
 S ZTDESC="DG PTF TRANSMISSION VADATS",ZTDTH=$$NOW^XLFDT(),ZTIO="",ZTRTN="SMSG^DGPTFTR"
"RTN","DGPTFTR",154,0)
 S ZTSAVE("DGPTMIEN")=""
"RTN","DGPTFTR",155,0)
 D ^%ZTLOAD
"RTN","DGPTFTR",156,0)
 Q
"RTN","DGPTFTR",157,0)
 ;
"RTN","DGPTFTR",158,0)
SMSG ;send MailMan message
"RTN","DGPTFTR",159,0)
 N DGPTTEXT,XMDUZ,XMSUB,XMTEXT,XMY
"RTN","DGPTFTR",160,0)
 S XMSUB="Station "_$P($$SITE^VASITE(),U,3)_" has wrong PTF segment length"
"RTN","DGPTFTR",161,0)
 S XMDUZ=$S($G(DUZ)>0:$G(DUZ),1:.5)
"RTN","DGPTFTR",162,0)
 S DGPTTEXT(1)="The PTF records contained in this message cannot be transmitted"
"RTN","DGPTFTR",163,0)
 S DGPTTEXT(2)="to AITC due to format of the content issue."
"RTN","DGPTFTR",164,0)
 S DGPTTEXT(3)=" "
"RTN","DGPTFTR",165,0)
 S DGPTTEXT(4)="Contact the support help desk and report."
"RTN","DGPTFTR",166,0)
 S DGPTTEXT(5)=" "
"RTN","DGPTFTR",167,0)
 S DGPTTEXT(6)="Retransmission will need to be attempted once the transmission"
"RTN","DGPTFTR",168,0)
 S DGPTTEXT(7)="message format has been corrected."
"RTN","DGPTFTR",169,0)
 S DGPTTEXT(8)=" "
"RTN","DGPTFTR",170,0)
 S DGPTTEXT(9)="The local MailMan message number is: "_DGPTMIEN
"RTN","DGPTFTR",171,0)
 S XMTEXT="DGPTTEXT("
"RTN","DGPTFTR",172,0)
 S XMY(DUZ)=""
"RTN","DGPTFTR",173,0)
 S XMY("ICD-10OITPTFExpansionTeam@va.gov")=""
"RTN","DGPTFTR",174,0)
 D ^XMD
"RTN","DGPTFTR",175,0)
 Q
"RTN","DGPTFTR3")
0^87^B13787675
"RTN","DGPTFTR3",1,0)
DGPTFTR3 ;ALB/MJK,HIOFO/FT - TRANSMISSION OF PTF/CENSUS ; 7/6/15 8:38am
"RTN","DGPTFTR3",2,0)
 ;;5.3;Registration;**568,884**;Aug 13, 1993;Build 31
"RTN","DGPTFTR3",3,0)
 ;
"RTN","DGPTFTR3",4,0)
 ; XMB(3.9) - #10113
"RTN","DGPTFTR3",5,0)
 ; XLFDT - #10103
"RTN","DGPTFTR3",6,0)
 ; XMD - #10070
"RTN","DGPTFTR3",7,0)
 ;
"RTN","DGPTFTR3",8,0)
BULL ;CREATE BULLETIN
"RTN","DGPTFTR3",9,0)
 G BULLQ:DGTR<1
"RTN","DGPTFTR3",10,0)
 S Y=$TR($$FMTE^XLFDT(DT,"5DF")," ","0")
"RTN","DGPTFTR3",11,0)
 S ^UTILITY($J,"DGPTSTAT",1,0)="                           RUN DATE: "_Y,Y=$TR($$FMTE^XLFDT(DGSD,"5DF")," ","0")
"RTN","DGPTFTR3",12,0)
 S %="        RELEASE DATE RANGE SELECTED: "_Y_" - " S Y=$TR($$FMTE^XLFDT($P(DGED,"."),"5DF")," ","0"),^UTILITY($J,"DGPTSTAT",2,0)=%_Y
"RTN","DGPTFTR3",13,0)
 S ^UTILITY($J,"DGPTSTAT",4,0)="      TOTAL # OF "_$P(DGRTY0,U)_" RECORDS TRANSMITTED: "_$J(DGTR,6,0)
"RTN","DGPTFTR3",14,0)
 F %=3,5,6 S ^UTILITY($J,"DGPTSTAT",%,0)=" "
"RTN","DGPTFTR3",15,0)
 S ^UTILITY($J,"DGPTSTAT",7,0)="LOCAL MESSAGE ID#'S - COMPARE TO AUSTIN'S CONFIRMATION MESSAGES",DGUT=8,%=""
"RTN","DGPTFTR3",16,0)
 F DGID=0:0 S DGID=$O(DGIDN(DGID)) Q:'DGID  S %=%_DGIDN(DGID)_"     " I $L(%)>70 S ^UTILITY($J,"DGPTSTAT",DGUT,0)=%,%="",DGUT=DGUT+1
"RTN","DGPTFTR3",17,0)
 I $L(%) S ^UTILITY($J,"DGPTSTAT",DGUT,0)=%
"RTN","DGPTFTR3",18,0)
 S XMSUB=$P(DGRTY0,U)_" TRANSMISSION STATISTICS SUMMARY",XMDUZ=.5,XMTEXT="^UTILITY($J,""DGPTSTAT"",",XMY(DUZ)=""
"RTN","DGPTFTR3",19,0)
 D ^XMD
"RTN","DGPTFTR3",20,0)
BULLQ K DGD,J,DGCNT,VAT,VATERR,VATNAME,DGID,DGIDN,DGSDI,DGTR,DGUT,XMZ,DGERR,PTF,T1,T2,Y,DFN,DGJ,DGK,XMSUB,XMTEXT,XMY,XMDUZ,% Q
"RTN","DGPTFTR3",21,0)
 ;
"RTN","DGPTFTR3",22,0)
SCAN ; -- see if all released recs are xmited
"RTN","DGPTFTR3",23,0)
 F DGD=DGSD-.01:0 S DGD=$O(^DGP(45.83,DGD)) Q:'DGD!(DGD>DGED)  D SCAN1
"RTN","DGPTFTR3",24,0)
 Q
"RTN","DGPTFTR3",25,0)
SCAN1 ; -- scan rec log
"RTN","DGPTFTR3",26,0)
 S DGYES=1
"RTN","DGPTFTR3",27,0)
 F DGI=0:0 S DGI=$O(^DGP(45.83,DGD,"P",DGI)) Q:'DGI  I $D(^(DGI,0)),'$P(^(0),U,2) S DGYES=0 Q
"RTN","DGPTFTR3",28,0)
 I DGYES S DIE="^DGP(45.83,",DA=DGD,DR="1///TODAY" D ^DIE
"RTN","DGPTFTR3",29,0)
 K DGYES,DIE,DR,DGI
"RTN","DGPTFTR3",30,0)
 Q
"RTN","DGPTFTR3",31,0)
 ;
"RTN","DGPTFTR3",32,0)
CEN ; -- test to see if PTF rec can be sent
"RTN","DGPTFTR3",33,0)
 S Y=1
"RTN","DGPTFTR3",34,0)
 F DGCI=0:0 S DGCI=$O(^DGPT("ACENSUS",J,DGCI)) Q:'DGCI  I $D(^DGPT(DGCI,0)),$P(^(0),U,13)=DGCN S Y=0 Q
"RTN","DGPTFTR3",35,0)
 I 'Y S Y=$P(DGCN0,U,3) X ^DD("DD") W !?5,*7,"[PTF #",J," for ",$P(^DPT(+^DGPT(J,0),0),U)," cannot be transmitted until ",Y,"." S Y=+DGCN0 X ^DD("DD") W !?6,"This admission is a ",Y," Census admission.]" S Y=0
"RTN","DGPTFTR3",36,0)
 K DGCI Q
"RTN","DGPTFTR3",37,0)
 ;
"RTN","DGPTFTR3",38,0)
OPEN ;
"RTN","DGPTFTR3",39,0)
 S DGPTIFN=J,DGPTFX=""
"RTN","DGPTFTR3",40,0)
 S DIK="^DGP(45.83,DGD,""P"",",DA(1)=DGD,DA=DGPTIFN D ^DIK
"RTN","DGPTFTR3",41,0)
 I '$O(^DGP(45.83,DGD,"P",0)) S DIK="^DGP(45.83,",DA=DGD D ^DIK
"RTN","DGPTFTR3",42,0)
 D KDGP^DGPTFDEL
"RTN","DGPTFTR3",43,0)
 I DGRTY=2,$D(^DGPT(+DGPTIFN,0)) S DGPTFX=+$P(^(0),U,12) I $D(^DGPT(DGPTFX,0)),$D(^DGP(45.84,DGPTFX,0)) S DGJ=DGPTIFN,DGPTIFN=DGPTFX D KDGP^DGPTFDEL S DGPTIFN=DGJ K DGJ
"RTN","DGPTFTR3",44,0)
 K XMY
"RTN","DGPTFTR3",45,0)
 I 'DGPTFX S DGJ(1,0)="PTF Record "_DGPTIFN_" of "_$P(^DPT(+^DGPT(DGPTIFN,0),0),U)_" re-opened."
"RTN","DGPTFTR3",46,0)
 I DGPTFX S DGJ(1,0)="PTF Record #"_DGPTFX_" of "_$P(^DPT(+^DGPT(DGPTFX,0),0),U)_" re-opened for census." ;,DGJ(2,0)=" ",DGJ(3,0)="CENSUS Record #"_DGPTIFN_" has been deleted."
"RTN","DGPTFTR3",47,0)
 S XMTEXT="DGJ(",XMDUZ=.5,XMSUB=$P(DGRTY0,U)_" RECORD REOPENED",XMY(DUZ)="" D ^XMD
"RTN","DGPTFTR3",48,0)
 S DGCNT=DGSTCNT("P",DGPTIFN) K DGSTCNT("P",DGPTIFN) F K=DGCNT-.01:0 S K=$O(^XMB(3.9,DGXMZ,2,K)) Q:K'>0  K ^(K,0)
"RTN","DGPTFTR3",49,0)
 I DGRTY=2 D KDGPT^DGPTFDEL
"RTN","DGPTFTR3",50,0)
 W !,$P(DGRTY0,U)," RECORD RE-OPENED"
"RTN","DGPTFTR3",51,0)
 K DIK,DA,XMY,XMTEXT,XMDUZ,XMSUB,DGPTIFN,DGPTFX Q
"RTN","DGPTFTR3",52,0)
 ;
"RTN","DGPTFUT")
0^12^B38258055
"RTN","DGPTFUT",1,0)
DGPTFUT ;WOIFO/PLT,HIOFO/FT,WIOFO/PMK - PTF UTILITIES WITH API - ICR #6130  ;05/04/15 10:07am
"RTN","DGPTFUT",2,0)
 ;;5.3;Registration;**884**;Aug 13, 1993;Build 31
"RTN","DGPTFUT",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPTFUT",4,0)
 ;
"RTN","DGPTFUT",5,0)
 ;direct entry not allowed
"RTN","DGPTFUT",6,0)
 QUIT
"RTN","DGPTFUT",7,0)
 ;
"RTN","DGPTFUT",8,0)
 ;dga=401, 501, 601, 701 or 801 of multiple fields of file #45 - ^dgpt
"RTN","DGPTFUT",9,0)
 ;dgb=ien of file #45 - ^dgpt
"RTN","DGPTFUT",10,0)
 ;.dgc=return values, initialized with kill, dgc(0)= discharge date for dga=701
"RTN","DGPTFUT",11,0)
 ;                dgc(ien)= 401 sugery/procedure date, 501 movement date
"RTN","DGPTFUT",12,0)
 ;                          601 procedure date, 701 discharge date
"RTN","DGPTFUT",13,0)
 ;                          801 cpt record date/time
"RTN","DGPTFUT",14,0)
PTFIEN(DGA,DGB,DGC) ;get the ien's for 701,401,501,601,801 and recd dt/time
"RTN","DGPTFUT",15,0)
 K DGC
"RTN","DGPTFUT",16,0)
 N A,B,C
"RTN","DGPTFUT",17,0)
 I DGA=701 S DGC(0)=$P($G(^DGPT(DGB,70)),U) QUIT
"RTN","DGPTFUT",18,0)
 S A=$S(DGA=401:"S",DGA=501:"M",DGA=601:"P",DGA=801:"C",1:"") QUIT:A=""
"RTN","DGPTFUT",19,0)
 ;the piece # of the record date/time
"RTN","DGPTFUT",20,0)
 S C=1 S:DGA=501 C=10
"RTN","DGPTFUT",21,0)
 S B=0 F  S B=$O(^DGPT(DGB,A,B)) QUIT:'B  S DGC(B)=$P($G(^(B,0)),U,C)
"RTN","DGPTFUT",22,0)
 QUIT
"RTN","DGPTFUT",23,0)
 ;
"RTN","DGPTFUT",24,0)
 ;dga=401, 501, 601, 701 or 801
"RTN","DGPTFUT",25,0)
 ;dgb=ien of file #45 - ptf
"RTN","DGPTFUT",26,0)
 ;dgc=ien of field multiple 401, 501, 601,801, nil if dga=701
"RTN","DGPTFUT",27,0)
 ;.dgd=return values, initialized with kill, dgd=^1 to ^15 demographic data, see tag 101
"RTN","DGPTFUT",28,0)
 ;                        ^16 rec date/time^17 405 ien if dga=501
"RTN","DGPTFUT",29,0)
 ; dgd(0)=prin dia ien^prin poa^icd code^poa external if dga=7/801
"RTN","DGPTFUT",30,0)
 ; dgd(1)=ien of icd1^poa1 internal^icd code^poa external, dgd(2)=...
"RTN","DGPTFUT",31,0)
 ; dgd(25)=ien of icd25^poa25 internal^icd code^poa external
"RTN","DGPTFUT",32,0)
 ; dgd(#) is undef if icd nil
"RTN","DGPTFUT",33,0)
 ;dge=1 for dgd(#,1)=short description, dgd(2,1)...,dgd(25,1)
"RTN","DGPTFUT",34,0)
 ; dge=2 dgd(1,2)=long description, dgd(2,2)...,dgd(25,2)
"RTN","DGPTFUT",35,0)
 ; dge=3 for both dgd(1,1) and dgd(1,2)..., dgd(25,1) and dgd(25,2)
"RTN","DGPTFUT",36,0)
PTFICD(DGA,DGB,DGC,DGD,DGE) ;get icd/poa/description of file #45
"RTN","DGPTFUT",37,0)
 K DGD
"RTN","DGPTFUT",38,0)
 S DGD=$$101(DGB) S:$P(DGD,U,2) $P(DGD,U,12)=$$GETLABEL^DGPTIC10($P(DGD,U,11),$S(DGA=701!(DGA=501):"D",DGA=401!(DGA=601):"P",1:""))
"RTN","DGPTFUT",39,0)
 D @DGA
"RTN","DGPTFUT",40,0)
 QUIT
"RTN","DGPTFUT",41,0)
 ;
"RTN","DGPTFUT",42,0)
 ;
"RTN","DGPTFUT",43,0)
 ;ptf=ien of file #45
"RTN","DGPTFUT",44,0)
 ;value= ^1 patient name^2 patient ien^3 adm dt^4 fac^5 fee basis
"RTN","DGPTFUT",45,0)
 ; ^6 status^7 type record^8 ptf ien generating this census rec
"RTN","DGPTFUT",46,0)
 ; ^9 census date ptr^10 discharge date^11 effective date
"RTN","DGPTFUT",47,0)
 ; ^12 icd label if from tag ptficd
"RTN","DGPTFUT",48,0)
101(PTF) ;ef= value of ptf demographic data
"RTN","DGPTFUT",49,0)
 N A,B,C,D
"RTN","DGPTFUT",50,0)
 QUIT:'PTF ""  QUIT:'$D(^DGPT(PTF)) ""
"RTN","DGPTFUT",51,0)
 S A=^DGPT(PTF,0),B=$G(^(70))
"RTN","DGPTFUT",52,0)
 S C=$$GET7DATE^DGPTIC10(PTF)
"RTN","DGPTFUT",53,0)
 S D=$P(^DPT(+A,0),U)_U_$P(A,U,1,4),$P(D,U,6)=$P(A,U,6)_U_$P(A,U,11)_U_$P(A,U,12)_U_$P(A,U,13)_U_$P(B,U)_U_C
"RTN","DGPTFUT",54,0)
 QUIT D
"RTN","DGPTFUT",55,0)
 ;
"RTN","DGPTFUT",56,0)
 ;
"RTN","DGPTFUT",57,0)
401 ;401 multiple operation icd
"RTN","DGPTFUT",58,0)
 N A,B,C
"RTN","DGPTFUT",59,0)
 QUIT:'$D(^DGPT(DGB,"S",DGC,0))  S A=^(0),B=$G(^(1)),$P(DGD,U,16)=$P(A,U)
"RTN","DGPTFUT",60,0)
 F C=8:1:27 S:$P(A,U,C)]"" DGD(C-7)=$P(A,U,C)_U_U_$$ICDCODE(80.1,$P(A,U,C))
"RTN","DGPTFUT",61,0)
 F C=1:1:5 S:$P(B,U,C)]"" DGD(C+20)=$P(B,U,C)_U_U_$$ICDCODE(80.1,$P(B,U,C))
"RTN","DGPTFUT",62,0)
 I $G(DGE) D DOPDES(80.1)
"RTN","DGPTFUT",63,0)
 QUIT
"RTN","DGPTFUT",64,0)
 ;
"RTN","DGPTFUT",65,0)
 ;
"RTN","DGPTFUT",66,0)
501 ;501 multiple - movement icd/poa
"RTN","DGPTFUT",67,0)
 N A,B,C,D
"RTN","DGPTFUT",68,0)
 QUIT:'$D(^DGPT(DGB,"M",DGC,0))  S A=^(0),B=$G(^(81)),C=$G(^(82)),$P(DGD,U,16)=$P(A,U,10)
"RTN","DGPTFUT",69,0)
 F D=5:1:9 S:$P(A,U,D)]"" DGD(D-4)=$P(A,U,D)_U_$P(C,U,D-4)_U_$$ICDCODE(80,$P(A,U,D))_U_$S($P(C,U,D-4)]"":$$EXTERNAL^DILFD(45.02,82.01,"",$P(C,U,D-4)),1:"")
"RTN","DGPTFUT",70,0)
 F D=11:1:15 S:$P(A,U,D)]"" DGD(D-5)=$P(A,U,D)_U_$P(C,U,D-5)_U_$$ICDCODE(80,$P(A,U,D))_U_$S($P(C,U,D-5)]"":$$EXTERNAL^DILFD(45.02,82.01,"",$P(C,U,D-5)),1:"")
"RTN","DGPTFUT",71,0)
 F D=1:1:15 S:$P(B,U,D)]"" DGD(D+10)=$P(B,U,D)_U_$P(C,U,D+10)_U_$$ICDCODE(80,$P(B,U,D))_U_$S($P(C,U,D+10)]"":$$EXTERNAL^DILFD(45.02,82.01,"",$P(C,U,D+10)),1:"")
"RTN","DGPTFUT",72,0)
 I $G(DGE) D DOPDES(80)
"RTN","DGPTFUT",73,0)
 QUIT
"RTN","DGPTFUT",74,0)
 ;
"RTN","DGPTFUT",75,0)
 ;
"RTN","DGPTFUT",76,0)
601 ;601 multiple - procedure icd
"RTN","DGPTFUT",77,0)
 N A,B,C
"RTN","DGPTFUT",78,0)
 QUIT:'$D(^DGPT(DGB,"P",DGC,0))  S A=^(0),B=$G(^(1)),$P(DGD,U,16)=$P(A,U)
"RTN","DGPTFUT",79,0)
 F C=5:1:24 S:$P(A,U,C)]"" DGD(C-4)=$P(A,U,C)_U_U_$$ICDCODE(80.1,$P(A,U,C))
"RTN","DGPTFUT",80,0)
 F C=1:1:5 S:$P(B,U,C)]"" DGD(C+20)=$P(B,U,C)_U_U_$$ICDCODE(80.1,$P(B,U,C))
"RTN","DGPTFUT",81,0)
 I $G(DGE) D DOPDES(80.1)
"RTN","DGPTFUT",82,0)
 QUIT
"RTN","DGPTFUT",83,0)
 ;
"RTN","DGPTFUT",84,0)
 ;
"RTN","DGPTFUT",85,0)
701 ;primary and secondary diagnosis icd/poa
"RTN","DGPTFUT",86,0)
 N A,B,C,D,E
"RTN","DGPTFUT",87,0)
 QUIT:'$D(^DGPT(DGB,0))  S A=$G(^(70)),B=$G(^(71)),C=$G(^(82))
"RTN","DGPTFUT",88,0)
 S E=$P(A,U,10) S:E="" E=$P(A,U,11)
"RTN","DGPTFUT",89,0)
 S:E]"" DGD(0)=E_U_$P(C,U,1)_U_$$ICDCODE(80,E)_U_$S($P(C,U,1)]"":$$EXTERNAL^DILFD(45,82.01,"",$P(C,U,1)),1:"")
"RTN","DGPTFUT",90,0)
 F D=16:1:24 S:$P(A,U,D)]"" DGD(D-15)=$P(A,U,D)_U_$P(C,U,D-14)_U_$$ICDCODE(80,$P(A,U,D))_U_$S($P(C,U,D-14)]"":$$EXTERNAL^DILFD(45,82.02,"",$P(C,U,D-14)),1:"")
"RTN","DGPTFUT",91,0)
 F D=1:1:15 S:$P(B,U,D)]"" DGD(D+9)=$P(B,U,D)_U_$P(C,U,D+10)_U_$$ICDCODE(80,$P(B,U,D))_U_$S($P(C,U,D+10)]"":$$EXTERNAL^DILFD(45,82.02,"",$P(C,U,D+10)),1:"")
"RTN","DGPTFUT",92,0)
 I $G(DGE) D DOPDES(80)
"RTN","DGPTFUT",93,0)
 QUIT
"RTN","DGPTFUT",94,0)
 ;
"RTN","DGPTFUT",95,0)
 ;
"RTN","DGPTFUT",96,0)
801 ;801 multiple - cpt code
"RTN","DGPTFUT",97,0)
 N A
"RTN","DGPTFUT",98,0)
 QUIT:'$D(^DGPT(DGB,"C",DGC,0))  S A=^(0)
"RTN","DGPTFUT",99,0)
 S:$P(A,U,4)]"" DGD(0)=$P(A,U,4)_U_U_$$ICDCODE(80,$P(A,U,4))
"RTN","DGPTFUT",100,0)
 I $G(DGE) D DOPDES(80)
"RTN","DGPTFUT",101,0)
 QUIT
"RTN","DGPTFUT",102,0)
 ;
"RTN","DGPTFUT",103,0)
 ;
"RTN","DGPTFUT",104,0)
 ;dga=80 or 80.1
"RTN","DGPTFUT",105,0)
DOPDES(DGA) ;set diag,oper and procet short/long description in dgd array
"RTN","DGPTFUT",106,0)
 N DGB
"RTN","DGPTFUT",107,0)
 S DGB="" F  S DGB=$O(DGD(DGB)) QUIT:DGB=""  S:"13"[DGE DGD(DGB,1)=$$ICDDES(DGA,+DGD(DGB),$P(DGD,U,11),1) S:"23"[DGE DGD(DGB,2)=$$ICDDES(DGA,+DGD(DGB),$P(DGD,U,11),2)
"RTN","DGPTFUT",108,0)
 ;
"RTN","DGPTFUT",109,0)
 ;
"RTN","DGPTFUT",110,0)
 ;
"RTN","DGPTFUT",111,0)
 ;a= file #80 or #80.1
"RTN","DGPTFUT",112,0)
 ;b=ien
"RTN","DGPTFUT",113,0)
ICDCODE(A,B) ;ef icd code or nil
"RTN","DGPTFUT",114,0)
 N C
"RTN","DGPTFUT",115,0)
 S C=$$CODEC^ICDEX(A,B)
"RTN","DGPTFUT",116,0)
 QUIT $S(C=-1:"",1:C)
"RTN","DGPTFUT",117,0)
 ;
"RTN","DGPTFUT",118,0)
 ;
"RTN","DGPTFUT",119,0)
 ;dgfn=80 for icd, 80.1 for opration/procedure
"RTN","DGPTFUT",120,0)
 ;dgien=ien of dgfn
"RTN","DGPTFUT",121,0)
 ;dgedt=effective date
"RTN","DGPTFUT",122,0)
 ;a=1 for short description, 2=long
"RTN","DGPTFUT",123,0)
ICDDES(DGFN,DGIEN,DGEDT,A) ;ef= file 80 or 80.1 code description
"RTN","DGPTFUT",124,0)
 QUIT:A=1 $$VST^ICDEX(DGFN,DGIEN,DGEDT)
"RTN","DGPTFUT",125,0)
 QUIT $$VLT^ICDEX(DGFN,DGIEN,DGEDT)
"RTN","DGPTFUT",126,0)
 ;
"RTN","DGPTFUT",127,0)
 ;
"RTN","DGPTFUT",128,0)
STR401(DG0,DG1) ; Builds 25 piece string with OPERATION codes
"RTN","DGPTFUT",129,0)
 ; DG0 = file 45 ien
"RTN","DGPTFUT",130,0)
 ; DG1 = ien of 401 multiple
"RTN","DGPTFUT",131,0)
 ; Returns a string of 25 pieces containing the OPERATION codes
"RTN","DGPTFUT",132,0)
 N DG401,DG401A,DGLOOP,DGSTRING
"RTN","DGPTFUT",133,0)
 S DG0=$G(DG0),DG1=$G(DG1)
"RTN","DGPTFUT",134,0)
 I 'DG0!'DG1 Q ""
"RTN","DGPTFUT",135,0)
 S DG401=$G(^DGPT(DG0,"S",DG1,0)),DG401A=$G(^DGPT(DG0,"S",DG1,1)),DGSTRING=""
"RTN","DGPTFUT",136,0)
 F DGLOOP=8:1:27 S $P(DGSTRING,U,DGLOOP-7)=$P(DG401,U,DGLOOP)
"RTN","DGPTFUT",137,0)
 F DGLOOP=1:1:5 S $P(DGSTRING,U,DGLOOP+20)=$P(DG401A,U,DGLOOP)
"RTN","DGPTFUT",138,0)
 Q DGSTRING
"RTN","DGPTFUT",139,0)
 ;
"RTN","DGPTFUT",140,0)
STR501(DG0,DG1) ; Builds 25 piece string with MOVEMENT codes
"RTN","DGPTFUT",141,0)
 ; DG0 = file 45 ien
"RTN","DGPTFUT",142,0)
 ; DG1 = ien of 501 multiple
"RTN","DGPTFUT",143,0)
 ; Returns a string of 25 pieces containing the MOVEMENT codes
"RTN","DGPTFUT",144,0)
 N DG501,DG501A,DGLOOP,DGSTRING
"RTN","DGPTFUT",145,0)
 S DG0=$G(DG0),DG1=$G(DG1)
"RTN","DGPTFUT",146,0)
 I 'DG0!'DG1 Q ""
"RTN","DGPTFUT",147,0)
 S DG501=$G(^DGPT(DG0,"M",DG1,0)),DG501A=$G(^DGPT(DG0,"M",DG1,81)),DGSTRING=""
"RTN","DGPTFUT",148,0)
 F DGLOOP=5:1:9 S $P(DGSTRING,U,DGLOOP-4)=$P(DG501,U,DGLOOP)
"RTN","DGPTFUT",149,0)
 F DGLOOP=11:1:15 S $P(DGSTRING,U,DGLOOP-5)=$P(DG501,U,DGLOOP)
"RTN","DGPTFUT",150,0)
 F DGLOOP=1:1:15 S $P(DGSTRING,U,DGLOOP+10)=$P(DG501A,U,DGLOOP)
"RTN","DGPTFUT",151,0)
 Q DGSTRING
"RTN","DGPTFUT",152,0)
 ;
"RTN","DGPTFUT",153,0)
STR601(DG0,DG1) ; Builds 25 piece string with PROCEDURE codes
"RTN","DGPTFUT",154,0)
 ; DG0 = file 45 ien
"RTN","DGPTFUT",155,0)
 ; DG1 = ien of 601 multiple
"RTN","DGPTFUT",156,0)
 ; Returns a string of 25 pieces containing the PROCEDURE codes
"RTN","DGPTFUT",157,0)
 N DG601,DG601A,DGLOOP,DGSTRING
"RTN","DGPTFUT",158,0)
 S DG0=$G(DG0),DG1=$G(DG1)
"RTN","DGPTFUT",159,0)
 I 'DG0!'DG1 Q ""
"RTN","DGPTFUT",160,0)
 S DG601=$G(^DGPT(DG0,"P",DG1,0)),DG601A=$G(^DGPT(DG0,"P",DG1,1)),DGSTRING=""
"RTN","DGPTFUT",161,0)
 F DGLOOP=5:1:24 S $P(DGSTRING,U,DGLOOP-4)=$P(DG601,U,DGLOOP)
"RTN","DGPTFUT",162,0)
 F DGLOOP=1:1:5 S $P(DGSTRING,U,DGLOOP+20)=$P(DG601A,U,DGLOOP)
"RTN","DGPTFUT",163,0)
 Q DGSTRING
"RTN","DGPTFUT",164,0)
 ;
"RTN","DGPTFUT",165,0)
STR701(DG0) ; Builds 25 piece string with DIAGNOSTIC codes
"RTN","DGPTFUT",166,0)
 ; DG0 = file 45 ien
"RTN","DGPTFUT",167,0)
 ; Returns a string of 25 pieces containing the 701 codes. First piece is principal DX
"RTN","DGPTFUT",168,0)
 N DG701,DG701A,DGLOOP,DGSTRING
"RTN","DGPTFUT",169,0)
 S DG0=$G(DG0)
"RTN","DGPTFUT",170,0)
 I 'DG0 Q ""
"RTN","DGPTFUT",171,0)
 S DG701=$G(^DGPT(DG0,70)),DG701A=$G(^DGPT(DG0,71)),DGSTRING="",$P(DGSTRING,U,1)=$P(DG701,U,10)
"RTN","DGPTFUT",172,0)
 F DGLOOP=16:1:24 S $P(DGSTRING,U,DGLOOP-14)=$P(DG701,U,DGLOOP)
"RTN","DGPTFUT",173,0)
 F DGLOOP=1:1:15 S $P(DGSTRING,U,DGLOOP+10)=$P(DG701A,U,DGLOOP)
"RTN","DGPTFUT",174,0)
 Q DGSTRING
"RTN","DGPTFUT",175,0)
 ;
"RTN","DGPTFUT",176,0)
STR701P(DG0) ; Builds 25 piece string with 701 Present On Admission (POA) codes
"RTN","DGPTFUT",177,0)
 ; DG0 = file 45 ien
"RTN","DGPTFUT",178,0)
 ; Returns a string of 25 pieces containing the 701 POA codes
"RTN","DGPTFUT",179,0)
 N DG82,DGLOOP,DGSTRING
"RTN","DGPTFUT",180,0)
 S DG0=$G(DG0)
"RTN","DGPTFUT",181,0)
 I 'DG0 Q ""
"RTN","DGPTFUT",182,0)
 S DG82=$G(^DGPT(DG0,82)),DGSTRING=""
"RTN","DGPTFUT",183,0)
 F DGLOOP=1:1:25 S $P(DGSTRING,U,DGLOOP)=$P(DG82,U,DGLOOP)
"RTN","DGPTFUT",184,0)
 Q DGSTRING
"RTN","DGPTFUT",185,0)
 ;
"RTN","DGPTFUT",186,0)
STR501P(DG0,DG1) ; Builds 25 piece string with 501 Present On Admission (POA) codes
"RTN","DGPTFUT",187,0)
 ; DG0 = file 45 ien
"RTN","DGPTFUT",188,0)
 ; DG1 = ien of 501 multiple
"RTN","DGPTFUT",189,0)
 ; Returns a string of 25 pieces containing the 501 POA codes
"RTN","DGPTFUT",190,0)
 N DG82,DGLOOP,DGSTRING
"RTN","DGPTFUT",191,0)
 S DG0=$G(DG0),DG1=$G(DG1)
"RTN","DGPTFUT",192,0)
 I 'DG0!'DG1 Q ""
"RTN","DGPTFUT",193,0)
 S DG82=$G(^DGPT(DG0,"M",DG1,82)),DGSTRING=""
"RTN","DGPTFUT",194,0)
 F DGLOOP=1:1:25 S $P(DGSTRING,U,DGLOOP)=$P(DG82,U,DGLOOP)
"RTN","DGPTFUT",195,0)
 Q DGSTRING
"RTN","DGPTFUT",196,0)
 ;
"RTN","DGPTFUT1")
0^22^B3593858
"RTN","DGPTFUT1",1,0)
DGPTFUT1 ;ALBOI/KCL - PTF UTILITIES CONTINUED;10/14/14
"RTN","DGPTFUT1",2,0)
 ;;5.3;Registration;**884**;Aug 13, 1993;Build 31
"RTN","DGPTFUT1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPTFUT1",4,0)
 ;
"RTN","DGPTFUT1",5,0)
 ;direct entry not allowed
"RTN","DGPTFUT1",6,0)
 QUIT
"RTN","DGPTFUT1",7,0)
 ;
"RTN","DGPTFUT1",8,0)
POA501(DGX,DGDA1,DGDA,DGNODE,DGPIECE) ;called from input transforms of POA fields in 501 (#45.02) sub-file
"RTN","DGPTFUT1",9,0)
 ;This function will check to see if the 501 Movement ICD/Dx field associated with POA being
"RTN","DGPTFUT1",10,0)
 ;entered is populated.  If it is not, the user will not be allowed to enter the POA indicator.
"RTN","DGPTFUT1",11,0)
 ;
"RTN","DGPTFUT1",12,0)
 ;  Input:
"RTN","DGPTFUT1",13,0)
 ;       DGX - (required) user input for field
"RTN","DGPTFUT1",14,0)
 ;     DGDA1 - (required) ien of record in PTF (#45) file
"RTN","DGPTFUT1",15,0)
 ;      DGDA - (required) ien of record in 501 (#45.02) sub-file
"RTN","DGPTFUT1",16,0)
 ;    DGNODE - (required) node of 501 Movement ICD/Dx field associated with POA field
"RTN","DGPTFUT1",17,0)
 ;   DGPIECE - (required) piece of 501 Movement ICD/Dx field associated with POA field
"RTN","DGPTFUT1",18,0)
 ;
"RTN","DGPTFUT1",19,0)
 ; Output:
"RTN","DGPTFUT1",20,0)
 ;    DGRSLT - (function value) 
"RTN","DGPTFUT1",21,0)
 ;             1 if user input permitted 
"RTN","DGPTFUT1",22,0)
 ;             0 if user input not permitted and output from EN^DDIOL
"RTN","DGPTFUT1",23,0)
 ;
"RTN","DGPTFUT1",24,0)
 N DGMSG
"RTN","DGPTFUT1",25,0)
 N DGRSLT
"RTN","DGPTFUT1",26,0)
 ;
"RTN","DGPTFUT1",27,0)
 S DGRSLT=0
"RTN","DGPTFUT1",28,0)
 ;
"RTN","DGPTFUT1",29,0)
 ;check for required input
"RTN","DGPTFUT1",30,0)
 Q:'$D(DGX) DGRSLT
"RTN","DGPTFUT1",31,0)
 Q:'$G(DGDA1) DGRSLT
"RTN","DGPTFUT1",32,0)
 Q:'$G(DGDA) DGRSLT
"RTN","DGPTFUT1",33,0)
 Q:$G(DGNODE)']"" DGRSLT
"RTN","DGPTFUT1",34,0)
 Q:'$G(DGPIECE) DGRSLT
"RTN","DGPTFUT1",35,0)
 ;
"RTN","DGPTFUT1",36,0)
 S DGRSLT=1
"RTN","DGPTFUT1",37,0)
 ;
"RTN","DGPTFUT1",38,0)
 ;check for 501 Movement ICD/Diagnosis field associated with POA indicator
"RTN","DGPTFUT1",39,0)
 I $P($G(^DGPT(DGDA1,"M",DGDA,DGNODE)),U,DGPIECE)="" D
"RTN","DGPTFUT1",40,0)
 . S DGRSLT=0
"RTN","DGPTFUT1",41,0)
 . S DGMSG(1)=" "
"RTN","DGPTFUT1",42,0)
 . S DGMSG(2)="Please enter the ICD for this POA first!"
"RTN","DGPTFUT1",43,0)
 . S DGMSG(2,"F")="!?3"
"RTN","DGPTFUT1",44,0)
 . S DGMSG(3)=" "
"RTN","DGPTFUT1",45,0)
 . D EN^DDIOL(.DGMSG)
"RTN","DGPTFUT1",46,0)
 ;
"RTN","DGPTFUT1",47,0)
 Q DGRSLT
"RTN","DGPTFUT1",48,0)
 ;
"RTN","DGPTFUT1",49,0)
 ;
"RTN","DGPTFUT1",50,0)
POA701(DGX,DGDA,DGNODE,DGPIECE) ;called from input transforms of POA fields in 701 Primary/Secondary Dx fields
"RTN","DGPTFUT1",51,0)
 ;This function will check to see if the 701 Primary/Secondary Dx field associated with POA being
"RTN","DGPTFUT1",52,0)
 ;entered is populated.  If it is not, the user will not be allowed to enter the POA indicator.
"RTN","DGPTFUT1",53,0)
 ;
"RTN","DGPTFUT1",54,0)
 ;  Input:
"RTN","DGPTFUT1",55,0)
 ;       DGX - (required) user input for field
"RTN","DGPTFUT1",56,0)
 ;      DGDA - (required) ien of record in PTF (#45) file
"RTN","DGPTFUT1",57,0)
 ;    DGNODE - (required) node of 701 Primary/Secondary Dx field associated with POA field
"RTN","DGPTFUT1",58,0)
 ;   DGPIECE - (required) piece of 701 Primary/Secondary Dx field associated with POA field
"RTN","DGPTFUT1",59,0)
 ;
"RTN","DGPTFUT1",60,0)
 ; Output:
"RTN","DGPTFUT1",61,0)
 ;    DGRSLT - (function value) 
"RTN","DGPTFUT1",62,0)
 ;             1 if user input permitted 
"RTN","DGPTFUT1",63,0)
 ;             0 if user input not permitted and output from EN^DDIOL
"RTN","DGPTFUT1",64,0)
 ;
"RTN","DGPTFUT1",65,0)
 N DGMSG
"RTN","DGPTFUT1",66,0)
 N DGRSLT
"RTN","DGPTFUT1",67,0)
 ;
"RTN","DGPTFUT1",68,0)
 S DGRSLT=0
"RTN","DGPTFUT1",69,0)
 ;
"RTN","DGPTFUT1",70,0)
 ;check for required input
"RTN","DGPTFUT1",71,0)
 Q:'$D(DGX) DGRSLT
"RTN","DGPTFUT1",72,0)
 Q:'$G(DGDA) DGRSLT
"RTN","DGPTFUT1",73,0)
 Q:$G(DGNODE)']"" DGRSLT
"RTN","DGPTFUT1",74,0)
 Q:'$G(DGPIECE) DGRSLT
"RTN","DGPTFUT1",75,0)
 ;
"RTN","DGPTFUT1",76,0)
 S DGRSLT=1
"RTN","DGPTFUT1",77,0)
 ;
"RTN","DGPTFUT1",78,0)
 ;check for 701 Primary/Secondary Dx field associated with POA indicator
"RTN","DGPTFUT1",79,0)
 I $P($G(^DGPT(DGDA,DGNODE)),U,DGPIECE)="" D
"RTN","DGPTFUT1",80,0)
 . S DGRSLT=0
"RTN","DGPTFUT1",81,0)
 . S DGMSG(1)=" "
"RTN","DGPTFUT1",82,0)
 . S DGMSG(2)="Please enter the Diagnosis for this POA first!"
"RTN","DGPTFUT1",83,0)
 . S DGMSG(2,"F")="!?3"
"RTN","DGPTFUT1",84,0)
 . S DGMSG(3)=" "
"RTN","DGPTFUT1",85,0)
 . D EN^DDIOL(.DGMSG)
"RTN","DGPTFUT1",86,0)
 ;
"RTN","DGPTFUT1",87,0)
 Q DGRSLT
"RTN","DGPTFVC1")
0^51^B42593524
"RTN","DGPTFVC1",1,0)
DGPTFVC1 ;ALB/AS/ADL,HIOFO/FT - Expanded PTF Close-Out Edits ;10/21/14 2:33pm
"RTN","DGPTFVC1",2,0)
 ;;5.3;Registration;**52,58,79,114,164,400,342,466,415,493,512,510,544,629,817,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTFVC1",3,0)
 ;;ADL;Updated for CSV Project;;Mar 26, 2003
"RTN","DGPTFVC1",4,0)
 ;
"RTN","DGPTFVC1",5,0)
 ; XLFDT APIs - #10103
"RTN","DGPTFVC1",6,0)
 ; ICDEX APIs - #5747
"RTN","DGPTFVC1",7,0)
 ; ICDXCODE APIs - #5699
"RTN","DGPTFVC1",8,0)
 ; VADPT APIs - #10061
"RTN","DGPTFVC1",9,0)
 ;
"RTN","DGPTFVC1",10,0)
 ;Called from Q+2^DGPTFTR. Variable must be passed in: PTF
"RTN","DGPTFVC1",11,0)
 ;Variable returned: DGERR.   DGERR <-- 1 if record fails to pass a check; DGERR <-- "" if record passes all checks
"RTN","DGPTFVC1",12,0)
 ;
"RTN","DGPTFVC1",13,0)
 Q:'$D(PTF)
"RTN","DGPTFVC1",14,0)
 S DGERR="",DGV(701)=$S($D(^DGPT(PTF,70)):^(70),1:""),DGV(101)=^(0),DGSUFFIX=$P(DGV(101),"^",5),DGV("FEE")=$P(DGV(101),"^",4),DFN=$P(DGV(101),"^",1)
"RTN","DGPTFVC1",15,0)
 ;
"RTN","DGPTFVC1",16,0)
 I $P(DGV(101),"^",2)>2820700 D AO
"RTN","DGPTFVC1",17,0)
 ;
"RTN","DGPTFVC1",18,0)
 I DGRTY=1,DGV("FEE") D MT
"RTN","DGPTFVC1",19,0)
 ;
"RTN","DGPTFVC1",20,0)
 ; DG*512, sck/Remove 101-Means Test indicator = 'U' xmit block
"RTN","DGPTFVC1",21,0)
 ;
"RTN","DGPTFVC1",22,0)
 ; 850 - aas - hard coded ICD codes, diagnosis values, different for ICD-9 and ICD-10
"RTN","DGPTFVC1",23,0)
 N SYS,EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPTFVC1",24,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPTFVC1",25,0)
 S SYS=$$SYS^ICDEX("DIAG",EFFDATE)
"RTN","DGPTFVC1",26,0)
 I $D(^DPT(DFN,57)),$P(^(57),"^",4)>0,SYS=1 S S0=$P(^(57),"^",4),DGDX=$S(S0=1!(S0=3):"344.1",1:"344.0"),DGSCI="" F DGX=0:0 S DGX=$O(^DGPT(PTF,"M",DGX)) Q:DGX'>0  S DGNODE(0)=^(DGX,0),DGNODE=$$STR501^DGPTFUT(PTF,DGX),DGSCI="" D SCI
"RTN","DGPTFVC1",27,0)
 I $D(^DPT(DFN,57)),$P(^(57),"^",4)>0,SYS=30 S S0=$P(^(57),"^",4),DGDX=$S(S0=1!(S0=3):"G82.2",1:"G82.5"),DGSCI="" F DGX=0:0 S DGX=$O(^DGPT(PTF,"M",DGX)) Q:DGX'>0  S DGNODE(0)=^(DGX,0),DGNODE=$$STR501^DGPTFUT(PTF,DGX),DGSCI="" D SCI
"RTN","DGPTFVC1",28,0)
 ;
"RTN","DGPTFVC1",29,0)
 S DGDP="",DGDISPO=$P(DGV(701),"^",6),DGRECSUF=$P(DGV(701),"^",13)
"RTN","DGPTFVC1",30,0)
 I DGRTY=1 D
"RTN","DGPTFVC1",31,0)
 .S DGSTATYP=$S(DGDISPO=12!(DGDISPO=13):30,DGDISPO=10:42,DGDISPO=8:40,1:"")
"RTN","DGPTFVC1",32,0)
 .I DGSTATYP]"" D
"RTN","DGPTFVC1",33,0)
 ..D NUMACT^DGPTSUF(DGSTATYP)
"RTN","DGPTFVC1",34,0)
 ..I DGANUM>0 F I=1:1:DGANUM I DGSUFFIX=DGSUFNAM(I) D
"RTN","DGPTFVC1",35,0)
 ...I DGDISPO'=8 I DGRECSUF=DGSUFNAM(DGANUM) S DGDP=5 D DP
"RTN","DGPTFVC1",36,0)
 ...I DGDISPO=8 N DGANUM,DGSUFNAM D NUMACT^DGPTSUF(42) I DGRECSUF=DGSUFNAM(DGANUM) S DGDP=5 D DP
"RTN","DGPTFVC1",37,0)
 .K DGANUM,DGSTATYP,DGSUFNAM,I
"RTN","DGPTFVC1",38,0)
 ;
"RTN","DGPTFVC1",39,0)
 I DGRTY=1 S %=$P(DGV(701),"^",3) I %=4!(%=6)!(%=7) S DGDP="" D OP I $P(DGV(701),"^",5)=1 S DGERR=1 W !,"701 VA AUSPICES",?23," value inconsistent for discharge"
"RTN","DGPTFVC1",40,0)
 ;
"RTN","DGPTFVC1",41,0)
 ;If PRRTP treating specialty, must have valid PRRTP suffix
"RTN","DGPTFVC1",42,0)
 ;Fee records would not contain PRRTP specialties
"RTN","DGPTFVC1",43,0)
 I 'DGV("FEE"),"^25^26^27^28^29^38^39^"[(U_$P(DGV(701),U,2)_U) D
"RTN","DGPTFVC1",44,0)
 .I DGSUFFIX'="PA",(DGSUFFIX'="PB"),(DGSUFFIX'="PC"),(DGSUFFIX'="PD") D
"RTN","DGPTFVC1",45,0)
 ..S DGERR=1
"RTN","DGPTFVC1",46,0)
 ..W !,"101 SUFFIX",?23,"value must be set to a valid PRRTP suffix."
"RTN","DGPTFVC1",47,0)
 ;
"RTN","DGPTFVC1",48,0)
 D RACETHNC
"RTN","DGPTFVC1",49,0)
 K DGDISPO,DGRECSUF,DGV,DGDP,DGDX,DGSCI,DGSUFFIX,DGNODE,DGX,%,S0,I,X
"RTN","DGPTFVC1",50,0)
 I DGERR H 4
"RTN","DGPTFVC1",51,0)
 Q
"RTN","DGPTFVC1",52,0)
 ;
"RTN","DGPTFVC1",53,0)
SCI ;
"RTN","DGPTFVC1",54,0)
 N EFFDATE,IMPDATE
"RTN","DGPTFVC1",55,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTFVC1",56,0)
 F X=1:1:25 I $P(DGNODE,"^",X) S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(DGNODE,"^",X),EFFDATE) D
"RTN","DGPTFVC1",57,0)
 . I +DGPTTMP>0&($P(DGPTTMP,U,10)) S:$E($P(DGPTTMP,"^",2),1,5)=DGDX DGSCI=10 Q:DGSCI
"RTN","DGPTFVC1",58,0)
 I 'DGSCI S DGERR=1,%=$P(DGNODE(0),"^",10),X=$TR($$FMTE^XLFDT(%,"5DF")," ","0") W !,"501 ",X," SCI of ",S0,?23," requires an ICD Diagnosis code beginning with",!?12," or equal to ",DGDX
"RTN","DGPTFVC1",59,0)
 Q
"RTN","DGPTFVC1",60,0)
 ;
"RTN","DGPTFVC1",61,0)
MT S DGVMT=$P(DGV(101),"^",10),DGX=999 G DGX:DGVMT']"" I +$P(DGV(101),"^",2)<2860700!(DGSUFFIX="BU") S DGX="X" G DGX
"RTN","DGPTFVC1",62,0)
 S DGZEC=$P($G(^DGPT(PTF,101)),U,8),DGZEC=$S($D(^DIC(8,+DGZEC,0)):^(0),1:"") I $P(DGZEC,U,5)="N" S DGX="N" G DGX
"RTN","DGPTFVC1",63,0)
 S DGT=$P(DGV(701),".") G AS:'$O(^DGMT(408.31,"AD",1,DFN,0)) S DGZ1=$$LST^DGMTU(DFN,DGT) K:DGZ1']"" DGZ1
"RTN","DGPTFVC1",64,0)
 I DGVMT="X" K DGX,DGVMT Q
"RTN","DGPTFVC1",65,0)
 S DGX=$S('$D(DGZ1):"U",1:$P(DGZ1,U,4))
"RTN","DGPTFVC1",66,0)
 ; Determine if the Pending Adjudication is for MT(C) or GMT(G)
"RTN","DGPTFVC1",67,0)
 I DGX="P" D  G DGX
"RTN","DGPTFVC1",68,0)
 . I '+$P($G(DGZ1),U) S DGX="U" Q
"RTN","DGPTFVC1",69,0)
 . S DGX=$$PA^DGMTUTL($P(DGZ1,U)),DGX=$S('$D(DGX):"U",DGX="MT":"C",DGX="GMT":"G",1:"U")
"RTN","DGPTFVC1",70,0)
 I DGX="A",$P(DGZEC,U,4)=3,$$SC^DGMTR(DFN),$$ANYSC^DGPTSCAN(PTF) S DGX="AS" G DGX
"RTN","DGPTFVC1",71,0)
 I DGX="A","^1^3^"[("^"_$P(DGZEC,U,4)_"^"),$P($G(^DPT(DFN,.3)),U,2)>0 S DGX="AS" G DGX
"RTN","DGPTFVC1",72,0)
 S DGX=$S(DGX="A":"AN","BCGN"[DGX:DGX,1:"U") G AS:DGX="U" G DGX:DGX'="N"
"RTN","DGPTFVC1",73,0)
AS S DGZ=$S($D(^DPT(DFN,.321)):^(.321),1:0) I $P(DGZ,U,2)="Y"!($P(DGZ,U,3)="Y") S DGX="AS" G DGX
"RTN","DGPTFVC1",74,0)
 S DGZ=$S($D(^DPT(DFN,.322)):^(.322),1:0) I $P(DGZ,U,13)="Y" S DGX="AS" G DGX
"RTN","DGPTFVC1",75,0)
 N DGNTARR S DGZ=$S($$GETCUR^DGNTAPI(DFN,"DGNTARR")>0:DGNTARR("NTR"),1:"") I $P(DGZ,U)="Y" S DGX="AS" G DGX
"RTN","DGPTFVC1",76,0)
 S DGZ=$$GETSTAT^DGMSTAPI(DFN) I $P(DGZ,U,2)="Y" S DGX="AS" G DGX
"RTN","DGPTFVC1",77,0)
 I $P(DGZEC,U,5)="Y",$P(DGZEC,U,4)<4,"^2^15^"'[(U_$P(DGZEC,U,9)_U) S DGX="AS" G DGX
"RTN","DGPTFVC1",78,0)
 S DGX="AN"
"RTN","DGPTFVC1",79,0)
DGX ;DG*5.3*817/Remove 101-Means Test indicator = 'U' xmit block for FEE BASIS PTF 
"RTN","DGPTFVC1",80,0)
 I DGVMT'=DGX,DGVMT'="U" S DGERR=1 W !,"101 ","MEANS TEST",?23," value ",DGVMT,$S(DGVMT']"":"blank",DGVMT="X":" only for admissions prior to 7/1/86 or domicilliary use",1:" inconsistent with eligibility data")
"RTN","DGPTFVC1",81,0)
 K DGZEC,DGZ,DGZ1,DGT,DGX,DGVMT Q
"RTN","DGPTFVC1",82,0)
 ;
"RTN","DGPTFVC1",83,0)
DP I $P(DGV(701),"^",3)'=5 S DGERR=1 W !,"701 ",$E("TYPE OF DISPOSITION",1,18),?23," value inconsistent for discharge"
"RTN","DGPTFVC1",84,0)
OP I $P(DGV(701),"^",4)=1 S DGERR=1 W !,"701 ",$E("OUTPATIENT TREATMENT",1,18),?23," value inconsistent for discharge" Q:DGDP=""
"RTN","DGPTFVC1",85,0)
 I $P(DGV(701),"^",5)=2 S DGERR=1 W !,"701 VA AUSPICES",?23," value inconsistent for discharge"
"RTN","DGPTFVC1",86,0)
 Q
"RTN","DGPTFVC1",87,0)
 ;
"RTN","DGPTFVC1",88,0)
AO I DGPTFMT<2 D  Q
"RTN","DGPTFVC1",89,0)
 .S %=$S($D(^DGPT(PTF,101)):$P(^(101),"^",4),1:"")
"RTN","DGPTFVC1",90,0)
 .S %=$S($D(^DIC(45.82,+%,0)):$P(^(0),"^",1),1:"")
"RTN","DGPTFVC1",91,0)
 .S I=$S($D(^DPT(DFN,.321)):^(.321),1:"")
"RTN","DGPTFVC1",92,0)
 .S:$P(I,"^",2)="Y"&(%'=6) DGERR=1,DGV("E")=1
"RTN","DGPTFVC1",93,0)
 .W:$D(DGV("E")) !,"101 AGENT ORANGE",?23," value ",$S(DGV("E"):"can only be used with COB of '6'",1:"is inconsistent with Vietnam Service and/or COB")
"RTN","DGPTFVC1",94,0)
 ;
"RTN","DGPTFVC1",95,0)
 N AO,AOL,TMP
"RTN","DGPTFVC1",96,0)
 S TMP=$G(^DPT(DFN,.321))
"RTN","DGPTFVC1",97,0)
 S AO=$S($P(TMP,"^",2)="Y":1,1:0)
"RTN","DGPTFVC1",98,0)
 S AOL=$P(TMP,"^",13)
"RTN","DGPTFVC1",99,0)
 Q:('AO)
"RTN","DGPTFVC1",100,0)
 Q:(AOL'="")
"RTN","DGPTFVC1",101,0)
 S DGERR=1,DGV("E")=1
"RTN","DGPTFVC1",102,0)
 W !,"101 AGENT ORANGE LOCATION",?23,"value required if exposure to Agent Orange claimed"
"RTN","DGPTFVC1",103,0)
 Q
"RTN","DGPTFVC1",104,0)
RACETHNC        ;Race and ethnicity check
"RTN","DGPTFVC1",105,0)
 ;Ensure that a value for ethnicity and at least one race is on file.
"RTN","DGPTFVC1",106,0)
 ;Ensure all active race/ethnicity values have a valid PTF value and an
"RTN","DGPTFVC1",107,0)
 ;associated collection method.  Ensure all collection methods have a
"RTN","DGPTFVC1",108,0)
 ;valid PTF value.  Ignore race/ethnicity entries that are inactive or
"RTN","DGPTFVC1",109,0)
 ;invalid pointers.  Note: PTF sends first active ethnicity and first
"RTN","DGPTFVC1",110,0)
 ;six active races.
"RTN","DGPTFVC1",111,0)
 N REF,IEN,TYPE,TEXT,PTRVAL,PTRMTHD,NUM,MAX
"RTN","DGPTFVC1",112,0)
 N VALIDVAL,VALIDMTH,VALUE,VADM
"RTN","DGPTFVC1",113,0)
 D DEM^VADPT
"RTN","DGPTFVC1",114,0)
 F REF=11,12 D
"RTN","DGPTFVC1",115,0)
 .I REF=12 D
"RTN","DGPTFVC1",116,0)
 ..S MAX=6
"RTN","DGPTFVC1",117,0)
 ..S TYPE=1
"RTN","DGPTFVC1",118,0)
 ..S VALIDVAL=",3,8,9,A,B,C,D,"
"RTN","DGPTFVC1",119,0)
 ..S VALIDMTH=",S,P,O,U,"
"RTN","DGPTFVC1",120,0)
 ..S TEXT="RACE"
"RTN","DGPTFVC1",121,0)
 .I REF=11 D
"RTN","DGPTFVC1",122,0)
 ..S MAX=1
"RTN","DGPTFVC1",123,0)
 ..S TYPE=2
"RTN","DGPTFVC1",124,0)
 ..S TEXT="ETHNICITY"
"RTN","DGPTFVC1",125,0)
 ..S VALIDVAL=",H,N,D,U,"
"RTN","DGPTFVC1",126,0)
 ..S VALIDMTH=",S,P,O,U,"
"RTN","DGPTFVC1",127,0)
 .S NUM=1
"RTN","DGPTFVC1",128,0)
 .S IEN=0
"RTN","DGPTFVC1",129,0)
 .F  S IEN=+$O(VADM(REF,IEN)) Q:'IEN  D  Q:NUM>MAX
"RTN","DGPTFVC1",130,0)
 ..S PTRVAL=+VADM(REF,IEN)
"RTN","DGPTFVC1",131,0)
 ..S PTRMTHD=+$G(VADM(REF,IEN,1))
"RTN","DGPTFVC1",132,0)
 ..Q:'PTRVAL
"RTN","DGPTFVC1",133,0)
 ..Q:$$INACTIVE^DGUTL4(PTRVAL,TYPE)
"RTN","DGPTFVC1",134,0)
 ..S NUM=NUM+1
"RTN","DGPTFVC1",135,0)
 ..S VALUE=$$PTR2CODE^DGUTL4(PTRVAL,TYPE,4)
"RTN","DGPTFVC1",136,0)
 ..I (VALUE="")!(VALIDVAL'[VALUE) D  Q
"RTN","DGPTFVC1",137,0)
 ...W !,"701 ",TEXT,?23,"missing/invalid xmit value"
"RTN","DGPTFVC1",138,0)
 ...S DGERR=1
"RTN","DGPTFVC1",139,0)
 ..I ('PTRMTHD) D  Q
"RTN","DGPTFVC1",140,0)
 ...W !,"701 ",TEXT,?23,"method of collection missing/invalid"
"RTN","DGPTFVC1",141,0)
 ...S DGERR=1
"RTN","DGPTFVC1",142,0)
 ..S VALUE=$$PTR2CODE^DGUTL4(PTRMTHD,3,4)
"RTN","DGPTFVC1",143,0)
 ..I (VALUE="")!(VALIDMTH'[VALUE) D  Q
"RTN","DGPTFVC1",144,0)
 ...W !,"701 ",TEXT,?23,"missing/invalid xmit value for method of collection"
"RTN","DGPTFVC1",145,0)
 ...S DGERR=1
"RTN","DGPTFVC1",146,0)
 Q
"RTN","DGPTFVC3")
0^52^B11851601
"RTN","DGPTFVC3",1,0)
DGPTFVC3 ;ALB/MTC,HIOFO/FT - VAILIDATION CHECK FOR PTF ADDITIONAL QUESTIONS ;10/21/14 1:59pm
"RTN","DGPTFVC3",2,0)
 ;;5.3;Registration;**164,729,884**;Aug 13, 1993;Build 31
"RTN","DGPTFVC3",3,0)
 ;
"RTN","DGPTFVC3",4,0)
 ; %ZIS APIs - 10086
"RTN","DGPTFVC3",5,0)
 ; XLFDT APIs - 10103
"RTN","DGPTFVC3",6,0)
 ;
"RTN","DGPTFVC3",7,0)
 ; Called by Q+2^DGPTFTR
"RTN","DGPTFVC3",8,0)
 ; Variable Passed In:  PTF - Current PTF record.
"RTN","DGPTFVC3",9,0)
 ; Variable Returned :  DGERR - 1 if fails else "" 
"RTN","DGPTFVC3",10,0)
 ;
"RTN","DGPTFVC3",11,0)
EN ;
"RTN","DGPTFVC3",12,0)
 D INIT G:DGOUT ENQ
"RTN","DGPTFVC3",13,0)
 D 401,501,701
"RTN","DGPTFVC3",14,0)
ENQ ;
"RTN","DGPTFVC3",15,0)
 K DGPTF,DGHOLD,DGMOV,DGJ,DGBPC,DGPTIT,DGOUT,DGSUR,DGREC
"RTN","DGPTFVC3",16,0)
 Q
"RTN","DGPTFVC3",17,0)
501 ;-- check 501's for inconsistent data
"RTN","DGPTFVC3",18,0)
 K DGPTIT
"RTN","DGPTFVC3",19,0)
 F DGMOV=0:0 S DGMOV=$O(^DGPT(DGPTF,"M",DGMOV)) Q:DGMOV'>0  I $D(^DGPT(DGPTF,"M",DGMOV,0)) S DGHOLD=$$STR501^DGPTFUT(DGPTF,DGMOV) D CHKFL5
"RTN","DGPTFVC3",20,0)
 K DGMOV
"RTN","DGPTFVC3",21,0)
 Q
"RTN","DGPTFVC3",22,0)
 ;
"RTN","DGPTFVC3",23,0)
CHKFL5 ;-- check field entries
"RTN","DGPTFVC3",24,0)
 F DGJ=1:1:25 I $P(DGHOLD,U,DGJ)]"" S DGPTIT($P(DGHOLD,U,DGJ)_";ICD9(")=""
"RTN","DGPTFVC3",25,0)
 D DC^DGPTSCAN,SCAN^DGPTSCAN
"RTN","DGPTFVC3",26,0)
 I '$D(DGBPC),'$D(^DGPT(DGPTF,"M",DGMOV,300)) G CHK5Q
"RTN","DGPTFVC3",27,0)
 S DGHOLD=$S($D(^DGPT(DGPTF,"M",DGMOV,300)):^(300),1:"")
"RTN","DGPTFVC3",28,0)
 D GETNUM^DGPTSCAN
"RTN","DGPTFVC3",29,0)
 ;F DGII=2:1:DGFNUM I ('$D(DGBPC(DGII))&($P(DGHOLD,U,DGII)]""))!($D(DGBPC(DGII))&($P(DGHOLD,U,DGII)']"")) S DGERR=1 D W501
"RTN","DGPTFVC3",30,0)
 F DGII=2:1:DGFNUM I ($D(DGBPC(DGII))&($P(DGHOLD,U,DGII)']"")) S DGERR=1 D W501
"RTN","DGPTFVC3",31,0)
 ;
"RTN","DGPTFVC3",32,0)
CHK5Q K DGFNUM,DGII,DGBPC,DGPTIT
"RTN","DGPTFVC3",33,0)
 Q
"RTN","DGPTFVC3",34,0)
 ;
"RTN","DGPTFVC3",35,0)
401 ;-- check 401's for inconsistent data
"RTN","DGPTFVC3",36,0)
 K DGPTIT
"RTN","DGPTFVC3",37,0)
 F DGSUR=0:0 S DGSUR=$O(^DGPT(DGPTF,"S",DGSUR)) Q:DGSUR'>0  I $D(^DGPT(DGPTF,"S",DGSUR,0)) S DGHOLD=$$STR401^DGPTFUT(DGPTF,DGSUR) D CHKFL4
"RTN","DGPTFVC3",38,0)
 Q
"RTN","DGPTFVC3",39,0)
 ;
"RTN","DGPTFVC3",40,0)
CHKFL4 ;-- check field entries
"RTN","DGPTFVC3",41,0)
 F DGJ=1:1:25 I $P(DGHOLD,U,DGJ)]"" S DGPTIT($P(DGHOLD,U,DGJ)_";ICD0(")=""
"RTN","DGPTFVC3",42,0)
 D DC^DGPTSCAN,SCAN^DGPTSCAN
"RTN","DGPTFVC3",43,0)
 I '$D(DGBPC),'$D(^DGPT(DGPTF,"S",+DGSUR,300)) G CHK4Q
"RTN","DGPTFVC3",44,0)
 S DGHOLD=$S($D(^DGPT(DGPTF,"S",+DGSUR,300)):^(300),1:"")
"RTN","DGPTFVC3",45,0)
 ;I ('$D(DGBPC(1))&($P(DGHOLD,U)]""))!($D(DGBPC(1))&($P(DGHOLD,U)']"")) S DGERR=1 D W401
"RTN","DGPTFVC3",46,0)
 I ($D(DGBPC(1))&($P(DGHOLD,U)']"")) S DGERR=1 D W401
"RTN","DGPTFVC3",47,0)
CHK4Q K DGBPC,DGPTIT
"RTN","DGPTFVC3",48,0)
 Q
"RTN","DGPTFVC3",49,0)
 ;
"RTN","DGPTFVC3",50,0)
701 ;-- process 701 load DGPTIT array
"RTN","DGPTFVC3",51,0)
 K DGPTIT
"RTN","DGPTFVC3",52,0)
 G CHK7Q:'$D(^DGPT(DGPTF,70)) S DGREC=$$STR701^DGPTFUT(DGPTF)
"RTN","DGPTFVC3",53,0)
 F DGI=1:1:25 I $P(DGREC,U,DGI) S DGPTIT($P(DGREC,U,DGI)_";ICD9(")=""
"RTN","DGPTFVC3",54,0)
 D DC^DGPTSCAN,SCAN^DGPTSCAN,ANYPSY^DGPTSCAN
"RTN","DGPTFVC3",55,0)
 I '$D(DGBPC),'$D(^DGPT(DGPTF,"M")) G CHK7Q
"RTN","DGPTFVC3",56,0)
 S DGTREC=$S($D(^DGPT(DGPTF,300)):^(300),1:"")
"RTN","DGPTFVC3",57,0)
 S DG701="" D FLAGCHK^DGPTSCAN
"RTN","DGPTFVC3",58,0)
 D GETNUM^DGPTSCAN
"RTN","DGPTFVC3",59,0)
 ;F DGII=2:1:DGFNUM I $D(DGBPC(DGII))&($P(DGTREC,U,DGII)']"")!('$D(DGBPC(DGII))&($P(DG701,U,DGII)]"")&($P(DGTREC,U,DGII)']""))!('$D(DGBPC(DGII))&($P(DGTREC,U,DGII)]"")&($P(DG701,U,DGII)']"")) S DGERR=1 D W701
"RTN","DGPTFVC3",60,0)
 F DGII=2:1:DGFNUM I $D(DGBPC(DGII))&($P(DGTREC,U,DGII)']"") S DGERR=1 D W701
"RTN","DGPTFVC3",61,0)
CHK7Q ;
"RTN","DGPTFVC3",62,0)
 K DGII,DGFNUM,DG701,DGHOLD,DGTREC,DGI
"RTN","DGPTFVC3",63,0)
 Q
"RTN","DGPTFVC3",64,0)
 ;
"RTN","DGPTFVC3",65,0)
W401 ;-- display error message for 401
"RTN","DGPTFVC3",66,0)
 N X S X=+^DGPT(DGPTF,"S",DGSUR,0),X=$TR($$FMTE^XLFDT(X,"5DF")," ","0")
"RTN","DGPTFVC3",67,0)
 W !,"401 Surgery  date: ",X,"...",$P($T(ERRMSG+1),";",4)
"RTN","DGPTFVC3",68,0)
 Q
"RTN","DGPTFVC3",69,0)
W501 ;-- display error message for 501
"RTN","DGPTFVC3",70,0)
 N X S X=+$P(^DGPT(DGPTF,"M",DGMOV,0),"^",10),X=$TR($$FMTE^XLFDT(X,"5DF")," ","0")
"RTN","DGPTFVC3",71,0)
 W !,"501 Movement date: ",X,"...",$P($T(ERRMSG+DGII),";",4)
"RTN","DGPTFVC3",72,0)
 Q
"RTN","DGPTFVC3",73,0)
W701 ;-- display error messages for 701
"RTN","DGPTFVC3",74,0)
 W !,"701 ",$P($T(ERRMSG+DGII),";",4)
"RTN","DGPTFVC3",75,0)
 Q
"RTN","DGPTFVC3",76,0)
INIT ;
"RTN","DGPTFVC3",77,0)
 I '$D(PTF) S DGOUT=1 G INITQ
"RTN","DGPTFVC3",78,0)
 S DGOUT=0,DGPTF=PTF
"RTN","DGPTFVC3",79,0)
 I '$D(^DGPT(DGPTF)) S (DGOUT,DGERR)=1
"RTN","DGPTFVC3",80,0)
 D LO^DGUTL,HOME^%ZIS
"RTN","DGPTFVC3",81,0)
INITQ Q
"RTN","DGPTFVC3",82,0)
 ;
"RTN","DGPTFVC3",83,0)
ERRMSG ;-- error messages
"RTN","DGPTFVC3",84,0)
 ;;1;Kidney Transplant Status Data Error.
"RTN","DGPTFVC3",85,0)
 ;;2;Suicide Indicator Data Error.
"RTN","DGPTFVC3",86,0)
 ;;3;Legionnaire's Disease Indicator Data Error.
"RTN","DGPTFVC3",87,0)
 ;;4;Substance Abuse Type Data Error.
"RTN","DGPTFVC3",88,0)
 ;;5;Psychiatry Axis IV Data Error.
"RTN","DGPTFVC3",89,0)
 ;;6;Psychiatry Axis V Data Error.
"RTN","DGPTFVC3",90,0)
 ;;7;Psychiatry Axis V Data Error.
"RTN","DGPTFVC3",91,0)
 ;
"RTN","DGPTFVC3",92,0)
 ;
"RTN","DGPTIC10")
0^14^B94542788
"RTN","DGPTIC10",1,0)
DGPTIC10 ;ALB/AAS/PLT - PTF API TO ICD10 Remediation calls ;9/29/2011
"RTN","DGPTIC10",2,0)
 ;;5.3;Registration;**850,905,884**;Aug 13, 1993;Build 31
"RTN","DGPTIC10",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPTIC10",4,0)
 QUIT
"RTN","DGPTIC10",5,0)
 ;
"RTN","DGPTIC10",6,0)
 ; CODEC^ICDEX     ICR 5747
"RTN","DGPTIC10",7,0)
 ; VLT^ICDEX       ICR 5747
"RTN","DGPTIC10",8,0)
 ;
"RTN","DGPTIC10",9,0)
GETCODSY(CSYS,IEN,DATE) ; -- RETURN IF THIS IS ICD9 OR ICD10
"RTN","DGPTIC10",10,0)
 ; returns 20th piece of call to ICDDATA^ICDxcode
"RTN","DGPTIC10",11,0)
 Q $P($$ICDDATA^ICDXCODE(CSYS,IEN,DATE),"^",20)
"RTN","DGPTIC10",12,0)
 ;
"RTN","DGPTIC10",13,0)
 ;; ICDINFO^DGAPI
"RTN","DGPTIC10",14,0)
 ;
"RTN","DGPTIC10",15,0)
IMPDATE(CODESYS) ; - calls IMPDATE^LEXU(CODESYS)
"RTN","DGPTIC10",16,0)
 ;  CODESYS: 10D = diagnosis, 10P = procedure
"RTN","DGPTIC10",17,0)
 I $G(CODESYS)="" S CODESYS="10D"
"RTN","DGPTIC10",18,0)
 QUIT $$IMPDATE^LEXU($G(CODESYS))
"RTN","DGPTIC10",19,0)
 ;
"RTN","DGPTIC10",20,0)
 ;
"RTN","DGPTIC10",21,0)
EFFDATE(DGPTF,DGTYPE,DGMOVE,DGCSYS) ;-- build ICD-10 Implementation date / effective date
"RTN","DGPTIC10",22,0)
 N DGTEMP,X,Y,I,J,DGFEE
"RTN","DGPTIC10",23,0)
 S:$G(DGTYPE)="" DGTYPE=$P($G(X1),U,2)
"RTN","DGPTIC10",24,0)
 I $G(DGCSYS)="" S DGCSYS="10D"
"RTN","DGPTIC10",25,0)
 I $G(DGPTF)="" S (DGPTDAT,EFFDATE)=DT G EQ
"RTN","DGPTIC10",26,0)
 I $G(DGTYPE)="" S DGTYPE="701"
"RTN","DGPTIC10",27,0)
 I (DGTYPE'="501")&(DGTYPE'="601")&(DGTYPE'="701")&(DGTYPE'="801") S DGTYPE="701"
"RTN","DGPTIC10",28,0)
 I $G(DGMOVE)="" S DGMOVE=1
"RTN","DGPTIC10",29,0)
 ;Add 801 logic - uses CPT/Record date for EFFDATE
"RTN","DGPTIC10",30,0)
 S:DGTYPE'="801" (DGPTDAT,EFFDATE)=$$GET7DATE^DGPTIC10(DGPTF)
"RTN","DGPTIC10",31,0)
 S:DGTYPE="801" (DGPTDAT,DGCPTDT,EFFDATE)=$$GET8DATE($G(DGPTF))
"RTN","DGPTIC10",32,0)
EQ S DGTEMP=$$IMPDATE^DGPTIC10(DGCSYS)
"RTN","DGPTIC10",33,0)
 S IMPDATE=$P(DGTEMP,U,1)
"RTN","DGPTIC10",34,0)
 ;piece 2 of dgtemp has no 7n value and code below removed
"RTN","DGPTIC10",35,0)
 ;I DGPTDAT'<IMPDATE,+$P(DGTEMP,U,2)?7N S EFFDATE=+$P(DGTEMP,U,2)
"RTN","DGPTIC10",36,0)
 Q
"RTN","DGPTIC10",37,0)
 ;
"RTN","DGPTIC10",38,0)
EFFDAT1(DGPTDAT) ;-- build ICD-10 Implementation date / effective date
"RTN","DGPTIC10",39,0)
 N DGTEMP,DGFEE
"RTN","DGPTIC10",40,0)
 Q:$G(DGPTDAT)=""
"RTN","DGPTIC10",41,0)
 S DGTEMP=$$IMPDATE^DGPTIC10("10D")
"RTN","DGPTIC10",42,0)
 S EFFDATE=+$E(DGPTDAT,1,7)
"RTN","DGPTIC10",43,0)
 S IMPDATE=$P(DGTEMP,U,1)
"RTN","DGPTIC10",44,0)
 I DGPTDAT'<IMPDATE,+$P(DGTEMP,U,2)?7N S EFFDATE=+$P(DGTEMP,U,2)
"RTN","DGPTIC10",45,0)
 Q
"RTN","DGPTIC10",46,0)
 ;
"RTN","DGPTIC10",47,0)
CODESYS(PTFIEN) ; returns coding system for a PTF Based on Discharge Date
"RTN","DGPTIC10",48,0)
 ; -- called from DG701 template
"RTN","DGPTIC10",49,0)
 N DISDATE,X,Y,DGFEE
"RTN","DGPTIC10",50,0)
 I '$D(^DGPT($G(PTFIEN),0)) Q $$GETCODS("10D",DT)
"RTN","DGPTIC10",51,0)
 ;
"RTN","DGPTIC10",52,0)
 ; -- Census Date
"RTN","DGPTIC10",53,0)
 ; -- Currently a census record
"RTN","DGPTIC10",54,0)
 S PTR=$P($G(^DGPT(PTFIEN,0)),U,13) I PTR'="" S DISDATE=$P($G(^DG(45.86,PTR,0)),U,1) G:DISDATE'="" CSQ
"RTN","DGPTIC10",55,0)
 ; -- requires a census
"RTN","DGPTIC10",56,0)
 S PTF=PTFIEN D:'$D(DGPMCA) PM^DGPTUTL ; -- gets admission in DGPMCA and 0th node in DGPMAN
"RTN","DGPTIC10",57,0)
 N DGSAVE S DGSAVE=$G(DGPTF0) D CEN^DGPTC1 S DGPTF0=DGSAVE
"RTN","DGPTIC10",58,0)
 ; -- DGCST=Census Status, dgcn=ien of census date file
"RTN","DGPTIC10",59,0)
 I $D(DGCST),DGCST=0,DGCN>0 S DISDATE=$P($G(^DG(45.86,DGCN,0)),U,1) G:DISDATE?7N CSQ
"RTN","DGPTIC10",60,0)
 ;
"RTN","DGPTIC10",61,0)
 S DISDATE=+$E($P($G(^DGPT($G(PTFIEN),70)),"^",1),1,7)
"RTN","DGPTIC10",62,0)
 I DISDATE<1 S DISDATE=DT
"RTN","DGPTIC10",63,0)
CSQ Q $$GETCODS("10D",DISDATE)
"RTN","DGPTIC10",64,0)
 ;
"RTN","DGPTIC10",65,0)
GETCODS(CODESYS,DATE) ; - Returns coding system for a date
"RTN","DGPTIC10",66,0)
 N IMPDATE,VERSION,DGFEE
"RTN","DGPTIC10",67,0)
 S IMPDATE=+$$IMPDATE(CODESYS)
"RTN","DGPTIC10",68,0)
 I +IMPDATE>0 D
"RTN","DGPTIC10",69,0)
 . I DATE<IMPDATE S VERSION="ICD9" Q
"RTN","DGPTIC10",70,0)
 . I DATE'<IMPDATE S VERSION="ICD10"
"RTN","DGPTIC10",71,0)
 I $G(VERSION)'="" Q VERSION
"RTN","DGPTIC10",72,0)
 Q "ICD9"
"RTN","DGPTIC10",73,0)
 ;
"RTN","DGPTIC10",74,0)
GET8DATE(PATNUM) ; GET CPT RECORD DATE FOR 801 SERVICE
"RTN","DGPTIC10",75,0)
 S EFFD=+$G(DGPRD)
"RTN","DGPTIC10",76,0)
 I EFFD="",$G(DGZP),$D(^DGPT(PATNUM,"C",DGZP,0))#10 S EFFD=+^DGPT(PATNUM,"C",DGZP,0)
"RTN","DGPTIC10",77,0)
 S:EFFD="" EFFD=DT
"RTN","DGPTIC10",78,0)
 Q $P(EFFD,U,1)
"RTN","DGPTIC10",79,0)
 ;
"RTN","DGPTIC10",80,0)
GET7DATE(PATNUM) ; FROM icdgtdrg
"RTN","DGPTIC10",81,0)
 ;Find the correct "EFFECTIVE DATE" for locating the icd codes for 701 fields
"RTN","DGPTIC10",82,0)
 ;
"RTN","DGPTIC10",83,0)
 ;  Input:    PATNUM - PTF Record Number
"RTN","DGPTIC10",84,0)
 ;  Output:   "effective date" to use
"RTN","DGPTIC10",85,0)
 ;
"RTN","DGPTIC10",86,0)
 N EFFD,PTR,IMPDATE,ADMDATE,PTF,X,Y,DGFEE
"RTN","DGPTIC10",87,0)
 S ADMDATE=$P($G(^DGPT(PATNUM,0)),U,2)
"RTN","DGPTIC10",88,0)
 ;
"RTN","DGPTIC10",89,0)
 ; -- Census Date
"RTN","DGPTIC10",90,0)
 ; -- Currently a census record
"RTN","DGPTIC10",91,0)
 S PTR=$P($G(^DGPT(PATNUM,0)),U,13) I PTR'="" S EFFD=$P($G(^DG(45.86,PTR,0)),U,1) G:EFFD'="" G7OUT
"RTN","DGPTIC10",92,0)
 ; -- requires a census
"RTN","DGPTIC10",93,0)
 S PTF=PATNUM D:'$D(DGPMCA) PM^DGPTUTL ; -- gets admission in DGPMCA and 0th node in DGPMAN
"RTN","DGPTIC10",94,0)
 N DGSAVE S DGSAVE=$G(DGPTF0) D CEN^DGPTC1 S DGPTF0=DGSAVE
"RTN","DGPTIC10",95,0)
 ; -- DGCST=Census Status, dgcn=ien of census date file
"RTN","DGPTIC10",96,0)
 I $D(DGCST),DGCST=0,DGCN>0 S EFFD=$P($G(^DG(45.86,DGCN,0)),U,1) G:EFFD?7N G7OUT
"RTN","DGPTIC10",97,0)
 ;
"RTN","DGPTIC10",98,0)
 ;  Discharge Date
"RTN","DGPTIC10",99,0)
 S DISDATE=$E($P($G(^DGPT(PATNUM,70)),U,1),1,7)
"RTN","DGPTIC10",100,0)
 I DISDATE'="" S EFFD=$P(DISDATE,".") G G7OUT
"RTN","DGPTIC10",101,0)
 I DISDATE="" S EFFD=DT G G7OUT
"RTN","DGPTIC10",102,0)
 ;  Default TODAY
"RTN","DGPTIC10",103,0)
 I $G(EFFD)="" S EFFD=DT
"RTN","DGPTIC10",104,0)
G7OUT Q EFFD
"RTN","DGPTIC10",105,0)
 ;
"RTN","DGPTIC10",106,0)
GET5DATE(PATNUM,MOVE) ; FROM icdgtdrg
"RTN","DGPTIC10",107,0)
 ;Find the correct "EFFECTIVE DATE" for locating the icd codes for 501 fields
"RTN","DGPTIC10",108,0)
 ;
"RTN","DGPTIC10",109,0)
 ;  Input:    PATNUM - PTF Record Number
"RTN","DGPTIC10",110,0)
 ;            MOVE   - PTF Movement Number
"RTN","DGPTIC10",111,0)
 ;  Output:   "effective date" to use
"RTN","DGPTIC10",112,0)
 ;
"RTN","DGPTIC10",113,0)
 N EFFD,PTR,IMPDATE,MOVDATE,X,Y,DGFEE
"RTN","DGPTIC10",114,0)
 ;  Census Date
"RTN","DGPTIC10",115,0)
 S PTR=$P($G(^DGPT(PATNUM,0)),U,13) I PTR'="" S EFFD=$P($G(^DG(45.86,PTR,0)),U,1) G:EFFD'="" G5OUT
"RTN","DGPTIC10",116,0)
 ; -- requires a census
"RTN","DGPTIC10",117,0)
 S PTF=PATNUM D:'$D(DGPMCA) PM^DGPTUTL ; -- gets admission in DGPMCA and 0th node in DGPMAN
"RTN","DGPTIC10",118,0)
 N DGSAVE S DGSAVE=$G(DGPTF0) D CEN^DGPTC1 S DGPTF0=DGSAVE
"RTN","DGPTIC10",119,0)
 ; -- DGCST=Census Status, dgcn=ien of census date file
"RTN","DGPTIC10",120,0)
 I $D(DGCST),DGCST=0,DGCN>0 S EFFD=$P($G(^DG(45.86,DGCN,0)),U,1) G:EFFD?7N G7OUT
"RTN","DGPTIC10",121,0)
 ;
"RTN","DGPTIC10",122,0)
 ;  Discharge Date
"RTN","DGPTIC10",123,0)
 S DISDATE=$E($P($G(^DGPT(PATNUM,70)),U,1),1,7)
"RTN","DGPTIC10",124,0)
 S MOVDATE=$P($G(^DGPT(PATNUM,"M",MOVE,0)),U,10)
"RTN","DGPTIC10",125,0)
 I DISDATE'="" S EFFD=$P(DISDATE,".") G G5OUT
"RTN","DGPTIC10",126,0)
 ;  Default TODAY
"RTN","DGPTIC10",127,0)
 S EFFD=DT
"RTN","DGPTIC10",128,0)
G5OUT ;
"RTN","DGPTIC10",129,0)
 Q EFFD
"RTN","DGPTIC10",130,0)
 ;
"RTN","DGPTIC10",131,0)
GET6DATE(PATNUM,PROC,DGI) ; FROM icdgtdrg
"RTN","DGPTIC10",132,0)
 ;Find the correct "EFFECTIVE DATE" for locating the icd codes for 601 fields
"RTN","DGPTIC10",133,0)
 ;
"RTN","DGPTIC10",134,0)
 ;  Input:    PATNUM - PTF Record Number
"RTN","DGPTIC10",135,0)
 ;            PROC   - Procedure or Surgery number
"RTN","DGPTIC10",136,0)
 ;            DGI    - 5- PROCEDURE NODE, 8 = SURGERY NODE
"RTN","DGPTIC10",137,0)
 ;  Output:   "effective date" to use
"RTN","DGPTIC10",138,0)
 ;
"RTN","DGPTIC10",139,0)
 N EFFD,PTR,IMPDATE,MOVDATE,X,Y,DGFEE
"RTN","DGPTIC10",140,0)
 I '$G(PATNUM) S PATNUM=$G(PROC)
"RTN","DGPTIC10",141,0)
 I '$G(PATNUM) S EFFD=DT G G6OUT
"RTN","DGPTIC10",142,0)
 ;  Census Date
"RTN","DGPTIC10",143,0)
 S PTR=$P($G(^DGPT(PATNUM,0)),U,13) I PTR'="" S EFFD=$P($G(^DG(45.86,PTR,0)),U,1) G:EFFD'="" G6OUT
"RTN","DGPTIC10",144,0)
 ; -- requires a census
"RTN","DGPTIC10",145,0)
 S PTF=PATNUM D:'$D(DGPMCA) PM^DGPTUTL ; -- gets admission in DGPMCA and 0th node in DGPMAN
"RTN","DGPTIC10",146,0)
 N DGSAVE S DGSAVE=$G(DGPTF0) D CEN^DGPTC1 S DGPTF0=DGSAVE
"RTN","DGPTIC10",147,0)
 ; -- DGCST=Census Status, dgcn=ien of census date file
"RTN","DGPTIC10",148,0)
 I $D(DGCST),DGCST=0,DGCN>0 S EFFD=$P($G(^DG(45.86,DGCN,0)),U,1) G:EFFD?7N G7OUT ; DGCNO=0th node
"RTN","DGPTIC10",149,0)
 ;
"RTN","DGPTIC10",150,0)
 ;  Discharge Date
"RTN","DGPTIC10",151,0)
 S DISDATE=$E($P($G(^DGPT(PATNUM,70)),U,1),1,7)
"RTN","DGPTIC10",152,0)
 ;
"RTN","DGPTIC10",153,0)
 I $G(DGI)=1 S MOVDATE=$S(DISDATE'="":DISDATE,1:DT)
"RTN","DGPTIC10",154,0)
 I $G(DGI)=5 S MOVDATE=$P($G(^DGPT(PATNUM,"P",PROC,0)),U,1)
"RTN","DGPTIC10",155,0)
 I $G(DGI)=8 S MOVDATE=$P($G(^DGPT(PATNUM,"S",PROC,0)),U,1)
"RTN","DGPTIC10",156,0)
 I DISDATE'="" S EFFD=$P(DISDATE,".") G G6OUT
"RTN","DGPTIC10",157,0)
 S EFFD=DT
"RTN","DGPTIC10",158,0)
G6OUT ;
"RTN","DGPTIC10",159,0)
 Q EFFD
"RTN","DGPTIC10",160,0)
 ;
"RTN","DGPTIC10",161,0)
GETCDATE(PATNUM,CPT) ;
"RTN","DGPTIC10",162,0)
 ;Find the correct "EFFECTIVE DATE" for CPT Procedures
"RTN","DGPTIC10",163,0)
 ;
"RTN","DGPTIC10",164,0)
 ;  Input:    PATNUM - PTF Record Number
"RTN","DGPTIC10",165,0)
 ;            cpt    - CPT Entry Number
"RTN","DGPTIC10",166,0)
 ;  Output:   "effective date" to use
"RTN","DGPTIC10",167,0)
 ;
"RTN","DGPTIC10",168,0)
 N EFFD,PTR,IMPDATE,MOVDATE,X,Y,DGFEE
"RTN","DGPTIC10",169,0)
 ;  Census Date
"RTN","DGPTIC10",170,0)
 S PTR=$P($G(^DGPT(PATNUM,0)),U,13) I PTR'="" S EFFD=$P($G(^DG(45.86,PTR,0)),U,1) G:EFFD'="" GCOUT
"RTN","DGPTIC10",171,0)
 ; -- requires a census
"RTN","DGPTIC10",172,0)
 S PTF=PATNUM D:'$D(DGPMCA) PM^DGPTUTL ; -- gets admission in DGPMCA and 0th node in DGPMAN
"RTN","DGPTIC10",173,0)
 N DGSAVE S DGSAVE=$G(DGPTF0) D CEN^DGPTC1 S DGPTF0=DGSAVE
"RTN","DGPTIC10",174,0)
 ; -- DGCST=Census Status, dgcn=ien of census date file
"RTN","DGPTIC10",175,0)
 I $D(DGCST),DGCST=0,DGCN>0 S EFFD=$P($G(^DG(45.86,DGCN,0)),U,1) G:EFFD?7N G7OUT
"RTN","DGPTIC10",176,0)
 ;
"RTN","DGPTIC10",177,0)
 ;  Discharge Date
"RTN","DGPTIC10",178,0)
 S DISDATE=$E($P($G(^DGPT(PATNUM,70)),U,1),1,7)
"RTN","DGPTIC10",179,0)
 I DISDATE'="" S EFFD=$P(DISDATE,".") G GCOUT
"RTN","DGPTIC10",180,0)
 ;  Default TODAY
"RTN","DGPTIC10",181,0)
 S EFFD=DT
"RTN","DGPTIC10",182,0)
GCOUT ;
"RTN","DGPTIC10",183,0)
 Q EFFD
"RTN","DGPTIC10",184,0)
 ;
"RTN","DGPTIC10",185,0)
GETLABEL(EVDATE,CODESYS) ; returns ICD label for printing
"RTN","DGPTIC10",186,0)
 ; CODESYS - D for diagnosis or P for  Procedures
"RTN","DGPTIC10",187,0)
 ; EVDATE - event date to use for determine label (discharge, movement date, etc.
"RTN","DGPTIC10",188,0)
 N ICDVER
"RTN","DGPTIC10",189,0)
 S ICDVER=""
"RTN","DGPTIC10",190,0)
 I CODESYS="D" S ICDVER=" (ICD-10-CM)"  I EVDATE<$P($$IMPDATE("10D"),U,1) S ICDVER=" (ICD-9-CM)"
"RTN","DGPTIC10",191,0)
 I CODESYS="P" S ICDVER=" (ICD-10-PCS)"  I EVDATE<$P($$IMPDATE("10P"),U,1) S ICDVER=" (ICD-9-CM)"
"RTN","DGPTIC10",192,0)
 Q ICDVER
"RTN","DGPTIC10",193,0)
 ;
"RTN","DGPTIC10",194,0)
DISPLY(FILE,IEN,DATE,FRMT) ; -- return the Code - Description for a code
"RTN","DGPTIC10",195,0)
 N CODE,DESC
"RTN","DGPTIC10",196,0)
 I $G(FILE)="DIAG"!($G(FILE)="ICD")!($G(FILE)="10D") S FILE=80
"RTN","DGPTIC10",197,0)
 I $G(FILE)="PROC"!($G(FILE)="ICP")!($G(FILE)="10P") S FILE=80.1
"RTN","DGPTIC10",198,0)
 I $G(FILE)'=80&($G(FILE)'=80.1) Q ""
"RTN","DGPTIC10",199,0)
 I $G(IEN)<1 Q ""
"RTN","DGPTIC10",200,0)
 I $G(FRMT)="" S FRMT=1
"RTN","DGPTIC10",201,0)
 I FRMT'=1&(FRMT'=2) S FRMT=1
"RTN","DGPTIC10",202,0)
 S CODE=$$CODEC^ICDEX(FILE,IEN)
"RTN","DGPTIC10",203,0)
 S DESC=$$VLT^ICDEX(FILE,IEN,$G(DATE))
"RTN","DGPTIC10",204,0)
 ;
"RTN","DGPTIC10",205,0)
 I $G(CODE)=""!($P($G(CODE),"^")=-1) S CODE="****"
"RTN","DGPTIC10",206,0)
 I $G(DESC)=""!($P($G(DESC),"^")=-1) S DESC="********************"
"RTN","DGPTIC10",207,0)
 I $G(FRMT)=1 Q $E(CODE_"      ",1,9)_DESC
"RTN","DGPTIC10",208,0)
 I $G(FRMT)=2 Q DESC_"("_CODE_")"
"RTN","DGPTIC10",209,0)
 Q "****   **********************"
"RTN","DGPTIC10",210,0)
 ;
"RTN","DGPTIC10",211,0)
WRITECOD(FILE,IEN,DATE,FRMT,RETURN,TAB) ;
"RTN","DGPTIC10",212,0)
 N I,X,X1,DGIOM,TAB1,TAB2,DGPARSE,DGPARSE2,DGSPACE,SIZE,DGSPACE2
"RTN","DGPTIC10",213,0)
 S TAB=+$G(TAB),RETURN=+$G(RETURN)
"RTN","DGPTIC10",214,0)
 S:TAB>20 TAB=20
"RTN","DGPTIC10",215,0)
 S SIZE=$S(TAB<1:4,1:TAB)
"RTN","DGPTIC10",216,0)
 S RETURN=$S(RETURN=0:"$C(0)",RETURN=1:"!",RETURN=2:"!!",RETURN=3:"!!!",1:"!")
"RTN","DGPTIC10",217,0)
 S DGIOM=+$G(IOM) I DGIOM<40 S DGIOM=80
"RTN","DGPTIC10",218,0)
 ;
"RTN","DGPTIC10",219,0)
 S X=$$DISPLY($G(FILE),$G(IEN),$G(DATE),$G(FRMT))
"RTN","DGPTIC10",220,0)
 I ($L(X)+SIZE)<DGIOM W @RETURN,?TAB,X Q
"RTN","DGPTIC10",221,0)
 ;
"RTN","DGPTIC10",222,0)
 S DGPARSE=DGIOM-TAB ; Find the place to start moving backwards looking for a space
"RTN","DGPTIC10",223,0)
 I TAB<1 S DGPARSE=DGPARSE-4
"RTN","DGPTIC10",224,0)
 ;
"RTN","DGPTIC10",225,0)
 F I=DGPARSE:-1:10 I $E(X,I)=" " Q
"RTN","DGPTIC10",226,0)
 S DGSPACE=I ; this is the space
"RTN","DGPTIC10",227,0)
 ;
"RTN","DGPTIC10",228,0)
 I FRMT=1 S TAB1=$F(X," ") D
"RTN","DGPTIC10",229,0)
 . S I=0 F  S I=$F(X," ",TAB1) Q:I'=(TAB1+1)  S TAB1=I
"RTN","DGPTIC10",230,0)
 . S TAB2=TAB1+1
"RTN","DGPTIC10",231,0)
 I FRMT'=1 S TAB2=TAB+3
"RTN","DGPTIC10",232,0)
 ;
"RTN","DGPTIC10",233,0)
 I ($L(X)+SIZE)>79 W @RETURN,?TAB,$E(X,1,DGSPACE) D
"RTN","DGPTIC10",234,0)
 . I (TAB2+$L($E(X,DGSPACE+1,$L(X))))<DGIOM D  Q
"RTN","DGPTIC10",235,0)
 .. W !,?TAB2,"  ",$E(X,DGSPACE+1,$L(X))
"RTN","DGPTIC10",236,0)
 . ;
"RTN","DGPTIC10",237,0)
 . S DGPARSE=DGIOM-TAB2-3
"RTN","DGPTIC10",238,0)
 . S X1=$E(X,DGSPACE+1,$L(X))
"RTN","DGPTIC10",239,0)
 . ;
"RTN","DGPTIC10",240,0)
 . F I=DGPARSE:-1:1 I $E(X1,I)=" " Q
"RTN","DGPTIC10",241,0)
 . S DGSPACE2=I
"RTN","DGPTIC10",242,0)
 . W !,?TAB2,"  ",$E(X1,1,DGSPACE2)
"RTN","DGPTIC10",243,0)
 . W !,?TAB2,"  ",$E(X1,DGSPACE2+1,$L(X1)) Q
"RTN","DGPTIC10",244,0)
 Q
"RTN","DGPTIC10",245,0)
 ;
"RTN","DGPTIC10",246,0)
PREV ;
"RTN","DGPTIC10",247,0)
 Q
"RTN","DGPTIC10",248,0)
 ;
"RTN","DGPTIC10",249,0)
ICDNAME() ; -- Called from PTF EXPANDED CODE file (45.89) field Name (#200)
"RTN","DGPTIC10",250,0)
 ; -- Determines ICD Code name using supported API's
"RTN","DGPTIC10",251,0)
 ;    Replaces direct global reads in computed Expression
"RTN","DGPTIC10",252,0)
 ;
"RTN","DGPTIC10",253,0)
 Q:'+$G(D0)&'+$G(DA)
"RTN","DGPTIC10",254,0)
 I '+$G(D0) S D0=DA
"RTN","DGPTIC10",255,0)
 N ENTRY,TYPE,X
"RTN","DGPTIC10",256,0)
 S X=""
"RTN","DGPTIC10",257,0)
 S ENTRY=$P($G(^DIC(45.89,D0,0)),U,2),VERSION=$P($G(^DIC(45.89,D0,0)),U,5)
"RTN","DGPTIC10",258,0)
 Q:'+$G(ENTRY) X
"RTN","DGPTIC10",259,0)
 S TYPE=$P(ENTRY,";",2),VERSION=$P(^DIC(45.89,D0,0),U,5)
"RTN","DGPTIC10",260,0)
 I TYPE="ICD9(" S X=$$VLT^ICDEX(80,+ENTRY)
"RTN","DGPTIC10",261,0)
 I TYPE="ICD0(" S X=$$VLT^ICDEX(80.1,+ENTRY)
"RTN","DGPTIC10",262,0)
 Q X
"RTN","DGPTIC10",263,0)
 ;
"RTN","DGPTIC10",264,0)
INPUT() ; - Input transform for 27.27;9  S X=$$INPUT^DGPTIC10() K:X<1 X
"RTN","DGPTIC10",265,0)
 N ICDVER,CAT
"RTN","DGPTIC10",266,0)
 S CAT=$P(^(0),U,2) S Y(0)=$S(CAT="D":80,CAT-"P":80.1,1:"")
"RTN","DGPTIC10",267,0)
 S ICDVER=$S(CAT="D":"10D",1:"10P")
"RTN","DGPTIC10",268,0)
 D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"RTN","DGPTIC10",269,0)
 Q X
"RTN","DGPTIC10",270,0)
DATERANG ; Get an ICD-10 compliant date range
"RTN","DGPTIC10",271,0)
 N IMPDATE,DGSDATE ;
"RTN","DGPTIC10",272,0)
 S IMPDATE=+$$IMPDATE^DGPTIC10("10D")
"RTN","DGPTIC10",273,0)
 W !!,"ICD-10 Implementation Date: ",$$FMTE^XLFDT(IMPDATE),!
"RTN","DGPTIC10",274,0)
 S DGSDATE=$$SDAT() G:DGSDATE<1 DRQ
"RTN","DGPTIC10",275,0)
 S DGEDATE=$$TDAT(DGSDATE)
"RTN","DGPTIC10",276,0)
 ;G:EDATE<1 DRQ
"RTN","DGPTIC10",277,0)
DRQ ;
"RTN","DGPTIC10",278,0)
 ;
"RTN","DGPTIC10",279,0)
SDAT() ; ask for start date
"RTN","DGPTIC10",280,0)
 N Y,DIR,DTOUT,DUOUT
"RTN","DGPTIC10",281,0)
 S DIR(0)="D^:"_DT_":EX",DIR("A")="Start Date"
"RTN","DGPTIC10",282,0)
 D ^DIR K DIR
"RTN","DGPTIC10",283,0)
 Q:$D(DTOUT)!($D(DUOUT)) -1
"RTN","DGPTIC10",284,0)
 Q Y
"RTN","DGPTIC10",285,0)
TDAT(DGSDAT) ; ask for end date
"RTN","DGPTIC10",286,0)
 N Y,DIR,DTOUT,DUOUT
"RTN","DGPTIC10",287,0)
 S DIR(0)="D^"_DGSDAT_":"_DT_":EX",DIR("A")="End Date"
"RTN","DGPTIC10",288,0)
 I '$D(IMPDATE) S IMPDATE=+$$IMPDATE^DGPTIC10("10D")
"RTN","DGPTIC10",289,0)
 I DGSDAT<IMPDATE,DT'<IMPDATE D
"RTN","DGPTIC10",290,0)
 . W !!,?10,"Start date is before ICD-10 implementation.",!,?10,"End date must be before ICD-10 implementation",!
"RTN","DGPTIC10",291,0)
 . S DIR(0)="D^"_DGSDAT_":"_$$FMADD^XLFDT(IMPDATE,-1)_":EX"
"RTN","DGPTIC10",292,0)
 D ^DIR K DIR
"RTN","DGPTIC10",293,0)
 Q:$D(DTOUT)!($D(DUOUT)) -1
"RTN","DGPTIC10",294,0)
 Q Y
"RTN","DGPTIC10",295,0)
 ;
"RTN","DGPTIC10",296,0)
CENSUS(DGPTF) ; display warning to user for ICD-10 transition census records
"RTN","DGPTIC10",297,0)
 ;this census subroutine call displaying a warning message is disabled 
"RTN","DGPTIC10",298,0)
 ;and is not used for the icd-10 implementation period.
"RTN","DGPTIC10",299,0)
 ; -- do not remove this procedure from the routine
"RTN","DGPTIC10",300,0)
 ; -- called by input templates DG401, DG501, DG501F, DG601, and DG701
"RTN","DGPTIC10",301,0)
 ;
"RTN","DGPTIC10",302,0)
 ;
"RTN","DGPTIC10",303,0)
 Q
"RTN","DGPTIC10",304,0)
 N X,Y,CENDATE,EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPTIC10",305,0)
 ;
"RTN","DGPTIC10",306,0)
 Q:'$D(PTF)  ; -- Called directly from fileman, no variable set up.
"RTN","DGPTIC10",307,0)
 ;
"RTN","DGPTIC10",308,0)
 ; -- Get census status (DGCST) and ien of census date (DGCN)
"RTN","DGPTIC10",309,0)
 N DGSAVE S DGSAVE=$G(DGPTF0) D CEN^DGPTC1 S DGPTF0=DGSAVE
"RTN","DGPTIC10",310,0)
 ;
"RTN","DGPTIC10",311,0)
 I '$D(DGCST) G CENSUSQ
"RTN","DGPTIC10",312,0)
 I $G(DGCST)>0 G CENSUSQ ; status no longer open
"RTN","DGPTIC10",313,0)
 ;
"RTN","DGPTIC10",314,0)
 ; -- DGCST=Census Status, dgcn=ien of census date file
"RTN","DGPTIC10",315,0)
 I $D(DGCST),DGCST=0,DGCN>0 S CENDATE=$P($G(^DG(45.86,DGCN,0)),U,1)
"RTN","DGPTIC10",316,0)
 D EFFDATE(DGPTF)
"RTN","DGPTIC10",317,0)
 I CENDATE<IMPDATE,DT'<IMPDATE D
"RTN","DGPTIC10",318,0)
 . W !!,?5,"Note: This PTF record is OPEN for CENSUS."
"RTN","DGPTIC10",319,0)
 . W !,?7,"Census requires ICD-9 codes."
"RTN","DGPTIC10",320,0)
 . W !,?7,"PTF will require ICD-10 codes after the census is closed.",!
"RTN","DGPTIC10",321,0)
CENSUSQ ;
"RTN","DGPTIC10",322,0)
 Q
"RTN","DGPTIC10",323,0)
 ;
"RTN","DGPTOD1")
0^82^B9059489
"RTN","DGPTOD1",1,0)
DGPTOD1 ;ALB/AS/BOK,WOIFO/PMK - PTF DRG REPORTS, BUILD UTILITY ;4/29/2015 1:03pm
"RTN","DGPTOD1",2,0)
 ;;5.3;Registration;**158,238,375,744,884**;Aug 13, 1993;Build 31
"RTN","DGPTOD1",3,0)
 K ^UTILITY($J),A
"RTN","DGPTOD1",4,0)
 S DGFY=$$FY^DGPTOD0(DGED),DGFY2K=$$DGY2K^DGPTOD0(DGFY)
"RTN","DGPTOD1",5,0)
 S DGFYQ=$$FMTE^XLFDT(DGFY2K)_$$QTR(DGED)
"RTN","DGPTOD1",6,0)
 ;S DGWWCST=$P(DGCST,"^",2),DG1DAWW=$P(DGCST,"^",3)/DGWWCST,DG1DAWW=$J(DG1DAWW,0,5),DGHIWW=$P(DGCST,"^",5)/DGWWCST,DGHIWW=$J(DGHIWW,0,5)
"RTN","DGPTOD1",7,0)
 S (DGWWCST,DG1DAWW,DGHIWW)=0
"RTN","DGPTOD1",8,0)
 D DT^DICRW S DGTPT=0
"RTN","DGPTOD1",9,0)
 F DGDRGDT=DGSD:0 S DGDRGDT=$O(^DGPT(DGCR,DGDRGDT)) Q:DGDRGDT'>0!(DGDRGDT>DGED)  F DGPTF=0:0 S DGPTF=$O(^DGPT(DGCR,DGDRGDT,DGPTF)) Q:DGPTF'>0  D
"RTN","DGPTOD1",10,0)
 . I $D(^DGPT(DGPTF,0)),'$P(^(0),U,4),$P(^(0),U,11)=1 S DGTPT=DGTPT+1,DGTLOS=0,DFN=+^(0) N DGCST D ^DGPTOD2
"RTN","DGPTOD1",11,0)
 . Q
"RTN","DGPTOD1",12,0)
 S H3="               National              "
"RTN","DGPTOD1",13,0)
 ;S DGFT(1)="The dollar figures shown are based on the formulas used in the FY 19"_$S($E(DGFY2K,1,3)>288:"89",1:"88")_" Target Allowance, as explained in the corresponding"
"RTN","DGPTOD1",14,0)
 ;S DGFT(2)="user documentation.  They are provided as a management tool for monitoring purposes and should not be used to predict"
"RTN","DGPTOD1",15,0)
 ;S DGFT(3)="RAM outcome.  They do not include RAM adjustments (salary, psychiatry, census, etc).  It will never be possible to duplicate"
"RTN","DGPTOD1",16,0)
 ;S DGFT(4)="RAM accurately on a current basis as the final RAM formulas are not determined until after the conclusion of the",DGFT(5)="fiscal year."
"RTN","DGPTOD1",17,0)
 S DGFT(4)="(*)Total Weight=Weight x Total # Discharges"
"RTN","DGPTOD1",18,0)
 S H="                Average              ",H1="DRG  Low  High    LOS  Weight         " K A F DGPGM=2:1:5 S R=$P(DGPTFR,"*",DGPGM) Q:R']""  D @R
"RTN","DGPTOD1",19,0)
 K DFN,DG1D,DGALOS,DGBE,DGDRG,DGDRGDT,DGDRGI,DGFYQ,DGHI,DGLBS,DGO,DGMBE,DGMV,DGOUT,DGPM,DGPR,DGPTF,DGPTFR,DGSNM,DGSV1,DGSVC,DGTLOS,DGTPT,DGWWU,H,H1,H3,K,R,W,DGLO,DGCNT,DGPROV,DGWGT
"RTN","DGPTOD1",20,0)
 G Q^DGPTOD0
"RTN","DGPTOD1",21,0)
1 D ^DGPTODT1 Q
"RTN","DGPTOD1",22,0)
2 D ^DGPTODF1 Q
"RTN","DGPTOD1",23,0)
3 D ^DGPTODA1 Q
"RTN","DGPTOD1",24,0)
4 D ^DGPTODCM Q  ;D ^DGPTODB1 Q
"RTN","DGPTOD1",25,0)
5 Q
"RTN","DGPTOD1",26,0)
 Q
"RTN","DGPTOD1",27,0)
WWU S (DGLO,DGHI,DGALOS,DGWWU,DGBE,DGMBE)="",%=$S($D(^ICD(+DGDRG,"FY",DGFY2K,0)):(^(0)),1:"") I %="",DGFY2K="3070000" N DGFY2KSV,DGFY2KYR S DGFY2KSV=DGFY2K,DGFY2KYR=$E(DGFY2K,1,3)-1,DGFY2K=DGFY2KYR_"0000" G WWU
"RTN","DGPTOD1",28,0)
 I $G(DGFY2KSV) S DGFY2K=DGFY2KSV
"RTN","DGPTOD1",29,0)
 S DGHI=$P(%,U,4),DGLO=$P(%,U,3),DGALOS=$P(%,U,9),DGWWU=$P(%,U,2)
"RTN","DGPTOD1",30,0)
 I DGSVC]"" S DGSV1=$S(DGSVC="M":1,DGSVC="NE":2,DGSVC="P":3,DGSVC="R":4,1:5),DGBE=$S($D(^ICD(+DGDRG,"BE",+DGFYQ,"S",+DGSV1,0)):$P(^(0),"^",2),1:""),DGMBE=$S($D(^ICD(+DGDRG,"BE",+DGFYQ,0)):$P(^(0),U,2),1:"")
"RTN","DGPTOD1",31,0)
 S ^UTILITY($J,"DRG",DGDRG)=DGLO_"^"_DGHI_"^"_DGALOS_"^"_DGWWU_"^"_DGBE_"^"_DGMBE Q
"RTN","DGPTOD1",32,0)
BE W !,"If local breakeven days have not been defined, values on this report will not be correct!",!
"RTN","DGPTOD1",33,0)
DIS W !,?10,DGFT(4)  ;F %=1:1:5 W !,DGFT(%)
"RTN","DGPTOD1",34,0)
 Q
"RTN","DGPTOD1",35,0)
 ;
"RTN","DGPTOD1",36,0)
QTR(X) ;Return FY quarter
"RTN","DGPTOD1",37,0)
 ;Input: X=date
"RTN","DGPTOD1",38,0)
 S X=$E(X,4,5)
"RTN","DGPTOD1",39,0)
 Q $S(X<4:2,X<7:3,X<10:4,1:1)
"RTN","DGPTODCM")
0^83^B17949456
"RTN","DGPTODCM",1,0)
DGPTODCM ;ALB/JAT,WOIFO/PMK - PTF DRG CASE MIX REPORT  ;4/28/15 7:14pm
"RTN","DGPTODCM",2,0)
 ;;5.3;Registration;**375,884**;Aug 13,1993;Build 31
"RTN","DGPTODCM",3,0)
 ; called from DGPTOD1
"RTN","DGPTODCM",4,0)
 N DGREF,DGDEF,DGWGT,DGS,DGSPEC,DGP,DGSVC,DGBED,DGPRO
"RTN","DGPTODCM",5,0)
 N DGPASS,X,Y,B1,B2,B3,B4,T1,T2,T3,T4
"RTN","DGPTODCM",6,0)
 N E,P,P3,%,DGCPG,DGFLAG,DGTCH,DGSNM
"RTN","DGPTODCM",7,0)
 S DGREF=$NA(^UTILITY("DGPTOD1","CASEMIX"))
"RTN","DGPTODCM",8,0)
 S DGDEF=$TR(DGREF,")",",")
"RTN","DGPTODCM",9,0)
 F  S DGREF=$Q(@DGREF) Q:DGREF=""  Q:$E(DGREF,1,$L(DGDEF))'=DGDEF  D
"RTN","DGPTODCM",10,0)
 .S DGWGT=$P(@DGREF,U,2),DGS=$P(@DGREF,U,3)
"RTN","DGPTODCM",11,0)
 .S DGSPEC=$P(@DGREF,U,4),DGP=$P(@DGREF,U,5)
"RTN","DGPTODCM",12,0)
 .I DGS="" S DGS="ZZ"
"RTN","DGPTODCM",13,0)
 .I DGSPEC="" S DGSPEC=0
"RTN","DGPTODCM",14,0)
 .I DGP="" S DGP=0
"RTN","DGPTODCM",15,0)
 .; set up table by Service
"RTN","DGPTODCM",16,0)
 .I '$D(DGSVC(DGS)) S DGSVC(DGS)=DGWGT_U_1
"RTN","DGPTODCM",17,0)
 .E  S $P(DGSVC(DGS),U)=$P(DGSVC(DGS),U)+DGWGT,$P(DGSVC(DGS),U,2)=$P(DGSVC(DGS),U,2)+1
"RTN","DGPTODCM",18,0)
 .; set up table by Specialty (bed section)
"RTN","DGPTODCM",19,0)
 .I '$D(DGBED(DGSPEC)) S DGBED(DGSPEC)=DGWGT_U_1
"RTN","DGPTODCM",20,0)
 .E  S $P(DGBED(DGSPEC),U)=$P(DGBED(DGSPEC),U)+DGWGT,$P(DGBED(DGSPEC),U,2)=$P(DGBED(DGSPEC),U,2)+1
"RTN","DGPTODCM",21,0)
 .; set up table by Provider
"RTN","DGPTODCM",22,0)
 .I '$D(DGPRO(DGP)) S DGPRO(DGP)=DGWGT_U_1
"RTN","DGPTODCM",23,0)
 .E  S $P(DGPRO(DGP),U)=$P(DGPRO(DGP),U)+DGWGT,$P(DGPRO(DGP),U,2)=$P(DGPRO(DGP),U,2)+1
"RTN","DGPTODCM",24,0)
 ;
"RTN","DGPTODCM",25,0)
 ; start printing 
"RTN","DGPTODCM",26,0)
 S (DGPASS,P)=0
"RTN","DGPTODCM",27,0)
 S DGFLAG="Medical Center",P3="DRG"
"RTN","DGPTODCM",28,0)
 D COVER,HEAD
"RTN","DGPTODCM",29,0)
 S (T2,T3)=0
"RTN","DGPTODCM",30,0)
 D UNLOAD
"RTN","DGPTODCM",31,0)
 K ^UTILITY("DGPTOD1","CASEMIX")
"RTN","DGPTODCM",32,0)
 Q
"RTN","DGPTODCM",33,0)
COVER ; cover page
"RTN","DGPTODCM",34,0)
 S DGCPG(1)="DRG Case Mix Summary for "_DGFLAG
"RTN","DGPTODCM",35,0)
 S DGCPG(2)=$S(DGD:"for Discharge Dates Between ",1:"Active Admissions")
"RTN","DGPTODCM",36,0)
 I DGD S Y=DGSD+.1 X ^DD("DD") S %=Y,Y=$P(DGED,".") X ^DD("DD") S DGCPG(2)=DGCPG(2)_%_" to "_Y,DGCPG(3)=$S('DGB:"not ",1:"")_"including TRANSFER DRGs"
"RTN","DGPTODCM",37,0)
 S DGTCH="CASE MIX SUMMARY by DRG^"_P3_"^PAGE #" D C^DGUTL
"RTN","DGPTODCM",38,0)
 Q
"RTN","DGPTODCM",39,0)
HEAD ; top of page
"RTN","DGPTODCM",40,0)
 I P S %=IOSL-14 F E=$Y:1:% W !
"RTN","DGPTODCM",41,0)
 I P W !,?10,"Total Weight:  Sum of all DRGs",!!
"RTN","DGPTODCM",42,0)
 W:P ?62,"-",P,"-" W @IOF,!,"DRG Case Mix Summary for ",$S(DGFLAG'["M":G2_" SERVICE",1:"MEDICAL CENTER"),$S(DGFLAG["Spec":" by Specialty",1:"") I 'DGD W " for Active Admissions"
"RTN","DGPTODCM",43,0)
 I DGD W !,"Discharge Dates from " S Y=DGSD+.1 X ^DD("DD") W $P(Y,"@",1)," to " S Y=DGED X ^DD("DD") W $P(Y,"@",1)
"RTN","DGPTODCM",44,0)
 W ?110,"Printed: " S Y=DT D DT^DIQ W !?15,$S('DGB:"not ",1:""),"including TRANSFER DRGs"
"RTN","DGPTODCM",45,0)
 I DGPASS=0 D
"RTN","DGPTODCM",46,0)
 .W !!,"By Service:",!!
"RTN","DGPTODCM",47,0)
 .W ?5,"Service",?40,"Total Weight",?55,"Total # Discharges",?80,"Average Weight",!
"RTN","DGPTODCM",48,0)
 I DGPASS=1 D
"RTN","DGPTODCM",49,0)
 .W !!,"By Specialty (bed section):",!!
"RTN","DGPTODCM",50,0)
 .W ?5,"Specialty",?40,"Total Weight",?55,"Total # Discharges",?80,"Average Weight",!
"RTN","DGPTODCM",51,0)
 I DGPASS=2 D
"RTN","DGPTODCM",52,0)
 .W !!,"By Provider:",!!
"RTN","DGPTODCM",53,0)
 .W ?5,"Provider",?40,"Total Weight",?55,"Total # Discharges",?80,"Average Weight",!
"RTN","DGPTODCM",54,0)
 K E S $P(E,"=",133)="" W E K E
"RTN","DGPTODCM",55,0)
 S P=P+1 Q
"RTN","DGPTODCM",56,0)
UNLOAD ;
"RTN","DGPTODCM",57,0)
 I $D(DGSVC) S X="" D
"RTN","DGPTODCM",58,0)
 .F  S X=$O(DGSVC(X)) Q:X=""  D
"RTN","DGPTODCM",59,0)
 ..D SVC S B1=DGSNM
"RTN","DGPTODCM",60,0)
 ..S B2=$P(DGSVC(X),U),B3=$P(DGSVC(X),U,2),B4=B2/B3
"RTN","DGPTODCM",61,0)
 ..D PRINT
"RTN","DGPTODCM",62,0)
 .D TOT
"RTN","DGPTODCM",63,0)
 .S DGPASS=1 D HEAD
"RTN","DGPTODCM",64,0)
 I $D(DGBED) S X="" D
"RTN","DGPTODCM",65,0)
 .F  S X=$O(DGBED(X)) Q:X=""  D
"RTN","DGPTODCM",66,0)
 ..S B1=$P($G(^DIC(42.4,X,0)),U) I X=0 S B1="UNKNOWN"
"RTN","DGPTODCM",67,0)
 ..S B2=$P(DGBED(X),U),B3=$P(DGBED(X),U,2),B4=B2/B3
"RTN","DGPTODCM",68,0)
 ..D PRINT
"RTN","DGPTODCM",69,0)
 .D TOT
"RTN","DGPTODCM",70,0)
 .S DGPASS=2 D HEAD
"RTN","DGPTODCM",71,0)
 I $D(DGPRO) S X="" D
"RTN","DGPTODCM",72,0)
 .F  S X=$O(DGPRO(X)) Q:X=""  D
"RTN","DGPTODCM",73,0)
 ..S B1=$P($G(^VA(200,X,0)),U) I X=0 S B1="UNKNOWN"
"RTN","DGPTODCM",74,0)
 ..S B2=$P(DGPRO(X),U),B3=$P(DGPRO(X),U,2),B4=B2/B3
"RTN","DGPTODCM",75,0)
 ..D PRINT
"RTN","DGPTODCM",76,0)
 .D TOT
"RTN","DGPTODCM",77,0)
 I P S %=IOSL-14 F E=$Y:1:% W !
"RTN","DGPTODCM",78,0)
 I P W !,?10,"Total Weight:  Sum of all DRGs",!!
"RTN","DGPTODCM",79,0)
 W:P ?62,"-",P,"-" W @IOF,!
"RTN","DGPTODCM",80,0)
 Q
"RTN","DGPTODCM",81,0)
PRINT ; print a line
"RTN","DGPTODCM",82,0)
 D HEAD:$Y>(IOSL-14)
"RTN","DGPTODCM",83,0)
 W !,?5,B1,?38,$J(B2,12,2),?58,$J(B3,10),?75,$J(B4,14,2)
"RTN","DGPTODCM",84,0)
 S T2=T2+B2,T3=T3+B3,T4=T2/T3
"RTN","DGPTODCM",85,0)
 Q
"RTN","DGPTODCM",86,0)
TOT ; print totals
"RTN","DGPTODCM",87,0)
 W !!,?5,"TOTALS",?38,$J(T2,12,2),?58,$J(T3,10),?75,$J(T4,14,2)
"RTN","DGPTODCM",88,0)
 S (T2,T3)=0
"RTN","DGPTODCM",89,0)
 Q
"RTN","DGPTODCM",90,0)
SVC ; Service names
"RTN","DGPTODCM",91,0)
 S DGSNM=$S(X="M":"MEDICINE",X="S":"SURGERY",X="P":"PSYCHIATRY",X="NE":"NEUROLOGY",X="R":"REHAB MEDICINE",X="NH":"NHCU",X="I":"INTERMEDIATE MED",X="SCI":"SPINAL CORD INJURY",X="D":"DOMICILIARY",X="B":"BLIND REHAB",1:"RESPITE CARE")
"RTN","DGPTODCM",92,0)
 Q
"RTN","DGPTOLC2")
0^19^B35887229
"RTN","DGPTOLC2",1,0)
DGPTOLC2 ;ALB/AS/ADL,HIOFO/FT - SUMMARY BY ADM RPT, lists diagnoses,sur,pro (cont.) ;3/19/15 11:44am
"RTN","DGPTOLC2",2,0)
 ;;5.3;Registration;**164,510,559,599,729,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTOLC2",3,0)
 ;;ADL;Update for CSV Project;;Mar 27, 2003
"RTN","DGPTOLC2",4,0)
 ;
"RTN","DGPTOLC2",5,0)
 ; ICDXCODE APIs - #5699
"RTN","DGPTOLC2",6,0)
 ; VA(200) global - #10060
"RTN","DGPTOLC2",7,0)
 ; VADPT APIs - #10061
"RTN","DGPTOLC2",8,0)
 ; XLFDT APIs - #10103
"RTN","DGPTOLC2",9,0)
 ;
"RTN","DGPTOLC2",10,0)
EN ;called from DGPTOLC1
"RTN","DGPTOLC2",11,0)
 D LO^DGUTL,NOW^%DTC S DGPT=0,DGDT=$TR($$FMTE^XLFDT(DT,"5DF")," ","0")_"@",%=$P(%,".",2),DGDT=DGDT_$E(%,1,2)_":"_$E(%_"0000",3,4)
"RTN","DGPTOLC2",12,0)
 F PTF=0:0 S PTF=$O(DGPTF(PTF)) Q:PTF'>0  S DGNAME=$P(DGPTF(PTF),"^"),DGADM=$P(DGPTF(PTF),"^",2),DGPTF(DGNAME,DGADM,PTF)="" K DGPTF(PTF) ;put names in alphabetical order
"RTN","DGPTOLC2",13,0)
 F DGPTX=0:0 S DGPT=$O(DGPTF(DGPT)) Q:DGPT']""  F DGADM=0:0 S DGADM=$O(DGPTF(DGPT,DGADM)) Q:DGADM'>0  S DGPG=1,PTF=$O(DGPTF(DGPT,DGADM,0)),DFN=$S($D(^DGPT(PTF,0)):+^(0),1:"") I DFN]"" S DGPMIFN=$O(^DGPM("APTF",PTF,0)) D E,HD,D
"RTN","DGPTOLC2",14,0)
 D Q2^DGPTOLC1
"RTN","DGPTOLC2",15,0)
 Q
"RTN","DGPTOLC2",16,0)
E ;
"RTN","DGPTOLC2",17,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTOLC2",18,0)
 S DGELIG=$S('$D(^DPT(DFN,.36)):"Unknown",$D(^DIC(8,+$P(^(.36),"^"),0)):$P(^(0),"^"),1:"Unknown")
"RTN","DGPTOLC2",19,0)
 N DGFLDPTR,DGFLDERR
"RTN","DGPTOLC2",20,0)
 S %=""
"RTN","DGPTOLC2",21,0)
 D FIELD^DID(2,.3611,,"POINTER","DGFLDPTR","DGFLDERR")
"RTN","DGPTOLC2",22,0)
 S:$D(DGFLDPTR("POINTER")) %=";"_DGFLDPTR("POINTER")
"RTN","DGPTOLC2",23,0)
 S X=$S($D(^DPT(DFN,.361)):$P(^(.361),"^"),1:"")
"RTN","DGPTOLC2",24,0)
 S DGSTAT=$S(X']"":"Unknown",1:$P($P(%,";"_X_":",2),";",1))
"RTN","DGPTOLC2",25,0)
 S DG70=$S($D(^DGPT(PTF,70)):^(70),1:""),DGFEE=$S($P(^DGPT(PTF,0),"^",4):1,1:"") I DGFEE S X1=$S(+DG70:+DG70,1:DT),X2=DGADM D ^%DTC S DGLOS=$S(X:X,1:1),DGLV=0,D1=0
"RTN","DGPTOLC2",26,0)
 I '+DG70 S DGPRO=$S($D(^DPT(DFN,.104)):+^(.104),1:""),DGPRO=$S($D(^VA(200,+DGPRO,0)):$P(^(0),"^"),1:"Unknown")
"RTN","DGPTOLC2",27,0)
 I +DG70 S DGPRO=$S('$D(^DGPT(PTF,"M",1,"P")):"",1:$P(^("P"),"^",5)),DGPRO=$S($D(^VA(200,+DGPRO,0)):$P(^(0),"^"),1:"") I DGPRO']"" D DGPRO
"RTN","DGPTOLC2",28,0)
 Q
"RTN","DGPTOLC2",29,0)
CRT I IOST?1"C-".E R !?20,"Enter <RETURN> to continue",Y:DTIME
"RTN","DGPTOLC2",30,0)
HD W @IOF,?21,"PATIENT SUMMARY by ADMISSION",!!?51,"Run Date: ",DGDT,!,DGPT,?32,"SSN: ",$P(^DPT(+^DGPT(PTF,0),0),"^",9),?51,"Admitted: " S X=DGADM D DT
"RTN","DGPTOLC2",31,0)
 W !,"Elig: ",DGELIG,"  (",DGSTAT,")",?50,"Discharge: " S X=$P(DG70,"^") D DT W ! W:DGFEE "Fee Basis"
"RTN","DGPTOLC2",32,0)
 I DGPMIFN>0 W "Total LOS: " D ^DGPMLOS S X=+$P(X,"^")-(+$P(X,"^",2))-(+$P(X,"^",4)) W $S(X>0:X,1:"1") W ?18,"* Provider: ",$E(DGPRO,1,19)
"RTN","DGPTOLC2",33,0)
 W ?55,"PTF #: ",PTF,?72,"Pg: ",DGPG S DGPG=DGPG+1 W:DGPMIFN>0 !,"* indicates the most recent PROVIDER entered for this admission",!
"RTN","DGPTOLC2",34,0)
 Q
"RTN","DGPTOLC2",35,0)
D G S:'$D(^DGPT(PTF,"M","AC"))
"RTN","DGPTOLC2",36,0)
 K DGMD F DGS=0:0 S DGS=$O(^DGPT(PTF,"M",DGS)) Q:DGS'>0  I $D(^(DGS,0)) S DGMD=+$P(^(0),"^",10) S:'DGMD DGMD=999999999 S:$D(DGMD(DGMD)) DGMD=DGMD+.01*DGS S DGMD(DGMD)=DGS ;put movements in date order
"RTN","DGPTOLC2",37,0)
 F DGS=0:0 S DGS=$O(DGMD(DGS)) Q:DGS'>0  I $D(^DGPT(PTF,"M",DGMD(DGS),0)) D
"RTN","DGPTOLC2",38,0)
 . S DGM=^(0),X=$P(DGM,"^",10),DGBS=+$P(DGM,"^",2) ;^(0) references global on line above
"RTN","DGPTOLC2",39,0)
 . W !!,"Movement Date: " D DT W:DGMD(DGS)=1 ?40,"(Discharge 501)" W $$GETLABEL^DGPTIC10(EFFDATE,"D") D:DGFEE LOS D BS
"RTN","DGPTOLC2",40,0)
 . K DG501
"RTN","DGPTOLC2",41,0)
 . D PTFICD^DGPTFUT(501,PTF,DGMD(DGS),.DG501,1)  ;get all DX and POAs for this multiple
"RTN","DGPTOLC2",42,0)
 . S DGLOOP=0
"RTN","DGPTOLC2",43,0)
 . F  S DGLOOP=$O(DG501(DGLOOP)) Q:'DGLOOP  S DGDXPOA=$G(DG501(DGLOOP)) D C
"RTN","DGPTOLC2",44,0)
 I DG70 D
"RTN","DGPTOLC2",45,0)
 . S DGM=DG70 W !!,"Discharge Move: (701/2/3 Diagnoses)",$$GETLABEL^DGPTIC10(EFFDATE,"D"),!
"RTN","DGPTOLC2",46,0)
 . K DG701
"RTN","DGPTOLC2",47,0)
 . D PTFICD^DGPTFUT(701,PTF,,.DG701,1)  ;get all DX and POAs for this multiple
"RTN","DGPTOLC2",48,0)
 . S DGLOOP=""
"RTN","DGPTOLC2",49,0)
 . F  S DGLOOP=$O(DG701(DGLOOP)) Q:DGLOOP=""  S DGDXPOA=$G(DG701(DGLOOP)) D C
"RTN","DGPTOLC2",50,0)
 K DG501,DG701,DGDXPOA,DGLOOP
"RTN","DGPTOLC2",51,0)
S ; --
"RTN","DGPTOLC2",52,0)
 S DGF="S" F DGS=0:0 S DGS=$O(^DGPT(PTF,"S",DGS)) Q:DGS'>0  S DGSUR=^(DGS,0),X=+DGSUR W !!,"Surgery Date: " D DT W $$GETLABEL^DGPTIC10(EFFDATE,"P") D
"RTN","DGPTOLC2",53,0)
 . F DGC=8:1:27 D P1
"RTN","DGPTOLC2",54,0)
 . S DGSUR=$G(^DGPT(PTF,"S",DGS,1))   ;*884* get node with new/additional procedure codes
"RTN","DGPTOLC2",55,0)
 . F DGC=1:1:5 D:$P(DGSUR,U,DGC) P1   ;*884* process procedure codes
"RTN","DGPTOLC2",56,0)
 K DGF I $D(^DGPT(PTF,"401P")) S DGSUR=^("401P") W:'$D(DGF) !!,"Procedure: (401P)",$$GETLABEL^DGPTIC10(EFFDATE,"P") F DGC=1:1:5 D P1
"RTN","DGPTOLC2",57,0)
 F DGS=0:0 S DGS=$O(^DGPT(PTF,"P",DGS)) Q:DGS'>0  S DGSUR=^(DGS,0),X=+DGSUR W !!,"Procedure Date: " D DT W $$GETLABEL^DGPTIC10(EFFDATE,"P") D
"RTN","DGPTOLC2",58,0)
 . F DGC=5:1:24 D P1
"RTN","DGPTOLC2",59,0)
 . S DGSUR=$G(^DGPT(PTF,"P",DGS,1))  ;*884* get node with new/additional procedure codes
"RTN","DGPTOLC2",60,0)
 . F DGC=1:1:5 D:$P(DGSUR,U,DGC) P1  ;*884* process procedure codes
"RTN","DGPTOLC2",61,0)
 W:DGFEE !,"Total LOS: ",$S(DGLOS>0:DGLOS,1:"1") W ! D:IOST?1"C-".E CONT
"RTN","DGPTOLC2",62,0)
 Q
"RTN","DGPTOLC2",63,0)
 ;
"RTN","DGPTOLC2",64,0)
C ; --Print Diagnosis and POA display
"RTN","DGPTOLC2",65,0)
 Q:'+$P(DGDXPOA,U,1)
"RTN","DGPTOLC2",66,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(DGDXPOA,U,1),EFFDATE) D  ;*884* get DX entry record info
"RTN","DGPTOLC2",67,0)
 . I $Y>($S($D(IOSL):IOSL,1:66)-4) D CRT W !,"Diagnosis Codes, (cont.)",$$GETLABEL^DGPTIC10(EFFDATE,"D")
"RTN","DGPTOLC2",68,0)
 . W:DGLOOP=0 ?4,"PRINCIPAL DIAGNOSIS: "
"RTN","DGPTOLC2",69,0)
 . D WRITECOD^DGPTIC10("DIAG",+$P(DGDXPOA,U,1),EFFDATE,2,1,7)
"RTN","DGPTOLC2",70,0)
 . W $S(+DGPTTMP<1!('$P(DGPTTMP,U,10)):"*",1:"")     ;piece 1 is DX ien, piece 10 is STATUS (multiple)
"RTN","DGPTOLC2",71,0)
 . Q:$P(DGPTTMP,U,20)=1  ;icd9 code, so there is no POA to display
"RTN","DGPTOLC2",72,0)
 . W " ["_$S($P(DGDXPOA,U,2)]"":$P(DGDXPOA,U,2),1:" ")_"]"  ;show POA value in brackets
"RTN","DGPTOLC2",73,0)
 Q
"RTN","DGPTOLC2",74,0)
 ;
"RTN","DGPTOLC2",75,0)
P1 ; -- Print Procedure Code
"RTN","DGPTOLC2",76,0)
 Q:'+$P(DGSUR,"^",DGC)
"RTN","DGPTOLC2",77,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+$P(DGSUR,U,DGC),EFFDATE) D  ;*884* get procedure record info
"RTN","DGPTOLC2",78,0)
 . I $Y>($S($D(IOSL):IOSL,1:66)-4) D CRT W !,$S('$D(DGF):"Non-OR Procedures",DGF="S":"Surgery",1:"Non-OR Procedures") W " Codes, (cont.)"
"RTN","DGPTOLC2",79,0)
 . D WRITECOD^DGPTIC10("PROC",+$P(DGSUR,"^",DGC),EFFDATE,2,1,7)
"RTN","DGPTOLC2",80,0)
 . W $S(+DGPTTMP<1!('$P(DGPTTMP,U,10)):"*",1:"") ;piece 1 is DX ien, piece 10 is STATUS (multiple)
"RTN","DGPTOLC2",81,0)
 Q
"RTN","DGPTOLC2",82,0)
 ;
"RTN","DGPTOLC2",83,0)
DT Q:X']""  W $TR($$FMTE^XLFDT(X,"5DF")," ","0") S X=$P(X,".",2) I X]"" W "@"_$E(X,1,2)_":"_$E(X_"0000",3,4)
"RTN","DGPTOLC2",84,0)
 Q
"RTN","DGPTOLC2",85,0)
BS S DGBS=$S('DGBS:DGBS,$D(^DIC(42.4,+DGBS,0)):$P(^(0),"^",1),1:"") W !,"Losing Specialty: ",DGBS
"RTN","DGPTOLC2",86,0)
 Q
"RTN","DGPTOLC2",87,0)
LOS F %=3,4 S DGLV=$P(DGM,"^",%)+DGLV
"RTN","DGPTOLC2",88,0)
 S DGLOS=DGLOS-DGLV
"RTN","DGPTOLC2",89,0)
 Q
"RTN","DGPTOLC2",90,0)
CONT F Y=1:1:($S($D(IOSL):IOSL,1:66)-$Y-2) W !
"RTN","DGPTOLC2",91,0)
 R ?20,"Enter <RETURN> to continue",Y:DTIME
"RTN","DGPTOLC2",92,0)
 Q
"RTN","DGPTOLC2",93,0)
DGPRO S X=$O(^DGPM("APTF",PTF,0)),VAIP("E")=$S('$D(^DGPM(+X,0)):"",1:$P(^DGPM(X,0),"^",17))
"RTN","DGPTOLC2",94,0)
 I VAIP("E") D IN5^VADPT S DGPRO=$S($P(VAIP(7),"^",2)]"":$P(VAIP(7),"^",2),1:"Unknown") K VAIP Q
"RTN","DGPTOLC2",95,0)
 S DGPRO="Unknown" K VAIP
"RTN","DGPTOLC2",96,0)
 Q
"RTN","DGPTR0")
0^77^B26801939
"RTN","DGPTR0",1,0)
DGPTR0 ;MJK/JS/ADL/TJ,HIOFO/FT - PTF TRANSMISSION ;4/21/15 11:28am
"RTN","DGPTR0",2,0)
 ;;5.3;Registration;**114,247,338,342,510,524,565,678,729,664,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTR0",3,0)
 ;;ADL;Update for CSV Project;;Mar 27, 2003
"RTN","DGPTR0",4,0)
 ;
"RTN","DGPTR0",5,0)
 ; ICDXCODE APIs - #5699
"RTN","DGPTR0",6,0)
 ; SDCO22 APIs - #1579
"RTN","DGPTR0",7,0)
 ;
"RTN","DGPTR0",8,0)
 ; -- setup control data
"RTN","DGPTR0",9,0)
 ; ssn
"RTN","DGPTR0",10,0)
 S X=$P(DG10,U,9),Y=$S($E(X,10)="P":"P",1:" ")_$E(X_"         ",1,9)
"RTN","DGPTR0",11,0)
 ; -- adm d/t
"RTN","DGPTR0",12,0)
 S X=$P($P(DG0,U,2),"."),Y=Y_$E(X,4,5)_$E(X,6,7)_$E(X,2,3)_$E($P($P(DG0,U,2),".",2)_"0000",1,4)
"RTN","DGPTR0",13,0)
 ; -- facility #
"RTN","DGPTR0",14,0)
 S L=3,X=DG0,Z=3 D ENTER S Y=Y_$E($P(X,U,5)_"   ",1,3)
"RTN","DGPTR0",15,0)
 S DGHEAD=Y,Y="    "_Y D HEAD^DGPTR1
"RTN","DGPTR0",16,0)
 ;
"RTN","DGPTR0",17,0)
101 ; -- setup 101 transmission
"RTN","DGPTR0",18,0)
 ; control data and name
"RTN","DGPTR0",19,0)
 S Y=$S(T1:"C",1:"N")_"101"_DGHEAD S Y=Y_$$PTFNMFT($P(DG10,U))
"RTN","DGPTR0",20,0)
 ; source of admission
"RTN","DGPTR0",21,0)
 S Y=Y_$S($D(^DIC(45.1,+DG101,0)):$J($P(^(0),U,1),2),1:"  ")
"RTN","DGPTR0",22,0)
 ; xfring fac and suffix
"RTN","DGPTR0",23,0)
 S L=3,X=DG101,Z=5 D ENTER S Y=Y_$E($P(X,U,6)_"   ",1,3)
"RTN","DGPTR0",24,0)
 ; source of payment
"RTN","DGPTR0",25,0)
 S Y=Y_$S("A0"[$P(DG0,U,5):" ",1:$J($P(DG101,U,3),1))
"RTN","DGPTR0",26,0)
 ;POW Location
"RTN","DGPTR0",27,0)
 S Y=Y_$S($P(DG52,U,5)="N":1,$P(DG52,U,5)'="Y":3,$P(DG52,U,6)>0&($P(DG52,U,6)<7):3+$P(DG52,U,6),$P(DG52,U,6)>6&($P(DG52,U,6)<9):$C($P(DG52,U,6)+58),1:" ")
"RTN","DGPTR0",28,0)
 ;marital status, sex
"RTN","DGPTR0",29,0)
 S Y=Y_$S($D(^DIC(11,+$P(DG10,U,5),0)):$E(^(0),1),1:" ")_$J($P(DG10,U,2),1)
"RTN","DGPTR0",30,0)
 ;  date of birth
"RTN","DGPTR0",31,0)
 S DGDOB=$P(DG10,U,3)\1,Y=Y_$E(DGDOB,4,5)_$E(DGDOB,6,7)_(1700+$E(DGDOB,1,3))
"RTN","DGPTR0",32,0)
 ; period of service
"RTN","DGPTR0",33,0)
 S DGPOS=$S($D(^DIC(21,+$P(DG32,U,3),0)):$P(^(0),U,3),1:"")
"RTN","DGPTR0",34,0)
 I $D(^DGPM(+$O(^DGPM("APTF",J,0)),"ODS")),+^("ODS") S DGPOS=6
"RTN","DGPTR0",35,0)
 ;-- if non vet admitting eligibility make POS 9
"RTN","DGPTR0",36,0)
 S DGPOS=$$CKPOS^DGPTUTL($P($G(^DGPT(PTF,101)),U,8),DGPOS)
"RTN","DGPTR0",37,0)
 S X=DGPOS,Z=1,L=2 D ENTER
"RTN","DGPTR0",38,0)
 ; agent orange
"RTN","DGPTR0",39,0)
 S G=" " S DGAO=$P(DG321,U,2) S:DGPOS=7 G=$S($P(DG321,U)'="Y":1,DGAO="N":2,DGAO="Y":3,1:4) S:(DGAO="Y")&($P(DG321,U,13)="K") G=5
"RTN","DGPTR0",40,0)
 ; rad exposure
"RTN","DGPTR0",41,0)
 S E=" " I "^0^2^4^5^7^8^Z^"[(U_DGPOS_U) S DGNT=$P(DG321,U,12),E=$S($P(DG321,U,3)'="Y":1,DGNT="N":2,DGNT="T":3,DGNT="B":4,1:" ")
"RTN","DGPTR0",42,0)
 S Y=Y_G_E K DGPOS,G,E
"RTN","DGPTR0",43,0)
 ; state code
"RTN","DGPTR0",44,0)
 S X=$S($D(^DIC(5,+$P(DG11,U,5),0)):^(0),1:""),L=2,Z=3 D ENTER0
"RTN","DGPTR0",45,0)
 ; county code
"RTN","DGPTR0",46,0)
 S X=$S($D(^DIC(5,+$P(DG11,U,5),1,+$P(DG11,U,7),0)):^(0),1:""),L=3,Z=3 D ENTER0
"RTN","DGPTR0",47,0)
 ; zip code
"RTN","DGPTR0",48,0)
 S X=DG11,Z=6,L=5 D ENTER
"RTN","DGPTR0",49,0)
 ; means test
"RTN","DGPTR0",50,0)
 S Y=Y_$S($P(DG70,U,26)="Y":"AS",1:$E($P(DG0,U,10)_"  ",1,2))
"RTN","DGPTR0",51,0)
 ; income
"RTN","DGPTR0",52,0)
 I $L($P(DG101,U,7))>6 S Y=Y_"999999"
"RTN","DGPTR0",53,0)
 E  S X=DG101,Z=7,L=6 D ENTER0
"RTN","DGPTR0",54,0)
 ;MST
"RTN","DGPTR0",55,0)
 S X=$$GETSTAT^DGMSTAPI(+DG0) S Y=Y_$S(X<0:"U",1:$P(X,"^",2))
"RTN","DGPTR0",56,0)
 ;Combat Vet
"RTN","DGPTR0",57,0)
 S X=$$CVEDT^DGCV(+DG0,$P(DG0,"^",2)) S Y=Y_$S((+X)>0:1,1:0)
"RTN","DGPTR0",58,0)
 S X=$P(X,"^",2)_"       " S Y=Y_$E(X,4,5)_$E(X,6,7)_$E(X,2,3)
"RTN","DGPTR0",59,0)
 ;Project 112/SHAD
"RTN","DGPTR0",60,0)
 S X=$$SHAD^SDCO22(+DG0) S Y=Y_$S((+X)>0:1,1:0)
"RTN","DGPTR0",61,0)
 ;Emergency Response Indicator
"RTN","DGPTR0",62,0)
 S X=$$EMGRES^DGUTL(+DG0) S Y=Y_$S("^K^"[(U_X_U):X,1:" ")
"RTN","DGPTR0",63,0)
 ;Country Code
"RTN","DGPTR0",64,0)
 S X=$$GET1^DIQ(779.004,$P(DG11,U,10)_",",.01),Z=1,L=3 D ENTER
"RTN","DGPTR0",65,0)
 D FILL^DGPTR2,SAVE
"RTN","DGPTR0",66,0)
 ;I T1 S Y=$E(Y,1,52)_" "_$E(Y,54,125)
"RTN","DGPTR0",67,0)
 I T1 S $E(Y,53)=" " ;sets $E(Y,53)=" " if census, but why after it is saved?
"RTN","DGPTR0",68,0)
 ;
"RTN","DGPTR0",69,0)
P401 ; -- setup 401P transaction
"RTN","DGPTR0",70,0)
 G 401:'$D(^DGPT(J,"401P"))!(T1) S DG41=^("401P"),Y=$S(T1:"C",1:"N")_"401"_DGHEAD_"P"_"           "
"RTN","DGPTR0",71,0)
 N EFFDATE,IMPDATE,DGPTDAT D EFFDATE^DGPTIC10(J)
"RTN","DGPTR0",72,0)
 S DG41=$S($D(^DGPT(J,"401P")):^("401P"),1:"")
"RTN","DGPTR0",73,0)
 S L=1 F K=1:1:5 S:'$P(DG41,U,K) DG41=$P(DG41,U,1,K-1)_U_$P(DG41,U,K+1,99),K=K-1 S L=L+1 Q:L=5
"RTN","DGPTR0",74,0)
 F I=1:1:5 S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+$P(DG41,U,I),EFFDATE,"I"),Y=Y_$S(+DGPTTMP>0:$J($P($P(DGPTTMP,U,2),".",1),2)_$E($P($P(DGPTTMP,U,2),".",2)_"   ",1,3),1:"     ")_"  "
"RTN","DGPTR0",75,0)
 K DGPTEDT
"RTN","DGPTR0",76,0)
 I $E(Y,40)'=" " D FILL^DGPTR2,SAVE
"RTN","DGPTR0",77,0)
 ;
"RTN","DGPTR0",78,0)
401 ; -- setup 401 transactions
"RTN","DGPTR0",79,0)
 G 501:'$D(^DGPT(J,"S")) K ^UTILITY($J,"S") S I=0
"RTN","DGPTR0",80,0)
SUR ;
"RTN","DGPTR0",81,0)
 S I=$O(^DGPT(J,"S",I)) G 501:'I S DGSUR=^(I,0),DGAUX=$S($D(^DGPT(J,"S",I,300)):^(300),1:"") G SUR:'DGSUR
"RTN","DGPTR0",82,0)
 G SUR:DGSUR<T1!(DGSUR>T2) S DGSUD=+^(0)\1,^UTILITY($J,"S",DGSUD)=$S($D(^UTILITY($J,"S",DGSUD)):^(DGSUD),1:0)+1,F=$S(DGSUD<2871000:0,1:1)
"RTN","DGPTR0",83,0)
 I ^UTILITY($J,"S",DGSUD)>$S(F:3,1:2) D  I Y'=1 S DGERR=1 Q
"RTN","DGPTR0",84,0)
 .W !,"**There are more than ",$S(F:"three",1:"two")," surgeries on the same date**"
"RTN","DGPTR0",85,0)
 .S DIR(0)="Y",DIR("B")="YES",DIR("A")="OK to continue?" D ^DIR K DIR
"RTN","DGPTR0",86,0)
 S Y=$S(T1:"C",1:"N")_"401"_DGHEAD_$E(DGSUD,4,5)_$E(DGSUD,6,7)_$E(DGSUD,2,3)_$E($P(+DGSUR,".",2)_"0000",1,4)_$S($D(^DIC(45.3,+$P(DGSUR,U,3),0)):$P(^(0),U,1),1:"  ")
"RTN","DGPTR0",87,0)
 S L=1,X=DGSUR F Z=4:1:7 D ENTER
"RTN","DGPTR0",88,0)
 N EFFDATE,IMPDATE,DGPTDAT D EFFDATE^DGPTIC10(J)
"RTN","DGPTR0",89,0)
 S L=1 F K=8:1:12 S:'$P(DGSUR,U,K) DGSUR=$P(DGSUR,U,1,K-1)_U_$P(DGSUR,U,K+1,99),K=K-1 S L=L+1 Q:L=5
"RTN","DGPTR0",90,0)
 F K=8:1:12 S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+$P(DGSUR,U,K),EFFDATE,"I"),Y=Y_$S(+DGPTTMP>0:$J($P($P(DGPTTMP,U,2),".",1),2)_$E($P($P(DGPTTMP,U,2),".",2)_"   ",1,3),1:"     ")_"  "
"RTN","DGPTR0",91,0)
 ;
"RTN","DGPTR0",92,0)
 ;-- att phy
"RTN","DGPTR0",93,0)
 S Y=Y_"         "
"RTN","DGPTR0",94,0)
 ;-- additional ptf question
"RTN","DGPTR0",95,0)
 ;send null, if disch date>inactive date. DG/729
"RTN","DGPTR0",96,0)
 I +$P($G(^DIC(45.88,1,0)),U,3) S DGAUX=$S((+$G(^DGPT(J,70))<$P(^DIC(45.88,1,0),U,3)):DGAUX,1:"")
"RTN","DGPTR0",97,0)
 S Y=Y_$E($P(DGAUX,U)_" ")
"RTN","DGPTR0",98,0)
 K DGAUX
"RTN","DGPTR0",99,0)
 D FILL^DGPTR2,SAVE G SUR
"RTN","DGPTR0",100,0)
501 G 501^DGPTR2
"RTN","DGPTR0",101,0)
 Q
"RTN","DGPTR0",102,0)
ENTER S Y=Y_$J($P(X,U,Z),L)
"RTN","DGPTR0",103,0)
 Q
"RTN","DGPTR0",104,0)
ENTER0 S Y=Y_$S($P(X,U,Z)]"":$E("000000",$L($P(X,U,Z))+1,L)_$P(X,U,Z),1:$J($P(X,U,Z),L))
"RTN","DGPTR0",105,0)
 Q
"RTN","DGPTR0",106,0)
SAVE ;save segment to MailMan message and ^TMP("AEDIT",$J), if data is valid
"RTN","DGPTR0",107,0)
 D SAVE^DGPTR2
"RTN","DGPTR0",108,0)
Q Q
"RTN","DGPTR0",109,0)
DGNAM S X=DGNAM I X?.E.P F I=1:1:$L(X) S Z=$E(X,I) Q:Z=","  S:Z?.P&(Z]"") X=$E(X,1,I-1)_$E(X,I+1,$L(X)),I=I-1 Q:X'?.E.P
"RTN","DGPTR0",110,0)
 I X?.E.L D UP^DGHELP
"RTN","DGPTR0",111,0)
 S DGNAM=X
"RTN","DGPTR0",112,0)
 Q
"RTN","DGPTR0",113,0)
 ;
"RTN","DGPTR0",114,0)
PTFNMFT(DG10) ;this function will format the name of the patient for
"RTN","DGPTR0",115,0)
 ; transmission of the 101 record to Austin. In addition, this
"RTN","DGPTR0",116,0)
 ; function will be used by OPC so that the format will be consistent
"RTN","DGPTR0",117,0)
 ; for OPC and PTF.
"RTN","DGPTR0",118,0)
 ;  INPUT :   DG10 - .01 field from the patient record.
"RTN","DGPTR0",119,0)
 ;  OUTPUT:   name in the format proper format.
"RTN","DGPTR0",120,0)
 ;        A = <12 - characters of last name padded with blanks>
"RTN","DGPTR0",121,0)
 ;        B = <1  - first initial of fist name>
"RTN","DGPTR0",122,0)
 ;        C = <1  - first initial of middle name>
"RTN","DGPTR0",123,0)
 ;      returns :ABC <14 - characters>
"RTN","DGPTR0",124,0)
 N X,I
"RTN","DGPTR0",125,0)
 S DGNAM=DG10 D DGNAM
"RTN","DGPTR0",126,0)
 Q $E($P(DGNAM,",",1)_"           ",1,12)_$J($E($P(DGNAM,",",2),1),1)_$J($E($P($P(DGNAM,",",2)," ",2),1),1)
"RTN","DGPTR2")
0^78^B31431930
"RTN","DGPTR2",1,0)
DGPTR2 ;ALB/JDS/MJK/MTC/ADL/TJ/BOK,HIOFO/FT - PTF TRANSMISSION ;4/20/15 9:59am
"RTN","DGPTR2",2,0)
 ;;5.3;Registration;**183,338,423,510,636,729,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTR2",3,0)
 ;;ADL;Update for CSV Project;;Mar 27,2003
"RTN","DGPTR2",4,0)
 ;
"RTN","DGPTR2",5,0)
 ; ^XMB(3.9) - #10113
"RTN","DGPTR2",6,0)
 ; ICDXCODE APIs - #5699
"RTN","DGPTR2",7,0)
 ;
"RTN","DGPTR2",8,0)
501 ; -- setup 501 transactions
"RTN","DGPTR2",9,0)
 ; DG*636
"RTN","DGPTR2",10,0)
 N DGPTMVDT
"RTN","DGPTR2",11,0)
 I $D(^DGPT(J,70))
"RTN","DGPTR2",12,0)
 K DGCMVT I T2'=9999999 S DGCMVT=$O(^DGPT(J,"M","AM",+$P(T2,".")_".2359")),DGCMVT=$S('DGCMVT:1,$O(^(DGCMVT,0)):$O(^(0)),1:1)
"RTN","DGPTR2",13,0)
 F I=0:0 S I=$O(^DGPT(J,"M",I)) G 535:I'>0 I $D(^(I,0)) D
"RTN","DGPTR2",14,0)
 . S DGM=^(0),DGSC=$P(DGM,U,18),DGAO=$P(DGM,U,26),DGIR=$P(DGM,U,27),DGEC=$P(DGM,U,28),DGMST=$P(DGM,U,29),DGHNC=$P(DGM,U,30),DGTD=$P(DGM,U,10),DGPTMVDT=$P(DGM,U,10)
"RTN","DGPTR2",15,0)
 . S:$D(DGCMVT) DGTD=$S(I=DGCMVT:$P(T2,".")_".2359",1:DGTD)
"RTN","DGPTR2",16,0)
 . I $P(DGM,U,17)'="n",DGTD,DGTD'<T1,DGTD'>T2 D MOV
"RTN","DGPTR2",17,0)
MOV S DGCDR=$P(DGM,U,16),DGM=$P(DGM,U,1,9)_U_$P(DGM,U,11,15),L=1 F Z=5:1:14 S:'$P(DGM,U,Z) DGM=$P(DGM,U,1,Z-1)_U_$P(DGM,U,Z+1,99) S:'$P(DGM,U,Z) Z=Z-1 S L=L+1 Q:L=10
"RTN","DGPTR2",18,0)
 S Y=$S(T1:"C",1:"N")_"501"_DGHEAD,X=$P(DGTD,".")_"       ",Y=Y_$E(X,4,5)_$E(X,6,7)_$E(X,2,3)_$E($P(DGTD,".",2)_"0000",1,4)
"RTN","DGPTR2",19,0)
 S Z=DGCDR D CDR
"RTN","DGPTR2",20,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTR2",21,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTR2",22,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(DGM,U,2),.DGARRY)
"RTN","DGPTR2",23,0)
 S $P(DGM,U,2)=$G(DGARRY(7))
"RTN","DGPTR2",24,0)
 S L=2,X=DGM,Z=2 D ENTER0
"RTN","DGPTR2",25,0)
 ; convert pass, leave days >999 to 999
"RTN","DGPTR2",26,0)
 S L=3 F Z=3,4 S:$P(X,U,Z)>999 $P(X,U,Z)=999 D ENTER0
"RTN","DGPTR2",27,0)
 S L=1,X=DG57,Z=4 D ENTER S:I=1 DG502=Y
"RTN","DGPTR2",28,0)
 N EFFDATE,IMPDATE,DGPTDAT D EFFDATE^DGPTIC10(J)
"RTN","DGPTR2",29,0)
 F Z=5:1:9 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(DGM,U,Z),EFFDATE,"I") D
"RTN","DGPTR2",30,0)
 . S F=$S(+DGPTTMP>0&($P(DGPTTMP,U,10)):$P(DGPTTMP,U,2),1:"   ."),F=$P(F,".",1)_$E($P(F,".",2)_"    ",1,3),F=F_$E("      ",1,7-$L(F)),Y=Y_F
"RTN","DGPTR2",31,0)
 K DGPTEDT
"RTN","DGPTR2",32,0)
 S Y=Y_"         "
"RTN","DGPTR2",33,0)
 S X=""
"RTN","DGPTR2",34,0)
 I 'T1 S Z=$S(I=1:+$O(^DGPT(J,535,"ADC",0)),1:+$O(^DGPT(J,535,"AM",DGTD-.0000001))) I $D(^DGPT(J,535,+$O(^(Z,0)),0)) S X=^(0)
"RTN","DGPTR2",35,0)
 I T1 S Z=+$O(^DGPT(J,535,"AM",DGTD-.0000001)) S:'Z Z=+$O(^DGPT(J,535,"ADC",0)) I $D(^DGPT(J,535,+$O(^(Z,0)),0)) S X=^(0)
"RTN","DGPTR2",36,0)
 S Z=$P(X,U,16) D CDR
"RTN","DGPTR2",37,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTR2",38,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTR2",39,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(X,U,2),.DGARRY)
"RTN","DGPTR2",40,0)
 S $P(X,U,2)=$G(DGARRY(7))
"RTN","DGPTR2",41,0)
 S L=2,Z=2 D ENTER0
"RTN","DGPTR2",42,0)
 ; bed occupant
"RTN","DGPTR2",43,0)
 I T1 S Y=Y_$S(I=1:$E($P(DG70,U,14)_" "),$P(+DGTD,".")=$P(T2,"."):5,1:1)
"RTN","DGPTR2",44,0)
 I 'T1 S Y=Y_$S(I=1:$E($P(DG70,U,14)_" "),1:" ")
"RTN","DGPTR2",45,0)
 ;-- additional ptf questions
"RTN","DGPTR2",46,0)
 S DGAUX=$S($D(^DGPT(J,"M",I,300)):^(300),1:"")
"RTN","DGPTR2",47,0)
 D ADDQUES
"RTN","DGPTR2",48,0)
 ;-- sc related care
"RTN","DGPTR2",49,0)
 S Y=Y_$E(DGSC_" ")
"RTN","DGPTR2",50,0)
 ;-- ao related care
"RTN","DGPTR2",51,0)
 S Y=Y_$E(DGAO_" ")
"RTN","DGPTR2",52,0)
 ;-- ir related care
"RTN","DGPTR2",53,0)
 S Y=Y_$E(DGIR_" ")
"RTN","DGPTR2",54,0)
 ;-- ec related care
"RTN","DGPTR2",55,0)
 S Y=Y_$E(DGEC_" ")
"RTN","DGPTR2",56,0)
 ;-- mst related care
"RTN","DGPTR2",57,0)
 S Y=Y_$E(DGMST_" ")
"RTN","DGPTR2",58,0)
 ;-- Head/Neck CA related care
"RTN","DGPTR2",59,0)
 S Y=Y_$E(DGHNC_" ")
"RTN","DGPTR2",60,0)
 K DGAUX,DGDRUG,DGSC,DGAO,DGIR,DGEC,DGMST,DGHNC
"RTN","DGPTR2",61,0)
 D FILL,SAVE
"RTN","DGPTR2",62,0)
 Q
"RTN","DGPTR2",63,0)
535 ; -- do 535's
"RTN","DGPTR2",64,0)
 D 535^DGPTR3
"RTN","DGPTR2",65,0)
 ;
"RTN","DGPTR2",66,0)
PROC ; -- setup 601 transactions
"RTN","DGPTR2",67,0)
 K ^UTILITY($J,"PROC") S I=0
"RTN","DGPTR2",68,0)
601 S I=$O(^DGPT(J,"P",I)) G 701:I'>0 S (X,DGPROC)=^(I,0) G 601:'DGPROC
"RTN","DGPTR2",69,0)
 G 601:DGPROC<T1!(DGPROC>T2) S DGPROCD=+^DGPT(J,"P",I,0),^UTILITY($J,"PROC",DGPROCD)=$S($D(^UTILITY($J,"PROC",DGPROCD)):^(DGPROCD),1:0)+1
"RTN","DGPTR2",70,0)
 I ^UTILITY($J,"PROC",DGPROCD)>1 W !,"More than one procedure record on same date/time" S DGERR=1 Q
"RTN","DGPTR2",71,0)
 S Y=$S('T1:"N",1:"C")_"601"_DGHEAD_$E(DGPROCD,4,7)_$E(DGPROCD,2,3)_$E($P(+X,".",2)_"0000",1,4)
"RTN","DGPTR2",72,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTR2",73,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTR2",74,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(X,U,2),.DGARRY)
"RTN","DGPTR2",75,0)
 S $P(X,U,2)=$G(DGARRY(7))
"RTN","DGPTR2",76,0)
 S L=2,Z=2 D ENTER0
"RTN","DGPTR2",77,0)
 S L=1,Z=3 S $P(X,U,Z)="" D ENTER ;null dialysis type. DG729
"RTN","DGPTR2",78,0)
 S L=3,Z=4 D ENTER0
"RTN","DGPTR2",79,0)
 N EFFDATE,IMPDATE,DGPTDAT D EFFDATE^DGPTIC10(J)
"RTN","DGPTR2",80,0)
 S L=1 F K=5:1:9 S:'$P(DGPROC,U,K) DGPROC=$P(DGPROC,U,1,K-1)_U_$P(DGPROC,U,K+1,99),K=K-1 S L=L+1 Q:L=5
"RTN","DGPTR2",81,0)
 F K=5:1:9 S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+$P(DGPROC,U,K),EFFDATE,"I") D
"RTN","DGPTR2",82,0)
 . S Y=Y_$S(+DGPTTMP>0&($P(DGPTTMP,U,10)):$J($P($P(DGPTTMP,U,2),".",1),2)_$E($P($P(DGPTTMP,U,2),".",2)_"   ",1,3),1:"     ")_"  "
"RTN","DGPTR2",83,0)
 K DGPTEDT
"RTN","DGPTR2",84,0)
 D FILL,SAVE G 601
"RTN","DGPTR2",85,0)
 Q
"RTN","DGPTR2",86,0)
 ;
"RTN","DGPTR2",87,0)
701 ; -- setup 701 transaction
"RTN","DGPTR2",88,0)
 D 701^DGPTR4 Q
"RTN","DGPTR2",89,0)
 ;
"RTN","DGPTR2",90,0)
ENTER S Y=Y_$J($P(X,U,Z),L)
"RTN","DGPTR2",91,0)
 Q
"RTN","DGPTR2",92,0)
 ;
"RTN","DGPTR2",93,0)
ENTER0 S Y=Y_$S($P(X,U,Z)]"":$E("00000",$L($P(X,U,Z))+1,L)_$P(X,U,Z),1:$J($P(X,U,Z),L))
"RTN","DGPTR2",94,0)
 Q
"RTN","DGPTR2",95,0)
 ;
"RTN","DGPTR2",96,0)
SAVE ;save segment to MailMan message and ^TMP("AEDIT",$J), if data is valid
"RTN","DGPTR2",97,0)
 N DGY1,DGY2
"RTN","DGPTR2",98,0)
 S (DGY1,DGY2)=""
"RTN","DGPTR2",99,0)
 D START^DGPTR1 ;validate data in segment
"RTN","DGPTR2",100,0)
 I DGERR'>0 S DGACNT=DGACNT+1,^TMP("AEDIT",$J,$E(Y,1,4),DGACNT)=Y ;^TMP("AEDIT",$J) used by DGPTAE* for more data validation
"RTN","DGPTR2",101,0)
 ;AITC wants segment length of 384 characters.
"RTN","DGPTR2",102,0)
 ;Break the segment at 240.
"RTN","DGPTR2",103,0)
 I 'DGERR D
"RTN","DGPTR2",104,0)
 .D FILL384
"RTN","DGPTR2",105,0)
 .I $E(Y,2,4)=101 S DGY1=$E(Y,1,240),DGY2=$E(Y,241,384)
"RTN","DGPTR2",106,0)
 .I $E(Y,2,4)=401 S DGY1=$E(Y,1,240),DGY2=$E(Y,241,384)
"RTN","DGPTR2",107,0)
 .I $E(Y,2,4)=501 S DGY1=$E(Y,1,240),DGY2=$E(Y,241,384)
"RTN","DGPTR2",108,0)
 .I $E(Y,2,4)=535 S DGY1=$E(Y,1,240),DGY2=$E(Y,241,384)
"RTN","DGPTR2",109,0)
 .I $E(Y,2,4)=601 S DGY1=$E(Y,1,240),DGY2=$E(Y,241,384)
"RTN","DGPTR2",110,0)
 .I $E(Y,2,4)=701 S DGY1=$E(Y,1,240),DGY2=$E(Y,241,384)
"RTN","DGPTR2",111,0)
 .I $E(Y,2,4)=702 S DGY1=$E(Y,1,240),DGY2=$E(Y,241,384)
"RTN","DGPTR2",112,0)
 .Q:DGY1=""!(DGY2="")
"RTN","DGPTR2",113,0)
 .S ^XMB(3.9,DGXMZ,2,DGCNT,0)=DGY1,DGCNT=DGCNT+1
"RTN","DGPTR2",114,0)
 .S ^XMB(3.9,DGXMZ,2,DGCNT,0)=DGY2,DGCNT=DGCNT+1
"RTN","DGPTR2",115,0)
Q Q
"RTN","DGPTR2",116,0)
 ;
"RTN","DGPTR2",117,0)
FILL ;pad with spaces to 125 characters (so DGPTR1 data checks work)
"RTN","DGPTR2",118,0)
 F K=$L(Y):1:124 S Y=Y_" "
"RTN","DGPTR2",119,0)
 Q
"RTN","DGPTR2",120,0)
FILL384 ;pad out with spaces to 384 characters for AITC transmission
"RTN","DGPTR2",121,0)
 F K=$L(Y):1:383 S Y=Y_" "
"RTN","DGPTR2",122,0)
 S $E(Y,383)="9" ;383rd character=9 to indicate ICD9 record. DGPTRI2 sets 383rd character=1 to indicate ICD10 record.
"RTN","DGPTR2",123,0)
 Q
"RTN","DGPTR2",124,0)
 ;
"RTN","DGPTR2",125,0)
CDR S Y=Y_$E($P(Z,".")_"0000",1,4)_$E($P(Z,".",2)_"00",1,2)
"RTN","DGPTR2",126,0)
 Q
"RTN","DGPTR2",127,0)
ADDQUES ;-- additional PTF questions load records for trans 501/701
"RTN","DGPTR2",128,0)
 N DGADDQ
"RTN","DGPTR2",129,0)
 F DGADDQ=2,3,4 D  ;null results if discharge>inactive date. DG/729
"RTN","DGPTR2",130,0)
 . I +$P($G(^DIC(45.88,DGADDQ,0)),U,3) S $P(DGAUX,U,DGADDQ)=$S((+$G(^DGPT(J,70))<$P(^DIC(45.88,DGADDQ,0),U,3)):$P(DGAUX,U,DGADDQ),1:"")
"RTN","DGPTR2",131,0)
 S DGDRUG=$S($D(^DIC(45.61,+$P(DGAUX,U,4),0)):$P(^(0),U,2),1:"    ")
"RTN","DGPTR2",132,0)
 S Y=Y_$E($P(DGAUX,U,3)_" ")_$E($P(DGAUX,U,2)_" ")_$J($P(DGDRUG,U),4)
"RTN","DGPTR2",133,0)
 S Y=Y_$E($P(DGAUX,U,5)_" ")
"RTN","DGPTR2",134,0)
 S DGT=0,X=$P(DGAUX,U,6) I X]"" S DGT=1,Z=1,L=2 D ENTER0
"RTN","DGPTR2",135,0)
 I 'DGT S Y=Y_"  "
"RTN","DGPTR2",136,0)
 S DGT=0,X=$P(DGAUX,U,7) I X]"" S DGT=1,Z=1,L=2 D ENTER0
"RTN","DGPTR2",137,0)
 I 'DGT S Y=Y_"  "
"RTN","DGPTR2",138,0)
 Q
"RTN","DGPTR3")
0^79^B3570598
"RTN","DGPTR3",1,0)
DGPTR3 ;ALB/JDS/MJK/BOK,HIOFO/FT - PTF TRANSMISSION ;4/17/15 3:10pm
"RTN","DGPTR3",2,0)
 ;;5.3;Registration;**183,729,884**;Aug 13, 1993;Build 31
"RTN","DGPTR3",3,0)
 ;
"RTN","DGPTR3",4,0)
 ; no external references
"RTN","DGPTR3",5,0)
 ;
"RTN","DGPTR3",6,0)
535 ; -- setup 535 transactions
"RTN","DGPTR3",7,0)
 F I=0:0 S I=$O(^DGPT(J,535,I)) Q:'I  I $D(^(I,0)) S DGM=^(0),DGTD=+$P(DGM,U,10) I $P(DGM,U,17)'="n",'$P(DGM,U,7),'$D(^DGPT(J,"M","AM",DGTD)),DGTD'<T1,DGTD'>T2 D PHY
"RTN","DGPTR3",8,0)
 Q
"RTN","DGPTR3",9,0)
 ;
"RTN","DGPTR3",10,0)
PHY ; -- set up physical mvt
"RTN","DGPTR3",11,0)
 S Y=$S(T1:"C",1:"N")_"535"_DGHEAD,X=$P(DGTD,".")_"       ",Y=Y_$E(X,4,5)_$E(X,6,7)_$E(X,2,3)_$E($P(DGTD,".",2)_"0000",1,4)
"RTN","DGPTR3",12,0)
 ; physical cdr
"RTN","DGPTR3",13,0)
 S Z=$P(DGM,U,16) D CDR^DGPTR2
"RTN","DGPTR3",14,0)
 ; physical specialty
"RTN","DGPTR3",15,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTR3",16,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTR3",17,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(DGM,U,2),.DGARRY)
"RTN","DGPTR3",18,0)
 S $P(DGM,U,2)=$G(DGARRY(7))
"RTN","DGPTR3",19,0)
 S L=2,X=DGM,Z=2 D ENTER0
"RTN","DGPTR3",20,0)
 ; find corresponding PTF mvt
"RTN","DGPTR3",21,0)
 S X="",Z=+$O(^DGPT(J,"M","AM",DGTD-.0000001)),Z=$S(Z:+$O(^(Z,0)),1:1) I $D(^DGPT(J,"M",Z,0)) S X=^(0) ; use d/c mvt if 'Z
"RTN","DGPTR3",22,0)
 ; specialty cdr
"RTN","DGPTR3",23,0)
 S Z=$P(X,U,16) D CDR^DGPTR2
"RTN","DGPTR3",24,0)
 ; specialty
"RTN","DGPTR3",25,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTR3",26,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTR3",27,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(X,U,2),.DGARRY)
"RTN","DGPTR3",28,0)
 S $P(X,U,2)=$G(DGARRY(7))
"RTN","DGPTR3",29,0)
 S L=2,Z=2 D ENTER0
"RTN","DGPTR3",30,0)
 ; 
"RTN","DGPTR3",31,0)
 ; convert pass, leave days >999 to 999
"RTN","DGPTR3",32,0)
 S X=DGM,L=3 F Z=3,4 S:$P(X,U,Z)>999 $P(X,U,Z)=999 D ENTER0
"RTN","DGPTR3",33,0)
 D FILL^DGPTR2,SAVE
"RTN","DGPTR3",34,0)
 K DGM,X,Z,L Q
"RTN","DGPTR3",35,0)
 ;
"RTN","DGPTR3",36,0)
ENTER S Y=Y_$J($P(X,U,Z),L)
"RTN","DGPTR3",37,0)
 Q
"RTN","DGPTR3",38,0)
 ;
"RTN","DGPTR3",39,0)
ENTER0 S Y=Y_$S($P(X,U,Z)]"":$E("00000",$L($P(X,U,Z))+1,L)_$P(X,U,Z),1:$J($P(X,U,Z),L))
"RTN","DGPTR3",40,0)
 Q
"RTN","DGPTR3",41,0)
 ;
"RTN","DGPTR3",42,0)
SAVE ;
"RTN","DGPTR3",43,0)
 D SAVE^DGPTR2
"RTN","DGPTR3",44,0)
Q Q
"RTN","DGPTR4")
0^80^B21708537
"RTN","DGPTR4",1,0)
DGPTR4 ;ALB/JDS/MJK/MTC/ADL/TJ/BOK,HIOFO/FT - PTF TRANSMISSION ;5/11/15 4:52pm
"RTN","DGPTR4",2,0)
 ;;5.3;Registration;**338,423,415,510,565,645,729,664,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTR4",3,0)
 ;
"RTN","DGPTR4",4,0)
 ; ICDXCODE APIs - #5699
"RTN","DGPTR4",5,0)
 ;
"RTN","DGPTR4",6,0)
701 ; -- setup 701 transaction
"RTN","DGPTR4",7,0)
 S Y=$S(T1:"C",1:"N")_"701"_DGHEAD,DGDDX=$P(+DG70,".")_"       ",Y=Y_$E(DGDDX,4,5)_$E(DGDDX,6,7)_$E(DGDDX,2,3)_$E($P(+DG70,".",2)_"0000",1,4)
"RTN","DGPTR4",8,0)
 S X=DG70
"RTN","DGPTR4",9,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTR4",10,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTR4",11,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(X,U,2),.DGARRY)
"RTN","DGPTR4",12,0)
 S $P(X,U,2)=$G(DGARRY(7))
"RTN","DGPTR4",13,0)
 S (L,Z)=2 D ENTER0 K DGDDX
"RTN","DGPTR4",14,0)
 S X=DG70 I "467"[($P(X,U,3)\1) S Y=Y_$P(X,U,3)_"         " G J
"RTN","DGPTR4",15,0)
 S L=1 F Z=3:1:5 D ENTER
"RTN","DGPTR4",16,0)
 S Y=Y_$S($D(^DIC(45.6,+$P(X,U,6),0)):$P(^(0),U,2),1:" "),L=3,Z=12 D ENTER S Y=Y_$E($P(X,U,13)_"   ",1,3)
"RTN","DGPTR4",17,0)
J S L=3,Z=8 D ENTER0
"RTN","DGPTR4",18,0)
 S Y=Y_"X"_$J($P(DG70,U,9),1)
"RTN","DGPTR4",19,0)
 N EFFDATE,IMPDATE,DGPTDAT D EFFDATE^DGPTIC10(J)
"RTN","DGPTR4",20,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(DG70,U,10),EFFDATE,"I")
"RTN","DGPTR4",21,0)
 S DGXLS=$S(+DGPTTMP>0&($P(DGPTTMP,U,10)):$P(DGPTTMP,U,2),1:""),Y=Y_$S(DGXLS[".":$J($P(DGXLS,".",1),3)_$E($P(DGXLS,".",2)_"   ",1,3),1:$J(DGXLS,6))_" "
"RTN","DGPTR4",22,0)
 S L=$P(DG70,U,16,24)_U_DG71 S DG702=""
"RTN","DGPTR4",23,0)
 F K=1:1:12 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(L,U,K),EFFDATE,"I") I +DGPTTMP>0&($P(DGPTTMP,U,10)) S DG702=DG702_$P(DGPTTMP,U,2)_U
"RTN","DGPTR4",24,0)
 S Y=Y_$S(DG702']"":"X",1:" ")
"RTN","DGPTR4",25,0)
 ; -- get phy cdr @ d/c
"RTN","DGPTR4",26,0)
 S X="",Z=+$O(^DGPT(J,535,"AM",DG70-.0000001)) I $D(^DGPT(J,535,+$O(^(Z,0)),0)) S X=^(0)
"RTN","DGPTR4",27,0)
 ; -- set phy cdr
"RTN","DGPTR4",28,0)
 S Z=$P(X,U,16) D CDR
"RTN","DGPTR4",29,0)
 ; -- set phy spec
"RTN","DGPTR4",30,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTR4",31,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTR4",32,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(X,U,2),.DGARRY)
"RTN","DGPTR4",33,0)
 S $P(X,U,2)=$G(DGARRY(7))
"RTN","DGPTR4",34,0)
 S L=2,Z=2 D ENTER0
"RTN","DGPTR4",35,0)
 S X=$S($P(DG3,U)="Y":$$RTEN($P(DG3,U,2)),1:"0"),L=3,Z=1 D ENTER0
"RTN","DGPTR4",36,0)
 ;-- additional ptf questions
"RTN","DGPTR4",37,0)
 S DGAUX=$S($D(^DGPT(J,300)):^(300),1:"")
"RTN","DGPTR4",38,0)
 D ADDQUES
"RTN","DGPTR4",39,0)
 K DGAUX,DGDRUG
"RTN","DGPTR4",40,0)
 ;-- sc,ao,ir,ec questions
"RTN","DGPTR4",41,0)
 S X=DG70
"RTN","DGPTR4",42,0)
 ;-- sc
"RTN","DGPTR4",43,0)
 S Y=Y_$E($P(DG70,U,25)_" ")
"RTN","DGPTR4",44,0)
 ;-- ao
"RTN","DGPTR4",45,0)
 S Y=Y_$E($P(DG70,U,26)_" ")
"RTN","DGPTR4",46,0)
 ;-- ir
"RTN","DGPTR4",47,0)
 S Y=Y_$E($P(DG70,U,27)_" ")
"RTN","DGPTR4",48,0)
 ;-- SW Asia conditions/ec
"RTN","DGPTR4",49,0)
 S Y=Y_$E($P(DG70,U,28)_" ")
"RTN","DGPTR4",50,0)
 ;-- mst
"RTN","DGPTR4",51,0)
 S Y=Y_$E($P(DG70,U,29)_" ")
"RTN","DGPTR4",52,0)
 ;-- Head/Neck CA
"RTN","DGPTR4",53,0)
 S Y=Y_$E($P(DG70,U,30)_" ")
"RTN","DGPTR4",54,0)
 D ETHNIC
"RTN","DGPTR4",55,0)
 D RACE
"RTN","DGPTR4",56,0)
 ;Combat vet
"RTN","DGPTR4",57,0)
 S Y=Y_$E($P(DG70,U,31)_" ")
"RTN","DGPTR4",58,0)
 ;Project 112/SHAD
"RTN","DGPTR4",59,0)
 S Y=Y_$E($P(DG70,U,32)_" ")
"RTN","DGPTR4",60,0)
 D FILL^DGPTR2 ;pad to 125 characters
"RTN","DGPTR4",61,0)
 I T1 F K=41:1:55,65:1:73 S $E(Y,K)=" " ;send spaces if census
"RTN","DGPTR4",62,0)
 I T1 D CEN^DGPTR1 D:'DGERR SAVE70X Q
"RTN","DGPTR4",63,0)
 I 'T1 D SAVE
"RTN","DGPTR4",64,0)
702 ;
"RTN","DGPTR4",65,0)
 Q:DG702']""
"RTN","DGPTR4",66,0)
 S Y="N702"_$E(Y,5,40)
"RTN","DGPTR4",67,0)
 F K=1:1:12 S F=$P(DG702,U,K),F=$P(F,".",1)_$E($P(F,".",2)_"   ",1,3),F=F_$E("      ",1,7-$L(F)),Y=Y_F
"RTN","DGPTR4",68,0)
 D FILL^DGPTR2 ;pad to 125 characters
"RTN","DGPTR4",69,0)
 I 'DGERR D SAVE70X
"RTN","DGPTR4",70,0)
 I DGERR'>0 S DGACNT=DGACNT+1,^TMP("AEDIT",$J,$E(Y,1,4),DGACNT)=Y
"RTN","DGPTR4",71,0)
 S DG702=$P(DG702,U,6,9)
"RTN","DGPTR4",72,0)
 Q
"RTN","DGPTR4",73,0)
 ;
"RTN","DGPTR4",74,0)
ENTER S Y=Y_$J($P(X,U,Z),L)
"RTN","DGPTR4",75,0)
 Q
"RTN","DGPTR4",76,0)
 ;
"RTN","DGPTR4",77,0)
ENTER0 S Y=Y_$S($P(X,U,Z)]"":$E("00000",$L($P(X,U,Z))+1,L)_$P(X,U,Z),1:$J($P(X,U,Z),L))
"RTN","DGPTR4",78,0)
 Q
"RTN","DGPTR4",79,0)
 ;
"RTN","DGPTR4",80,0)
SAVE ;validate data and save to MailMan message & ^TMP("AEDIT",$J)
"RTN","DGPTR4",81,0)
 D SAVE^DGPTR2
"RTN","DGPTR4",82,0)
Q ;
"RTN","DGPTR4",83,0)
 Q
"RTN","DGPTR4",84,0)
SAVE70X ;pad with spaces, set 383rd character & save to MailMan message.
"RTN","DGPTR4",85,0)
 N DGY1,DGY2
"RTN","DGPTR4",86,0)
 D FILL384^DGPTR2
"RTN","DGPTR4",87,0)
 S DGY1=$E(Y,1,240),DGY2=$E(Y,241,384)
"RTN","DGPTR4",88,0)
 S ^XMB(3.9,DGXMZ,2,DGCNT,0)=DGY1,DGCNT=DGCNT+1
"RTN","DGPTR4",89,0)
 S ^XMB(3.9,DGXMZ,2,DGCNT,0)=DGY2,DGCNT=DGCNT+1
"RTN","DGPTR4",90,0)
 Q
"RTN","DGPTR4",91,0)
 ;
"RTN","DGPTR4",92,0)
CDR S Y=Y_$E($P(Z,".")_"0000",1,4)_$E($P(Z,".",2)_"00",1,2)
"RTN","DGPTR4",93,0)
 Q
"RTN","DGPTR4",94,0)
ADDQUES ;-- additional PTF questions load records for trans 501/701
"RTN","DGPTR4",95,0)
 N DGADDQ
"RTN","DGPTR4",96,0)
 F DGADDQ=2,3,4 D  ;null results if discharge>inactive date. DG/729
"RTN","DGPTR4",97,0)
 . I +$P($G(^DIC(45.88,DGADDQ,0)),U,3) S $P(DGAUX,U,DGADDQ)=$S((+$G(^DGPT(J,70))<$P(^DIC(45.88,DGADDQ,0),U,3)):$P(DGAUX,U,DGADDQ),1:"")
"RTN","DGPTR4",98,0)
 S DGDRUG=$S($D(^DIC(45.61,+$P(DGAUX,U,4),0)):$P(^(0),U,2),1:"    ")
"RTN","DGPTR4",99,0)
 S Y=Y_$E($P(DGAUX,U,3)_" ")_$E($P(DGAUX,U,2)_" ")_$J($P(DGDRUG,U),4)
"RTN","DGPTR4",100,0)
 S Y=Y_$E($P(DGAUX,U,5)_" ")
"RTN","DGPTR4",101,0)
 S DGT=0,X=$P(DGAUX,U,6) I X]"" S DGT=1,Z=1,L=2 D ENTER0
"RTN","DGPTR4",102,0)
 I 'DGT S Y=Y_"  "
"RTN","DGPTR4",103,0)
 S DGT=0,X=$P(DGAUX,U,7) I X]"" S DGT=1,Z=1,L=2 D ENTER0
"RTN","DGPTR4",104,0)
 I 'DGT S Y=Y_"  "
"RTN","DGPTR4",105,0)
 Q
"RTN","DGPTR4",106,0)
RTEN(X) ; This function will round X to the nearest multiple of ten.
"RTN","DGPTR4",107,0)
 ; 0-4 ->DOWN; 5-9->UP
"RTN","DGPTR4",108,0)
 Q (X\10)*10+$S(X#10>4:10,1:0)
"RTN","DGPTR4",109,0)
ETHNIC ;-- Ethnicity (use first active value)
"RTN","DGPTR4",110,0)
 N NODE,NUM,ETHNIC,I,X
"RTN","DGPTR4",111,0)
 S ETHNIC=""
"RTN","DGPTR4",112,0)
 S I=0
"RTN","DGPTR4",113,0)
 S NUM=1
"RTN","DGPTR4",114,0)
 F  S I=+$O(DG06(I)) Q:'I  D  Q:NUM>1
"RTN","DGPTR4",115,0)
 .S NODE=$G(DG06(I,0))
"RTN","DGPTR4",116,0)
 .Q:('NODE)!('$D(^DIC(10.2,+NODE,0)))
"RTN","DGPTR4",117,0)
 .Q:$$INACTIVE^DGUTL4(+NODE,2)
"RTN","DGPTR4",118,0)
 .S X=$$PTR2CODE^DGUTL4(+NODE,2,4)
"RTN","DGPTR4",119,0)
 .S ETHNIC=$S(X="":" ",1:X)
"RTN","DGPTR4",120,0)
 .S X=$$PTR2CODE^DGUTL4(+$P(NODE,"^",2),3,4)
"RTN","DGPTR4",121,0)
 .S ETHNIC=ETHNIC_$S(X="":" ",1:X)
"RTN","DGPTR4",122,0)
 .S NUM=NUM+1
"RTN","DGPTR4",123,0)
 S Y=Y_$S(ETHNIC="":"  ",1:ETHNIC)
"RTN","DGPTR4",124,0)
 Q
"RTN","DGPTR4",125,0)
RACE ;-- Race (use first 6 active values)
"RTN","DGPTR4",126,0)
 N NODE,NUM,RACE,I,X
"RTN","DGPTR4",127,0)
 S RACE=""
"RTN","DGPTR4",128,0)
 S I=0
"RTN","DGPTR4",129,0)
 S NUM=1
"RTN","DGPTR4",130,0)
 F  S I=+$O(DG02(I)) Q:'I  D  Q:NUM>6
"RTN","DGPTR4",131,0)
 .S NODE=$G(DG02(I,0))
"RTN","DGPTR4",132,0)
 .Q:('NODE)!('$D(^DIC(10,+NODE,0)))
"RTN","DGPTR4",133,0)
 .Q:$$INACTIVE^DGUTL4(+NODE)
"RTN","DGPTR4",134,0)
 .S X=$$PTR2CODE^DGUTL4(+NODE,1,4)
"RTN","DGPTR4",135,0)
 .S RACE=RACE_$S(X="":" ",1:X)
"RTN","DGPTR4",136,0)
 .S X=$$PTR2CODE^DGUTL4(+$P(NODE,"^",2),3,4)
"RTN","DGPTR4",137,0)
 .S RACE=RACE_$S(X="":" ",1:X)
"RTN","DGPTR4",138,0)
 .S NUM=NUM+1
"RTN","DGPTR4",139,0)
 S X="" S $P(X," ",12)=""
"RTN","DGPTR4",140,0)
 S RACE=$S(RACE="":"  ",1:RACE)_X
"RTN","DGPTR4",141,0)
 S Y=Y_$E(RACE,1,12)
"RTN","DGPTR4",142,0)
 Q
"RTN","DGPTRI0")
0^70^B27141499
"RTN","DGPTRI0",1,0)
DGPTRI0 ;MJK/JS/ADL/TJ,ISF/GJW,HIOFO/FT - PTF TRANSMISSION ;4/9/15 2:57pm
"RTN","DGPTRI0",2,0)
 ;;5.3;Registration;**850,884**;Aug 13, 1993;Build 31
"RTN","DGPTRI0",3,0)
 ;;ADL;Update for CSV Project;;Mar 27, 2003
"RTN","DGPTRI0",4,0)
 ;
"RTN","DGPTRI0",5,0)
 ; ICDXCODE APIs - 5699
"RTN","DGPTRI0",6,0)
 ; SDCO22 APIs - 1579
"RTN","DGPTRI0",7,0)
 ; XLFSTR APIs - 10104
"RTN","DGPTRI0",8,0)
 ;
"RTN","DGPTRI0",9,0)
 ; -- setup control data
"RTN","DGPTRI0",10,0)
 ; ssn
"RTN","DGPTRI0",11,0)
 S X=$P(DG10,U,9),Y=$S($E(X,10)="P":"P",1:" ")_$E(X_"         ",1,9)
"RTN","DGPTRI0",12,0)
 ; -- adm d/t
"RTN","DGPTRI0",13,0)
 S X=$P($P(DG0,U,2),"."),Y=Y_$E(X,4,5)_$E(X,6,7)_$E(X,2,3)_$E($P($P(DG0,U,2),".",2)_"0000",1,4)
"RTN","DGPTRI0",14,0)
 ; -- facility #
"RTN","DGPTRI0",15,0)
 S L=3,X=DG0,Z=3 D ENTER S Y=Y_$E($P(X,U,5)_"   ",1,3)
"RTN","DGPTRI0",16,0)
 S DGHEAD=Y,Y="    "_Y D HEAD^DGPTRI1
"RTN","DGPTRI0",17,0)
 ;
"RTN","DGPTRI0",18,0)
101 ; -- setup 101 transmission
"RTN","DGPTRI0",19,0)
 ; control data and name
"RTN","DGPTRI0",20,0)
 S $E(Y,1,30)=$S(T1:"C",1:"N")_"101"_DGHEAD
"RTN","DGPTRI0",21,0)
 S $E(Y,31,44)=$$PTFNMFT($P(DG10,U))
"RTN","DGPTRI0",22,0)
 ; source of admission - $E(Y,45,46)
"RTN","DGPTRI0",23,0)
 S $E(Y,45,46)=$S($D(^DIC(45.1,+DG101,0)):$J($P(^(0),U,1),2),1:"  ")
"RTN","DGPTRI0",24,0)
 ; xfring fac and suffix - $E(Y,47,49) & $E(Y,50,52)
"RTN","DGPTRI0",25,0)
 S L=3,X=DG101,Z=5 D FORMAT S $E(Y,47,49)=DGVALUE S $E(Y,50,52)=$E($P(X,U,6)_"   ",1,3)
"RTN","DGPTRI0",26,0)
 ; source of payment - $E(Y,53)
"RTN","DGPTRI0",27,0)
 S $E(Y,53)=$S("A0"[$P(DG0,U,5):" ",1:$J($P(DG101,U,3),1))
"RTN","DGPTRI0",28,0)
 ;POW Location $E(Y,54)
"RTN","DGPTRI0",29,0)
 S $E(Y,54)=$S($P(DG52,U,5)="N":1,$P(DG52,U,5)'="Y":3,$P(DG52,U,6)>0&($P(DG52,U,6)<7):3+$P(DG52,U,6),$P(DG52,U,6)>6&($P(DG52,U,6)<9):$C($P(DG52,U,6)+58),1:" ")
"RTN","DGPTRI0",30,0)
 ;marital status, sex - $E(Y,55) & $E(Y,56)
"RTN","DGPTRI0",31,0)
 S $E(Y,55,56)=$S($D(^DIC(11,+$P(DG10,U,5),0)):$E(^(0),1),1:" ")_$J($P(DG10,U,2),1)
"RTN","DGPTRI0",32,0)
 ;  date of birth - $E(Y,57,64)
"RTN","DGPTRI0",33,0)
 S DGDOB=$P(DG10,U,3)\1,$E(Y,57,64)=$E(DGDOB,4,5)_$E(DGDOB,6,7)_(1700+$E(DGDOB,1,3))
"RTN","DGPTRI0",34,0)
 S $E(Y,65)=" " ;blank, not used
"RTN","DGPTRI0",35,0)
 ; period of service - $E(Y,66)
"RTN","DGPTRI0",36,0)
 S DGPOS=$S($D(^DIC(21,+$P(DG32,U,3),0)):$P(^(0),U,3),1:"")
"RTN","DGPTRI0",37,0)
 I $D(^DGPM(+$O(^DGPM("APTF",J,0)),"ODS")),+^("ODS") S DGPOS=6
"RTN","DGPTRI0",38,0)
 ;-- if non vet admitting eligibility make POS 9
"RTN","DGPTRI0",39,0)
 S DGPOS=$$CKPOS^DGPTUTL($P($G(^DGPT(PTF,101)),U,8),DGPOS)
"RTN","DGPTRI0",40,0)
 S X=DGPOS,Z=1,L=1 D FORMAT S $E(Y,66)=DGVALUE
"RTN","DGPTRI0",41,0)
 ; agent orange - $E(Y,67)
"RTN","DGPTRI0",42,0)
 S G=" " S DGAO=$P(DG321,U,2) S:DGPOS=7 G=$S($P(DG321,U)'="Y":1,DGAO="N":2,DGAO="Y":3,1:4) S:(DGAO="Y")&($P(DG321,U,13)="K") G=5
"RTN","DGPTRI0",43,0)
 ; rad exposure - $E(Y,68)
"RTN","DGPTRI0",44,0)
 ;patch 884 - use the correct numeric codes (from the DD)
"RTN","DGPTRI0",45,0)
 S E=" " I "^0^2^4^5^7^8^Z^"[(U_DGPOS_U) S (E,DGNT)=$P(DG321,U,12)
"RTN","DGPTRI0",46,0)
 S $E(Y,67,68)=G_E K DGPOS,G,E
"RTN","DGPTRI0",47,0)
 ; state code - $E(Y,69,70)
"RTN","DGPTRI0",48,0)
 S X=$S($D(^DIC(5,+$P(DG11,U,5),0)):^(0),1:""),L=2,Z=3 D FORMAT0 S $E(Y,69,70)=DGVALUE0
"RTN","DGPTRI0",49,0)
 ; county code - $E(Y,71,73)
"RTN","DGPTRI0",50,0)
 S X=$S($D(^DIC(5,+$P(DG11,U,5),1,+$P(DG11,U,7),0)):^(0),1:""),L=3,Z=3 D FORMAT0 S $E(Y,71,73)=DGVALUE0
"RTN","DGPTRI0",51,0)
 ; zip code - $E(Y,74,78)
"RTN","DGPTRI0",52,0)
 S X=DG11,Z=6,L=5 D FORMAT S $E(Y,74,78)=DGVALUE
"RTN","DGPTRI0",53,0)
 ; means test - $E(Y,79,80)
"RTN","DGPTRI0",54,0)
 S $E(Y,79,80)=$S($P(DG70,U,26)="Y":"AS",1:$E($P(DG0,U,10)_"  ",1,2))
"RTN","DGPTRI0",55,0)
 ; income - $E(Y,81,86)
"RTN","DGPTRI0",56,0)
 I $L($P(DG101,U,7))>6 S $E(Y,81,86)="999999"
"RTN","DGPTRI0",57,0)
 E  S X=DG101,Z=7,L=6 D FORMAT0 S $E(Y,81,86)=DGVALUE0
"RTN","DGPTRI0",58,0)
 ;MST - $E(Y,87)
"RTN","DGPTRI0",59,0)
 S X=$$GETSTAT^DGMSTAPI(+DG0) S $E(Y,87)=$S(X<0:"U",1:$P(X,"^",2))
"RTN","DGPTRI0",60,0)
 ;Combat Vet $E(Y,88) & $E(Y,89,94)
"RTN","DGPTRI0",61,0)
 S X=$$CVEDT^DGCV(+DG0,$P(DG0,"^",2)) S $E(Y,88)=$S((+X)>0:1,1:0)
"RTN","DGPTRI0",62,0)
 S X=$P(X,"^",2)_"       " S $E(Y,89,94)=$E(X,4,5)_$E(X,6,7)_$E(X,2,3)
"RTN","DGPTRI0",63,0)
 ;Project 112/SHAD - $E(Y,95)
"RTN","DGPTRI0",64,0)
 S X=$$SHAD^SDCO22(+DG0) S $E(Y,95)=$S((+X)>0:1,1:0)
"RTN","DGPTRI0",65,0)
 ;Emergency Response Indicator - $E(Y,96)
"RTN","DGPTRI0",66,0)
 S X=$$EMGRES^DGUTL(+DG0) S $E(Y,96)=$S("^K^"[(U_X_U):X,1:" ")
"RTN","DGPTRI0",67,0)
 ;Country Code - $E(Y,97,99)
"RTN","DGPTRI0",68,0)
 S X=$$GET1^DIQ(779.004,$P(DG11,U,10)_",",.01),Z=1,L=3 D FORMAT S $E(Y,97,99)=DGVALUE
"RTN","DGPTRI0",69,0)
 ;[RESERVED] - $E(Y,100,112)
"RTN","DGPTRI0",70,0)
 ;[NOT ALLOCATED] - $E(Y,113,384)
"RTN","DGPTRI0",71,0)
 K DGVALUE,DGVALUE0
"RTN","DGPTRI0",72,0)
 D SAVE
"RTN","DGPTRI0",73,0)
 I T1 S Y=$E(Y,53)=" " ;resets SOURCE OF PAYMENT to space
"RTN","DGPTRI0",74,0)
 ;
"RTN","DGPTRI0",75,0)
401 ; -- setup 401 transactions (402 and 403 are no longer used. All surgeries are 401 segments.)
"RTN","DGPTRI0",76,0)
 G 501:'$D(^DGPT(J,"S")) K ^UTILITY($J,"S") S I=0
"RTN","DGPTRI0",77,0)
SUR ;
"RTN","DGPTRI0",78,0)
 S I=$O(^DGPT(J,"S",I)) G 501:'I
"RTN","DGPTRI0",79,0)
 S DGSUR=^DGPT(J,"S",I,0)
"RTN","DGPTRI0",80,0)
 G SUR:'DGSUR
"RTN","DGPTRI0",81,0)
 G SUR:DGSUR<T1!(DGSUR>T2) S DGSUD=+^(0)\1,^UTILITY($J,"S",DGSUD)=$S($D(^UTILITY($J,"S",DGSUD)):^(DGSUD),1:0)+1,F=$S(DGSUD<2871000:0,1:1) ;^(0) references global 2 lines above
"RTN","DGPTRI0",82,0)
 ;
"RTN","DGPTRI0",83,0)
 I ^UTILITY($J,"S",DGSUD)>$S(F:3,1:2) D  I Y'=1 S DGERR=1 Q
"RTN","DGPTRI0",84,0)
 .W !,"**There are more than ",$S(F:"three",1:"two")," surgeries on the same date**"
"RTN","DGPTRI0",85,0)
 .S DIR(0)="Y",DIR("B")="YES",DIR("A")="OK to continue?" D ^DIR K DIR
"RTN","DGPTRI0",86,0)
 ;
"RTN","DGPTRI0",87,0)
 ;header, date of surgery followed by SPECIALTY - $E(Y,41,42)
"RTN","DGPTRI0",88,0)
 S Y=$S(T1:"C",1:"N")_"401"_DGHEAD_$E(DGSUD,4,5)_$E(DGSUD,6,7)_$E(DGSUD,2,3)_$E($P(+DGSUR,".",2)_"0000",1,4)_$S($D(^DIC(45.3,+$P(DGSUR,U,3),0)):$P(^(0),U,1),1:"  ")
"RTN","DGPTRI0",89,0)
 ;4 is CATEGORY OF CHIEF SURGEON - $E(Y,43)
"RTN","DGPTRI0",90,0)
 ;5 is CATEGORY OF FIRST ASSISTANT - $E(Y,44)
"RTN","DGPTRI0",91,0)
 ;6 is ANESTHESIA TECHNIQUE (PRINCIPAL) - $E(Y,45)
"RTN","DGPTRI0",92,0)
 ;7 is SOURCE OF PAYMENT - $E(Y,46)
"RTN","DGPTRI0",93,0)
 S L=1,X=DGSUR F Z=4:1:7 D ENTER
"RTN","DGPTRI0",94,0)
 N EFFDATE,IMPDATE,DGPTDAT D EFFDATE^DGPTIC10(J)
"RTN","DGPTRI0",95,0)
 ;operation codes 1 - 25 - $E(Y,47,246)
"RTN","DGPTRI0",96,0)
 N DG401CODES,DGLOOP,DGOCODE,DGSTRING,DGPTTMP
"RTN","DGPTRI0",97,0)
 D PTFICD^DGPTFUT(401,J,I,.DG401CODES) ;get procedure values
"RTN","DGPTRI0",98,0)
 S DGLOOP=0,DGSTRING=""
"RTN","DGPTRI0",99,0)
 F  S DGLOOP=$O(DG401CODES(DGLOOP)) Q:DGLOOP=""  D
"RTN","DGPTRI0",100,0)
 .S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",$P(DG401CODES(DGLOOP),U,1),EFFDATE,"I") ;check data
"RTN","DGPTRI0",101,0)
 .Q:+DGPTTMP'>0  ;don't use if bad
"RTN","DGPTRI0",102,0)
 .S DGOCODE=$P(DG401CODES(DGLOOP),U,3) ;external value
"RTN","DGPTRI0",103,0)
 .S DGSTRING=DGSTRING_DGOCODE_" " ;append space to pad to 8 characters
"RTN","DGPTRI0",104,0)
 S $E(Y,47,246)=DGSTRING_$$REPEAT^XLFSTR(" ",200-$L(DGSTRING))
"RTN","DGPTRI0",105,0)
 ;-- att phy [NOT ACTIVATED - $E(Y,247,256)]
"RTN","DGPTRI0",106,0)
 S $E(Y,247,256)="         "
"RTN","DGPTRI0",107,0)
 ;[RESERVED - $E(Y,256,290)]
"RTN","DGPTRI0",108,0)
 ;[NOT ALLOCATED - $E(Y,291,384)] 
"RTN","DGPTRI0",109,0)
 D SAVE G SUR
"RTN","DGPTRI0",110,0)
501 G 501^DGPTRI2
"RTN","DGPTRI0",111,0)
 Q
"RTN","DGPTRI0",112,0)
FORMAT ;format value
"RTN","DGPTRI0",113,0)
 S DGVALUE=$J($P(X,U,Z),L)
"RTN","DGPTRI0",114,0)
 Q
"RTN","DGPTRI0",115,0)
FORMAT0 ;format value with zeros
"RTN","DGPTRI0",116,0)
 S DGVALUE0=$S($P(X,U,Z)]"":$E("000000",$L($P(X,U,Z))+1,L)_$P(X,U,Z),1:$J($P(X,U,Z),L))
"RTN","DGPTRI0",117,0)
 Q
"RTN","DGPTRI0",118,0)
 ;
"RTN","DGPTRI0",119,0)
ENTER S Y=Y_$J($P(X,U,Z),L)
"RTN","DGPTRI0",120,0)
 Q
"RTN","DGPTRI0",121,0)
ENTER0 S Y=Y_$S($P(X,U,Z)]"":$E("000000",$L($P(X,U,Z))+1,L)_$P(X,U,Z),1:$J($P(X,U,Z),L))
"RTN","DGPTRI0",122,0)
 Q
"RTN","DGPTRI0",123,0)
SAVE ;
"RTN","DGPTRI0",124,0)
 D SAVE^DGPTRI2
"RTN","DGPTRI0",125,0)
Q Q
"RTN","DGPTRI0",126,0)
DGNAM S X=DGNAM I X?.E.P F I=1:1:$L(X) S Z=$E(X,I) Q:Z=","  S:Z?.P&(Z]"") X=$E(X,1,I-1)_$E(X,I+1,$L(X)),I=I-1 Q:X'?.E.P
"RTN","DGPTRI0",127,0)
 I X?.E.L D UP^DGHELP
"RTN","DGPTRI0",128,0)
 S DGNAM=X
"RTN","DGPTRI0",129,0)
 Q
"RTN","DGPTRI0",130,0)
 ;
"RTN","DGPTRI0",131,0)
PTFNMFT(DG10) ;this function will format the name of the patient for
"RTN","DGPTRI0",132,0)
 ; transmission of the 101 record to Austin. In addition, this
"RTN","DGPTRI0",133,0)
 ; function will be used by OPC so that the format will be consistent
"RTN","DGPTRI0",134,0)
 ; for OPC and PTF.
"RTN","DGPTRI0",135,0)
 ;  INPUT :   DG10 - .01 field from the patient record.
"RTN","DGPTRI0",136,0)
 ;  OUTPUT:   name in the format proper format.
"RTN","DGPTRI0",137,0)
 ;        A = <12 - characters of last name padded with blanks>
"RTN","DGPTRI0",138,0)
 ;        B = <1  - first initial of fist name>
"RTN","DGPTRI0",139,0)
 ;        C = <1  - first initial of middle name>
"RTN","DGPTRI0",140,0)
 ;      returns :ABC <14 - characters>
"RTN","DGPTRI0",141,0)
 N X,I
"RTN","DGPTRI0",142,0)
 S DGNAM=DG10 D DGNAM
"RTN","DGPTRI0",143,0)
 Q $E($P(DGNAM,",",1)_"           ",1,12)_$J($E($P(DGNAM,",",2),1),1)_$J($E($P($P(DGNAM,",",2)," ",2),1),1)
"RTN","DGPTRI1")
0^71^B45682125
"RTN","DGPTRI1",1,0)
DGPTRI1 ;ALB/MTC,HIOFO/FT - PTF VERIFICATION ;07/21/2015  7:14 AM
"RTN","DGPTRI1",2,0)
 ;;5.3;Registration;**850,884**;Aug 13, 1993;Build 31
"RTN","DGPTRI1",3,0)
 ;;Updated DGPTR1 for ICD-10 Transmission;;2/28/2012 - 850
"RTN","DGPTRI1",4,0)
 ;
"RTN","DGPTRI1",5,0)
 ;no external references
"RTN","DGPTRI1",6,0)
 ;
"RTN","DGPTRI1",7,0)
START ; Called from other DGPTRI* routines to do data validation and display errors
"RTN","DGPTRI1",8,0)
 ;How this validation works:
"RTN","DGPTRI1",9,0)
 ; Y is the segment (e.g., 101, 401) character string
"RTN","DGPTRI1",10,0)
 ; Figure out which segment it is. Characters 2 & 3 will be either 10, 40, 50, 53, 60 or 70. (i.e., T)
"RTN","DGPTRI1",11,0)
 ; Set ERR to a text line (e.g., T10) which has the field order and name in the segment. (e.g., 1:NAME)
"RTN","DGPTRI1",12,0)
 ; The patient name is the first field to be checked.
"RTN","DGPTRI1",13,0)
 ; Set W to a text line (e.g., 10) which has four numbers delimited by semi-colons for each "^" piece.
"RTN","DGPTRI1",14,0)
 ; Each "^" piece corresponds to a field in the segment string (Y). There can be more than one "^" piece 
"RTN","DGPTRI1",15,0)
 ; for each field.
"RTN","DGPTRI1",16,0)
 ; Set F to the first character of the segment to begin checking.
"RTN","DGPTRI1",17,0)
 ; The characters prior to 31 are "Control Data" values such as SSN and Admission Date/Time.
"RTN","DGPTRI1",18,0)
 ; DO L which loops through the various text lines such as T10 and 10 and validate the characters with
"RTN","DGPTRI1",19,0)
 ; pattern match code defined in the LOGIC subroutine.
"RTN","DGPTRI1",20,0)
 ; If the pattern match fails, the ERR subroutine is called and an error message is written to the screen.
"RTN","DGPTRI1",21,0)
 ; Finally, do any Dnn subroutines which have additional checks.
"RTN","DGPTRI1",22,0)
 ;
"RTN","DGPTRI1",23,0)
 Q:$E(Y,2,4)=702  ;come back to?
"RTN","DGPTRI1",24,0)
 S T=$E(Y,2,3) ;determine segment
"RTN","DGPTRI1",25,0)
 S ERR=$P($T(@("T"_T)),";;",2,999),W=$P($T(@(T)),";;",2,999),F=31 D L
"RTN","DGPTRI1",26,0)
 I T=70 S ERR=$P($T(T701),";;",2,999),W=$P($T(701),";;",2,999),F=73 D L
"RTN","DGPTRI1",27,0)
 D @("D"_T) Q
"RTN","DGPTRI1",28,0)
 K DGFILL
"RTN","DGPTRI1",29,0)
 Q
"RTN","DGPTRI1",30,0)
 ;
"RTN","DGPTRI1",31,0)
L ;
"RTN","DGPTRI1",32,0)
 ;$P(DG11,U,10) is FILE 2, Field .1173 which is COUNTRY [10P:779.004]
"RTN","DGPTRI1",33,0)
 N DGFOR S DGFOR=$S($$FORIEN^DGADDUTL($P(DG11,U,10))<1:0,1:1) ;set foreign country flag =1, else, set as domestic
"RTN","DGPTRI1",34,0)
 F H=1:1 S DGO=$P(W,U,H) Q:'DGO  D  ;find out how many values in the segment you want to validate
"RTN","DGPTRI1",35,0)
 . F Z=1:1:$P(DGO,";",3) D  ;Find out how many characters are in the value you want to validate
"RTN","DGPTRI1",36,0)
 .. S DGL=DGLOGIC(+DGO) ;get the pattern match needed to check the character(s)
"RTN","DGPTRI1",37,0)
 .. S X=$E(Y,F) ;get the character to validate
"RTN","DGPTRI1",38,0)
 .. D @("ERR:"_DGL) ;if the character fails the pattern match, call ERR to display a message
"RTN","DGPTRI1",39,0)
 .. S F=F+1 ;increment F to get the next character in the segment
"RTN","DGPTRI1",40,0)
 Q
"RTN","DGPTRI1",41,0)
 ;
"RTN","DGPTRI1",42,0)
 ;The Tnn lines have the SEQUENCE #:FIELD NAME for all of the fields in that segment.
"RTN","DGPTRI1",43,0)
 ;e.g., '1:NAME' is the patient NAME and it is the first field in the 101 segment. SOURCE OF ADM(ISSION) is the second and so on
"RTN","DGPTRI1",44,0)
 ; 101 segment
"RTN","DGPTRI1",45,0)
T10 ;;1:NAME^2:SOURCE OF ADM^3:TRANS FAC.^4:SOURCE OF PAY^5:POW^6:MARITAL ST^7:SEX^8:DOB^9:POS^10:VIETNAM^11:ION RADIATION^12:RESIDENCE^13:MEANS TEST^14:INCOME^15:MST^16:COMBAT VET^17:CV END DT^18:PROJ 112/SHAD^19:ERI^20:COUNTRY
"RTN","DGPTRI1",46,0)
 ; 701 segment (part 1)
"RTN","DGPTRI1",47,0)
T70 ;;1:DT OF DISP.^2:DISCH BD SEC^3:TYPE OF DIS^4:OUT TREAT^5:VA AUS^6:PL OF DIS^7:REC FAC^8:ASIH DAYS^9:RACE^10:C&P STAT^11:PDXLS^12:ONLY DX^13:PHY MPCR
"RTN","DGPTRI1",48,0)
 ; T701 segment (part 2)
"RTN","DGPTRI1",49,0)
T701 ;;1:PHY SPEC^2:%SC^3:LEGION^4:SUICIDE^5:DRUG^6:AXIS-IV^7:AXIS-V^8:SC^9:EXP^10:MST^11:HNC^12:ETHNICITY^13:RACE^14:COMBAT VET^15:PROJ 112/SHAD
"RTN","DGPTRI1",50,0)
 ; 501 segment
"RTN","DGPTRI1",51,0)
T50 ;;1:DT OF MVMT^2:LOSING BD SEC MPCR^3:LOSING BD SEC^4:LEAVE DAYS^5:PASS DAYS^6:SCI^7:DIAG^8:DOCTOR'S SSN^9:PHY MPCR^10:PHY SPEC^11:DISCHARGE STAT^^^^^16:LEGION^17:SUICIDE^18:DRUG^19:AXIS-IV^20:AXIS-V^21:SC^22:EXP^23:MST^24:HNC
"RTN","DGPTRI1",52,0)
 ; 535 segment
"RTN","DGPTRI1",53,0)
T53 ;;1:DATE OF PHYSICAL MOVEMENT^2:LOSING PHYSICAL MPCR^3:LOSING PHYSICAL SPECIALTY^4:TR SPECIALTY MPCR^5:TR SPECIALTY^6:LEAVE DAYS^7:PASS DAYS
"RTN","DGPTRI1",54,0)
 ; 401 segment
"RTN","DGPTRI1",55,0)
T40 ;;1:DATE OF SURGERY^2:SURG SPEC.^3:CAT CHIEF SURGEON^4:CAT FIRST ASS^5:ANEST. TECH.^6:SOURCE OF PAY^7:OP CODE
"RTN","DGPTRI1",56,0)
 ; 601 segment
"RTN","DGPTRI1",57,0)
T60 ;;1:DATE OF PROCEDURE^2:LOSING BD SEC^3:DIALYSIS TYPE^4:NUMBER OF TREATMENTS^5:PROCEDURE CODE
"RTN","DGPTRI1",58,0)
 ;
"RTN","DGPTRI1",59,0)
 ;LOGIC is a bunch of single or compound pattern matches delimited by an "^". A pattern match is used in the DGL variable
"RTN","DGPTRI1",60,0)
 ;in the L entry point above as a post-conditional value on the ERR subroutine. If the pattern match fails, then ERR is
"RTN","DGPTRI1",61,0)
 ;called to write an error message on the screen to the user. 
"RTN","DGPTRI1",62,0)
LOGIC ;;X'?.N^X'?.A&(X'=" ")^X'=" "^X'?.N&(X'=" ")^X'?.A&(X'=" ")^0^X'?.N&(X'="X")^X'=" "&(X'="P")^X="E"^X="Y"^X=" "^X'="A"&(X'=" ")^(X'?.A)&(X'?.N)&(X'=" ")^(X'?.AN)&('$P(DG0,U,4))^((T1)&(X'=" "))!(('T1)&(X'?.AN)&('$P(DG0,U,4)))
"RTN","DGPTRI1",63,0)
 ;;(X'?.AN)^'$D(DGFOR)&(X'?.N)^'$D(DGFOR)&X'?.N&(X'="X")^X'?AN&X'=""^"YNUW "']X
"RTN","DGPTRI1",64,0)
 ;;END
"RTN","DGPTRI1",65,0)
 ;
"RTN","DGPTRI1",66,0)
 ;The following nn lines are values used by the L entry point to validate the data.
"RTN","DGPTRI1",67,0)
 ;Each "^" piece contains for numbers delimited by semi-colons.
"RTN","DGPTRI1",68,0)
 ;The first number identifies the "^" piece in the LOGIC string to get the pattern match to use.
"RTN","DGPTRI1",69,0)
 ;The second number identifies the edit field. [need to elaborate on this more].
"RTN","DGPTRI1",70,0)
 ;The third number identifies the number of characters in the segment to check.
"RTN","DGPTRI1",71,0)
 ;The fourth number identifies the a piece in the Tnn string (above) to get the field name to display.
"RTN","DGPTRI1",72,0)
 ;i.e, in "10", the first "^" piece is 6;;12;1
"RTN","DGPTRI1",73,0)
 ;Use the pattern match in the sixth "^" of the LOGIC text line.
"RTN","DGPTRI1",74,0)
 ;The edit field is null because the patient name cannot be edited in the PTF software.
"RTN","DGPTRI1",75,0)
 ;12 represents the first 12 characters of the patient's last name that will be checked.
"RTN","DGPTRI1",76,0)
 ;1 represents the first "^" piece of the T10 text line (i.e., 1:NAME). NAME is the field name that will be displayed
"RTN","DGPTRI1",77,0)
 ;in the error message to the user.  
"RTN","DGPTRI1",78,0)
 ; edit check# ; edit field ; # x check preformed ; display error name #
"RTN","DGPTRI1",79,0)
 ; 101 segment
"RTN","DGPTRI1",80,0)
10 ;;6;;12;1^2;1;1;1^5;1;1;1^1;2;1;2^2;2;1;2^4;3;3;3^6;;3;3^4;4;1;4^6;5;1;5^2;6;1;6^2;7;1;7^1;8;8;8^6;;1;9^11;9;1;9^4;10;1;10^4;10;1;11^17;11;5;12^18;11;5;12^2;12;1;13^6;;1;13^1;;6;14^2;;1;15^1;;1;16^4;;6;17^1;;1;18^5;;1;19^5;;3;20
"RTN","DGPTRI1",81,0)
 ; 701 segment (part 1)
"RTN","DGPTRI1",82,0)
70 ;;1;1;10;1^13;2;2;2^1;3;1;3^4;4;1;4^4;5;1;5^6;;1;6^4;7;3;7^6;;3;7^4;8;3;8^6;9;1;9^1;10;1;10^6;11;1;11^6;11;2;11^6;;3;11^6;11;1;11^20;;1;11^6;;1;12^15;;6;13
"RTN","DGPTRI1",83,0)
 ; 701 segment (part 2)
"RTN","DGPTRI1",84,0)
701 ;;15;;2;1^1;;3;2^6;;1;3^6;;1;4^6;;1;5^6;;3;5^6;;1;6^6;;4;7^4;;1;8^5;;3;9^5;;1;10^5;;1;11^13;12;2;12^13;13;12;13^5;;1;14^5;;1;15
"RTN","DGPTRI1",85,0)
 ; 501 segment
"RTN","DGPTRI1",86,0)
50 ;;1;1;10;1^1;;6;2^16;3;2;3^1;4;3;4^1;5;3;5^6;;1;6^11;7;3;7^6;;197;7^6;;9;8^14;;6;9^14;;2;10^6;;1;11^6;;1;16^6;;1;17^6;;1;18^6;;3;18^6;;1;19^6;;4;20^6;;1;21^6;;3;22^5;;1;23^6;;1;24
"RTN","DGPTRI1",87,0)
 ; 535 segment
"RTN","DGPTRI1",88,0)
53 ;;1;;10;1^1;;6;2^13;;2;3^1;;6;4^13;;2;5^1;;3;6^1;;3;7
"RTN","DGPTRI1",89,0)
 ; 401 segment
"RTN","DGPTRI1",90,0)
40 ;;1;1;10;1^1;2;2;2^11;3;1;3^4;4;1;4^6;5;1;5^4;6;1;6^11;7;2;7^6;;200;7
"RTN","DGPTRI1",91,0)
 ; 601 segment
"RTN","DGPTRI1",92,0)
60 ;;1;1;10;1^13;2;2;2^4;3;1;3^4;4;3;4^11;5;2;5^6;;198;5
"RTN","DGPTRI1",93,0)
 ;
"RTN","DGPTRI1",94,0)
ERR S DGERR=1 ;if DGERR>0, the segment is not put in the mail message or ^TMP("AEDIT")
"RTN","DGPTRI1",95,0)
 W !,T,$S(T["H":" ",1:$E(Y,4)),"  "
"RTN","DGPTRI1",96,0)
 W:"45"[$E(T,1) $E(Y,31,32),"-",$E(Y,33,34),"-",$E(Y,35,36),"@",$E(Y,37,40) ;write date of procedure/dx code
"RTN","DGPTRI1",97,0)
 W ?25,$P($P(ERR,U,$P(DGO,";",4)),":",2),?40,"COL.",F,"  VALUE: ",$S($E(Y,F)=" ":"BLANK",1:$E(Y,F)) ;write field name,column postion and value
"RTN","DGPTRI1",98,0)
 S I=$S('$D(I):1,I>0:I,1:1),^(I)=$S($D(^UTILITY("DG",$J,T_$S(T["H":"",1:$E(Y,4)),I)):^(I),1:U) I $P(DGO,";",2),^(I)'[(U_$P(DGO,";",2)_U) S ^(I)=^(I)_$P(DGO,";",2)_U
"RTN","DGPTRI1",99,0)
 Q
"RTN","DGPTRI1",100,0)
 ;
"RTN","DGPTRI1",101,0)
D10 ;
"RTN","DGPTRI1",102,0)
 ;column 66 is PERIOD OF SERVICE, "Z" indicates Merchant Marines, "10" indicates VIETNAM (Agent Orange exposure)
"RTN","DGPTRI1",103,0)
 I $E(Y,66)="Z" S (F,H)=68,W="11;10;1;10" D L
"RTN","DGPTRI1",104,0)
 Q
"RTN","DGPTRI1",105,0)
 ;
"RTN","DGPTRI1",106,0)
D40 Q
"RTN","DGPTRI1",107,0)
DP40 Q
"RTN","DGPTRI1",108,0)
 ;
"RTN","DGPTRI1",109,0)
D70 ;column 43 is TYPE OF DISPOSTION, 44 is OUTPATIENT CARE STATUS
"RTN","DGPTRI1",110,0)
 ;In "W", 4 indicates OUTPATIENT TREATMENT, 5 indciates VA AUSPICES and 6 indicates PLACE OF DISPOSITION
"RTN","DGPTRI1",111,0)
 Q:$E(Y,2,4)=701
"RTN","DGPTRI1",112,0)
 I "467"'[$E(Y,43) S F=44,W="4;4;1;4^1;5;1;5^11;6;1;6" D L
"RTN","DGPTRI1",113,0)
 Q
"RTN","DGPTRI1",114,0)
D50 ;$P(DG0,U,5) is SUFFIX (File 45, field 5). column 55 is SPINAL CORD INJURY 
"RTN","DGPTRI1",115,0)
 I "A0"[$P(DG0,U,5)!("A4"[$P(DG0,U,5))!('$D(^DGPT(J,70))) S W="11;6;1;6",F=55 D L ;if $P(DG0,U,5) is null, this will execute
"RTN","DGPTRI1",116,0)
 I $D(^DGPT(J,70)),$S(T1:1,1:+^(70)>2871000) S W="11;6;1;6",F=55 D L
"RTN","DGPTRI1",117,0)
 ;I $E(Y,4)=1 S W="9;7;1;7",F=56 D L
"RTN","DGPTRI1",118,0)
 ; column 273 is BED STATUS (DISCHARGE MOVEMNT ONLY)
"RTN","DGPTRI1",119,0)
 I I=1,'T1 S W="1;11;1;11",F=273 D L
"RTN","DGPTRI1",120,0)
 Q
"RTN","DGPTRI1",121,0)
D53 Q
"RTN","DGPTRI1",122,0)
 ;column 43 is DIALYSIS TYPE, column 44 is NUMBER OF TREATMENTS and the 4 in "W" is also NUMBER OF TREATMENTS
"RTN","DGPTRI1",123,0)
D60 I $E(Y,43) S F=44,W="1;4;3;4" D L
"RTN","DGPTRI1",124,0)
 Q
"RTN","DGPTRI1",125,0)
 ;called from DGPTRI0
"RTN","DGPTRI1",126,0)
HEAD S ERR="1:SSN^2:ADMISSION DATE^3:FACILITY #",W="8;1;1;1^1;1;9;1^1;2;10;2^1;3;3;3^6;;3;3",F=5,T="HEADER" D LOG
"RTN","DGPTRI1",127,0)
 D L
"RTN","DGPTRI1",128,0)
 Q
"RTN","DGPTRI1",129,0)
LOG ;place DGLOGIC in array inorder to add more logic tests ;DG*5.3*664
"RTN","DGPTRI1",130,0)
 K DGLOGIC ;S DGLOGIC=$P($T(LOGIC),";;",2)
"RTN","DGPTRI1",131,0)
 N LOGX,LOGI,LOGCNT,II,XX
"RTN","DGPTRI1",132,0)
 S LOGI=0,LOGCNT=1
"RTN","DGPTRI1",133,0)
 F LOGI=0:1 S LOGX=$P($T(LOGIC+LOGI),";;",2) Q:LOGX="END"  F II=1:1 S XX=$P(LOGX,U,II) Q:XX=""  S DGLOGIC(LOGCNT)=XX,LOGCNT=LOGCNT+1
"RTN","DGPTRI1",134,0)
 Q
"RTN","DGPTRI1",135,0)
CEN ;called from 701^DGPTRI4
"RTN","DGPTRI1",136,0)
 S T=70,ERR=$P($T(T70),";;",2),W=$P($T(70),";;",2,999),W="6;9;1;9"_$P(W,"6;9;1;9",2,999),F=56 D L ;56 is RACE column
"RTN","DGPTRI1",137,0)
 S ERR=$P($T(T701),";;",2),W=$P($T(701),";;",2,999),F=73 D L
"RTN","DGPTRI1",138,0)
 Q
"RTN","DGPTRI1",139,0)
 ;
"RTN","DGPTRI1",140,0)
DIAGPTRN(DGDIAG) ; -- icd-10 diagnosis pattern match
"RTN","DGPTRI1",141,0)
 ;    1  2  3  4  5  6  7  8
"RTN","DGPTRI1",142,0)
 ;    -  -  -  -  -  -  -  -
"RTN","DGPTRI1",143,0)
 ;    U  N  U  .  U  U  N  U
"RTN","DGPTRI1",144,0)
 ;    X     N     N  N  x  N
"RTN","DGPTRI1",145,0)
 ;                x  x  n  n
"RTN","DGPTRI1",146,0)
 ;                n  n     
"RTN","DGPTRI1",147,0)
 N OKAY S OKAY=0
"RTN","DGPTRI1",148,0)
 I DGDIAG?1U1N1UN1".".4AN S OKAY=1
"RTN","DGPTRI1",149,0)
 Q OKAY
"RTN","DGPTRI1",150,0)
TEST ;
"RTN","DGPTRI1",151,0)
 W !,"F14. ",$$DIAGPTRN("F14.")
"RTN","DGPTRI1",152,0)
 W !,"G1G.1234 ",$$DIAGPTRN("G1G.1234")
"RTN","DGPTRI1",153,0)
 W !,"330. ",$$DIAGPTRN("330")
"RTN","DGPTRI1",154,0)
 W !,"R54.3XxY ",$$DIAGPTRN("R54.3XxY")
"RTN","DGPTRI1",155,0)
 W !,"R543XxY ",$$PROCPTRN("R543XxY")
"RTN","DGPTRI1",156,0)
 W !,"10.44 ",$$PROCPTRN("10.44")
"RTN","DGPTRI1",157,0)
 W !,"3S82B1 ",$$PROCPTRN("3S82B1")
"RTN","DGPTRI1",158,0)
 W !,"G23244X ",$$PROCPTRN("G23244X")
"RTN","DGPTRI1",159,0)
 Q
"RTN","DGPTRI1",160,0)
 ;
"RTN","DGPTRI1",161,0)
PROCPTRN(DGPROC) ;ICD-10 Procedure Code Pattern Match
"RTN","DGPTRI1",162,0)
 ; 
"RTN","DGPTRI1",163,0)
 ;    1  2  3  4  5  6  7
"RTN","DGPTRI1",164,0)
 ;    -  -  -  -  -  -  -
"RTN","DGPTRI1",165,0)
 ;    U  U  U  U  U  U  U
"RTN","DGPTRI1",166,0)
 ;    N  N  N  N  N  N  N
"RTN","DGPTRI1",167,0)
 ;       Z     Z  Z  Z  Z
"RTN","DGPTRI1",168,0)
 ; 
"RTN","DGPTRI1",169,0)
 N OKAY S OKAY=0
"RTN","DGPTRI1",170,0)
 I DGPROC?7UN S OKAY=1
"RTN","DGPTRI1",171,0)
 Q OKAY
"RTN","DGPTRI2")
0^72^B35680960
"RTN","DGPTRI2",1,0)
DGPTRI2 ;ALB/JDS/MJK/MTC/ADL/TJ/BOK,ISF/GJW,HIOFO/FT - PTF TRANSMISSION ;4/20/15 9:18am
"RTN","DGPTRI2",2,0)
 ;;5.3;Registration;**850,884**;Aug 13, 1993;Build 31
"RTN","DGPTRI2",3,0)
 ;;ADL;Update for CSV Project;;Mar 27,2003
"RTN","DGPTRI2",4,0)
 ;
"RTN","DGPTRI2",5,0)
 ; ^XMB(3.9) - #10113
"RTN","DGPTRI2",6,0)
 ; ICDXCODE APIs - #5699
"RTN","DGPTRI2",7,0)
 ; XLFSTR APIs - #10104
"RTN","DGPTRI2",8,0)
 ;
"RTN","DGPTRI2",9,0)
501 ; -- setup 501 transactions
"RTN","DGPTRI2",10,0)
 ; DG*636
"RTN","DGPTRI2",11,0)
 N DGPTMVDT,DGMPOA,DGEC,DGHNC,DGIR,DGM2,DGMST,DGPTMCNT,DGSC
"RTN","DGPTRI2",12,0)
 K DGCMVT I T2'=9999999 S DGCMVT=$O(^DGPT(J,"M","AM",+$P(T2,".")_".2359")),DGCMVT=$S('DGCMVT:1,$O(^(DGCMVT,0)):$O(^(0)),1:1)
"RTN","DGPTRI2",13,0)
 ;$P(DGM,U,10) - MOVEMENT DATE
"RTN","DGPTRI2",14,0)
 ;$P(DGM,U,18) - TREATED FOR SC CONDITION
"RTN","DGPTRI2",15,0)
 ;$P(DGM,U,26) - TREATED FOR AO CONDITION
"RTN","DGPTRI2",16,0)
 ;$P(DGM,U,27) - TREATED FOR IR CONDITION
"RTN","DGPTRI2",17,0)
 ;$P(DGM,U,28) - EXPOSED TO SW ASIA CONDITIONS
"RTN","DGPTRI2",18,0)
 ;$P(DGM,U,29) - TREATMENT FOR MST
"RTN","DGPTRI2",19,0)
 ;$P(DGM,U,30) - TREATED FOR HEAD/NECK CANCER
"RTN","DGPTRI2",20,0)
 F I=0:0 S I=$O(^DGPT(J,"M",I)) G 535:I'>0 I $D(^DGPT(J,"M",I,0)) S DGM=^DGPT(J,"M",I,0),DGM2=$G(^DGPT(J,"M",I,81)),DGMPOA=$G(^DGPT(J,"M",I,82)) D
"RTN","DGPTRI2",21,0)
 . S DGPTMCNT=$G(DGPTMCNT)+1,DGSC=$P(DGM,U,18),DGAO=$P(DGM,U,26),DGIR=$P(DGM,U,27)
"RTN","DGPTRI2",22,0)
 . S DGEC=$P(DGM,U,28),DGMST=$P(DGM,U,29),DGHNC=$P(DGM,U,30),DGTD=$P(DGM,U,10),DGPTMVDT=$P(DGM,U,10)
"RTN","DGPTRI2",23,0)
 . S:$D(DGCMVT) DGTD=$S(I=DGCMVT:$P(T2,".")_".2359",1:DGTD)
"RTN","DGPTRI2",24,0)
 . I $P(DGM,U,17)'="n",DGTD,DGTD'<T1,DGTD'>T2 D MOV
"RTN","DGPTRI2",25,0)
 Q
"RTN","DGPTRI2",26,0)
MOV ; build movement record
"RTN","DGPTRI2",27,0)
 S DGCDR=$P(DGM,U,16)
"RTN","DGPTRI2",28,0)
 S DGM=$P(DGM,U,1,9)_U_$P(DGM,U,11,15),L=1
"RTN","DGPTRI2",29,0)
 ;
"RTN","DGPTRI2",30,0)
 S Y=$S(T1:"C",1:"N")_"501"_DGHEAD,X=$P(DGTD,".")_"       ",Y=Y_$E(X,4,5)_$E(X,6,7)_$E(X,2,3)_$E($P(DGTD,".",2)_"0000",1,4)
"RTN","DGPTRI2",31,0)
 ;SPECIALTY CDR CODE - $E(Y,41,46)
"RTN","DGPTRI2",32,0)
 S Z=DGCDR D CDR
"RTN","DGPTRI2",33,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTRI2",34,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTRI2",35,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(DGM,U,2),.DGARRY)
"RTN","DGPTRI2",36,0)
 S $P(DGM,U,2)=$G(DGARRY(7))
"RTN","DGPTRI2",37,0)
 ;SPECIALTY CODE - $E(Y,47,48)
"RTN","DGPTRI2",38,0)
 S L=2,X=DGM,Z=2 D ENTER0
"RTN","DGPTRI2",39,0)
 ; convert pass, leave days >999 to 999
"RTN","DGPTRI2",40,0)
 ;3 is LEAVE DAYS - $E(Y,49,51)
"RTN","DGPTRI2",41,0)
 ;4 is PASS DAYS - $E(Y,52,54)
"RTN","DGPTRI2",42,0)
 S L=3 F Z=3,4 S:$P(X,U,Z)>999 $P(X,U,Z)=999 D ENTER0
"RTN","DGPTRI2",43,0)
 ;SPINAL CORD INJURY INDICATOR - $E(Y,55)
"RTN","DGPTRI2",44,0)
 S L=1,X=DG57,Z=4 D ENTER S:I=1 DG502=Y
"RTN","DGPTRI2",45,0)
 ;DIAGNOSTIC CODES and POAs 1 thru 25 - $E(Y,56,255)
"RTN","DGPTRI2",46,0)
 N EFFDATE,IMPDATE
"RTN","DGPTRI2",47,0)
 D EFFDATE^DGPTIC10(J)
"RTN","DGPTRI2",48,0)
 N DG501DX,DG501POA,DGLOOP,DGSTRING,DG501CODES,DGPTTMP
"RTN","DGPTRI2",49,0)
 D PTFICD^DGPTFUT(501,J,I,.DG501CODES) ;get 501 values
"RTN","DGPTRI2",50,0)
 S DGLOOP=0,DGSTRING=""
"RTN","DGPTRI2",51,0)
 F  S DGLOOP=$O(DG501CODES(DGLOOP)) Q:DGLOOP=""  D
"RTN","DGPTRI2",52,0)
 .S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",$P(DG501CODES(DGLOOP),U,1),EFFDATE,"I") ;get dx code info
"RTN","DGPTRI2",53,0)
 .I +DGPTTMP>0&($P(DGPTTMP,U,10)) D  ;check ien and status
"RTN","DGPTRI2",54,0)
 ..S DG501DX=$P(DG501CODES(DGLOOP),U,3) ;external value
"RTN","DGPTRI2",55,0)
 ..S DG501DX=$$FMTICD^DGPTRNU(DG501DX) ;remove decimal point
"RTN","DGPTRI2",56,0)
 ..S DG501DX=$$LJ^XLFSTR(DG501DX,7," ") ;left justify & add spaces to the right to reach 7 characters
"RTN","DGPTRI2",57,0)
 ..S DG501POA=$P(DG501CODES(DGLOOP),U,2) ;get poa code
"RTN","DGPTRI2",58,0)
 ..S DG501POA=$S(DG501POA'="":DG501POA,1:" ") ;use space, if no POA code
"RTN","DGPTRI2",59,0)
 ..S DGSTRING=DGSTRING_DG501DX_DG501POA ;build string of dx and poa values
"RTN","DGPTRI2",60,0)
 S $E(Y,56,255)=DGSTRING_$$REPEAT^XLFSTR(" ",200-$L(DGSTRING))
"RTN","DGPTRI2",61,0)
  ;attending physician ssn - $E(Y,256,264)
"RTN","DGPTRI2",62,0)
 S X=$$GET1^DIQ(45,J_",",79.2),$E(Y,256,264)=$E(X_"         ",1,9)
"RTN","DGPTRI2",63,0)
 S X=""
"RTN","DGPTRI2",64,0)
 I 'T1 S Z=$S(I=1:+$O(^DGPT(J,535,"ADC",0)),1:+$O(^DGPT(J,535,"AM",DGTD-.0000001))) I $D(^DGPT(J,535,+$O(^(Z,0)),0)) S X=^(0)
"RTN","DGPTRI2",65,0)
 I T1 S Z=+$O(^DGPT(J,535,"AM",DGTD-.0000001)) S:'Z Z=+$O(^DGPT(J,535,"ADC",0)) I $D(^DGPT(J,535,+$O(^(Z,0)),0)) S X=^(0)
"RTN","DGPTRI2",66,0)
 ;PHYSICAL LOCATION CDR CODE - $E(Y,265,270)
"RTN","DGPTRI2",67,0)
 S Z=$P(X,U,16) D CDR
"RTN","DGPTRI2",68,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTRI2",69,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTRI2",70,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(X,U,2),.DGARRY)
"RTN","DGPTRI2",71,0)
 S $P(X,U,2)=$G(DGARRY(7))
"RTN","DGPTRI2",72,0)
 ;PHYSICAL LOCATION CODE - $E(Y,271,272)
"RTN","DGPTRI2",73,0)
 S L=2,Z=2 D ENTER0
"RTN","DGPTRI2",74,0)
 ;BED STATUS (DISCHARGE MOVEMENT ONLY) - $E(Y,273)
"RTN","DGPTRI2",75,0)
 I T1 S Y=Y_$S(I=1:$E($P(DG70,U,14)_" "),$P(+DGTD,".")=$P(T2,"."):5,1:1)
"RTN","DGPTRI2",76,0)
 I 'T1 S Y=Y_$S(I=1:$E($P(DG70,U,14)_" "),1:" ")
"RTN","DGPTRI2",77,0)
 ;[NOT ACTIVATED] - $E(Y,274,284)
"RTN","DGPTRI2",78,0)
 ;[RESERVED] - $E(Y,285,301)
"RTN","DGPTRI2",79,0)
 ;[NOT IN USE] - $E(Y,302,384)
"RTN","DGPTRI2",80,0)
 D SAVE
"RTN","DGPTRI2",81,0)
 Q
"RTN","DGPTRI2",82,0)
535 ; -- do 535's
"RTN","DGPTRI2",83,0)
 D 535^DGPTRI3
"RTN","DGPTRI2",84,0)
 ;
"RTN","DGPTRI2",85,0)
PROC ; -- setup 601 transactions
"RTN","DGPTRI2",86,0)
 K ^UTILITY($J,"PROC") S I=0
"RTN","DGPTRI2",87,0)
601 S I=$O(^DGPT(J,"P",I)) G 701:I'>0 S (X,DGPROC)=^(I,0) G 601:'DGPROC
"RTN","DGPTRI2",88,0)
 G 601:DGPROC<T1!(DGPROC>T2) S DGPROCD=+^DGPT(J,"P",I,0),^UTILITY($J,"PROC",DGPROCD)=$S($D(^UTILITY($J,"PROC",DGPROCD)):^(DGPROCD),1:0)+1
"RTN","DGPTRI2",89,0)
 I ^UTILITY($J,"PROC",DGPROCD)>1 W !,"More than one procedure record on same date/time" S DGERR=1 Q
"RTN","DGPTRI2",90,0)
 S Y=$S('T1:"N",1:"C")_"601"_DGHEAD_$E(DGPROCD,4,7)_$E(DGPROCD,2,3)_$E($P(+X,".",2)_"0000",1,4)
"RTN","DGPTRI2",91,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTRI2",92,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTRI2",93,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(X,U,2),.DGARRY)
"RTN","DGPTRI2",94,0)
 S $P(X,U,2)=$G(DGARRY(7))
"RTN","DGPTRI2",95,0)
 ;SPECIALTY - $E(Y,41,42)
"RTN","DGPTRI2",96,0)
 S L=2,Z=2 D ENTER0
"RTN","DGPTRI2",97,0)
 ;DIALYSIS TYPE - $E(Y,43)
"RTN","DGPTRI2",98,0)
 S L=1,Z=3 S $P(X,U,Z)="" D ENTER ;null dialysis type. DG729
"RTN","DGPTRI2",99,0)
 ;NUMBER OF DIALYSIS TREATMENTS - $E(Y44,46)
"RTN","DGPTRI2",100,0)
 S L=3,Z=4 D ENTER0
"RTN","DGPTRI2",101,0)
 N EFFDATE,IMPDATE,DGPTDAT D EFFDATE^DGPTIC10(J)
"RTN","DGPTRI2",102,0)
 ;procedure codes 1 thru 25 - $E(Y,47,246)
"RTN","DGPTRI2",103,0)
 N DG601CODES,DGLOOP,DGPCODE,DGPROCNODE,DGSTRING,DGPTTMP
"RTN","DGPTRI2",104,0)
 D PTFICD^DGPTFUT(601,J,I,.DG601CODES) ;get 601 values
"RTN","DGPTRI2",105,0)
 S DGLOOP=0,DGSTRING=""
"RTN","DGPTRI2",106,0)
 F  S DGLOOP=$O(DG601CODES(DGLOOP)) Q:DGLOOP=""  D  ;returns codes used, no null fields
"RTN","DGPTRI2",107,0)
 .S DGPCODE=$P(DG601CODES(DGLOOP),U,3) ;external value
"RTN","DGPTRI2",108,0)
 .S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",$P(DG601CODES(DGLOOP),U,1),EFFDATE,"I") ;check data
"RTN","DGPTRI2",109,0)
 .Q:+DGPTTMP'>0  ;don't use if bad
"RTN","DGPTRI2",110,0)
 .S DGSTRING=DGSTRING_DGPCODE_" "
"RTN","DGPTRI2",111,0)
 S $E(Y,47,246)=DGSTRING_$$REPEAT^XLFSTR(" ",200-$L(DGSTRING))
"RTN","DGPTRI2",112,0)
 ;[NOT ACTIVATED] - $E(Y,247,255)
"RTN","DGPTRI2",113,0)
 ;[RESERVED] - $E(Y,256,290)
"RTN","DGPTRI2",114,0)
 ;[NOT ALLOCATED] - $E(Y,291,384)
"RTN","DGPTRI2",115,0)
 D SAVE G 601
"RTN","DGPTRI2",116,0)
 Q
"RTN","DGPTRI2",117,0)
 ;
"RTN","DGPTRI2",118,0)
701 ; -- setup 701 transaction
"RTN","DGPTRI2",119,0)
 D 701^DGPTRI4 Q
"RTN","DGPTRI2",120,0)
 ;
"RTN","DGPTRI2",121,0)
ENTER S Y=Y_$J($P(X,U,Z),L)
"RTN","DGPTRI2",122,0)
 Q
"RTN","DGPTRI2",123,0)
 ;
"RTN","DGPTRI2",124,0)
ENTER0 S Y=Y_$S($P(X,U,Z)]"":$E("00000",$L($P(X,U,Z))+1,L)_$P(X,U,Z),1:$J($P(X,U,Z),L))
"RTN","DGPTRI2",125,0)
 Q
"RTN","DGPTRI2",126,0)
 ;
"RTN","DGPTRI2",127,0)
SAVE ;save segment to MailMan message and ^TMP("AEDIT",$J), if data is valid
"RTN","DGPTRI2",128,0)
 N DGY1,DGY2
"RTN","DGPTRI2",129,0)
 S (DGY1,DGY2)=""
"RTN","DGPTRI2",130,0)
 D START^DGPTRI1 ;validate data in segment
"RTN","DGPTRI2",131,0)
 I DGERR'>0 S DGACNT=DGACNT+1,^TMP("AEDIT",$J,$E(Y,1,4),DGACNT)=Y ;^TMP("AEDIT",$J) used by DGPTAE* for more data validation
"RTN","DGPTRI2",132,0)
 ;AITC wants segment length of 384 characters.
"RTN","DGPTRI2",133,0)
 ;Break the segment at 240, if it does not affect a data field. Otherwise break line before data field.
"RTN","DGPTRI2",134,0)
 I 'DGERR D
"RTN","DGPTRI2",135,0)
 .D FILL
"RTN","DGPTRI2",136,0)
 .I $E(Y,2,4)=101 S DGY1=$E(Y,1,240),DGY2=$E(Y,241,384)
"RTN","DGPTRI2",137,0)
 .I $E(Y,2,4)=401 S DGY1=$E(Y,1,238),DGY2=$E(Y,239,384)
"RTN","DGPTRI2",138,0)
 .I $E(Y,2,4)=501 S DGY1=$E(Y,1,239),DGY2=$E(Y,240,384)
"RTN","DGPTRI2",139,0)
 .I $E(Y,2,4)=535 S DGY1=$E(Y,1,240),DGY2=$E(Y,241,384)
"RTN","DGPTRI2",140,0)
 .I $E(Y,2,4)=601 S DGY1=$E(Y,1,238),DGY2=$E(Y,239,384)
"RTN","DGPTRI2",141,0)
 .I $E(Y,2,4)=701 S DGY1=$E(Y,1,240),DGY2=$E(Y,241,384)
"RTN","DGPTRI2",142,0)
 .I $E(Y,2,4)=702 S DGY1=$E(Y,1,240),DGY2=$E(Y,241,384)
"RTN","DGPTRI2",143,0)
 .Q:DGY1=""!(DGY2="")
"RTN","DGPTRI2",144,0)
 .S ^XMB(3.9,DGXMZ,2,DGCNT,0)=DGY1,DGCNT=DGCNT+1
"RTN","DGPTRI2",145,0)
 .S ^XMB(3.9,DGXMZ,2,DGCNT,0)=DGY2,DGCNT=DGCNT+1
"RTN","DGPTRI2",146,0)
Q Q
"RTN","DGPTRI2",147,0)
 ;
"RTN","DGPTRI2",148,0)
FILL ;fill out segment with spaces
"RTN","DGPTRI2",149,0)
 F K=$L(Y):1 Q:$L(Y)>383  S Y=Y_" "
"RTN","DGPTRI2",150,0)
 S $E(Y,383)=1 ;383rd character=1 to indicate ICD10 record. DGPTR2 sets 383rd character=9 to indicate ICD9 record.
"RTN","DGPTRI2",151,0)
 Q
"RTN","DGPTRI2",152,0)
 ;
"RTN","DGPTRI2",153,0)
CDR S Y=Y_$E($P(Z,".")_"0000",1,4)_$E($P(Z,".",2)_"00",1,2)
"RTN","DGPTRI2",154,0)
 Q
"RTN","DGPTRI3")
0^23^B26721345
"RTN","DGPTRI3",1,0)
DGPTRI3 ;ALB/JDS/MJK/BOK,ISF/GJW,HIOFO/FT - PTF TRANSMISSION ;4/23/15 8:59am
"RTN","DGPTRI3",2,0)
 ;;5.3;Registration;**850,884**;Aug 13, 1993;Build 31
"RTN","DGPTRI3",3,0)
 ;
"RTN","DGPTRI3",4,0)
 ; ICDEX APIs - #5747
"RTN","DGPTRI3",5,0)
 ;
"RTN","DGPTRI3",6,0)
535 ; -- setup 535 transactions
"RTN","DGPTRI3",7,0)
 ;$P(DGM,U,10) is MOVEMENT DATE
"RTN","DGPTRI3",8,0)
 ;$P(DGM,U,17) is TRANSMIT FLAG
"RTN","DGPTRI3",9,0)
 ;$P(DGM,U,7) is ICD3 ???
"RTN","DGPTRI3",10,0)
 ;$D(^DGPT(J,"M","AM",DGTD)) is x-ref on MOVEMENT DATE
"RTN","DGPTRI3",11,0)
 F I=0:0 S I=$O(^DGPT(J,535,I)) Q:'I  I $D(^(I,0)) S DGM=^(0),DGTD=+$P(DGM,U,10) I $P(DGM,U,17)'="n",'$P(DGM,U,7),'$D(^DGPT(J,"M","AM",DGTD)),DGTD'<T1,DGTD'>T2 D PHY
"RTN","DGPTRI3",12,0)
 Q
"RTN","DGPTRI3",13,0)
 ;
"RTN","DGPTRI3",14,0)
PHY ; -- set up physical mvt
"RTN","DGPTRI3",15,0)
 S Y=$S(T1:"C",1:"N")_"535"_DGHEAD,X=$P(DGTD,".")_"       ",Y=Y_$E(X,4,5)_$E(X,6,7)_$E(X,2,3)_$E($P(DGTD,".",2)_"0000",1,4)
"RTN","DGPTRI3",16,0)
 ; physical cdr - $E(Y,41,46)
"RTN","DGPTRI3",17,0)
 S Z=$P(DGM,U,16) D CDR^DGPTRI2
"RTN","DGPTRI3",18,0)
 ; physical specialty - $E(Y,47,48)
"RTN","DGPTRI3",19,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTRI3",20,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTRI3",21,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(DGM,U,2),.DGARRY)
"RTN","DGPTRI3",22,0)
 S $P(DGM,U,2)=$G(DGARRY(7))
"RTN","DGPTRI3",23,0)
 S L=2,X=DGM,Z=2 D ENTER0
"RTN","DGPTRI3",24,0)
 ; find corresponding PTF mvt
"RTN","DGPTRI3",25,0)
 S X="",Z=+$O(^DGPT(J,"M","AM",DGTD-.0000001)),Z=$S(Z:+$O(^(Z,0)),1:1) I $D(^DGPT(J,"M",Z,0)) S X=^(0) ; use d/c mvt if 'Z
"RTN","DGPTRI3",26,0)
 ; specialty cdr - $E(Y,49,54)
"RTN","DGPTRI3",27,0)
 S Z=$P(X,U,16) D CDR^DGPTRI2
"RTN","DGPTRI3",28,0)
 ; specialty - $E(Y,55,56)
"RTN","DGPTRI3",29,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTRI3",30,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTRI3",31,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(X,U,2),.DGARRY)
"RTN","DGPTRI3",32,0)
 S $P(X,U,2)=$G(DGARRY(7))
"RTN","DGPTRI3",33,0)
 S L=2,Z=2 D ENTER0
"RTN","DGPTRI3",34,0)
 ; 
"RTN","DGPTRI3",35,0)
 ; convert pass, leave days >999 to 999
"RTN","DGPTRI3",36,0)
 ; 3 is LEAVE DAYS - $E(Y,57,59)
"RTN","DGPTRI3",37,0)
 ; 4 is PASS DAYS - $E(Y,60,62)
"RTN","DGPTRI3",38,0)
 S X=DGM,L=3 F Z=3,4 S:$P(X,U,Z)>999 $P(X,U,Z)=999 D ENTER0
"RTN","DGPTRI3",39,0)
 D SAVE
"RTN","DGPTRI3",40,0)
 K DGM,X,Z,L Q
"RTN","DGPTRI3",41,0)
 ;
"RTN","DGPTRI3",42,0)
ENTER S Y=Y_$J($P(X,U,Z),L)
"RTN","DGPTRI3",43,0)
 Q
"RTN","DGPTRI3",44,0)
 ;
"RTN","DGPTRI3",45,0)
ENTER0 S Y=Y_$S($P(X,U,Z)]"":$E("00000",$L($P(X,U,Z))+1,L)_$P(X,U,Z),1:$J($P(X,U,Z),L))
"RTN","DGPTRI3",46,0)
 Q
"RTN","DGPTRI3",47,0)
 ;
"RTN","DGPTRI3",48,0)
SAVE ;
"RTN","DGPTRI3",49,0)
 D SAVE^DGPTRI2
"RTN","DGPTRI3",50,0)
Q Q
"RTN","DGPTRI3",51,0)
 ;
"RTN","DGPTRI3",52,0)
VERCHK(REC) ; -- check version for all diagnosis and procedure codes
"RTN","DGPTRI3",53,0)
 N I,J,X,Y,DGPTF,FLD,VER,%,ICD,DGICD,M,CODSYSD,CODSYSP,ERR1,ERR2,ERR3,ERR4,ERR5,ERR6
"RTN","DGPTRI3",54,0)
 N EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPTRI3",55,0)
 Q:+$G(REC)<1
"RTN","DGPTRI3",56,0)
 ;
"RTN","DGPTRI3",57,0)
 D EFFDATE^DGPTIC10(REC,"701")
"RTN","DGPTRI3",58,0)
 S CODSYSD=+$$CS^ICDEX(80,"I",EFFDATE)
"RTN","DGPTRI3",59,0)
 S CODSYSP=+$$CS^ICDEX(80.1,"I",EFFDATE)
"RTN","DGPTRI3",60,0)
 ;
"RTN","DGPTRI3",61,0)
 S %=$S($D(^DGPT(REC,70)):^(70),1:"") I %'="" D
"RTN","DGPTRI3",62,0)
 . S %=$$STR701^DGPTFUT(REC)
"RTN","DGPTRI3",63,0)
 .F ICD=1:1:25 S DGICD=$P(%,U,ICD) I DGICD'="" D  Q:$G(ERR1)=1
"RTN","DGPTRI3",64,0)
 .. S X=$$CSI^ICDEX(80,DGICD)
"RTN","DGPTRI3",65,0)
 .. I +X'=CODSYSD S ERR1=CODSYSD ;W !,%,!,ICD,!,X
"RTN","DGPTRI3",66,0)
 .. Q
"RTN","DGPTRI3",67,0)
 . Q
"RTN","DGPTRI3",68,0)
 ;
"RTN","DGPTRI3",69,0)
 S M=0 F I=0:0 S I=$O(^DGPT(REC,"M",I)) Q:'I  D
"RTN","DGPTRI3",70,0)
 . S %=$$STR501^DGPTFUT(REC,I)
"RTN","DGPTRI3",71,0)
 . F ICD=1:1:25 S DGICD=$P(%,U,ICD) I DGICD'="" D  Q:$G(ERR2)=1
"RTN","DGPTRI3",72,0)
 .. S X=$$CSI^ICDEX(80,DGICD)
"RTN","DGPTRI3",73,0)
 .. I +X'=CODSYSD S ERR2=CODSYSD
"RTN","DGPTRI3",74,0)
 .. Q
"RTN","DGPTRI3",75,0)
 . Q
"RTN","DGPTRI3",76,0)
 ;
"RTN","DGPTRI3",77,0)
 S I=0 F I=0:0 S I=$O(^DGPT(REC,"P",I)) Q:'I  D
"RTN","DGPTRI3",78,0)
 . S %=$$STR601^DGPTFUT(REC,I)
"RTN","DGPTRI3",79,0)
 . F ICD=1:1:25 S DGICD=$P(%,U,ICD) I DGICD'="" D  Q:$G(ERR3)=1
"RTN","DGPTRI3",80,0)
 .. S X=$$CSI^ICDEX(80.1,DGICD)
"RTN","DGPTRI3",81,0)
 .. I +X'=CODSYSP S ERR3=CODSYSP ;W !,%,!,ICD,!,X,!,CODSYSP
"RTN","DGPTRI3",82,0)
 .. Q
"RTN","DGPTRI3",83,0)
 . Q
"RTN","DGPTRI3",84,0)
 ;
"RTN","DGPTRI3",85,0)
 S I=0 F I=0:0 S I=$O(^DGPT(REC,"S",I)) Q:'I  D
"RTN","DGPTRI3",86,0)
 . S %=$$STR401^DGPTFUT(REC,I)
"RTN","DGPTRI3",87,0)
 . F ICD=1:1:25 S DGICD=$P(%,U,ICD) I DGICD'="" D  Q:$G(ERR4)=1
"RTN","DGPTRI3",88,0)
 .. S X=$$CSI^ICDEX(80.1,DGICD)
"RTN","DGPTRI3",89,0)
 .. I +X'=CODSYSP S ERR4=CODSYSP
"RTN","DGPTRI3",90,0)
 .. Q
"RTN","DGPTRI3",91,0)
 . Q
"RTN","DGPTRI3",92,0)
 ;
"RTN","DGPTRI3",93,0)
 S %=$S($D(^DGPT(REC,"401P")):^("401P"),1:"") I %'="" D
"RTN","DGPTRI3",94,0)
 . S %=U_$P(%,U,1,5)
"RTN","DGPTRI3",95,0)
 .F ICD=2:1:6 S DGICD=$P(%,U,ICD) I DGICD'="" D  Q:$G(ERR5)=1
"RTN","DGPTRI3",96,0)
 .. S X=$$CSI^ICDEX(80,DGICD)
"RTN","DGPTRI3",97,0)
 .. I +X'=CODSYSD S ERR5=CODSYSD ;W !,%,!,ICD,!,X
"RTN","DGPTRI3",98,0)
 .. Q
"RTN","DGPTRI3",99,0)
 . Q
"RTN","DGPTRI3",100,0)
 ;
"RTN","DGPTRI3",101,0)
 D CPTDATA
"RTN","DGPTRI3",102,0)
 ;
"RTN","DGPTRI3",103,0)
 I $G(ERR4) S DGERR=$G(DGERR)+1 W !,"401         ",$S(ERR4=2:"ICD-9",1:"ICD-10")," Code Expected, ",$S(ERR4=2:"ICD-10",1:"ICD-9")," Code found."
"RTN","DGPTRI3",104,0)
 I $G(ERR2) S DGERR=$G(DGERR)+1 W !,"501         ",$S(ERR2=1:"ICD-9",1:"ICD-10")," Code Expected, ",$S(ERR2=1:"ICD-10",1:"ICD-9")," Code found."
"RTN","DGPTRI3",105,0)
 I $G(ERR3) S DGERR=$G(DGERR)+1 W !,"601         ",$S(ERR3=2:"ICD-9",1:"ICD-10")," Code Expected, ",$S(ERR3=2:"ICD-10",1:"ICD-9")," Code found."
"RTN","DGPTRI3",106,0)
 I $G(ERR5) S DGERR=$G(DGERR)+1 W !,"601         ",$S(ERR5=1:"ICD-9",1:"ICD-10")," Code Expected, ",$S(ERR5=1:"ICD-10",1:"ICD-9")," Code found."
"RTN","DGPTRI3",107,0)
 I $G(ERR1) S DGERR=$G(DGERR)+1 W !,"701         ",$S(ERR1=1:"ICD-9",1:"ICD-10")," Code Expected, ",$S(ERR1=1:"ICD-10",1:"ICD-9")," Code found."
"RTN","DGPTRI3",108,0)
 I $G(ERR6) S DGERR=$G(DGERR)+1 W !,"801         ",$S(ERR6=1:"ICD-9",1:"ICD-10")," Code Expected, ",$S(ERR6=1:"ICD-10",1:"ICD-9")," Code found."
"RTN","DGPTRI3",109,0)
 ;
"RTN","DGPTRI3",110,0)
 Q
"RTN","DGPTRI3",111,0)
 ;
"RTN","DGPTRI3",112,0)
CPTDATA ; -- get 801 movement Diagnosis Data in DG801(i,j,"DATA")
"RTN","DGPTRI3",113,0)
 ; 801 movement uses CPT Record date instead of 701 type dates
"RTN","DGPTRI3",114,0)
 N H,I,I2,N,IEN,K,K1,L,DGCPTDT,DGCPTSYS
"RTN","DGPTRI3",115,0)
 S (H,I,N)=0
"RTN","DGPTRI3",116,0)
 F I2=1:1 S H=$O(^DGPT(PTF,"C","B",H)) Q:H'>0  D
"RTN","DGPTRI3",117,0)
 . F  S I=$O(^DGPT(PTF,"C","B",H,I)) Q:I'>0  D
"RTN","DGPTRI3",118,0)
 .. S DG801(I2)=^DGPT(PTF,"C",I,0),DGCPTDT=$P(DG801(I2),U,1),DGCPTSYS=+$$CS^ICDEX(80,"I",DGCPTDT)
"RTN","DGPTRI3",119,0)
 .. S (K,K1)=0,F=1 ;D
"RTN","DGPTRI3",120,0)
 .. F  S K=$O(^DGCPT(46,"C",PTF,K)) Q:K'>0  I +DG801(I2)=+$G(^DGCPT(46,K,1)),'$G(^DGCPT(46,K,9)) D
"RTN","DGPTRI3",121,0)
 ... S K1=K1+1
"RTN","DGPTRI3",122,0)
 ... S DG801(I2,K1,"DATA")=$P(^DGCPT(46,K,0),U,4,7)_U_$P(^DGCPT(46,K,0),U,15,18)
"RTN","DGPTRI3",123,0)
 ... F L=1:1:8 S DGICD=$P(DG801(I2,K1,"DATA"),U,L) I DGICD D  Q:$G(ERR6)
"RTN","DGPTRI3",124,0)
 .... S X=$$CSI^ICDEX(80,DGICD)
"RTN","DGPTRI3",125,0)
 .... I +X'=DGCPTSYS S ERR6=DGCPTSYS
"RTN","DGPTRI3",126,0)
 .... Q
"RTN","DGPTRI3",127,0)
 ... S F=0
"RTN","DGPTRI3",128,0)
 ... Q
"RTN","DGPTRI3",129,0)
 ..I F K DG801(I2) S I2=I2-1
"RTN","DGPTRI3",130,0)
 .. Q
"RTN","DGPTRI3",131,0)
 . Q
"RTN","DGPTRI3",132,0)
 K F,I,K,K1,N
"RTN","DGPTRI3",133,0)
 Q
"RTN","DGPTRI4")
0^73^B69886418
"RTN","DGPTRI4",1,0)
DGPTRI4 ;ALB/JDS/MJK/MTC/ADL/TJ/BOK,ISF/GJW,HIOFO/FT - PTF TRANSMISSION ;5/11/15 12:24pm
"RTN","DGPTRI4",2,0)
 ;;5.3;Registration;**850,884**;Aug 13, 1993;Build 31
"RTN","DGPTRI4",3,0)
 ;
"RTN","DGPTRI4",4,0)
 ; ^XMB(3.9) - #10066
"RTN","DGPTRI4",5,0)
 ; XLFSTR APIs - 10104
"RTN","DGPTRI4",6,0)
 ;
"RTN","DGPTRI4",7,0)
701 ; -- setup 701 transaction
"RTN","DGPTRI4",8,0)
 S Y=$$N701(J,T1)
"RTN","DGPTRI4",9,0)
 N K
"RTN","DGPTRI4",10,0)
 ;For Census records, send spaces for DISCHARGE SPECIALTY CODE (41-42), TYPE OF DISPOSITION (43), OUTPATIENT CARE STATUS (44),
"RTN","DGPTRI4",11,0)
 ;UNDER VA AUSPICES (45), PLACE OF DISPOSITION (46), RECEIVING FACILITY NUMBER (47-49), RECEIVING FACILITY
"RTN","DGPTRI4",12,0)
 ;SUFFIX (50-52), DXLS ONLY (66), PHYSICAL LOCATION CDR CODE (67-72) and PHYSICAL LOCATION CODE (73-74)
"RTN","DGPTRI4",13,0)
 I T1 F K=41:1:52,66:1:74 S $E(Y,K)=" "
"RTN","DGPTRI4",14,0)
 I T1 D CEN^DGPTRI1 D:'DGERR CSAVE ;S:'DGERR ^XMB(3.9,DGXMZ,2,DGCNT,0)=Y,DGCNT=DGCNT+1 Q
"RTN","DGPTRI4",15,0)
 I 'T1 D SAVE
"RTN","DGPTRI4",16,0)
 ;
"RTN","DGPTRI4",17,0)
702 ;create 702 only if there are secondary DXs
"RTN","DGPTRI4",18,0)
 Q:$G(DGRTY)=2  ;don't send 702 for census record
"RTN","DGPTRI4",19,0)
 Q:$$DXLSONLY^DGPTRNU1(J)  ;DXLS only (no secondary diagnoses)
"RTN","DGPTRI4",20,0)
 S Y=$$N702(J)
"RTN","DGPTRI4",21,0)
 D SAVE^DGPTRI2
"RTN","DGPTRI4",22,0)
 Q
"RTN","DGPTRI4",23,0)
 ;
"RTN","DGPTRI4",24,0)
POA(Y) ;-- Add POA to end of 101 segment with POA ;FT 3/23/15 - MAY NOT BE NEEDED
"RTN","DGPTRI4",25,0)
 N DGPOA,L,K S DGPOA=$G(^DGPT(J,82))
"RTN","DGPTRI4",26,0)
 S L=$P(DG70,U,10)_U_$P(DG70,U,16,24)_U_DG71
"RTN","DGPTRI4",27,0)
 F K=1:1:13 S Y=Y_$S($P(L,U,K)'="":$$POAVAL($P(DGPOA,U,K)),1:" ") ;6/18/2012 send what is stored per call with Dorothea Garrett.
"RTN","DGPTRI4",28,0)
 Q
"RTN","DGPTRI4",29,0)
 ;
"RTN","DGPTRI4",30,0)
POAVAL(POA) ; -- Convert POA indicator to a 1 or 0 for use in calculating DRG
"RTN","DGPTRI4",31,0)
 ; -- note:  Transmission of space " " if no corresponding DIAGNOSIS
"RTN","DGPTRI4",32,0)
 ; -- see POA^DGPTFD, same logic, different return values.
"RTN","DGPTRI4",33,0)
 S POA=$G(POA)
"RTN","DGPTRI4",34,0)
 ;
"RTN","DGPTRI4",35,0)
 ; -- On 8/9/2012 the ADT SME Determined that null POA should be defaulted to Yes
"RTN","DGPTRI4",36,0)
 ;    Due to the fact that the COTS PTF software was not uploading POA information.
"RTN","DGPTRI4",37,0)
 Q $S(POA="Y":"Y",POA="N":"N",POA="":"Y",POA="U":"U",POA="W":"W",1:"Y")
"RTN","DGPTRI4",38,0)
 ;
"RTN","DGPTRI4",39,0)
ENTER S Y=Y_$J($P(X,U,Z),L)
"RTN","DGPTRI4",40,0)
 Q
"RTN","DGPTRI4",41,0)
 ;
"RTN","DGPTRI4",42,0)
ENTER0 S Y=Y_$S($P(X,U,Z)]"":$E("00000",$L($P(X,U,Z))+1,L)_$P(X,U,Z),1:$J($P(X,U,Z),L))
"RTN","DGPTRI4",43,0)
 Q
"RTN","DGPTRI4",44,0)
 ;
"RTN","DGPTRI4",45,0)
SAVE ;validate data and save to MailMan message & ^TMP("AEDIT",$J)
"RTN","DGPTRI4",46,0)
 D SAVE^DGPTRI2
"RTN","DGPTRI4",47,0)
Q Q
"RTN","DGPTRI4",48,0)
 ;
"RTN","DGPTRI4",49,0)
CSAVE ;sets MailMan message, not ^TMP("AEDIT",$J)
"RTN","DGPTRI4",50,0)
 N DGY1,DGY2
"RTN","DGPTRI4",51,0)
 D FILL^DGPTRI2 ;fill out Y to 384 characters
"RTN","DGPTRI4",52,0)
 I $E(Y,2,4)=701 S DGY1=$E(Y,1,240),DGY2=$E(Y,241,384) D
"RTN","DGPTRI4",53,0)
 .S ^XMB(3.9,DGXMZ,2,DGCNT,0)=DGY1,DGCNT=DGCNT+1
"RTN","DGPTRI4",54,0)
 .S ^XMB(3.9,DGXMZ,2,DGCNT,0)=DGY2,DGCNT=DGCNT+1
"RTN","DGPTRI4",55,0)
 Q
"RTN","DGPTRI4",56,0)
CDR S Y=Y_$E($P(Z,".")_"0000",1,4)_$E($P(Z,".",2)_"00",1,2)
"RTN","DGPTRI4",57,0)
 Q
"RTN","DGPTRI4",58,0)
RTEN(X) ; This function will round X to the nearest multiple of ten.
"RTN","DGPTRI4",59,0)
 ; 0-4 ->DOWN; 5-9->UP
"RTN","DGPTRI4",60,0)
 Q (X\10)*10+$S(X#10>4:10,1:0)
"RTN","DGPTRI4",61,0)
 ;
"RTN","DGPTRI4",62,0)
ETHNIC(DGPTJ) ;Ethnicity (use first active value)
"RTN","DGPTRI4",63,0)
 ;Input - PTF ien
"RTN","DGPTRI4",64,0)
 ;Output - character string containing one ethnicity value and collection method
"RTN","DGPTRI4",65,0)
 N DGARRAY,DGNODE,DGNUM,DGETHNIC,DGLOOP,DGX,DGY
"RTN","DGPTRI4",66,0)
 M DGARRAY=^DPT(+^DGPT(DGPTJ,0),.06) ;get ETHNIC multiple from File 2
"RTN","DGPTRI4",67,0)
 S (DGETHNIC,DGY)="",DGLOOP=0,DGNUM=1
"RTN","DGPTRI4",68,0)
 F  S DGLOOP=+$O(DGARRAY(DGLOOP)) Q:'DGLOOP  D  Q:DGNUM>1
"RTN","DGPTRI4",69,0)
 .S DGNODE=$G(DGARRAY(DGLOOP,0))
"RTN","DGPTRI4",70,0)
 .Q:('DGNODE)!('$D(^DIC(10.2,+DGNODE,0)))  ;10.2=ETHNICITY file
"RTN","DGPTRI4",71,0)
 .Q:$$INACTIVE^DGUTL4(+DGNODE,2)  ;(VALUE,TYPE) where +DGNODE=ethnicity value and 2=ETHNICITY
"RTN","DGPTRI4",72,0)
 .S DGX=$$PTR2CODE^DGUTL4(+DGNODE,2,4) ;(VALUE,TYPE,CODE) where +DGNODE=ethnicity ien, 2=ETHNICITY and 4=PTF
"RTN","DGPTRI4",73,0)
 .S DGETHNIC=$S(DGX="":" ",1:DGX)
"RTN","DGPTRI4",74,0)
 .S DGX=$$PTR2CODE^DGUTL4(+$P(DGNODE,"^",2),3,4) ;(VALUE,TYPE,CODE) where $P(DGNODE,U,2)=ethnicity ien, 3=collection method ien and 4=PTF
"RTN","DGPTRI4",75,0)
 .S DGETHNIC=DGETHNIC_$S(DGX="":" ",1:DGX)
"RTN","DGPTRI4",76,0)
 .S DGNUM=DGNUM+1
"RTN","DGPTRI4",77,0)
 S DGY=DGY_$S(DGETHNIC="":"  ",1:DGETHNIC)
"RTN","DGPTRI4",78,0)
 Q DGY
"RTN","DGPTRI4",79,0)
 ;
"RTN","DGPTRI4",80,0)
RACE(DGPTJ) ;-- Race (use first 6 active values)
"RTN","DGPTRI4",81,0)
 ;Input - PTF ien
"RTN","DGPTRI4",82,0)
 ;Output - character string containing up to six race and collection methods
"RTN","DGPTRI4",83,0)
 N DGARRAY,DGNODE,DGNUM,DGRACE,DGI,DGK,DGX,DGY
"RTN","DGPTRI4",84,0)
 M DGARRAY=^DPT(+^DGPT(DGPTJ,0),.02) ;get RACE multiple from FILE 2
"RTN","DGPTRI4",85,0)
 S (DGRACE,DGY)="",DGI=0,DGNUM=1
"RTN","DGPTRI4",86,0)
 F  S DGI=+$O(DGARRAY(DGI)) Q:'DGI  D  Q:DGNUM>6
"RTN","DGPTRI4",87,0)
 .S DGNODE=$G(DGARRAY(DGI,0))
"RTN","DGPTRI4",88,0)
 .Q:('DGNODE)!('$D(^DIC(10,+DGNODE,0)))  ;10=RACE file
"RTN","DGPTRI4",89,0)
 .Q:$$INACTIVE^DGUTL4(+DGNODE)  ;(VALUE,TYPE) where +DGNODE=race value and 1=RACE (default is 1)
"RTN","DGPTRI4",90,0)
 .S DGX=$$PTR2CODE^DGUTL4(+DGNODE,1,4) ;(VALUE,TYPE CODE) where +DGNODE=race ien, 1=RACE and 4=PTF 
"RTN","DGPTRI4",91,0)
 .S DGRACE=DGRACE_$S(DGX="":" ",1:DGX)
"RTN","DGPTRI4",92,0)
 .S DGX=$$PTR2CODE^DGUTL4(+$P(DGNODE,"^",2),3,4) ;(VALUE,TYPE,CODE) where $P(DGNODE,U,2)=collection method ien, 3=COLLECTION TYPE and 4=PTF
"RTN","DGPTRI4",93,0)
 .S DGRACE=DGRACE_$S(DGX="":" ",1:DGX)
"RTN","DGPTRI4",94,0)
 .S DGNUM=DGNUM+1
"RTN","DGPTRI4",95,0)
 S DGX="" S $P(DGX," ",12)=""
"RTN","DGPTRI4",96,0)
 S DGRACE=$S(DGRACE="":"  ",1:DGRACE)_DGX
"RTN","DGPTRI4",97,0)
 S DGY=DGY_$E(DGRACE,1,12)
"RTN","DGPTRI4",98,0)
 Q DGY
"RTN","DGPTRI4",99,0)
 ;
"RTN","DGPTRI4",100,0)
N701(PTF,DGT1) ;create 701 segment
"RTN","DGPTRI4",101,0)
 N NODE,DFN,I,IENS,IENS2,X
"RTN","DGPTRI4",102,0)
 N NNAME ;node name
"RTN","DGPTRI4",103,0)
 N DTM,DDDIS,TDIS,DSPEC,TYDIS,PDIS,SA,X,I,RACEA,D1ONLY,DDATE,SC,SHAD
"RTN","DGPTRI4",104,0)
 N VAA,ASIH
"RTN","DGPTRI4",105,0)
 S DGT1=$G(DGT1) ;aka T1
"RTN","DGPTRI4",106,0)
 S NNAME=$S(DGT1:"C701",1:"N701")
"RTN","DGPTRI4",107,0)
 S IENS=PTF_","
"RTN","DGPTRI4",108,0)
 S DFN=$$GET1^DIQ(45,IENS,.01,"I"),IENS2=DFN_","
"RTN","DGPTRI4",109,0)
 S NODE=$$CDATA^DGPTRNU1(PTF,NNAME) ;control data
"RTN","DGPTRI4",110,0)
 S (DDATE,DTM)=$$DISP^DGPTRNU(PTF) ;date of disposition
"RTN","DGPTRI4",111,0)
 S DDIS=$$FDATE^DGPTRNU($P(DTM,".",1)) ;date in MMDDYY format
"RTN","DGPTRI4",112,0)
 S TDIS=$$TIME^DGPTRNU(DTM) ;time in HHMM format
"RTN","DGPTRI4",113,0)
 S:TDIS'?4N TDIS="0000" ;send zeros if time is blank
"RTN","DGPTRI4",114,0)
 S $E(NODE,31,36)=DDIS
"RTN","DGPTRI4",115,0)
 S $E(NODE,37,40)=TDIS
"RTN","DGPTRI4",116,0)
 S DSPEC=$$GET1^DIQ(45,IENS,71,"I") ;discharge specialty (pointer to file #42.4)
"RTN","DGPTRI4",117,0)
 S $E(NODE,41,42)=$$SPEC2PTF^DGPTRNU1(DSPEC) ;PTF code
"RTN","DGPTRI4",118,0)
 S $E(NODE,43)=$$TDIS^DGPTRNU1(PTF) ;type of disposition
"RTN","DGPTRI4",119,0)
 S $E(NODE,44)=$$GET1^DIQ(45,IENS,73,"I") ;outpatient care status
"RTN","DGPTRI4",120,0)
 S VAA=$$GET1^DIQ(45,IENS,74,"I")
"RTN","DGPTRI4",121,0)
 S $E(NODE,45)=$S(VAA=2:2,VAA=1:1,1:" ") ;VA auspices
"RTN","DGPTRI4",122,0)
 S $E(NODE,46)=$$PDIS^DGPTRNU(PTF) ;place of disposition
"RTN","DGPTRI4",123,0)
 S $E(NODE,47,49)=$$GET1^DIQ(45,IENS,76.1) ;receiving facility
"RTN","DGPTRI4",124,0)
 S $E(NODE,50,52)=$$GET1^DIQ(45,IENS,76.2) ;receiving facility suffix
"RTN","DGPTRI4",125,0)
 S ASIH=$$GET1^DIQ(45,IENS,77) ;asih days
"RTN","DGPTRI4",126,0)
 S ASIH=$S(ASIH>999:999,1:ASIH)
"RTN","DGPTRI4",127,0)
 S ASIH=$$JUSTIFY^DGPTRNU1(ASIH,3,"0","R")
"RTN","DGPTRI4",128,0)
 S $E(NODE,53,55)=$S(ASIH="000":"   ",1:ASIH) ;asih days
"RTN","DGPTRI4",129,0)
 S $E(NODE,56)="X" ;was race, but now is X
"RTN","DGPTRI4",130,0)
 S $E(NODE,57)=$$GET1^DIQ(45,IENS,78,"I") ;C&P status
"RTN","DGPTRI4",131,0)
 S $E(NODE,58,64)=$$FMTICD^DGPTRNU($$GET1^DIQ(45,IENS,79)) ;DXLS
"RTN","DGPTRI4",132,0)
 S $E(NODE,65)=$$GET1^DIQ(45,IENS,82.01,"I") ;POA for DXLS
"RTN","DGPTRI4",133,0)
 S D1ONLY=$$DXLSONLY^DGPTRNU1(PTF) ;DXLS only (no secondary diagnoses)
"RTN","DGPTRI4",134,0)
 S $E(NODE,66)=$S(D1ONLY:"X",1:" ")
"RTN","DGPTRI4",135,0)
 ;S X="",Z=+$O(^DGPT(PTF,535,"AM",$P(DDATE,".")-.0000001)) I $D(^DGPT(PTF,535,+$O(^(Z,0)),0)) S X=^(0) ;FT 4/1/15
"RTN","DGPTRI4",136,0)
 S X="",Z=+$O(^DGPT(PTF,535,"AM",DDATE-.0000001)) I $D(^DGPT(PTF,535,+$O(^(Z,0)),0)) S X=^(0) ;FT 4/1/15
"RTN","DGPTRI4",137,0)
 ;S DSPEC=$$GET1^DIQ(45,IENS,71,"I") ;discharge specialty
"RTN","DGPTRI4",138,0)
 S $E(NODE,67,72)=$$FMTMPCR^DGPTRNU1($P(X,U,16)) ;physical location CDR code
"RTN","DGPTRI4",139,0)
 S $E(NODE,73,74)=$$SPEC2PTF^DGPTRNU1($P(X,U,2)) ;physical location (specialty)
"RTN","DGPTRI4",140,0)
 S SC=$$GET1^DIQ(2,IENS2,.302) ;SC percentage
"RTN","DGPTRI4",141,0)
 S $E(NODE,75,77)=$$RJ^XLFSTR(SC,"3T",0) ;pad with leading zeros
"RTN","DGPTRI4",142,0)
 S $E(NODE,78)=" " ;Legionnaire's disease (not used)
"RTN","DGPTRI4",143,0)
 S $E(NODE,79)=" " ;suicide indicator (not used)
"RTN","DGPTRI4",144,0)
 S $E(NODE,80,83)=" " ;substance abuse (not used)
"RTN","DGPTRI4",145,0)
 ;positions 84-88 are not used with ICD-10
"RTN","DGPTRI4",146,0)
 S X=$$GET1^DIQ(45,IENS,79.25,"I") ;treated for SC condition
"RTN","DGPTRI4",147,0)
 S $E(NODE,89)=$S(X="Y":"Y",X="N":"N",1:" ")
"RTN","DGPTRI4",148,0)
 S $E(NODE,90)=$$AO^DGPTRNU(PTF) ;treated for AO condition
"RTN","DGPTRI4",149,0)
 S $E(NODE,91)=$$ION2^DGPTRNU(PTF) ;treated for ionizing radiation
"RTN","DGPTRI4",150,0)
 S $E(NODE,92)=$$SWASIA^DGPTRNU(PTF) ;treatment related to service in SW Asia
"RTN","DGPTRI4",151,0)
 S $E(NODE,93)=$$MST^DGPTRNU(PTF) ;treatment for/related to MST
"RTN","DGPTRI4",152,0)
 S $E(NODE,94)=$$HNC^DGPTRNU(PTF) ;treatment for HNC
"RTN","DGPTRI4",153,0)
 S $E(NODE,95,96)=$$ETHNIC(PTF) ;ethnicity
"RTN","DGPTRI4",154,0)
 S $E(NODE,97,108)=$$RACE(PTF) ;Up to 6 active entries for RACE INFORMATION
"RTN","DGPTRI4",155,0)
 S X=$$GET1^DIQ(45,IENS,79.31,"I")
"RTN","DGPTRI4",156,0)
 S $E(NODE,109)=$S(X="Y":"Y",X="N":"N",1:" ") ;related to combat
"RTN","DGPTRI4",157,0)
 S SHAD=$$SHAD^DGPTRNU(PTF) ;treatment for shad
"RTN","DGPTRI4",158,0)
 S $E(NODE,110)=$S(SHAD=1:"Y",SHAD=0:"N",1:" ") ;1=Yes, 0=No
"RTN","DGPTRI4",159,0)
 Q NODE
"RTN","DGPTRI4",160,0)
 ;
"RTN","DGPTRI4",161,0)
N702(PTF) ;create 702 segment
"RTN","DGPTRI4",162,0)
 N NODE,I,IENS,DGDX,DGLOOP,DGPOA,DGSTRING,DGPTTMP
"RTN","DGPTRI4",163,0)
 N NNAME ;node name
"RTN","DGPTRI4",164,0)
 N DTM,DDIS,TDIS,DXCODES,EFFDATE,IMPDATE
"RTN","DGPTRI4",165,0)
 S IENS=PTF_","
"RTN","DGPTRI4",166,0)
 S NNAME="N702"
"RTN","DGPTRI4",167,0)
 S NODE=$$CDATA^DGPTRNU1(PTF,NNAME) ;control data
"RTN","DGPTRI4",168,0)
 S DTM=$$GET1^DIQ(45,IENS,70,"I") ;date/time of discharge
"RTN","DGPTRI4",169,0)
 S DDIS=$$FDATE^DGPTRNU($P(DTM,".",1)) ;date in MMDDYY format
"RTN","DGPTRI4",170,0)
 S TDIS=$$TIME^DGPTRNU(DTM) ;time in HHMM format
"RTN","DGPTRI4",171,0)
 S:TDIS'?4N TDIS="0000" ;send zeros if time is blank
"RTN","DGPTRI4",172,0)
 S $E(NODE,31,36)=DDIS
"RTN","DGPTRI4",173,0)
 S $E(NODE,37,40)=TDIS
"RTN","DGPTRI4",174,0)
 D EFFDATE^DGPTIC10(PTF) ;get effective date to check icd version of dx codes
"RTN","DGPTRI4",175,0)
 D PTFICD^DGPTFUT(701,PTF,,.DXCODES) ;get secondary dx and poa values
"RTN","DGPTRI4",176,0)
 S DGLOOP=0,DGSTRING=""
"RTN","DGPTRI4",177,0)
 F  S DGLOOP=$O(DXCODES(DGLOOP)) Q:DGLOOP=""  D  ;ignore DXCODES(0). It is sent in 701 segment.
"RTN","DGPTRI4",178,0)
 .S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",$P(DXCODES(DGLOOP),U,1),EFFDATE,"I") ;get dx code info
"RTN","DGPTRI4",179,0)
 .I +DGPTTMP>0&($P(DGPTTMP,U,10)) D  ;check ien and status
"RTN","DGPTRI4",180,0)
 ..S DGDX=$P(DXCODES(DGLOOP),U,3) ;dx external value
"RTN","DGPTRI4",181,0)
 ..S DGDX=$$FMTICD^DGPTRNU(DGDX) ;remove decimal point
"RTN","DGPTRI4",182,0)
 ..S DGDX=$$LJ^XLFSTR(DGDX,7," ") ;left justify & add spaces to the right to reach 7 characters
"RTN","DGPTRI4",183,0)
 ..S DGPOA=$P(DXCODES(DGLOOP),U,2) ;get poa code
"RTN","DGPTRI4",184,0)
 ..S DGPOA=$S(DGPOA'="":DGPOA,1:" ") ;use space, if no POA code
"RTN","DGPTRI4",185,0)
 ..S DGSTRING=DGSTRING_DGDX_DGPOA ;build string of dx and poa values
"RTN","DGPTRI4",186,0)
 S $E(NODE,41,232)=DGSTRING_$$REPEAT^XLFSTR(" ",192-$L(DGSTRING))
"RTN","DGPTRI4",187,0)
 Q NODE
"RTN","DGPTRI4",188,0)
 ;
"RTN","DGPTRNU")
0^60^B55750657
"RTN","DGPTRNU",1,0)
DGPTRNU ;ISF/GJW,HIOFO/FT - PTF TRANSMISSION ;2/18/15 2:28pm
"RTN","DGPTRNU",2,0)
 ;;5.3;Registration;**884**;Aug 13, 1993;Build 31
"RTN","DGPTRNU",3,0)
 ;
"RTN","DGPTRNU",4,0)
 ;XLFDT - #10103
"RTN","DGPTRNU",5,0)
 ;
"RTN","DGPTRNU",6,0)
FDATE(DGDT,DGDF) ;format date as MMDDYY
"RTN","DGPTRNU",7,0)
 ;Format options
"RTN","DGPTRNU",8,0)
 ;1 - MMDDYY
"RTN","DGPTRNU",9,0)
 ;2 - MMDDYYYY
"RTN","DGPTRNU",10,0)
 N X,MON,DAY,YR,VAL
"RTN","DGPTRNU",11,0)
 S DGDF=$G(DGDF,1) ;default to 2-digit date
"RTN","DGPTRNU",12,0)
 S X=$$FMTE^XLFDT(DGDT,"5ZP")
"RTN","DGPTRNU",13,0)
 S MON=$P(X,"/")
"RTN","DGPTRNU",14,0)
 S DAY=$P(X,"/",2)
"RTN","DGPTRNU",15,0)
 S YR=$P(X,"/",3)
"RTN","DGPTRNU",16,0)
 S:DGDF=1 VAL=MON_DAY_$E(YR,3,4)
"RTN","DGPTRNU",17,0)
 S:DGDF=2 VAL=MON_DAY_YR
"RTN","DGPTRNU",18,0)
 Q $S(+DGDT'>0:"",1:VAL)
"RTN","DGPTRNU",19,0)
 ;
"RTN","DGPTRNU",20,0)
TIME(DTM) ;extract time in HHMM format from date/time
"RTN","DGPTRNU",21,0)
 N X,Y,H,M
"RTN","DGPTRNU",22,0)
 S X=$$FMTE^XLFDT(DTM,"6F")
"RTN","DGPTRNU",23,0)
 S Y=$P(X,"@",2)
"RTN","DGPTRNU",24,0)
 S H=$P(Y,":"),M=$P(Y,":",2)
"RTN","DGPTRNU",25,0)
 Q H_M
"RTN","DGPTRNU",26,0)
 ;
"RTN","DGPTRNU",27,0)
FMTICD(DGC) ;format ICD code for transmission
"RTN","DGPTRNU",28,0)
 Q $TR(DGC,".","")
"RTN","DGPTRNU",29,0)
 ;
"RTN","DGPTRNU",30,0)
 ;Retrieve nodes from PTF CLOSE OUT (#45.84) where appropriate
"RTN","DGPTRNU",31,0)
GETNODE(DGPTF,DGHOW,DGNODE) ;
"RTN","DGPTRNU",32,0)
 ;DGHOW = 1 - use PTF CLOSE OUT node if defined, PTF otherwise
"RTN","DGPTRNU",33,0)
 ;DGHOW = 2 - use PTF file
"RTN","DGPTRNU",34,0)
 ;DGHOW = 3 - use PTF CLOSE OUT record (forced)
"RTN","DGPTRNU",35,0)
 N VAL,DFN,COUT,IENS45,IENS2,FLD,NODE
"RTN","DGPTRNU",36,0)
 ;the field numbers for the various STORE(*) fields
"RTN","DGPTRNU",37,0)
 S NODE=$S(DGNODE=0:0,DGNODE=32:.32,DGNODE=321:.321,DGNODE=52:.52,1:"")
"RTN","DGPTRNU",38,0)
 S FLD=$S(DGNODE=0:10,DGNODE=11:11,DGNODE=52:12,DGNODE=321:13,DGNODE=32:14,DGNODE=57:15,.3:16,1:0)
"RTN","DGPTRNU",39,0)
 S VAL=""
"RTN","DGPTRNU",40,0)
 S IENS45=DGPTF_","
"RTN","DGPTRNU",41,0)
 S COUT=$$GET1^DIQ(45,IENS45,7.1,"I") ;corresponding entry in PTF CLOSE OUT file
"RTN","DGPTRNU",42,0)
 S DFN=$$GET1^DIQ(45,IENS45,.01,"I") ;ft 2/12/15
"RTN","DGPTRNU",43,0)
 I DGHOW'=3 D
"RTN","DGPTRNU",44,0)
 .S DFN=$$GET1^DIQ(45,IENS45,.01,"I")
"RTN","DGPTRNU",45,0)
 .S IENS2=$G(DFN)_","
"RTN","DGPTRNU",46,0)
 I DGHOW=1 S VAL=$S(COUT:$$GET1^DIQ(45.84,COUT_",",FLD),1:$G(^DPT(DFN,DGNODE)))
"RTN","DGPTRNU",47,0)
 I DGHOW=2 S VAL=$G(^DPT(DFN,.321))
"RTN","DGPTRNU",48,0)
 I DGHOW=3 S VAL=$$GET1^DIQ(45.84,COUT_",",FLD)
"RTN","DGPTRNU",49,0)
 Q VAL
"RTN","DGPTRNU",50,0)
 ;
"RTN","DGPTRNU",51,0)
 ;convenience routines for commonly used nodes
"RTN","DGPTRNU",52,0)
GET0(DGPTF,DGHOW) ;
"RTN","DGPTRNU",53,0)
 S DGHOW=$G(DGHOW,1)
"RTN","DGPTRNU",54,0)
 Q $$GETNODE(DGPTF,DGHOW,0)
"RTN","DGPTRNU",55,0)
 ;
"RTN","DGPTRNU",56,0)
GET32(DGPTF,DGHOW) ;
"RTN","DGPTRNU",57,0)
 S DGHOW=$G(DGHOW,1)
"RTN","DGPTRNU",58,0)
 Q $$GETNODE(DGPTF,DGHOW,.32)
"RTN","DGPTRNU",59,0)
 ;
"RTN","DGPTRNU",60,0)
GET321(DGPTF,DGHOW) ;
"RTN","DGPTRNU",61,0)
 S DGHOW=$G(DGHOW,1)
"RTN","DGPTRNU",62,0)
 Q $$GETNODE(DGPTF,DGHOW,.321)
"RTN","DGPTRNU",63,0)
 ;
"RTN","DGPTRNU",64,0)
GET52(DGPTF,DGHOW) ;
"RTN","DGPTRNU",65,0)
 S DGHOW=$G(DGHOW,1)
"RTN","DGPTRNU",66,0)
 Q $$GETNODE(DGPTF,DGHOW,.52)
"RTN","DGPTRNU",67,0)
 ;
"RTN","DGPTRNU",68,0)
POW(DGPTF) ;POW status
"RTN","DGPTRNU",69,0)
 ;returns
"RTN","DGPTRNU",70,0)
 ;1 - not a POW
"RTN","DGPTRNU",71,0)
 ;3 - POW, unknown
"RTN","DGPTRNU",72,0)
 ;4 - POW, World War I
"RTN","DGPTRNU",73,0)
 ;5 - POW, World War II (Europe)
"RTN","DGPTRNU",74,0)
 ;6 - POW, World War II (Pacific)
"RTN","DGPTRNU",75,0)
 ;7 - POW, Korea
"RTN","DGPTRNU",76,0)
 ;8 - POW, Vietnam
"RTN","DGPTRNU",77,0)
 ;9 - POW, combination
"RTN","DGPTRNU",78,0)
 N DG52,SI,PP,Y,VAL
"RTN","DGPTRNU",79,0)
 S DG52=$$GET52^DGPTRNU(DGPTF)
"RTN","DGPTRNU",80,0)
 S SI=$P(DG52,U,5) ;POW status indicated?,
"RTN","DGPTRNU",81,0)
 S Y=$P(DG52,U,6) ;POW period
"RTN","DGPTRNU",82,0)
 S VAL=1
"RTN","DGPTRNU",83,0)
 I SI="Y" D
"RTN","DGPTRNU",84,0)
 .S VAL=$S(Y=0:3,Y=2:5,Y=3:6,Y=4:7,Y=5:8,Y=6:9,Y=7:"A",Y=8:"B",1:" ")
"RTN","DGPTRNU",85,0)
 Q VAL
"RTN","DGPTRNU",86,0)
 ;
"RTN","DGPTRNU",87,0)
PDIS(DGPTF) ;place of disposition
"RTN","DGPTRNU",88,0)
 N IENS,IENS1,X
"RTN","DGPTRNU",89,0)
 S IENS=DGPTF_","
"RTN","DGPTRNU",90,0)
 S X=$$GET1^DIQ(45,IENS,75,"I"),IENS1=X_","
"RTN","DGPTRNU",91,0)
 Q $$GET1^DIQ(45.6,IENS1,2) ;PTF code
"RTN","DGPTRNU",92,0)
 ;
"RTN","DGPTRNU",93,0)
POS(DGPTF) ;period of service
"RTN","DGPTRNU",94,0)
 N IENS45,DG32,POS1,POS,MV,ELIG
"RTN","DGPTRNU",95,0)
 S IENS45=DGPTF_","
"RTN","DGPTRNU",96,0)
 S DG32=$$GET32^DGPTRNU(DGPTF)
"RTN","DGPTRNU",97,0)
 S POS1=$P(DG32,U,3) ;period of service from PATIENT file (pointer to file #21)
"RTN","DGPTRNU",98,0)
 S POS=$$GET1^DIQ(21,POS1_",",.03) ;code
"RTN","DGPTRNU",99,0)
 ;Now, use the "APTF" cross-reference on the PATIENT MOVEMENT (#405) file to look up
"RTN","DGPTRNU",100,0)
 ;the patient movement associated with this PTF entry
"RTN","DGPTRNU",101,0)
 S MV="" S:$D(^DGPM("APTF",PTF)) MV=$O(^DGPM("APTF",PTF,0))
"RTN","DGPTRNU",102,0)
 ;If the patient movement has ODS AT ADMISSION set (for Operation Desert Shield), ensure
"RTN","DGPTRNU",103,0)
 ;that POS=6 (ODS). This is necessary because the POS may have been set to another value
"RTN","DGPTRNU",104,0)
 ;according the business rules.
"RTN","DGPTRNU",105,0)
 I +$$GET1^DIQ(405,MV_",",11500.01)>0 S POS=6
"RTN","DGPTRNU",106,0)
 S ELIG=$$GET1^DIQ(45,IENS45,20.1,"I") ;admitting eligibility
"RTN","DGPTRNU",107,0)
 S POS=$$CKPOS^DGPTUTL(ELIG,POS) ;update POS (to account for non-vet eligibilities)
"RTN","DGPTRNU",108,0)
 Q POS
"RTN","DGPTRNU",109,0)
 ;
"RTN","DGPTRNU",110,0)
MSTATUS(DGPTF) ;marital status
"RTN","DGPTRNU",111,0)
 N IENS45,DFN,IENS,X,MS
"RTN","DGPTRNU",112,0)
 S IENS45=DGPTF_","
"RTN","DGPTRNU",113,0)
 S DFN=$$GET1^DIQ(45,IENS45,.01,"I"),IENS=DFN_","
"RTN","DGPTRNU",114,0)
 S X=$$GET1^DIQ(2,IENS,.05,"I")
"RTN","DGPTRNU",115,0)
 S MS=$$GET1^DIQ(11,X_",",2,"I")
"RTN","DGPTRNU",116,0)
 S:MS="" MS="U"
"RTN","DGPTRNU",117,0)
 Q MS
"RTN","DGPTRNU",118,0)
 ;
"RTN","DGPTRNU",119,0)
ION(DGPTF) ;ionizing radiation (used by 101)
"RTN","DGPTRNU",120,0)
 ;return value
"RTN","DGPTRNU",121,0)
 ;1 - no claim of exposure
"RTN","DGPTRNU",122,0)
 ;2 - claims exposure, Japan
"RTN","DGPTRNU",123,0)
 ;3 - claims exposure, testing
"RTN","DGPTRNU",124,0)
 ;4 - claims exposure, both testing and Japan
"RTN","DGPTRNU",125,0)
 ;5 - claims exposure, underground nuclear testing
"RTN","DGPTRNU",126,0)
 ;6 - claims exposure, nuclear facility
"RTN","DGPTRNU",127,0)
 ;7 - claims exposure, other
"RTN","DGPTRNU",128,0)
 N DG321,DGNT,DGPOS,RE,E,VPOS
"RTN","DGPTRNU",129,0)
 S DG321=$$GET321^DGPTRNU(DGPTF)
"RTN","DGPTRNU",130,0)
 S DGNT=$P(DG321,U,12) ;radiation exposure method
"RTN","DGPTRNU",131,0)
 S RE=$P(DG321,U,3) ;radiation exposure indicated
"RTN","DGPTRNU",132,0)
 S E=" "
"RTN","DGPTRNU",133,0)
 S DGPOS=$$POS(DGPTF)
"RTN","DGPTRNU",134,0)
 ;valid POS for ionizing radiation?
"RTN","DGPTRNU",135,0)
 S VPOS=$S(DGPOS=0:1,DGPOS=2:1,DGPOS=4:1,DGPOS=5:1,DGPOS=7:1,DGPOS=8:1,DGPOS="Z":1,1:0)
"RTN","DGPTRNU",136,0)
 D:VPOS
"RTN","DGPTRNU",137,0)
 .S E=$S(RE'="Y":1,1:DGNT)
"RTN","DGPTRNU",138,0)
 Q E
"RTN","DGPTRNU",139,0)
 ;
"RTN","DGPTRNU",140,0)
ION2(DGPTF) ;ionizing radiation (used by 701)
"RTN","DGPTRNU",141,0)
 ;returns Y(es), N(o) or space
"RTN","DGPTRNU",142,0)
 N G
"RTN","DGPTRNU",143,0)
 S G=$$GET1^DIQ(45,DGPTF_",",79.27,"I")
"RTN","DGPTRNU",144,0)
 Q $S(G="Y":"Y",G="N":"N",1:" ")
"RTN","DGPTRNU",145,0)
 ;
"RTN","DGPTRNU",146,0)
MST(DGPTF) ;military sexual trauma
"RTN","DGPTRNU",147,0)
 N IENS,X,Y
"RTN","DGPTRNU",148,0)
 S IENS=DGPTF_","
"RTN","DGPTRNU",149,0)
 S Y=$$GET1^DIQ(45,IENS,79.29,"I")
"RTN","DGPTRNU",150,0)
 Q $S(Y="Y":"Y",Y="N":"N",1:" ")
"RTN","DGPTRNU",151,0)
 ;
"RTN","DGPTRNU",152,0)
HNC(DGPTF) ;treatment related to head/neck cancer (HNC)
"RTN","DGPTRNU",153,0)
 N Y,IENS
"RTN","DGPTRNU",154,0)
 S IENS=DGPTF_","
"RTN","DGPTRNU",155,0)
 S Y=$$GET1^DIQ(45,IENS,79.3,"I")
"RTN","DGPTRNU",156,0)
 Q $S(Y="Y":"Y",Y="N":"N",1:" ")
"RTN","DGPTRNU",157,0)
 ;
"RTN","DGPTRNU",158,0)
SWASIA(DGPTF) ;treatment related to service in SW Asia
"RTN","DGPTRNU",159,0)
 N Y,IENS
"RTN","DGPTRNU",160,0)
 S IENS=DGPTF_","
"RTN","DGPTRNU",161,0)
 S Y=$$GET1^DIQ(45,IENS,79.28)
"RTN","DGPTRNU",162,0)
 Q $S(Y="":" ",1:Y)
"RTN","DGPTRNU",163,0)
 ;
"RTN","DGPTRNU",164,0)
CVS(DGPTF) ;combat vet status
"RTN","DGPTRNU",165,0)
 ;returns 1=yes, 2=no
"RTN","DGPTRNU",166,0)
 N DG0,IENS,DFN,Y,ADATE
"RTN","DGPTRNU",167,0)
 S DG0=$$GET0^DGPTRNU(DGPTF)
"RTN","DGPTRNU",168,0)
 S IENS=DGPTF_","
"RTN","DGPTRNU",169,0)
 S DFN=$$GET1^DIQ(45,IENS,.01,"I")
"RTN","DGPTRNU",170,0)
 S ADATE=$P(DG0,U,2) ;admission date
"RTN","DGPTRNU",171,0)
 I ADATE S Y=$$CVEDT^DGCV(DFN,ADATE)
"RTN","DGPTRNU",172,0)
 E  S Y=$$CVEDT^DGCV(DFN,ADATE)
"RTN","DGPTRNU",173,0)
 Q $S(+Y>0:1,1:2)
"RTN","DGPTRNU",174,0)
 ;
"RTN","DGPTRNU",175,0)
CVDT(DGPTF) ;combat vet date
"RTN","DGPTRNU",176,0)
 N DG0,IENS,DFN,ADATE,Y
"RTN","DGPTRNU",177,0)
 S DG0=$$GET0^DGPTRNU(DGPTF)
"RTN","DGPTRNU",178,0)
 S IENS=DGPTF_","
"RTN","DGPTRNU",179,0)
 S DFN=$$GET1^DIQ(45,IENS,.01,"I")
"RTN","DGPTRNU",180,0)
 S ADATE=+$P(DG0,U,2) ;admission date
"RTN","DGPTRNU",181,0)
 I ADATE S Y=$$CVEDT^DGCV(DFN,ADATE)
"RTN","DGPTRNU",182,0)
 E  S Y=$$CVEDT^DGCV(DFN)
"RTN","DGPTRNU",183,0)
 Q $S(+Y>0:$P(Y,U,2),1:0)
"RTN","DGPTRNU",184,0)
 ;
"RTN","DGPTRNU",185,0)
SHAD(DGPTF) ;SHAD/Project 112
"RTN","DGPTRNU",186,0)
 N IENS,Y
"RTN","DGPTRNU",187,0)
 S IENS=DGPTF_","
"RTN","DGPTRNU",188,0)
 S Y=$$GET1^DIQ(45,IENS,79.32,"I")
"RTN","DGPTRNU",189,0)
 Q $S(Y="":" ",1:Y)
"RTN","DGPTRNU",190,0)
 ;
"RTN","DGPTRNU",191,0)
KATRINA(DGPTF) ;Katrina indicator
"RTN","DGPTRNU",192,0)
 N DFN,DG0,ERI
"RTN","DGPTRNU",193,0)
 S IENS=DGPTF_","
"RTN","DGPTRNU",194,0)
 S DG0=$$GET0(DGPTF),DFN=+DG0
"RTN","DGPTRNU",195,0)
 S ERI=$$EMGRES^DGUTL(DFN) ;emergency response indicator
"RTN","DGPTRNU",196,0)
 ;returns "K" or " "
"RTN","DGPTRNU",197,0)
 Q $S("^K^"[(U_ERI_U):"K",1:" ")
"RTN","DGPTRNU",198,0)
 ;
"RTN","DGPTRNU",199,0)
MTI(DGPTF) ;means test indicator
"RTN","DGPTRNU",200,0)
 ;return value
"RTN","DGPTRNU",201,0)
 ;AS - SC and special category veterans
"RTN","DGPTRNU",202,0)
 ;AN - NSC veterans
"RTN","DGPTRNU",203,0)
 ;B -  category "B" NSC veterans
"RTN","DGPTRNU",204,0)
 ;C -  MT copay required (category "C" NSC veterans)
"RTN","DGPTRNU",205,0)
 ;N -  non-veterans
"RTN","DGPTRNU",206,0)
 ;X -  not applicable
"RTN","DGPTRNU",207,0)
 ;U -  not done/completed
"RTN","DGPTRNU",208,0)
 ;G -  GMT copay required
"RTN","DGPTRNU",209,0)
 N VAL,IENS,MT,AO
"RTN","DGPTRNU",210,0)
 S VAL="  "
"RTN","DGPTRNU",211,0)
 S IENS=DGPTF_","
"RTN","DGPTRNU",212,0)
 S AO=$$GET1^DIQ(45.84,IENS,79.26,"I") ;treated for AO condition
"RTN","DGPTRNU",213,0)
 S MT=$$GET1^DIQ(45.84,IENS,10,"I") ;means test indicator
"RTN","DGPTRNU",214,0)
 S MT=$S(MT="":"U",1:MT)
"RTN","DGPTRNU",215,0)
 S VAL=$S(AO="Y":"AS",1:MT)
"RTN","DGPTRNU",216,0)
 Q VAL
"RTN","DGPTRNU",217,0)
 ;
"RTN","DGPTRNU",218,0)
AO(DGPTF) ;treated for agent orange exposure (used by 701)
"RTN","DGPTRNU",219,0)
 ;Y - yes
"RTN","DGPTRNU",220,0)
 ;N - no
"RTN","DGPTRNU",221,0)
 ;" " - unknown or no value
"RTN","DGPTRNU",222,0)
 N G
"RTN","DGPTRNU",223,0)
 S G=$$GET1^DIQ(45,DGPTF_",",79.26,"I")
"RTN","DGPTRNU",224,0)
 Q $S(G="Y":"Y",G="N":"N",1:" ")
"RTN","DGPTRNU",225,0)
 ;
"RTN","DGPTRNU",226,0)
AO2(DGPTF) ;agent orange exposure (used by 101)
"RTN","DGPTRNU",227,0)
 ;return value:
"RTN","DGPTRNU",228,0)
 ;1 - no claim of service in Vietnam
"RTN","DGPTRNU",229,0)
 ;2 - claims service in Vietnam, no exposure
"RTN","DGPTRNU",230,0)
 ;3 - claims service in Vietnam with exposure
"RTN","DGPTRNU",231,0)
 ;4 - claims service in Vietnam with exposure unknown
"RTN","DGPTRNU",232,0)
 ;5 - claims service in DMZ with exposure
"RTN","DGPTRNU",233,0)
 ;may return blank
"RTN","DGPTRNU",234,0)
 N G,DGAO,DGPOS,DG321
"RTN","DGPTRNU",235,0)
 S DG321=$$GET321(DGPTF)
"RTN","DGPTRNU",236,0)
 S G=" "
"RTN","DGPTRNU",237,0)
 S DGAO=$P(DG321,U,2)
"RTN","DGPTRNU",238,0)
 S DGPOS=$$POS^DGPTRNU(DGPTF)
"RTN","DGPTRNU",239,0)
 S:DGPOS=7 G=$S($P(DG321,U)'="Y":1,DGAO="N":2,DGAO="Y":3,1:4)
"RTN","DGPTRNU",240,0)
 ;Check to see if the exposure location was the Korean DMZ
"RTN","DGPTRNU",241,0)
 S:(DGAO="Y")&($P(DG321,U,13)="K") G=5
"RTN","DGPTRNU",242,0)
 Q G
"RTN","DGPTRNU",243,0)
 ;
"RTN","DGPTRNU",244,0)
INCOME(DGPTF) ;income
"RTN","DGPTRNU",245,0)
 N INC,IENS,LI,PAD
"RTN","DGPTRNU",246,0)
 S IENS=DGPTF_","
"RTN","DGPTRNU",247,0)
 S INC=$$GET1^DIQ(45,IENS,101.07)
"RTN","DGPTRNU",248,0)
 S:INC>999999 INC=999999
"RTN","DGPTRNU",249,0)
 S LI=$L(INC)
"RTN","DGPTRNU",250,0)
 S PAD=$S(LI=0:"000000",LI=1:"00000",LI=2:"0000",LI=3:"000",LI=4:"00",LI=5:"0",1:"")
"RTN","DGPTRNU",251,0)
 Q PAD_INC
"RTN","DGPTRNU",252,0)
 ;
"RTN","DGPTRNU",253,0)
DISP(PTF) ;date of disposition
"RTN","DGPTRNU",254,0)
 N IENS
"RTN","DGPTRNU",255,0)
 S IENS=PTF_","
"RTN","DGPTRNU",256,0)
 Q $$GET1^DIQ(45,IENS,70,"I") ;discharge date
"RTN","DGPTRNU",257,0)
 ;
"RTN","DGPTRNU",258,0)
GETMPCR(DGTS) ;MPCR from specialty
"RTN","DGPTRNU",259,0)
  N ARRY,Y,Z,MPCR
"RTN","DGPTRNU",260,0)
  S Y=$$TSDATA^DGACT(42.4,DGTS,.ARRY)
"RTN","DGPTRNU",261,0)
  S Z=$G(ARRY(6))
"RTN","DGPTRNU",262,0)
  I Y>0 S MPCR=$E($P(Z,".")_"0000",1,4)_$E($P(Z,".",2)_"00",1,2)
"RTN","DGPTRNU",263,0)
  E  S MPCR=""
"RTN","DGPTRNU",264,0)
  Q MPCR
"RTN","DGPTRNU",265,0)
  ;
"RTN","DGPTRNU",266,0)
SPCODE(DGTS) ;
"RTN","DGPTRNU",267,0)
 N ARRY,Y,Z
"RTN","DGPTRNU",268,0)
 S Y=$$TSDATA^DGACT(42.4,DGTS,.ARRY)
"RTN","DGPTRNU",269,0)
 S Z=$G(ARRY(6))
"RTN","DGPTRNU",270,0)
 Q $S(Y>0:Z,1:"")
"RTN","DGPTRNU",271,0)
 ;
"RTN","DGPTRNU",272,0)
RACE(DGPTF,DGARR) ;
"RTN","DGPTRNU",273,0)
 N IENS45,IENS,DFN
"RTN","DGPTRNU",274,0)
 N OUT,MOUT
"RTN","DGPTRNU",275,0)
 N I,NUM,MORE,EVAL,IVAL
"RTN","DGPTRNU",276,0)
 S IENS45=DGPTF_","
"RTN","DGPTRNU",277,0)
 S DFN=$$GET1^DIQ(45,IENS45,.01,"I"),IENS=","_DFN_","
"RTN","DGPTRNU",278,0)
 ;retrieve at most 6 entries, screening out those that are inactive
"RTN","DGPTRNU",279,0)
 D LIST^DIC(2.02,IENS,".01",,6,,,,"I '$$INACTIVE^DGUTL4(Y)",,"OUT","MOUT")
"RTN","DGPTRNU",280,0)
 S NUM=$P(OUT("DILIST",0),U) ;number of subrercords returned
"RTN","DGPTRNU",281,0)
 S MORE=$P(OUT("DILIST",0),U,3) ;any more?
"RTN","DGPTRNU",282,0)
 F I=1:1:NUM D
"RTN","DGPTRNU",283,0)
 .S EVAL=$G(OUT("DILIST",1,I))
"RTN","DGPTRNU",284,0)
 .S IVAL=$G(OUT("DILIST",2,I))
"RTN","DGPTRNU",285,0)
 .S @DGARR@(I,"IEN")=IVAL
"RTN","DGPTRNU",286,0)
 .S @DGARR@(I,"VAL")=EVAL
"RTN","DGPTRNU",287,0)
 .S @DGARR@(I,"CODE")=$$PTR2CODE^DGUTL4(IVAL,1,4)
"RTN","DGPTRNU",288,0)
 Q
"RTN","DGPTRNU1")
0^61^B7245862
"RTN","DGPTRNU1",1,0)
DGPTRNU1 ;ISF/GJW,HIOFO/FT - PTF TRANSMISSION UTILITY ;4/20/15 10:28am
"RTN","DGPTRNU1",2,0)
 ;;5.3;Registration;**884**;Aug 13, 1993;Build 31
"RTN","DGPTRNU1",3,0)
 ;
"RTN","DGPTRNU1",4,0)
 ;no external references
"RTN","DGPTRNU1",5,0)
 ;
"RTN","DGPTRNU1",6,0)
DXLSONLY(DGPTF) ;no secondary diagnoses
"RTN","DGPTRNU1",7,0)
 N IENS,ROOT,MROOT,FIELDS,I,VAL
"RTN","DGPTRNU1",8,0)
 S IENS=$G(DGPTF)_","
"RTN","DGPTRNU1",9,0)
 S FIELDS="79.16;79.17;79.18;79.19;79.201;79.21;79.22;79.23;79.24;79.241;79.242;79.243;79.244;79.245;79.246;79.247;79.248;79.249;79.2491;79.24911;79.24912;79.24913;79.24914;79.24915"
"RTN","DGPTRNU1",10,0)
 D GETS^DIQ(45,IENS,FIELDS,"I","ROOT","MROOT")
"RTN","DGPTRNU1",11,0)
 S VAL=1 ;defaault to yes
"RTN","DGPTRNU1",12,0)
 F I=1:1:$L(FIELDS,";") D
"RTN","DGPTRNU1",13,0)
 .I $G(ROOT(45,IENS,$P(FIELDS,";",I),"I"))'="" S VAL=0
"RTN","DGPTRNU1",14,0)
 Q VAL
"RTN","DGPTRNU1",15,0)
 ;
"RTN","DGPTRNU1",16,0)
TDIS(DGPTF) ;type of disposition
"RTN","DGPTRNU1",17,0)
 N IENS
"RTN","DGPTRNU1",18,0)
 S IENS=DGPTF_","
"RTN","DGPTRNU1",19,0)
 Q $$GET1^DIQ(45,IENS,72,"I")
"RTN","DGPTRNU1",20,0)
 ;
"RTN","DGPTRNU1",21,0)
JUSTIFY(DGX,DGWIDTH,DGPAD,DGDIR,DGTRUNC) ;justify within a field
"RTN","DGPTRNU1",22,0)
 ;DGX - the value to be justified
"RTN","DGPTRNU1",23,0)
 ;DGWIDTH - width of the field
"RTN","DGPTRNU1",24,0)
 ;DGPAD - pad character (defaults to space)
"RTN","DGPTRNU1",25,0)
 ;DGDIR - direction of justification ("L" or "R", defaults to "L")
"RTN","DGPTRNU1",26,0)
 ;DGTRUNC - should the value be truncated if it is larger than DGWIDTH Default is 1 (yes).
"RTN","DGPTRNU1",27,0)
 N PAD,I,N
"RTN","DGPTRNU1",28,0)
 S DGX=$G(DGX),DGDIR=$G(DGDIR,"L"),DGPAD=$G(DGPAD," ")
"RTN","DGPTRNU1",29,0)
 S DGPAD=$E(DGPAD,1),DGTRUNC=$G(DGTRUNC,1)
"RTN","DGPTRNU1",30,0)
 S PAD="",VAL=$G(DGX)
"RTN","DGPTRNU1",31,0)
 I $L(DGX)<DGWIDTH D
"RTN","DGPTRNU1",32,0)
 .S N=DGWIDTH-$L(DGX)
"RTN","DGPTRNU1",33,0)
 .F I=1:1:N S PAD=PAD_DGPAD
"RTN","DGPTRNU1",34,0)
 .S VAL=$S(DGDIR="L":DGX_PAD,1:PAD_DGX)
"RTN","DGPTRNU1",35,0)
 I ($L(DGX)'<DGWIDTH)&DGTRUNC S VAL=$E(VAL,1,DGWIDTH)
"RTN","DGPTRNU1",36,0)
 Q VAL
"RTN","DGPTRNU1",37,0)
 ;
"RTN","DGPTRNU1",38,0)
SPEC2PTF(DGSPEC) ;return bed/ward (PTF code) for specialty
"RTN","DGPTRNU1",39,0)
 N Y,ARRY,X
"RTN","DGPTRNU1",40,0)
 S Y=$$TSDATA^DGACT(42.4,DGSPEC,.ARRY)
"RTN","DGPTRNU1",41,0)
 S X=$S(Y'>0:"",1:$G(ARRY(7)))
"RTN","DGPTRNU1",42,0)
 S X=$$JUSTIFY(X,2,"0","R")
"RTN","DGPTRNU1",43,0)
 Q X
"RTN","DGPTRNU1",44,0)
 ;
"RTN","DGPTRNU1",45,0)
FMTMPCR(DGX) ;format MPCR code
"RTN","DGPTRNU1",46,0)
 Q $E($P(DGX,".")_"0000",1,4)_$E($P(DGX,".",2)_"00",1,2)
"RTN","DGPTRNU1",47,0)
 ;
"RTN","DGPTRNU1",48,0)
CDATA(PTF,SEG) ;control data (all segments)
"RTN","DGPTRNU1",49,0)
 N NODE ;return value
"RTN","DGPTRNU1",50,0)
 N IENS,IENS2
"RTN","DGPTRNU1",51,0)
 N DFN,SSN,PSR,FAC,SUF,ADATE,ATIME
"RTN","DGPTRNU1",52,0)
 S IENS=PTF_","
"RTN","DGPTRNU1",53,0)
 S DFN=$$GET1^DIQ(45,IENS,.01,"I"),IENS2=DFN_","
"RTN","DGPTRNU1",54,0)
 S SSN=$$GET1^DIQ(2,IENS2,.09,"I")
"RTN","DGPTRNU1",55,0)
 S PSR=$$GET1^DIQ(2,IENS2,.0906,"I") ;pseudo-SSN reason
"RTN","DGPTRNU1",56,0)
 S NODE=$G(SEG) ;transaction type
"RTN","DGPTRNU1",57,0)
 S $E(NODE,6,14)=SSN
"RTN","DGPTRNU1",58,0)
 S $E(NODE,5)=$S($L(PSR)>0:"P",1:" ")
"RTN","DGPTRNU1",59,0)
 S ADATE=$$GET1^DIQ(45,IENS,2,"I") ;admission date
"RTN","DGPTRNU1",60,0)
 S $E(NODE,15,20)=$$FDATE^DGPTRNU($P(ADATE,".")) ;format as MMDDYY
"RTN","DGPTRNU1",61,0)
 S ATIME=$$TIME^DGPTRNU(ADATE) ;admission time (HHMM)
"RTN","DGPTRNU1",62,0)
 S:ATIME'?4N ATIME="0000"
"RTN","DGPTRNU1",63,0)
 S $E(NODE,21,24)=ATIME
"RTN","DGPTRNU1",64,0)
 S FAC=$$GET1^DIQ(45,IENS,3,"I") ;facility number
"RTN","DGPTRNU1",65,0)
 S $E(NODE,25,27)=FAC ;discharge facility
"RTN","DGPTRNU1",66,0)
 S SUF=$$GET1^DIQ(45,IENS,5,"I") ;suffix
"RTN","DGPTRNU1",67,0)
 S $E(NODE,28,30)=$E(SUF_"   ",1,3) ;suffix (or blank)
"RTN","DGPTRNU1",68,0)
 Q NODE
"RTN","DGPTRPO")
0^86^B20840184
"RTN","DGPTRPO",1,0)
DGPTRPO ;ALB/MTC,HIOFO/FT - RECORD PRINT OUT (RPO);5/26/15 3:24pm
"RTN","DGPTRPO",2,0)
 ;;5.3;Registration;**884**;Aug 13, 1993;Build 31
"RTN","DGPTRPO",3,0)
 ;
"RTN","DGPTRPO",4,0)
 ; VATRAN - #1011
"RTN","DGPTRPO",5,0)
 ; XMD - #10070
"RTN","DGPTRPO",6,0)
 ; VASITE - #10112
"RTN","DGPTRPO",7,0)
 ; XMA2 - #10066
"RTN","DGPTRPO",8,0)
 ; ^XMB(3.9) - #10113
"RTN","DGPTRPO",9,0)
 ; ^VA(200) - #10060
"RTN","DGPTRPO",10,0)
 ; %ZIS - #10086
"RTN","DGPTRPO",11,0)
 ; ^DPT - #10035
"RTN","DGPTRPO",12,0)
 ; XLFSTR - #10104
"RTN","DGPTRPO",13,0)
 ;
"RTN","DGPTRPO",14,0)
EN ;-- generic N15x call. Record Print-Out (RPO) [DGPTTOOL RPO]
"RTN","DGPTRPO",15,0)
 D INIT G ENQ:DGOUT
"RTN","DGPTRPO",16,0)
 D FMT G ENQ:DGOUT
"RTN","DGPTRPO",17,0)
 S DIC="^DGP(45.87,",DIC(0)="L" K DO,DD D NOW^%DTC S X=% D FILE^DICN K DIC,DO
"RTN","DGPTRPO",18,0)
 G ENQ:Y<0 S (DA,DGDA)=+Y
"RTN","DGPTRPO",19,0)
EDIT S DIE="^DGP(45.87,",(DR,DGDR)=$S(DGCTL="N150":"[DGPT 150]",1:"[DGPT 151]")
"RTN","DGPTRPO",20,0)
 S DGPAT=$P(^DGP(45.87,DGDA,0),U,9),DGINST=$P(^DGP(45.87,DGDA,0),U,10)
"RTN","DGPTRPO",21,0)
 F DGI=0:0 S DA=DGDA,DR=DGDR D ^DIE,CHKFLD Q:'DGOUT  D ASK I DGOUT D DEL,ENQ G EN
"RTN","DGPTRPO",22,0)
SEND S DGOUT=0,DIR(0)="Y",DIR("A")="Ok to Send "_DGCTL,DIR("B")="YES"
"RTN","DGPTRPO",23,0)
 D ^DIR I $D(DIRUT)!(Y=0) D ASK G EDIT:'DGOUT I DGOUT D DEL,ENQ G EN
"RTN","DGPTRPO",24,0)
 I Y D PRETRAN G:DGOUT EN D
"RTN","DGPTRPO",25,0)
 .K X S $P(X," ",241)=""
"RTN","DGPTRPO",26,0)
 .S:$E(DGSSN,10)="P" DGSSN="P"_$E(DGSSN,1,9)
"RTN","DGPTRPO",27,0)
 .S ^XMB(3.9,XMZ,2,1,0)=$E(DGCTL_$J(DGSSN,10)_$J(DGADM,10)_$J(DGFAC,6)_$J(DGRFAC,6)_X,1,240)
"RTN","DGPTRPO",28,0)
 .S ^XMB(3.9,XMZ,2,2,0)=$$REPEAT^XLFSTR(" ",144)
"RTN","DGPTRPO",29,0)
 .D TRAN W !,"****** ",DGCTL," TRANSACTION SENT ******"
"RTN","DGPTRPO",30,0)
 D ENQ G EN
"RTN","DGPTRPO",31,0)
ENQ K %,DGDR,DGDA,DGPAT,DGINST,DGFNAM,DGNAME,DGCTL,DGTADM,DA,DGRPO,DIR,DIE,DIK,X,Y,DGOUT,VATNAME,VATERR,VAT,DIROUT,DIRUT,XMTEXT,XMSUB,XMDUZ,XMDUN,DGSSN,DGADM,DGRFAC,DGFAC,DIC,DR,DD,DO,DGDA,DGI,DQ,DB,DE
"RTN","DGPTRPO",32,0)
 Q
"RTN","DGPTRPO",33,0)
 ;
"RTN","DGPTRPO",34,0)
CHKFLD ;-- check data for valid entries
"RTN","DGPTRPO",35,0)
 S DGOUT=0
"RTN","DGPTRPO",36,0)
 I '$D(^DGP(45.87,DGDA,0)) S DGOUT=1 G CHKFLDQ
"RTN","DGPTRPO",37,0)
 S DGRPO=^DGP(45.87,DGDA,0)
"RTN","DGPTRPO",38,0)
 I DGCTL="N150" F DGJ=5:1:8 I $P(DGRPO,U,DGJ)="" S DGOUT=1 D CHKERR
"RTN","DGPTRPO",39,0)
 I DGCTL="N151" F DGJ=5,8 I $P(DGRPO,U,DGJ)="" S DGOUT=1 D CHKERR
"RTN","DGPTRPO",40,0)
 I DGCTL="N099" F DGJ=5,6,8 I $P(DGRPO,U,DGJ)="" S DGOUT=1 D CHKERR
"RTN","DGPTRPO",41,0)
 I +$P(DGRPO,U,9) S DGNAME=$P(^DPT($P(DGRPO,U,9),0),U)
"RTN","DGPTRPO",42,0)
CHKFLDQ ;
"RTN","DGPTRPO",43,0)
 K DGRPO,DGJ
"RTN","DGPTRPO",44,0)
 Q
"RTN","DGPTRPO",45,0)
CHKERR ;
"RTN","DGPTRPO",46,0)
 W !,"*** ",$P("^^^^SSN^ADMISSION DATE/TIME^ADMITTING FACILITY NUMBER/SUFFIX^REQUESTING FACILITY NUMBER/SUFFIX","^",DGJ)," field is empty."
"RTN","DGPTRPO",47,0)
 Q
"RTN","DGPTRPO",48,0)
 ;
"RTN","DGPTRPO",49,0)
ASK ;-- On error in record check for re-edit
"RTN","DGPTRPO",50,0)
 S DGOUT=0
"RTN","DGPTRPO",51,0)
 S DIR(0)="Y",DIR("A")="Would you like to EDIT the "_DGCTL_" record",DIR("B")="YES"
"RTN","DGPTRPO",52,0)
 D ^DIR
"RTN","DGPTRPO",53,0)
 I $D(DIRUT)!(Y=0) S DGOUT=1
"RTN","DGPTRPO",54,0)
ASKQ K DIR
"RTN","DGPTRPO",55,0)
 Q
"RTN","DGPTRPO",56,0)
 ;
"RTN","DGPTRPO",57,0)
HDRPX ;called from [DGPT 150] and [DGPT 151] input templates
"RTN","DGPTRPO",58,0)
 W @IOF,$C(13),?18,">>> Facsimile of ",DGCTL," Transaction <<<"
"RTN","DGPTRPO",59,0)
 W:DGNAME]"" !,"           Patient : ",DGNAME
"RTN","DGPTRPO",60,0)
 W:DGFNAM]"" !,"Admitting Facility : ",DGFNAM
"RTN","DGPTRPO",61,0)
 S:$E(DGSSN,10)="P" DGSSN="P"_$E(DGSSN,1,9)
"RTN","DGPTRPO",62,0)
 W !!?9,"'",$J(DGCTL,4),"'   '",$J(DGSSN,10),"'   '",$J(DGADM,10),"'   '",$J(DGFAC,6),"'   '",$J(DGRFAC,6),"'"
"RTN","DGPTRPO",63,0)
 W !?2,"col# :"
"RTN","DGPTRPO",64,0)
 W ?10,"1--4     5--------1     1--------2     2----3     3----3",!
"RTN","DGPTRPO",65,0)
 W ?10,"                  4     5        4     5    0     1    6",!
"RTN","DGPTRPO",66,0)
 W !?2,"block:"
"RTN","DGPTRPO",67,0)
 W ?10,"         SSN            Admission     Admitting   Requesting",!
"RTN","DGPTRPO",68,0)
 W ?10,"                        Date/Time     Facility    Facility",!
"RTN","DGPTRPO",69,0)
 W ?10,"                                      Num/Suffix  Num/Suffix",!!
"RTN","DGPTRPO",70,0)
 I DGCTL="N151" W !,"For the 151 the Admission DATE/TIME and",!,"the Admitting Facility Num/Suffix CANNOT be filled in.",!!
"RTN","DGPTRPO",71,0)
 Q
"RTN","DGPTRPO",72,0)
 ;
"RTN","DGPTRPO",73,0)
FMT ;-- select format 150/151; set trans router to PTF125
"RTN","DGPTRPO",74,0)
 S DGOUT=0
"RTN","DGPTRPO",75,0)
 S DGOUT=0,DIR(0)="SB^150:N150 SPECIFIC (RPO);151:N151 GENERAL (RPO);EXIT:EXIT",DIR("A")="Which RPO Format",DIR("?")="Enter 150 or 151 for the Record Print-Out (RPO) form to be sent.",DIR("B")="EXIT"
"RTN","DGPTRPO",76,0)
 W @IOF D ^DIR I $D(DIRUT)!(Y="EXIT") S DGOUT=1 G FMTQ
"RTN","DGPTRPO",77,0)
 S DGY=Y
"RTN","DGPTRPO",78,0)
 S DGCTL=$S(DGY=150:"N150",1:"N151")
"RTN","DGPTRPO",79,0)
 S VATNAME="PTF125" D ^VATRAN I VATERR S DGOUT=1 G FMTQ
"RTN","DGPTRPO",80,0)
FMTQ K DGY,DIR,DIRUT Q
"RTN","DGPTRPO",81,0)
 ;
"RTN","DGPTRPO",82,0)
PRETRAN ;-- get mailman msg #
"RTN","DGPTRPO",83,0)
 S DGOUT=0,XMSUB="PTF "_DGCTL,XMDUZ=DUZ
"RTN","DGPTRPO",84,0)
 D GET^XMA2
"RTN","DGPTRPO",85,0)
 I $D(XMZ),XMZ>0 G PREQ
"RTN","DGPTRPO",86,0)
 W !!,"*** ERROR *** Unable to create Mail Message... Try again later." S DGOUT=1
"RTN","DGPTRPO",87,0)
PREQ Q
"RTN","DGPTRPO",88,0)
TRAN ;
"RTN","DGPTRPO",89,0)
 K XMY D ROUTER^DGPTFTR
"RTN","DGPTRPO",90,0)
 S XMDUN=$P(^VA(200,DUZ,0),U),^XMB(3.9,XMZ,2,0)="^3.92A^1^1^"_DT
"RTN","DGPTRPO",91,0)
 D ENT1^XMD
"RTN","DGPTRPO",92,0)
 S DIE="^DGP(45.87,",DA=DGDA,DR=".03////"_XMZ D ^DIE
"RTN","DGPTRPO",93,0)
 K XMZ,DIE,DR
"RTN","DGPTRPO",94,0)
 Q
"RTN","DGPTRPO",95,0)
 ;
"RTN","DGPTRPO",96,0)
DEL ;-- KILL ENTRY 
"RTN","DGPTRPO",97,0)
 S DA=DGDA,DIK="^DGP(45.87," D ^DIK
"RTN","DGPTRPO",98,0)
 Q
"RTN","DGPTRPO",99,0)
 ;
"RTN","DGPTRPO",100,0)
INIT ;
"RTN","DGPTRPO",101,0)
 D LO^DGUTL,HOME^%ZIS S DGOUT=0
"RTN","DGPTRPO",102,0)
 S (DGPAT,DGINST,DGCTL,DGTADM,DGSSN,DGADM,DGFAC,DGFNAM,DGNAME)="",DGRFAC=$E($P($$SITE^VASITE,U,3)_"      ",1,6)
"RTN","DGPTRPO",103,0)
INITQ Q
"RTN","DGPTSCAN")
0^76^B25305178
"RTN","DGPTSCAN",1,0)
DGPTSCAN ;ALB/MTC,WOIFO/PMK - SPECIAL ACTION SCAN PROCESS ;03/26/2015 3:27 PM
"RTN","DGPTSCAN",2,0)
 ;;5.3;Registration;**29,64,114,189,729,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTSCAN",3,0)
 ;;MAS 5.1
"RTN","DGPTSCAN",4,0)
CHK501 ;--
"RTN","DGPTSCAN",5,0)
 D INIT G ENQ:DGOUT
"RTN","DGPTSCAN",6,0)
 ; G ENQ:'$D(^DGPT(DGPTF,"M",+DGMOV,0)) S DGREC=^(0)
"RTN","DGPTSCAN",7,0)
 ; F DGI=5:1:9 I $P(DGREC,U,DGI) S DGPTIT($P(DGREC,U,DGI)_";ICD9(")=""
"RTN","DGPTSCAN",8,0)
 N DGD D PTFICD^DGPTFUT(501,DGPTF,+DGMOV,.DGD) G ENQ:$D(DGD)'=11
"RTN","DGPTSCAN",9,0)
 S DGI="" F  S DGI=$O(DGD(DGI)) Q:DGI=""  S DGPTIT($P(DGD(DGI),U)_";ICD9(")=""
"RTN","DGPTSCAN",10,0)
 S DGHOLD=$S($D(^DGPT(DGPTF,"M",+DGMOV,300)):^(300),1:"")
"RTN","DGPTSCAN",11,0)
 D SCAN
"RTN","DGPTSCAN",12,0)
 I '$D(DGBPC),DGHOLD']"" G CHK5Q
"RTN","DGPTSCAN",13,0)
 S DIE="^DGPT(",DA=DGPTF,DR="[DGPT 501 CLEANUP]"
"RTN","DGPTSCAN",14,0)
 D ^DIE
"RTN","DGPTSCAN",15,0)
 ;;
"RTN","DGPTSCAN",16,0)
 ;;ADDED FOR GAF ENHANCEMENT 6/2/98
"RTN","DGPTSCAN",17,0)
 ;;Gathers GAF Score, GAF Date, GAF Provider and sends to
"RTN","DGPTSCAN",18,0)
 ;;Mental Health package
"RTN","DGPTSCAN",19,0)
 N DGGAFSC,DGGAFDT,DGGAFPR,DGDFN
"RTN","DGPTSCAN",20,0)
 S DGGAFSC=$P(DGHOLD,"^",6),DGDFN=$P(^DGPT(DGPTF,0),"^")
"RTN","DGPTSCAN",21,0)
 S DGGAFDT=$P(^DGPT(DGPTF,0),"^",2)\1
"RTN","DGPTSCAN",22,0)
 S DGGAFPR=$P($G(^DGPT(DGPTF,"M",+DGMOV,"P")),"^",5) ;Provider
"RTN","DGPTSCAN",23,0)
 D UPD^YSGAF(DGDFN,DGGAFSC,DGGAFDT,DGGAFPR,"I")
"RTN","DGPTSCAN",24,0)
 ;;END GAF ENHANCEMENTS
"RTN","DGPTSCAN",25,0)
 ;;
"RTN","DGPTSCAN",26,0)
CHK5Q K DA,DR,DGHOLD,DGBPC,DGPTIT,DIE,DGREC,DGI,DGSCDT,DGSTART,DGTREC,DGOUT
"RTN","DGPTSCAN",27,0)
 Q
"RTN","DGPTSCAN",28,0)
 ;
"RTN","DGPTSCAN",29,0)
CHK601 ;--
"RTN","DGPTSCAN",30,0)
 D INIT G ENQ:DGOUT
"RTN","DGPTSCAN",31,0)
 G ENQ:'$D(^DGPT(DGPTF,"P",+P(DGZP,1),0)) S DGREC=^(0)
"RTN","DGPTSCAN",32,0)
 ; F DGI=5:1:9 I $P(DGREC,U,DGI) S DGPTIT($P(DGREC,U,DGI)_";ICD0(")=""
"RTN","DGPTSCAN",33,0)
 N DGD D PTFICD^DGPTFUT(601,DGPTF,+P(DGZP,1),.DGD) G ENQ:$D(DGD)'=11
"RTN","DGPTSCAN",34,0)
 S DGI="" F  S DGI=$O(DGD(DGI)) Q:DGI=""  S DGPTIT($P(DGD(DGI),U)_";ICD0(")=""
"RTN","DGPTSCAN",35,0)
 S DGHOLD=DGREC
"RTN","DGPTSCAN",36,0)
 D SCAN
"RTN","DGPTSCAN",37,0)
 I '$D(DGBPC(8)),$P(DGHOLD,U,4)']"" G CHK6Q
"RTN","DGPTSCAN",38,0)
 S DIE="^DGPT(",DA=DGPTF,DR="[DGPT 601 CLEANUP]"
"RTN","DGPTSCAN",39,0)
 D ^DIE
"RTN","DGPTSCAN",40,0)
CHK6Q K DA,DR,DGHOLD,DGBPC,DGPTIT,DIE,DGREC,DGI,DGOUT
"RTN","DGPTSCAN",41,0)
 Q
"RTN","DGPTSCAN",42,0)
CHK401 ;-- 
"RTN","DGPTSCAN",43,0)
 D INIT G ENQ:DGOUT
"RTN","DGPTSCAN",44,0)
 ; G ENQ:'$D(^DGPT(DGPTF,"S",+DGSUR,0)) S DGREC=^(0)
"RTN","DGPTSCAN",45,0)
 ; F DGI=8:1:12 I $P(DGREC,U,DGI) S DGPTIT($P(DGREC,U,DGI)_";ICD0(")=""
"RTN","DGPTSCAN",46,0)
 N DGD D PTFICD^DGPTFUT(401,DGPTF,+DGSUR,.DGD) G ENQ:$D(DGD)'=11
"RTN","DGPTSCAN",47,0)
 S DGI="" F  S DGI=$O(DGD(DGI)) Q:DGI=""  S DGPTIT($P(DGD(DGI),U)_";ICD0(")=""
"RTN","DGPTSCAN",48,0)
 S DGHOLD=$S($D(^DGPT(DGPTF,"S",+DGSUR,300)):^(300),1:"")
"RTN","DGPTSCAN",49,0)
 D SCAN
"RTN","DGPTSCAN",50,0)
 I '$D(DGBPC),DGHOLD']"" G CHK4Q
"RTN","DGPTSCAN",51,0)
 S DIE="^DGPT(",DA=DGPTF,DR="[DGPT 401 CLEANUP]"
"RTN","DGPTSCAN",52,0)
 D ^DIE
"RTN","DGPTSCAN",53,0)
CHK4Q K DA,DR,DGHOLD,DGBPC,DGPTIT,DIE,DGREC,DGI,DGSCDT,DGSTART,DGTREC,DGOUT
"RTN","DGPTSCAN",54,0)
 Q
"RTN","DGPTSCAN",55,0)
 ;
"RTN","DGPTSCAN",56,0)
CHK701 ;-- will get data from flagchk then stuff into 701 (300 node)
"RTN","DGPTSCAN",57,0)
 ; G CHK7Q:'$D(^DGPT(DGPTF,70)) S DGREC=^(70)
"RTN","DGPTSCAN",58,0)
 ; F DGI=10,16:1:24 I $P(DGREC,U,DGI) S DGPTIT($P(DGREC,U,DGI)_";ICD9(")=""
"RTN","DGPTSCAN",59,0)
 N DGD D PTFICD^DGPTFUT(701,DGPTF,,.DGD) G ENQ:$D(DGD)'=11
"RTN","DGPTSCAN",60,0)
 S DGI="" F  S DGI=$O(DGD(DGI)) Q:DGI=""  S DGPTIT($P(DGD(DGI),U)_";ICD9(")=""
"RTN","DGPTSCAN",61,0)
 D DC,SCAN,ANYPSY,FLAGCHK
"RTN","DGPTSCAN",62,0)
 S DGREC=$S($D(^DGPT(DGPTF,300)):^(300),1:""),DR="",DA=DGPTF,DIE="^DGPT("
"RTN","DGPTSCAN",63,0)
 D GETNUM
"RTN","DGPTSCAN",64,0)
 F DGII=2:1:DGFNUM S DR=DR_$S($P(DG701,U,DGII)]""&($P(DG701,U,DGII)'=$P(DGREC,U,DGII)):"300.0"_DGII_"////"_$P(DG701,U,DGII)_";",'$D(DGBPC(DGII))&($P(DGREC,U,DGII)]"")&($P(DG701,U,DGII)']""):"300.0"_DGII_"////@;",1:"")
"RTN","DGPTSCAN",65,0)
CHK7J I DR]"" D ^DIE
"RTN","DGPTSCAN",66,0)
CHK7Q ;
"RTN","DGPTSCAN",67,0)
 K DGII,DA,DR,DIE,DG701,DGI,DGT,DGREC,DGFNUM,DGSCDT,DGSTART,DGTREC,DGOUT
"RTN","DGPTSCAN",68,0)
 Q
"RTN","DGPTSCAN",69,0)
FLAGCHK ;-- build 701 from 501 responses, kill flags if necessary
"RTN","DGPTSCAN",70,0)
 S DG701="",DGOUT=0
"RTN","DGPTSCAN",71,0)
 F DGI=0:0 S DGI=$O(^DGPT(DGPTF,"M","AM",DGI)) Q:DGI'>0  F DGJ=0:0 S DGJ=$O(^DGPT(DGPTF,"M","AM",DGI,DGJ)) Q:DGJ'>0  I $D(^DGPT(DGPTF,"M",DGJ,300)) S DGHOLD=^(300) D FL1
"RTN","DGPTSCAN",72,0)
 S DGNDIS=$S('$D(^DGPT(DGPTF,70)):0,1:+^(70))
"RTN","DGPTSCAN",73,0)
 I DGNDIS'>0,$D(^DGPT(DGPTF,"M",1,300)) S DGHOLD=^(300) D FL1
"RTN","DGPTSCAN",74,0)
FLAGQ K DGI,DGNDIS
"RTN","DGPTSCAN",75,0)
 Q
"RTN","DGPTSCAN",76,0)
FL1 ;
"RTN","DGPTSCAN",77,0)
 D GETNUM
"RTN","DGPTSCAN",78,0)
 F DGII=2:1:DGFNUM I $P(DGHOLD,U,DGII)]"",$P(DG701,U,DGII)']"" S $P(DG701,U,DGII)=$P(DGHOLD,U,DGII) K DGBPC(DGII)
"RTN","DGPTSCAN",79,0)
FL1Q K DGII,DGHOLD,DGK,DGFNUM
"RTN","DGPTSCAN",80,0)
 Q
"RTN","DGPTSCAN",81,0)
 ;
"RTN","DGPTSCAN",82,0)
SCAN ;-- process DGPTIT array
"RTN","DGPTSCAN",83,0)
 K DGBPC
"RTN","DGPTSCAN",84,0)
 D ISPSY
"RTN","DGPTSCAN",85,0)
 G:'$D(DGPTIT) SCANQ
"RTN","DGPTSCAN",86,0)
 D DC ;return discharge date or current date in DGSCDT
"RTN","DGPTSCAN",87,0)
 S DGI="" F DGJ=0:0 S DGI=$O(DGPTIT(DGI)) Q:DGI=""  F DGK=0:0 S DGK=$O(^DIC(45.89,"ASPL",DGI,DGK)) Q:'DGK  D S1
"RTN","DGPTSCAN",88,0)
SCANQ ;
"RTN","DGPTSCAN",89,0)
 K DGSPEC,DGI,DGJ,DGK
"RTN","DGPTSCAN",90,0)
 Q
"RTN","DGPTSCAN",91,0)
 ;
"RTN","DGPTSCAN",92,0)
S1 ;-- check inactive dates, set flag array
"RTN","DGPTSCAN",93,0)
 G S1Q:'$D(^DIC(45.89,DGK,0)) S X=^(0)
"RTN","DGPTSCAN",94,0)
 I $P(X,U,3)]"",$D(DGSCDT) G S1Q:DGSCDT>$P(X,U,3)
"RTN","DGPTSCAN",95,0)
 S Y=+X
"RTN","DGPTSCAN",96,0)
 G S1Q:'$D(^DIC(45.88,Y,0)) S X=^(0)
"RTN","DGPTSCAN",97,0)
 I $P(X,U,3)]"",$D(DGSCDT) G S1Q:DGSCDT>$P(X,U,3)
"RTN","DGPTSCAN",98,0)
 I $P(X,U,2)]"" S X=$P(X,U,2) F DGII=1:1 S Y=$P(X,",",DGII) Q:'Y  D FLGFIL
"RTN","DGPTSCAN",99,0)
S1Q ;
"RTN","DGPTSCAN",100,0)
 K X,Y,DGII
"RTN","DGPTSCAN",101,0)
 Q
"RTN","DGPTSCAN",102,0)
 ;
"RTN","DGPTSCAN",103,0)
DC ;-- find discharge date
"RTN","DGPTSCAN",104,0)
 S DGSCDT=$S('$D(^DGPT(PTF,70)):DT,^(70):+^(70),1:DT)
"RTN","DGPTSCAN",105,0)
 Q
"RTN","DGPTSCAN",106,0)
 ;
"RTN","DGPTSCAN",107,0)
ENQ ;
"RTN","DGPTSCAN",108,0)
 K DG701,DGSTART,DGI,DGOUT,DGREC,DGBPC,DGPTIT,DGTREC,DGSCDT
"RTN","DGPTSCAN",109,0)
 Q
"RTN","DGPTSCAN",110,0)
 ;
"RTN","DGPTSCAN",111,0)
GETNUM ;-- returns the number of additional questions/flags
"RTN","DGPTSCAN",112,0)
 S DGFNUM=7
"RTN","DGPTSCAN",113,0)
 Q
"RTN","DGPTSCAN",114,0)
 ;
"RTN","DGPTSCAN",115,0)
INIT ;-- init routine
"RTN","DGPTSCAN",116,0)
 S DGOUT=0,(DGTREC,DGHOLD)=""
"RTN","DGPTSCAN",117,0)
 ;-- DGSTART should be set to 2910930 for national release
"RTN","DGPTSCAN",118,0)
 S DGSTART=2910930
"RTN","DGPTSCAN",119,0)
 D DC
"RTN","DGPTSCAN",120,0)
 D LO^DGUTL,HOME^%ZIS
"RTN","DGPTSCAN",121,0)
 K DGPTIT
"RTN","DGPTSCAN",122,0)
INITQ ;
"RTN","DGPTSCAN",123,0)
 Q
"RTN","DGPTSCAN",124,0)
 ;
"RTN","DGPTSCAN",125,0)
ANYPSY ;-- will go through all movements check for PSYCH specialty
"RTN","DGPTSCAN",126,0)
 N DGMOV
"RTN","DGPTSCAN",127,0)
 K DGPSY
"RTN","DGPTSCAN",128,0)
 I '$D(^DGPT(DGPTF,"M")) G ANYQ
"RTN","DGPTSCAN",129,0)
 F DGMOV=0:0 S DGMOV=$O(^DGPT(DGPTF,"M",DGMOV)) Q:'DGMOV  D ISPSY I $D(DGSPEC) S DGPSY=""
"RTN","DGPTSCAN",130,0)
 I '$D(DGPSY) K DGBPC(5),DGBPC(6),DGBPC(7)
"RTN","DGPTSCAN",131,0)
ANYQ ;
"RTN","DGPTSCAN",132,0)
 K DGSPEC
"RTN","DGPTSCAN",133,0)
 Q
"RTN","DGPTSCAN",134,0)
ISPSY ;-- check if losing specialty is in psych range set flag.
"RTN","DGPTSCAN",135,0)
 ;-- if psych then $D(DGSPEC)
"RTN","DGPTSCAN",136,0)
 K DGSPEC
"RTN","DGPTSCAN",137,0)
 I '$D(DGMOV) S DGSPEC="" G ISPSYQ
"RTN","DGPTSCAN",138,0)
 ; -- 850 Fix (BELOW), problem in fee basis when DGMOV is defined but no global ref.
"RTN","DGPTSCAN",139,0)
 I $D(DGMOV) D
"RTN","DGPTSCAN",140,0)
 . S DGSPEC=$P($G(^DGPT(DGPTF,"M",+$G(DGMOV),0)),U,2)
"RTN","DGPTSCAN",141,0)
 . I '$P($G(^DIC(42.4,+$G(DGSPEC),0)),U,4) K DGSPEC
"RTN","DGPTSCAN",142,0)
ISPSYQ Q
"RTN","DGPTSCAN",143,0)
 ;
"RTN","DGPTSCAN",144,0)
FLGFIL ;-- fill DGBPC with correct flag.
"RTN","DGPTSCAN",145,0)
 I '$D(DGSPEC),Y>4,Y<8 G FLGFILQ
"RTN","DGPTSCAN",146,0)
 S DGBPC(Y)=""
"RTN","DGPTSCAN",147,0)
FLGFILQ ;
"RTN","DGPTSCAN",148,0)
 Q
"RTN","DGPTSCAN",149,0)
 ;
"RTN","DGPTSCAN",150,0)
ANYSC(PTF) ;-- will go through all movements check for sc treatment
"RTN","DGPTSCAN",151,0)
 ;  INPUT - ptf record ien to check
"RTN","DGPTSCAN",152,0)
 ;  OUTPUT- 1 sc treatment, 0 no sc treatment
"RTN","DGPTSCAN",153,0)
 N DGMOV,RESULT
"RTN","DGPTSCAN",154,0)
 S RESULT=0
"RTN","DGPTSCAN",155,0)
 I '$D(^DGPT(PTF,"M")) G ANYSCQ
"RTN","DGPTSCAN",156,0)
 S DGMOV=0 F  S DGMOV=$O(^DGPT(PTF,"M",DGMOV)) Q:'DGMOV  I $P(^(DGMOV,0),U,18)=1 S RESULT=1 Q
"RTN","DGPTSCAN",157,0)
ANYSCQ ;
"RTN","DGPTSCAN",158,0)
 Q RESULT
"RTN","DGPTSCAN",159,0)
 ;
"RTN","DGPTSUDO")
0^20^B31462240
"RTN","DGPTSUDO",1,0)
DGPTSUDO ;ALB/MTC,HIOFO/FT,WOIFO/PMK - PTF UPDATE TRANSFER DRG NODE ;6/2/15 11:27am
"RTN","DGPTSUDO",2,0)
 ;;5.3;Registration;**441,510,478,785,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTSUDO",3,0)
 ;;ADL;Update for CSV Project;;Mar 28, 2003
"RTN","DGPTSUDO",4,0)
 ;
"RTN","DGPTSUDO",5,0)
 ; ICDXCODE APIs - #5699
"RTN","DGPTSUDO",6,0)
 ; ^VA(200) reads - #10060
"RTN","DGPTSUDO",7,0)
 ;
"RTN","DGPTSUDO",8,0)
UTIL S ^UTILITY($J,"T",(9999999.9999999-I))=K_"^"_$S($D(^DIC(45.7,J,0)):$P(^(0),"^",2),1:0)_"^"_X_"^^"_$P(Y,"^",8)
"RTN","DGPTSUDO",9,0)
 Q
"RTN","DGPTSUDO",10,0)
SUDO1 ;
"RTN","DGPTSUDO",11,0)
 N DGPOA,DGDXPOA
"RTN","DGPTSUDO",12,0)
 K ^UTILITY($J,"T"),T
"RTN","DGPTSUDO",13,0)
 F I=0:0 S I=$O(^DGPM("ATS",DFN,DGPMCA,I)) Q:I'>0  D
"RTN","DGPTSUDO",14,0)
 . S J=$O(^DGPM("ATS",DFN,DGPMCA,I,0)) I J D  ;^(J,0) on next line references global on this line
"RTN","DGPTSUDO",15,0)
 .. S K=+$O(^(J,0)) I $D(^DGPM(K,0)) S Y=^(0),X=$S($D(^("PTF")):$P(^("PTF"),"^",2),1:"") I $D(^DGPT(PTF,"M",+X,0))!($D(^DGPM("APHY",+$P(Y,"^",14),K))) D UTIL
"RTN","DGPTSUDO",16,0)
 Q:'$D(^UTILITY($J,"T"))
"RTN","DGPTSUDO",17,0)
VARS I '$D(^UTILITY($J,"T")) G SUDO1
"RTN","DGPTSUDO",18,0)
 S (DGPRD,DGNXD)=$O(^UTILITY($J,"T",0)) G Q:DGPRD'>0 S T(DGPRD)=^(DGPRD),(DGEXP,DGDMS,DGTRS,DGTLOS,DGLOS,DGDAT)=0,DGPT(70)=$S($D(^DGPT(PTF,70)):^(70),1:""),SEX=$P(^DPT(DFN,0),U,2),DOB=$P(^(0),U,3)
"RTN","DGPTSUDO",19,0)
 S (DGDX,DGNSV,DGPSV,DGPOA,DGDXPOA)=""
"RTN","DGPTSUDO",20,0)
 N EFFDATE,DGTEMP,IMPDATE
"RTN","DGPTSUDO",21,0)
 D EFFDATE^DGPTIC10(PTF) S DGDAT=EFFDATE
"RTN","DGPTSUDO",22,0)
 K DGSURG,DGPROC S (DGSURG,DGPROC)=U
"RTN","DGPTSUDO",23,0)
 ;
"RTN","DGPTSUDO",24,0)
 ;-- build DGSURG array
"RTN","DGPTSUDO",25,0)
 F I=0:0 S I=$O(^DGPT(PTF,"S",I)) Q:I'>0  D
"RTN","DGPTSUDO",26,0)
 . K DG401
"RTN","DGPTSUDO",27,0)
 . D PTFICD^DGPTFUT(401,PTF,I,.DG401)
"RTN","DGPTSUDO",28,0)
 . Q:'$O(DG401(0))
"RTN","DGPTSUDO",29,0)
 . ;S Y=+$P(DG401,U,16),Y=$S('$D(DGSURG(Y)):Y,Y[".":Y_I_1,1:Y_".0000"_I_1),DGSURG(Y)=""
"RTN","DGPTSUDO",30,0)
 . S Y=I/100000000+$P(DG401,U,16),DGSURG(Y)=""
"RTN","DGPTSUDO",31,0)
 . S DGLOOP=0
"RTN","DGPTSUDO",32,0)
 . F  S DGLOOP=$O(DG401(DGLOOP)) Q:'DGLOOP  D
"RTN","DGPTSUDO",33,0)
 .. Q:$P(DG401(DGLOOP),U,1)=""
"RTN","DGPTSUDO",34,0)
 .. S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",$P(DG401(DGLOOP),U,1),EFFDATE)
"RTN","DGPTSUDO",35,0)
 .. I +DGPTTMP>0 S DGSURG(Y)=DGSURG(Y)_$P(DG401(DGLOOP),U,1)_U
"RTN","DGPTSUDO",36,0)
 K DG401,DGLOOP
"RTN","DGPTSUDO",37,0)
 ;
"RTN","DGPTSUDO",38,0)
 ;-- build DGPROC array
"RTN","DGPTSUDO",39,0)
 F I=0:0 S I=$O(^DGPT(PTF,"P",I)) Q:I'>0  D
"RTN","DGPTSUDO",40,0)
 . K DG601
"RTN","DGPTSUDO",41,0)
 . D PTFICD^DGPTFUT(601,PTF,I,.DG601)
"RTN","DGPTSUDO",42,0)
 . Q:'$O(DG601(0))
"RTN","DGPTSUDO",43,0)
 . ;S Y=+$P(DG601,U,16),Y=$S('$D(DGPROC(Y)):Y,Y[".":Y_I_1,1:Y_".0000"_I_1),DGPROC(Y)=""
"RTN","DGPTSUDO",44,0)
 . S Y=I/100000000+$P(DG601,U,16),DGPROC(Y)=""
"RTN","DGPTSUDO",45,0)
 . S DGLOOP=0
"RTN","DGPTSUDO",46,0)
 . F  S DGLOOP=$O(DG601(DGLOOP)) Q:'DGLOOP  D
"RTN","DGPTSUDO",47,0)
 .. Q:$P(DG601(DGLOOP),U,1)=""
"RTN","DGPTSUDO",48,0)
 .. S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",$P(DG601(DGLOOP),U,1),EFFDATE)
"RTN","DGPTSUDO",49,0)
 .. I +DGPTTMP>0 S DGPROC(Y)=DGPROC(Y)_$P(DG601(DGLOOP),U,1)_U
"RTN","DGPTSUDO",50,0)
 K DG601,DGLOOP
"RTN","DGPTSUDO",51,0)
 ;
"RTN","DGPTSUDO",52,0)
 I $D(^DGPT(PTF,"401P")),+DGPT(70),+DGPT(70)<2871000 S X=^("401P") I X]"",X'="^^^^" D
"RTN","DGPTSUDO",53,0)
 . F I=1:1:5 I $P(X,U,I)]"" S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",$P(X,U,I),EFFDATE) I +EFFDATE>0 S DGPROC=DGPROC_$P(X,U,I)_U,DG401P=1
"RTN","DGPTSUDO",54,0)
 ;
"RTN","DGPTSUDO",55,0)
SUDO2 ;
"RTN","DGPTSUDO",56,0)
 S DGNXD=$O(^UTILITY($J,"T",DGNXD))
"RTN","DGPTSUDO",57,0)
 G ONE:DGNXD'>0 S T(DGNXD)=^UTILITY($J,"T",DGNXD),I1=+$P(T(DGNXD),U,3),DGDOC=$P(T(DGNXD),U,5)
"RTN","DGPTSUDO",58,0)
 F I=DGPRD,DGNXD S L1(I)=$P(T(I),U,2)
"RTN","DGPTSUDO",59,0)
 G:L1(DGPRD)=L1(DGNXD) SWCH
"RTN","DGPTSUDO",60,0)
 S DGPSV=$S($D(^DIC(42.4,+L1(DGPRD),0)):$P(^(0),U,3),1:""),DGNSV=$S($D(^DIC(42.4,+L1(DGNXD),0)):$P(^(0),U,3),1:"")
"RTN","DGPTSUDO",61,0)
 G:DGPSV']""!(DGNSV']"") SWCH
"RTN","DGPTSUDO",62,0)
 I "^I^SCI^B^NH^D^RE^"'[(U_DGPSV_U),$D(^DGPT(PTF,"M",I1,0)) D
"RTN","DGPTSUDO",63,0)
 . S DGNODE=^(0) ;^(0) references global on line above
"RTN","DGPTSUDO",64,0)
 . D BLD I DGPSV'=DGNSV D DRG S DGSURG=U,DGDX="",DGDXPOA="",DGLOS=0 I '$D(DG401P) S DGPROC=U
"RTN","DGPTSUDO",65,0)
SWCH ;
"RTN","DGPTSUDO",66,0)
 K DGLEV,DGPAS
"RTN","DGPTSUDO",67,0)
 S DGPRD=DGNXD,T(DGPRD)=T(DGNXD),(DGNSV,DGPSV)=""
"RTN","DGPTSUDO",68,0)
 G SUDO2
"RTN","DGPTSUDO",69,0)
 ;
"RTN","DGPTSUDO",70,0)
BLD ;
"RTN","DGPTSUDO",71,0)
 D PTFICD^DGPTFUT(501,PTF,I1,.DG501)
"RTN","DGPTSUDO",72,0)
 QUIT:'$O(DG501(0))
"RTN","DGPTSUDO",73,0)
 S DGLOOP=0 F  S DGLOOP=$O(DG501(DGLOOP)) Q:'DGLOOP  D
"RTN","DGPTSUDO",74,0)
 . I $P(DGNODE,U,1)]"" S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",$P(DG501(DGLOOP),U,1),EFFDATE) I +DGPTTMP>0 S DGDX=DGDX_$P(DG501(DGLOOP),U,1)_U,DGDXPOA=DGDXPOA_$P(DG501(DGLOOP),U,2)_U
"RTN","DGPTSUDO",75,0)
 K DG501,DGLOOP
"RTN","DGPTSUDO",76,0)
 ;S:$L(DGDX)>200 DGDX=$P(DGDX,U,1,30)
"RTN","DGPTSUDO",77,0)
 S DGLEV=$P(DGNODE,U,3),DGPAS=$P(DGNODE,U,4),X1=DGNXD,X2=DGPRD D ^%DTC S X=$S(X>0:X,1:1)-DGLEV-DGPAS,DGLOS=DGLOS+X
"RTN","DGPTSUDO",78,0)
 N I,J,X,Y,Z
"RTN","DGPTSUDO",79,0)
 F I=0:0 S I=$O(DGSURG(I)) Q:I'>0!(I\1>(DGNXD\1))  D SU
"RTN","DGPTSUDO",80,0)
 I '$D(DG401P) F I=0:0 S I=$O(DGPROC(I)) Q:I'>0!((I\1)>(DGNXD\1))  D
"RTN","DGPTSUDO",81,0)
 .S X=DGPROC(I)
"RTN","DGPTSUDO",82,0)
 .F J=1:1:25 S Y=$P(X,U,J) Q:Y=""  D
"RTN","DGPTSUDO",83,0)
 ..;Q:$L(DGPROC)>240 ; - no longer needed
"RTN","DGPTSUDO",84,0)
 ..S Z=U_Y_U
"RTN","DGPTSUDO",85,0)
 ..S DGPROC=DGPROC_Y_U
"RTN","DGPTSUDO",86,0)
 ..S DGPROC(J)=Y
"RTN","DGPTSUDO",87,0)
 ..K DGPROC(I)
"RTN","DGPTSUDO",88,0)
 Q
"RTN","DGPTSUDO",89,0)
SU ;
"RTN","DGPTSUDO",90,0)
 I I<DGNXD!(DGPSV=DGNSV)!(DGPSV="S") D
"RTN","DGPTSUDO",91,0)
 .S X=DGSURG(I)
"RTN","DGPTSUDO",92,0)
 .F J=1:1:25 S Y=$P(X,U,J) Q:Y=""  D
"RTN","DGPTSUDO",93,0)
 ..;Q:$L(DGSURG)>240 ; - no longer needed
"RTN","DGPTSUDO",94,0)
 ..S Z=U_Y_U
"RTN","DGPTSUDO",95,0)
 ..S DGSURG=DGSURG_Y_U
"RTN","DGPTSUDO",96,0)
 ..S ICDSURG(J)=Y
"RTN","DGPTSUDO",97,0)
 ..K DGSURG(I)
"RTN","DGPTSUDO",98,0)
 Q
"RTN","DGPTSUDO",99,0)
DRG ;
"RTN","DGPTSUDO",100,0)
 S AGE=DGPRD-DOB\10000,DGTLOS=DGTLOS+DGLOS,DRG=""
"RTN","DGPTSUDO",101,0)
 D ^DGPTICD
"RTN","DGPTSUDO",102,0)
 S DGDOC=$S($D(^VA(200,+DGDOC)):DGDOC,1:"")
"RTN","DGPTSUDO",103,0)
 N DGFDA,DGMSG
"RTN","DGPTSUDO",104,0)
 S DGFDA(45.02,I1_","_PTF_",",20)=DRG     ;transfer drg
"RTN","DGPTSUDO",105,0)
 S DGFDA(45.02,I1_","_PTF_",",21)=DGPSV   ;losing service
"RTN","DGPTSUDO",106,0)
 S DGFDA(45.02,I1_","_PTF_",",22)=DGNXD   ;transfer date
"RTN","DGPTSUDO",107,0)
 S DGFDA(45.02,I1_","_PTF_",",23)=DGLOS   ;los in service
"RTN","DGPTSUDO",108,0)
 S DGFDA(45.02,I1_","_PTF_",",24)=DGDOC   ;provider
"RTN","DGPTSUDO",109,0)
 S DGFDA(45.02,I1_","_PTF_",",25)=DGTLOS  ;cumulative los
"RTN","DGPTSUDO",110,0)
 D FILE^DIE("","DGFDA","DGMSG")
"RTN","DGPTSUDO",111,0)
 Q
"RTN","DGPTSUDO",112,0)
ONE ;
"RTN","DGPTSUDO",113,0)
 S DGNXD=$S(+$P(^DGPT(PTF,"M",1,0),U,10):$P(^(0),U,10),1:DT),L1(DGNXD)=$P(^(0),U,2) S:'$D(T(DGNXD)) T(DGNXD)=T(DGPRD),DGDOC=$P(T(DGNXD),U,5)
"RTN","DGPTSUDO",114,0)
 S:$P(DGPT(70),U,3)>5 DGEXP=1 S:$P(DGPT(70),U,3)=4 DGDMS=1 S:$P(DGPT(70),U,13) DGTRS=1
"RTN","DGPTSUDO",115,0)
 I L1(DGNXD),$D(^DIC(42.4,+L1(DGNXD),0)) S I1=1,DGPSV=$P(^(0),U,3),DGADM=$P(^DGPT(PTF,0),U,2)
"RTN","DGPTSUDO",116,0)
 S DGNODE=$S($D(^DGPT(PTF,"M",1,0)):^(0),1:""),I1=1
"RTN","DGPTSUDO",117,0)
 D BLD
"RTN","DGPTSUDO",118,0)
 I $D(^DGPT("AADA",DGADM,PTF)) F I=10,11 I $P(DGPT(70),U,I) S DGDX=$P(DGPT(70),U,I)_U_DGDX,DGDXPOA=$P($G(^DGPT(PTF,82)),U)_U_$G(DGDXPOA) QUIT
"RTN","DGPTSUDO",119,0)
 D DRG,^DGPTSUD1
"RTN","DGPTSUDO",120,0)
Q ;
"RTN","DGPTSUDO",121,0)
 K DGDMS,DGDOC,DGDX,DGEXP,DGLEV,DGLOS,DGNODE,DGNSV,DGNXD,DGPAS,DGPRD,DGPROC,DGPSV,DGPT,DGSURG,ICDSURG,DGTLOS,DGTRS,DG401P,DGDXPOA,I,I1,I2,J,L1,T,X,X1,X2,Y
"RTN","DGPTSUDO",122,0)
 Q
"RTN","DGPTTS")
0^67^B24184788
"RTN","DGPTTS",1,0)
DGPTTS ;ALB/AS/ADL/PLT - UPDATE FACILITY TREATING SPECIALTY/501 MOVEMENTS IN PTF ;6/3/15 11:13am
"RTN","DGPTTS",2,0)
 ;;5.3;Registration;**26,61,164,510,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTTS",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPTTS",4,0)
 ;;ADL;Update for CSV Project;;Mar 28, 2003
"RTN","DGPTTS",5,0)
 ;needs to be done - OERR link
"RTN","DGPTTS",6,0)
 ;
"RTN","DGPTTS",7,0)
EV ;entry point from event driver
"RTN","DGPTTS",8,0)
 D EV^DGPTTS0
"RTN","DGPTTS",9,0)
 Q
"RTN","DGPTTS",10,0)
 ;
"RTN","DGPTTS",11,0)
DEL ;facility treating specialty has been deleted from ^DGPM
"RTN","DGPTTS",12,0)
 N EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPTTS",13,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTTS",14,0)
 S DGPTFP=^UTILITY("DGPM",$J,6,DGMV,"PTFP")
"RTN","DGPTTS",15,0)
 G DEL1:'$D(^DGPT(PTF,"M",+$P(DGPTFP,"^",2),0)) S DGREC=^(0),DGREC81=$G(^(81)),DGREC82=$G(^(82)),DGEX=$S($D(^(300)):^(300),1:"")
"RTN","DGPTTS",16,0)
 K DA S DA=$P(DGPTFP,"^",2),DA(1)=PTF,DIK="^DGPT("_DA(1)_",""M""," D ^DIK K DA
"RTN","DGPTTS",17,0)
 S DGMSG="",DGMSG81="",DGMSG82=""
"RTN","DGPTTS",18,0)
 F X=5:1:15 I X'=10 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(DGREC,U,X),EFFDATE),DGMSG=DGMSG_$S(+DGPTTMP>0:$P(DGPTTMP,U,2)_", ",1:""),DGMSG82=DGMSG82_$S(+DGPTTMP>0:$P(DGREC82,U,X-4-(X>10))_", ",1:"")
"RTN","DGPTTS",19,0)
 F X=1:1:15 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(DGREC81,U,X),EFFDATE),DGMSG81=DGMSG81_$S(+DGPTTMP>0:$P(DGPTTMP,U,2)_", ",1:""),DGMSG82=DGMSG82_$S(+DGPTTMP>0:$P(DGREC82,U,X+10)_", ",1:"")
"RTN","DGPTTS",20,0)
 G DEL1:DGMSG=""&(DGMSG81="") I DGMSG="" S DGMSG=DGMSG81 K DGMSG81
"RTN","DGPTTS",21,0)
 S ^UTILITY($J,"DEL",$P(DGPTFP,"^",2))=DGMSG,^($P(DGPTFP,"^",2),82)=DGMSG82 S:DGMSG81]"" ^(81)=DGMSG81
"RTN","DGPTTS",22,0)
 ;-- save expanded codes 
"RTN","DGPTTS",23,0)
 S DG1=""
"RTN","DGPTTS",24,0)
 I DGEX]"" F X=2:1:7 S:$P(DGEX,U,X)]"" $P(DG1,U,X)=$P(DGEX,U,X)
"RTN","DGPTTS",25,0)
 S:DG1]"" ^UTILITY($J,300,$P(DGPTFP,U,2))=DG1
"RTN","DGPTTS",26,0)
 K DGI
"RTN","DGPTTS",27,0)
 S Y=$P(DGREC,U,10) X ^DD("DD") S DGMSG="501 movement of "_$P(^DPT(DFN,0),U,1)_" of "_Y_" losing specialty "_$P(^DIC(42.4,$P(DGREC,U,2),0),U,1)_" was deleted by "_$P(^VA(200,DUZ,0),U,1)_" it contained diag "_$E(DGMSG,1,120)
"RTN","DGPTTS",28,0)
 S DGMSG1="501 Movement Deletion" D MSG^DGPTMSG1
"RTN","DGPTTS",29,0)
 ;
"RTN","DGPTTS",30,0)
DEL1 S X=^DPT(DFN,0),DGMSG="A transfer between treating specialties for "_$P(X,U,1)_" ("_$P(X,U,9)_") on "_$TR($$FMTE^XLFDT(+DGMVP,"5DF")," ","0")_" was deleted by "_$P(^VA(200,+DUZ,0),U)_".  Please verify PTF #"_PTF_"."
"RTN","DGPTTS",31,0)
 S DGMSG1="Facility Treating Specialty Deletion" D MSG^DGPTMSG1
"RTN","DGPTTS",32,0)
 ;
"RTN","DGPTTS",33,0)
 I $P(DGPTFP,"^",3)=1 S DGREC=^DGPT(PTF,"M",1,0),DGREC81=$G(^(81)),DGREC82=$G(^(82)) D
"RTN","DGPTTS",34,0)
 . N DR,DGA,DGC
"RTN","DGPTTS",35,0)
 . S DR="",DGA="DR",DGC=0
"RTN","DGPTTS",36,0)
 . F X=5:1:15 I X'=10 I $P(DGREC,U,X) S @DGA=$G(@DGA)_X_"///@;"
"RTN","DGPTTS",37,0)
 . F X=1:1:15 I $P(DGREC81,U,X) S @DGA=$G(@DGA)_(X/100+81)_"///@;" S:$L(@DGA)>220 DGC=DGC+1,DGA="DR(1,45.02,DGC)"
"RTN","DGPTTS",38,0)
 . F X=1:1:25 I $P(DGREC82,U,X)]"" S @DGA=$G(@DGA)_(X/100+82)_"///@;" S:$L(@DGA)>220 DGC=DGC+1,DGA="DR(1,45.02,DGC)"
"RTN","DGPTTS",39,0)
 . I DR]"" S DA(1)=PTF,DIE="^DGPT("_DA(1)_",""M"",",DA=1 D ^DIE
"RTN","DGPTTS",40,0)
 . QUIT
"RTN","DGPTTS",41,0)
 ;-- clean up expanded code data
"RTN","DGPTTS",42,0)
 S DR="" I $P(DGPTFP,U,3)=1,$D(^DGPT(PTF,"M",1,300)) S DGREC=^(300) F X=2:1:7 S:$P(DGREC,U,X) DR=DR_"300.0"_X_"///@;"
"RTN","DGPTTS",43,0)
 I DR]"" S DA=1,DA(1)=PTF D ^DIE
"RTN","DGPTTS",44,0)
 K DGPTFP,DGREC,DGREC81,DGREC82,DGMSG81,DGMSG81,DA,DR,DIE,Y,X,DGEX Q
"RTN","DGPTTS",45,0)
 ;
"RTN","DGPTTS",46,0)
LE ;entry point for PTF record update
"RTN","DGPTTS",47,0)
 I '$D(ZTQUEUED),'$G(DGQUIET) W !,"Updating PTF Record #",PTF,"..."
"RTN","DGPTTS",48,0)
 K ^UTILITY($J,"T")
"RTN","DGPTTS",49,0)
 S DGPREV=$O(^DGPM("ATS",DFN,DGPMCA,0)),DGDT=$S($D(^DGPM(+$P(DGPMAN,"^",17),0)):+^(0),1:"")
"RTN","DGPTTS",50,0)
 D NOTS:'DGPREV
"RTN","DGPTTS",51,0)
 I DGPREV S:DGDT T(DGDT)="" D ^DGPTTS1,VARS^DGPTSUDO
"RTN","DGPTTS",52,0)
 K DGDR,L,MN,DIE,DIC,DIS,D,J,ADM,%DT,DR,I1,LL,NOW,T,TRN,ZTSK,L1,L2,T1,T2,TD,TDD,I,PTN,NTR,DA,NX,NXX,PR,DGTNX,DGTEMP,DGTPR,LOL,LOP,Z,Y,A,B,C,DGAD,DGDEL,X1,X2,^UTILITY($J,"T"),DGTR,DGREC,DGREC81,DGREC82,DGDT1,DGTLOS
"RTN","DGPTTS",53,0)
 F DA=0:0 S DA=$O(^DGPT(PTF,"P",DA)) Q:DA'>0  I $D(^DGPT(PTF,"P",DA,0)) D BS^DGPTFM6 S DIE="^DGPT("_PTF_",""P"",",DA(1)=PTF,DR="1///"_DGMOVM D ^DIE
"RTN","DGPTTS",54,0)
 D EN^DGPTTS3 I '$D(ZTQUEUED),'$G(DGQUIET) W "completed."
"RTN","DGPTTS",55,0)
Q K DGDT,DA,DGP0,DGMSG,DGPREV,DGREC,DGREC81,DGREC82,DGMOVM,DIC,DIE,DR,V,X,Y Q
"RTN","DGPTTS",56,0)
 ;
"RTN","DGPTTS",57,0)
NTR S DGMSG="A Transfer on "_$TR($$FMTE^XLFDT(+DGMVA,"5DF")," ","0")_" was entered before the latest transfer.  Please verify PTF #"_PTF_"."
"RTN","DGPTTS",58,0)
 S DGMSG1="New Facility Treating Specialty" D MSG^DGPTMSG1
"RTN","DGPTTS",59,0)
 Q
"RTN","DGPTTS",60,0)
 ;
"RTN","DGPTTS",61,0)
NOTS ;
"RTN","DGPTTS",62,0)
 S DIE="^DGPT("_PTF_",""M"",",DA(1)=PTF,DA=1,DR="2///@" D ^DIE
"RTN","DGPTTS",63,0)
 F DA=0:0 S DA=$O(^DGPT(PTF,"P",DA)) Q:DA'>0  I $D(^DGPT(PTF,"P",DA,0)) S DIE="^DGPT("_PTF_",""P"",",DA(1)=PTF,DR="1///@" D ^DIE
"RTN","DGPTTS",64,0)
 Q
"RTN","DGPTTS",65,0)
 ;
"RTN","DGPTTS",66,0)
DGDT ; -- get first ts before dc date
"RTN","DGPTTS",67,0)
 N X S X=$P(9999999.999999-DGDT,".")
"RTN","DGPTTS",68,0)
 F DGPREV=0:0 S DGPREV=+$O(^DGPM("ATS",DFN,DGPMCA,DGPREV)) Q:$P(DGPREV,".")'=X
"RTN","DGPTTS",69,0)
 Q
"RTN","DGPTTS",70,0)
 ;
"RTN","DGPTTS",71,0)
CA ; -- determine CA info
"RTN","DGPTTS",72,0)
 S DGPMCA=$S($P(DGPMP,"^",14):$P(DGPMP,"^",14),1:$P(DGPMA,"^",14))
"RTN","DGPTTS",73,0)
 S DGPMAN=$S($D(^DGPM(+DGPMCA,0)):^(0),1:""),DGMVT=$S($P(DGPMP,"^",2):$P(DGPMP,"^",2),1:$P(DGPMA,"^",2)),PTF=$P(DGPMAN,"^",16),DGADM=+DGPMAN
"RTN","DGPTTS",74,0)
 Q
"RTN","DGPTTS1")
0^68^B28870180
"RTN","DGPTTS1",1,0)
DGPTTS1 ;ALB/AS/ADL/PLT - FACILITY TREATING SPECIALTY AND 501 MOVEMENTS, cont. ;6/3/15 11:13am
"RTN","DGPTTS1",2,0)
 ;;5.3;Registration;**26,64,418,510,478,850,884**;Aug 13, 1993;Build 31
"RTN","DGPTTS1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPTTS1",4,0)
 ;;ADL;Update for CSV Project;;Mar 28, 2003
"RTN","DGPTTS1",5,0)
 ;
"RTN","DGPTTS1",6,0)
 ;build DGA array w/patient's last treat spec of the day as of 11:59 pm
"RTN","DGPTTS1",7,0)
 ;
"RTN","DGPTTS1",8,0)
LOOP ;
"RTN","DGPTTS1",9,0)
 S DGNEXT=$O(^DGPM("ATS",DFN,DGPMCA,DGPREV))
"RTN","DGPTTS1",10,0)
 F DGNEXT=DGNEXT:0 Q:($P(DGPREV,".")'=$P(DGNEXT,"."))!('DGNEXT)  S DGNEXT=$O(^DGPM("ATS",DFN,DGPMCA,DGNEXT))
"RTN","DGPTTS1",11,0)
 S X=$O(^DGPM("ATS",DFN,DGPMCA,DGPREV,0)),DGA(9999999.999999-$E(DGPREV,1,14))=$S($D(^DIC(45.7,+X,0)):$P(^(0),"^",2),1:0)_"^"_$O(^DGPM("ATS",DFN,DGPMCA,DGPREV,X,0)) I DGNEXT>0 S DGPREV=DGNEXT G LOOP
"RTN","DGPTTS1",12,0)
 S DGPREV=0,X=$S($D(^DIC(42,+$P(DGPMAN,"^",6),0)):$P(^(0),"^",3),1:0) I "^NH^D^"[(U_X_U)!($P(^(0),"^",17)=1) D ASIH^DGPTTS2 ;p-418
"RTN","DGPTTS1",13,0)
 ;
"RTN","DGPTTS1",14,0)
LOOP1 ; -- compare specs between mvts ; sort out xfr if spec did't change
"RTN","DGPTTS1",15,0)
 S DGSAVE=DGPREV
"RTN","DGPTTS1",16,0)
 S DGPREV=$O(DGA(DGPREV)),DGNEXT=$O(DGA(DGPREV)),X=+DGA(DGPREV) I DGNEXT S Y=+DGA(DGNEXT) I (X=Y)!((X=70)&(Y=71))!((X=71)&(Y=70)) K DGA(DGNEXT) S DGPREV=DGSAVE I $O(DGA(DGPREV))>0 G LOOP1
"RTN","DGPTTS1",17,0)
 ;
"RTN","DGPTTS1",18,0)
 ; -- is mvt during adm
"RTN","DGPTTS1",19,0)
 I DGPREV<+DGPMAN!($P(DGPREV,".")'<$S(DGDT:$P(+DGDT,"."),1:9999999)) S (DG1,DG2)=+$P(DGA(DGPREV),"^",2) D DEL:$S('$D(^DGPM(DG1,"PTF")):0,1:$P(^("PTF"),"^",2)]"") G LOOPQ
"RTN","DGPTTS1",20,0)
 ;
"RTN","DGPTTS1",21,0)
 ; build ^UTILITY for mvts whose spec changed
"RTN","DGPTTS1",22,0)
 S X=$S($D(^DGPM($P(DGA(DGPREV),"^",2),"PTF")):^("PTF"),1:""),^UTILITY($J,"T",DGPREV)=$P(DGA(DGPREV),"^",2)_"^"_+DGA(DGPREV)_"^"_$P(X,"^",2)_"^"_$P(X,"^",3)_"^"_$S($D(^DGPM($P(DGA(DGPREV),"^",2),0)):$P(^(0),"^",8),1:"")
"RTN","DGPTTS1",23,0)
LOOPQ I $O(DGA(DGPREV)) G LOOP1
"RTN","DGPTTS1",24,0)
 ;
"RTN","DGPTTS1",25,0)
 ; look for mvts in ^DGPM that have a PTF mvt # entry
"RTN","DGPTTS1",26,0)
 ; but not in ^UTILITY.  If any are found, delete from ^DGPT.
"RTN","DGPTTS1",27,0)
 F DGPREV=0:0 S DGPREV=$O(^DGPM("ATS",DFN,DGPMCA,DGPREV)) Q:DGPREV'>0  S X=$O(^DGPM("ATS",DFN,DGPMCA,DGPREV,0)),(DG1,DG2)=$O(^DGPM("ATS",DFN,DGPMCA,DGPREV,+X,0)) I $D(^DGPM(+DG1,"PTF")),$P(^("PTF"),"^",2)]"" D DEL
"RTN","DGPTTS1",28,0)
 ;
"RTN","DGPTTS1",29,0)
 K Y S Y=+$O(^DGPM("APHY",DGPMCA,0)) I $D(^DGPM(Y,0)) S Y(0)=^(0),Y("PTF")=$S($D(^("PTF")):^("PTF"),1:"")
"RTN","DGPTTS1",30,0)
 I $D(Y)>10 S T("ADM")=Y_"^"_$S($D(^DIC(45.7,+$P(Y(0),"^",9),0)):$P(^(0),"^",2),1:"")_"^^"_$P(Y("PTF"),"^",3)_"^"_$P(Y(0),"^",8) K Y
"RTN","DGPTTS1",31,0)
 ;
"RTN","DGPTTS1",32,0)
 S DGDEL=$O(^UTILITY($J,"T",0)) ;^(DGDEL) in next line references global on this line
"RTN","DGPTTS1",33,0)
 I DGDEL S T(DGDEL)=^(DGDEL),DG1=$P(T(DGDEL),"^",3) I DG1 S T(DGDEL)=$P(T(DGDEL),U,1,2) D  K DA S DIK="^DGPT("_PTF_",""M"",",DA(1)=PTF,DA=DG1 D ^DIK K DA S ^UTILITY($J,"T",DGDEL)=$P(T(DGDEL),U,1,2)
"RTN","DGPTTS1",34,0)
 . N DGREC81,DGREC82
"RTN","DGPTTS1",35,0)
 . S DGREC=$S($D(^DGPT(PTF,"M",DG1,0)):^(0),1:""),DGREC81=$G(^(81)),DGREC82=$G(^(82))
"RTN","DGPTTS1",36,0)
 . D MSG
"RTN","DGPTTS1",37,0)
 . QUIT
"RTN","DGPTTS1",38,0)
 K DGA K:$D(T(+DGDT)) T(DGDT)
"RTN","DGPTTS1",39,0)
 S DGAD=+DGPMAN F I=0:0 S I=$O(^UTILITY($J,"T",I)) Q:I'>0  S DGAD=I
"RTN","DGPTTS1",40,0)
 S DGREC1=$S($D(^DGPT(PTF,"M",1,0)):^(0),1:"")
"RTN","DGPTTS1",41,0)
 S DGREC=$S($D(^UTILITY($J,"T",DGAD)):^(DGAD),$D(T("ADM")):T("ADM"),1:"")
"RTN","DGPTTS1",42,0)
 I DGREC,$D(^DGPM(+DGREC,0)) D
"RTN","DGPTTS1",43,0)
 .N DGFDA,DGMSG
"RTN","DGPTTS1",44,0)
 .S DGFDA(405,(+DGREC)_",",53)=1
"RTN","DGPTTS1",45,0)
 .D FILE^DIE("","DGFDA","DGMSG")
"RTN","DGPTTS1",46,0)
 S DGREC=$P(DGREC,U,2)
"RTN","DGPTTS1",47,0)
 I DGDT W:'DGREC&'$D(ZTQUEUED) !,"No Treating Specialty Transfers",! S I1=1,DIE="^DGPT(",DA=PTF,DR="71///"_DGREC D ^DIE:DGREC S PR=DGAD,NX=DGDT D LOL^DGPTTS2 I $P(DGREC1,U,3,4)'=(LOL_U_LOP) S DR="3///"_LOL_";4///"_LOP,I1=1 D TD5^DGPTTS2 K DR
"RTN","DGPTTS1",48,0)
 I 'DGDT S PR=DGAD,NX=DT,I1=1 D LOL^DGPTTS2 I $P(DGREC1,U,2,4)'=(DGREC_U_LOL_U_LOP) S DR="3///"_LOL_";4///"_LOP_$S(DGREC:";2///"_DGREC,1:"") D TD5^DGPTTS2
"RTN","DGPTTS1",49,0)
 K DGSAVE,DR,DGREC1 D ^DGPTTS2 Q
"RTN","DGPTTS1",50,0)
 ;
"RTN","DGPTTS1",51,0)
DEL Q:$D(^UTILITY($J,"T",(9999999.999999-$E(DGPREV,1,14))))
"RTN","DGPTTS1",52,0)
 S DG1=$P(^DGPM(DG1,"PTF"),"^",2) D  I DGREC]"" K DA S DIK="^DGPT("_PTF_",""M"",",DA(1)=PTF,DA=DG1 D ^DIK K DA
"RTN","DGPTTS1",53,0)
 . N DGREC81,DGREC82
"RTN","DGPTTS1",54,0)
 . S DGREC=$S($D(^DGPT(PTF,"M",+DG1,0)):^(0),1:""),DGREC81=$G(^(81)),DGREC82=$G(^(82))
"RTN","DGPTTS1",55,0)
 . QUIT:DGREC=""
"RTN","DGPTTS1",56,0)
 . D MSG
"RTN","DGPTTS1",57,0)
 . QUIT
"RTN","DGPTTS1",58,0)
 S DA=DG2,DR="52///@;53///@",DIE="^DGPM(" D ^DIE Q
"RTN","DGPTTS1",59,0)
 ;
"RTN","DGPTTS1",60,0)
MSG ;
"RTN","DGPTTS1",61,0)
 N EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPTTS1",62,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTTS1",63,0)
 S DGMSG="",DGMSG81="",DGMSG82=""
"RTN","DGPTTS1",64,0)
 F X=5:1:15 I X'=10 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(DGREC,U,X),EFFDATE),DGMSG=DGMSG_$S(+DGPTTMP>0:$P(DGPTTMP,U,2)_", ",1:""),DGMSG82=DGMSG82_$S(+DGPTTMP>0:$P(DGREC82,U,X-4-(X>10))_", ",1:"")
"RTN","DGPTTS1",65,0)
 F X=1:1:15 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(DGREC81,U,X),EFFDATE),DGMSG81=DGMSG81_$S(+DGPTTMP>0:$P(DGPTTMP,U,2)_", ",1:""),DGMSG82=DGMSG82_$S(+DGPTTMP>0:$P(DGREC82,U,X+10)_", ",1:"")
"RTN","DGPTTS1",66,0)
 QUIT:DGMSG=""&(DGMSG81="")
"RTN","DGPTTS1",67,0)
 I DGMSG="" S DGMSG=DGMSG81 K DGMSG81
"RTN","DGPTTS1",68,0)
 S ^UTILITY($J,"DEL",DG1)=DGMSG,^(DG1,82)=DGMSG82 S:DGMSG81]"" ^(81)=DGMSG81
"RTN","DGPTTS1",69,0)
 ;-- save expanded codes 
"RTN","DGPTTS1",70,0)
 S DGMSG1=""
"RTN","DGPTTS1",71,0)
 I $D(^DGPT(PTF,"M",+DG1,300)) S DGEX=^(300) F X=2:1:7 S:$P(DGEX,U,X)]"" $P(DGMSG1,U,X)=$P(DGEX,U,X)
"RTN","DGPTTS1",72,0)
 S:DGMSG1]"" ^UTILITY($J,300,DG1)=DGMSG1
"RTN","DGPTTS1",73,0)
 K DGMSG1
"RTN","DGPTTS1",74,0)
 S Y=$P(DGREC,U,10) X ^DD("DD") S DGMSG="501 movement of "_$P(^DPT(DFN,0),U,1)_" of "_Y_" losing specialty "_$P(^DIC(42.4,$P(DGREC,U,2),0),U,1)_" was deleted by "_$P(^VA(200,DUZ,0),U,1)_" it contained diag "_$E(DGMSG,1,120)
"RTN","DGPTTS1",75,0)
 S:'$D(DGPMAN) DGPMAN=^DGPM(DGPMCA,0) D MSG^DGPTMSG1
"RTN","DGPTTS1",76,0)
 K DGEX,DGMSG81,DGMSG82 Q
"RTN","DGPTTS2")
0^69^B22200737
"RTN","DGPTTS2",1,0)
DGPTTS2 ;ALB/JDS/PLT - FACILITY TREATING SPECIALTY AND 501 MOVEMENTS, cont. ;6/3/15 11:13am
"RTN","DGPTTS2",2,0)
 ;;5.3;Registration;**549,478,884**;Aug 13, 1993;Build 31
"RTN","DGPTTS2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPTTS2",4,0)
 ;
"RTN","DGPTTS2",5,0)
 S NX=$O(^UTILITY($J,"T",0)),DGDR=0 Q:NX'>0  S T(NX)=^(NX),I2=$P(T(NX),U,4),B(501)=U
"RTN","DGPTTS2",6,0)
 F I=0:0 S I=$O(^DGPT(PTF,"M",I)) Q:I'>0  D
"RTN","DGPTTS2",7,0)
 .N FLD,DGFDA,DGMSG
"RTN","DGPTTS2",8,0)
 .F FLD=20:1:25 S DGFDA(45.02,I_","_PTF_",",FLD)="@"
"RTN","DGPTTS2",9,0)
 .D FILE^DIE("","DGFDA","DGMSG")
"RTN","DGPTTS2",10,0)
LOOP1 K:$D(PR) T(PR) S PR=NX,NX=$O(^UTILITY($J,"T",NX)) G Q:NX'>0 S T(NX)=^(NX),T(PR)=^(PR)
"RTN","DGPTTS2",11,0)
 S I1=+$P(T(NX),U,3),I2=$S($O(^(NX)):$P(^(NX),U,3),1:0),DGDOC=$P(T(NX),U,5) F I=PR,NX S DG1(I)=$P(T(I),U,2)
"RTN","DGPTTS2",12,0)
 D ADT1:I1'>0,ONE:$P(T(PR),U,4)'=I1,LOL
"RTN","DGPTTS2",13,0)
 S A=$S($D(^DGPT(PTF,"M",I1,0)):^(0),1:"") I $P(A,U,1,4)'=(I1_U_DG1(PR)_U_LOL_U_LOP)!($P(A,U,10)'=NX) S DR=$S('A:".01///"_I1_";",1:"")_"2////"_DG1(PR)_";3///"_LOL_";4///"_LOP_";10////"_NX D TD5
"RTN","DGPTTS2",14,0)
 I $P(T(PR),U,4)'=I1 S DR="53///"_I1,DA=+T(PR),DIE="^DGPM(" D ^DIE
"RTN","DGPTTS2",15,0)
 G LOOP1
"RTN","DGPTTS2",16,0)
 ;
"RTN","DGPTTS2",17,0)
ADT1 F  L +^DGPT(PTF,"M",0):1 I $T QUIT
"RTN","DGPTTS2",18,0)
 S:'$D(^DGPT(PTF,"M",0)) ^DGPT(PTF,"M",0)="^45.02AI^1^1"
"RTN","DGPTTS2",19,0)
 F I=0:0 S I=$O(^DGPT(PTF,"M",I)) Q:I'>0  S I1=I
"RTN","DGPTTS2",20,0)
 S I1=I1+1,J=^DGPT(PTF,"M",0),^(0)=$P(J,U,1,2)_U_I1_U_($P(J,U,4)+1) L -^DGPT(PTF,"M",0)
"RTN","DGPTTS2",21,0)
 N DGFDA,DGMSG
"RTN","DGPTTS2",22,0)
 S DGFDA(45.02,I1_","_PTF_",",.01)=I1
"RTN","DGPTTS2",23,0)
 D FILE^DIE("","DGFDA","DGMSG")
"RTN","DGPTTS2",24,0)
 S T(NX)=$P(T(NX)_"^^",U,1,2)_U_I1
"RTN","DGPTTS2",25,0)
 S DA=+T(NX),DR="52///"_I1,DIE="^DGPM(" D ^DIE
"RTN","DGPTTS2",26,0)
 QUIT
"RTN","DGPTTS2",27,0)
 ;
"RTN","DGPTTS2",28,0)
ONE ;delete in one ien/save in another ien for 25 icd codes and node 300
"RTN","DGPTTS2",29,0)
 N DR,DGDR,DGA,DGB,DGC
"RTN","DGPTTS2",30,0)
 S I2=$P(T(PR),U,4) QUIT:'I2
"RTN","DGPTTS2",31,0)
 S DGA="DR",DGB="DGDR",DGC=0
"RTN","DGPTTS2",32,0)
 S J=$S($D(^DGPT(PTF,"M",I2,0)):^(0),1:0) G O1:'J S (DR,DGDR)="" F I=4:1:15 I I'=10 S:$P(J,U,I) @DGA=$G(@DGA)_I_"///@;",@DGB=$G(@DGB)_I_"////"_$P(J,U,I)_";"
"RTN","DGPTTS2",33,0)
 S J=$G(^DGPT(PTF,"M",I2,81)) I J]"" F I=1:1:15 I $P(J,U,I) S @DGA=$G(@DGA)_(I/100+81)_"///@;",@DGB=$G(@DGB)_(I/100+81)_"////"_$P(J,U,I)_";" S:$L(@DGB)>220 DGC=DGC+1,DGA="DR(1,45.02,DGC)",DGB="DGDR(1,45.02,DGC)"
"RTN","DGPTTS2",34,0)
 S J=$G(^DGPT(PTF,"M",I2,82)) I J]"" F I=1:1:25 I $P(J,U,I)]"" S @DGA=$G(@DGA)_(I/100+82)_"///@;",@DGB=$G(@DGB)_(I/100+82)_"////"_$P(J,U,I)_";" S:$L(@DGB)>220 DGC=DGC+1,DGA="DR(1,45.02,DGC)",DGB="DGDR(1,45.02,DGC)"
"RTN","DGPTTS2",35,0)
 S J=$S($D(^DGPT(PTF,"M",I2,300)):^(300),1:"") I J]"" F I=2:1:7 I $P(J,U,I)]"" S @DGA=$G(@DGA)_"300.0"_I_"///@;",@DGB=$G(@DGB)_"300.0"_I_"////"_$P(J,U,I)_";" S:$L(@DGB)>220 DGC=DGC+1,DGA="DR(1,45.02,DGC)",DGB="DGDR(1,45.02,DGC)"
"RTN","DGPTTS2",36,0)
 S I1=I2 D TD5:DR]"" K DR S I1=$P(T(NX),U,3) M DR=DGDR D TD5:DR]""
"RTN","DGPTTS2",37,0)
 QUIT
"RTN","DGPTTS2",38,0)
 ;
"RTN","DGPTTS2",39,0)
TD5 S DA=I1,DIE="^DGPT("_PTF_",""M"",",DA(1)=PTF,DP=45.02 D ^DIE QUIT
"RTN","DGPTTS2",40,0)
 ;
"RTN","DGPTTS2",41,0)
LOL S DG1=$S(DGDT:DGDT,1:DT),(LOL,LOP)=0
"RTN","DGPTTS2",42,0)
 F I=DGADM:0 S I=$O(^DGPM("APTT2",DFN,I)) Q:I'>0!(I>DG1)  S J=$O(^DGPM("APTT2",DFN,I,0)) I $S('$D(^DGPM(J,0)):0,$P(^(0),"^",14)=DGPMCA:1,1:0) S C=+$P(^(0),"^",18) I C=1!(C=2)!(C=3) D LOL1
"RTN","DGPTTS2",43,0)
 QUIT
"RTN","DGPTTS2",44,0)
 ;
"RTN","DGPTTS2",45,0)
LOL1 S X2=$S(I<PR:PR,1:I),Y=$O(^DGPM("APTT2",DFN,I)),X1=$S(Y>PR&(Y'>NX):+Y,Y>NX!(Y<0):NX,1:X2) I X1>X2 D ^%DTC S Z=$S(C=1:"LOP",1:"LOL"),@Z=@Z+X K C,X,Y,X1,X2
"RTN","DGPTTS2",46,0)
 QUIT
"RTN","DGPTTS2",47,0)
 ;
"RTN","DGPTTS2",48,0)
ASIH S DGBDT=DGADM,DGEDT=$S(DGDT:DGDT,1:DT) D ASIH^DGUTL2
"RTN","DGPTTS2",49,0)
 S DIE="^DGPT(",DA=PTF,DR="77////"_DGREC D ^DIE
"RTN","DGPTTS2",50,0)
 K DE,DQ,DR,DA,DIE,DGBDT,DGEDT,DGMVTP QUIT
"RTN","DGPTTS2",51,0)
 ;
"RTN","DGPTTS2",52,0)
O1 ;filing saved movement 25 codes with poa and 300-node data
"RTN","DGPTTS2",53,0)
 Q:'$D(^UTILITY($J,"DEL",I2))
"RTN","DGPTTS2",54,0)
 N DR,DGA,DGB,A,B,J,J82
"RTN","DGPTTS2",55,0)
 S DR="",DGA=0,DGB="DR"
"RTN","DGPTTS2",56,0)
 S A=^UTILITY($J,"DEL",I2),B=0,J82=$G(^(I2,82))
"RTN","DGPTTS2",57,0)
 F I=1:1 S J=$P(A,", ",I) S:J=""&'B&$D(^UTILITY($J,"DEL",I2,81)) A=^(81),B=1,J=$P(A,", ",I),I=1,J=$P(A,", ",I) QUIT:J=""  S DGA=DGA+1 D
"RTN","DGPTTS2",58,0)
 . S @DGB=$G(@DGB)_$S(DGA<11:DGA>5+DGA+4,1:DGA-10/100+81)_"///"_J_";"_(DGA/100+82)_"////"_$P(J82,", ",DGA)_";"
"RTN","DGPTTS2",59,0)
 . I $L(@DGB)>220 S DGB="DR(1,45.02,"_(1+$O(DR(1,45.02,99),-1))_")"
"RTN","DGPTTS2",60,0)
 . QUIT
"RTN","DGPTTS2",61,0)
 S I1=$P(T(NX),U,3) D TD5:DR]"" K DR
"RTN","DGPTTS2",62,0)
 ;-- restore expanded codes
"RTN","DGPTTS2",63,0)
 Q:'$D(^UTILITY($J,300,I2))  S DR="",DGEX=^(I2) F I=2:1:7 S:$P(DGEX,U,I)]"" DR=DR_"300.0"_I_"////"_$P(DGEX,U,I)_";"
"RTN","DGPTTS2",64,0)
 D TD5:DR]""
"RTN","DGPTTS2",65,0)
 QUIT
"RTN","DGPTTS2",66,0)
Q S T(PR)=^UTILITY($J,"T",PR) I $P(T(PR),U,4)>1 S NX=1,T(1)="^^1" D ONE
"RTN","DGPTTS2",67,0)
 QUIT
"RTN","DGPTTS2",68,0)
CK ; -- checks for PTF# in ^DGPM and $D of the PTF in ^DGPT; Y = ifn of adm
"RTN","DGPTTS2",69,0)
 Q:$D(^DGPT(+$P(^DGPM(Y,0),"^",16),0))
"RTN","DGPTTS2",70,0)
 S Y=-1 W !,"warning:  A PTF record does not exist for this admission - cannot edit",!?10,"Treating Specialty.  MIS personnel and your supervisor should",!?10,"be notified."
"RTN","DGPTTS2",71,0)
 W "  The PTF option, 'Establish PTF record from Past",!?10,"Admission', may be used to create a PTF record." Q
"RTN","DGPTTS2",72,0)
 ;
"UP",45,45.01,-1)
45^S
"UP",45,45.01,0)
45.01
"UP",45,45.02,-1)
45^M
"UP",45,45.02,0)
45.02
"UP",45,45.05,-1)
45^P
"UP",45,45.05,0)
45.05
"VER")
8.0^22.0
"^DD",45,45,79,0)
PRINCIPAL DIAGNOSIS^*P80'X^ICD9(^70;10^N DGI S DGI=1 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79,1,0)
^.1
"^DD",45,45,79,1,1,0)
^^TRIGGER^45^82.01
"^DD",45,45,79,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,1)=DIV,DIH=45,DIG=82.01 D ^DICR
"^DD",45,45,79,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,1)=DIV,DIH=45,DIG=82.01 D ^DICR
"^DD",45,45,79,1,1,"%D",0)
^^2^2^3141001^
"^DD",45,45,79,1,1,"%D",1,0)
When PRINCIPAL DIAGNOSIS field is deleted or changed, delete the 
"^DD",45,45,79,1,1,"%D",2,0)
associated POA indicator field.
"^DD",45,45,79,1,1,"CREATE VALUE")
@
"^DD",45,45,79,1,1,"DELETE VALUE")
@
"^DD",45,45,79,1,1,"DT")
3141001
"^DD",45,45,79,1,1,"FIELD")
#82.01
"^DD",45,45,79,1,992,0)
45^ADGRU79^MUMPS
"^DD",45,45,79,1,992,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79,1,992,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79,1,992,"%D",0)
^.101^1^1^3040409^^^^
"^DD",45,45,79,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79,1,992,"DT")
3040409
"^DD",45,45,79,3)
Enter the ICD diagnosis responsible for the patient's greatest length of stay.
"^DD",45,45,79,4)
Q
"^DD",45,45,79,21,0)
^.001^2^2^3120306^^^^
"^DD",45,45,79,21,1,0)
This field contains the diagnosis responsible for the patient's
"^DD",45,45,79,21,2,0)
greatest length of stay.
"^DD",45,45,79,"DT")
3150820
"^DD",45,45,79.16,0)
SECONDARY DIAGNOSIS 1^*P80`X^ICD9(^70;16^N DGI S DGI=2 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.16,1,0)
^.1
"^DD",45,45,79.16,1,1,0)
^^TRIGGER^45^82.02
"^DD",45,45,79.16,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,2)=DIV,DIH=45,DIG=82.02 D ^DICR
"^DD",45,45,79.16,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,2)=DIV,DIH=45,DIG=82.02 D ^DICR
"^DD",45,45,79.16,1,1,"%D",0)
^^2^2^3141001^
"^DD",45,45,79.16,1,1,"%D",1,0)
When SECONDARY DIAGNOSIS 1 field is deleted or changed, delete the 
"^DD",45,45,79.16,1,1,"%D",2,0)
associated POA indicator field.
"^DD",45,45,79.16,1,1,"CREATE VALUE")
@
"^DD",45,45,79.16,1,1,"DELETE VALUE")
@
"^DD",45,45,79.16,1,1,"DT")
3141001
"^DD",45,45,79.16,1,1,"FIELD")
#82.02
"^DD",45,45,79.16,1,992,0)
45^ADGRU7916^MUMPS
"^DD",45,45,79.16,1,992,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.16,1,992,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.16,1,992,"%D",0)
^.101^1^1^3040409^^^^
"^DD",45,45,79.16,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.16,1,992,"DT")
3040409
"^DD",45,45,79.16,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.16,21,0)
^.001^2^2^3120222^^^^
"^DD",45,45,79.16,21,1,0)
This field contains a diagnosis for the patient during this episode of
"^DD",45,45,79.16,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.16,"DT")
3150820
"^DD",45,45,79.17,0)
SECONDARY DIAGNOSIS 2^*P80'X^ICD9(^70;17^N DGI S DGI=3 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.17,1,0)
^.1
"^DD",45,45,79.17,1,1,0)
^^TRIGGER^45^82.03
"^DD",45,45,79.17,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,3)=DIV,DIH=45,DIG=82.03 D ^DICR
"^DD",45,45,79.17,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,3)=DIV,DIH=45,DIG=82.03 D ^DICR
"^DD",45,45,79.17,1,1,"%D",0)
^^2^2^3141001^
"^DD",45,45,79.17,1,1,"%D",1,0)
When SECONDARY DIAGNOSIS 2 field is deleted or changed, delete the 
"^DD",45,45,79.17,1,1,"%D",2,0)
associated POA indicator field.
"^DD",45,45,79.17,1,1,"CREATE VALUE")
@
"^DD",45,45,79.17,1,1,"DELETE VALUE")
@
"^DD",45,45,79.17,1,1,"DT")
3141001
"^DD",45,45,79.17,1,1,"FIELD")
#82.03
"^DD",45,45,79.17,1,992,0)
45^ADGRU7917^MUMPS
"^DD",45,45,79.17,1,992,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.17,1,992,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.17,1,992,"%D",0)
^.101^1^1^3040409^^^^
"^DD",45,45,79.17,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.17,1,992,"DT")
3040409
"^DD",45,45,79.17,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.17,21,0)
^.001^2^2^3040115^^^^
"^DD",45,45,79.17,21,1,0)
This field contains a diagnosis for the patient during this episode of
"^DD",45,45,79.17,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.17,"DT")
3150820
"^DD",45,45,79.18,0)
SECONDARY DIAGNOSIS 3^*P80'X^ICD9(^70;18^N DGI S DGI=4 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.18,1,0)
^.1
"^DD",45,45,79.18,1,1,0)
^^TRIGGER^45^82.04
"^DD",45,45,79.18,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,4)=DIV,DIH=45,DIG=82.04 D ^DICR
"^DD",45,45,79.18,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,4)=DIV,DIH=45,DIG=82.04 D ^DICR
"^DD",45,45,79.18,1,1,"%D",0)
^^2^2^3141001^
"^DD",45,45,79.18,1,1,"%D",1,0)
When SECONDARY DIAGNOSIS 3 field is deleted or changed, delete the 
"^DD",45,45,79.18,1,1,"%D",2,0)
associated POA indicator field.
"^DD",45,45,79.18,1,1,"CREATE VALUE")
@
"^DD",45,45,79.18,1,1,"DELETE VALUE")
@
"^DD",45,45,79.18,1,1,"DT")
3141001
"^DD",45,45,79.18,1,1,"FIELD")
#82.04
"^DD",45,45,79.18,1,992,0)
45^ADGRU7818^MUMPS
"^DD",45,45,79.18,1,992,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.18,1,992,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.18,1,992,"%D",0)
^.101^1^1^3040409^^^^
"^DD",45,45,79.18,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.18,1,992,"DT")
3040409
"^DD",45,45,79.18,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.18,21,0)
^.001^2^2^3120110^^^^
"^DD",45,45,79.18,21,1,0)
This field contains a diagnosis for the patient during this episode of
"^DD",45,45,79.18,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.18,"DT")
3150820
"^DD",45,45,79.19,0)
SECONDARY DIAGNOSIS 4^*P80'X^ICD9(^70;19^N DGI S DGI=5 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.19,1,0)
^.1
"^DD",45,45,79.19,1,1,0)
^^TRIGGER^45^82.05
"^DD",45,45,79.19,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,5)=DIV,DIH=45,DIG=82.05 D ^DICR
"^DD",45,45,79.19,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,5)=DIV,DIH=45,DIG=82.05 D ^DICR
"^DD",45,45,79.19,1,1,"%D",0)
^^2^2^3141001^
"^DD",45,45,79.19,1,1,"%D",1,0)
When SECONDARY DIAGNOSIS 4 field is deleted or changed, delete the 
"^DD",45,45,79.19,1,1,"%D",2,0)
associated POA indicator field.
"^DD",45,45,79.19,1,1,"CREATE VALUE")
@
"^DD",45,45,79.19,1,1,"DELETE VALUE")
@
"^DD",45,45,79.19,1,1,"DT")
3141001
"^DD",45,45,79.19,1,1,"FIELD")
#82.05
"^DD",45,45,79.19,1,992,0)
45^ADGRU7919^MUMPS
"^DD",45,45,79.19,1,992,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.19,1,992,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.19,1,992,"%D",0)
^.101^1^1^3040409^^^^
"^DD",45,45,79.19,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.19,1,992,"DT")
3040409
"^DD",45,45,79.19,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.19,21,0)
^.001^2^2^3040115^^^^
"^DD",45,45,79.19,21,1,0)
This field contains a diagnosis for the patient during this episode of
"^DD",45,45,79.19,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.19,"DT")
3150820
"^DD",45,45,79.201,0)
SECONDARY DIAGNOSIS 5^*P80'X^ICD9(^70;20^N DGI S DGI=6 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.201,1,0)
^.1
"^DD",45,45,79.201,1,1,0)
^^TRIGGER^45^82.06
"^DD",45,45,79.201,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,6)=DIV,DIH=45,DIG=82.06 D ^DICR
"^DD",45,45,79.201,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,6)=DIV,DIH=45,DIG=82.06 D ^DICR
"^DD",45,45,79.201,1,1,"%D",0)
^^2^2^3141001^
"^DD",45,45,79.201,1,1,"%D",1,0)
When SECONDARY DIAGNOSIS 5 field is deleted or changed, delete the 
"^DD",45,45,79.201,1,1,"%D",2,0)
associated POA indicator field.
"^DD",45,45,79.201,1,1,"CREATE VALUE")
@
"^DD",45,45,79.201,1,1,"DELETE VALUE")
@
"^DD",45,45,79.201,1,1,"DT")
3141001
"^DD",45,45,79.201,1,1,"FIELD")
#82.06
"^DD",45,45,79.201,1,992,0)
45^ADGRU79201^MUMPS
"^DD",45,45,79.201,1,992,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.201,1,992,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.201,1,992,"%D",0)
^.101^1^1^3040409^^^^
"^DD",45,45,79.201,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.201,1,992,"DT")
3040409
"^DD",45,45,79.201,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.201,21,0)
^.001^2^2^3040115^^^^
"^DD",45,45,79.201,21,1,0)
This field contains a diagnosis for the patient during this episode of
"^DD",45,45,79.201,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.201,"DT")
3150820
"^DD",45,45,79.21,0)
SECONDARY DIAGNOSIS 6^*P80'X^ICD9(^70;21^N DGI S DGI=7 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.21,1,0)
^.1
"^DD",45,45,79.21,1,1,0)
^^TRIGGER^45^82.07
"^DD",45,45,79.21,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,7)=DIV,DIH=45,DIG=82.07 D ^DICR
"^DD",45,45,79.21,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,7)=DIV,DIH=45,DIG=82.07 D ^DICR
"^DD",45,45,79.21,1,1,"%D",0)
^^2^2^3141001^
"^DD",45,45,79.21,1,1,"%D",1,0)
When SECONDARY DIAGNOSIS 6 field is deleted or changed, delete the 
"^DD",45,45,79.21,1,1,"%D",2,0)
associated POA indicator field.
"^DD",45,45,79.21,1,1,"CREATE VALUE")
@
"^DD",45,45,79.21,1,1,"DELETE VALUE")
@
"^DD",45,45,79.21,1,1,"DT")
3141001
"^DD",45,45,79.21,1,1,"FIELD")
#82.07
"^DD",45,45,79.21,1,992,0)
45^ADGRU7921^MUMPS
"^DD",45,45,79.21,1,992,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.21,1,992,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.21,1,992,"%D",0)
^.101^1^1^3040409^^^^
"^DD",45,45,79.21,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.21,1,992,"DT")
3040409
"^DD",45,45,79.21,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.21,21,0)
^.001^2^2^3120110^^^^
"^DD",45,45,79.21,21,1,0)
This field contains a diagnosis for the patient during this episode of
"^DD",45,45,79.21,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.21,"DT")
3150820
"^DD",45,45,79.22,0)
SECONDARY DIAGNOSIS 7^*P80'X^ICD9(^70;22^N DGI S DGI=8 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.22,1,0)
^.1
"^DD",45,45,79.22,1,1,0)
^^TRIGGER^45^82.08
"^DD",45,45,79.22,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,8)=DIV,DIH=45,DIG=82.08 D ^DICR
"^DD",45,45,79.22,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,8)=DIV,DIH=45,DIG=82.08 D ^DICR
"^DD",45,45,79.22,1,1,"%D",0)
^^2^2^3141001^
"^DD",45,45,79.22,1,1,"%D",1,0)
When SECONDARY DIAGNOSIS 7 field is deleted or changed, delete the 
"^DD",45,45,79.22,1,1,"%D",2,0)
associated POA indicator field.
"^DD",45,45,79.22,1,1,"CREATE VALUE")
@
"^DD",45,45,79.22,1,1,"DELETE VALUE")
@
"^DD",45,45,79.22,1,1,"DT")
3141001
"^DD",45,45,79.22,1,1,"FIELD")
#82.08
"^DD",45,45,79.22,1,992,0)
45^ADGRU7922^MUMPS
"^DD",45,45,79.22,1,992,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.22,1,992,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.22,1,992,"%D",0)
^.101^1^1^3040409^^^^
"^DD",45,45,79.22,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.22,1,992,"DT")
3040409
"^DD",45,45,79.22,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.22,21,0)
^.001^2^2^3040115^^^^
"^DD",45,45,79.22,21,1,0)
This field contains a diagnosis for the patient during this episode of
"^DD",45,45,79.22,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.22,"DT")
3150820
"^DD",45,45,79.23,0)
SECONDARY DIAGNOSIS 8^*P80'X^ICD9(^70;23^N DGI S DGI=9 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.23,1,0)
^.1
"^DD",45,45,79.23,1,1,0)
^^TRIGGER^45^82.09
"^DD",45,45,79.23,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,9)=DIV,DIH=45,DIG=82.09 D ^DICR
"^DD",45,45,79.23,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,9)=DIV,DIH=45,DIG=82.09 D ^DICR
"^DD",45,45,79.23,1,1,"%D",0)
^^2^2^3141001^
"^DD",45,45,79.23,1,1,"%D",1,0)
When SECONDARY DIAGNOSIS 8 field is deleted or changed, delete the 
"^DD",45,45,79.23,1,1,"%D",2,0)
associated POA indicator field.
"^DD",45,45,79.23,1,1,"CREATE VALUE")
@
"^DD",45,45,79.23,1,1,"DELETE VALUE")
@
"^DD",45,45,79.23,1,1,"DT")
3141001
"^DD",45,45,79.23,1,1,"FIELD")
#82.09
"^DD",45,45,79.23,1,992,0)
45^ADGRU7923^MUMPS
"^DD",45,45,79.23,1,992,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.23,1,992,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.23,1,992,"%D",0)
^.101^1^1^3040409^^^^
"^DD",45,45,79.23,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.23,1,992,"DT")
3040409
"^DD",45,45,79.23,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.23,21,0)
^.001^2^2^3040115^^^^
"^DD",45,45,79.23,21,1,0)
This field contains a diagnosis for the patient during this episode of
"^DD",45,45,79.23,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.23,"DT")
3150820
"^DD",45,45,79.24,0)
SECONDARY DIAGNOSIS 9^*P80'X^ICD9(^70;24^N DGI S DGI=10 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.24,1,0)
^.1
"^DD",45,45,79.24,1,1,0)
^^TRIGGER^45^82.1
"^DD",45,45,79.24,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,10)=DIV,DIH=45,DIG=82.1 D ^DICR
"^DD",45,45,79.24,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,10)=DIV,DIH=45,DIG=82.1 D ^DICR
"^DD",45,45,79.24,1,1,"%D",0)
^^2^2^3141001^
"^DD",45,45,79.24,1,1,"%D",1,0)
When SECONDARY DIAGNOSIS 9 field is deleted or changed, delete the 
"^DD",45,45,79.24,1,1,"%D",2,0)
associated POA indicator field.
"^DD",45,45,79.24,1,1,"CREATE VALUE")
@
"^DD",45,45,79.24,1,1,"DELETE VALUE")
@
"^DD",45,45,79.24,1,1,"DT")
3141001
"^DD",45,45,79.24,1,1,"FIELD")
#82.1
"^DD",45,45,79.24,1,992,0)
45^ADGRU7924^MUMPS
"^DD",45,45,79.24,1,992,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.24,1,992,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.24,1,992,"%D",0)
^.101^1^1^3040409^^^^
"^DD",45,45,79.24,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.24,1,992,"DT")
3040409
"^DD",45,45,79.24,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.24,21,0)
^.001^2^2^3040115^^^^
"^DD",45,45,79.24,21,1,0)
This field contains a diagnosis for the patient during this episode of
"^DD",45,45,79.24,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.24,"DT")
3150820
"^DD",45,45,79.241,0)
SECONDARY DIAGNOSIS 10^*P80'X^ICD9(^71;1^N DGI S DGI=11 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.241,1,0)
^.1
"^DD",45,45,79.241,1,1,0)
45^ADGRU79241^MUMPS
"^DD",45,45,79.241,1,1,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.241,1,1,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.241,1,1,"%D",0)
^.101^1^1^3050324^^^
"^DD",45,45,79.241,1,1,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.241,1,1,"DT")
3050324
"^DD",45,45,79.241,1,2,0)
^^TRIGGER^45^82.11
"^DD",45,45,79.241,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,11)=DIV,DIH=45,DIG=82.11 D ^DICR
"^DD",45,45,79.241,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,11)=DIV,DIH=45,DIG=82.11 D ^DICR
"^DD",45,45,79.241,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45,79.241,1,2,"%D",1,0)
When SECONDARY DIAGNOSIS 10 field is deleted or changed, delete the 
"^DD",45,45,79.241,1,2,"%D",2,0)
associated POA indicator field.
"^DD",45,45,79.241,1,2,"CREATE VALUE")
@
"^DD",45,45,79.241,1,2,"DELETE VALUE")
@
"^DD",45,45,79.241,1,2,"DT")
3141001
"^DD",45,45,79.241,1,2,"FIELD")
#82.11
"^DD",45,45,79.241,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.241,21,0)
^.001^1^1^3120222^^^^
"^DD",45,45,79.241,21,1,0)
This field contains a diagnosis for the patient during this episode of care.
"^DD",45,45,79.241,"DT")
3150820
"^DD",45,45,79.242,0)
SECONDARY DIAGNOSIS 11^*P80'X^ICD9(^71;2^N DGI S DGI=12 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.242,1,0)
^.1
"^DD",45,45,79.242,1,1,0)
45^ADGRU79242^MUMPS
"^DD",45,45,79.242,1,1,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.242,1,1,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.242,1,1,"%D",0)
^^1^1^3050324^
"^DD",45,45,79.242,1,1,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.242,1,1,"DT")
3050324
"^DD",45,45,79.242,1,2,0)
^^TRIGGER^45^82.12
"^DD",45,45,79.242,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,12)=DIV,DIH=45,DIG=82.12 D ^DICR
"^DD",45,45,79.242,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,12)=DIV,DIH=45,DIG=82.12 D ^DICR
"^DD",45,45,79.242,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45,79.242,1,2,"%D",1,0)
When SECONDARY DIAGNOSIS 11 field is deleted or changed, delete the 
"^DD",45,45,79.242,1,2,"%D",2,0)
associated POA indicator field.
"^DD",45,45,79.242,1,2,"CREATE VALUE")
@
"^DD",45,45,79.242,1,2,"DELETE VALUE")
@
"^DD",45,45,79.242,1,2,"DT")
3141001
"^DD",45,45,79.242,1,2,"FIELD")
#82.12
"^DD",45,45,79.242,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.242,21,0)
^.001^1^1^3040115^^^^
"^DD",45,45,79.242,21,1,0)
This field contains a diagnosis for the patient during this episode of care.
"^DD",45,45,79.242,"DT")
3150820
"^DD",45,45,79.243,0)
SECONDARY DIAGNOSIS 12^*P80'X^ICD9(^71;3^N DGI S DGI=13 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.243,1,0)
^.1
"^DD",45,45,79.243,1,1,0)
45^ADGRU79243^MUMPS
"^DD",45,45,79.243,1,1,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.243,1,1,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.243,1,1,"%D",0)
^^1^1^3050324^
"^DD",45,45,79.243,1,1,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.243,1,1,"DT")
3050324
"^DD",45,45,79.243,1,2,0)
^^TRIGGER^45^82.13
"^DD",45,45,79.243,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,13)=DIV,DIH=45,DIG=82.13 D ^DICR
"^DD",45,45,79.243,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,13)=DIV,DIH=45,DIG=82.13 D ^DICR
"^DD",45,45,79.243,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45,79.243,1,2,"%D",1,0)
When SECONDARY DIAGNOSIS 12 field is deleted or changed, delete the 
"^DD",45,45,79.243,1,2,"%D",2,0)
associated POA indicator field.
"^DD",45,45,79.243,1,2,"CREATE VALUE")
@
"^DD",45,45,79.243,1,2,"DELETE VALUE")
@
"^DD",45,45,79.243,1,2,"DT")
3141001
"^DD",45,45,79.243,1,2,"FIELD")
#82.13
"^DD",45,45,79.243,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.243,21,0)
^.001^1^1^3040115^^^^
"^DD",45,45,79.243,21,1,0)
This field contains a diagnosis for the patient during this episode of care.
"^DD",45,45,79.243,"DT")
3150820
"^DD",45,45,79.244,0)
SECONDARY DIAGNOSIS 13^*P80'X^ICD9(^71;4^N DGI S DGI=14 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.244,1,0)
^.1
"^DD",45,45,79.244,1,1,0)
45^ADGRU79244^MUMPS
"^DD",45,45,79.244,1,1,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.244,1,1,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.244,1,1,"%D",0)
^^1^1^3050324^
"^DD",45,45,79.244,1,1,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.244,1,1,"DT")
3050324
"^DD",45,45,79.244,1,2,0)
^^TRIGGER^45^82.14
"^DD",45,45,79.244,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,14),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,14)=DIV,DIH=45,DIG=82.14 D ^DICR
"^DD",45,45,79.244,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,14),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,14)=DIV,DIH=45,DIG=82.14 D ^DICR
"^DD",45,45,79.244,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45,79.244,1,2,"%D",1,0)
When SECONDARY DIAGNOSIS 13 field is deleted or changed, delete the 
"^DD",45,45,79.244,1,2,"%D",2,0)
associated POA indicator field.
"^DD",45,45,79.244,1,2,"CREATE VALUE")
@
"^DD",45,45,79.244,1,2,"DELETE VALUE")
@
"^DD",45,45,79.244,1,2,"DT")
3141001
"^DD",45,45,79.244,1,2,"FIELD")
#82.14
"^DD",45,45,79.244,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.244,21,0)
^^2^2^3150210^
"^DD",45,45,79.244,21,1,0)
This field contains a diagnosis for the patient during this episode of 
"^DD",45,45,79.244,21,2,0)
care.
"^DD",45,45,79.244,"DT")
3150820
"^DD",45,45,79.245,0)
SECONDARY DIAGNOSIS 14^*P80'X^ICD9(^71;5^N DGI S DGI=15 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.245,1,0)
^.1
"^DD",45,45,79.245,1,1,0)
45^ADGRU79245^MUMPS
"^DD",45,45,79.245,1,1,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.245,1,1,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.245,1,1,"%D",0)
^^1^1^3140528^
"^DD",45,45,79.245,1,1,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes.
"^DD",45,45,79.245,1,1,"DT")
3140528
"^DD",45,45,79.245,1,2,0)
^^TRIGGER^45^82.15
"^DD",45,45,79.245,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,15),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,15)=DIV,DIH=45,DIG=82.15 D ^DICR
"^DD",45,45,79.245,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,15),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,15)=DIV,DIH=45,DIG=82.15 D ^DICR
"^DD",45,45,79.245,1,2,"%D",0)
^^2^2^3140930^
"^DD",45,45,79.245,1,2,"%D",1,0)
When SECONDARY DIAGNOSIS 14 field is deleted or changed, delete the 
"^DD",45,45,79.245,1,2,"%D",2,0)
associated POA indicator field.
"^DD",45,45,79.245,1,2,"CREATE VALUE")
@
"^DD",45,45,79.245,1,2,"DELETE VALUE")
@
"^DD",45,45,79.245,1,2,"DT")
3140930
"^DD",45,45,79.245,1,2,"FIELD")
#82.15
"^DD",45,45,79.245,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.245,21,0)
^.001^2^2^3140529^^
"^DD",45,45,79.245,21,1,0)
This field contains a diagnosis for the patient during this episode of 
"^DD",45,45,79.245,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.245,"DT")
3150820
"^DD",45,45,79.246,0)
SECONDARY DIAGNOSIS 15^*P80'X^ICD9(^71;6^N DGI S DGI=16 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.246,1,0)
^.1
"^DD",45,45,79.246,1,1,0)
45^ADGRU79246^MUMPS
"^DD",45,45,79.246,1,1,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.246,1,1,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.246,1,1,"%D",0)
^^1^1^3140529^
"^DD",45,45,79.246,1,1,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes.
"^DD",45,45,79.246,1,1,"DT")
3140529
"^DD",45,45,79.246,1,2,0)
^^TRIGGER^45^82.16
"^DD",45,45,79.246,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,16),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,16)=DIV,DIH=45,DIG=82.16 D ^DICR
"^DD",45,45,79.246,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,16),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,16)=DIV,DIH=45,DIG=82.16 D ^DICR
"^DD",45,45,79.246,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45,79.246,1,2,"%D",1,0)
When SECONDARY DIAGNOSIS 15 field is deleted or changed, delete the 
"^DD",45,45,79.246,1,2,"%D",2,0)
associated POA indicator field.
"^DD",45,45,79.246,1,2,"CREATE VALUE")
@
"^DD",45,45,79.246,1,2,"DELETE VALUE")
@
"^DD",45,45,79.246,1,2,"DT")
3141001
"^DD",45,45,79.246,1,2,"FIELD")
#82.16
"^DD",45,45,79.246,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.246,21,0)
^^2^2^3140529^
"^DD",45,45,79.246,21,1,0)
This field contains a diagnosis for the patient during this episode of 
"^DD",45,45,79.246,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.246,"DT")
3150820
"^DD",45,45,79.247,0)
SECONDARY DIAGNOSIS 16^*P80'X^ICD9(^71;7^N DGI S DGI=17 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.247,1,0)
^.1
"^DD",45,45,79.247,1,1,0)
45^ADGRU79247^MUMPS
"^DD",45,45,79.247,1,1,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.247,1,1,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.247,1,1,"%D",0)
^^1^1^3140529^
"^DD",45,45,79.247,1,1,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes.
"^DD",45,45,79.247,1,1,"DT")
3140529
"^DD",45,45,79.247,1,2,0)
^^TRIGGER^45^82.17
"^DD",45,45,79.247,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,17)=DIV,DIH=45,DIG=82.17 D ^DICR
"^DD",45,45,79.247,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,17)=DIV,DIH=45,DIG=82.17 D ^DICR
"^DD",45,45,79.247,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45,79.247,1,2,"%D",1,0)
When SECONDARY DIAGNOSIS 16 field is deleted or changed, delete the 
"^DD",45,45,79.247,1,2,"%D",2,0)
associated POA indicator field.
"^DD",45,45,79.247,1,2,"CREATE VALUE")
@
"^DD",45,45,79.247,1,2,"DELETE VALUE")
@
"^DD",45,45,79.247,1,2,"DT")
3141001
"^DD",45,45,79.247,1,2,"FIELD")
#82.17
"^DD",45,45,79.247,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.247,21,0)
^^2^2^3140529^
"^DD",45,45,79.247,21,1,0)
This field contains a diagnosis for the patient during this episode of 
"^DD",45,45,79.247,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.247,"DT")
3150820
"^DD",45,45,79.248,0)
SECONDARY DIAGNOSIS 17^*P80'X^ICD9(^71;8^N DGI S DGI=18 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.248,1,0)
^.1
"^DD",45,45,79.248,1,1,0)
45^ADGRU79248^MUMPS
"^DD",45,45,79.248,1,1,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.248,1,1,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.248,1,1,"%D",0)
^^1^1^3140529^
"^DD",45,45,79.248,1,1,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes.
"^DD",45,45,79.248,1,1,"DT")
3140529
"^DD",45,45,79.248,1,2,0)
^^TRIGGER^45^82.18
"^DD",45,45,79.248,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,18),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,18)=DIV,DIH=45,DIG=82.18 D ^DICR
"^DD",45,45,79.248,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,18),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,18)=DIV,DIH=45,DIG=82.18 D ^DICR
"^DD",45,45,79.248,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45,79.248,1,2,"%D",1,0)
When SECONDARY DIAGNOSIS 17 field is deleted or changed, delete the 
"^DD",45,45,79.248,1,2,"%D",2,0)
associated POA indicator field.
"^DD",45,45,79.248,1,2,"CREATE VALUE")
@
"^DD",45,45,79.248,1,2,"DELETE VALUE")
@
"^DD",45,45,79.248,1,2,"DT")
3141001
"^DD",45,45,79.248,1,2,"FIELD")
#82.18
"^DD",45,45,79.248,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.248,21,0)
^^2^2^3140529^
"^DD",45,45,79.248,21,1,0)
This field contains a diagnosis for the patient during this episode of 
"^DD",45,45,79.248,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.248,"DT")
3150820
"^DD",45,45,79.249,0)
SECONDARY DIAGNOSIS 18^*P80'X^ICD9(^71;9^N DGI S DGI=19 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.249,1,0)
^.1
"^DD",45,45,79.249,1,1,0)
45^ADGRU79249^MUMPS
"^DD",45,45,79.249,1,1,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.249,1,1,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.249,1,1,"%D",0)
^^1^1^3140529^
"^DD",45,45,79.249,1,1,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes.
"^DD",45,45,79.249,1,1,"DT")
3140529
"^DD",45,45,79.249,1,2,0)
^^TRIGGER^45^82.19
"^DD",45,45,79.249,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,19),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,19)=DIV,DIH=45,DIG=82.19 D ^DICR
"^DD",45,45,79.249,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,19),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,19)=DIV,DIH=45,DIG=82.19 D ^DICR
"^DD",45,45,79.249,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45,79.249,1,2,"%D",1,0)
When SECONDARY DIAGNOSIS 18 field is deleted or changed, delete the 
"^DD",45,45,79.249,1,2,"%D",2,0)
associated POA indicator field.
"^DD",45,45,79.249,1,2,"CREATE VALUE")
@
"^DD",45,45,79.249,1,2,"DELETE VALUE")
@
"^DD",45,45,79.249,1,2,"DT")
3141001
"^DD",45,45,79.249,1,2,"FIELD")
#82.19
"^DD",45,45,79.249,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.249,21,0)
^^2^2^3140529^
"^DD",45,45,79.249,21,1,0)
This field contains a diagnosis for the patient during this episode of 
"^DD",45,45,79.249,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.249,"DT")
3150820
"^DD",45,45,79.2491,0)
SECONDARY DIAGNOSIS 19^*P80'X^ICD9(^71;10^N DGI S DGI=20 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.2491,1,0)
^.1
"^DD",45,45,79.2491,1,1,0)
45^ADGRU792491^MUMPS
"^DD",45,45,79.2491,1,1,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.2491,1,1,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.2491,1,1,"%D",0)
^^1^1^3140529^
"^DD",45,45,79.2491,1,1,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes.
"^DD",45,45,79.2491,1,1,"DT")
3140529
"^DD",45,45,79.2491,1,2,0)
^^TRIGGER^45^82.2
"^DD",45,45,79.2491,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,20),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,20)=DIV,DIH=45,DIG=82.2 D ^DICR
"^DD",45,45,79.2491,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,20),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,20)=DIV,DIH=45,DIG=82.2 D ^DICR
"^DD",45,45,79.2491,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45,79.2491,1,2,"%D",1,0)
When SECONDARY DIAGNOSIS 19 field is deleted or changed, delete the 
"^DD",45,45,79.2491,1,2,"%D",2,0)
associated POA indicator field.
"^DD",45,45,79.2491,1,2,"CREATE VALUE")
@
"^DD",45,45,79.2491,1,2,"DELETE VALUE")
@
"^DD",45,45,79.2491,1,2,"DT")
3141001
"^DD",45,45,79.2491,1,2,"FIELD")
#82.2
"^DD",45,45,79.2491,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.2491,21,0)
^^2^2^3140529^
"^DD",45,45,79.2491,21,1,0)
This field contains a diagnosis for the patient during this episode of 
"^DD",45,45,79.2491,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.2491,"DT")
3150820
"^DD",45,45,79.24911,0)
SECONDARY DIAGNOSIS 20^*P80'X^ICD9(^71;11^N DGI S DGI=21 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.24911,1,0)
^.1
"^DD",45,45,79.24911,1,1,0)
45^ADGRU7924911^MUMPS
"^DD",45,45,79.24911,1,1,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.24911,1,1,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.24911,1,1,"%D",0)
^^1^1^3140529^
"^DD",45,45,79.24911,1,1,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes.
"^DD",45,45,79.24911,1,1,"DT")
3140529
"^DD",45,45,79.24911,1,2,0)
^^TRIGGER^45^82.21
"^DD",45,45,79.24911,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,21),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,21)=DIV,DIH=45,DIG=82.21 D ^DICR
"^DD",45,45,79.24911,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,21),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,21)=DIV,DIH=45,DIG=82.21 D ^DICR
"^DD",45,45,79.24911,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45,79.24911,1,2,"%D",1,0)
When SECONDARY DIAGNOSIS 20 field is deleted or changed, delete the 
"^DD",45,45,79.24911,1,2,"%D",2,0)
associated POA indicator field.
"^DD",45,45,79.24911,1,2,"CREATE VALUE")
@
"^DD",45,45,79.24911,1,2,"DELETE VALUE")
@
"^DD",45,45,79.24911,1,2,"DT")
3141001
"^DD",45,45,79.24911,1,2,"FIELD")
#82.21
"^DD",45,45,79.24911,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.24911,21,0)
^^2^2^3140529^
"^DD",45,45,79.24911,21,1,0)
This field contains a diagnosis for the patient during this episode of 
"^DD",45,45,79.24911,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.24911,"DT")
3150820
"^DD",45,45,79.24912,0)
SECONDARY DIAGNOSIS 21^*P80'X^ICD9(^71;12^N DGI S DGI=22 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.24912,1,0)
^.1
"^DD",45,45,79.24912,1,1,0)
45^ADGRU7924912^MUMPS
"^DD",45,45,79.24912,1,1,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.24912,1,1,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.24912,1,1,"%D",0)
^^1^1^3140617^
"^DD",45,45,79.24912,1,1,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes.
"^DD",45,45,79.24912,1,1,"DT")
3140617
"^DD",45,45,79.24912,1,2,0)
^^TRIGGER^45^82.22
"^DD",45,45,79.24912,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,22),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,22)=DIV,DIH=45,DIG=82.22 D ^DICR
"^DD",45,45,79.24912,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,22),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,22)=DIV,DIH=45,DIG=82.22 D ^DICR
"^DD",45,45,79.24912,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45,79.24912,1,2,"%D",1,0)
When SECONDARY DIAGNOSIS 21 field is deleted or changed, delete the 
"^DD",45,45,79.24912,1,2,"%D",2,0)
associated POA indicator field.
"^DD",45,45,79.24912,1,2,"CREATE VALUE")
@
"^DD",45,45,79.24912,1,2,"DELETE VALUE")
@
"^DD",45,45,79.24912,1,2,"DT")
3141001
"^DD",45,45,79.24912,1,2,"FIELD")
#82.22
"^DD",45,45,79.24912,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.24912,21,0)
^^2^2^3140617^
"^DD",45,45,79.24912,21,1,0)
This field contains a diagnosis for the patient during this episode of 
"^DD",45,45,79.24912,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.24912,"DT")
3150820
"^DD",45,45,79.24913,0)
SECONDARY DIAGNOSIS 22^*P80'X^ICD9(^71;13^N DGI S DGI=23 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.24913,1,0)
^.1
"^DD",45,45,79.24913,1,1,0)
45^ADGRU7924913^MUMPS
"^DD",45,45,79.24913,1,1,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.24913,1,1,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.24913,1,1,"%D",0)
^^1^1^3140617^
"^DD",45,45,79.24913,1,1,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes.
"^DD",45,45,79.24913,1,1,"DT")
3140617
"^DD",45,45,79.24913,1,2,0)
^^TRIGGER^45^82.23
"^DD",45,45,79.24913,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,23),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,23)=DIV,DIH=45,DIG=82.23 D ^DICR
"^DD",45,45,79.24913,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,23),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,23)=DIV,DIH=45,DIG=82.23 D ^DICR
"^DD",45,45,79.24913,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45,79.24913,1,2,"%D",1,0)
When SECONDARY DIAGNOSIS 22 field is deleted or changed, delete the 
"^DD",45,45,79.24913,1,2,"%D",2,0)
associated POA indicator field.
"^DD",45,45,79.24913,1,2,"CREATE VALUE")
@
"^DD",45,45,79.24913,1,2,"DELETE VALUE")
@
"^DD",45,45,79.24913,1,2,"DT")
3141001
"^DD",45,45,79.24913,1,2,"FIELD")
#82.23
"^DD",45,45,79.24913,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.24913,21,0)
^^2^2^3140617^
"^DD",45,45,79.24913,21,1,0)
This field contains a diagnosis for the patient during this episode of 
"^DD",45,45,79.24913,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.24913,"DT")
3150820
"^DD",45,45,79.24914,0)
SECONDARY DIAGNOSIS 23^*P80'X^ICD9(^71;14^N DGI S DGI=24 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.24914,1,0)
^.1
"^DD",45,45,79.24914,1,1,0)
45^ADGRU7924914^MUMPS
"^DD",45,45,79.24914,1,1,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.24914,1,1,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.24914,1,1,"%D",0)
^^1^1^3140617^
"^DD",45,45,79.24914,1,1,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes.
"^DD",45,45,79.24914,1,1,"DT")
3140617
"^DD",45,45,79.24914,1,2,0)
^^TRIGGER^45^82.24
"^DD",45,45,79.24914,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,24),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,24)=DIV,DIH=45,DIG=82.24 D ^DICR
"^DD",45,45,79.24914,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,24),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,24)=DIV,DIH=45,DIG=82.24 D ^DICR
"^DD",45,45,79.24914,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45,79.24914,1,2,"%D",1,0)
When SECONDARY DIAGNOSIS 23 field is deleted or changed, delete the 
"^DD",45,45,79.24914,1,2,"%D",2,0)
associated POA indicator field.
"^DD",45,45,79.24914,1,2,"CREATE VALUE")
@
"^DD",45,45,79.24914,1,2,"DELETE VALUE")
@
"^DD",45,45,79.24914,1,2,"DT")
3141001
"^DD",45,45,79.24914,1,2,"FIELD")
#82.24
"^DD",45,45,79.24914,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.24914,21,0)
^^2^2^3140617^
"^DD",45,45,79.24914,21,1,0)
This field contains a diagnosis for the patient during this episode of 
"^DD",45,45,79.24914,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.24914,"DT")
3150820
"^DD",45,45,79.24915,0)
SECONDARY DIAGNOSIS 24^*P80'X^ICD9(^71;15^N DGI S DGI=25 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.24915,1,0)
^.1
"^DD",45,45,79.24915,1,1,0)
45^ADGRU7924915^MUMPS
"^DD",45,45,79.24915,1,1,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.24915,1,1,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.24915,1,1,"%D",0)
^^1^1^3140617^
"^DD",45,45,79.24915,1,1,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes.
"^DD",45,45,79.24915,1,1,"DT")
3140617
"^DD",45,45,79.24915,1,2,0)
^^TRIGGER^45^82.25
"^DD",45,45,79.24915,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,25),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,25)=DIV,DIH=45,DIG=82.25 D ^DICR
"^DD",45,45,79.24915,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGPT(D0,82)):^(82),1:"") S X=$P(Y(1),U,25),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),82)),DIV=X S $P(^(82),U,25)=DIV,DIH=45,DIG=82.25 D ^DICR
"^DD",45,45,79.24915,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45,79.24915,1,2,"%D",1,0)
When SECONDARY DIAGNOSIS 24 field is deleted or changed, delete the 
"^DD",45,45,79.24915,1,2,"%D",2,0)
associated POA indicator field.
"^DD",45,45,79.24915,1,2,"CREATE VALUE")
@
"^DD",45,45,79.24915,1,2,"DELETE VALUE")
@
"^DD",45,45,79.24915,1,2,"DT")
3141001
"^DD",45,45,79.24915,1,2,"FIELD")
#82.25
"^DD",45,45,79.24915,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.24915,21,0)
^^2^2^3140617^
"^DD",45,45,79.24915,21,1,0)
This field contains a diagnosis for the patient during this episode of 
"^DD",45,45,79.24915,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.24915,"DT")
3150820
"^DD",45,45,82.01,0)
POA PRINCIPAL DIAGNOSIS^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;1^I X]"",$G(DA) K:'$$POA701^DGPTFUT1(X,DA,70,10) X
"^DD",45,45,82.01,3)
Apply the Present on Admission (POA) indicator for the Principal Diagnosis.
"^DD",45,45,82.01,5,1,0)
45^79^1
"^DD",45,45,82.01,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.01,21,1,0)
This is the Present on Admission (POA) indicator for the Principal
"^DD",45,45,82.01,21,2,0)
Diagnosis.  One of the following values should be assigned in 
"^DD",45,45,82.01,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.01,21,4,0)
 
"^DD",45,45,82.01,21,5,0)
 Y = present on the time of inpatient admission; 
"^DD",45,45,82.01,21,6,0)
 N = not present on the time of inpatient admission; 
"^DD",45,45,82.01,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.01,21,8,0)
     present on admission; 
"^DD",45,45,82.01,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.01,21,10,0)
     was present on admission or not
"^DD",45,45,82.01,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.01,23,0)
^.001^4^4^3121004^^^^
"^DD",45,45,82.01,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.01,23,2,0)
will be considered a Y, present on the time of inpatient admission,
"^DD",45,45,82.01,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.01,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.01,"DT")
3150820
"^DD",45,45,82.02,0)
POA SECONDARY DIAGNOSIS 1^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;2^I X]"",$G(DA) K:'$$POA701^DGPTFUT1(X,DA,70,16) X
"^DD",45,45,82.02,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 1.
"^DD",45,45,82.02,5,1,0)
45^79.16^1
"^DD",45,45,82.02,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.02,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.02,21,2,0)
Diagnosis 1.  One of the following values should be assigned in 
"^DD",45,45,82.02,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.02,21,4,0)
 
"^DD",45,45,82.02,21,5,0)
 Y = present on the time of inpatient admission; 
"^DD",45,45,82.02,21,6,0)
 N = not present on the time of inpatient admission; 
"^DD",45,45,82.02,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.02,21,8,0)
     present on admission; 
"^DD",45,45,82.02,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.02,21,10,0)
     was present on admission or not
"^DD",45,45,82.02,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.02,23,0)
^.001^4^4^3121004^^^^
"^DD",45,45,82.02,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.02,23,2,0)
will be considered a Y, present on the time of inpatient admission,
"^DD",45,45,82.02,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.02,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.02,"DT")
3150820
"^DD",45,45,82.03,0)
POA SECONDARY DIAGNOSIS 2^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;3^I X]"",$G(DA) K:'$$POA701^DGPTFUT1(X,DA,70,17) X
"^DD",45,45,82.03,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 2.
"^DD",45,45,82.03,5,1,0)
45^79.17^1
"^DD",45,45,82.03,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.03,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.03,21,2,0)
Diagnosis 2.  One of the following values should be assigned in 
"^DD",45,45,82.03,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.03,21,4,0)
 
"^DD",45,45,82.03,21,5,0)
 Y = present on the time of inpatient admission; 
"^DD",45,45,82.03,21,6,0)
 N = not present on the time of inpatient admission; 
"^DD",45,45,82.03,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.03,21,8,0)
     present on admission; 
"^DD",45,45,82.03,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.03,21,10,0)
     was present on admission or not
"^DD",45,45,82.03,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.03,23,0)
^.001^4^4^3121004^^^
"^DD",45,45,82.03,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.03,23,2,0)
will be considered a Y, present on the time of inpatient admission,
"^DD",45,45,82.03,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.03,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.03,"DT")
3150820
"^DD",45,45,82.04,0)
POA SECONDARY DIAGNOSIS 3^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;4^I X]"",$G(DA) K:'$$POA701^DGPTFUT1(X,DA,70,18) X
"^DD",45,45,82.04,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 3.
"^DD",45,45,82.04,5,1,0)
45^79.18^1
"^DD",45,45,82.04,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.04,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.04,21,2,0)
Diagnosis 3.  One of the following values should be assigned in 
"^DD",45,45,82.04,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.04,21,4,0)
 
"^DD",45,45,82.04,21,5,0)
 Y = present on the time of inpatient admission; 
"^DD",45,45,82.04,21,6,0)
 N = not present on the time of inpatient admission; 
"^DD",45,45,82.04,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.04,21,8,0)
     present on admission; 
"^DD",45,45,82.04,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.04,21,10,0)
     was present on admission or not
"^DD",45,45,82.04,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.04,23,0)
^.001^4^4^3121004^^
"^DD",45,45,82.04,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.04,23,2,0)
will be considered a Y, present on the time of inpatient admission,
"^DD",45,45,82.04,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.04,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.04,"DT")
3150820
"^DD",45,45,82.05,0)
POA SECONDARY DIAGNOSIS 4^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;5^I X]"",$G(DA) K:'$$POA701^DGPTFUT1(X,DA,70,19) X
"^DD",45,45,82.05,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 4.
"^DD",45,45,82.05,5,1,0)
45^79.19^1
"^DD",45,45,82.05,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.05,21,1,0)
This is the Present on Admission (POA) indicator for Secondary
"^DD",45,45,82.05,21,2,0)
Diagnosis 4.  One of the following values should be assigned in 
"^DD",45,45,82.05,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.05,21,4,0)
 
"^DD",45,45,82.05,21,5,0)
 Y = present on the time of inpatient admission; 
"^DD",45,45,82.05,21,6,0)
 N = not present on the time of inpatient admission; 
"^DD",45,45,82.05,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.05,21,8,0)
     present on admission; 
"^DD",45,45,82.05,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.05,21,10,0)
     was present on admission or not
"^DD",45,45,82.05,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.05,23,0)
^.001^4^4^3121004^^
"^DD",45,45,82.05,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.05,23,2,0)
will be considered a Y, present on the time of inpatient admission,
"^DD",45,45,82.05,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.05,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.05,"DT")
3150820
"^DD",45,45,82.06,0)
POA SECONDARY DIAGNOSIS 5^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;6^I X]"",$G(DA) K:'$$POA701^DGPTFUT1(X,DA,70,20) X
"^DD",45,45,82.06,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 5.
"^DD",45,45,82.06,5,1,0)
45^79.201^1
"^DD",45,45,82.06,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.06,21,1,0)
This is the Present on Admission (POA) indicator for Secondary
"^DD",45,45,82.06,21,2,0)
Diagnosis 5.  One of the following values should be assigned in 
"^DD",45,45,82.06,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.06,21,4,0)
 
"^DD",45,45,82.06,21,5,0)
 Y = present on the time of inpatient admission; 
"^DD",45,45,82.06,21,6,0)
 N = not present on the time of inpatient admission; 
"^DD",45,45,82.06,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.06,21,8,0)
     present on admission; 
"^DD",45,45,82.06,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.06,21,10,0)
     was present on admission or not
"^DD",45,45,82.06,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.06,23,0)
^.001^4^4^3121004^^
"^DD",45,45,82.06,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.06,23,2,0)
will be considered a Y, present on the time of inpatient admission,
"^DD",45,45,82.06,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.06,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.06,"DT")
3150820
"^DD",45,45,82.07,0)
POA SECONDARY DIAGNOSIS 6^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;7^I X]"",$G(DA) K:'$$POA701^DGPTFUT1(X,DA,70,21) X
"^DD",45,45,82.07,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 6.
"^DD",45,45,82.07,5,1,0)
45^79.21^1
"^DD",45,45,82.07,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.07,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.07,21,2,0)
Diagnosis 6.  One of the following values should be assigned in 
"^DD",45,45,82.07,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.07,21,4,0)
 
"^DD",45,45,82.07,21,5,0)
 Y = present on the time of inpatient admission; 
"^DD",45,45,82.07,21,6,0)
 N = not present on the time of inpatient admission; 
"^DD",45,45,82.07,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.07,21,8,0)
     present on admission; 
"^DD",45,45,82.07,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.07,21,10,0)
     was present on admission or not
"^DD",45,45,82.07,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.07,23,0)
^.001^4^4^3121004^^^
"^DD",45,45,82.07,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.07,23,2,0)
will be considered a Y, present on the time of inpatient admission,
"^DD",45,45,82.07,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.07,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.07,"DT")
3150820
"^DD",45,45,82.08,0)
POA SECONDARY DIAGNOSIS 7^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;8^I X]"",$G(DA) K:'$$POA701^DGPTFUT1(X,DA,70,22) X
"^DD",45,45,82.08,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 7.
"^DD",45,45,82.08,5,1,0)
45^79.22^1
"^DD",45,45,82.08,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.08,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.08,21,2,0)
Diagnosis 7.  One of the following values should be assigned in 
"^DD",45,45,82.08,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.08,21,4,0)
 
"^DD",45,45,82.08,21,5,0)
 Y = present on the time of inpatient admission; 
"^DD",45,45,82.08,21,6,0)
 N = not present on the time of inpatient admission; 
"^DD",45,45,82.08,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.08,21,8,0)
     present on admission; 
"^DD",45,45,82.08,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.08,21,10,0)
     was present on admission or not
"^DD",45,45,82.08,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.08,23,0)
^.001^4^4^3121004^^
"^DD",45,45,82.08,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.08,23,2,0)
will be considered a Y, present on the time of inpatient admission,
"^DD",45,45,82.08,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.08,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.08,"DT")
3150820
"^DD",45,45,82.09,0)
POA SECONDARY DIAGNOSIS 8^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;9^I X]"",$G(DA) K:'$$POA701^DGPTFUT1(X,DA,70,23) X
"^DD",45,45,82.09,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 8.
"^DD",45,45,82.09,5,1,0)
45^79.23^1
"^DD",45,45,82.09,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.09,21,1,0)
This is the Present on Admission (POA) indicator for Secondary
"^DD",45,45,82.09,21,2,0)
Diagnosis 8.  One of the following values should be assigned in 
"^DD",45,45,82.09,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.09,21,4,0)
 
"^DD",45,45,82.09,21,5,0)
 Y = present on the time of inpatient admission; 
"^DD",45,45,82.09,21,6,0)
 N = not present on the time of inpatient admission; 
"^DD",45,45,82.09,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.09,21,8,0)
     present on admission; 
"^DD",45,45,82.09,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.09,21,10,0)
     was present on admission or not
"^DD",45,45,82.09,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.09,23,0)
^.001^4^4^3121004^^
"^DD",45,45,82.09,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.09,23,2,0)
will be considered a Y, present on the time of inpatient admission,
"^DD",45,45,82.09,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.09,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.09,"DT")
3150820
"^DD",45,45,82.1,0)
POA SECONDARY DIAGNOSIS 9^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;10^I X]"",$G(DA) K:'$$POA701^DGPTFUT1(X,DA,70,24) X
"^DD",45,45,82.1,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 9.
"^DD",45,45,82.1,5,1,0)
45^79.24^1
"^DD",45,45,82.1,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.1,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.1,21,2,0)
Diagnosis 9.  One of the following values should be assigned in 
"^DD",45,45,82.1,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.1,21,4,0)
 
"^DD",45,45,82.1,21,5,0)
 Y = present on the time of inpatient admission; 
"^DD",45,45,82.1,21,6,0)
 N = not present on the time of inpatient admission; 
"^DD",45,45,82.1,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.1,21,8,0)
     present on admission; 
"^DD",45,45,82.1,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.1,21,10,0)
     was present on admission or not
"^DD",45,45,82.1,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.1,23,0)
^.001^4^4^3121004^^
"^DD",45,45,82.1,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.1,23,2,0)
will be considered a Y, present on the time of inpatient admission,
"^DD",45,45,82.1,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.1,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.1,"DT")
3150820
"^DD",45,45,82.11,0)
POA SECONDARY DIAGNOSIS 10^SX^Y:Present on  Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;11^I X]"",$G(DA) K:'$$POA701^DGPTFUT1(X,DA,71,1) X
"^DD",45,45,82.11,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 10.
"^DD",45,45,82.11,5,1,0)
45^79.241^2
"^DD",45,45,82.11,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.11,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.11,21,2,0)
Diagnosis 10.  One of the following values should be assigned in 
"^DD",45,45,82.11,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.11,21,4,0)
 
"^DD",45,45,82.11,21,5,0)
 Y = present on the time of inpatient admission; 
"^DD",45,45,82.11,21,6,0)
 N = not present on the time of inpatient admission; 
"^DD",45,45,82.11,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.11,21,8,0)
     present on admission; 
"^DD",45,45,82.11,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.11,21,10,0)
     was present on admission or not
"^DD",45,45,82.11,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.11,23,0)
^.001^4^4^3121004^^
"^DD",45,45,82.11,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.11,23,2,0)
will be considered a Y, present on the time of inpatient admission,
"^DD",45,45,82.11,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.11,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.11,"DT")
3150820
"^DD",45,45,82.12,0)
POA SECONDARY DIAGNOSIS 11^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;12^I X]"",$G(DA) K:'$$POA701^DGPTFUT1(X,DA,71,2) X
"^DD",45,45,82.12,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 11.
"^DD",45,45,82.12,5,1,0)
45^79.242^2
"^DD",45,45,82.12,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.12,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.12,21,2,0)
Diagnosis 11.  One of the following values should be assigned in 
"^DD",45,45,82.12,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.12,21,4,0)
 
"^DD",45,45,82.12,21,5,0)
 Y = present on the time of inpatient admission; 
"^DD",45,45,82.12,21,6,0)
 N = not present on the time of inpatient admission; 
"^DD",45,45,82.12,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.12,21,8,0)
     present on admission; 
"^DD",45,45,82.12,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.12,21,10,0)
     was present on admission or not
"^DD",45,45,82.12,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.12,23,0)
^.001^4^4^3121004^^^
"^DD",45,45,82.12,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.12,23,2,0)
will be considered a Y, present on the time of inpatient admission,
"^DD",45,45,82.12,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.12,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.12,"DT")
3150820
"^DD",45,45,82.13,0)
POA SECONDARY DIAGNOSIS 12^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;13^I X]"",$G(DA) K:'$$POA701^DGPTFUT1(X,DA,71,3) X
"^DD",45,45,82.13,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 12.
"^DD",45,45,82.13,5,1,0)
45^79.243^2
"^DD",45,45,82.13,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.13,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.13,21,2,0)
Diagnosis 12.  One of the following values should be assigned in 
"^DD",45,45,82.13,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.13,21,4,0)
 
"^DD",45,45,82.13,21,5,0)
 Y = present on the time of inpatient admission; 
"^DD",45,45,82.13,21,6,0)
 N = not present on the time of inpatient admission; 
"^DD",45,45,82.13,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.13,21,8,0)
     present on admission; 
"^DD",45,45,82.13,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.13,21,10,0)
     was present on admission or not
"^DD",45,45,82.13,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.13,23,0)
^.001^4^4^3121004^^
"^DD",45,45,82.13,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.13,23,2,0)
will be considered a Y, present on the time of inpatient admission,
"^DD",45,45,82.13,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.13,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.13,"DT")
3150820
"^DD",45,45,82.14,0)
POA SECONDARY DIAGNOSIS 13^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;14^I X]"",$G(DA) K:'$$POA701^DGPTFUT1(X,DA,71,4) X
"^DD",45,45,82.14,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 13.
"^DD",45,45,82.14,5,1,0)
45^79.244^2
"^DD",45,45,82.14,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.14,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.14,21,2,0)
Diagnosis 13.  One of the following values should be assigned in 
"^DD",45,45,82.14,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.14,21,4,0)
 
"^DD",45,45,82.14,21,5,0)
 Y = present on the time of inpatient admission;             
"^DD",45,45,82.14,21,6,0)
 N = not present on the time of inpatient admission;           
"^DD",45,45,82.14,21,7,0)
 U = documentation is insufficient to determine if condition is         
"^DD",45,45,82.14,21,8,0)
     present on admission;                              
"^DD",45,45,82.14,21,9,0)
 W = provider is unable to clinically determine whether condition     
"^DD",45,45,82.14,21,10,0)
     was present on admission or not
"^DD",45,45,82.14,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.14,23,0)
^.001^4^4^3121004^^^
"^DD",45,45,82.14,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.14,23,2,0)
will be considered a Y, present on the time of inpatient admission,
"^DD",45,45,82.14,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.14,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.14,"DT")
3150820
"^DD",45,45,82.15,0)
POA SECONDARY DIAGNOSIS 14^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;15^I X]"",$G(DA) K:'$$POA701^DGPTFUT1(X,DA,71,5) X
"^DD",45,45,82.15,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 14.
"^DD",45,45,82.15,5,1,0)
45^79.245^2
"^DD",45,45,82.15,21,0)
^^11^11^3140617^
"^DD",45,45,82.15,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.15,21,2,0)
Diagnosis 14.  One of the following values should be assigned in 
"^DD",45,45,82.15,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.15,21,4,0)
 
"^DD",45,45,82.15,21,5,0)
 Y = present on the time of inpatient admission; 
"^DD",45,45,82.15,21,6,0)
 N = not present on the time of inpatient admission; 
"^DD",45,45,82.15,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.15,21,8,0)
     present on admission; 
"^DD",45,45,82.15,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.15,21,10,0)
     was present on admission or not
"^DD",45,45,82.15,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.15,23,0)
^^4^4^3140617^
"^DD",45,45,82.15,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA will be 
"^DD",45,45,82.15,23,2,0)
considered a Y, present on the time of inpatient admission, for 
"^DD",45,45,82.15,23,3,0)
calculation of a DRG and for transmission to AITC.  This is because the 
"^DD",45,45,82.15,23,4,0)
COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.15,"DT")
3150820
"^DD",45,45,82.16,0)
POA SECONDARY DIAGNOSIS 15^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;16^I X]"",$G(DA) K:'$$POA701^DGPTFUT1(X,DA,71,6) X
"^DD",45,45,82.16,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 15.
"^DD",45,45,82.16,5,1,0)
45^79.246^2
"^DD",45,45,82.16,21,0)
^^11^11^3140617^
"^DD",45,45,82.16,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.16,21,2,0)
Diagnosis 15.  One of the following values should be assigned in 
"^DD",45,45,82.16,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.16,21,4,0)
 
"^DD",45,45,82.16,21,5,0)
 Y = present on the time of inpatient admission; 
"^DD",45,45,82.16,21,6,0)
 N = not present on the time of inpatient admission; 
"^DD",45,45,82.16,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.16,21,8,0)
     present on admission; 
"^DD",45,45,82.16,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.16,21,10,0)
     was present on admission or not
"^DD",45,45,82.16,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.16,"DT")
3150820
"^DD",45,45,82.17,0)
POA SECONDARY DIAGNOSIS 16^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;17^I X]"",$G(DA) K:'$$POA701^DGPTFUT1(X,DA,71,7) X
"^DD",45,45,82.17,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 16.
"^DD",45,45,82.17,5,1,0)
45^79.247^2
"^DD",45,45,82.17,21,0)
^^11^11^3140617^
"^DD",45,45,82.17,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.17,21,2,0)
Diagnosis 16.  One of the following values should be assigned in 
"^DD",45,45,82.17,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.17,21,4,0)
 
"^DD",45,45,82.17,21,5,0)
 Y = present on the time of inpatient admission; 
"^DD",45,45,82.17,21,6,0)
 N = not present on the time of inpatient admission; 
"^DD",45,45,82.17,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.17,21,8,0)
     present on admission; 
"^DD",45,45,82.17,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.17,21,10,0)
     was present on admission or not
"^DD",45,45,82.17,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.17,"DT")
3150820
"^DD",45,45,82.18,0)
POA SECONDARY DIAGNOSIS 17^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;18^I X]"",$G(DA) K:'$$POA701^DGPTFUT1(X,DA,71,8) X
"^DD",45,45,82.18,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 17.
"^DD",45,45,82.18,5,1,0)
45^79.248^2
"^DD",45,45,82.18,21,0)
^^11^11^3140617^
"^DD",45,45,82.18,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.18,21,2,0)
Diagnosis 17.  One of the following values should be assigned in 
"^DD",45,45,82.18,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.18,21,4,0)
 
"^DD",45,45,82.18,21,5,0)
 Y = present on the time of inpatient admission; 
"^DD",45,45,82.18,21,6,0)
 N = not present on the time of inpatient admission; 
"^DD",45,45,82.18,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.18,21,8,0)
     present on admission; 
"^DD",45,45,82.18,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.18,21,10,0)
     was present on admission or not
"^DD",45,45,82.18,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.18,"DT")
3150820
"^DD",45,45,82.19,0)
POA SECONDARY DIAGNOSIS 18^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;19^I X]"",$G(DA) K:'$$POA701^DGPTFUT1(X,DA,71,9) X
"^DD",45,45,82.19,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 18.
"^DD",45,45,82.19,5,1,0)
45^79.249^2
"^DD",45,45,82.19,21,0)
^^11^11^3140617^
"^DD",45,45,82.19,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.19,21,2,0)
Diagnosis 18.  One of the following values should be assigned in 
"^DD",45,45,82.19,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.19,21,4,0)
 
"^DD",45,45,82.19,21,5,0)
 Y = present on the time of inpatient admission; 
"^DD",45,45,82.19,21,6,0)
 N = not present on the time of inpatient admission; 
"^DD",45,45,82.19,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.19,21,8,0)
     present on admission; 
"^DD",45,45,82.19,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.19,21,10,0)
     was present on admission or not
"^DD",45,45,82.19,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.19,"DT")
3150820
"^DD",45,45,82.2,0)
POA SECONDARY DIAGNOSIS 19^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;20^I X]"",$G(DA) K:'$$POA701^DGPTFUT1(X,DA,71,10) X
"^DD",45,45,82.2,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 19.
"^DD",45,45,82.2,5,1,0)
45^79.2491^2
"^DD",45,45,82.2,21,0)
^^11^11^3140617^
"^DD",45,45,82.2,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.2,21,2,0)
Diagnosis 19.  One of the following values should be assigned in 
"^DD",45,45,82.2,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.2,21,4,0)
 
"^DD",45,45,82.2,21,5,0)
 Y = present on the time of inpatient admission; 
"^DD",45,45,82.2,21,6,0)
 N = not present on the time of inpatient admission; 
"^DD",45,45,82.2,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.2,21,8,0)
     present on admission; 
"^DD",45,45,82.2,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.2,21,10,0)
     was present on admission or not
"^DD",45,45,82.2,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.2,"DT")
3150820
"^DD",45,45,82.21,0)
POA SECONDARY DIAGNOSIS 20^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;21^I X]"",$G(DA) K:'$$POA701^DGPTFUT1(X,DA,71,11) X
"^DD",45,45,82.21,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 20.
"^DD",45,45,82.21,5,1,0)
45^79.24911^2
"^DD",45,45,82.21,21,0)
^^11^11^3140617^
"^DD",45,45,82.21,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.21,21,2,0)
Diagnosis 20.  One of the following values should be assigned in 
"^DD",45,45,82.21,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.21,21,4,0)
 
"^DD",45,45,82.21,21,5,0)
 Y = present on the time of inpatient admission; 
"^DD",45,45,82.21,21,6,0)
 N = not present on the time of inpatient admission; 
"^DD",45,45,82.21,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.21,21,8,0)
     present on admission; 
"^DD",45,45,82.21,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.21,21,10,0)
     was present on admission or not
"^DD",45,45,82.21,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.21,"DT")
3150820
"^DD",45,45,82.22,0)
POA SECONDARY DIAGNOSIS 21^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;22^I X]"",$G(DA) K:'$$POA701^DGPTFUT1(X,DA,71,12) X
"^DD",45,45,82.22,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 21.
"^DD",45,45,82.22,5,1,0)
45^79.24912^2
"^DD",45,45,82.22,21,0)
^^11^11^3140617^
"^DD",45,45,82.22,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.22,21,2,0)
Diagnosis 21.  One of the following values should be assigned in 
"^DD",45,45,82.22,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.22,21,4,0)
 
"^DD",45,45,82.22,21,5,0)
 Y = present on the time of inpatient admission; 
"^DD",45,45,82.22,21,6,0)
 N = not present on the time of inpatient admission; 
"^DD",45,45,82.22,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.22,21,8,0)
     present on admission; 
"^DD",45,45,82.22,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.22,21,10,0)
     was present on admission or not
"^DD",45,45,82.22,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.22,"DT")
3150820
"^DD",45,45,82.23,0)
POA SECONDARY DIAGNOSIS 22^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;23^I X]"",$G(DA) K:'$$POA701^DGPTFUT1(X,DA,71,13) X
"^DD",45,45,82.23,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 22.
"^DD",45,45,82.23,5,1,0)
45^79.24913^2
"^DD",45,45,82.23,21,0)
^^11^11^3140617^
"^DD",45,45,82.23,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.23,21,2,0)
Diagnosis 22.  One of the following values should be assigned in 
"^DD",45,45,82.23,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.23,21,4,0)
 
"^DD",45,45,82.23,21,5,0)
 Y = present on the time of inpatient admission; 
"^DD",45,45,82.23,21,6,0)
 N = not present on the time of inpatient admission; 
"^DD",45,45,82.23,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.23,21,8,0)
     present on admission; 
"^DD",45,45,82.23,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.23,21,10,0)
     was present on admission or not
"^DD",45,45,82.23,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.23,"DT")
3150820
"^DD",45,45,82.24,0)
POA SECONDARY DIAGNOSIS 23^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;24^I X]"",$G(DA) K:'$$POA701^DGPTFUT1(X,DA,71,14) X
"^DD",45,45,82.24,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 23.
"^DD",45,45,82.24,5,1,0)
45^79.24914^2
"^DD",45,45,82.24,21,0)
^^11^11^3140617^
"^DD",45,45,82.24,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.24,21,2,0)
Diagnosis 23.  One of the following values should be assigned in 
"^DD",45,45,82.24,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.24,21,4,0)
 
"^DD",45,45,82.24,21,5,0)
 Y = present on the time of inpatient admission; 
"^DD",45,45,82.24,21,6,0)
 N = not present on the time of inpatient admission; 
"^DD",45,45,82.24,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.24,21,8,0)
     present on admission; 
"^DD",45,45,82.24,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.24,21,10,0)
     was present on admission or not
"^DD",45,45,82.24,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.24,"DT")
3150820
"^DD",45,45,82.25,0)
POA SECONDARY DIAGNOSIS 24^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;25^I X]"",$G(DA) K:'$$POA701^DGPTFUT1(X,DA,71,15) X
"^DD",45,45,82.25,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 24.
"^DD",45,45,82.25,5,1,0)
45^79.24915^2
"^DD",45,45,82.25,21,0)
^^11^11^3140617^
"^DD",45,45,82.25,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.25,21,2,0)
Diagnosis 24.  One of the following values should be assigned in 
"^DD",45,45,82.25,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.25,21,4,0)
 
"^DD",45,45,82.25,21,5,0)
 Y = present on the time of inpatient admission; 
"^DD",45,45,82.25,21,6,0)
 N = not present on the time of inpatient admission; 
"^DD",45,45,82.25,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.25,21,8,0)
     present on admission; 
"^DD",45,45,82.25,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.25,21,10,0)
     was present on admission or not
"^DD",45,45,82.25,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.25,"DT")
3150820
"^DD",45,45.01,8,0)
OPERATION CODE 1^*P80.1'X^ICD0(^0;8^N DGIT S DGIT=8 D GETAPI^DGICDGT("DG PTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.01,8,1,0)
^.1^^0
"^DD",45,45.01,8,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,8,21,0)
^.001^1^1^3120229^^^^
"^DD",45,45.01,8,21,1,0)
This is an operation or procedure performed during this episode of care.
"^DD",45,45.01,8,"DT")
3150820
"^DD",45,45.01,9,0)
OPERATION CODE 2^*P80.1'X^ICD0(^0;9^N DGIT S DGIT=8 D GETAPI^DGICDGT("DG PTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.01,9,1,0)
^.1^^0
"^DD",45,45.01,9,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,9,21,0)
^.001^1^1^3120229^^^
"^DD",45,45.01,9,21,1,0)
This is an operation or procedure performed during this episode of care.
"^DD",45,45.01,9,"DT")
3150820
"^DD",45,45.01,10,0)
OPERATION CODE 3^*P80.1'X^ICD0(^0;10^N DGIT S DGIT=8 D GETAPI^DGICDGT("DG PTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.01,10,1,0)
^.1^^0
"^DD",45,45.01,10,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,10,21,0)
^.001^1^1^3120229^^^^
"^DD",45,45.01,10,21,1,0)
This is an operation or procedure performed during this episode of care.
"^DD",45,45.01,10,"DT")
3150820
"^DD",45,45.01,11,0)
OPERATION CODE 4^*P80.1'X^ICD0(^0;11^N DGIT S DGIT=8 D GETAPI^DGICDGT("DG PTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.01,11,1,0)
^.1^^0
"^DD",45,45.01,11,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,11,21,0)
^.001^1^1^3120229^^^^
"^DD",45,45.01,11,21,1,0)
This is  an operation or procedure performed during this episode of care.
"^DD",45,45.01,11,"DT")
3150820
"^DD",45,45.01,12,0)
OPERATION CODE 5^*P80.1'X^ICD0(^0;12^N DGIT S DGIT=8 D GETAPI^DGICDGT("DG PTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.01,12,1,0)
^.1^^0
"^DD",45,45.01,12,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,12,21,0)
^.001^1^1^3120229^^^^
"^DD",45,45.01,12,21,1,0)
This is an operation or procedure performed during this episode of care.
"^DD",45,45.01,12,"DT")
3150820
"^DD",45,45.01,13,0)
OPERATION CODE 6^*P80.1'X^ICD0(^0;13^N DGIT S DGIT=8 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.01,13,1,0)
^.1^^0
"^DD",45,45.01,13,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,13,21,0)
^^1^1^3140730^
"^DD",45,45.01,13,21,1,0)
This is an Operation or Procedure performed during this episode of care.
"^DD",45,45.01,13,"DT")
3150820
"^DD",45,45.01,14,0)
OPERATION CODE 7^*P80.1'X^ICD0(^0;14^N DGIT S DGIT=8 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.01,14,1,0)
^.1^^0
"^DD",45,45.01,14,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,14,21,0)
^^1^1^3140730^
"^DD",45,45.01,14,21,1,0)
This is an Operation or Procedure performed during this episode of care.
"^DD",45,45.01,14,"DT")
3150820
"^DD",45,45.01,15,0)
OPERATION CODE 8^*P80.1'X^ICD0(^0;15^N DGIT S DGIT=8 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.01,15,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,15,21,0)
^^1^1^3140730^
"^DD",45,45.01,15,21,1,0)
This is an Operation or Procedure performed during this episode of care.
"^DD",45,45.01,15,"DT")
3150820
"^DD",45,45.01,16,0)
OPERATION CODE 9^*P80.1'X^ICD0(^0;16^N DGIT S DGIT=8 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.01,16,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,16,21,0)
^^1^1^3140730^
"^DD",45,45.01,16,21,1,0)
This is an Operation or Procedure performed during this episode of care.
"^DD",45,45.01,16,"DT")
3150820
"^DD",45,45.01,17,0)
OPERATION CODE 10^*P80.1'X^ICD0(^0;17^N DGIT S DGIT=8 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.01,17,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,17,21,0)
^^1^1^3140730^
"^DD",45,45.01,17,21,1,0)
This is an Operation or Procedure performed during this episode of care.
"^DD",45,45.01,17,"DT")
3150820
"^DD",45,45.01,18,0)
OPERATION CODE 11^*P80.1'X^ICD0(^0;18^N DGIT S DGIT=8 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.01,18,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,18,21,0)
^^1^1^3140730^
"^DD",45,45.01,18,21,1,0)
This is an Operation or Procedure performed during this episode of care.
"^DD",45,45.01,18,"DT")
3150820
"^DD",45,45.01,19,0)
OPERATION CODE 12^*P80.1'X^ICD0(^0;19^N DGIT S DGIT=8 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.01,19,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,19,21,0)
^^1^1^3140730^
"^DD",45,45.01,19,21,1,0)
This is an Operation or Procedure performed during this episode of care.
"^DD",45,45.01,19,"DT")
3150820
"^DD",45,45.01,20,0)
OPERATION CODE 13^*P80.1'X^ICD0(^0;20^N DGIT S DGIT=8 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.01,20,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,20,21,0)
^^1^1^3140730^
"^DD",45,45.01,20,21,1,0)
This is an Operation or Procedure performed during this episode of care.
"^DD",45,45.01,20,"DT")
3150820
"^DD",45,45.01,21,0)
OPERATION CODE 14^*P80.1'X^ICD0(^0;21^N DGIT S DGIT=8 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.01,21,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,21,21,0)
^^1^1^3140730^
"^DD",45,45.01,21,21,1,0)
This is an Operation or Procedure performed during this episode of care.
"^DD",45,45.01,21,"DT")
3150820
"^DD",45,45.01,22,0)
OPERATION CODE 15^*P80.1'X^ICD0(^0;22^N DGIT S DGIT=8 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.01,22,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,22,21,0)
^^1^1^3140730^
"^DD",45,45.01,22,21,1,0)
This is an Operation or Procedure performed during this episode of care.
"^DD",45,45.01,22,"DT")
3150820
"^DD",45,45.01,23,0)
OPERATION CODE 16^*P80.1'X^ICD0(^0;23^N DGIT S DGIT=8 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.01,23,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,23,21,0)
^^1^1^3140730^
"^DD",45,45.01,23,21,1,0)
This is an Operation or Procedure performed during this episode of care.
"^DD",45,45.01,23,"DT")
3150820
"^DD",45,45.01,24,0)
OPERATION CODE 17^*P80.1'X^ICD0(^0;24^N DGIT S DGIT=8 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.01,24,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,24,21,0)
^^1^1^3140730^
"^DD",45,45.01,24,21,1,0)
This is an Operation or Procedure performed during this episode of care.
"^DD",45,45.01,24,"DT")
3150820
"^DD",45,45.01,25,0)
OPERATION CODE 18^*P80.1'X^ICD0(^0;25^N DGIT S DGIT=8 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.01,25,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,25,21,0)
^^1^1^3140730^
"^DD",45,45.01,25,21,1,0)
This is an Operation or Procedure performed during this episode of care.
"^DD",45,45.01,25,"DT")
3150820
"^DD",45,45.01,26,0)
OPERATION CODE 19^*P80.1'X^ICD0(^0;26^N DGIT S DGIT=8 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.01,26,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,26,21,0)
^^1^1^3140730^
"^DD",45,45.01,26,21,1,0)
This is an Operation or Procedure performed during this episode of care.
"^DD",45,45.01,26,"DT")
3150820
"^DD",45,45.01,27,0)
OPERATION CODE 20^*P80.1'X^ICD0(^0;27^N DGIT S DGIT=8 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.01,27,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,27,21,0)
^^1^1^3140730^
"^DD",45,45.01,27,21,1,0)
This is an Operation or Procedure performed during this episode of care.
"^DD",45,45.01,27,"DT")
3150820
"^DD",45,45.01,28,0)
OPERATION CODE 21^*P80.1'X^ICD0(^1;1^N DGIT S DGIT=8 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1",1)
"^DD",45,45.01,28,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,28,21,0)
^^1^1^3140731^
"^DD",45,45.01,28,21,1,0)
This is an Operation or Procedure performed during this episode of care.
"^DD",45,45.01,28,"DT")
3150820
"^DD",45,45.01,29,0)
OPERATION CODE 22^*P80.1'X^ICD0(^1;2^N DGIT S DGIT=8 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1",1)
"^DD",45,45.01,29,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,29,21,0)
^^1^1^3140731^
"^DD",45,45.01,29,21,1,0)
This is an Operation or Procedure performed during this episode of care.
"^DD",45,45.01,29,"DT")
3150820
"^DD",45,45.01,30,0)
OPERATION CODE 23^*P80.1'X^ICD0(^1;3^N DGIT S DGIT=8 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1",1)
"^DD",45,45.01,30,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,30,21,0)
^^1^1^3140731^
"^DD",45,45.01,30,21,1,0)
This is an Operation or Procedure performed during this episode of care.
"^DD",45,45.01,30,"DT")
3150820
"^DD",45,45.01,31,0)
OPERATION CODE 24^*P80.1'X^ICD0(^1;4^N DGIT S DGIT=8 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1",1)
"^DD",45,45.01,31,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,31,21,0)
^^1^1^3140731^
"^DD",45,45.01,31,21,1,0)
This is an Operation or Procedure performed during this episode of care.
"^DD",45,45.01,31,"DT")
3150820
"^DD",45,45.01,32,0)
OPERATION CODE 25^*P80.1'X^ICD0(^1;5^N DGIT S DGIT=8 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1",1)
"^DD",45,45.01,32,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,32,21,0)
^^1^1^3140731^
"^DD",45,45.01,32,21,1,0)
This is an Operation or Procedure performed during this episode of care.
"^DD",45,45.01,32,"DT")
3150820
"^DD",45,45.02,5,0)
ICD 1^*P80'X^ICD9(^0;5^N K D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN")
"^DD",45,45.02,5,1,0)
^.1
"^DD",45,45.02,5,1,1,0)
45.02^AC
"^DD",45,45.02,5,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,5,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,5,1,2,0)
^^TRIGGER^45.02^82.01
"^DD",45,45.02,5,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,1)=DIV,DIH=45.02,DIG=82.01 D ^DICR
"^DD",45,45.02,5,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,1)=DIV,DIH=45.02,DIG=82.01 D ^DICR
"^DD",45,45.02,5,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45.02,5,1,2,"%D",1,0)
When ICD 1 field is deleted or changed, delete the associated POA 
"^DD",45,45.02,5,1,2,"%D",2,0)
indicator field.
"^DD",45,45.02,5,1,2,"CREATE VALUE")
@
"^DD",45,45.02,5,1,2,"DELETE VALUE")
@
"^DD",45,45.02,5,1,2,"DT")
3141001
"^DD",45,45.02,5,1,2,"FIELD")
#82.01
"^DD",45,45.02,5,1,992,0)
45.02^ADGRU5^MUMPS
"^DD",45,45.02,5,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,5,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,5,1,992,"%D",0)
^^1^1^2991006^
"^DD",45,45.02,5,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45.02,5,1,992,"DT")
2991006
"^DD",45,45.02,5,3)
Enter the diagnosis that was responsible for the patient's greatest length of stay in this bedsection.
"^DD",45,45.02,5,21,0)
^.001^2^2^3121217^^^^
"^DD",45,45.02,5,21,1,0)
This field contains the diagnosis responsible for the greatest length
"^DD",45,45.02,5,21,2,0)
of stay in this bedsection.
"^DD",45,45.02,5,"DT")
3150820
"^DD",45,45.02,6,0)
ICD 2^*P80'X^ICD9(^0;6^N K D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN")
"^DD",45,45.02,6,1,0)
^.1
"^DD",45,45.02,6,1,1,0)
45.02^AC
"^DD",45,45.02,6,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,6,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,6,1,2,0)
^^TRIGGER^45.02^82.02
"^DD",45,45.02,6,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,2)=DIV,DIH=45.02,DIG=82.02 D ^DICR
"^DD",45,45.02,6,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,2)=DIV,DIH=45.02,DIG=82.02 D ^DICR
"^DD",45,45.02,6,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45.02,6,1,2,"%D",1,0)
When ICD 2 field is deleted or changed, delete the associated POA 
"^DD",45,45.02,6,1,2,"%D",2,0)
indicator field.
"^DD",45,45.02,6,1,2,"CREATE VALUE")
@
"^DD",45,45.02,6,1,2,"DELETE VALUE")
@
"^DD",45,45.02,6,1,2,"DT")
3141001
"^DD",45,45.02,6,1,2,"FIELD")
#82.02
"^DD",45,45.02,6,1,992,0)
45.02^ADGRU6^MUMPS
"^DD",45,45.02,6,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,6,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,6,1,992,"%D",0)
^^1^1^2991006^
"^DD",45,45.02,6,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45.02,6,1,992,"DT")
2991006
"^DD",45,45.02,6,3)
Enter the second diagnosis for this patient's stay in the bedsection.
"^DD",45,45.02,6,21,0)
^.001^1^1^3121217^^^^
"^DD",45,45.02,6,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,6,"DT")
3150820
"^DD",45,45.02,7,0)
ICD 3^*P80'X^ICD9(^0;7^N K D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN")
"^DD",45,45.02,7,1,0)
^.1
"^DD",45,45.02,7,1,1,0)
45.02^AC
"^DD",45,45.02,7,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,7,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,7,1,2,0)
^^TRIGGER^45.02^82.03
"^DD",45,45.02,7,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,3)=DIV,DIH=45.02,DIG=82.03 D ^DICR
"^DD",45,45.02,7,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,3)=DIV,DIH=45.02,DIG=82.03 D ^DICR
"^DD",45,45.02,7,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45.02,7,1,2,"%D",1,0)
When ICD 3 field is deleted or changed, delete the associated POA 
"^DD",45,45.02,7,1,2,"%D",2,0)
indicator field.
"^DD",45,45.02,7,1,2,"CREATE VALUE")
@
"^DD",45,45.02,7,1,2,"DELETE VALUE")
@
"^DD",45,45.02,7,1,2,"DT")
3141001
"^DD",45,45.02,7,1,2,"FIELD")
#82.03
"^DD",45,45.02,7,1,992,0)
45.02^ADGRU7^MUMPS
"^DD",45,45.02,7,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,7,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,7,1,992,"%D",0)
^^1^1^2991006^
"^DD",45,45.02,7,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45.02,7,1,992,"DT")
2991006
"^DD",45,45.02,7,3)
Enter the third ICD diagnosis for this patient's length of stay in the losing bedsection.
"^DD",45,45.02,7,21,0)
^^1^1^2920212^^^^
"^DD",45,45.02,7,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,7,"DT")
3150820
"^DD",45,45.02,8,0)
ICD 4^*P80'X^ICD9(^0;8^N K D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN")
"^DD",45,45.02,8,1,0)
^.1
"^DD",45,45.02,8,1,1,0)
45.02^AC
"^DD",45,45.02,8,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,8,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,8,1,2,0)
^^TRIGGER^45.02^82.04
"^DD",45,45.02,8,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,4)=DIV,DIH=45.02,DIG=82.04 D ^DICR
"^DD",45,45.02,8,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,4)=DIV,DIH=45.02,DIG=82.04 D ^DICR
"^DD",45,45.02,8,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45.02,8,1,2,"%D",1,0)
When ICD 4 field is deleted or changed, delete the associated POA 
"^DD",45,45.02,8,1,2,"%D",2,0)
indicator field.
"^DD",45,45.02,8,1,2,"CREATE VALUE")
@
"^DD",45,45.02,8,1,2,"DELETE VALUE")
@
"^DD",45,45.02,8,1,2,"DT")
3141001
"^DD",45,45.02,8,1,2,"FIELD")
#82.04
"^DD",45,45.02,8,1,992,0)
45.02^ADGRU8^MUMPS
"^DD",45,45.02,8,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,8,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,8,1,992,"%D",0)
^^1^1^2991006^
"^DD",45,45.02,8,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45.02,8,1,992,"DT")
2991006
"^DD",45,45.02,8,3)
Enter the fourth diagnosis responsible for this patient's length of stay in the medical center.
"^DD",45,45.02,8,21,0)
^^1^1^2920212^^^^
"^DD",45,45.02,8,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,8,"DT")
3150820
"^DD",45,45.02,9,0)
ICD 5^*P80'X^ICD9(^0;9^N K D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN")
"^DD",45,45.02,9,1,0)
^.1
"^DD",45,45.02,9,1,1,0)
45.02^AC
"^DD",45,45.02,9,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,9,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,9,1,2,0)
^^TRIGGER^45.02^82.05
"^DD",45,45.02,9,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,5)=DIV,DIH=45.02,DIG=82.05 D ^DICR
"^DD",45,45.02,9,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,5)=DIV,DIH=45.02,DIG=82.05 D ^DICR
"^DD",45,45.02,9,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45.02,9,1,2,"%D",1,0)
When ICD 5 field is deleted or changed, delete the associated POA 
"^DD",45,45.02,9,1,2,"%D",2,0)
indicator field.
"^DD",45,45.02,9,1,2,"CREATE VALUE")
@
"^DD",45,45.02,9,1,2,"DELETE VALUE")
@
"^DD",45,45.02,9,1,2,"DT")
3141001
"^DD",45,45.02,9,1,2,"FIELD")
#82.05
"^DD",45,45.02,9,1,992,0)
45.02^ADGRU9^MUMPS
"^DD",45,45.02,9,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,9,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,9,1,992,"%D",0)
^^1^1^2991006^
"^DD",45,45.02,9,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45.02,9,1,992,"DT")
2991006
"^DD",45,45.02,9,3)
Enter the fifth diagnosis responsible for this patient's length of stay in this medical center.
"^DD",45,45.02,9,21,0)
^^1^1^2920212^^^^
"^DD",45,45.02,9,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,9,"DT")
3150820
"^DD",45,45.02,11,0)
ICD 6^*P80'X^ICD9(^0;11^N K D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN")
"^DD",45,45.02,11,1,0)
^.1
"^DD",45,45.02,11,1,1,0)
45.02^AC
"^DD",45,45.02,11,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,11,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,11,1,2,0)
^^TRIGGER^45.02^82.06
"^DD",45,45.02,11,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,6)=DIV,DIH=45.02,DIG=82.06 D ^DICR
"^DD",45,45.02,11,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,6)=DIV,DIH=45.02,DIG=82.06 D ^DICR
"^DD",45,45.02,11,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45.02,11,1,2,"%D",1,0)
When ICD 6 field is deleted or changed, delete the associated POA 
"^DD",45,45.02,11,1,2,"%D",2,0)
indicator field.
"^DD",45,45.02,11,1,2,"CREATE VALUE")
@
"^DD",45,45.02,11,1,2,"DELETE VALUE")
@
"^DD",45,45.02,11,1,2,"DT")
3141001
"^DD",45,45.02,11,1,2,"FIELD")
#82.06
"^DD",45,45.02,11,1,992,0)
45.02^ADGRU11^MUMPS
"^DD",45,45.02,11,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,11,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,11,1,992,"%D",0)
^^1^1^2991006^
"^DD",45,45.02,11,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45.02,11,1,992,"DT")
2991006
"^DD",45,45.02,11,3)
Enter the sixth diagnosis for this patient's discharge movement
"^DD",45,45.02,11,21,0)
^^1^1^2920212^^^
"^DD",45,45.02,11,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,11,"DT")
3150820
"^DD",45,45.02,12,0)
ICD 7^*P80'X^ICD9(^0;12^N K D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN")
"^DD",45,45.02,12,1,0)
^.1
"^DD",45,45.02,12,1,1,0)
45.02^AC
"^DD",45,45.02,12,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,12,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,12,1,2,0)
^^TRIGGER^45.02^82.07
"^DD",45,45.02,12,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,7)=DIV,DIH=45.02,DIG=82.07 D ^DICR
"^DD",45,45.02,12,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,7)=DIV,DIH=45.02,DIG=82.07 D ^DICR
"^DD",45,45.02,12,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45.02,12,1,2,"%D",1,0)
When ICD 7 field is deleted or changed, delete the associated POA 
"^DD",45,45.02,12,1,2,"%D",2,0)
indicator field.
"^DD",45,45.02,12,1,2,"CREATE VALUE")
@
"^DD",45,45.02,12,1,2,"DELETE VALUE")
@
"^DD",45,45.02,12,1,2,"DT")
3141001
"^DD",45,45.02,12,1,2,"FIELD")
#82.07
"^DD",45,45.02,12,1,992,0)
45.02^ADGRU12^MUMPS
"^DD",45,45.02,12,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,12,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,12,1,992,"%D",0)
^^1^1^2991006^
"^DD",45,45.02,12,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45.02,12,1,992,"DT")
2991006
"^DD",45,45.02,12,3)
Enter the seventh diagnosis responsible for this patient's length of stay in this medical center.
"^DD",45,45.02,12,21,0)
^^1^1^2920212^^^
"^DD",45,45.02,12,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,12,"DT")
3150820
"^DD",45,45.02,13,0)
ICD 8^*P80'X^ICD9(^0;13^N K D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN")
"^DD",45,45.02,13,1,0)
^.1
"^DD",45,45.02,13,1,1,0)
45.02^AC
"^DD",45,45.02,13,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,13,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,13,1,2,0)
^^TRIGGER^45.02^82.08
"^DD",45,45.02,13,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,8)=DIV,DIH=45.02,DIG=82.08 D ^DICR
"^DD",45,45.02,13,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,8)=DIV,DIH=45.02,DIG=82.08 D ^DICR
"^DD",45,45.02,13,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45.02,13,1,2,"%D",1,0)
When ICD 8 field is deleted or changed, delete the associated POA 
"^DD",45,45.02,13,1,2,"%D",2,0)
indicator field.
"^DD",45,45.02,13,1,2,"CREATE VALUE")
@
"^DD",45,45.02,13,1,2,"DELETE VALUE")
@
"^DD",45,45.02,13,1,2,"DT")
3141001
"^DD",45,45.02,13,1,2,"FIELD")
#82.08
"^DD",45,45.02,13,1,992,0)
45.02^ADGRU13^MUMPS
"^DD",45,45.02,13,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,13,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,13,1,992,"%D",0)
^^1^1^2991006^
"^DD",45,45.02,13,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45.02,13,1,992,"DT")
2991006
"^DD",45,45.02,13,3)
Enter the eighth diagnosis responsible for this patient's length of stay in this medical center.
"^DD",45,45.02,13,21,0)
^.001^1^1^3120223^^^^
"^DD",45,45.02,13,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,13,"DT")
3150820
"^DD",45,45.02,14,0)
ICD 9^*P80'X^ICD9(^0;14^N K D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN")
"^DD",45,45.02,14,1,0)
^.1
"^DD",45,45.02,14,1,1,0)
45.02^AC
"^DD",45,45.02,14,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,14,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,14,1,2,0)
^^TRIGGER^45.02^82.09
"^DD",45,45.02,14,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,9)=DIV,DIH=45.02,DIG=82.09 D ^DICR
"^DD",45,45.02,14,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X="" S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,9)=DIV,DIH=45.02,DIG=82.09 D ^DICR
"^DD",45,45.02,14,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45.02,14,1,2,"%D",1,0)
When ICD 9 field is deleted or changed, delete the associated POA 
"^DD",45,45.02,14,1,2,"%D",2,0)
indicator field.
"^DD",45,45.02,14,1,2,"CREATE VALUE")
@
"^DD",45,45.02,14,1,2,"DELETE VALUE")
@
"^DD",45,45.02,14,1,2,"DT")
3141001
"^DD",45,45.02,14,1,2,"FIELD")
#82.09
"^DD",45,45.02,14,1,992,0)
45.02^ADGRU14^MUMPS
"^DD",45,45.02,14,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,14,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,14,1,992,"%D",0)
^^1^1^2991006^
"^DD",45,45.02,14,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45.02,14,1,992,"DT")
2991006
"^DD",45,45.02,14,3)
Enter the ninth diagnosis responsible for this patient's length of stay in this medical center.
"^DD",45,45.02,14,21,0)
^.001^1^1^3120223^^^
"^DD",45,45.02,14,21,1,0)
This field contains diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,14,"DT")
3150820
"^DD",45,45.02,15,0)
ICD 10^*P80'X^ICD9(^0;15^N K D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN")
"^DD",45,45.02,15,1,0)
^.1
"^DD",45,45.02,15,1,1,0)
45.02^AC
"^DD",45,45.02,15,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,15,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,15,1,2,0)
^^TRIGGER^45.02^82.1
"^DD",45,45.02,15,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X="" X ^DD(45.02,15,1,2,1.4)
"^DD",45,45.02,15,1,2,1.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,10)=DIV,DIH=45.02,DIG=82.1 D ^DICR
"^DD",45,45.02,15,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X="" X ^DD(45.02,15,1,2,2.4)
"^DD",45,45.02,15,1,2,2.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,10)=DIV,DIH=45.02,DIG=82.1 D ^DICR
"^DD",45,45.02,15,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45.02,15,1,2,"%D",1,0)
When ICD 10 field is deleted or changed, delete the associated POA 
"^DD",45,45.02,15,1,2,"%D",2,0)
indicator field.
"^DD",45,45.02,15,1,2,"CREATE VALUE")
@
"^DD",45,45.02,15,1,2,"DELETE VALUE")
@
"^DD",45,45.02,15,1,2,"DT")
3141001
"^DD",45,45.02,15,1,2,"FIELD")
#82.1
"^DD",45,45.02,15,1,992,0)
45.02^ADGRU15^MUMPS
"^DD",45,45.02,15,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,15,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,15,1,992,"%D",0)
^^1^1^2991006^
"^DD",45,45.02,15,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45.02,15,1,992,"DT")
2991006
"^DD",45,45.02,15,3)
Enter the tenth diagnosis responsible for this patient's length of stay in this medical center.
"^DD",45,45.02,15,21,0)
^.001^1^1^3120223^^^
"^DD",45,45.02,15,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,15,"DT")
3150820
"^DD",45,45.02,81.01,0)
ICD 11^*P80'X^ICD9(^81;1^N K D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN",81)
"^DD",45,45.02,81.01,1,0)
^.1
"^DD",45,45.02,81.01,1,1,0)
45.02^AC
"^DD",45,45.02,81.01,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,81.01,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,81.01,1,1,"DT")
3140529
"^DD",45,45.02,81.01,1,2,0)
^^TRIGGER^45.02^82.11
"^DD",45,45.02,81.01,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X="" X ^DD(45.02,81.01,1,2,1.4)
"^DD",45,45.02,81.01,1,2,1.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,11)=DIV,DIH=45.02,DIG=82.11 D ^DICR
"^DD",45,45.02,81.01,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X="" X ^DD(45.02,81.01,1,2,2.4)
"^DD",45,45.02,81.01,1,2,2.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,11)=DIV,DIH=45.02,DIG=82.11 D ^DICR
"^DD",45,45.02,81.01,1,2,"%D",0)
^.101^2^2^3141002^^
"^DD",45,45.02,81.01,1,2,"%D",1,0)
When ICD 11 field is deleted or changed, delete the associated POA 
"^DD",45,45.02,81.01,1,2,"%D",2,0)
indicator field.
"^DD",45,45.02,81.01,1,2,"CREATE VALUE")
@
"^DD",45,45.02,81.01,1,2,"DELETE VALUE")
@
"^DD",45,45.02,81.01,1,2,"DT")
3141001
"^DD",45,45.02,81.01,1,2,"FIELD")
#82.11
"^DD",45,45.02,81.01,1,992,0)
45.02^ADGRU8101^MUMPS
"^DD",45,45.02,81.01,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.01,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.01,1,992,"DT")
3140529
"^DD",45,45.02,81.01,3)
Enter the eleventh diagnosis responsible for this patient's stay in the bedsection.
"^DD",45,45.02,81.01,21,0)
^^1^1^3140529^
"^DD",45,45.02,81.01,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,81.01,"DT")
3150820
"^DD",45,45.02,81.02,0)
ICD 12^*P80'X^ICD9(^81;2^N K D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN",81)
"^DD",45,45.02,81.02,1,0)
^.1
"^DD",45,45.02,81.02,1,1,0)
45.02^AC
"^DD",45,45.02,81.02,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,81.02,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,81.02,1,1,"DT")
3140529
"^DD",45,45.02,81.02,1,2,0)
^^TRIGGER^45.02^82.12
"^DD",45,45.02,81.02,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X="" X ^DD(45.02,81.02,1,2,1.4)
"^DD",45,45.02,81.02,1,2,1.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,12)=DIV,DIH=45.02,DIG=82.12 D ^DICR
"^DD",45,45.02,81.02,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X="" X ^DD(45.02,81.02,1,2,2.4)
"^DD",45,45.02,81.02,1,2,2.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,12)=DIV,DIH=45.02,DIG=82.12 D ^DICR
"^DD",45,45.02,81.02,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45.02,81.02,1,2,"%D",1,0)
When ICD 12 field is deleted or changed, delete the associated POA 
"^DD",45,45.02,81.02,1,2,"%D",2,0)
indicator field.
"^DD",45,45.02,81.02,1,2,"CREATE VALUE")
@
"^DD",45,45.02,81.02,1,2,"DELETE VALUE")
@
"^DD",45,45.02,81.02,1,2,"DT")
3141001
"^DD",45,45.02,81.02,1,2,"FIELD")
#82.12
"^DD",45,45.02,81.02,1,992,0)
45.02^ADGRU8102^MUMPS
"^DD",45,45.02,81.02,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.02,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.02,1,992,"DT")
3140529
"^DD",45,45.02,81.02,3)
Enter the twelfth diagnosis responsible for this patient's stay in the bedsection.
"^DD",45,45.02,81.02,21,0)
^^1^1^3140529^
"^DD",45,45.02,81.02,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,81.02,"DT")
3150820
"^DD",45,45.02,81.03,0)
ICD 13^*P80'X^ICD9(^81;3^N K D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN",81)
"^DD",45,45.02,81.03,1,0)
^.1
"^DD",45,45.02,81.03,1,1,0)
45.02^AC
"^DD",45,45.02,81.03,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,81.03,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,81.03,1,1,"DT")
3140529
"^DD",45,45.02,81.03,1,2,0)
^^TRIGGER^45.02^82.13
"^DD",45,45.02,81.03,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X="" X ^DD(45.02,81.03,1,2,1.4)
"^DD",45,45.02,81.03,1,2,1.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,13)=DIV,DIH=45.02,DIG=82.13 D ^DICR
"^DD",45,45.02,81.03,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X="" X ^DD(45.02,81.03,1,2,2.4)
"^DD",45,45.02,81.03,1,2,2.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,13)=DIV,DIH=45.02,DIG=82.13 D ^DICR
"^DD",45,45.02,81.03,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45.02,81.03,1,2,"%D",1,0)
When ICD 13 field is deleted or changed, delete the associated POA 
"^DD",45,45.02,81.03,1,2,"%D",2,0)
indicator field.
"^DD",45,45.02,81.03,1,2,"CREATE VALUE")
@
"^DD",45,45.02,81.03,1,2,"DELETE VALUE")
@
"^DD",45,45.02,81.03,1,2,"DT")
3141001
"^DD",45,45.02,81.03,1,2,"FIELD")
#82.13
"^DD",45,45.02,81.03,1,992,0)
45.02^ADGRU8103^MUMPS
"^DD",45,45.02,81.03,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.03,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.03,1,992,"DT")
3140529
"^DD",45,45.02,81.03,3)
Enter the thirteenth diagnosis responsible for this patient's stay in the bedsection.
"^DD",45,45.02,81.03,21,0)
^^1^1^3140529^
"^DD",45,45.02,81.03,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,81.03,"DT")
3150820
"^DD",45,45.02,81.04,0)
ICD 14^*P80'X^ICD9(^81;4^N K D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN",81)
"^DD",45,45.02,81.04,1,0)
^.1
"^DD",45,45.02,81.04,1,1,0)
45.02^AC
"^DD",45,45.02,81.04,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,81.04,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,81.04,1,1,"DT")
3140529
"^DD",45,45.02,81.04,1,2,0)
^^TRIGGER^45.02^82.14
"^DD",45,45.02,81.04,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,14),X=X S DIU=X K Y S X="" X ^DD(45.02,81.04,1,2,1.4)
"^DD",45,45.02,81.04,1,2,1.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,14)=DIV,DIH=45.02,DIG=82.14 D ^DICR
"^DD",45,45.02,81.04,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,14),X=X S DIU=X K Y S X="" X ^DD(45.02,81.04,1,2,2.4)
"^DD",45,45.02,81.04,1,2,2.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,14)=DIV,DIH=45.02,DIG=82.14 D ^DICR
"^DD",45,45.02,81.04,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45.02,81.04,1,2,"%D",1,0)
When ICD 14 field is deleted or changed, delete the associated POA 
"^DD",45,45.02,81.04,1,2,"%D",2,0)
indicator field.
"^DD",45,45.02,81.04,1,2,"CREATE VALUE")
@
"^DD",45,45.02,81.04,1,2,"DELETE VALUE")
@
"^DD",45,45.02,81.04,1,2,"DT")
3141001
"^DD",45,45.02,81.04,1,2,"FIELD")
#82.14
"^DD",45,45.02,81.04,1,992,0)
45.02^ADGRU8104^MUMPS
"^DD",45,45.02,81.04,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.04,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.04,1,992,"DT")
3140529
"^DD",45,45.02,81.04,3)
Enter the fourteenth diagnosis responsible for this patient's stay in the bedsection.
"^DD",45,45.02,81.04,21,0)
^^1^1^3140529^
"^DD",45,45.02,81.04,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,81.04,"DT")
3150820
"^DD",45,45.02,81.05,0)
ICD 15^*P80'X^ICD9(^81;5^N K D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN",81)
"^DD",45,45.02,81.05,1,0)
^.1
"^DD",45,45.02,81.05,1,1,0)
45.02^AC
"^DD",45,45.02,81.05,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,81.05,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,81.05,1,1,"DT")
3140529
"^DD",45,45.02,81.05,1,2,0)
^^TRIGGER^45.02^82.15
"^DD",45,45.02,81.05,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,15),X=X S DIU=X K Y S X="" X ^DD(45.02,81.05,1,2,1.4)
"^DD",45,45.02,81.05,1,2,1.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,15)=DIV,DIH=45.02,DIG=82.15 D ^DICR
"^DD",45,45.02,81.05,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,15),X=X S DIU=X K Y S X="" X ^DD(45.02,81.05,1,2,2.4)
"^DD",45,45.02,81.05,1,2,2.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,15)=DIV,DIH=45.02,DIG=82.15 D ^DICR
"^DD",45,45.02,81.05,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45.02,81.05,1,2,"%D",1,0)
When ICD 15 field is deleted or changed, delete the associated POA 
"^DD",45,45.02,81.05,1,2,"%D",2,0)
indicator field.
"^DD",45,45.02,81.05,1,2,"CREATE VALUE")
@
"^DD",45,45.02,81.05,1,2,"DELETE VALUE")
@
"^DD",45,45.02,81.05,1,2,"DT")
3141001
"^DD",45,45.02,81.05,1,2,"FIELD")
#82.15
"^DD",45,45.02,81.05,1,992,0)
45.02^ADGRU8105^MUMPS
"^DD",45,45.02,81.05,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.05,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.05,1,992,"DT")
3140529
"^DD",45,45.02,81.05,3)
Enter the fifteenth diagnosis responsible for this patient's stay in the bedsection.
"^DD",45,45.02,81.05,21,0)
^^1^1^3140529^
"^DD",45,45.02,81.05,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,81.05,"DT")
3150820
"^DD",45,45.02,81.06,0)
ICD 16^*P80'X^ICD9(^81;6^N K D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN",81)
"^DD",45,45.02,81.06,1,0)
^.1
"^DD",45,45.02,81.06,1,1,0)
45.02^AC
"^DD",45,45.02,81.06,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,81.06,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,81.06,1,1,"DT")
3140529
"^DD",45,45.02,81.06,1,2,0)
^^TRIGGER^45.02^82.16
"^DD",45,45.02,81.06,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,16),X=X S DIU=X K Y S X="" X ^DD(45.02,81.06,1,2,1.4)
"^DD",45,45.02,81.06,1,2,1.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,16)=DIV,DIH=45.02,DIG=82.16 D ^DICR
"^DD",45,45.02,81.06,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,16),X=X S DIU=X K Y S X="" X ^DD(45.02,81.06,1,2,2.4)
"^DD",45,45.02,81.06,1,2,2.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,16)=DIV,DIH=45.02,DIG=82.16 D ^DICR
"^DD",45,45.02,81.06,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45.02,81.06,1,2,"%D",1,0)
When ICD 16 field is deleted or changed, delete the associated POA 
"^DD",45,45.02,81.06,1,2,"%D",2,0)
indicator field.
"^DD",45,45.02,81.06,1,2,"CREATE VALUE")
@
"^DD",45,45.02,81.06,1,2,"DELETE VALUE")
@
"^DD",45,45.02,81.06,1,2,"DT")
3141001
"^DD",45,45.02,81.06,1,2,"FIELD")
#82.16
"^DD",45,45.02,81.06,1,992,0)
45.02^ADGRU8106^MUMPS
"^DD",45,45.02,81.06,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.06,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.06,1,992,"DT")
3140529
"^DD",45,45.02,81.06,3)
Enter the sixteenth diagnosis responsible for this patient's stay in the bedsection.
"^DD",45,45.02,81.06,21,0)
^^1^1^3150324^
"^DD",45,45.02,81.06,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,81.06,"DT")
3150820
"^DD",45,45.02,81.07,0)
ICD 17^*P80'X^ICD9(^81;7^N K D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN",81)
"^DD",45,45.02,81.07,1,0)
^.1
"^DD",45,45.02,81.07,1,1,0)
45.02^AC
"^DD",45,45.02,81.07,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,81.07,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,81.07,1,1,"DT")
3140529
"^DD",45,45.02,81.07,1,2,0)
^^TRIGGER^45.02^82.17
"^DD",45,45.02,81.07,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y S X="" X ^DD(45.02,81.07,1,2,1.4)
"^DD",45,45.02,81.07,1,2,1.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,17)=DIV,DIH=45.02,DIG=82.17 D ^DICR
"^DD",45,45.02,81.07,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y S X="" X ^DD(45.02,81.07,1,2,2.4)
"^DD",45,45.02,81.07,1,2,2.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,17)=DIV,DIH=45.02,DIG=82.17 D ^DICR
"^DD",45,45.02,81.07,1,2,"%D",0)
^^2^2^3141001^
"^DD",45,45.02,81.07,1,2,"%D",1,0)
When ICD 17 field is deleted or changed, delete the associated POA 
"^DD",45,45.02,81.07,1,2,"%D",2,0)
indicator field.
"^DD",45,45.02,81.07,1,2,"CREATE VALUE")
@
"^DD",45,45.02,81.07,1,2,"DELETE VALUE")
@
"^DD",45,45.02,81.07,1,2,"DT")
3141001
"^DD",45,45.02,81.07,1,2,"FIELD")
#82.17
"^DD",45,45.02,81.07,1,992,0)
45.02^ADGRU8107^MUMPS
"^DD",45,45.02,81.07,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.07,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.07,1,992,"DT")
3140529
"^DD",45,45.02,81.07,3)
Enter the seventeenth diagnosis responsible for this patient's stay in the bedsection.
"^DD",45,45.02,81.07,21,0)
^^1^1^3140529^
"^DD",45,45.02,81.07,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,81.07,"DT")
3150820
"^DD",45,45.02,81.08,0)
ICD 18^*P80'X^ICD9(^81;8^N K D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN",81)
"^DD",45,45.02,81.08,1,0)
^.1
"^DD",45,45.02,81.08,1,1,0)
45.02^AC
"^DD",45,45.02,81.08,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,81.08,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,81.08,1,1,"DT")
3140529
"^DD",45,45.02,81.08,1,2,0)
^^TRIGGER^45.02^82.18
"^DD",45,45.02,81.08,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,18),X=X S DIU=X K Y S X="" X ^DD(45.02,81.08,1,2,1.4)
"^DD",45,45.02,81.08,1,2,1.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,18)=DIV,DIH=45.02,DIG=82.18 D ^DICR
"^DD",45,45.02,81.08,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,18),X=X S DIU=X K Y S X="" X ^DD(45.02,81.08,1,2,2.4)
"^DD",45,45.02,81.08,1,2,2.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,18)=DIV,DIH=45.02,DIG=82.18 D ^DICR
"^DD",45,45.02,81.08,1,2,"%D",0)
^^2^2^3141002^
"^DD",45,45.02,81.08,1,2,"%D",1,0)
When ICD 18 field is deleted or changed, delete the associated POA 
"^DD",45,45.02,81.08,1,2,"%D",2,0)
indicator field.
"^DD",45,45.02,81.08,1,2,"CREATE VALUE")
@
"^DD",45,45.02,81.08,1,2,"DELETE VALUE")
@
"^DD",45,45.02,81.08,1,2,"DT")
3141002
"^DD",45,45.02,81.08,1,2,"FIELD")
#82.18
"^DD",45,45.02,81.08,1,992,0)
45.02^ADGRU8108^MUMPS
"^DD",45,45.02,81.08,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.08,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.08,1,992,"DT")
3140529
"^DD",45,45.02,81.08,3)
Enter the eighteenth diagnosis responsible for this patient's stay in the bedsection.
"^DD",45,45.02,81.08,21,0)
^^1^1^3140529^
"^DD",45,45.02,81.08,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,81.08,"DT")
3150820
"^DD",45,45.02,81.09,0)
ICD 19^*P80'X^ICD9(^81;9^N K D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN",81)
"^DD",45,45.02,81.09,1,0)
^.1
"^DD",45,45.02,81.09,1,1,0)
45.02^AC
"^DD",45,45.02,81.09,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,81.09,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,81.09,1,1,"DT")
3140529
"^DD",45,45.02,81.09,1,2,0)
^^TRIGGER^45.02^82.19
"^DD",45,45.02,81.09,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,19),X=X S DIU=X K Y S X="" X ^DD(45.02,81.09,1,2,1.4)
"^DD",45,45.02,81.09,1,2,1.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,19)=DIV,DIH=45.02,DIG=82.19 D ^DICR
"^DD",45,45.02,81.09,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,19),X=X S DIU=X K Y S X="" X ^DD(45.02,81.09,1,2,2.4)
"^DD",45,45.02,81.09,1,2,2.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,19)=DIV,DIH=45.02,DIG=82.19 D ^DICR
"^DD",45,45.02,81.09,1,2,"%D",0)
^^2^2^3141002^
"^DD",45,45.02,81.09,1,2,"%D",1,0)
When ICD 19 field is deleted or changed, delete the associated POA 
"^DD",45,45.02,81.09,1,2,"%D",2,0)
indicator field.
"^DD",45,45.02,81.09,1,2,"CREATE VALUE")
@
"^DD",45,45.02,81.09,1,2,"DELETE VALUE")
@
"^DD",45,45.02,81.09,1,2,"DT")
3141002
"^DD",45,45.02,81.09,1,2,"FIELD")
#82.19
"^DD",45,45.02,81.09,1,992,0)
45.02^ADGRU8109^MUMPS
"^DD",45,45.02,81.09,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.09,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.09,1,992,"DT")
3140529
"^DD",45,45.02,81.09,3)
Enter the nineteenth diagnosis responsible for this patient's stay in the bedsection.
"^DD",45,45.02,81.09,21,0)
^^1^1^3140529^
"^DD",45,45.02,81.09,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,81.09,"DT")
3150820
"^DD",45,45.02,81.1,0)
ICD 20^*P80'X^ICD9(^81;10^N K D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN",81)
"^DD",45,45.02,81.1,1,0)
^.1
"^DD",45,45.02,81.1,1,1,0)
45.02^AC
"^DD",45,45.02,81.1,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,81.1,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,81.1,1,1,"DT")
3140529
"^DD",45,45.02,81.1,1,2,0)
^^TRIGGER^45.02^82.2
"^DD",45,45.02,81.1,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,20),X=X S DIU=X K Y S X="" X ^DD(45.02,81.1,1,2,1.4)
"^DD",45,45.02,81.1,1,2,1.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,20)=DIV,DIH=45.02,DIG=82.2 D ^DICR
"^DD",45,45.02,81.1,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,20),X=X S DIU=X K Y S X="" X ^DD(45.02,81.1,1,2,2.4)
"^DD",45,45.02,81.1,1,2,2.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,20)=DIV,DIH=45.02,DIG=82.2 D ^DICR
"^DD",45,45.02,81.1,1,2,"%D",0)
^^2^2^3141002^
"^DD",45,45.02,81.1,1,2,"%D",1,0)
When ICD 20 field is deleted or changed, delete the associated POA 
"^DD",45,45.02,81.1,1,2,"%D",2,0)
indicator field.
"^DD",45,45.02,81.1,1,2,"CREATE VALUE")
@
"^DD",45,45.02,81.1,1,2,"DELETE VALUE")
@
"^DD",45,45.02,81.1,1,2,"DT")
3141002
"^DD",45,45.02,81.1,1,2,"FIELD")
#82.2
"^DD",45,45.02,81.1,1,992,0)
45.02^ADGRU8110^MUMPS
"^DD",45,45.02,81.1,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.1,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.1,1,992,"DT")
3140529
"^DD",45,45.02,81.1,3)
Enter the twentieth diagnosis responsible for this patient's stay in the bedsection.
"^DD",45,45.02,81.1,21,0)
^^1^1^3140529^
"^DD",45,45.02,81.1,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,81.1,"DT")
3150820
"^DD",45,45.02,81.11,0)
ICD 21^*P80'X^ICD9(^81;11^N K D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN",81)
"^DD",45,45.02,81.11,1,0)
^.1
"^DD",45,45.02,81.11,1,1,0)
45.02^AC
"^DD",45,45.02,81.11,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,81.11,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,81.11,1,1,"DT")
3140529
"^DD",45,45.02,81.11,1,2,0)
^^TRIGGER^45.02^82.21
"^DD",45,45.02,81.11,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,21),X=X S DIU=X K Y S X="" X ^DD(45.02,81.11,1,2,1.4)
"^DD",45,45.02,81.11,1,2,1.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,21)=DIV,DIH=45.02,DIG=82.21 D ^DICR
"^DD",45,45.02,81.11,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,21),X=X S DIU=X K Y S X="" X ^DD(45.02,81.11,1,2,2.4)
"^DD",45,45.02,81.11,1,2,2.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,21)=DIV,DIH=45.02,DIG=82.21 D ^DICR
"^DD",45,45.02,81.11,1,2,"%D",0)
^^2^2^3141002^
"^DD",45,45.02,81.11,1,2,"%D",1,0)
When ICD 21 field is deleted or changed, delete the associated POA 
"^DD",45,45.02,81.11,1,2,"%D",2,0)
indicator field.
"^DD",45,45.02,81.11,1,2,"CREATE VALUE")
@
"^DD",45,45.02,81.11,1,2,"DELETE VALUE")
@
"^DD",45,45.02,81.11,1,2,"DT")
3141002
"^DD",45,45.02,81.11,1,2,"FIELD")
#82.21
"^DD",45,45.02,81.11,1,992,0)
45.02^ADGRU8111^MUMPS
"^DD",45,45.02,81.11,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.11,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.11,1,992,"DT")
3140529
"^DD",45,45.02,81.11,3)
Enter the twenty-first diagnosis responsible for this patient's stay in the bedsection.
"^DD",45,45.02,81.11,21,0)
^^1^1^3140529^
"^DD",45,45.02,81.11,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,81.11,"DT")
3150820
"^DD",45,45.02,81.12,0)
ICD 22^*P80'X^ICD9(^81;12^N K D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN",81)
"^DD",45,45.02,81.12,1,0)
^.1
"^DD",45,45.02,81.12,1,1,0)
45.02^AC
"^DD",45,45.02,81.12,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,81.12,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,81.12,1,1,"DT")
3140529
"^DD",45,45.02,81.12,1,2,0)
^^TRIGGER^45.02^82.22
"^DD",45,45.02,81.12,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,22),X=X S DIU=X K Y S X="" X ^DD(45.02,81.12,1,2,1.4)
"^DD",45,45.02,81.12,1,2,1.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,22)=DIV,DIH=45.02,DIG=82.22 D ^DICR
"^DD",45,45.02,81.12,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,22),X=X S DIU=X K Y S X="" X ^DD(45.02,81.12,1,2,2.4)
"^DD",45,45.02,81.12,1,2,2.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,22)=DIV,DIH=45.02,DIG=82.22 D ^DICR
"^DD",45,45.02,81.12,1,2,"%D",0)
^^2^2^3141002^
"^DD",45,45.02,81.12,1,2,"%D",1,0)
When ICD 22 field is deleted or changed, delete the associated POA 
"^DD",45,45.02,81.12,1,2,"%D",2,0)
indicator field.
"^DD",45,45.02,81.12,1,2,"CREATE VALUE")
@
"^DD",45,45.02,81.12,1,2,"DELETE VALUE")
@
"^DD",45,45.02,81.12,1,2,"DT")
3141002
"^DD",45,45.02,81.12,1,2,"FIELD")
#82.22
"^DD",45,45.02,81.12,1,992,0)
45.02^ADGRU8112^MUMPS
"^DD",45,45.02,81.12,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.12,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.12,1,992,"DT")
3140529
"^DD",45,45.02,81.12,3)
Enter the twenty-second diagnosis responsible for this patient's stay in the bedsection.
"^DD",45,45.02,81.12,21,0)
^^1^1^3140529^
"^DD",45,45.02,81.12,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,81.12,"DT")
3150820
"^DD",45,45.02,81.13,0)
ICD 23^*P80'X^ICD9(^81;13^N K D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN",81)
"^DD",45,45.02,81.13,1,0)
^.1
"^DD",45,45.02,81.13,1,1,0)
45.02^AC
"^DD",45,45.02,81.13,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,81.13,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,81.13,1,1,"DT")
3140529
"^DD",45,45.02,81.13,1,2,0)
^^TRIGGER^45.02^82.23
"^DD",45,45.02,81.13,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,23),X=X S DIU=X K Y S X="" X ^DD(45.02,81.13,1,2,1.4)
"^DD",45,45.02,81.13,1,2,1.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,23)=DIV,DIH=45.02,DIG=82.23 D ^DICR
"^DD",45,45.02,81.13,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,23),X=X S DIU=X K Y S X="" X ^DD(45.02,81.13,1,2,2.4)
"^DD",45,45.02,81.13,1,2,2.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,23)=DIV,DIH=45.02,DIG=82.23 D ^DICR
"^DD",45,45.02,81.13,1,2,"%D",0)
^^2^2^3141002^
"^DD",45,45.02,81.13,1,2,"%D",1,0)
When ICD 23 field is deleted or changed, delete the associated POA 
"^DD",45,45.02,81.13,1,2,"%D",2,0)
indicator field.
"^DD",45,45.02,81.13,1,2,"CREATE VALUE")
@
"^DD",45,45.02,81.13,1,2,"DELETE VALUE")
@
"^DD",45,45.02,81.13,1,2,"DT")
3141002
"^DD",45,45.02,81.13,1,2,"FIELD")
#82.23
"^DD",45,45.02,81.13,1,992,0)
45.02^ADGRU8113^MUMPS
"^DD",45,45.02,81.13,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.13,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.13,1,992,"DT")
3140529
"^DD",45,45.02,81.13,3)
Enter the twenty-third diagnosis responsible for this patient's stay in the bedsection.
"^DD",45,45.02,81.13,21,0)
^^1^1^3140529^
"^DD",45,45.02,81.13,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,81.13,"DT")
3150820
"^DD",45,45.02,81.14,0)
ICD 24^*P80'X^ICD9(^81;14^N K D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN",81)
"^DD",45,45.02,81.14,1,0)
^.1
"^DD",45,45.02,81.14,1,1,0)
45.02^AC
"^DD",45,45.02,81.14,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,81.14,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,81.14,1,1,"DT")
3140529
"^DD",45,45.02,81.14,1,2,0)
^^TRIGGER^45.02^82.24
"^DD",45,45.02,81.14,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,24),X=X S DIU=X K Y S X="" X ^DD(45.02,81.14,1,2,1.4)
"^DD",45,45.02,81.14,1,2,1.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,24)=DIV,DIH=45.02,DIG=82.24 D ^DICR
"^DD",45,45.02,81.14,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,24),X=X S DIU=X K Y S X="" X ^DD(45.02,81.14,1,2,2.4)
"^DD",45,45.02,81.14,1,2,2.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,24)=DIV,DIH=45.02,DIG=82.24 D ^DICR
"^DD",45,45.02,81.14,1,2,"%D",0)
^^2^2^3141002^
"^DD",45,45.02,81.14,1,2,"%D",1,0)
When ICD 24 field is deleted or changed, delete the associated POA 
"^DD",45,45.02,81.14,1,2,"%D",2,0)
indicator field.
"^DD",45,45.02,81.14,1,2,"CREATE VALUE")
@
"^DD",45,45.02,81.14,1,2,"DELETE VALUE")
@
"^DD",45,45.02,81.14,1,2,"DT")
3141002
"^DD",45,45.02,81.14,1,2,"FIELD")
#82.24
"^DD",45,45.02,81.14,1,992,0)
45.02^ADGRU8114^MUMPS
"^DD",45,45.02,81.14,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.14,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.14,1,992,"DT")
3140529
"^DD",45,45.02,81.14,3)
Enter the twenty-fourth diagnosis responsible for this patient's stay in the bedsection.
"^DD",45,45.02,81.14,21,0)
^^1^1^3140529^
"^DD",45,45.02,81.14,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,81.14,"DT")
3150820
"^DD",45,45.02,81.15,0)
ICD 25^*P80'X^ICD9(^81;15^N K D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN",81)
"^DD",45,45.02,81.15,1,0)
^.1
"^DD",45,45.02,81.15,1,1,0)
45.02^AC
"^DD",45,45.02,81.15,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,81.15,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,81.15,1,1,"DT")
3140529
"^DD",45,45.02,81.15,1,2,0)
^^TRIGGER^45.02^82.25
"^DD",45,45.02,81.15,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,25),X=X S DIU=X K Y S X="" X ^DD(45.02,81.15,1,2,1.4)
"^DD",45,45.02,81.15,1,2,1.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,25)=DIV,DIH=45.02,DIG=82.25 D ^DICR
"^DD",45,45.02,81.15,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGPT(D0,"M",D1,82)):^(82),1:"") S X=$P(Y(1),U,25),X=X S DIU=X K Y S X="" X ^DD(45.02,81.15,1,2,2.4)
"^DD",45,45.02,81.15,1,2,2.4)
S DIH=$G(^DGPT(DIV(0),"M",DIV(1),82)),DIV=X S $P(^(82),U,25)=DIV,DIH=45.02,DIG=82.25 D ^DICR
"^DD",45,45.02,81.15,1,2,"%D",0)
^^2^2^3141002^
"^DD",45,45.02,81.15,1,2,"%D",1,0)
When ICD 25 field is deleted or changed, delete the associated POA 
"^DD",45,45.02,81.15,1,2,"%D",2,0)
indicator field.
"^DD",45,45.02,81.15,1,2,"CREATE VALUE")
@
"^DD",45,45.02,81.15,1,2,"DELETE VALUE")
@
"^DD",45,45.02,81.15,1,2,"DT")
3141002
"^DD",45,45.02,81.15,1,2,"FIELD")
#82.25
"^DD",45,45.02,81.15,1,992,0)
45.02^ADGRU8115^MUMPS
"^DD",45,45.02,81.15,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.15,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,81.15,1,992,"DT")
3140529
"^DD",45,45.02,81.15,3)
Enter the twenty-fifth diagnosis responsible for this patient's stay in the bedsection.
"^DD",45,45.02,81.15,21,0)
^^1^1^3140529^
"^DD",45,45.02,81.15,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,81.15,"DT")
3150820
"^DD",45,45.02,82.01,0)
POA FOR ICD 1^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;1^I X]"",$G(DA),$G(DA(1)) K:'$$POA501^DGPTFUT1(X,DA(1),DA,0,5) X
"^DD",45,45.02,82.01,3)
Apply the Present on Admission (POA) indicator for ICD 1.
"^DD",45,45.02,82.01,5,1,0)
45.02^5^2
"^DD",45,45.02,82.01,21,0)
^.001^11^11^3150114^^^^
"^DD",45,45.02,82.01,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 1 (#5) field.
"^DD",45,45.02,82.01,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.01,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.01,21,4,0)
 
"^DD",45,45.02,82.01,21,5,0)
  Y = present on the time of inpatient admission; 
"^DD",45,45.02,82.01,21,6,0)
  N = not present on the time of inpatient admission; 
"^DD",45,45.02,82.01,21,7,0)
  U = documentation is insufficient to determine if condition is 
"^DD",45,45.02,82.01,21,8,0)
      present on admission; 
"^DD",45,45.02,82.01,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.01,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.01,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.01,23,0)
^.001^1^1^3150114^^^^
"^DD",45,45.02,82.01,23,1,0)
 
"^DD",45,45.02,82.01,"DT")
3150820
"^DD",45,45.02,82.02,0)
POA FOR ICD 2^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;2^I X]"",$G(DA),$G(DA(1)) K:'$$POA501^DGPTFUT1(X,DA(1),DA,0,6) X
"^DD",45,45.02,82.02,3)
Apply the Present on Admission (POA) indicator for ICD 2.
"^DD",45,45.02,82.02,5,1,0)
45.02^6^2
"^DD",45,45.02,82.02,21,0)
^.001^11^11^3121004^^
"^DD",45,45.02,82.02,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 2 (#6) field.
"^DD",45,45.02,82.02,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.02,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.02,21,4,0)
 
"^DD",45,45.02,82.02,21,5,0)
  Y = present on the time of inpatient admission; 
"^DD",45,45.02,82.02,21,6,0)
  N = not present on the time of inpatient admission; 
"^DD",45,45.02,82.02,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.02,21,8,0)
      present on admission; 
"^DD",45,45.02,82.02,21,9,0)
  W = provider is unable to clinically determine whether condition was 
"^DD",45,45.02,82.02,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.02,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.02,23,0)
^.001^1^1^3121004^^
"^DD",45,45.02,82.02,23,1,0)
 
"^DD",45,45.02,82.02,"DT")
3150820
"^DD",45,45.02,82.03,0)
POA FOR ICD 3^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;3^I X]"",$G(DA),$G(DA(1)) K:'$$POA501^DGPTFUT1(X,DA(1),DA,0,7) X
"^DD",45,45.02,82.03,3)
Apply the Present on Admission (POA) indicator for ICD 3.
"^DD",45,45.02,82.03,5,1,0)
45.02^7^2
"^DD",45,45.02,82.03,21,0)
^.001^11^11^3121004^^
"^DD",45,45.02,82.03,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 3 (#7) field.
"^DD",45,45.02,82.03,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.03,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.03,21,4,0)
 
"^DD",45,45.02,82.03,21,5,0)
  Y = present on the time of inpatient admission; 
"^DD",45,45.02,82.03,21,6,0)
  N = not present on the time of inpatient admission; 
"^DD",45,45.02,82.03,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.03,21,8,0)
      present on admission; 
"^DD",45,45.02,82.03,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.03,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.03,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.03,23,0)
^.001^1^1^3121004^^
"^DD",45,45.02,82.03,23,1,0)
 
"^DD",45,45.02,82.03,"DT")
3150820
"^DD",45,45.02,82.04,0)
POA FOR ICD 4^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;4^I X]"",$G(DA),$G(DA(1)) K:'$$POA501^DGPTFUT1(X,DA(1),DA,0,8) X
"^DD",45,45.02,82.04,3)
Apply the Present on Admission (POA) indicator for ICD 4.
"^DD",45,45.02,82.04,5,1,0)
45.02^8^2
"^DD",45,45.02,82.04,21,0)
^.001^11^11^3121004^^
"^DD",45,45.02,82.04,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 4 (#8) field.
"^DD",45,45.02,82.04,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.04,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.04,21,4,0)
 
"^DD",45,45.02,82.04,21,5,0)
  Y = present on the time of inpatient admission; 
"^DD",45,45.02,82.04,21,6,0)
  N = not present on the time of inpatient admission; 
"^DD",45,45.02,82.04,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.04,21,8,0)
      present on admission; 
"^DD",45,45.02,82.04,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.04,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.04,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.04,23,0)
^.001^1^1^3121004^^
"^DD",45,45.02,82.04,23,1,0)
 
"^DD",45,45.02,82.04,"DT")
3150820
"^DD",45,45.02,82.05,0)
POA FOR ICD 5^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;5^I X]"",$G(DA),$G(DA(1)) K:'$$POA501^DGPTFUT1(X,DA(1),DA,0,9) X
"^DD",45,45.02,82.05,3)
Apply the Present on Admission (POA) indicator for ICD 5.
"^DD",45,45.02,82.05,5,1,0)
45.02^9^2
"^DD",45,45.02,82.05,21,0)
^.001^11^11^3121004^^
"^DD",45,45.02,82.05,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 5 (#9) field.
"^DD",45,45.02,82.05,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.05,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.05,21,4,0)
 
"^DD",45,45.02,82.05,21,5,0)
  Y = present on the time of inpatient admission; 
"^DD",45,45.02,82.05,21,6,0)
  N = not present on the time of inpatient admission; 
"^DD",45,45.02,82.05,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.05,21,8,0)
      present on admission; 
"^DD",45,45.02,82.05,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.05,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.05,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.05,23,0)
^.001^1^1^3121004^^
"^DD",45,45.02,82.05,23,1,0)
 
"^DD",45,45.02,82.05,"DT")
3150820
"^DD",45,45.02,82.06,0)
POA FOR ICD 6^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;6^I X]"",$G(DA),$G(DA(1)) K:'$$POA501^DGPTFUT1(X,DA(1),DA,0,11) X
"^DD",45,45.02,82.06,3)
Apply the Present on Admission (POA) indicator for ICD 6.
"^DD",45,45.02,82.06,5,1,0)
45.02^11^2
"^DD",45,45.02,82.06,21,0)
^.001^11^11^3121004^^
"^DD",45,45.02,82.06,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 6 (#11) field.
"^DD",45,45.02,82.06,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.06,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.06,21,4,0)
 
"^DD",45,45.02,82.06,21,5,0)
  Y = present on the time of inpatient admission; 
"^DD",45,45.02,82.06,21,6,0)
  N = not present on the time of inpatient admission; 
"^DD",45,45.02,82.06,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.06,21,8,0)
      present on admission; 
"^DD",45,45.02,82.06,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.06,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.06,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.06,23,0)
^.001^1^1^3121004^^
"^DD",45,45.02,82.06,23,1,0)
 
"^DD",45,45.02,82.06,"DT")
3150820
"^DD",45,45.02,82.07,0)
POA FOR ICD 7^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;7^I X]"",$G(DA),$G(DA(1)) K:'$$POA501^DGPTFUT1(X,DA(1),DA,0,12) X
"^DD",45,45.02,82.07,3)
Apply the Present on Admission (POA) indicator for ICD 7.
"^DD",45,45.02,82.07,5,1,0)
45.02^12^2
"^DD",45,45.02,82.07,21,0)
^.001^11^11^3121004^^
"^DD",45,45.02,82.07,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 7 (#12) field.
"^DD",45,45.02,82.07,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.07,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.07,21,4,0)
 
"^DD",45,45.02,82.07,21,5,0)
  Y = present on the time of inpatient admission; 
"^DD",45,45.02,82.07,21,6,0)
  N = not present on the time of inpatient admission; 
"^DD",45,45.02,82.07,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.07,21,8,0)
      present on admission; 
"^DD",45,45.02,82.07,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.07,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.07,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.07,23,0)
^.001^1^1^3121004^^
"^DD",45,45.02,82.07,23,1,0)
 
"^DD",45,45.02,82.07,"DT")
3150820
"^DD",45,45.02,82.08,0)
POA FOR ICD 8^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;8^I X]"",$G(DA),$G(DA(1)) K:'$$POA501^DGPTFUT1(X,DA(1),DA,0,13) X
"^DD",45,45.02,82.08,3)
Apply the Present on Admission (POA) indicator for ICD 8.
"^DD",45,45.02,82.08,5,1,0)
45.02^13^2
"^DD",45,45.02,82.08,21,0)
^.001^11^11^3121004^^^
"^DD",45,45.02,82.08,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 8 (#13) field.
"^DD",45,45.02,82.08,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.08,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.08,21,4,0)
 
"^DD",45,45.02,82.08,21,5,0)
  Y = present on the time of inpatient admission; 
"^DD",45,45.02,82.08,21,6,0)
  N = not present on the time of inpatient admission; 
"^DD",45,45.02,82.08,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.08,21,8,0)
      present on admission; 
"^DD",45,45.02,82.08,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.08,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.08,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.08,23,0)
^.001^1^1^3121004^^^
"^DD",45,45.02,82.08,23,1,0)
 
"^DD",45,45.02,82.08,"DT")
3150820
"^DD",45,45.02,82.09,0)
POA FOR ICD 9^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;9^I X]"",$G(DA),$G(DA(1)) K:'$$POA501^DGPTFUT1(X,DA(1),DA,0,14) X
"^DD",45,45.02,82.09,3)
Apply the Present on Admission (POA) indicator for ICD 9.
"^DD",45,45.02,82.09,5,1,0)
45.02^14^2
"^DD",45,45.02,82.09,21,0)
^.001^11^11^3121004^^
"^DD",45,45.02,82.09,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 9 (#14) field.
"^DD",45,45.02,82.09,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.09,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.09,21,4,0)
 
"^DD",45,45.02,82.09,21,5,0)
  Y = present on the time of inpatient admission; 
"^DD",45,45.02,82.09,21,6,0)
  N = not present on the time of inpatient admission; 
"^DD",45,45.02,82.09,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.09,21,8,0)
      present on admission; 
"^DD",45,45.02,82.09,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.09,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.09,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.09,23,0)
^.001^1^1^3121004^^
"^DD",45,45.02,82.09,23,1,0)
 
"^DD",45,45.02,82.09,"DT")
3150820
"^DD",45,45.02,82.1,0)
POA FOR ICD 10^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;10^I X]"",$G(DA),$G(DA(1)) K:'$$POA501^DGPTFUT1(X,DA(1),DA,0,15) X
"^DD",45,45.02,82.1,3)
Apply the Present on Admission (POA) indicator for ICD 10.
"^DD",45,45.02,82.1,5,1,0)
45.02^15^2
"^DD",45,45.02,82.1,21,0)
^.001^11^11^3121004^^
"^DD",45,45.02,82.1,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 10 (#15) field.
"^DD",45,45.02,82.1,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.1,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.1,21,4,0)
 
"^DD",45,45.02,82.1,21,5,0)
  Y = present on the time of inpatient admission; 
"^DD",45,45.02,82.1,21,6,0)
  N = not present on the time of inpatient admission; 
"^DD",45,45.02,82.1,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.1,21,8,0)
      present on admission; 
"^DD",45,45.02,82.1,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.1,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.1,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.1,23,0)
^.001^1^1^3121004^^
"^DD",45,45.02,82.1,23,1,0)
 
"^DD",45,45.02,82.1,"DT")
3150820
"^DD",45,45.02,82.11,0)
POA FOR ICD 11^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;11^I X]"",$G(DA),$G(DA(1)) K:'$$POA501^DGPTFUT1(X,DA(1),DA,81,1) X
"^DD",45,45.02,82.11,3)
Apply the Present on Admission (POA) indicator for ICD 11.
"^DD",45,45.02,82.11,5,1,0)
45.02^81.01^2
"^DD",45,45.02,82.11,21,0)
^.001^11^11^3140603^^
"^DD",45,45.02,82.11,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 11 field.
"^DD",45,45.02,82.11,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.11,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.11,21,4,0)
 
"^DD",45,45.02,82.11,21,5,0)
  Y = present on the time of inpatient admission; 
"^DD",45,45.02,82.11,21,6,0)
  N = not present on the time of inpatient admission; 
"^DD",45,45.02,82.11,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.11,21,8,0)
      present on admission; 
"^DD",45,45.02,82.11,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.11,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.11,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.11,23,0)
^.001^1^1^3140603^^
"^DD",45,45.02,82.11,23,1,0)
 
"^DD",45,45.02,82.11,"DT")
3150820
"^DD",45,45.02,82.12,0)
POA FOR ICD 12^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;12^I X]"",$G(DA),$G(DA(1)) K:'$$POA501^DGPTFUT1(X,DA(1),DA,81,2) X
"^DD",45,45.02,82.12,3)
Apply the Present on Admission (POA) indicator for ICD 12.
"^DD",45,45.02,82.12,5,1,0)
45.02^81.02^2
"^DD",45,45.02,82.12,21,0)
^.001^11^11^3140603^^
"^DD",45,45.02,82.12,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 12 field.
"^DD",45,45.02,82.12,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.12,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.12,21,4,0)
 
"^DD",45,45.02,82.12,21,5,0)
  Y = present on the time of inpatient admission; 
"^DD",45,45.02,82.12,21,6,0)
  N = not present on the time of inpatient admission; 
"^DD",45,45.02,82.12,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.12,21,8,0)
      present on admission; 
"^DD",45,45.02,82.12,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.12,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.12,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.12,23,0)
^.001^1^1^3140603^^
"^DD",45,45.02,82.12,23,1,0)
 
"^DD",45,45.02,82.12,"DT")
3150820
"^DD",45,45.02,82.13,0)
POA FOR ICD 13^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;13^I X]"",$G(DA),$G(DA(1)) K:'$$POA501^DGPTFUT1(X,DA(1),DA,81,3) X
"^DD",45,45.02,82.13,3)
Apply the Present on Admission (POA) indicator for ICD 13.
"^DD",45,45.02,82.13,5,1,0)
45.02^81.03^2
"^DD",45,45.02,82.13,21,0)
^.001^11^11^3140603^^
"^DD",45,45.02,82.13,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 13 field.
"^DD",45,45.02,82.13,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.13,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.13,21,4,0)
 
"^DD",45,45.02,82.13,21,5,0)
  Y = present on the time of inpatient admission; 
"^DD",45,45.02,82.13,21,6,0)
  N = not present on the time of inpatient admission; 
"^DD",45,45.02,82.13,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.13,21,8,0)
      present on admission; 
"^DD",45,45.02,82.13,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.13,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.13,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.13,23,0)
^.001^1^1^3140603^^
"^DD",45,45.02,82.13,23,1,0)
 
"^DD",45,45.02,82.13,"DT")
3150820
"^DD",45,45.02,82.14,0)
POA FOR ICD 14^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;14^I X]"",$G(DA),$G(DA(1)) K:'$$POA501^DGPTFUT1(X,DA(1),DA,81,4) X
"^DD",45,45.02,82.14,3)
Apply the Present on Admission (POA) indicator for ICD 14.
"^DD",45,45.02,82.14,5,1,0)
45.02^81.04^2
"^DD",45,45.02,82.14,21,0)
^.001^11^11^3140603^^
"^DD",45,45.02,82.14,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 14 field.
"^DD",45,45.02,82.14,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.14,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.14,21,4,0)
 
"^DD",45,45.02,82.14,21,5,0)
  Y = present on the time of inpatient admission; 
"^DD",45,45.02,82.14,21,6,0)
  N = not present on the time of inpatient admission; 
"^DD",45,45.02,82.14,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.14,21,8,0)
      present on admission; 
"^DD",45,45.02,82.14,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.14,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.14,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.14,23,0)
^.001^1^1^3140603^^
"^DD",45,45.02,82.14,23,1,0)
 
"^DD",45,45.02,82.14,"DT")
3150820
"^DD",45,45.02,82.15,0)
POA FOR ICD 15^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;15^I X]"",$G(DA),$G(DA(1)) K:'$$POA501^DGPTFUT1(X,DA(1),DA,81,5) X
"^DD",45,45.02,82.15,3)
Apply the Present on Admission (POA) indicator for ICD 15.
"^DD",45,45.02,82.15,5,1,0)
45.02^81.05^2
"^DD",45,45.02,82.15,21,0)
^.001^11^11^3140603^^
"^DD",45,45.02,82.15,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 15 field.
"^DD",45,45.02,82.15,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.15,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.15,21,4,0)
 
"^DD",45,45.02,82.15,21,5,0)
  Y = present on the time of inpatient admission; 
"^DD",45,45.02,82.15,21,6,0)
  N = not present on the time of inpatient admission; 
"^DD",45,45.02,82.15,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.15,21,8,0)
      present on admission; 
"^DD",45,45.02,82.15,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.15,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.15,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.15,23,0)
^.001^1^1^3140603^^
"^DD",45,45.02,82.15,23,1,0)
 
"^DD",45,45.02,82.15,"DT")
3150820
"^DD",45,45.02,82.16,0)
POA FOR ICD 16^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;16^I X]"",$G(DA),$G(DA(1)) K:'$$POA501^DGPTFUT1(X,DA(1),DA,81,6) X
"^DD",45,45.02,82.16,3)
Apply the Present on Admission (POA) indicator for ICD 16.
"^DD",45,45.02,82.16,5,1,0)
45.02^81.06^2
"^DD",45,45.02,82.16,21,0)
^.001^11^11^3140603^^
"^DD",45,45.02,82.16,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 16 field.
"^DD",45,45.02,82.16,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.16,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.16,21,4,0)
 
"^DD",45,45.02,82.16,21,5,0)
  Y = present on the time of inpatient admission; 
"^DD",45,45.02,82.16,21,6,0)
  N = not present on the time of inpatient admission; 
"^DD",45,45.02,82.16,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.16,21,8,0)
      present on admission; 
"^DD",45,45.02,82.16,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.16,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.16,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.16,23,0)
^.001^1^1^3140603^^
"^DD",45,45.02,82.16,23,1,0)
 
"^DD",45,45.02,82.16,"DT")
3150820
"^DD",45,45.02,82.17,0)
POA FOR ICD 17^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;17^I X]"",$G(DA),$G(DA(1)) K:'$$POA501^DGPTFUT1(X,DA(1),DA,81,7) X
"^DD",45,45.02,82.17,3)
Apply the Present on Admission (POA) indicator for ICD 17.
"^DD",45,45.02,82.17,5,1,0)
45.02^81.07^2
"^DD",45,45.02,82.17,21,0)
^.001^11^11^3140603^^
"^DD",45,45.02,82.17,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 17 field.
"^DD",45,45.02,82.17,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.17,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.17,21,4,0)
 
"^DD",45,45.02,82.17,21,5,0)
  Y = present on the time of inpatient admission; 
"^DD",45,45.02,82.17,21,6,0)
  N = not present on the time of inpatient admission; 
"^DD",45,45.02,82.17,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.17,21,8,0)
      present on admission; 
"^DD",45,45.02,82.17,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.17,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.17,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.17,23,0)
^.001^1^1^3140603^^
"^DD",45,45.02,82.17,23,1,0)
 
"^DD",45,45.02,82.17,"DT")
3150820
"^DD",45,45.02,82.18,0)
POA FOR ICD 18^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;18^I X]"",$G(DA),$G(DA(1)) K:'$$POA501^DGPTFUT1(X,DA(1),DA,81,8) X
"^DD",45,45.02,82.18,3)
Apply the Present on Admission (POA) indicator for ICD 18.
"^DD",45,45.02,82.18,5,1,0)
45.02^81.08^2
"^DD",45,45.02,82.18,21,0)
^.001^11^11^3140603^^
"^DD",45,45.02,82.18,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 18 field.
"^DD",45,45.02,82.18,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.18,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.18,21,4,0)
 
"^DD",45,45.02,82.18,21,5,0)
  Y = present on the time of inpatient admission; 
"^DD",45,45.02,82.18,21,6,0)
  N = not present on the time of inpatient admission; 
"^DD",45,45.02,82.18,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.18,21,8,0)
      present on admission; 
"^DD",45,45.02,82.18,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.18,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.18,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.18,23,0)
^.001^1^1^3140603^^
"^DD",45,45.02,82.18,23,1,0)
 
"^DD",45,45.02,82.18,"DT")
3150820
"^DD",45,45.02,82.19,0)
POA FOR ICD 19^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;19^I X]"",$G(DA),$G(DA(1)) K:'$$POA501^DGPTFUT1(X,DA(1),DA,81,9) X
"^DD",45,45.02,82.19,3)
Apply the Present on Admission (POA) indicator for ICD 19.
"^DD",45,45.02,82.19,5,1,0)
45.02^81.09^2
"^DD",45,45.02,82.19,21,0)
^.001^11^11^3140603^^
"^DD",45,45.02,82.19,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 19 field.
"^DD",45,45.02,82.19,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.19,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.19,21,4,0)
 
"^DD",45,45.02,82.19,21,5,0)
  Y = present on the time of inpatient admission; 
"^DD",45,45.02,82.19,21,6,0)
  N = not present on the time of inpatient admission; 
"^DD",45,45.02,82.19,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.19,21,8,0)
      present on admission; 
"^DD",45,45.02,82.19,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.19,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.19,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.19,23,0)
^.001^1^1^3140603^^
"^DD",45,45.02,82.19,23,1,0)
 
"^DD",45,45.02,82.19,"DT")
3150820
"^DD",45,45.02,82.2,0)
POA FOR ICD 20^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;20^I X]"",$G(DA),$G(DA(1)) K:'$$POA501^DGPTFUT1(X,DA(1),DA,81,10) X
"^DD",45,45.02,82.2,3)
Apply the Present on Admission (POA) indicator for ICD 20.
"^DD",45,45.02,82.2,5,1,0)
45.02^81.1^2
"^DD",45,45.02,82.2,21,0)
^.001^11^11^3140603^^
"^DD",45,45.02,82.2,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 20 field.
"^DD",45,45.02,82.2,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.2,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.2,21,4,0)
 
"^DD",45,45.02,82.2,21,5,0)
  Y = present on the time of inpatient admission; 
"^DD",45,45.02,82.2,21,6,0)
  N = not present on the time of inpatient admission; 
"^DD",45,45.02,82.2,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.2,21,8,0)
      present on admission; 
"^DD",45,45.02,82.2,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.2,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.2,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.2,23,0)
^.001^1^1^3140603^^
"^DD",45,45.02,82.2,23,1,0)
 
"^DD",45,45.02,82.2,"DT")
3150820
"^DD",45,45.02,82.21,0)
POA FOR ICD 21^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;21^I X]"",$G(DA),$G(DA(1)) K:'$$POA501^DGPTFUT1(X,DA(1),DA,81,11) X
"^DD",45,45.02,82.21,3)
Apply the Present on Admission (POA) indicator for ICD 21.
"^DD",45,45.02,82.21,5,1,0)
45.02^81.11^2
"^DD",45,45.02,82.21,21,0)
^.001^11^11^3140603^^
"^DD",45,45.02,82.21,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 21 field.
"^DD",45,45.02,82.21,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.21,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.21,21,4,0)
 
"^DD",45,45.02,82.21,21,5,0)
  Y = present on the time of inpatient admission; 
"^DD",45,45.02,82.21,21,6,0)
  N = not present on the time of inpatient admission; 
"^DD",45,45.02,82.21,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.21,21,8,0)
      present on admission; 
"^DD",45,45.02,82.21,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.21,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.21,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.21,23,0)
^.001^1^1^3140603^^
"^DD",45,45.02,82.21,23,1,0)
 
"^DD",45,45.02,82.21,"DT")
3150820
"^DD",45,45.02,82.22,0)
POA FOR ICD 22^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;22^I X]"",$G(DA),$G(DA(1)) K:'$$POA501^DGPTFUT1(X,DA(1),DA,81,12) X
"^DD",45,45.02,82.22,3)
Apply the Present on Admission (POA) indicator for ICD 22.
"^DD",45,45.02,82.22,5,1,0)
45.02^81.12^2
"^DD",45,45.02,82.22,21,0)
^.001^11^11^3140603^^
"^DD",45,45.02,82.22,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 22 field.
"^DD",45,45.02,82.22,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.22,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.22,21,4,0)
 
"^DD",45,45.02,82.22,21,5,0)
  Y = present on the time of inpatient admission; 
"^DD",45,45.02,82.22,21,6,0)
  N = not present on the time of inpatient admission; 
"^DD",45,45.02,82.22,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.22,21,8,0)
      present on admission; 
"^DD",45,45.02,82.22,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.22,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.22,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.22,23,0)
^.001^1^1^3140603^^
"^DD",45,45.02,82.22,23,1,0)
 
"^DD",45,45.02,82.22,"DT")
3150820
"^DD",45,45.02,82.23,0)
POA FOR ICD 23^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;23^I X]"",$G(DA),$G(DA(1)) K:'$$POA501^DGPTFUT1(X,DA(1),DA,81,13) X
"^DD",45,45.02,82.23,3)
Apply the Present on Admission (POA) indicator for ICD 23.
"^DD",45,45.02,82.23,5,1,0)
45.02^81.13^2
"^DD",45,45.02,82.23,21,0)
^.001^11^11^3140603^^
"^DD",45,45.02,82.23,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 23 field.
"^DD",45,45.02,82.23,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.23,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.23,21,4,0)
 
"^DD",45,45.02,82.23,21,5,0)
  Y = present on the time of inpatient admission; 
"^DD",45,45.02,82.23,21,6,0)
  N = not present on the time of inpatient admission; 
"^DD",45,45.02,82.23,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.23,21,8,0)
      present on admission; 
"^DD",45,45.02,82.23,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.23,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.23,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.23,23,0)
^.001^1^1^3140603^^
"^DD",45,45.02,82.23,23,1,0)
 
"^DD",45,45.02,82.23,"DT")
3150820
"^DD",45,45.02,82.24,0)
POA FOR ICD 24^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;24^I X]"",$G(DA),$G(DA(1)) K:'$$POA501^DGPTFUT1(X,DA(1),DA,81,14) X
"^DD",45,45.02,82.24,3)
Apply the Present on Admission (POA) indicator for ICD 24.
"^DD",45,45.02,82.24,5,1,0)
45.02^81.14^2
"^DD",45,45.02,82.24,21,0)
^.001^11^11^3140603^^
"^DD",45,45.02,82.24,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 24 field.
"^DD",45,45.02,82.24,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.24,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.24,21,4,0)
 
"^DD",45,45.02,82.24,21,5,0)
  Y = present on the time of inpatient admission; 
"^DD",45,45.02,82.24,21,6,0)
  N = not present on the time of inpatient admission; 
"^DD",45,45.02,82.24,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.24,21,8,0)
      present on admission; 
"^DD",45,45.02,82.24,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.24,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.24,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.24,23,0)
^.001^1^1^3140603^^
"^DD",45,45.02,82.24,23,1,0)
 
"^DD",45,45.02,82.24,"DT")
3150820
"^DD",45,45.02,82.25,0)
POA FOR ICD 25^SX^Y:Present on Admission;N:Not Present on Admission;U:Insufficient Docum to Present on Admission;W:Can't Determine if Present on Admission;^82;25^I X]"",$G(DA),$G(DA(1)) K:'$$POA501^DGPTFUT1(X,DA(1),DA,81,15) X
"^DD",45,45.02,82.25,3)
Apply the Present on Admission (POA) indicator for ICD 25.
"^DD",45,45.02,82.25,5,1,0)
45.02^81.15^2
"^DD",45,45.02,82.25,21,0)
^.001^11^11^3140603^^
"^DD",45,45.02,82.25,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 25 field.
"^DD",45,45.02,82.25,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.25,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.25,21,4,0)
 
"^DD",45,45.02,82.25,21,5,0)
  Y = present on the time of inpatient admission; 
"^DD",45,45.02,82.25,21,6,0)
  N = not present on the time of inpatient admission; 
"^DD",45,45.02,82.25,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.25,21,8,0)
      present on admission; 
"^DD",45,45.02,82.25,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.25,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.25,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.25,23,0)
^.001^1^1^3140603^^
"^DD",45,45.02,82.25,23,1,0)
 
"^DD",45,45.02,82.25,"DT")
3150820
"^DD",45,45.05,4,0)
PROCEDURE CODE 1^*P80.1'X^ICD0(^0;5^N DGIT S DGIT=5 D GETAPI^DGICDGT("DG PTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.05,4,1,0)
^.1
"^DD",45,45.05,4,1,1,0)
45.05^AP1^MUMPS
"^DD",45,45.05,4,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,4,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,4,3)
Enter the 1st procedure performed on this patient during this episode of care.
"^DD",45,45.05,4,21,0)
^.001^1^1^3120229^^^
"^DD",45,45.05,4,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,4,"DT")
3150820
"^DD",45,45.05,5,0)
PROCEDURE CODE 2^*P80.1'X^ICD0(^0;6^N DGIT S DGIT=5 D GETAPI^DGICDGT("DG PTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.05,5,1,0)
^.1
"^DD",45,45.05,5,1,1,0)
45.05^AP2^MUMPS
"^DD",45,45.05,5,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,5,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,5,3)
Enter the 2nd procedure performed on this patient during this episode of care.
"^DD",45,45.05,5,21,0)
^.001^1^1^3120229^^^
"^DD",45,45.05,5,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,5,"DT")
3150820
"^DD",45,45.05,6,0)
PROCEDURE CODE 3^*P80.1'X^ICD0(^0;7^N DGIT S DGIT=5 D GETAPI^DGICDGT("DG PTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.05,6,1,0)
^.1
"^DD",45,45.05,6,1,1,0)
45.05^AP3^MUMPS
"^DD",45,45.05,6,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,6,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,6,3)
Enter the 3rd procedure performed on this patient during this episode of care.
"^DD",45,45.05,6,21,0)
^.001^1^1^3120229^^
"^DD",45,45.05,6,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,6,"DT")
3150820
"^DD",45,45.05,7,0)
PROCEDURE CODE 4^*P80.1'X^ICD0(^0;8^N DGIT S DGIT=5 D GETAPI^DGICDGT("DG PTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.05,7,1,0)
^.1
"^DD",45,45.05,7,1,1,0)
45.05^AP4^MUMPS
"^DD",45,45.05,7,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,7,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,7,3)
Enter the 4th procedure performed on this patient during this episode of care.
"^DD",45,45.05,7,21,0)
^.001^1^1^3120229^^^^
"^DD",45,45.05,7,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,7,"DT")
3150820
"^DD",45,45.05,8,0)
PROCEDURE CODE 5^*P80.1'X^ICD0(^0;9^N DGIT S DGIT=5 D GETAPI^DGICDGT("DG PTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.05,8,1,0)
^.1
"^DD",45,45.05,8,1,1,0)
45.05^AP5^MUMPS
"^DD",45,45.05,8,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,8,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,8,3)
Enter the 5th procedure performed on this patient during this episode of care.
"^DD",45,45.05,8,21,0)
^.001^1^1^3120229^^^
"^DD",45,45.05,8,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,8,"DT")
3150820
"^DD",45,45.05,9,0)
PROCEDURE CODE 6^*P80.1'X^ICD0(^0;10^N DGIT S DGIT=5 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.05,9,1,0)
^.1
"^DD",45,45.05,9,1,1,0)
45.05^AP6^MUMPS
"^DD",45,45.05,9,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,9,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,9,1,1,"DT")
3140716
"^DD",45,45.05,9,3)
Enter the 6th procedure performed on this patient during this episode of care.
"^DD",45,45.05,9,21,0)
^^1^1^3140707^
"^DD",45,45.05,9,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,9,"DT")
3150820
"^DD",45,45.05,10,0)
PROCEDURE CODE 7^*P80.1'X^ICD0(^0;11^N DGIT S DGIT=5 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.05,10,1,0)
^.1
"^DD",45,45.05,10,1,1,0)
45.05^AP7^MUMPS
"^DD",45,45.05,10,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,10,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,10,1,1,"DT")
3140716
"^DD",45,45.05,10,3)
Enter the 7th procedure performed on this patient during this episode of care.
"^DD",45,45.05,10,21,0)
^^1^1^3140707^
"^DD",45,45.05,10,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,10,"DT")
3150820
"^DD",45,45.05,11,0)
PROCEDURE CODE 8^*P80.1'X^ICD0(^0;12^N DGIT S DGIT=5 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.05,11,1,0)
^.1
"^DD",45,45.05,11,1,1,0)
45.05^AP8^MUMPS
"^DD",45,45.05,11,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,11,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,11,1,1,"DT")
3140716
"^DD",45,45.05,11,3)
Enter the 8th procedure performed on this patient during this episode of care.
"^DD",45,45.05,11,21,0)
^^1^1^3140707^
"^DD",45,45.05,11,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,11,"DT")
3150820
"^DD",45,45.05,12,0)
PROCEDURE CODE 9^*P80.1'X^ICD0(^0;13^N DGIT S DGIT=5 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.05,12,1,0)
^.1
"^DD",45,45.05,12,1,1,0)
45.05^AP9^MUMPS
"^DD",45,45.05,12,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,12,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,12,1,1,"DT")
3140716
"^DD",45,45.05,12,3)
Enter the 9th procedure performed on this patient during this episode of care.
"^DD",45,45.05,12,21,0)
^^1^1^3140707^
"^DD",45,45.05,12,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,12,"DT")
3150820
"^DD",45,45.05,13,0)
PROCEDURE CODE 10^*P80.1'X^ICD0(^0;14^N DGIT S DGIT=5 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.05,13,1,0)
^.1
"^DD",45,45.05,13,1,1,0)
45.05^AP10^MUMPS
"^DD",45,45.05,13,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,13,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,13,1,1,"DT")
3140716
"^DD",45,45.05,13,3)
Enter the 10th procedure performed on this patient during this episode of care.
"^DD",45,45.05,13,21,0)
^^1^1^3140707^
"^DD",45,45.05,13,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,13,"DT")
3150820
"^DD",45,45.05,14,0)
PROCEDURE CODE 11^*P80.1'X^ICD0(^0;15^N DGIT S DGIT=5 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.05,14,1,0)
^.1
"^DD",45,45.05,14,1,1,0)
45.05^AP11^MUMPS
"^DD",45,45.05,14,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,14,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,14,1,1,"DT")
3140716
"^DD",45,45.05,14,3)
Enter the 11th procedure performed on this patient during this episode of care.
"^DD",45,45.05,14,21,0)
^^1^1^3140707^
"^DD",45,45.05,14,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,14,"DT")
3150820
"^DD",45,45.05,15,0)
PROCEDURE CODE 12^*P80.1'X^ICD0(^0;16^N DGIT S DGIT=5 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.05,15,1,0)
^.1
"^DD",45,45.05,15,1,1,0)
45.05^AP12^MUMPS
"^DD",45,45.05,15,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,15,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,15,1,1,"DT")
3140716
"^DD",45,45.05,15,3)
Enter the 12th procedure performed on this patient during this episode of care.
"^DD",45,45.05,15,21,0)
^^1^1^3140707^
"^DD",45,45.05,15,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,15,"DT")
3150820
"^DD",45,45.05,16,0)
PROCEDURE CODE 13^*P80.1'X^ICD0(^0;17^N DGIT S DGIT=5 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.05,16,1,0)
^.1
"^DD",45,45.05,16,1,1,0)
45.05^AP13^MUMPS
"^DD",45,45.05,16,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,16,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,16,1,1,"DT")
3140716
"^DD",45,45.05,16,3)
Enter the 13th procedure performed on this patient during this episode of care.
"^DD",45,45.05,16,21,0)
^^1^1^3140707^
"^DD",45,45.05,16,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,16,"DT")
3150820
"^DD",45,45.05,17,0)
PROCEDURE CODE 14^*P80.1'X^ICD0(^0;18^N DGIT S DGIT=5 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.05,17,1,0)
^.1
"^DD",45,45.05,17,1,1,0)
45.05^AP14^MUMPS
"^DD",45,45.05,17,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,17,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,17,1,1,"DT")
3140716
"^DD",45,45.05,17,3)
Enter the 14th procedure performed on this patient during this episode of care.
"^DD",45,45.05,17,21,0)
^^1^1^3140707^
"^DD",45,45.05,17,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,17,"DT")
3150820
"^DD",45,45.05,18,0)
PROCEDURE CODE 15^*P80.1'X^ICD0(^0;19^N DGIT S DGIT=5 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.05,18,1,0)
^.1
"^DD",45,45.05,18,1,1,0)
45.05^AP15^MUMPS
"^DD",45,45.05,18,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,18,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,18,1,1,"DT")
3140716
"^DD",45,45.05,18,3)
Enter the 15th procedure performed on this patient during this episode of care.
"^DD",45,45.05,18,21,0)
^^1^1^3140707^
"^DD",45,45.05,18,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,18,"DT")
3150820
"^DD",45,45.05,19,0)
PROCEDURE CODE 16^*P80.1'X^ICD0(^0;20^N DGIT S DGIT=5 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.05,19,1,0)
^.1
"^DD",45,45.05,19,1,1,0)
45.05^AP16^MUMPS
"^DD",45,45.05,19,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,19,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,19,1,1,"DT")
3140716
"^DD",45,45.05,19,3)
Enter the 16th procedure performed on this patient during this episode of care.
"^DD",45,45.05,19,21,0)
^^1^1^3140707^
"^DD",45,45.05,19,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,19,"DT")
3150820
"^DD",45,45.05,20,0)
PROCEDURE CODE 17^*P80.1'X^ICD0(^0;21^N DGIT S DGIT=5 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.05,20,1,0)
^.1
"^DD",45,45.05,20,1,1,0)
45.05^AP17^MUMPS
"^DD",45,45.05,20,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,20,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,20,1,1,"DT")
3140716
"^DD",45,45.05,20,3)
Enter the 17th procedure performed on this patient during this episode of care.
"^DD",45,45.05,20,21,0)
^^1^1^3140707^
"^DD",45,45.05,20,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,20,"DT")
3150820
"^DD",45,45.05,21,0)
PROCEDURE CODE 18^*P80.1'X^ICD0(^0;22^N DGIT S DGIT=5 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.05,21,1,0)
^.1
"^DD",45,45.05,21,1,1,0)
45.05^AP18^MUMPS
"^DD",45,45.05,21,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,21,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,21,1,1,"DT")
3140716
"^DD",45,45.05,21,3)
Enter the 18th procedure performed on this patient during this episode of care.
"^DD",45,45.05,21,21,0)
^^1^1^3140707^
"^DD",45,45.05,21,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,21,"DT")
3150820
"^DD",45,45.05,22,0)
PROCEDURE CODE 19^*P80.1'X^ICD0(^0;23^N DGIT S DGIT=5 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.05,22,1,0)
^.1
"^DD",45,45.05,22,1,1,0)
45.05^AP19^MUMPS
"^DD",45,45.05,22,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,22,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,22,1,1,"DT")
3140716
"^DD",45,45.05,22,3)
Enter the 19th procedure performed on this patient during this episode of care.
"^DD",45,45.05,22,21,0)
^^1^1^3140707^
"^DD",45,45.05,22,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,22,"DT")
3150820
"^DD",45,45.05,23,0)
PROCEDURE CODE 20^*P80.1'X^ICD0(^0;24^N DGIT S DGIT=5 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.05,23,1,0)
^.1
"^DD",45,45.05,23,1,1,0)
45.05^AP20^MUMPS
"^DD",45,45.05,23,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,23,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,23,1,1,"DT")
3140716
"^DD",45,45.05,23,3)
Enter the 20th procedure performed on this patient during this episode of care.
"^DD",45,45.05,23,21,0)
^^1^1^3140707^
"^DD",45,45.05,23,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,23,"DT")
3150820
"^DD",45,45.05,24,0)
PROCEDURE CODE 21^*P80.1'X^ICD0(^1;1^N DGIT S DGIT=5 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1",1)
"^DD",45,45.05,24,1,0)
^.1
"^DD",45,45.05,24,1,1,0)
45.05^AP21^MUMPS
"^DD",45,45.05,24,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,24,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,24,1,1,"DT")
3140716
"^DD",45,45.05,24,3)
Enter the 21st procedure performed on this patient during this episode of care.
"^DD",45,45.05,24,21,0)
^^1^1^3140707^
"^DD",45,45.05,24,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,24,"DT")
3150820
"^DD",45,45.05,25,0)
PROCEDURE CODE 22^*P80.1'X^ICD0(^1;2^N DGIT S DGIT=5 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1",1)
"^DD",45,45.05,25,1,0)
^.1
"^DD",45,45.05,25,1,1,0)
45.05^AP22^MUMPS
"^DD",45,45.05,25,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,25,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,25,1,1,"DT")
3140716
"^DD",45,45.05,25,3)
Enter the 22nd procedure performed on this patient during this episode of care.
"^DD",45,45.05,25,21,0)
^^1^1^3140707^
"^DD",45,45.05,25,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,25,"DT")
3150820
"^DD",45,45.05,26,0)
PROCEDURE CODE 23^*P80.1'X^ICD0(^1;3^N DGIT S DGIT=5 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1",1)
"^DD",45,45.05,26,1,0)
^.1
"^DD",45,45.05,26,1,1,0)
45.05^AP23^MUMPS
"^DD",45,45.05,26,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,26,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,26,1,1,"DT")
3140716
"^DD",45,45.05,26,3)
Enter the 23rd procedure performed on this patient during this episode of care.
"^DD",45,45.05,26,"DT")
3150820
"^DD",45,45.05,27,0)
PROCEDURE CODE 24^*P80.1'X^ICD0(^1;4^N DGIT S DGIT=5 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1",1)
"^DD",45,45.05,27,1,0)
^.1
"^DD",45,45.05,27,1,1,0)
45.05^AP24^MUMPS
"^DD",45,45.05,27,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,27,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,27,1,1,"DT")
3140716
"^DD",45,45.05,27,3)
Enter the 24th procedure performed on this patient during this episode of care.
"^DD",45,45.05,27,21,0)
^^1^1^3140707^
"^DD",45,45.05,27,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,27,"DT")
3150820
"^DD",45,45.05,28,0)
PROCEDURE CODE 25^*P80.1'X^ICD0(^1;5^N DGIT S DGIT=5 D GETAPI^DGICDGT("DGPTF","PROC",$G(DA(1)),"EN1",1)
"^DD",45,45.05,28,1,0)
^.1
"^DD",45,45.05,28,1,1,0)
45.05^AP25^MUMPS
"^DD",45,45.05,28,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,28,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,28,1,1,"DT")
3140716
"^DD",45,45.05,28,3)
Enter the 25th procedure performed on this patient during this episode of care.
"^DD",45,45.05,28,21,0)
^^1^1^3140707^
"^DD",45,45.05,28,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,28,"DT")
3150820
"^DD",45.64,45.64,0)
FIELD^^.03^3
"^DD",45.64,45.64,0,"DDA")
N
"^DD",45.64,45.64,0,"DT")
2921208
"^DD",45.64,45.64,0,"IX","B",45.64,.01)

"^DD",45.64,45.64,0,"NM","PTF AUSTIN ERROR CODES")

"^DD",45.64,45.64,0,"VRPK")
DG
"^DD",45.64,45.64,.01,0)
CODE^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",45.64,45.64,.01,.1)
ERROR CODE
"^DD",45.64,45.64,.01,1,0)
^.1
"^DD",45.64,45.64,.01,1,1,0)
45.64^B
"^DD",45.64,45.64,.01,1,1,1)
S ^DGP(45.64,"B",$E(X,1,30),DA)=""
"^DD",45.64,45.64,.01,1,1,2)
K ^DGP(45.64,"B",$E(X,1,30),DA)
"^DD",45.64,45.64,.01,3)
Answer must be 3-30 characters in length.
"^DD",45.64,45.64,.01,21,0)
^^2^2^2921208^
"^DD",45.64,45.64,.01,21,1,0)
This field contains the PTF Austin Error Codes. Each code begins with
"^DD",45.64,45.64,.01,21,2,0)
a digit cooresponding to the record that the error occured in.
"^DD",45.64,45.64,.01,"DT")
2921208
"^DD",45.64,45.64,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>70!($L(X)<3) X
"^DD",45.64,45.64,.02,3)
Answer must be 3-70 characters in length.
"^DD",45.64,45.64,.02,"DT")
2921208
"^DD",45.64,45.64,.03,0)
POSITION^NJ2,0^^0;3^K:+X'=X!(X>30)!(X<1)!(X?.E1"."1N.N) X
"^DD",45.64,45.64,.03,3)
Type a Number between 1 and 30, 0 Decimal Digits
"^DD",45.64,45.64,.03,"DT")
2921208
"^DIC",45.64,45.64,0)
PTF AUSTIN ERROR CODES^45.64
"^DIC",45.64,45.64,0,"GL")
^DGP(45.64,
"^DIC",45.64,45.64,"%",0)
^1.005^^0
"^DIC",45.64,45.64,"%D",0)
^^3^3^3150209^
"^DIC",45.64,45.64,"%D",1,0)
This file defines error codes, their meaning and position location in the 
"^DIC",45.64,45.64,"%D",2,0)
data segments that are transmitted to the Austin INformation Technology
"^DIC",45.64,45.64,"%D",3,0)
Center (AITC).
"^DIC",45.64,"B","PTF AUSTIN ERROR CODES",45.64)

**INSTALL NAME**
GMTS*2.7*111
"BLD",9665,0)
GMTS*2.7*111^HEALTH SUMMARY^0^3150820^y
"BLD",9665,1,0)
^^3^3^3141202^^
"BLD",9665,1,1,0)
This build will remediate certain GMTS component routines to comply with 
"BLD",9665,1,2,0)
the expanded fields added for the ICD-10 PTF Project (DG*5.3*884).  See 
"BLD",9665,1,3,0)
NPM entry for details.
"BLD",9665,4,0)
^9.64PA^^
"BLD",9665,6.3)
17
"BLD",9665,"ABPKG")
n
"BLD",9665,"KRN",0)
^9.67PA^779.2^20
"BLD",9665,"KRN",.4,0)
.4
"BLD",9665,"KRN",.401,0)
.401
"BLD",9665,"KRN",.402,0)
.402
"BLD",9665,"KRN",.403,0)
.403
"BLD",9665,"KRN",.5,0)
.5
"BLD",9665,"KRN",.84,0)
.84
"BLD",9665,"KRN",3.6,0)
3.6
"BLD",9665,"KRN",3.8,0)
3.8
"BLD",9665,"KRN",9.2,0)
9.2
"BLD",9665,"KRN",9.8,0)
9.8
"BLD",9665,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",9665,"KRN",9.8,"NM",1,0)
GMTSDGA^^0^B16655517
"BLD",9665,"KRN",9.8,"NM",2,0)
GMTSDGC1^^0^B21632270
"BLD",9665,"KRN",9.8,"NM",3,0)
GMTSDGC2^^0^B8062721
"BLD",9665,"KRN",9.8,"NM",4,0)
GMTSDGP^^0^B14004206
"BLD",9665,"KRN",9.8,"NM",5,0)
GMTSPXU1^^0^B24643576
"BLD",9665,"KRN",9.8,"NM","B","GMTSDGA",1)

"BLD",9665,"KRN",9.8,"NM","B","GMTSDGC1",2)

"BLD",9665,"KRN",9.8,"NM","B","GMTSDGC2",3)

"BLD",9665,"KRN",9.8,"NM","B","GMTSDGP",4)

"BLD",9665,"KRN",9.8,"NM","B","GMTSPXU1",5)

"BLD",9665,"KRN",19,0)
19
"BLD",9665,"KRN",19.1,0)
19.1
"BLD",9665,"KRN",101,0)
101
"BLD",9665,"KRN",409.61,0)
409.61
"BLD",9665,"KRN",771,0)
771
"BLD",9665,"KRN",779.2,0)
779.2
"BLD",9665,"KRN",870,0)
870
"BLD",9665,"KRN",8989.51,0)
8989.51
"BLD",9665,"KRN",8989.52,0)
8989.52
"BLD",9665,"KRN",8994,0)
8994
"BLD",9665,"KRN","B",.4,.4)

"BLD",9665,"KRN","B",.401,.401)

"BLD",9665,"KRN","B",.402,.402)

"BLD",9665,"KRN","B",.403,.403)

"BLD",9665,"KRN","B",.5,.5)

"BLD",9665,"KRN","B",.84,.84)

"BLD",9665,"KRN","B",3.6,3.6)

"BLD",9665,"KRN","B",3.8,3.8)

"BLD",9665,"KRN","B",9.2,9.2)

"BLD",9665,"KRN","B",9.8,9.8)

"BLD",9665,"KRN","B",19,19)

"BLD",9665,"KRN","B",19.1,19.1)

"BLD",9665,"KRN","B",101,101)

"BLD",9665,"KRN","B",409.61,409.61)

"BLD",9665,"KRN","B",771,771)

"BLD",9665,"KRN","B",779.2,779.2)

"BLD",9665,"KRN","B",870,870)

"BLD",9665,"KRN","B",8989.51,8989.51)

"BLD",9665,"KRN","B",8989.52,8989.52)

"BLD",9665,"KRN","B",8994,8994)

"BLD",9665,"QUES",0)
^9.62^^
"BLD",9665,"REQB",0)
^9.611^1^1
"BLD",9665,"REQB",1,0)
GMTS*2.7*101^2
"BLD",9665,"REQB","B","GMTS*2.7*101",1)

"MBREQ")
0
"PKG",240,-1)
1^1
"PKG",240,0)
HEALTH SUMMARY^GMTS^Integrated Health Summary Tools
"PKG",240,22,0)
^9.49I^1^1
"PKG",240,22,1,0)
2.7^2951020^2960313
"PKG",240,22,1,"PAH",1,0)
111^3150820^520736451
"PKG",240,22,1,"PAH",1,1,0)
^^3^3^3150820
"PKG",240,22,1,"PAH",1,1,1,0)
This build will remediate certain GMTS component routines to comply with 
"PKG",240,22,1,"PAH",1,1,2,0)
the expanded fields added for the ICD-10 PTF Project (DG*5.3*884).  See 
"PKG",240,22,1,"PAH",1,1,3,0)
NPM entry for details.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","GMTSDGA")
0^1^B16655517
"RTN","GMTSDGA",1,0)
GMTSDGA ; SLC/MKB,KER/NDBI - Admissions for HS ;06/25/15  15:47
"RTN","GMTSDGA",2,0)
 ;;2.7;Health Summary;**28,49,71,101,111**;Oct 20, 1995;Build 17
"RTN","GMTSDGA",3,0)
 ;
"RTN","GMTSDGA",4,0)
 ; External Reference
"RTN","GMTSDGA",5,0)
 ;   ICR  5699  $$ICDDATA^ICDXCODE
"RTN","GMTSDGA",6,0)
 ;   ICR    17  ^DGPM("ATID"
"RTN","GMTSDGA",7,0)
 ;   ICR  1372  ^DGPT(
"RTN","GMTSDGA",8,0)
 ;   ICR  2929  DSP^A7RHSM
"RTN","GMTSDGA",9,0)
 ;   ICR  2929  LST^A7RHSM
"RTN","GMTSDGA",10,0)
 ;   ICR   512  ^DGPMLOS
"RTN","GMTSDGA",11,0)
 ;   ICR 10061  IN5^VADPT
"RTN","GMTSDGA",12,0)
 ;   ICR 10061  KVAR^VADPT
"RTN","GMTSDGA",13,0)
 ;
"RTN","GMTSDGA",14,0)
ENAD ; Gets Admission Information
"RTN","GMTSDGA",15,0)
 S TT=1,FLGDX=0,FLGDC=0
"RTN","GMTSDGA",16,0)
 D PATINFO Q
"RTN","GMTSDGA",17,0)
ENDC ; Discharge Information
"RTN","GMTSDGA",18,0)
 S TT=3,FLGDC=1,FLGDX=0
"RTN","GMTSDGA",19,0)
 D PATINFO Q
"RTN","GMTSDGA",20,0)
ENDX ; PTF Discharge Diagnosis
"RTN","GMTSDGA",21,0)
 S TT=3,FLGDX=1,FLGDC=0
"RTN","GMTSDGA",22,0)
 D PATINFO Q
"RTN","GMTSDGA",23,0)
ENTS ; Treating Speciality Information
"RTN","GMTSDGA",24,0)
 S TT=6,FLGDX=0,FLGDC=0
"RTN","GMTSDGA",25,0)
 D PATINFO Q
"RTN","GMTSDGA",26,0)
ENTR ; Transfers
"RTN","GMTSDGA",27,0)
 S TT=2,FLGDX=0,FLGDC=0
"RTN","GMTSDGA",28,0)
 D PATINFO Q
"RTN","GMTSDGA",29,0)
PATINFO ; Patient Information
"RTN","GMTSDGA",30,0)
 S VA200=1 K DIQ
"RTN","GMTSDGA",31,0)
 I $D(GMTSNDM),GMTSNDM>0 S CNTR=GMTSNDM
"RTN","GMTSDGA",32,0)
 E  S CNTR=100
"RTN","GMTSDGA",33,0)
 S GMC=-1,GMN="",ADM=GMTS1,FLAG=0
"RTN","GMTSDGA",34,0)
 I TT=1 D FADM^GMTSDGA2
"RTN","GMTSDGA",35,0)
 D:$$ROK^GMTSU("A7RHSM")&($$NDBI^GMTSU) LST^A7RHSM(DFN,.A7RHS)
"RTN","GMTSDGA",36,0)
 F  S ADM=$O(^DGPM("ATID"_TT,DFN,ADM)) D:$$ROK^GMTSU("A7RHSM")&($$NDBI^GMTSU) DSP^A7RHSM(ADM) Q:('ADM!(ADM>GMTS2)!($D(GMTSQIT)))  D GET Q:$D(GMTSQIT)!($G(CNTR)<0)
"RTN","GMTSDGA",37,0)
 D KILLADM K:$$NDBI^GMTSU A7RHS
"RTN","GMTSDGA",38,0)
 Q
"RTN","GMTSDGA",39,0)
GET ; Admission Data
"RTN","GMTSDGA",40,0)
 N VAHOW
"RTN","GMTSDGA",41,0)
 S ADA=$O(^DGPM("ATID"_TT,DFN,ADM,0)) Q:'ADA
"RTN","GMTSDGA",42,0)
 S CNTR=CNTR-1 I CNTR<0 Q
"RTN","GMTSDGA",43,0)
 S VAIP("E")=ADA D IN5^VADPT
"RTN","GMTSDGA",44,0)
 S (X,ADATE)=+VAIP(3) D REGDT4^GMTSU S ADT=X
"RTN","GMTSDGA",45,0)
 K DGPMIFN S:TT=1 DGPMIFN=ADA S:TT'=1 DGPMIFN=VAIP(13)
"RTN","GMTSDGA",46,0)
 S GMC=2
"RTN","GMTSDGA",47,0)
 D CONTGET
"RTN","GMTSDGA",48,0)
 S LIN=$S(TT=2:"TROUT^GMTSDGA1",FLGDX:"DXOUT^GMTSDGA1",FLGDC:"DCOUT^GMTSDGA1",TT=6:"TSOUT^GMTSDGA2",TT=1:"ADOUT^GMTSDGA1") D @LIN
"RTN","GMTSDGA",49,0)
 K ICD(ADM)
"RTN","GMTSDGA",50,0)
 Q
"RTN","GMTSDGA",51,0)
CONTGET ; ICD and LOS info only needed for certain MAS components
"RTN","GMTSDGA",52,0)
 Q:TT=2  Q:TT=6  N ICDX,ICDI I DGPMIFN D ^DGPMLOS S LOS=+X
"RTN","GMTSDGA",53,0)
 N GMTSDATE,GMTSTEMP,GMTSTAB S GMTSTEMP="",GMTSTAB="  "
"RTN","GMTSDGA",54,0)
 S PTF=$S($D(VAIP(12)):VAIP(12),1:"") Q:PTF=""  Q:'$D(^DGPT(PTF,70))
"RTN","GMTSDGA",55,0)
 S ICD=^DGPT(PTF,70)
"RTN","GMTSDGA",56,0)
 S GMTSDATE=+$P(ICD,U) I $G(GMTSDATE)="" S GMTSDATE=DT
"RTN","GMTSDGA",57,0)
 S ICDI=+$P(ICD,U,11) I ICDI>0 D
"RTN","GMTSDGA",58,0)
 . S ICDX=$$CODESYS^GMTSPXU1(ICDI,80)
"RTN","GMTSDGA",59,0)
 . I $P($G(ICDX),U)=-1 D  Q
"RTN","GMTSDGA",60,0)
 .. S ICD(ADM,1,80,ICDI,.01)=$J(" ",38)_$P($G(ICDX),"^",2)
"RTN","GMTSDGA",61,0)
 .. S ICD(ADM,1,80,ICDI,3)=""
"RTN","GMTSDGA",62,0)
 . S ICD(ADM,1,80,ICDI,.01)=GMTSTAB_$P(ICDX,U)_"("_$P(ICDX,U,2)_")"
"RTN","GMTSDGA",63,0)
 . S GMTSTEMP=$$VLT^ICDEX(80,ICDI,GMTSDATE)
"RTN","GMTSDGA",64,0)
 . S ICD(ADM,1,80,ICDI,3)=GMTSTEMP
"RTN","GMTSDGA",65,0)
 S ICDI=+$P(ICD,U,10) I ICDI>0 D
"RTN","GMTSDGA",66,0)
 . S ICDX=$$CODESYS^GMTSPXU1(ICDI,80)
"RTN","GMTSDGA",67,0)
 . I $P($G(ICDX),U)=-1 D  Q
"RTN","GMTSDGA",68,0)
 .. S ICD(ADM,1,80,ICDI,.01)=$J(" ",38)_$P($G(ICDX),"^",2)
"RTN","GMTSDGA",69,0)
 .. S ICD(ADM,1,80,ICDI,3)=""
"RTN","GMTSDGA",70,0)
 . S ICD(ADM,1,80,ICDI,.01)=GMTSTAB_$P(ICDX,U)_"("_$P(ICDX,U,2)_")"
"RTN","GMTSDGA",71,0)
 . S GMTSTEMP=$$VLT^ICDEX(80,ICDI,GMTSDATE)
"RTN","GMTSDGA",72,0)
 . S ICD(ADM,1,80,ICDI,3)=GMTSTEMP
"RTN","GMTSDGA",73,0)
 F GMTSI=16:1:24 S ICDI=+$P(ICD,U,GMTSI) I ICDI>0 D
"RTN","GMTSDGA",74,0)
 . S ICDX=$$CODESYS^GMTSPXU1(ICDI,80)
"RTN","GMTSDGA",75,0)
 . I $P($G(ICDX),U)=-1 D  Q
"RTN","GMTSDGA",76,0)
 .. S ICD(ADM,(GMTSI-13),80,ICDI,.01)=$J(" ",38)_$P($G(ICDX),"^",2)
"RTN","GMTSDGA",77,0)
 .. S ICD(ADM,(GMTSI-13),80,ICDI,3)=""
"RTN","GMTSDGA",78,0)
 . S ICD(ADM,(GMTSI-13),80,ICDI,.01)=GMTSTAB_$P(ICDX,U)_"("_$P(ICDX,U,2)_")"
"RTN","GMTSDGA",79,0)
 . S GMTSTEMP=$$VLT^ICDEX(80,ICDI,GMTSDATE)
"RTN","GMTSDGA",80,0)
 . S ICD(ADM,(GMTSI-13),80,ICDI,3)=GMTSTEMP
"RTN","GMTSDGA",81,0)
 Q:'$D(^DGPT(PTF,71))
"RTN","GMTSDGA",82,0)
 S ICD=^DGPT(PTF,71)
"RTN","GMTSDGA",83,0)
 F GMTSI=1:1:15 S ICDI=+$P(ICD,U,GMTSI) I ICDI>0 D
"RTN","GMTSDGA",84,0)
 . S ICDX=$$CODESYS^GMTSPXU1(ICDI,80)
"RTN","GMTSDGA",85,0)
 . I $P($G(ICDX),U)=-1 D  Q
"RTN","GMTSDGA",86,0)
 .. S ICD(ADM,(GMTSI+11),80,ICDI,.01)=$J(" ",38)_$P($G(ICDX),"^",2)
"RTN","GMTSDGA",87,0)
 .. S ICD(ADM,(GMTSI+11),80,ICDI,3)=""
"RTN","GMTSDGA",88,0)
 . S ICD(ADM,(GMTSI+11),80,ICDI,.01)=GMTSTAB_$P(ICDX,U)_"("_$P(ICDX,U,2)_")"
"RTN","GMTSDGA",89,0)
 . S GMTSTEMP=$$VLT^ICDEX(80,ICDI,GMTSDATE)
"RTN","GMTSDGA",90,0)
 . S ICD(ADM,(GMTSI+11),80,ICDI,3)=GMTSTEMP
"RTN","GMTSDGA",91,0)
 Q
"RTN","GMTSDGA",92,0)
KILLADM ; Kill Admission variables
"RTN","GMTSDGA",93,0)
 D KVAR^VADPT
"RTN","GMTSDGA",94,0)
 K ADA,ADATE,ADT,BD,BDSC,DA,DIC,DDT,DP,DSPL,GMJ,GMJ1,OP,OPTR,FLAG,FLGDX,FLGDC,X,DR,GMI,GMTO,GMTNO,GMTSI,GMX,ADM,CNTR,GMC,GMZ,GMN,ICD,PTF,PTF70,PTFLG,LOS,II,DGPMIFN,IN,LIN,TI,TT,TS,SPEC
"RTN","GMTSDGA",95,0)
 Q
"RTN","GMTSDGC1")
0^2^B21632270
"RTN","GMTSDGC1",1,0)
GMTSDGC1 ; SLC/KER/SBW - Subroutines for Ext ADT Hist    ;06/25/15  15:47
"RTN","GMTSDGC1",2,0)
 ;;2.7;Health Summary;**5,35,47,71,101,111**;Oct 20, 1995;Build 17
"RTN","GMTSDGC1",3,0)
 ;
"RTN","GMTSDGC1",4,0)
 ; External References
"RTN","GMTSDGC1",5,0)
 ;   ICR  5699  $$ICDDATA^ICDXCODE
"RTN","GMTSDGC1",6,0)
 ;   ICR    17  ^DGPM(
"RTN","GMTSDGC1",7,0)
 ;   ICR  1372  ^DGPT( fields 71,73,75 Read w/Fileman
"RTN","GMTSDGC1",8,0)
 ;   ICR   512  ^DGPMLOS
"RTN","GMTSDGC1",9,0)
 ;   ICR 10015  EN^DIQ1 (file #45)
"RTN","GMTSDGC1",10,0)
 ;   ICR 10011  ^DIWP
"RTN","GMTSDGC1",11,0)
 ;
"RTN","GMTSDGC1",12,0)
OTHER(DFN,PTF,CODE,GMVAIP,MDA) ; Additional data to include
"RTN","GMTSDGC1",13,0)
 N LOS,ICD,DGPMIFN,GMI,GMX,NODIAG,GMTO,GMTNO,BD,BDSC,ATTN,WARD,AWS
"RTN","GMTSDGC1",14,0)
 N DP,DSPL,OP,OPTR
"RTN","GMTSDGC1",15,0)
 I CODE=1 D  Q  ;Other data for Admission entries
"RTN","GMTSDGC1",16,0)
 . Q:$G(GMVAIP("DN",1))'=""
"RTN","GMTSDGC1",17,0)
 . D GETDATA
"RTN","GMTSDGC1",18,0)
 . I $G(GMVAIP("MF"))]"" D CKP^GMTSUP Q:$D(GMTSQIT)  W ?12,"Adm. Diag: ",GMVAIP("MF")
"RTN","GMTSDGC1",19,0)
 . W ?64,"LOS: ",LOS,!
"RTN","GMTSDGC1",20,0)
 . Q:'$D(ICD)
"RTN","GMTSDGC1",21,0)
 . S GMI=0
"RTN","GMTSDGC1",22,0)
 . F  S GMI=$O(ICD(GMI)) Q:'GMI  D CKP^GMTSUP Q:$D(GMTSQIT)  S GMX="" F  S GMX=$O(ICD(GMI,80,GMX)) Q:'GMX  D NXTICD
"RTN","GMTSDGC1",23,0)
 I CODE=2 D  Q  ;Other data for Transfer entries
"RTN","GMTSDGC1",24,0)
 . N TRFAC
"RTN","GMTSDGC1",25,0)
 . S TRFAC=$P(^DGPM(MDA,0),U,5)
"RTN","GMTSDGC1",26,0)
 . I $P($G(GMVAIP("WL")),U,2)]"" D CKP^GMTSUP Q:$D(GMTSQIT)  W ?19,$S($P(VAIP("MT"),U,2)'["TO":"To ",1:""),$P(VAIP("WL"),U,2),$S($L(TRFAC):"  at "_TRFAC,1:""),!
"RTN","GMTSDGC1",27,0)
 I CODE=3 D  Q  ;Other data for Discharge entries
"RTN","GMTSDGC1",28,0)
 . ; Discharge data
"RTN","GMTSDGC1",29,0)
 . D GETDATA
"RTN","GMTSDGC1",30,0)
 . D CKP^GMTSUP Q:$D(GMTSQIT)  W ?11,"Bedsection: ",BDSC,?64,"LOS: ",LOS,!
"RTN","GMTSDGC1",31,0)
 . S NODIAG=1,GMI=0
"RTN","GMTSDGC1",32,0)
 . F  S GMI=$O(ICD(GMI)) Q:GMI'>0  S GMX=0 F  S GMX=$O(ICD(GMI,80,GMX)) Q:GMX'>0  D NXTICD
"RTN","GMTSDGC1",33,0)
 . I NODIAG D CKP^GMTSUP Q:$D(GMTSQIT)  D
"RTN","GMTSDGC1",34,0)
 . . W ?7,"Principal Diag: No discharge diagnosis available.",!
"RTN","GMTSDGC1",35,0)
 . D CKP^GMTSUP Q:$D(GMTSQIT)  W ?4,"Disposition Place: ",DSPL,!
"RTN","GMTSDGC1",36,0)
 . D CKP^GMTSUP Q:$D(GMTSQIT)  W ?4,"Outpat. Treatment: ",OPTR,!
"RTN","GMTSDGC1",37,0)
 . I 'GMTSNPG D CKP^GMTSUP Q:$D(GMTSQIT)  W !
"RTN","GMTSDGC1",38,0)
 I CODE=6 D  Q  ;Other data for Treating Specialty entries
"RTN","GMTSDGC1",39,0)
 . N DIWL,DIWF,DIWR,GMJ,GMJ1
"RTN","GMTSDGC1",40,0)
 . K ^UTILITY($J,"W")
"RTN","GMTSDGC1",41,0)
 . S DIWL=22,DIWR=78,DIWF="C56"
"RTN","GMTSDGC1",42,0)
 . I $D(^DGPM(MDA,"DX")) D
"RTN","GMTSDGC1",43,0)
 . . F GMJ=1:1:$P(^DGPM(MDA,"DX",0),"^",4) S X=^DGPM(MDA,"DX",GMJ,0) D ^DIWP
"RTN","GMTSDGC1",44,0)
 . I $D(^UTILITY($J,"W")) D
"RTN","GMTSDGC1",45,0)
 . . S GMJ=$O(^UTILITY($J,"W",0)) Q:'GMJ
"RTN","GMTSDGC1",46,0)
 . . D CKP^GMTSUP Q:$D(GMTSQIT)  W ?14,"TS Diag: "
"RTN","GMTSDGC1",47,0)
 . . S GMJ1=0
"RTN","GMTSDGC1",48,0)
 . . F  S GMJ1=$O(^UTILITY($J,"W",GMJ,GMJ1)) Q:'GMJ1  D CKP^GMTSUP Q:$D(GMTSQIT)  W ?23,^UTILITY($J,"W",GMJ,GMJ1,0),!
"RTN","GMTSDGC1",49,0)
 . K ^UTILITY($J,"W")
"RTN","GMTSDGC1",50,0)
 Q
"RTN","GMTSDGC1",51,0)
GETDATA ; Gets LOS, ICD and bedsection data
"RTN","GMTSDGC1",52,0)
 N DIC,DR,DA,DIQ,GMTSI,X,PTFA,GMTSDATE,ICDI,ICDX,GMTSTEMP,GMTSTAB
"RTN","GMTSDGC1",53,0)
 S DGPMIFN=$G(GMVAIP("AN")),GMTSTAB="  "
"RTN","GMTSDGC1",54,0)
 I DGPMIFN D ^DGPMLOS S LOS=+X
"RTN","GMTSDGC1",55,0)
 I '$D(^DGPT(PTF,70)) D  Q
"RTN","GMTSDGC1",56,0)
 . S (BDSC,DSPL,OPTR)="UNKNOWN"
"RTN","GMTSDGC1",57,0)
 S DIC=45,DA=+PTF,DR="71;73;75;",DIQ="PTFA(" D EN^DIQ1
"RTN","GMTSDGC1",58,0)
 S BDSC=$S(PTFA(45,+DA,71)]"":PTFA(45,+DA,71),1:"UNKNOWN")
"RTN","GMTSDGC1",59,0)
 S OPTR=$S(PTFA(45,+DA,73)]"":PTFA(45,+DA,73),1:"UNKNOWN")
"RTN","GMTSDGC1",60,0)
 S DSPL=$S(PTFA(45,+DA,75)]"":PTFA(45,+DA,75),1:"UNKNOWN")
"RTN","GMTSDGC1",61,0)
 S ICD=^DGPT(PTF,70),DIC=80,DR=".01;3"
"RTN","GMTSDGC1",62,0)
 S GMTSDATE=$P(ICD,U) I $G(GMTSDATE)="" S GMTSDATE=DT
"RTN","GMTSDGC1",63,0)
 S ICDI=+$P(ICD,U,10) I +ICDI>0 D
"RTN","GMTSDGC1",64,0)
 . S ICDX=$$CODESYS^GMTSPXU1(ICDI,80)
"RTN","GMTSDGC1",65,0)
 . I $P($G(ICDX),U)=-1 D  Q
"RTN","GMTSDGC1",66,0)
 . . S ICD(1,80,ICDI,.01)=$J(" ",38)_$P($G(ICDX),"^",2)
"RTN","GMTSDGC1",67,0)
 . . S ICD(1,80,ICDI,3)=""
"RTN","GMTSDGC1",68,0)
 . S ICD(1,80,ICDI,.01)=GMTSTAB_$P(ICDX,U)_"("_$P(ICDX,U,2)_")"
"RTN","GMTSDGC1",69,0)
 . S GMTSTEMP=$$VLT^ICDEX(80,ICDI,GMTSDATE)
"RTN","GMTSDGC1",70,0)
 . S ICD(1,80,ICDI,3)=GMTSTEMP
"RTN","GMTSDGC1",71,0)
 S ICDI=+$P(ICD,U,11) Q:+ICDI'>0
"RTN","GMTSDGC1",72,0)
 S ICDX=$$CODESYS^GMTSPXU1(ICDI,80)
"RTN","GMTSDGC1",73,0)
 I $P($G(ICDX),U)=-1 D  Q
"RTN","GMTSDGC1",74,0)
 . S ICD(2,80,ICDI,.01)=$J(" ",38)_$P($G(ICDX),"^",2)
"RTN","GMTSDGC1",75,0)
 . S ICD(2,80,ICDI,3)=""
"RTN","GMTSDGC1",76,0)
 S ICD(2,80,ICDI,.01)=GMTSTAB_$P(ICDX,U)_"("_$P(ICDX,U,2)_")"
"RTN","GMTSDGC1",77,0)
 S GMTSTEMP=$$VLT^ICDEX(80,ICDI,GMTSDATE)
"RTN","GMTSDGC1",78,0)
 S ICD(2,80,ICDI,3)=GMTSTEMP
"RTN","GMTSDGC1",79,0)
 F GMTSI=16:1:24 S ICDI=+$P(ICD,U,GMTSI) I ICDI>0 D  ;secondary diagnoses from 70 node
"RTN","GMTSDGC1",80,0)
 . S ICDX=$$CODESYS^GMTSPXU1(ICDI,80)
"RTN","GMTSDGC1",81,0)
 . I $P($G(ICDX),U)=-1 D  Q
"RTN","GMTSDGC1",82,0)
 . . S ICD((GMTSI-13),80,ICDI,.01)=$J(" ",38)_$P($G(ICDX),"^",2)
"RTN","GMTSDGC1",83,0)
 . . S ICD((GMTSI-13),80,ICDI,3)=""
"RTN","GMTSDGC1",84,0)
 . S ICD((GMTSI-13),80,ICDI,.01)=GMTSTAB_$P(ICDX,U)_"("_$P(ICDX,U,2)_")"
"RTN","GMTSDGC1",85,0)
 . S GMTSTEMP=$$VLT^ICDEX(80,ICDI,GMTSDATE)
"RTN","GMTSDGC1",86,0)
 . S ICD((GMTSI-13),80,ICDI,3)=GMTSTEMP
"RTN","GMTSDGC1",87,0)
 Q:'$D(^DGPT(PTF,71))
"RTN","GMTSDGC1",88,0)
 S ICD=ICD_U_^DGPT(PTF,71)
"RTN","GMTSDGC1",89,0)
 F GMTSI=1:1:15 S ICDI=+$P(ICD,U,GMTSI) I ICDI>0 D  ;secondary diagnoses from 71 node
"RTN","GMTSDGC1",90,0)
 . S ICDX=$$CODESYS^GMTSPXU1(ICDI,80)
"RTN","GMTSDGC1",91,0)
 . I $P($G(ICDX),U)=-1 D  Q
"RTN","GMTSDGC1",92,0)
 . . S ICD(ADM,(GMTSI+11),80,ICDI,.01)=$J(" ",38)_$P($G(ICDX),"^",2)
"RTN","GMTSDGC1",93,0)
 . . S ICD(ADM,(GMTSI+11),80,ICDI,3)=""
"RTN","GMTSDGC1",94,0)
 . S ICD(ADM,(GMTSI+11),80,ICDI,.01)=GMTSTAB_$P(ICDX,U)_"("_$P(ICDX,U,2)_")"
"RTN","GMTSDGC1",95,0)
 . S GMTSTEMP=$$VLT^ICDEX(80,ICDI,GMTSDATE)
"RTN","GMTSDGC1",96,0)
 . S ICD(ADM,(GMTSI+11),80,ICDI,3)=GMTSTEMP
"RTN","GMTSDGC1",97,0)
 Q
"RTN","GMTSDGC1",98,0)
NXTICD ; Print the next ICD
"RTN","GMTSDGC1",99,0)
 S (GMTO,GMTNO)="" S GMTO=$G(ICD(GMI,80,GMX,3)),GMTNO=$G(ICD(GMI,80,GMX,.01))
"RTN","GMTSDGC1",100,0)
 W:GMI=1 ?7,"Principal Diag: "
"RTN","GMTSDGC1",101,0)
 W:GMI=2 ?17,"DXLS: "
"RTN","GMTSDGC1",102,0)
 W:GMI=3 ?15,"ICD DX: "
"RTN","GMTSDGC1",103,0)
 D CKP^GMTSUP Q:$D(GMTSQIT)  W ?23,GMTO,?61,GMTNO,!
"RTN","GMTSDGC1",104,0)
 S NODIAG=0
"RTN","GMTSDGC1",105,0)
 Q
"RTN","GMTSDGC2")
0^3^B8062721
"RTN","GMTSDGC2",1,0)
GMTSDGC2 ; SLC/SBW,KER - Extended ADT Hist (cont) ;06/25/15  15:48
"RTN","GMTSDGC2",2,0)
 ;;2.7;Health Summary;**28,49,71,101,111**;Oct 20, 1995;Build 17
"RTN","GMTSDGC2",3,0)
 ;
"RTN","GMTSDGC2",4,0)
 ; External References
"RTN","GMTSDGC2",5,0)
 ;   ICR  1372  ^DGPT(
"RTN","GMTSDGC2",6,0)
 ;   ICR  5699  $$ICDDATA^ICDXCODE
"RTN","GMTSDGC2",7,0)
 ;
"RTN","GMTSDGC2",8,0)
ICDP(DFN,PTF) ; Module For History of PTF Procedures
"RTN","GMTSDGC2",9,0)
 Q:'$D(^DGPT(PTF,"P"))
"RTN","GMTSDGC2",10,0)
 N II,PRX,X,IX,GMP,GTA,O,O1,LN1,GMTSTAB
"RTN","GMTSDGC2",11,0)
 S II=0,GMTSTAB="  "
"RTN","GMTSDGC2",12,0)
 F  S II=$O(^DGPT(PTF,"P",II)) Q:'II  S PRX=^DGPT(PTF,"P",II,0)_U_$G(^DGPT(PTF,"P",II,1)),X=$P(PRX,U,1),IX=9999999-X D REGDT4^GMTSU D
"RTN","GMTSDGC2",13,0)
 . N GMTSDATE,GMTSTEMP S GMTSDATE=$P(^DGPT(PTF,70),U)
"RTN","GMTSDGC2",14,0)
 . S GMP(IX)="Procedure "_X F GTA=5:1:30 D
"RTN","GMTSDGC2",15,0)
 . . N ICDP,ICDI,ICDX Q:$P(PRX,U,GTA)=""
"RTN","GMTSDGC2",16,0)
 . . S ICDI=+($P(PRX,U,GTA)) Q:+ICDI'>0
"RTN","GMTSDGC2",17,0)
 . . S ICDX=$$CODESYS^GMTSPXU1(ICDI,80.1)
"RTN","GMTSDGC2",18,0)
 . . I $P($G(ICDX),U)=-1 S GMP(IX,GTA)=$J(" ",38)_$P($G(ICDX),"^",2) Q
"RTN","GMTSDGC2",19,0)
 . . S ICDP(80.1,ICDI,.01)=GMTSTAB_$P(ICDX,U)_"("_$P(ICDX,U,2)_")"
"RTN","GMTSDGC2",20,0)
 . . S GMTSTEMP=$$VLT^ICDEX(80.1,ICDI,$G(GMTSDATE))
"RTN","GMTSDGC2",21,0)
 . . S ICDP(80.1,ICDI,4)=GMTSTEMP
"RTN","GMTSDGC2",22,0)
 . . I $D(ICDP(80.1,ICDI)) D
"RTN","GMTSDGC2",23,0)
 . . . S GMP(IX,GTA)=ICDP(80.1,ICDI,4)_U_ICDP(80.1,ICDI,.01)
"RTN","GMTSDGC2",24,0)
 I $D(GMP) S O=0 F  S O=$O(GMP(O)) Q:O=""  D
"RTN","GMTSDGC2",25,0)
 . S O1=0,LN1=1
"RTN","GMTSDGC2",26,0)
 . F  S O1=$O(GMP(O,O1)) Q:O1=""  D CKP^GMTSUP Q:$D(GMTSQIT)  S:GMTSNPG LN1=1 W:LN1 ?2,GMP(O) W ?23,$P(GMP(O,O1),U),?61,$P(GMP(O,O1),U,2),! S LN1=0
"RTN","GMTSDGC2",27,0)
 Q
"RTN","GMTSDGC2",28,0)
ICDS(DFN,PTF) ; Module for history of PTF surgery episodes
"RTN","GMTSDGC2",29,0)
 Q:'$D(^DGPT(PTF,"S"))
"RTN","GMTSDGC2",30,0)
 N II,SURG,X,IX,GMS,GMA,O,O1,LN1,GMTSTAB
"RTN","GMTSDGC2",31,0)
 S II=0,GMTSTAB="  "
"RTN","GMTSDGC2",32,0)
 F  S II=$O(^DGPT(PTF,"S",II)) Q:'II  S SURG=^DGPT(PTF,"S",II,0)_U_$G(^DGPT(PTF,"S",II,1)),X=$P(SURG,U,1),IX=9999999-X D REGDT4^GMTSU D
"RTN","GMTSDGC2",33,0)
 . N GMTSDATE,GMTSTEMP S GMTSDATE=$P(^DGPT(PTF,70),U)
"RTN","GMTSDGC2",34,0)
 . ;   Load Surgery entries into GMS array in inverted sequence
"RTN","GMTSDGC2",35,0)
 . S GMS(IX)="  Surgery "_X F GMA=8:1:32 D
"RTN","GMTSDGC2",36,0)
 . . ;   Surgery Line
"RTN","GMTSDGC2",37,0)
 . . N ICDS,ICDI,ICDX
"RTN","GMTSDGC2",38,0)
 . . S ICDI=+($P(SURG,U,GMA)) Q:+ICDI'>0
"RTN","GMTSDGC2",39,0)
 . . S ICDX=$$CODESYS^GMTSPXU1(ICDI,80.1)
"RTN","GMTSDGC2",40,0)
 . . I $P($G(ICDX),U)=-1 S GMS(IX,GMA)=$J(" ",38)_$P($G(ICDX),U,2) Q
"RTN","GMTSDGC2",41,0)
 . . S ICDS(80.1,ICDI,.01)=GMTSTAB_$P(ICDX,U)_"("_$P(ICDX,U,2)_")"
"RTN","GMTSDGC2",42,0)
 . . S GMTSTEMP=$$VLT^ICDEX(80.1,ICDI,$G(GMTSDATE))
"RTN","GMTSDGC2",43,0)
 . . S ICDS(80.1,ICDI,4)=GMTSTEMP
"RTN","GMTSDGC2",44,0)
 . . I $D(ICDS(80.1,ICDI)) S GMS(IX,GMA)=ICDS(80.1,ICDI,4)_U_ICDS(80.1,ICDI,.01)
"RTN","GMTSDGC2",45,0)
 I $D(GMS) S O=0 F  S O=$O(GMS(O)) Q:O=""  D
"RTN","GMTSDGC2",46,0)
 . S O1=0,LN1=1
"RTN","GMTSDGC2",47,0)
 . F  S O1=$O(GMS(O,O1)) Q:O1=""  D CKP^GMTSUP Q:$D(GMTSQIT)  S:GMTSNPG LN1=1 W:LN1 ?2,GMS(O) W ?23,$P(GMS(O,O1),U),?61,$P(GMS(O,O1),U,2),! S LN1=0
"RTN","GMTSDGC2",48,0)
 Q
"RTN","GMTSDGP")
0^4^B14004206
"RTN","GMTSDGP",1,0)
GMTSDGP ; SLC/TRS,KER/NDBI - PTF Surgeries/Procedures ;06/25/15  15:48
"RTN","GMTSDGP",2,0)
 ;;2.7;Health Summary;**28,49,60,71,101,111**;Oct 20, 1995;Build 17
"RTN","GMTSDGP",3,0)
 ;
"RTN","GMTSDGP",4,0)
 ; External References
"RTN","GMTSDGP",5,0)
 ;   ICR  5699  $$ICDDATA^ICDXCODE
"RTN","GMTSDGP",6,0)
 ;   ICR  1372  ^DGPT(
"RTN","GMTSDGP",7,0)
 ;   ICR  1372  ^DGPT("B"
"RTN","GMTSDGP",8,0)
 ;   ICR  2929  OPC^A7RHSM
"RTN","GMTSDGP",9,0)
 ;   ICR  2929  PRC^A7RHSM
"RTN","GMTSDGP",10,0)
 ;
"RTN","GMTSDGP",11,0)
ENS ; Module For History of PTF Surgery Episodes
"RTN","GMTSDGP",12,0)
 I $D(GMTSNDM),GMTSNDM>0 S CNTR=GMTSNDM
"RTN","GMTSDGP",13,0)
 E  S CNTR=100
"RTN","GMTSDGP",14,0)
 S T1=GMTSEND,T2=GMTSBEG,GMCZ=0
"RTN","GMTSDGP",15,0)
 S PTF=0
"RTN","GMTSDGP",16,0)
 F  S PTF=$O(^DGPT("B",DFN,PTF)) Q:PTF=""  D ICDS
"RTN","GMTSDGP",17,0)
 D:$$ROK^GMTSU("A7RHSM")&($$NDBI^GMTSU) OPC^A7RHSM
"RTN","GMTSDGP",18,0)
 I $D(GMS) S O=0 F I=1:1 S O=$O(GMS(O)) Q:O=""  Q:'CNTR  S CNTR=CNTR-1 S O1=0,LN1=1 F I=1:1 S O1=$O(GMS(O,O1)) Q:O1=""  D CKP^GMTSUP Q:$D(GMTSQIT)  S:GMTSNPG LN1=1 W:LN1 GMS(O) W ?23,$P(GMS(O,O1),U),?61,$P(GMS(O,O1),U,2),! S LN1=0
"RTN","GMTSDGP",19,0)
 D KILLADM Q
"RTN","GMTSDGP",20,0)
ICDS ;   ICD Surgery
"RTN","GMTSDGP",21,0)
 N GMCZ,GMA,D0,DA,DR,DIC,II,IX,SURG,ZI,GMTSDATE Q:'$D(^DGPT(PTF,"S"))
"RTN","GMTSDGP",22,0)
 S II=0 F ZI=1:1 S II=$O(^DGPT(PTF,"S",II)) Q:'II  S SURG=^DGPT(PTF,"S",II,0)_U_$G(^DGPT(PTF,"S",II,1)),X=$P(SURG,U,1),IX=9999999-X I X>T2&(X<T1) D REGDT4^GMTSU D ICDS1
"RTN","GMTSDGP",23,0)
 Q
"RTN","GMTSDGP",24,0)
ICDS1 ;   Load Surgery entries into GMS array (inverted)
"RTN","GMTSDGP",25,0)
 S GMCZ=2 S GMS(IX)="  Surgery  "_X F GMA=8:1:32 D SGY
"RTN","GMTSDGP",26,0)
 Q
"RTN","GMTSDGP",27,0)
SGY ;   Surgery Line
"RTN","GMTSDGP",28,0)
 N ICDP,ICDI,ICDX,GMTSDATE,GMTSTEMP,GMTSTAB
"RTN","GMTSDGP",29,0)
 S GMTSDATE=$P(^DGPT(PTF,70),U),GMTSTAB="  "
"RTN","GMTSDGP",30,0)
 S ICDI=+$P(SURG,U,GMA) Q:ICDI'>0
"RTN","GMTSDGP",31,0)
 S ICDX=$$CODESYS^GMTSPXU1(ICDI,80.1)
"RTN","GMTSDGP",32,0)
 I $P($G(ICDX),U)=-1 S GMS(IX,GMA)=$J(" ",38)_$P($G(ICDX),"^",2) Q
"RTN","GMTSDGP",33,0)
 S ICDS(80.1,ICDI,.01)=GMTSTAB_$P(ICDX,U)_"("_$P(ICDX,U,2)_")"
"RTN","GMTSDGP",34,0)
 S GMTSTEMP=$$VLT^ICDEX(80.1,ICDI,$G(GMTSDATE))
"RTN","GMTSDGP",35,0)
 S ICDS(80.1,ICDI,4)=GMTSTEMP
"RTN","GMTSDGP",36,0)
 I $D(ICDS(80.1,ICDI)) D
"RTN","GMTSDGP",37,0)
 . S GMS(IX,GMA)=$G(ICDS(80.1,ICDI,4))_U_$G(ICDS(80.1,ICDI,.01))
"RTN","GMTSDGP",38,0)
 Q
"RTN","GMTSDGP",39,0)
 ;
"RTN","GMTSDGP",40,0)
ENP ; Module For History of PTF Procedures
"RTN","GMTSDGP",41,0)
 I $D(GMTSNDM),GMTSNDM>0 S CNTR=GMTSNDM
"RTN","GMTSDGP",42,0)
 E  S CNTR=100
"RTN","GMTSDGP",43,0)
 S T1=GMTSEND,T2=GMTSBEG,GMCZ=0
"RTN","GMTSDGP",44,0)
 S PTF=0
"RTN","GMTSDGP",45,0)
 F  S PTF=$O(^DGPT("B",DFN,PTF)) Q:PTF=""  D ICDP
"RTN","GMTSDGP",46,0)
 D:$$ROK^GMTSU("A7RHSM")&($$NDBI^GMTSU) PRC^A7RHSM
"RTN","GMTSDGP",47,0)
 I $D(GMP) S O=0 F I=1:1 S O=$O(GMP(O)) Q:O=""  Q:'CNTR  S CNTR=CNTR-1 S O1=0,LN1=1 F I=1:1 S O1=$O(GMP(O,O1)) Q:O1=""  D CKP^GMTSUP Q:$D(GMTSQIT)  S:GMTSNPG LN1=1 W:LN1 GMP(O) W ?23,$P(GMP(O,O1),U),?61,$P(GMP(O,O1),U,2),! S LN1=0
"RTN","GMTSDGP",48,0)
 D KILLADM Q
"RTN","GMTSDGP",49,0)
 Q
"RTN","GMTSDGP",50,0)
ICDP ;   ICD Procedures
"RTN","GMTSDGP",51,0)
 N D0,DA,DIC,DR,GMCZ,GTA,II,IX,PRX,ZI Q:'$D(^DGPT(PTF,"P"))
"RTN","GMTSDGP",52,0)
 S II=0 F ZI=1:1 S II=$O(^DGPT(PTF,"P",II)) Q:'II  S PRX=^DGPT(PTF,"P",II,0)_U_$G(^DGPT(PTF,"P",II,1)),X=$P(PRX,U,1),IX=9999999-X I X>T2&(X<T1) D REGDT4^GMTSU D ICDP1
"RTN","GMTSDGP",53,0)
 Q
"RTN","GMTSDGP",54,0)
ICDP1 ;   Load Procedure entries into GMP array (inverted)
"RTN","GMTSDGP",55,0)
 S GMCZ=2 S GMP(IX)="Procedure  "_X F GTA=5:1:29 D PXGY
"RTN","GMTSDGP",56,0)
 Q
"RTN","GMTSDGP",57,0)
PXGY ;   Procedure Line
"RTN","GMTSDGP",58,0)
 N ICDP,ICDI,ICDX,GMTSDATE,GMTSTEMP,GMTSTAB
"RTN","GMTSDGP",59,0)
 S GMTSDATE=$P(^DGPT(PTF,70),U),GMTSTAB="  "
"RTN","GMTSDGP",60,0)
 S ICDI=+$P(PRX,U,GTA) Q:ICDI'>0
"RTN","GMTSDGP",61,0)
 S ICDX=$$CODESYS^GMTSPXU1(ICDI,80.1)
"RTN","GMTSDGP",62,0)
 I $P($G(ICDX),U)=-1 S GMP(IX,GTA)=$J(" ",38)_$P($G(ICDX),"^",2) Q
"RTN","GMTSDGP",63,0)
 S ICDP(80.1,ICDI,.01)=GMTSTAB_$P(ICDX,U)_"("_$P(ICDX,U,2)_")"
"RTN","GMTSDGP",64,0)
 S GMTSTEMP=$$VLT^ICDEX(80.1,ICDI,$G(GMTSDATE))
"RTN","GMTSDGP",65,0)
 S ICDP(80.1,ICDI,4)=GMTSTEMP
"RTN","GMTSDGP",66,0)
 I $D(ICDP(80.1,ICDI)) D
"RTN","GMTSDGP",67,0)
 . S GMP(IX,GTA)=$G(ICDP(80.1,ICDI,4))_U_$G(ICDP(80.1,ICDI,.01))
"RTN","GMTSDGP",68,0)
 Q
"RTN","GMTSDGP",69,0)
 ;
"RTN","GMTSDGP",70,0)
KILLADM ; Kills Admission variables
"RTN","GMTSDGP",71,0)
 K CNTR,GMCZ,LN1,IX,X,ZA,N,ICD,ICD0,PTF,GMC,O,O1,GMS,T1,T2,SURG,SURGY,PRX,PRXY,DATE,D1,I,IMT,GMA,GTA,II,ZI,GMP
"RTN","GMTSDGP",72,0)
 K ICDP,ICDS
"RTN","GMTSDGP",73,0)
 Q
"RTN","GMTSPXU1")
0^5^B24643576
"RTN","GMTSPXU1",1,0)
GMTSPXU1 ; SLC/SBW,TC - PCE Utilities sub-routines ;06/25/15  15:51
"RTN","GMTSPXU1",2,0)
 ;;2.7;Health Summary;**10,37,71,86,101,111**;Oct 20, 1995;Build 17
"RTN","GMTSPXU1",3,0)
 ;
"RTN","GMTSPXU1",4,0)
 ; External References
"RTN","GMTSPXU1",5,0)
 ;   ICR  5699  $$ICDDATA,ICDDESC^ICDXCODE
"RTN","GMTSPXU1",6,0)
 ;   ICR  1995  $$CPT^ICPTCOD
"RTN","GMTSPXU1",7,0)
 ;   ICR  5679  $$IMPDATE^LEXU
"RTN","GMTSPXU1",8,0)
 ;   ICR 10026  ^DIR
"RTN","GMTSPXU1",9,0)
 ;   ICR 10011  ^DIWP
"RTN","GMTSPXU1",10,0)
 ;
"RTN","GMTSPXU1",11,0)
GETICDDX(GMTSICD,GMTSICF,GMMOD,GMTSDATE,GMTSCSYS) ; Entry point to get ICD data
"RTN","GMTSPXU1",12,0)
 N REC,CODE,NAME,DESC,ICDX,ICDI,GMTSICDA
"RTN","GMTSPXU1",13,0)
 S GMTSICD=$G(GMTSICD),GMTSICF=$G(GMTSICF),GMMOD=$G(GMMOD),GMTSDATE=$G(GMTSDATE,DT),GMTSCSYS=$G(GMTSCSYS)
"RTN","GMTSPXU1",14,0)
 S ICDX=$$ICDDATA^ICDXCODE(GMTSCSYS,+GMTSICD,GMTSDATE,"I")
"RTN","GMTSPXU1",15,0)
 S REC(80,GMTSICD,.01,"E")=$P(ICDX,"^",2)
"RTN","GMTSPXU1",16,0)
 S REC(80,GMTSICD,.01,"I")=$P(ICDX,"^",2)
"RTN","GMTSPXU1",17,0)
 S REC(80,GMTSICD,3,"E")=$P(ICDX,"^",4)
"RTN","GMTSPXU1",18,0)
 S REC(80,GMTSICD,3,"I")=$P(ICDX,"^",4)
"RTN","GMTSPXU1",19,0)
 S ICDI=$$ICDDESC^ICDXCODE(GMTSCSYS,$P(ICDX,"^",2),GMTSDATE,.GMTSICDA)
"RTN","GMTSPXU1",20,0)
 S REC(80,GMTSICD,10,"E")=$G(GMTSICDA(1))
"RTN","GMTSPXU1",21,0)
 S REC(80,GMTSICD,10,"I")=$G(GMTSICDA(1))
"RTN","GMTSPXU1",22,0)
 S CODE=REC(80,GMTSICD,.01,"I")
"RTN","GMTSPXU1",23,0)
 S NAME=REC(80,GMTSICD,3,"E")
"RTN","GMTSPXU1",24,0)
 S DESC=REC(80,GMTSICD,10,"E")
"RTN","GMTSPXU1",25,0)
 S:GMTSICF="L"!(GMTSICF["LONG TEXT")!(GMTSICF="") GMTSICD=CODE_"-"_DESC
"RTN","GMTSPXU1",26,0)
 S:GMTSICF="S"!(GMTSICF["SHORT TEXT") GMTSICD=CODE_"-"_NAME
"RTN","GMTSPXU1",27,0)
 S:GMTSICF="C"!(GMTSICF["CODE ONLY") GMTSICD=CODE
"RTN","GMTSPXU1",28,0)
 S:GMTSICF="T"!(GMTSICF["TEXT ONLY") GMTSICD=DESC
"RTN","GMTSPXU1",29,0)
 I $G(GMMOD)]"" S GMMOD=$P(GMMOD,","),GMTSICD=GMMOD_" "_GMTSICD
"RTN","GMTSPXU1",30,0)
 S:GMTSICF="N"!(GMTSICF["NONE") GMTSICD=""
"RTN","GMTSPXU1",31,0)
 Q
"RTN","GMTSPXU1",32,0)
 ;
"RTN","GMTSPXU1",33,0)
GETICDOP(GMTSICD,GMTSICF,GMMOD,GMTSDATE,GMTSSHCS) ; Entry point to get ICD data
"RTN","GMTSPXU1",34,0)
 S GMTSICD=$G(GMTSICD),GMTSICF=$G(GMTSICF),GMMOD=$G(GMMOD),GMTSDATE=$G(GMTSDATE,DT),GMTSSHCS=$G(GMTSSHCS,0)
"RTN","GMTSPXU1",35,0)
 N REC,CODE,NAME,DESC,ICDX,ICDI,GMTSICDA
"RTN","GMTSPXU1",36,0)
 S ICDX=$$ICDDATA^ICDXCODE("PROC",+GMTSICD,GMTSDATE)
"RTN","GMTSPXU1",37,0)
 S REC(80.1,GMTSICD,.01,"E")=$P(ICDX,"^",2)
"RTN","GMTSPXU1",38,0)
 S REC(80.1,GMTSICD,.01,"I")=$P(ICDX,"^",2)
"RTN","GMTSPXU1",39,0)
 S REC(80.1,GMTSICD,4,"E")=$P(ICDX,"^",5)
"RTN","GMTSPXU1",40,0)
 S REC(80.1,GMTSICD,4,"I")=$P(ICDX,"^",5)
"RTN","GMTSPXU1",41,0)
 S ICDI=$$ICDDESC^ICDXCODE("PROC",$P(ICDX,"^",2),GMTSDATE,.GMTSICDA)
"RTN","GMTSPXU1",42,0)
 S REC(80.1,GMTSICD,10,"E")=$G(GMTSICDA(1))
"RTN","GMTSPXU1",43,0)
 S REC(80.1,GMTSICD,10,"I")=$G(GMTSICDA(1))
"RTN","GMTSPXU1",44,0)
 S CODE=REC(80.1,GMTSICD,.01,"I")
"RTN","GMTSPXU1",45,0)
 S NAME=REC(80.1,GMTSICD,4,"E")
"RTN","GMTSPXU1",46,0)
 S DESC=REC(80.1,GMTSICD,10,"E")
"RTN","GMTSPXU1",47,0)
 I GMTSSHCS S CODE=CODE_"("_$$GETICDCD(GMTSDATE,"PROC")_")"
"RTN","GMTSPXU1",48,0)
 S:GMTSICF="L"!(GMTSICF="") GMTSICD=CODE_"-"_DESC
"RTN","GMTSPXU1",49,0)
 S:GMTSICF="S" GMTSICD=CODE_"-"_NAME
"RTN","GMTSPXU1",50,0)
 S:GMTSICF="C" GMTSICD=CODE
"RTN","GMTSPXU1",51,0)
 S:GMTSICF="T" GMTSICD=DESC
"RTN","GMTSPXU1",52,0)
 S:GMTSICF="N" GMTSICD=""
"RTN","GMTSPXU1",53,0)
 Q
"RTN","GMTSPXU1",54,0)
 ;
"RTN","GMTSPXU1",55,0)
GETCPT(GMTSCPT) ; Entry point to get CPT data
"RTN","GMTSPXU1",56,0)
 N ICPT S GMTSCPT=+($G(GMTSCPT)) Q:GMTSCPT=0 ""
"RTN","GMTSPXU1",57,0)
 S ICPT=$$CPT^ICPTCOD(+GMTSCPT),ICPT=$P(ICPT,"^",2)_"-"_$P(ICPT,"^",3)
"RTN","GMTSPXU1",58,0)
 Q ICPT
"RTN","GMTSPXU1",59,0)
 ;
"RTN","GMTSPXU1",60,0)
TXTFMT(GMTSICD,GMTSNARR,GMICL,GMTAB,DIWL,GMTSQTY,GMTSPRIM) ; Formats GMTSICD & GMTSNARR together
"RTN","GMTSPXU1",61,0)
 I GMTSICD="",GMTSNARR="" Q
"RTN","GMTSPXU1",62,0)
 N DIWR,DIWF,X
"RTN","GMTSPXU1",63,0)
 S DIWR=80-(GMICL+GMTAB)
"RTN","GMTSPXU1",64,0)
 K ^UTILITY($J,"W")
"RTN","GMTSPXU1",65,0)
 I $G(GMTSICD)]"" S X=GMTSICD S:$G(GMTSNARR)]"" X=X_"; "
"RTN","GMTSPXU1",66,0)
 I $G(GMTSNARR)]"" S X=$G(X)_GMTSNARR D
"RTN","GMTSPXU1",67,0)
 . I $G(GMTSPRIM)]"" S X=X_GMTSPRIM
"RTN","GMTSPXU1",68,0)
 . I $G(GMTSQTY)]"" S X=X_GMTSQTY
"RTN","GMTSPXU1",69,0)
 . D ^DIWP
"RTN","GMTSPXU1",70,0)
 I $G(GMTSNARR)']"" D
"RTN","GMTSPXU1",71,0)
 . I $G(GMTSQTY)]"" S X=$G(X)_GMTSQTY
"RTN","GMTSPXU1",72,0)
 . I $G(GMTSPRIM)]"" S X=X_GMTSPRIM
"RTN","GMTSPXU1",73,0)
 . D ^DIWP
"RTN","GMTSPXU1",74,0)
 Q
"RTN","GMTSPXU1",75,0)
 ;
"RTN","GMTSPXU1",76,0)
ORDERPRO(GMPROV,GMLEN) ; Re-order and format providers for visit
"RTN","GMTSPXU1",77,0)
 N GMCNT,GMTSP,GMNODE,GMP
"RTN","GMTSPXU1",78,0)
 S GMCNT=0
"RTN","GMTSPXU1",79,0)
 F GMP="P","S","Z" S GMTSP="" F  S GMTSP=$O(^TMP("PXHSV",$J,GMTSIVD,GMTSVDF,"P",GMP,GMTSP)) Q:GMTSP'>0  D
"RTN","GMTSPXU1",80,0)
 . S GMNODE=^TMP("PXHSV",$J,GMTSIVD,GMTSVDF,"P",GMP,GMTSP)
"RTN","GMTSPXU1",81,0)
 . Q:GMNODE']""
"RTN","GMTSPXU1",82,0)
 . S GMCNT=GMCNT+1
"RTN","GMTSPXU1",83,0)
 . S GMPROV(GMCNT)=$E($P(GMNODE,U),1,GMLEN-4)_$S(GMP="P"!(GMP="S"):" ("_GMP_")",1:"")
"RTN","GMTSPXU1",84,0)
 Q
"RTN","GMTSPXU1",85,0)
 ;
"RTN","GMTSPXU1",86,0)
 ; The following code segments are called from "ROUTINE" type
"RTN","GMTSPXU1",87,0)
 ; Menu Options to display items in a file
"RTN","GMTSPXU1",88,0)
 ;
"RTN","GMTSPXU1",89,0)
LM ;   Entry Point - for GMTS Measurement Panel
"RTN","GMTSPXU1",90,0)
 S GMTSLST="^GMT(142.7," G DSPLST
"RTN","GMTSPXU1",91,0)
 ;
"RTN","GMTSPXU1",92,0)
DSPLST ;   Common code for Health Summary MNX Lists
"RTN","GMTSPXU1",93,0)
 K DIR
"RTN","GMTSPXU1",94,0)
 I '$D(@(GMTSLST_"""B"")")) W !,"NO ",$P(@(GMTSLST_"0)"),U),"S DEFINED.",! Q
"RTN","GMTSPXU1",95,0)
 W @IOF,!!,"Existing ",$P(@(GMTSLST_"0)"),U),"S:",! S GMTSCNT=""
"RTN","GMTSPXU1",96,0)
CONT ;   Continue
"RTN","GMTSPXU1",97,0)
 F  S GMTSCNT=$O(@(GMTSLST_"""B"",GMTSCNT)")) Q:GMTSCNT=""  D  G:1'[$G(Y)&($L($G(Y))) QUIT
"RTN","GMTSPXU1",98,0)
 . N DIR K Y W !,?5,GMTSCNT I (IOSL-3)<$Y S DIR(0)="E" D
"RTN","GMTSPXU1",99,0)
 . . D ^DIR W @IOF
"RTN","GMTSPXU1",100,0)
 K DIR S DIR(0)="E" D ^DIR W !
"RTN","GMTSPXU1",101,0)
QUIT ;   Quit
"RTN","GMTSPXU1",102,0)
 K DIR,X,Y,GMTSLST,GMTSCNT
"RTN","GMTSPXU1",103,0)
 Q
"RTN","GMTSPXU1",104,0)
GETICDCD(DATE,TYPE) ;
"RTN","GMTSPXU1",105,0)
 ; TYPE is either "PROC" or "DIAG"
"RTN","GMTSPXU1",106,0)
 ; DATE is the date you want to check the coding system for
"RTN","GMTSPXU1",107,0)
 N RET,OUT
"RTN","GMTSPXU1",108,0)
 I TYPE="DIAG" S TYPE="10D"
"RTN","GMTSPXU1",109,0)
 I TYPE="PROC" S TYPE="10P"
"RTN","GMTSPXU1",110,0)
 S RET="ICD-"
"RTN","GMTSPXU1",111,0)
 S OUT=10
"RTN","GMTSPXU1",112,0)
 I DATE<$$IMPDATE^LEXU(TYPE) S OUT=9
"RTN","GMTSPXU1",113,0)
 I TYPE="10P"&(OUT=9) S OUT=OUT_" Proc"
"RTN","GMTSPXU1",114,0)
 I TYPE="10P"&(OUT=10) S OUT=OUT_"-PCS"
"RTN","GMTSPXU1",115,0)
 S RET=RET_OUT
"RTN","GMTSPXU1",116,0)
 Q RET
"RTN","GMTSPXU1",117,0)
 ;
"RTN","GMTSPXU1",118,0)
CODESYS(GMTSCODA,GMTSFILE) ; create coding system and label based on IEN
"RTN","GMTSPXU1",119,0)
 ;input
"RTN","GMTSPXU1",120,0)
 ;  GMTSCODA - IEN of code in either file 80 or 80.1
"RTN","GMTSPXU1",121,0)
 ;  GMTSFILE - 80 or 80.1, should be able to tell based on context when this API is called
"RTN","GMTSPXU1",122,0)
 ;ouput
"RTN","GMTSPXU1",123,0)
 ;  GMTSRET - code from 80 or 80.1 ^ coding system label
"RTN","GMTSPXU1",124,0)
 ; or -1 ^ error message
"RTN","GMTSPXU1",125,0)
 ; check for error condition using $P($G(GMTSRET),U)=-1 vice +$G(GMTSRET)=-1 as urnary operator
"RTN","GMTSPXU1",126,0)
 ; can interpret some procedure codes as scientific notation and trigger <MAXNUMBER> error (e.g. "3E1988X").
"RTN","GMTSPXU1",127,0)
 N GMTSCSYS,GMTSCODE,GMTSRET
"RTN","GMTSPXU1",128,0)
 S GMTSCSYS=$$CSI^ICDEX($G(GMTSFILE),$G(GMTSCODA)) ;Coding system for IEN or NULL
"RTN","GMTSPXU1",129,0)
 I $G(GMTSCSYS)="" S GMTSRET="-1^Error determining coding system" Q GMTSRET
"RTN","GMTSPXU1",130,0)
 S GMTSCSYS=$$SNAM^ICDEX($G(GMTSCSYS)) ;short versioned description or -1
"RTN","GMTSPXU1",131,0)
 I $G(GMTSCSYS)="-1" S GMTSRET="-1^Error determining coding system" Q GMTSRET
"RTN","GMTSPXU1",132,0)
 ;
"RTN","GMTSPXU1",133,0)
 S GMTSCODE=$$CODEC^ICDEX($G(GMTSFILE),$G(GMTSCODA)) ;Code from an IEN or -1^error message
"RTN","GMTSPXU1",134,0)
 I $P($G(GMTSCODE),U)=-1 S GMTSRET="-1^Error: "_$P($G(GMTSCODE),U,2) Q GMTSRET
"RTN","GMTSPXU1",135,0)
 S GMTSRET=$G(GMTSCODE)_U_$G(GMTSCSYS)
"RTN","GMTSPXU1",136,0)
 Q GMTSRET
"VER")
8.0^22.0
**INSTALL NAME**
IB*2.0*522
"BLD",9664,0)
IB*2.0*522^INTEGRATED BILLING^0^3150820^y
"BLD",9664,1,0)
^^1^1^3141212^
"BLD",9664,1,1,0)
Integrated Billing update for PTF Diagnosis and Procedure code expansion.
"BLD",9664,4,0)
^9.64PA^^
"BLD",9664,6)
4^
"BLD",9664,6.3)
11
"BLD",9664,"KRN",0)
^9.67PA^779.2^20
"BLD",9664,"KRN",.4,0)
.4
"BLD",9664,"KRN",.401,0)
.401
"BLD",9664,"KRN",.402,0)
.402
"BLD",9664,"KRN",.403,0)
.403
"BLD",9664,"KRN",.5,0)
.5
"BLD",9664,"KRN",.84,0)
.84
"BLD",9664,"KRN",3.6,0)
3.6
"BLD",9664,"KRN",3.8,0)
3.8
"BLD",9664,"KRN",9.2,0)
9.2
"BLD",9664,"KRN",9.8,0)
9.8
"BLD",9664,"KRN",9.8,"NM",0)
^9.68A^9^9
"BLD",9664,"KRN",9.8,"NM",1,0)
IBCD3^^0^B34628725
"BLD",9664,"KRN",9.8,"NM",2,0)
IBCD4^^0^B14091278
"BLD",9664,"KRN",9.8,"NM",3,0)
IBCRBG^^0^B68718544
"BLD",9664,"KRN",9.8,"NM",4,0)
IBCSC4A^^0^B26406207
"BLD",9664,"KRN",9.8,"NM",5,0)
IBCSC4B^^0^B14226360
"BLD",9664,"KRN",9.8,"NM",6,0)
IBCSC4D^^0^B76016238
"BLD",9664,"KRN",9.8,"NM",7,0)
IBCSC4E^^0^B48958417
"BLD",9664,"KRN",9.8,"NM",8,0)
IBCSC4F^^0^B34285009
"BLD",9664,"KRN",9.8,"NM",9,0)
IBCU7^^0^B113207672
"BLD",9664,"KRN",9.8,"NM","B","IBCD3",1)

"BLD",9664,"KRN",9.8,"NM","B","IBCD4",2)

"BLD",9664,"KRN",9.8,"NM","B","IBCRBG",3)

"BLD",9664,"KRN",9.8,"NM","B","IBCSC4A",4)

"BLD",9664,"KRN",9.8,"NM","B","IBCSC4B",5)

"BLD",9664,"KRN",9.8,"NM","B","IBCSC4D",6)

"BLD",9664,"KRN",9.8,"NM","B","IBCSC4E",7)

"BLD",9664,"KRN",9.8,"NM","B","IBCSC4F",8)

"BLD",9664,"KRN",9.8,"NM","B","IBCU7",9)

"BLD",9664,"KRN",19,0)
19
"BLD",9664,"KRN",19.1,0)
19.1
"BLD",9664,"KRN",101,0)
101
"BLD",9664,"KRN",409.61,0)
409.61
"BLD",9664,"KRN",771,0)
771
"BLD",9664,"KRN",779.2,0)
779.2
"BLD",9664,"KRN",870,0)
870
"BLD",9664,"KRN",8989.51,0)
8989.51
"BLD",9664,"KRN",8989.52,0)
8989.52
"BLD",9664,"KRN",8994,0)
8994
"BLD",9664,"KRN","B",.4,.4)

"BLD",9664,"KRN","B",.401,.401)

"BLD",9664,"KRN","B",.402,.402)

"BLD",9664,"KRN","B",.403,.403)

"BLD",9664,"KRN","B",.5,.5)

"BLD",9664,"KRN","B",.84,.84)

"BLD",9664,"KRN","B",3.6,3.6)

"BLD",9664,"KRN","B",3.8,3.8)

"BLD",9664,"KRN","B",9.2,9.2)

"BLD",9664,"KRN","B",9.8,9.8)

"BLD",9664,"KRN","B",19,19)

"BLD",9664,"KRN","B",19.1,19.1)

"BLD",9664,"KRN","B",101,101)

"BLD",9664,"KRN","B",409.61,409.61)

"BLD",9664,"KRN","B",771,771)

"BLD",9664,"KRN","B",779.2,779.2)

"BLD",9664,"KRN","B",870,870)

"BLD",9664,"KRN","B",8989.51,8989.51)

"BLD",9664,"KRN","B",8989.52,8989.52)

"BLD",9664,"KRN","B",8994,8994)

"BLD",9664,"QUES",0)
^9.62^^
"BLD",9664,"REQB",0)
^9.611^4^4
"BLD",9664,"REQB",1,0)
IB*2.0*461^2
"BLD",9664,"REQB",2,0)
IB*2.0*479^2
"BLD",9664,"REQB",3,0)
DG*5.3*884^2
"BLD",9664,"REQB",4,0)
IB*2.0*516^2
"BLD",9664,"REQB","B","DG*5.3*884",3)

"BLD",9664,"REQB","B","IB*2.0*461",1)

"BLD",9664,"REQB","B","IB*2.0*479",2)

"BLD",9664,"REQB","B","IB*2.0*516",4)

"MBREQ")
0
"PKG",230,-1)
1^1
"PKG",230,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",230,20,0)
^9.402P^1^1
"PKG",230,20,1,0)
2^^IBAXDR
"PKG",230,20,1,1)

"PKG",230,20,"B",2,1)

"PKG",230,22,0)
^9.49I^1^1
"PKG",230,22,1,0)
2.0^2940321^2940525
"PKG",230,22,1,"PAH",1,0)
522^3150820^520736459
"PKG",230,22,1,"PAH",1,1,0)
^^1^1^3150820
"PKG",230,22,1,"PAH",1,1,1,0)
Integrated Billing update for PTF Diagnosis and Procedure code expansion.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
9
"RTN","IBCD3")
0^1^B34628725
"RTN","IBCD3",1,0)
IBCD3 ;ALB/ARH - AUTOMATED BILLER (ADD NEW BILL - CREATE BILL ENTRY) ;9/5/93
"RTN","IBCD3",2,0)
 ;;2.0;INTEGRATED BILLING;**14,55,52,91,106,125,51,148,160,137,210,245,260,405,384,516,522**;21-MAR-94;Build 11
"RTN","IBCD3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCD3",4,0)
 ;
"RTN","IBCD3",5,0)
 ;Called by IBCD2,IBACUS2
"RTN","IBCD3",6,0)
 ;
"RTN","IBCD3",7,0)
EN(IBQUERY) ;
"RTN","IBCD3",8,0)
 N IBI,IBX,IBY,I,X,X1,X2,IBAC,IBCPY K IBDR,IBDR222 S IBAC=1
"RTN","IBCD3",9,0)
 S X=$P($T(WHERE),";;",2),X2=$P($T(WHERE+1),";;",2) F I=0:0 S I=$O(IB(I)) Q:'I  S X1=$P($E(X,$F(X,I)+1,999),";",1) S:X1="" X1=$P($E(X2,$F(X2,I)+1,999),";",1) I $D(IB(I))=1 S $P(IBDR($P(X1,"^",1)),"^",$P(X1,"^",2))=IB(I)
"RTN","IBCD3",10,0)
 F I=0,"C","M","M1","S","U","U1","U2" I $D(IBDR(I)) S ^DGCR(399,IBIFN,I)=IBDR(I)
"RTN","IBCD3",11,0)
 S $P(^DGCR(399,0),"^",3)=IBIFN,$P(^(0),"^",4)=$P(^(0),"^",4)+1
"RTN","IBCD3",12,0)
 S DIK="^DGCR(399,",DA=IBIFN D IX1^DIK K DA,DIK ; set cross-references
"RTN","IBCD3",13,0)
 ;
"RTN","IBCD3",14,0)
 ; Set the attending/rendering provider into provider multiple
"RTN","IBCD3",15,0)
 I $G(IB("PRV",.01))'="" D
"RTN","IBCD3",16,0)
 . S DIC("DR")="",I=.01
"RTN","IBCD3",17,0)
 . N IBV
"RTN","IBCD3",18,0)
 . ; Only file if the provider has an NPI.  otherwise it's not billable and would have to be removed from the claim later
"RTN","IBCD3",19,0)
 . I $$GETNPI^IBCEF73A($G(IB("PRV",.02)))]"" F  S I=$O(IB("PRV",I)) Q:'I  D
"RTN","IBCD3",20,0)
 .. I IB("PRV",I)="" Q
"RTN","IBCD3",21,0)
 .. S IBV(I)=IB("PRV",I),DIC("DR")=DIC("DR")_$S(DIC("DR")="":"",1:";")_I_"////^S X=IBV("_I_")"
"RTN","IBCD3",22,0)
 . S DIC="^DGCR(399,"_IBIFN_",""PRV"",",DIC(0)="L",DLAYGO=399,DA(1)=IBIFN,X=IB("PRV",.01)
"RTN","IBCD3",23,0)
 . K DO,DD D FILE^DICN K DO,DD,DLAYGO,DA,DIC
"RTN","IBCD3",24,0)
 ;
"RTN","IBCD3",25,0)
 ; Set the occurrence span codes for leave/pass days
"RTN","IBCD3",26,0)
 I $O(IB("OC",0)) D
"RTN","IBCD3",27,0)
 . N I,I1
"RTN","IBCD3",28,0)
 . S I1=0 F  S I1=$O(IB("OC",I1)) Q:'I1  D
"RTN","IBCD3",29,0)
 .. S I=0,DIC("DR")=""
"RTN","IBCD3",30,0)
 .. F  S I=$O(IB("OC",I1,I)) Q:'I  S DIC("DR")=DIC("DR")_$S(DIC("DR")="":"",1:";")_I_"////"_IB("OC",I1,I)
"RTN","IBCD3",31,0)
 .. S DIC="^DGCR(399,"_IBIFN_",""OC"",",DIC(0)="L",DLAYGO=399,DA(1)=IBIFN,DIC("P")=$$GETSPEC^IBEFUNC(399,41),X=IB("OC")
"RTN","IBCD3",32,0)
 .. K DO,DD D FILE^DICN K DO,DD,DLAYGO,DA,DIC
"RTN","IBCD3",33,0)
 ;
"RTN","IBCD3",34,0)
 ; file rx refills, default CPT and Dx if defined
"RTN","IBCD3",35,0)
 I $D(IB(362.4))>2 D  G END
"RTN","IBCD3",36,0)
 . N IBZ
"RTN","IBCD3",37,0)
 . S IBRX=0 F  S IBRX=$O(IB(362.4,IBRX)) Q:'IBRX  S IBY="" F  S IBY=$O(IB(362.4,IBRX,IBY)) Q:IBY=""  D
"RTN","IBCD3",38,0)
 .. S IBX=IB(362.4,IBRX,IBY) Q:IBX=""
"RTN","IBCD3",39,0)
 .. S IBZ=$$ADD^IBCSC5A($P(IBX,U),IBIFN,$P(IBX,U,4),$P(IBX,U,2),+IBRX,$P(IBX,U,3)_U_$P(IBX,U,5)_U_$P(IBX,U,6),IBY)
"RTN","IBCD3",40,0)
 ;
"RTN","IBCD3",41,0)
 ;file outpatient visit dates and find/store outpatient procedures and dx
"RTN","IBCD3",42,0)
 ;NOTE: If IBQUERY is defined at this point, it will be used to perform
"RTN","IBCD3",43,0)
 ;       the scan for outpatient procedures
"RTN","IBCD3",44,0)
 I '$$INPAT^IBCEF(IBIFN) D  G END
"RTN","IBCD3",45,0)
 . I $D(IB(43))>2 D
"RTN","IBCD3",46,0)
 .. S ^DGCR(399,IBIFN,"OP",0)="^399.043DA^" S IBX=0 F  S IBX=$O(IB(43,IBX)) Q:'IBX  D
"RTN","IBCD3",47,0)
 ... S DIC="^DGCR(399,"_IBIFN_",""OP"",",DIC(0)="L",DA(1)=IBIFN,(DINUM,X)=IBX,DLAYGO=399.043 K DD,DO D FILE^DICN K DIC,DA,DINUM,DO,DD,DLAYGO
"RTN","IBCD3",48,0)
 . ;
"RTN","IBCD3",49,0)
 . D VST^IBCCPT(.IBQUERY) I $D(^UTILITY($J,"CPT-CNT")) D
"RTN","IBCD3",50,0)
 .. N IBPRX
"RTN","IBCD3",51,0)
 .. S DIC("P")=$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCD3",52,0)
 .. S IBY=0 F  S IBY=$O(^UTILITY($J,"CPT-CNT",IBY)) Q:'IBY  S IBX=^(IBY) I '$P(IBX,U,6) D
"RTN","IBCD3",53,0)
 ... S IBPRX(+$P(IBX,U,8))=""
"RTN","IBCD3",54,0)
 ... S DIC="^DGCR(399,"_IBIFN_",""CP"",",DIC(0)="L",DA(1)=IBIFN,X=+IBX_";ICPT(",DLAYGO=399 K DD,DO D FILE^DICN K DO,DD,DLAYGO Q:Y'>0
"RTN","IBCD3",55,0)
 ... ;
"RTN","IBCD3",56,0)
 ... S IBCPY=+Y
"RTN","IBCD3",57,0)
 ... ;
"RTN","IBCD3",58,0)
 ... ; add dx to 362.3 for associations if they exist
"RTN","IBCD3",59,0)
 ... I $G(^UTILITY($J,"CPT-CNT",IBY,"DX")) D ADDDX^IBCCPT1(IBIFN,IBCPY,^("DX"),.IBDR) I $L($G(IBDR)) S IBDR=IBDR_";"
"RTN","IBCD3",60,0)
 ... ;
"RTN","IBCD3",61,0)
 ... ;
"RTN","IBCD3",62,0)
 ... S DR=$G(IBDR)_"1////"_$P(IBX,U,2)_$S(+$P(IBX,U,8):";18////"_+$P(IBX,U,8),1:"") K IBDR
"RTN","IBCD3",63,0)
 ... S DR=DR_$S(+$P(IBX,U,9):";6////"_+$P(IBX,U,9),1:"")_$S(+$P(IBX,U,5):";5////"_+$P(IBX,U,5),1:"")
"RTN","IBCD3",64,0)
 ... S DR=DR_$S(+$P(IBX,U,11):";20////"_+$P(IBX,U,11),1:"")
"RTN","IBCD3",65,0)
 ... S DIE=DIC,DA=+IBCPY D ^DIE K DIE,DIC,DA,DINUM,DO,DD
"RTN","IBCD3",66,0)
 ... I $P(IBX,U,10) D ADDMOD^IBCCPT(IBIFN,IBCPY,$P(IBX,U,10)) ;Modifiers
"RTN","IBCD3",67,0)
 .. I $O(IBPRX(""))=$O(IBPRX(""),-1),$O(IBPRX(0)) D
"RTN","IBCD3",68,0)
 ... ;If only 1 provider - make it the rendering
"RTN","IBCD3",69,0)
 ... S IB("PRV",.02)=+$O(IBPRX(0))_";VA(200,",IB("PRV",.01)=3
"RTN","IBCD3",70,0)
 . K DGCNT,V,IBOPV1,IBOPV2,I,DGDIV,I1,DGNOD,DGCPTS,I7,I2,DGCPT,^UTILITY($J,"CPT-CNT")
"RTN","IBCD3",71,0)
 . ;
"RTN","IBCD3",72,0)
 . D OPTDX^IBCSC4D(DFN,IB(151),IB(152),.IBDX) I +IBDX D  K IBDX
"RTN","IBCD3",73,0)
 .. S IBY=0 F  S IBY=$O(IBDX(IBY)) Q:IBY=""  S IBX=IBDX(IBY) I '$P(IBX,U,5) D
"RTN","IBCD3",74,0)
 ... I '$D(^DGCR(399,"AOPV",DFN,(+$P(IBX,U,4)\1),IBIFN)) Q
"RTN","IBCD3",75,0)
 ... S DIC("DR")=".02////"_IBIFN,DIC="^IBA(362.3,",DIC(0)="L",X=+IBX,DLAYGO=362.3 K DD,DO D FILE^DICN
"RTN","IBCD3",76,0)
 ... K DIE,DIC,DA,DLAYGO,DO,DD
"RTN","IBCD3",77,0)
 ;
"RTN","IBCD3",78,0)
 ;store inpatient diagnosis and procedures, default admit dx to first dx found
"RTN","IBCD3",79,0)
 I $$INPAT^IBCEF(IBIFN) D  G END
"RTN","IBCD3",80,0)
 . I $G(^TMP("IBDX",$J))=IB(.08) D  K ^TMP("IBDX",$J)
"RTN","IBCD3",81,0)
 .. N IBXDEF S IBXDEF=0
"RTN","IBCD3",82,0)
 .. S (IBI,IBX)="" F  S IBX=$O(^TMP("IBDX",$J,IBX)) Q:'IBX  S IBY=0 F  S IBY=$O(^TMP("IBDX",$J,IBX,IBY)) Q:'IBY  D
"RTN","IBCD3",83,0)
 ... S IBZ=^TMP("IBDX",$J,IBX,IBY) Q:($$ICD9^IBACSV(+IBZ)="")  S IBI=IBI+1
"RTN","IBCD3",84,0)
 ... S DIC("DR")=".02////"_IBIFN_";.03////"_IBI I $P(IBZ,U,3)'="" S DIC("DR")=DIC("DR")_";.04///"_$P(IBZ,U,3)
"RTN","IBCD3",85,0)
 ... S DIC="^IBA(362.3,",DIC(0)="L",X=+IBZ,DLAYGO=362.3 K DD,DO D FILE^DICN K DIE,DIC,DA,DLAYGO,DO,DD
"RTN","IBCD3",86,0)
 ... I Y>0,'IBXDEF S IBXDEF=1,DR="215////"_+IBZ,DIE="^DGCR(399,",DA=IBIFN D ^DIE
"RTN","IBCD3",87,0)
 . ;
"RTN","IBCD3",88,0)
 . D PTFPRDT^IBCSC4A(+IB(.08),IB(151),IB(152),9) I $D(^UTILITY($J,"IB")) D  K ^UTILITY($J,"IB")
"RTN","IBCD3",89,0)
 .. S ^DGCR(399,IBIFN,"CP",0)="^399.0304AVI^"
"RTN","IBCD3",90,0)
 .. S IBX=0 F  S IBX=$O(^UTILITY($J,"IB",IBX)) Q:'IBX  S IBY=0 F  S IBY=$O(^UTILITY($J,"IB",IBX,IBY)) Q:'IBY  D
"RTN","IBCD3",91,0)
 ... S IBZ=^UTILITY($J,"IB",IBX,IBY) Q:($$ICD0^IBACSV(+IBZ)="")  S IBI=$P(^UTILITY($J,"IB",IBX,1),U,2)
"RTN","IBCD3",92,0)
 ... S DIC="^DGCR(399,"_IBIFN_",""CP"",",DIC(0)="L",DA(1)=IBIFN,X=+IBZ_";ICD0(",DLAYGO=399.0304 K DD,DO D FILE^DICN
"RTN","IBCD3",93,0)
 ... I Y>0 S DIE=DIC,DA=+Y,DR="1////"_(IBI\1) D ^DIE K DIE,DIC,DA,DLAYGO,DO,DD
"RTN","IBCD3",94,0)
 ;
"RTN","IBCD3",95,0)
END S IBX="1^Billing Record #"_$P(^DGCR(399,+IBIFN,0),"^",1)_" established for "_$P($G(^DPT(IBDFN,0)),U,1)
"RTN","IBCD3",96,0)
 ;
"RTN","IBCD3",97,0)
 S IBAUTO=1,DGPTUPDT="" I '$G(IBCHTRN) D PROC^IBCU7A(IBIFN) D ^IBCU6 ; auto calculate/store revenue codes
"RTN","IBCD3",98,0)
 ;
"RTN","IBCD3",99,0)
Q K %,%DT,IBDR,X1,X2,X3,X4,Y,DGDIRA,DGDIRB,DGDIR0,DIR,DGRVRCAL,DIC,DA,DR,DINUM,DGPTUPDT,DGXRF1,IBCHK,IBINDT,IBIDS,DLAYGO
"RTN","IBCD3",100,0)
 Q
"RTN","IBCD3",101,0)
 ;
"RTN","IBCD3",102,0)
WHERE ;;.01^0^1;.02^0^2;.03^0^3;.04^0^4;.05^0^5;.06^0^6;.07^0^7;.08^0^8;.09^0^9;.11^0^11;.17^0^17;.16^0^16;.18^0^18;.19^0^19;.2^0^20;.22^0^22;.27^0^27;112^M^12;151^U^1;152^U^2;155^U^5;157^U^7;101^M^1;158^U^8;159^U^9;160^U^10;161^U^11;162^U^12;
"RTN","IBCD3",103,0)
 ;;217^U2^3;221^U2^7;
"RTN","IBCD4")
0^2^B14091278
"RTN","IBCD4",1,0)
IBCD4 ;ALB/ARH - AUTOMATED BILLER (ADD NEW BILL - GATHER DX AND PROCEDURES)  ;9/5/93
"RTN","IBCD4",2,0)
 ;;2.0;INTEGRATED BILLING;**14,80,106,160,309,276,347,522**;21-MAR-94;Build 11
"RTN","IBCD4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCD4",4,0)
 ;
"RTN","IBCD4",5,0)
 ;
"RTN","IBCD4",6,0)
IDX(PTF,DT1,DT2) ; find 501 movement Diagnosis and 701 Discharge Diagnosisfor a PTF record within bill range
"RTN","IBCD4",7,0)
 ; check for billable bedsection and SC treatement and duplicates
"RTN","IBCD4",8,0)
 ; results: IBT = number of billable movements within date range
"RTN","IBCD4",9,0)
 ;          IBMSG(X)=" error message " if any errors found
"RTN","IBCD4",10,0)
 ;         ^TMP("IBDX",$J) = PTF IFN
"RTN","IBCD4",11,0)
 ;         ^TMP("IBDX",$J,"DX",DX) = MOVE DATE/TIME ^ MOVE IEN ^ POA
"RTN","IBCD4",12,0)
 ;         ^TMP("IBDX",$J,-MOVE DATE/TIME, MOVE IEN) = Dx ^ ^ POA
"RTN","IBCD4",13,0)
 N IBMVT,IBN,IBDT,IBCNT,IBBS,IBSC,IBMV,IBDX,IBI,IBX K IBMSG,IBT,^TMP("IBDX",$J)
"RTN","IBCD4",14,0)
 ;
"RTN","IBCD4",15,0)
 D PTFDXDT^IBCSC4F(PTF,DT1,DT2) S IBMVT="M" I +$P($G(^TMP($J,"IBDX","D")),U,3) S IBMVT="D"
"RTN","IBCD4",16,0)
 ;
"RTN","IBCD4",17,0)
 S ^TMP("IBDX",$J)=+PTF S (IBT,IBBS,IBSC)=0,IBCNT=1
"RTN","IBCD4",18,0)
 F IBN="D","M" S IBDT="" F  S IBDT=$O(^TMP($J,"IBDX",IBN,IBDT)) Q:'IBDT  D
"RTN","IBCD4",19,0)
 . S IBMV=$G(^TMP($J,"IBDX",IBN,IBDT)) Q:IBMV=""
"RTN","IBCD4",20,0)
 . ;
"RTN","IBCD4",21,0)
 . I IBN="M" S IBT=IBT+1,IBX="" D  Q:+IBX
"RTN","IBCD4",22,0)
 .. I $P(IBMV,U,3)=1 S IBSC=IBSC+1,IBMSG(IBCNT)=$$FMTE^XLFDT(IBDT)_" movement related to an SC condition.",IBCNT=IBCNT+1,IBX=1
"RTN","IBCD4",23,0)
 .. I $P($G(^DIC(42.4,+$P(IBMV,U,2),0)),U,5)="" S IBBS=IBBS+1,IBMSG(IBCNT)=$$FMTE^XLFDT(IBDT)_" movement is for a non-billable bedsection.",IBCNT=IBCNT+1,IBX=1
"RTN","IBCD4",24,0)
 .. I '$P(IBMV,U,4) S IBMSG(IBCNT)=$$FMTE^XLFDT(IBDT)_" movement does not have a DRG as required for Reasonable Charges.",IBCNT=IBCNT+1
"RTN","IBCD4",25,0)
 . I IBN'=IBMVT Q
"RTN","IBCD4",26,0)
 . ;
"RTN","IBCD4",27,0)
 . S IBI="" F  S IBI=$O(^TMP($J,"IBDX",IBN,IBDT,IBI)) Q:'IBI  D
"RTN","IBCD4",28,0)
 .. S IBDX=$G(^TMP($J,"IBDX",IBN,IBDT,IBI)) Q:'IBDX
"RTN","IBCD4",29,0)
 .. I '$P(IBDX,U,2),IBDT>+$G(^TMP("IBDX",$J,"DX",+IBDX)) S ^TMP("IBDX",$J,"DX",+IBDX)=IBDT_U_IBI_U_$P(IBDX,U,3)
"RTN","IBCD4",30,0)
 ;
"RTN","IBCD4",31,0)
 S IBDX="" F  S IBDX=$O(^TMP("IBDX",$J,"DX",IBDX)) Q:'IBDX  D
"RTN","IBCD4",32,0)
 . S IBX=^TMP("IBDX",$J,"DX",IBDX) I +IBX S ^TMP("IBDX",$J,-IBX,+$P(IBX,U,2))=IBDX_U_U_$P(IBX,U,3)
"RTN","IBCD4",33,0)
 K ^TMP($J,"IBDX")
"RTN","IBCD4",34,0)
 ;
"RTN","IBCD4",35,0)
 I +IBSC S IBMSG(IBCNT)="PTF record indicates "_+IBSC_" of "_IBT_" movements are for Service Connected Care.",IBCNT=IBCNT+1
"RTN","IBCD4",36,0)
 I +IBBS S IBMSG(IBCNT)="PTF record indicates "_+IBBS_" of "_IBT_" movements are for a non-billable bedsection.",IBCNT=IBCNT+1
"RTN","IBCD4",37,0)
 S IBT=IBT-IBSC-IBBS I 'IBT S IBMSG(IBCNT)="0 movements are billable."
"RTN","IBCD4",38,0)
IDXE Q
"RTN","IBCD4",39,0)
 ;
"RTN","IBCD4",40,0)
RXRF(PIFN,RIFN,IBDT) ; returns data on fill on date for rx (RX # ^ DRUG ^ DAYS SUPPLY ^ FILL DATE ^ QTY ^ NDC #)
"RTN","IBCD4",41,0)
 N X,Y,PLN,RLN,IBFILL,PDFN,LIST,NODE
"RTN","IBCD4",42,0)
 S X=""
"RTN","IBCD4",43,0)
 S PDFN=$$FILE^IBRXUTL(PIFN,2)
"RTN","IBCD4",44,0)
 S LIST="IBRXARR"
"RTN","IBCD4",45,0)
 S NODE="R^^"
"RTN","IBCD4",46,0)
 I +$G(PIFN) S PLN=$$RXZERO^IBRXUTL(PDFN,PIFN) I PLN'="" D
"RTN","IBCD4",47,0)
 . D RX^PSO52API(PDFN,LIST,PIFN,,NODE,,)
"RTN","IBCD4",48,0)
 . I $G(IBDT) D REF^PSO52EX($G(IBDT),$G(IBDT),LIST) S RIFN=$O(^TMP($J,LIST,"AD",IBDT,PIFN,""))
"RTN","IBCD4",49,0)
 . S RLN="",IBFILL="^^" I $G(RIFN)="" S X="" Q
"RTN","IBCD4",50,0)
 . I (RIFN=0)!(RIFN=-1) S RLN=$$RXSEC^IBRXUTL(PDFN,PIFN) Q:RLN=""  S IBFILL=$P(PLN,U,8)_"^"_$P(RLN,U,2)_"^"_$P(PLN,U,7)
"RTN","IBCD4",51,0)
 . I RIFN>0 S RLN=$$ZEROSUB^IBRXUTL(PDFN,PIFN,RIFN) Q:RLN=""  S IBFILL=$P(RLN,U,10)_"^"_$P(RLN,U,1)_"^"_$P(RLN,U,4)
"RTN","IBCD4",52,0)
 . S X=$P(PLN,U,1)_"^"_$P(PLN,U,6)_"^"_IBFILL_"^"_$$GETNDC^PSONDCUT(+PIFN,+RIFN)
"RTN","IBCD4",53,0)
 E  S X=""
"RTN","IBCD4",54,0)
 K ^TMP($J,LIST)
"RTN","IBCD4",55,0)
 Q X
"RTN","IBCD4",56,0)
 ;
"RTN","IBCD4",57,0)
CHK() ;other checks
"RTN","IBCD4",58,0)
 N X S X=1 I $G(^DPT(+$G(IBDFN),0))="" S X="0^Patient information lacking."
"RTN","IBCD4",59,0)
 Q X
"RTN","IBCD4",60,0)
 ;
"RTN","IBCD4",61,0)
CHKSYS() ;various checks to determine if bill can be created, returns true if passes   XXXXXX
"RTN","IBCD4",62,0)
 ;if fails then returns "0^error message"
"RTN","IBCD4",63,0)
 ;requires nothing
"RTN","IBCD4",64,0)
 N X,Y,I S X=1
"RTN","IBCD4",65,0)
 I '$P($G(^IBE(350.9,1,1)),U,14) S X="0^MAS SERVICE PARAMETER UNKNOWN" G CHKSYSE
"RTN","IBCD4",66,0)
 I +$P($$SITE^VASITE,U,3)<1 S X="0^ACILITY UNDEFINED" G CHKSYSE
"RTN","IBCD4",67,0)
 ;G:$D(IBB) CHKSYSE
"RTN","IBCD4",68,0)
 ;I '$D(DUZ(0)) S X="0^FILEMAN ACCESS UNDEFINED" G CHKSYSE
"RTN","IBCD4",69,0)
 ;I $S($D(DLAYGO):2\1-(DLAYGO\1),1:1),DUZ(0)'="@",$D(^DIC(399,0,"LAYGO"))  S DLAYGO=399
"RTN","IBCD4",70,0)
CHKSYSE Q X
"RTN","IBCD4",71,0)
 ;
"RTN","IBCD4",72,0)
 ;GVARS(IFN) ;get data on bill IFN  (commented out patch 80, does not appear to be used)
"RTN","IBCD4",73,0)
 ;N I S X=1 I '$G(^DGCR(399,+$G(IFN),0)) S X=0 G GVARSE
"RTN","IBCD4",74,0)
 ;F I=0,"M" S IB(I)=$G(^DGCR(399,+IFN,I))
"RTN","IBCD4",75,0)
 ;S DGINPAR=$P($G(^DIC(36,+IB("MP"),0)),U,6,10)
"RTN","IBCD4",76,0)
 ;GVARSE Q X
"RTN","IBCRBG")
0^3^B68718544
"RTN","IBCRBG",1,0)
IBCRBG ;ALB/ARH - RATES: BILL SOURCE EVENTS (INPT) ;21 MAY 96
"RTN","IBCRBG",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,106,51,142,159,210,245,382,389,461,522**;21-MAR-94;Build 11
"RTN","IBCRBG",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCRBG",4,0)
 ;
"RTN","IBCRBG",5,0)
INPTPTF(IBIFN,CS) ; search PTF record for billable bedsections, transfer DRGs, and length of stay 
"RTN","IBCRBG",6,0)
 ; - screens out days for pass, leave and SC treatment
"RTN","IBCRBG",7,0)
 ; - adds charges for only one BS if the ins company does not allow multiple bedsections per bill (36,.06)
"RTN","IBCRBG",8,0)
 ; Output: ^TMP($J,"IBCRC-INDT", BILLABLE DATE) = MOVE DT/TM ^ BILL BS ^ SC FLAG ^ DRG ^ DIV ^ SPECIALTY ^ MOVE #
"RTN","IBCRBG",9,0)
 ;
"RTN","IBCRBG",10,0)
 N IB0,DFN,PTF,IBU,IBBDT,IBEDT,IBTF,IBADM,IBX,IBINSMBS
"RTN","IBCRBG",11,0)
 K ^TMP($J,"IBCRC-PTF"),^TMP($J,"IBCRC-DIV"),^TMP($J,"IBCRC-INDT")
"RTN","IBCRBG",12,0)
 ;
"RTN","IBCRBG",13,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IB0,U,2) Q:'DFN
"RTN","IBCRBG",14,0)
 S IBTF=$P(IB0,U,6),PTF="" S:$P(IB0,U,5)<3 PTF=$P(IB0,U,8) Q:'PTF
"RTN","IBCRBG",15,0)
 S IBINSMBS=0,IBX=+$G(^DGCR(399,+IBIFN,"MP"))
"RTN","IBCRBG",16,0)
 I 'IBX,$$MCRWNR^IBEFUNC($$CURR^IBCEF2(IBIFN)) S IBX=$$CURR^IBCEF2(IBIFN)
"RTN","IBCRBG",17,0)
 I $P($G(^DIC(36,+IBX,0)),U,6)=0 S IBINSMBS=1 ; 1 bs per bill
"RTN","IBCRBG",18,0)
 ;
"RTN","IBCRBG",19,0)
 S IBU=$G(^DGCR(399,+IBIFN,"U")) Q:'IBU
"RTN","IBCRBG",20,0)
 S IBBDT=+IBU,IBEDT=$P(IBU,U,2) Q:'IBEDT
"RTN","IBCRBG",21,0)
 ;
"RTN","IBCRBG",22,0)
 S IBADM=$O(^DGPM("APTF",PTF,0)) ; find corresponding admission
"RTN","IBCRBG",23,0)
 ;
"RTN","IBCRBG",24,0)
 D PTF(PTF) ; get movements and bedsections
"RTN","IBCRBG",25,0)
 D PTFDV(PTF) ; reset movements and bedsections for ward/division
"RTN","IBCRBG",26,0)
 D PTFFY(PTF,IBBDT,IBEDT) ; reset movements for FY DRG change
"RTN","IBCRBG",27,0)
 ;
"RTN","IBCRBG",28,0)
 D BSLOS(IBBDT,IBEDT,IBTF,IBADM,IBINSMBS) ; calculate days in bedsections within timeframe of the bill
"RTN","IBCRBG",29,0)
 ;
"RTN","IBCRBG",30,0)
 K ^TMP($J,"IBCRC-PTF"),^TMP($J,"IBCRC-DIV")
"RTN","IBCRBG",31,0)
 ;
"RTN","IBCRBG",32,0)
 D INPTRSET^IBCRBG2(IBIFN,$G(CS))
"RTN","IBCRBG",33,0)
 Q
"RTN","IBCRBG",34,0)
 ;
"RTN","IBCRBG",35,0)
PTF(PTF) ; find all movements in PTF for the admission by date and billing bedsection (501 movement)
"RTN","IBCRBG",36,0)
 ; the movement date is the date the patient left the bedsection
"RTN","IBCRBG",37,0)
 ; Output: ^TMP($J,"IBCRC-PTF", MOVE DT/TM)=MOVE DT/TM ^ BILL BED ^ SC FLAG ^ TRANSFER DRG ^ ^ SPECIALTY ^ MOVE #
"RTN","IBCRBG",38,0)
 ;
"RTN","IBCRBG",39,0)
 N IBMOVE,IBMVLN,IBBILLBS,IBENDDT,IBMSC,IBMDRG S PTF=+$G(PTF)
"RTN","IBCRBG",40,0)
 S IBMOVE=0 F  S IBMOVE=$O(^DGPT(PTF,"M",IBMOVE)) Q:'IBMOVE  D
"RTN","IBCRBG",41,0)
 . S IBMVLN=^DGPT(PTF,"M",IBMOVE,0)
"RTN","IBCRBG",42,0)
 . S IBBILLBS=+$$SPBB($P(IBMVLN,U,2)) ;                                 billable bedsection
"RTN","IBCRBG",43,0)
 . S IBENDDT=+$P(IBMVLN,U,10) I 'IBENDDT S IBENDDT=DT ;                 movement date (last date in bedsection)
"RTN","IBCRBG",44,0)
 . S IBMSC="" I +$P(IBMVLN,U,18)=1 S IBMSC=1 ;                          sc movement
"RTN","IBCRBG",45,0)
 . S IBMDRG=$$MVDRG(PTF,IBMOVE) ;                                       movement DRG
"RTN","IBCRBG",46,0)
 . S ^TMP($J,"IBCRC-PTF",IBENDDT)=IBENDDT_U_IBBILLBS_U_IBMSC_U_IBMDRG_U_U_+$P(IBMVLN,U,2)_U_IBMOVE
"RTN","IBCRBG",47,0)
 Q
"RTN","IBCRBG",48,0)
 ;
"RTN","IBCRBG",49,0)
SPBB(SPCLTY) ; find the billable bedsection for a Specialty (42.4)
"RTN","IBCRBG",50,0)
 ; returns billable bedsection IFN ^ billable bedsection name
"RTN","IBCRBG",51,0)
 N IBX,IBY,IBZ S IBZ=0
"RTN","IBCRBG",52,0)
 S IBX=$P($G(^DIC(42.4,+$G(SPCLTY),0)),U,5)
"RTN","IBCRBG",53,0)
 I IBX'="" S IBY=$O(^DGCR(399.1,"B",IBX,0)) I +IBY S IBZ=IBY_U_IBX
"RTN","IBCRBG",54,0)
 Q IBZ
"RTN","IBCRBG",55,0)
 ;
"RTN","IBCRBG",56,0)
BSLOS(IBBDT,IBEDT,IBTF,IBADM,IBINSMBS) ; from the array of PTF movments get all bedsections and their LOS covered by date range of the bill
"RTN","IBCRBG",57,0)
 ; adds all days for first cronological bs if ins comp wants only a single bs per bill, even if not sequential
"RTN","IBCRBG",58,0)
 ; the movement date is the date the patient left the bedsection, so admission date is not in PTF array
"RTN","IBCRBG",59,0)
 ;
"RTN","IBCRBG",60,0)
 ; Input:  ^TMP($J,"IBCRC-PTF", MOVE DT/TM) = MOVE DT/TM ^ BILL BS ^ SC FLAG ^ DRG ^ DIV ^ SPECIALTY ^ MOVE #
"RTN","IBCRBG",61,0)
 ; Output: ^TMP($J,"IBCRC-INDT", BILLABLE DATE) = MOVE DT/TM ^ BILL BS ^ SC FLAG ^ DRG ^ DIV ^ SPECIALTY ^ MOVE #
"RTN","IBCRBG",62,0)
 ;
"RTN","IBCRBG",63,0)
 N IBSBDT,IBSEDT,IBS,IBLASTDT,IBX
"RTN","IBCRBG",64,0)
 S IBSBDT=IBBDT+.3 ;                        discount any movements ending on or before the begin date
"RTN","IBCRBG",65,0)
 S IBSEDT=IBEDT\1
"RTN","IBCRBG",66,0)
 ; 
"RTN","IBCRBG",67,0)
 I ",2,3,"'[IBTF S IBSEDT=IBSEDT-.01 ;      final bill, do not count last day
"RTN","IBCRBG",68,0)
 ;
"RTN","IBCRBG",69,0)
 I +$G(IBADM) S IBX=$$AD^IBCU64(IBADM) I +IBX,($P(IBX,U,1)\1)=($P(IBX,U,2)\1) S IBSBDT=IBBDT ; reset 1 day stays
"RTN","IBCRBG",70,0)
 ;
"RTN","IBCRBG",71,0)
 S IBS=IBSBDT-.01 F  S IBS=$O(^TMP($J,"IBCRC-PTF",IBS)) Q:'IBS  D SET S IBLASTDT=IBS Q:(IBLASTDT\1)>IBSEDT
"RTN","IBCRBG",72,0)
 ;
"RTN","IBCRBG",73,0)
 Q
"RTN","IBCRBG",74,0)
 ;
"RTN","IBCRBG",75,0)
SET ; checks a specific movement to determine if it should be billed and what the length of stay is
"RTN","IBCRBG",76,0)
 ; setting of the movement date determines how many days are counted in the bedsection
"RTN","IBCRBG",77,0)
 N IBMVLN,IBMBDT,IBMEDT,IBMTF,IBMLOS,IBI,IBCHGDT
"RTN","IBCRBG",78,0)
 S IBMVLN=$G(^TMP($J,"IBCRC-PTF",IBS))
"RTN","IBCRBG",79,0)
 I '$P(IBMVLN,U,2) Q  ;                                              non-billable bedsection
"RTN","IBCRBG",80,0)
 I +$P(IBMVLN,U,3) Q  ;                                              sc movement
"RTN","IBCRBG",81,0)
 I +IBINSMBS,+$G(IBLASTDT) Q  ;                                      ins does not allow multiple bs
"RTN","IBCRBG",82,0)
 ;
"RTN","IBCRBG",83,0)
 S IBMBDT=$S(IBBDT>$G(IBLASTDT):IBBDT,1:IBLASTDT),IBMBDT=IBMBDT\1 ;  start cnt on begin dt or last move dt
"RTN","IBCRBG",84,0)
 S IBMEDT=$S(IBS<IBEDT:IBS,1:IBEDT),IBMEDT=IBMEDT\1 ;                end cnt on move dt or end dt
"RTN","IBCRBG",85,0)
 S IBMTF=$S(IBEDT<(IBS\1):IBTF,1:1) ;                                last movement gets timeframe
"RTN","IBCRBG",86,0)
 S IBMLOS=$$LOS^IBCU64(IBMBDT,IBMEDT,IBMTF,IBADM) Q:'IBMLOS  ;       calculate the LOS for the movement
"RTN","IBCRBG",87,0)
 ;
"RTN","IBCRBG",88,0)
 F IBI=1:1:IBMLOS S IBCHGDT=$$FMADD^XLFDT(IBMBDT,(IBI-1)),^TMP($J,"IBCRC-INDT",+IBCHGDT)=IBMVLN
"RTN","IBCRBG",89,0)
 Q
"RTN","IBCRBG",90,0)
 ;
"RTN","IBCRBG",91,0)
BBS(X) ; returns true if pointer passed in is a billable bedsection ^ bedsection name
"RTN","IBCRBG",92,0)
 N IBX,IBY S IBY=0,IBX=$G(^DGCR(399.1,+$G(X),0)) I +$P(IBX,U,5) S IBY=1_U_$P(IBX,U,1)
"RTN","IBCRBG",93,0)
 Q IBY
"RTN","IBCRBG",94,0)
 ;
"RTN","IBCRBG",95,0)
 Q
"RTN","IBCRBG",96,0)
 ;
"RTN","IBCRBG",97,0)
PTFDV(PTF) ; find all ward/location transfers in PTF for the patient to determine the site/division the patient was in
"RTN","IBCRBG",98,0)
 ; the division of the ward will be added to the PTF bedsection movements
"RTN","IBCRBG",99,0)
 ; Input:  ^TMP($J,"IBCRC-PTF", move dt/tm) = move dt/tm ^ bill bs ^ sc flag ^ move drg ^ ^ specialty ^ move #
"RTN","IBCRBG",100,0)
 ; Output: ^TMP($J,"IBCRC-PTF", move dt/tm) = move dt/tm ^ bill bs ^ sc flag ^ move drg ^ WARD DIV ^ spec ^ move#
"RTN","IBCRBG",101,0)
 ;          ^TMP($J,"IBCRC-DIV", TRANSFER DATE/TIME) = WARD DIVISION
"RTN","IBCRBG",102,0)
 N IBTRNSF,IBTRLN,IBENDDT,IBTRDV,IBMVDT,IBTRDT
"RTN","IBCRBG",103,0)
 ;
"RTN","IBCRBG",104,0)
 I '$O(^TMP($J,"IBCRC-PTF",0)) Q
"RTN","IBCRBG",105,0)
 ;
"RTN","IBCRBG",106,0)
 ; get all ward transfers
"RTN","IBCRBG",107,0)
 S IBTRNSF=0 F  S IBTRNSF=$O(^DGPT(PTF,535,IBTRNSF)) Q:'IBTRNSF  D
"RTN","IBCRBG",108,0)
 . S IBTRLN=$G(^DGPT(PTF,535,+IBTRNSF,0))
"RTN","IBCRBG",109,0)
 . S IBENDDT=$P(IBTRLN,U,10) I 'IBENDDT S IBENDDT=DT ;                  transfer date (last date in ward)
"RTN","IBCRBG",110,0)
 . S IBTRDV=$P($G(^DIC(42,+$P(IBTRLN,U,6),0)),U,11) Q:'IBTRDV  ;        losing ward division
"RTN","IBCRBG",111,0)
 . S ^TMP($J,"IBCRC-DIV",IBENDDT)=IBTRDV
"RTN","IBCRBG",112,0)
 ;
"RTN","IBCRBG",113,0)
 ; if the ward transfer does not coincide with a specialty transfer add bedsection move on the transfer date
"RTN","IBCRBG",114,0)
 S IBENDDT=0 F  S IBENDDT=$O(^TMP($J,"IBCRC-DIV",IBENDDT)) Q:'IBENDDT  D
"RTN","IBCRBG",115,0)
 . S IBMVDT=$O(^TMP($J,"IBCRC-PTF",(IBENDDT-.0000001)))
"RTN","IBCRBG",116,0)
 . I 'IBMVDT Q  ; - transfer movement dates after the discharge date in the PTF file (inconsistent)
"RTN","IBCRBG",117,0)
 . I $P(IBENDDT,".")'=$P(IBMVDT,".") S ^TMP($J,"IBCRC-PTF",IBENDDT)=$G(^TMP($J,"IBCRC-PTF",IBMVDT))
"RTN","IBCRBG",118,0)
 ;
"RTN","IBCRBG",119,0)
 ; add the ward division to the bedsection/specialty
"RTN","IBCRBG",120,0)
 S IBENDDT=0 F  S IBENDDT=$O(^TMP($J,"IBCRC-PTF",IBENDDT)) Q:'IBENDDT  D
"RTN","IBCRBG",121,0)
 . S IBTRDT=$O(^TMP($J,"IBCRC-DIV",(IBENDDT-.0000001))) ;              ward transfer covering this bedsection
"RTN","IBCRBG",122,0)
 . S IBTRDV=$G(^TMP($J,"IBCRC-DIV",+IBTRDT)) ;                         ward division
"RTN","IBCRBG",123,0)
 . I +IBTRDV S $P(^TMP($J,"IBCRC-PTF",IBENDDT),U,5)=IBTRDV
"RTN","IBCRBG",124,0)
 Q
"RTN","IBCRBG",125,0)
 ;
"RTN","IBCRBG",126,0)
PTFFY(PTF,BEGDT,ENDDT) ; add movement for FY (10/1) if date range covers FY and DRG changes
"RTN","IBCRBG",127,0)
 ; the DRG may change on FY so check and if necessary add movement for pre-FY with old DRG
"RTN","IBCRBG",128,0)
 ; Input:  ^TMP($J,"IBCRC-PTF", move dt/tm) = move dt/tm ^ bill bs ^ sc flag ^ move drg ^ ^ specialty ^ move #
"RTN","IBCRBG",129,0)
 ; Output: ^TMP($J,"IBCRC-PTF", move dt/tm) = move dt/tm ^ bill bs ^ sc flag ^ MOVE DRG ^ ward div ^ spec ^ move#
"RTN","IBCRBG",130,0)
 N IBBEGDT,IBENDDT,IBYRB,IBYRE,IBYR,IBFY,IBMVLN,IBMVDRG,IBMOVE,IBFYDRG Q:'$G(PTF)
"RTN","IBCRBG",131,0)
 Q:'$G(BEGDT)  S IBFY=$E(BEGDT,1,3)_"1001"
"RTN","IBCRBG",132,0)
 ;
"RTN","IBCRBG",133,0)
 S IBBEGDT=BEGDT,IBENDDT=BEGDT\1 F  S IBENDDT=$O(^TMP($J,"IBCRC-PTF",IBENDDT)) Q:'IBENDDT  D  S IBBEGDT=IBENDDT
"RTN","IBCRBG",134,0)
 . S IBYRB=$E(IBBEGDT,1,3),IBYRE=$E(IBENDDT,1,3) I (IBYRE-IBYRB)>10 Q
"RTN","IBCRBG",135,0)
 . F IBYR=IBYRB:1:IBYRE S IBFY=IBYR_"1001" I IBBEGDT<IBFY,IBENDDT>IBFY D
"RTN","IBCRBG",136,0)
 .. S IBMVLN=$G(^TMP($J,"IBCRC-PTF",IBENDDT)),IBMVDRG=$P(IBMVLN,U,4),IBMOVE=$P(IBMVLN,U,7)
"RTN","IBCRBG",137,0)
 .. S IBFYDRG=$$MVDRG(PTF,IBMOVE,IBYR_"0930")
"RTN","IBCRBG",138,0)
 .. I IBMVDRG'=IBFYDRG S $P(IBMVLN,U,4)=IBFYDRG S ^TMP($J,"IBCRC-PTF",IBFY)=IBMVLN
"RTN","IBCRBG",139,0)
 Q
"RTN","IBCRBG",140,0)
 ;
"RTN","IBCRBG",141,0)
DXVER(DX,DATE) ; check the code version of the diagnosis matchs the code version on the date
"RTN","IBCRBG",142,0)
 ; with ICD-10, bills may span the activation date and Dx may be coded in either version (should be ICD-10)
"RTN","IBCRBG",143,0)
 ; returns null or if versions don't match then last ICD-9 date for ICD-9 Dx or first ICD-10 date for ICD-10 Dx
"RTN","IBCRBG",144,0)
 N DXVER,CSVDATE,VDATE S VDATE=""
"RTN","IBCRBG",145,0)
 S DXVER=$$ICD9VER^IBACSV(DX)
"RTN","IBCRBG",146,0)
 I DXVER'=$$ICD9SYS^IBACSV(DATE) S CSVDATE=$$CSVDATE^IBACSV(30) S VDATE=CSVDATE I DXVER=1 S VDATE=$$FMADD^XLFDT(CSVDATE,-1)
"RTN","IBCRBG",147,0)
 Q VDATE
"RTN","IBCRBG",148,0)
 ;
"RTN","IBCRBG",149,0)
MVDRG(PTF,M,CDATE) ; Return the DRG for a specific PTF Movememt (M=move ifn)
"RTN","IBCRBG",150,0)
 ; CDATE is optional, used if need to calculate DRG for some day within the move, not at the end date
"RTN","IBCRBG",151,0)
 N DPT0,PTF0,PTFM0,PTFM82,PTF70,IBBEG,IBEND,IBDSST,IBDX,IBPRC0,IBPRC,IBDRG,IBVDATE,IBI,IBJ,IBP,PTFARR
"RTN","IBCRBG",152,0)
 N SEX,AGE,ICDDX,ICDPOA,ICDPRC,ICDEXP,ICDDMS,ICDTRS,ICDDRG,ICDMDC,ICDRTC,ICDDATE
"RTN","IBCRBG",153,0)
 N ICDCSYS,ICD0,ICDCDSY,ICDEDT,ICDX,ICDTMP,ICDRG,ICD10ORNIT,ICD10ORT,X1,X2,ICDSEX,ICDY ; ICDDRG clean-up
"RTN","IBCRBG",154,0)
 S IBDRG=""
"RTN","IBCRBG",155,0)
 ;
"RTN","IBCRBG",156,0)
 S PTF0=$G(^DGPT(+$G(PTF),0)),DPT0=$G(^DPT(+$P(PTF0,U,1),0)) I DPT0="" G MVDRGQ
"RTN","IBCRBG",157,0)
 S PTFM0=$G(^DGPT(+PTF,"M",+$G(M),0)) I 'PTFM0 G MVDRGQ
"RTN","IBCRBG",158,0)
 S PTFM82=$G(^DGPT(+PTF,"M",+$G(M),82))
"RTN","IBCRBG",159,0)
 S PTF70=$G(^DGPT(+PTF,70)),IBDSST=+$P(PTF70,U,3)
"RTN","IBCRBG",160,0)
 ;
"RTN","IBCRBG",161,0)
 S IBEND=+$P(PTFM0,U,10) I 'IBEND S IBEND=DT+.9
"RTN","IBCRBG",162,0)
 S IBBEG=$O(^DGPT(+PTF,"M","AM",IBEND),-1) I 'IBBEG S IBBEG=$P(PTF0,U,2)
"RTN","IBCRBG",163,0)
 ;
"RTN","IBCRBG",164,0)
 S SEX=$P(DPT0,U,2)
"RTN","IBCRBG",165,0)
 S AGE=$P(DPT0,U,3),AGE=$$FMDIFF^XLFDT(IBEND,AGE)\365.25
"RTN","IBCRBG",166,0)
 ;
"RTN","IBCRBG",167,0)
 S (ICDEXP,ICDDMS,ICDTRS)=0 I +PTF70,+PTF70=$P(PTFM0,U,10) D
"RTN","IBCRBG",168,0)
 . I IBDSST>5 S ICDEXP=1 ;  patient expired
"RTN","IBCRBG",169,0)
 . I IBDSST=4 S ICDDMS=1 ;  patient left against medical advice
"RTN","IBCRBG",170,0)
 . I IBDSST=5,+$P(PTF70,U,13) S ICDTRS=1 ; patient transfered to another facility
"RTN","IBCRBG",171,0)
 ;
"RTN","IBCRBG",172,0)
 D PTFCDS^IBCSC4F(+PTF,501,+$G(M),.PTFARR) D  K PTFARR ; Diagnosis
"RTN","IBCRBG",173,0)
 . S IBJ=0,IBI="" F  S IBI=$O(PTFARR(IBI)) Q:IBI=""  S IBDX=PTFARR(IBI) I +IBDX D
"RTN","IBCRBG",174,0)
 .. S IBJ=IBJ+1,ICDDX(IBJ)=+IBDX,ICDPOA(IBJ)=$P(IBDX,U,2)
"RTN","IBCRBG",175,0)
 ;
"RTN","IBCRBG",176,0)
 I '$G(ICDDX(1)) G MVDRGQ
"RTN","IBCRBG",177,0)
 ;
"RTN","IBCRBG",178,0)
 S IBJ=0
"RTN","IBCRBG",179,0)
 S IBP=0 F  S IBP=$O(^DGPT(+PTF,"S",IBP)) Q:'IBP  D  ; surgeries
"RTN","IBCRBG",180,0)
 . S IBPRC0=$G(^DGPT(+PTF,"S",IBP,0)) Q:'IBPRC0
"RTN","IBCRBG",181,0)
 . I +IBPRC0'<IBBEG,+IBPRC0'>IBEND D PTFCDS^IBCSC4F(+PTF,401,IBP,.PTFARR) D  K PTFARR
"RTN","IBCRBG",182,0)
 .. S IBI="" F  S IBI=$O(PTFARR(IBI)) Q:IBI=""  S IBPRC=PTFARR(IBI) I +IBPRC S IBJ=IBJ+1,ICDPRC(IBJ)=+IBPRC
"RTN","IBCRBG",183,0)
 ;
"RTN","IBCRBG",184,0)
 S IBP=0 F  S IBP=$O(^DGPT(+PTF,"P",IBP)) Q:'IBP  D  ; procedures
"RTN","IBCRBG",185,0)
 . S IBPRC0=$G(^DGPT(+PTF,"P",IBP,0)) Q:'IBPRC0
"RTN","IBCRBG",186,0)
 . I +IBPRC0'<IBBEG,+IBPRC0'>IBEND D PTFCDS^IBCSC4F(+PTF,601,IBP,.PTFARR) D  K PTFARR
"RTN","IBCRBG",187,0)
 .. S IBI="" F  S IBI=$O(PTFARR(IBI)) Q:IBI=""  S IBPRC=PTFARR(IBI) I +IBPRC S IBJ=IBJ+1,ICDPRC(IBJ)=+IBPRC
"RTN","IBCRBG",188,0)
 ;
"RTN","IBCRBG",189,0)
 S ICDDATE=$S(+$G(CDATE):CDATE,+$P(PTFM0,U,10):+$P(PTFM0,U,10),1:DT) ; date for the DRG Grouper versioning
"RTN","IBCRBG",190,0)
 S IBVDATE=$$DXVER(ICDDX(1),ICDDATE) I +IBVDATE S ICDDATE=IBVDATE ; reset date to within Dx code version
"RTN","IBCRBG",191,0)
 ;
"RTN","IBCRBG",192,0)
 D ^ICDDRG S IBDRG=$G(ICDDRG)
"RTN","IBCRBG",193,0)
 ;
"RTN","IBCRBG",194,0)
MVDRGQ Q IBDRG
"RTN","IBCSC4A")
0^4^B26406207
"RTN","IBCSC4A",1,0)
IBCSC4A ;ALB/MJB - MCCR PTF SCREEN  ;24 FEB 89 9:49
"RTN","IBCSC4A",2,0)
 ;;2.0;INTEGRATED BILLING;**106,228,339,479,522**;21-MAR-94;Build 11
"RTN","IBCSC4A",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCSC4A",4,0)
 ;
"RTN","IBCSC4A",5,0)
DX ;
"RTN","IBCSC4A",6,0)
PRO ; Get PTF Procedures for a bill in ^UTILITY($J,"IB")
"RTN","IBCSC4A",7,0)
 ; includes ICD Surgeries (401) and ICD Procedures (601) or CPT Professional Services (801) based on PCM
"RTN","IBCSC4A",8,0)
 N IB0,IBU,IBPTF,IBFDT,IBTDT,IBPCM K ^UTILITY($J) Q:'$G(IBIFN)
"RTN","IBCSC4A",9,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),IBPTF=$P(IB0,U,8),IBPCM=+$P(IB0,U,9) Q:'IBPTF
"RTN","IBCSC4A",10,0)
 S IBU=$G(^DGCR(399,+IBIFN,"U")),IBFDT=+IBU,IBTDT=$P(IBU,U,2) Q:$P(IB0,U,5)>2
"RTN","IBCSC4A",11,0)
 ;
"RTN","IBCSC4A",12,0)
 D PTFPRDT(IBPTF,IBFDT,IBTDT,IBPCM,IBIFN)
"RTN","IBCSC4A",13,0)
 Q
"RTN","IBCSC4A",14,0)
 ;
"RTN","IBCSC4A",15,0)
 ;
"RTN","IBCSC4A",16,0)
PTFPRDT(PTF,IBDT1,IBDT2,PCM,IBIFN) ; collect PTF Procedures within a date range
"RTN","IBCSC4A",17,0)
 ; includes ICD Surgeries (401) and ICD Procedures (601) or CPT Professional Services (801)
"RTN","IBCSC4A",18,0)
 ; the procedure coding method (PCM) determines if ICD (401/601) or CPT (801) procedures returned
"RTN","IBCSC4A",19,0)
 N DFN K ^UTILITY($J,"IB") Q:'$G(PTF)
"RTN","IBCSC4A",20,0)
 S IBDT1=+$G(IBDT1),IBDT2=+$G(IBDT2),DFN=+$G(^DGPT(PTF,0)) Q:'DFN
"RTN","IBCSC4A",21,0)
 I '$G(PCM) S PCM=9
"RTN","IBCSC4A",22,0)
 ; 
"RTN","IBCSC4A",23,0)
 I +PCM'=9 D PTFPS(DFN,PTF,IBDT1,IBDT2) Q  ; get CPT Procedures (601)
"RTN","IBCSC4A",24,0)
 ;
"RTN","IBCSC4A",25,0)
 D PTFPR(PTF,IBDT1,IBDT2,$G(IBIFN)) ; get ICD Procedures (401/601)
"RTN","IBCSC4A",26,0)
 ;
"RTN","IBCSC4A",27,0)
 Q
"RTN","IBCSC4A",28,0)
 ;
"RTN","IBCSC4A",29,0)
 ;
"RTN","IBCSC4A",30,0)
PTFPR(IBPTF,IBDT1,IBDT2,IBIFN) ; collect PTF ICD Procedures, Surgeries (401) and Procedures (601), for a date range
"RTN","IBCSC4A",31,0)
 ; Output:  UTILITY($J,"IB",X,1) = ICD IEN ^ Date ^ Seq Group Letter ^ Type (401="", 601="*")
"RTN","IBCSC4A",32,0)
 ;          UTILITY($J,"IB",X,Y) = ICD IEN
"RTN","IBCSC4A",33,0)
 ;          UTILITY($J,"IB","B", Seq Group Letter_Y ) = X ^ Y ^ on bill (Y/N)
"RTN","IBCSC4A",34,0)
 ; where X is 1:1 of the number of events found, order by: Surgeries first, then Procedures, then by reverse date
"RTN","IBCSC4A",35,0)
 N IBXRF,IBPI,IBPDT,IBECNT,IBCNT,IBTYPE,IBSGRP,IBFIRST,IBPRC,IBPB,IBI,IBJ,IBARR,PTFCOD,BPARR K ^UTILITY($J,"IB")
"RTN","IBCSC4A",36,0)
 S IBDT1=$S(+$G(IBDT1):IBDT1\1,1:0),IBDT2=$S(+$G(IBDT2):IBDT2\1,1:9999999)+.999999 Q:'$G(IBPTF)
"RTN","IBCSC4A",37,0)
 I +$G(IBIFN) D BILLPRC(IBIFN,.BPARR)
"RTN","IBCSC4A",38,0)
 ;
"RTN","IBCSC4A",39,0)
 ; get list of Procedure and Surgery Events and order by reverse date
"RTN","IBCSC4A",40,0)
 F IBXRF="S","P" S IBPI=0 F  S IBPI=$O(^DGPT(IBPTF,IBXRF,IBPI)) Q:'IBPI  D
"RTN","IBCSC4A",41,0)
 . S IBPDT=+$G(^DGPT(IBPTF,IBXRF,IBPI,0))\1 I IBPDT'<IBDT1,IBPDT'>IBDT2 S IBARR(IBXRF,-IBPDT,IBPI)=IBPDT
"RTN","IBCSC4A",42,0)
 ;
"RTN","IBCSC4A",43,0)
 ; collect PTF Procedure (601) and Surgeries (401) associated ICD codes, by type and reverse date
"RTN","IBCSC4A",44,0)
 S IBECNT=0  F IBXRF="S","P" S IBJ="" F  S IBJ=$O(IBARR(IBXRF,IBJ)) Q:IBJ=""  D
"RTN","IBCSC4A",45,0)
 . S IBPI="" F  S IBPI=$O(IBARR(IBXRF,IBJ,IBPI)) Q:IBPI=""  S IBPDT=IBARR(IBXRF,IBJ,IBPI),IBECNT=IBECNT+1 D
"RTN","IBCSC4A",46,0)
 .. ;
"RTN","IBCSC4A",47,0)
 .. S IBTYPE=$S(IBXRF="S":401,IBXRF="P":601,1:0),IBSGRP=$$SEQGRP(IBECNT)
"RTN","IBCSC4A",48,0)
 .. S IBFIRST=IBPDT\1_U_IBSGRP_U_$S(IBTYPE=601:"*",1:"")
"RTN","IBCSC4A",49,0)
 .. S ^UTILITY($J,"IB",IBECNT,1)="UNSPECIFIED CODE"_U_IBFIRST
"RTN","IBCSC4A",50,0)
 .. ;
"RTN","IBCSC4A",51,0)
 .. D PTFCDS^IBCSC4F(IBPTF,IBTYPE,IBPI,.PTFCOD) D  K PTFCOD ; get surgery/procedure codes
"RTN","IBCSC4A",52,0)
 ... S IBCNT=0,IBI="" F  S IBI=$O(PTFCOD(IBI)) Q:IBI=""  S IBPRC=PTFCOD(IBI) I +IBPRC S IBCNT=IBCNT+1 D
"RTN","IBCSC4A",53,0)
 .... S IBPB=+$O(BPARR(+IBPRC,+IBPDT,0)) S BPARR=$S('$G(IBIFN):"",+IBPB:"Y",1:"N") K BPARR(+IBPRC,+IBPDT,+IBPB)
"RTN","IBCSC4A",54,0)
 .... S ^UTILITY($J,"IB",IBECNT,IBCNT)=+IBPRC_U_IBFIRST S IBFIRST=""
"RTN","IBCSC4A",55,0)
 .... I IBSGRP'="" S ^UTILITY($J,"IB","B",IBSGRP_IBCNT)=IBECNT_U_IBCNT_U_BPARR
"RTN","IBCSC4A",56,0)
 Q
"RTN","IBCSC4A",57,0)
 ;
"RTN","IBCSC4A",58,0)
 ;
"RTN","IBCSC4A",59,0)
SEQGRP(ECNT) ; return sequence group alpha character (A-Z, a-z, 52 max)
"RTN","IBCSC4A",60,0)
 N IBX S IBX="" I +$G(ECNT) S ECNT=$S(ECNT>52:0,ECNT>26:ECNT+6,1:ECNT) I +ECNT S IBX=$C(64+ECNT)
"RTN","IBCSC4A",61,0)
 Q IBX
"RTN","IBCSC4A",62,0)
 ;
"RTN","IBCSC4A",63,0)
 ;
"RTN","IBCSC4A",64,0)
BILLPRC(IBIFN,ARRAY) ; return array of ICD procedures on bill,  ARRAY(PRC,DATE,X)="" pass by reference
"RTN","IBCSC4A",65,0)
 N IBPI,IBP0 K ARRAY
"RTN","IBCSC4A",66,0)
 S IBPI=0 F  S IBPI=$O(^DGCR(399,+$G(IBIFN),"CP",IBPI)) Q:'IBPI  D
"RTN","IBCSC4A",67,0)
 . S IBP0=$G(^DGCR(399,IBIFN,"CP",IBPI,0)) Q:IBP0'[";ICD0"  S ARRAY(+IBP0,+$P(IBP0,U,2),IBPI)=""
"RTN","IBCSC4A",68,0)
 Q
"RTN","IBCSC4A",69,0)
 ;
"RTN","IBCSC4A",70,0)
 ;
"RTN","IBCSC4A",71,0)
PTFPS(DFN,IBPTF,IBFDT,IBTDT) ; this will return a list of professional
"RTN","IBCSC4A",72,0)
 ; services from the ptf records.  If no date range specified, then
"RTN","IBCSC4A",73,0)
 ; it will return all services for that ptf entry.
"RTN","IBCSC4A",74,0)
 ;  return:  ^utility($j,"IB",count for event,count for procedures) =
"RTN","IBCSC4A",75,0)
 ;           pices: 1 = procedure
"RTN","IBCSC4A",76,0)
 ;                  2 = date (only if new date)
"RTN","IBCSC4A",77,0)
 ;                  3 = sequentual grouping letter (only if new date) 
"RTN","IBCSC4A",78,0)
 ;                  4 = "+" to flag as CPT 4 procedure
"RTN","IBCSC4A",79,0)
 ;                  5 = if exemption applicable, info for that
"RTN","IBCSC4A",80,0)
 ;                6-9 = assoc dx in order
"RTN","IBCSC4A",81,0)
 ;                 10 = quantity
"RTN","IBCSC4A",82,0)
 ;              11-12 = modifiers
"RTN","IBCSC4A",83,0)
 ;                 13 = provider
"RTN","IBCSC4A",84,0)
 ;                 14 = location
"RTN","IBCSC4A",85,0)
 ;
"RTN","IBCSC4A",86,0)
 ; the exemption information returned will be first evaluated at the
"RTN","IBCSC4A",87,0)
 ; dx level and if nothing there to exempt, it will be at the procedure
"RTN","IBCSC4A",88,0)
 ; level.
"RTN","IBCSC4A",89,0)
 ;
"RTN","IBCSC4A",90,0)
 N IBX,IBY,IBDT,IBXX,IBP,IBC,IBD,IBSGRP,IBRMARK,IBDX,IBDXX,IBPP,IB46
"RTN","IBCSC4A",91,0)
 K ^TMP("PTF",$J),^TMP("IBPTFPS",$J)
"RTN","IBCSC4A",92,0)
 S IBFDT=$S(+$G(IBFDT):IBFDT\1,1:0),IBTDT=$S(+$G(IBTDT):IBTDT\1,1:9999999)+.999999
"RTN","IBCSC4A",93,0)
 ;
"RTN","IBCSC4A",94,0)
 ; get starting place for ^utility global
"RTN","IBCSC4A",95,0)
 S IBC=+$O(^UTILITY($J,"IB",":"),-1)
"RTN","IBCSC4A",96,0)
 ;
"RTN","IBCSC4A",97,0)
 D PTFINFOR^DGAPI(DFN,IBPTF) I '$D(^TMP("PTF",$J)) G PTFPSQ
"RTN","IBCSC4A",98,0)
 ;
"RTN","IBCSC4A",99,0)
 S IBX=0 F  S IBX=$O(^TMP("PTF",$J,IBX)) Q:IBX<1  S IBY=^TMP("PTF",$J,IBX) I $S(IBFDT<+IBY&(IBTDT>+IBY):1,1:0) S ^TMP("IBPTFPS",$J,+IBY)=""
"RTN","IBCSC4A",100,0)
 I '$D(^TMP("IBPTFPS",$J)) G PTFPSQ
"RTN","IBCSC4A",101,0)
 ;
"RTN","IBCSC4A",102,0)
 K ^TMP("PTF",$J)
"RTN","IBCSC4A",103,0)
 D ICDINFO^DGAPI(DFN,IBPTF) ;get the dx's for the ptf
"RTN","IBCSC4A",104,0)
 ;
"RTN","IBCSC4A",105,0)
 S IBDT=0 F  S:'IBC!($D(^UTILITY($J,"IB",IBC))) IBC=IBC+1 S IBDT=$O(^TMP("IBPTFPS",$J,IBDT)) Q:IBDT<1  D
"RTN","IBCSC4A",106,0)
 . ; 
"RTN","IBCSC4A",107,0)
 . S IBD=0,IBSGRP=$$SEQGRP(IBC)
"RTN","IBCSC4A",108,0)
 . D CPTINFO^DGAPI(DFN,,IBDT) I '$D(^TMP("PTF",$J,46)) Q
"RTN","IBCSC4A",109,0)
 . S IB46=$P($G(^TMP("PTF",$J,46,0)),"^",2)_"^"_$P($G(^(0)),"^",4)
"RTN","IBCSC4A",110,0)
 . ;
"RTN","IBCSC4A",111,0)
 . S IBX=0 F  S IBX=$O(^TMP("PTF",$J,46,IBX)) Q:IBX<1  S IBY=^TMP("PTF",$J,46,IBX) D
"RTN","IBCSC4A",112,0)
 .. S IBRMARK=""
"RTN","IBCSC4A",113,0)
 .. F IBP=5:1:8,16:1:19 S IBDX=$P(IBY,"^",IBP),IBDXX=0 F  S IBDXX=$O(^TMP("PTF",$J,46.1,IBDXX)) Q:IBDXX<1!(IBRMARK)  I $P(^TMP("PTF",$J,46.1,IBDXX),"^",2)=IBDX D
"RTN","IBCSC4A",114,0)
 ... F IBPP=3:1:10 I $P(^TMP("PTF",$J,46.1,IBDXX),"^",IBPP) S IBRMARK=IBPP Q
"RTN","IBCSC4A",115,0)
 .. S IBD=IBD+1,^UTILITY($J,"IB",IBC,IBD)=$P(IBY,"^",2)_"^"_$S(IBD=1:$P(IBDT,".")_"^"_IBSGRP_"^+^",1:"^^^")_$S(IBRMARK:$P($T(EXEMPT+(IBRMARK-2)),";",3),1:"")_"^"_$P(IBY,"^",5,8)_"^"_$P(IBY,"^",15)_"^"_$P(IBY,"^",3,4)_"^"_IB46
"RTN","IBCSC4A",116,0)
 .. I IBSGRP'="" S ^UTILITY($J,"IB","B",IBSGRP_IBD)=IBC_"^"_IBD
"RTN","IBCSC4A",117,0)
 . S IBD=0
"RTN","IBCSC4A",118,0)
 . K ^TMP("PTF",$J,46)
"RTN","IBCSC4A",119,0)
 ;
"RTN","IBCSC4A",120,0)
PTFPSQ K ^TMP("PTF",$J),^TMP("IBPTFPS",$J),^TMP("CPT",$J)
"RTN","IBCSC4A",121,0)
 Q
"RTN","IBCSC4A",122,0)
 ;
"RTN","IBCSC4A",123,0)
EXEMPT ; exemption reasons
"RTN","IBCSC4A",124,0)
 ;;SC
"RTN","IBCSC4A",125,0)
 ;;AO
"RTN","IBCSC4A",126,0)
 ;;IR
"RTN","IBCSC4A",127,0)
 ;;SW
"RTN","IBCSC4A",128,0)
 ;;MT
"RTN","IBCSC4A",129,0)
 ;;HC
"RTN","IBCSC4A",130,0)
 ;;CV
"RTN","IBCSC4A",131,0)
 ;;SH
"RTN","IBCSC4A",132,0)
 ;
"RTN","IBCSC4A",133,0)
 ;
"RTN","IBCSC4A",134,0)
 ;
"RTN","IBCSC4A",135,0)
P Q
"RTN","IBCSC4A",136,0)
 ;S M=($A($E(X,1))-64),S=$E(X,2),IB5=$S($D(^UTILITY($J,"IB",M,S)):^(S),1:"") I IB5]"" Q:$P(^UTILITY($J,"IB",M,1),U,3)=$E(X,1)
"RTN","IBCSC4A",137,0)
 ;F J=M:1:26 Q:'$D(^UTILITY($J,"IB",J))  I $P(^UTILITY($J,"IB",J,1),U,3)=$E(X,1) S M=J,IBA=1 Q
"RTN","IBCSC4A",138,0)
 ;S:'$D(IBA) M=0 K IBA Q
"RTN","IBCSC4A",139,0)
D Q
"RTN","IBCSC4A",140,0)
 ;S M=($A($E(X,1))-64),S=$E(X,2),IB4=$S($D(^UTILITY($J,"IBDX",M,S)):^(S),1:"") I IB4]"" Q:$P(^UTILITY($J,"IBDX",M,1),U,3)=$E(X,1)
"RTN","IBCSC4A",141,0)
 ;F J=M:1:26 Q:'$D(^UTILITY($J,"IBDX",J))  I $P(^UTILITY($J,"IBDX",J,1),U,3)=$E(X,1) S M=J,IBA=1 Q
"RTN","IBCSC4A",142,0)
 ;S:'$D(IBA) M=0 K IBA Q
"RTN","IBCSC4B")
0^5^B14226360
"RTN","IBCSC4B",1,0)
IBCSC4B ;ALB/MJB - MCCR PTF SCREEN (CONT.) ;24 FEB 89  9:52
"RTN","IBCSC4B",2,0)
 ;;2.0;INTEGRATED BILLING;**210,228,304,479,522**;21-MAR-94;Build 11
"RTN","IBCSC4B",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCSC4B",4,0)
 ;
"RTN","IBCSC4B",5,0)
 ;
"RTN","IBCSC4B",6,0)
PRO ; display PTF procedures within date range of bill
"RTN","IBCSC4B",7,0)
 ; ^UTILITY is rebuilt because PCM may have changed since originally built
"RTN","IBCSC4B",8,0)
 ;
"RTN","IBCSC4B",9,0)
 D PTFPDSP($G(IBIFN))
"RTN","IBCSC4B",10,0)
 Q
"RTN","IBCSC4B",11,0)
 ;
"RTN","IBCSC4B",12,0)
PTFPDSP(IBIFN) ; display PTF procedures within the date range of the bill
"RTN","IBCSC4B",13,0)
 ; Output:  ^UTILITY($J,"IB") as defined by PTFPRDT^IBCSC4A
"RTN","IBCSC4B",14,0)
 ; includes ICD Surgeries (401) and ICD Procedures (601) or CPT Professional Services (801)
"RTN","IBCSC4B",15,0)
 N IB0,IBU,IBPTF,IBFDT,IBTDT,IBPCM K ^UTILITY($J,"IB")
"RTN","IBCSC4B",16,0)
 N IBLCNT,IBE,IBE1,IBE2,IBC,IBI,IBR,IBHEADER,IBCODE,IBLINE,IBCNT,TYPE,SGRP,IBSGCD,PRTARR,DIR,Y,X
"RTN","IBCSC4B",17,0)
 ;
"RTN","IBCSC4B",18,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),IBPTF=$P(IB0,U,8),IBPCM=+$P(IB0,U,9)
"RTN","IBCSC4B",19,0)
 S IBU=$G(^DGCR(399,+IBIFN,"U")),IBFDT=+IBU,IBTDT=$P(IBU,U,2) Q:$P(IB0,U,5)>2
"RTN","IBCSC4B",20,0)
 ;
"RTN","IBCSC4B",21,0)
 D PTFPRDT^IBCSC4A(IBPTF,IBFDT,IBTDT,IBPCM,IBIFN)
"RTN","IBCSC4B",22,0)
 ;
"RTN","IBCSC4B",23,0)
 W @IOF,?27,"OPERATION/PROCEDURE SCREEN",! S IBLCNT=2
"RTN","IBCSC4B",24,0)
 I '$O(^UTILITY($J,"IB",0)) W !!,"* No PROCEDURE CODES in PTF record for this episode of care.",!! Q
"RTN","IBCSC4B",25,0)
 ;
"RTN","IBCSC4B",26,0)
 S IBE1=0 F  S IBE1=$O(^UTILITY($J,"IB",IBE1)) Q:'IBE1  S IBE2=$O(^UTILITY($J,"IB",IBE1)) D  S IBE1=IBE2 Q:'IBE1
"RTN","IBCSC4B",27,0)
 . ;
"RTN","IBCSC4B",28,0)
 . K PRTARR S PRTARR(1)=""
"RTN","IBCSC4B",29,0)
 . ;
"RTN","IBCSC4B",30,0)
 . S IBE=IBE1,IBCNT=2,IBR=0 D  S IBE=IBE2,IBCNT=2,IBR=40 I +IBE D
"RTN","IBCSC4B",31,0)
 .. ;
"RTN","IBCSC4B",32,0)
 .. S IBHEADER=$G(^UTILITY($J,"IB",IBE,1)),TYPE=$P(IBHEADER,U,4),SGRP=$P(IBHEADER,U,3)
"RTN","IBCSC4B",33,0)
 .. S IBLINE=$G(PRTARR(IBCNT)) S PRTARR(IBCNT)=IBLINE_$$DSPWDH(IBLINE,IBR)_$$DSPHDR(IBHEADER,TYPE) S IBCNT=IBCNT+1
"RTN","IBCSC4B",34,0)
 .. ;
"RTN","IBCSC4B",35,0)
 .. S IBC=0 F  S IBC=$O(^UTILITY($J,"IB",IBE,IBC)) Q:'IBC  D
"RTN","IBCSC4B",36,0)
 ... ;
"RTN","IBCSC4B",37,0)
 ... S IBCODE=$G(^UTILITY($J,"IB",IBE,IBC)),IBSGCD=SGRP_IBC
"RTN","IBCSC4B",38,0)
 ... S IBLINE=$G(PRTARR(IBCNT)) S PRTARR(IBCNT)=IBLINE_$$DSPWDH(IBLINE,IBR)_$$DSPCOD(IBCODE,TYPE,IBSGCD) S IBCNT=IBCNT+1
"RTN","IBCSC4B",39,0)
 .. ;
"RTN","IBCSC4B",40,0)
 . S IBI="" F  S IBI=$O(PRTARR(IBI)) Q:IBI=""  W !,PRTARR(IBI) S IBLCNT=IBLCNT+1 I IBLCNT>21 D  S IBLCNT=1 I 'Y S IBE2=0 Q
"RTN","IBCSC4B",41,0)
 .. W ! S DIR(0)="E" D ^DIR K DIR,DIRUT W !
"RTN","IBCSC4B",42,0)
 ;
"RTN","IBCSC4B",43,0)
 Q
"RTN","IBCSC4B",44,0)
 ;
"RTN","IBCSC4B",45,0)
DSPWDH(LN,RCOL) ; Pad line to RCOL width
"RTN","IBCSC4B",46,0)
 S LN=$G(LN) S LN=$J("",($G(RCOL)-$L(LN)))
"RTN","IBCSC4B",47,0)
 Q LN
"RTN","IBCSC4B",48,0)
 ;
"RTN","IBCSC4B",49,0)
DSPHDR(LN,TYPE) ; Format header line
"RTN","IBCSC4B",50,0)
 N IBX,IBLINE S IBLINE=""
"RTN","IBCSC4B",51,0)
 I $G(TYPE)="" S IBLINE="Surgery Date: "
"RTN","IBCSC4B",52,0)
 I $G(TYPE)="*" S IBLINE="Non-O/R Procedure Date: "
"RTN","IBCSC4B",53,0)
 I $G(TYPE)="+" S IBLINE="Prof Svc Date: "
"RTN","IBCSC4B",54,0)
 S IBX=$P($G(LN),U,2) I +IBX S IBLINE=IBLINE_$$FMTE^XLFDT(+IBX)
"RTN","IBCSC4B",55,0)
 ;
"RTN","IBCSC4B",56,0)
 S IBLINE=$E(IBLINE,1,38)
"RTN","IBCSC4B",57,0)
 Q IBLINE
"RTN","IBCSC4B",58,0)
 ;
"RTN","IBCSC4B",59,0)
DSPCOD(LN,TYPE,SG) ; Format code line
"RTN","IBCSC4B",60,0)
 N IBX,IBPB,IBLINE S IBLINE=""
"RTN","IBCSC4B",61,0)
 S IBPB=" " I $G(SG)'="" S IBPB=$G(^UTILITY($J,"IB","B",SG)) S IBPB=$S($P(IBPB,U,3)="Y":"*",1:" ")
"RTN","IBCSC4B",62,0)
 ;
"RTN","IBCSC4B",63,0)
 I '$G(LN) S IBLINE=$J($G(SG)_"-",4)_"UNSPECIFIED CODE"
"RTN","IBCSC4B",64,0)
 ;
"RTN","IBCSC4B",65,0)
 I $G(TYPE)'="+",+$G(LN) S IBX=$$ICD0^IBACSV(+LN) D
"RTN","IBCSC4B",66,0)
 . S IBLINE=IBPB_$J($G(SG)_"-",4)_$P(IBX,U,1) S IBLINE=IBLINE_$$DSPWDH(IBLINE,14)_$P(IBX,U,4)
"RTN","IBCSC4B",67,0)
 ;
"RTN","IBCSC4B",68,0)
 I $G(TYPE)="+",+$G(LN) S IBX=$$CPT^IBACSV(+LN) D
"RTN","IBCSC4B",69,0)
 . S IBLINE=$J($G(SG)_"-",4)_$P(IBX,U,1) I $P(LN,U,5)'="" S IBLINE=IBLINE_"("_$P(LN,U,5)_")"
"RTN","IBCSC4B",70,0)
 . S IBLINE=IBLINE_$$DSPWDH(IBLINE,13)_"PROV-"_$P($G(^VA(200,+$P($G(LN),U,13),0)),U,1)
"RTN","IBCSC4B",71,0)
 . I $P(LN,U,10)>1 S IBLINE=$E(IBLINE,1,(38-($L($P(LN,U,10))+3)))_" ("_$P(LN,U,10)_")"
"RTN","IBCSC4B",72,0)
 ;
"RTN","IBCSC4B",73,0)
 S IBLINE=$E(IBLINE,1,38)
"RTN","IBCSC4B",74,0)
 Q IBLINE
"RTN","IBCSC4B",75,0)
 ;
"RTN","IBCSC4B",76,0)
 ;
"RTN","IBCSC4B",77,0)
Q K IB3,IB4,IB5,IB6,IB7,IB8,IB9,IBAE,IBAO,IBCT,IBDIA,IBDP,IBDX,IBDXC,IBDXX,IBDXY,IBI,IBNC,IBNOR,IBP,IBPY,IBOP,IBOPC,IBOPX,IBOPY,IBPP,IBPX,IBSD,IBSP,IBWE,IBWO,IBPRO,IBPROT
"RTN","IBCSC4B",78,0)
 K %DT,A,B,DIC,F,I,J,K,M,S,X,Y,N,P
"RTN","IBCSC4B",79,0)
 Q
"RTN","IBCSC4D")
0^6^B76016238
"RTN","IBCSC4D",1,0)
IBCSC4D ;ALB/ARH - ADD/ENTER DIAGNOSIS ;11/9/93
"RTN","IBCSC4D",2,0)
 ;;2.0;INTEGRATED BILLING;**55,62,91,106,124,51,210,403,400,461,516,522**;21-MAR-94;Build 11
"RTN","IBCSC4D",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCSC4D",4,0)
 ;
"RTN","IBCSC4D",5,0)
EN ;add/edit diagnosis for a bill, IBIFN required
"RTN","IBCSC4D",6,0)
 N IBINP,POAEDIT
"RTN","IBCSC4D",7,0)
 S POAEDIT=0 ; flag for editing POA indicators, set in DXINPT^IBCSC4E
"RTN","IBCSC4D",8,0)
 S IBX=$G(^DGCR(399,+IBIFN,0))
"RTN","IBCSC4D",9,0)
 S IBINP=$$INPAT^IBCEF(+IBIFN)
"RTN","IBCSC4D",10,0)
 D DELALL^IBCSC4E(+IBIFN)
"RTN","IBCSC4D",11,0)
 I IBINP D DXINPT^IBCSC4E(IBIFN)
"RTN","IBCSC4D",12,0)
 I 'IBINP D DXOPT(IBIFN)
"RTN","IBCSC4D",13,0)
 S IBDIFN=0 D SET(IBIFN,.IBDXA,.IBPOA) D:+IBDXA DISP(.IBPOA)
"RTN","IBCSC4D",14,0)
 I IBINP,$D(^IBA(362.3,"AO",IBIFN)),$$FT^IBCEF(IBIFN)=3,POAEDIT D POAASK^IBCSC4E
"RTN","IBCSC4D",15,0)
 ;
"RTN","IBCSC4D",16,0)
 ; esg - IB*2*400 - ask for PPS (DRG) for inpatient, UB claims
"RTN","IBCSC4D",17,0)
 I IBINP,$$FT^IBCEF(IBIFN)=3 D  I $D(Y) G EXIT
"RTN","IBCSC4D",18,0)
 . N DIE,DA,DR,ICDVDT
"RTN","IBCSC4D",19,0)
 . S ICDVDT=$$BDATE^IBACSV(IBIFN)
"RTN","IBCSC4D",20,0)
 . S DIE=399,DA=IBIFN,DR="170T" D ^DIE
"RTN","IBCSC4D",21,0)
 . W !
"RTN","IBCSC4D",22,0)
 . Q
"RTN","IBCSC4D",23,0)
 ;
"RTN","IBCSC4D",24,0)
E1 S IBDX=$$ASKDX I +IBDX>0 S IBDIFN=+$G(IBDXA(+IBDX)) S:'IBDIFN IBDIFN=$$ADD(+IBDX,IBIFN) G:+IBDIFN=0 E1 I +IBDIFN>0 D EDIT(+IBDIFN) D SET(IBIFN,.IBDXA,.IBPOA) G E1
"RTN","IBCSC4D",25,0)
 S IBX=$G(^DGCR(399,+IBIFN,0)) I $P(IBX,U,5)<3,$P(IBX,U,27)'=2 S DGRVRCAL=1
"RTN","IBCSC4D",26,0)
EXIT K IBDIFN,IBDXA,IBPOA,IBDX,IBX
"RTN","IBCSC4D",27,0)
 Q
"RTN","IBCSC4D",28,0)
 ;
"RTN","IBCSC4D",29,0)
ASKDX() ;
"RTN","IBCSC4D",30,0)
 N X,Y,IBDATE,IBDTTX,ICDVDT
"RTN","IBCSC4D",31,0)
 ;S DIR("A")="Select ICD DIAGNOSIS",DIR(0)="362.3,.01O" D ^DIR K DIR
"RTN","IBCSC4D",32,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN),ICDVDT=IBDATE
"RTN","IBCSC4D",33,0)
 S IBDTTX=$$DAT1^IBOUTL(IBDATE)
"RTN","IBCSC4D",34,0)
 I $G(IBIFN),$$INPAT^IBCEF(IBIFN) D
"RTN","IBCSC4D",35,0)
 . N Z S Z=$$EXPAND^IBTRE(399,215,+$G(^DGCR(399,IBIFN,"U2")))
"RTN","IBCSC4D",36,0)
 . W !,$S(Z'="":"",1:"NO ")_"Admitting Diagnosis"_$S(Z'="":": "_Z,1:" found"),!
"RTN","IBCSC4D",37,0)
AD S DIR("??")="^D HELP^IBCSC4D"
"RTN","IBCSC4D",38,0)
 S DIR("?",1)="Enter a diagnosis for this bill.  Duplicates are not allowed."
"RTN","IBCSC4D",39,0)
 S DIR("?")="Only diagnosis codes active on "_IBDTTX_", no duplicates for a bill, and bill must not be authorized or cancelled."
"RTN","IBCSC4D",40,0)
 S DIR("S")="I $$ICD9VER^IBACSV(+Y)="_$$ICD9SYS^IBACSV(IBDATE) ; inactive allowed but either ICD-9 or ICD-10 *461
"RTN","IBCSC4D",41,0)
 S DIR(0)="PO^80:EAMQI"
"RTN","IBCSC4D",42,0)
 D ^DIR K DIR
"RTN","IBCSC4D",43,0)
 I Y>0,'$D(IBDXA(+Y)),'$$ICD9ACT^IBACSV(+Y,IBDATE) D  G AD
"RTN","IBCSC4D",44,0)
 . W !!,*7,"The Diagnosis code is inactive for the date of service ("_IBDTTX_").",!
"RTN","IBCSC4D",45,0)
 Q Y
"RTN","IBCSC4D",46,0)
 ;
"RTN","IBCSC4D",47,0)
ADD(DX,IFN,DXPOA) ;
"RTN","IBCSC4D",48,0)
 I $$ICD9VER^IBACSV(DX)=1,$E($$ICD9^IBACSV(DX,$$BDATE^IBACSV(IFN)))="E",$$MAXECODE^IBCSC4F(IFN) W !!,*7,"Only 3 External Cause of Injury diagnoses are allowed per claim.",! Q 0
"RTN","IBCSC4D",49,0)
 S DIC("DR")=".02////"_IFN I $G(DXPOA)'="" S DIC("DR")=DIC("DR")_";.04///"_DXPOA
"RTN","IBCSC4D",50,0)
 S DIC="^IBA(362.3,",DIC(0)="AQL",X=DX K DA,DO D FILE^DICN K DA,DO,DIC,X
"RTN","IBCSC4D",51,0)
 Q Y
"RTN","IBCSC4D",52,0)
 ;
"RTN","IBCSC4D",53,0)
EDIT(IBDXIFN) ;
"RTN","IBCSC4D",54,0)
 N NEEDPOA
"RTN","IBCSC4D",55,0)
 S DIDEL=362.3,DIE="^IBA(362.3,",DA=IBDXIFN
"RTN","IBCSC4D",56,0)
 ; only ask for POA if inpatient UB-04 claim
"RTN","IBCSC4D",57,0)
 S NEEDPOA=IBINP&($$FT^IBCEF(IBIFN)=3)
"RTN","IBCSC4D",58,0)
 S DR=".01Diagnosis"_$S(NEEDPOA:";.04POA Indicator",1:"")_";.03Order"
"RTN","IBCSC4D",59,0)
 D ^DIE K DIE,DR,DA,DIC,DIDEL
"RTN","IBCSC4D",60,0)
 ;
"RTN","IBCSC4D",61,0)
 I $D(^IBA(362.3,IBDXIFN,0)),$$FIRSTDX(IBDXIFN) D  G EDITQ
"RTN","IBCSC4D",62,0)
 . N DIE,DR,DA,Y,X,IB0
"RTN","IBCSC4D",63,0)
 . S IB0=^IBA(362.3,IBDXIFN,0)
"RTN","IBCSC4D",64,0)
 . S DIE="^DGCR(399,",DA=+$P(IB0,U,2),DR="215////"_+IB0 D ^DIE
"RTN","IBCSC4D",65,0)
 ;
"RTN","IBCSC4D",66,0)
 ; MRD;IB*2.0*516 - Added '$D check *before* removing the dangling
"RTN","IBCSC4D",67,0)
 ; pointers; and added code to 'shift' subsequent pointers, if any.
"RTN","IBCSC4D",68,0)
 ; If the entry was deleted, remove dangling pointers from #399.0304.
"RTN","IBCSC4D",69,0)
 I '$D(^IBA(362.3,IBDXIFN)) D
"RTN","IBCSC4D",70,0)
 . N IBPROC,IBPROCD,IBPIECE,IBHIT
"RTN","IBCSC4D",71,0)
 . S (IBHIT,IBPROC)=0
"RTN","IBCSC4D",72,0)
 . F  S IBPROC=$O(^DGCR(399,IBIFN,"CP",IBPROC)) Q:'IBPROC  S IBPROCD=$G(^(IBPROC,0)) I IBPROCD]"" D
"RTN","IBCSC4D",73,0)
 . . F IBPIECE=11:1:14 I +$P(IBPROCD,"^",IBPIECE)=IBDXIFN S IBHIT=1 D UPD^IBCU72("@",IBPIECE-1)
"RTN","IBCSC4D",74,0)
 . . Q
"RTN","IBCSC4D",75,0)
 . ;
"RTN","IBCSC4D",76,0)
 . ; If a pointer to the deleted DX code was found and removed, then
"RTN","IBCSC4D",77,0)
 . ; sound <bell>, display message, and 'shift' any other associated
"RTN","IBCSC4D",78,0)
 . ; DX codes to close the gap, if any.
"RTN","IBCSC4D",79,0)
 . I IBHIT D
"RTN","IBCSC4D",80,0)
 . . W *7,!,"This diagnosis was removed as a procedure diagnosis."
"RTN","IBCSC4D",81,0)
 . . ;
"RTN","IBCSC4D",82,0)
 . . S IBPROC=0
"RTN","IBCSC4D",83,0)
 . . F  S IBPROC=$O(^DGCR(399,IBIFN,"CP",IBPROC)) Q:'IBPROC  S IBPROCD=$G(^(IBPROC,0)) I IBPROCD]"" D
"RTN","IBCSC4D",84,0)
 . . . F IBPIECE=11:1:13 D
"RTN","IBCSC4D",85,0)
 . . . . ; If DX field is blank, and next one is not blank, then shift it 'up'.
"RTN","IBCSC4D",86,0)
 . . . . I $P(IBPROCD,"^",IBPIECE)="",$P(IBPROCD,"^",IBPIECE+1)'="" D
"RTN","IBCSC4D",87,0)
 . . . . . D UPD^IBCU72("@",IBPIECE)                          ; Delete from one slot...
"RTN","IBCSC4D",88,0)
 . . . . . D UPD^IBCU72($P(IBPROCD,"^",IBPIECE+1),IBPIECE-1)  ; Add to the blank slot.
"RTN","IBCSC4D",89,0)
 . . . . . S IBPROCD=$G(^DGCR(399,IBIFN,"CP",IBPROC,0))  ; Grab updated version of this node.
"RTN","IBCSC4D",90,0)
 . . . . . Q
"RTN","IBCSC4D",91,0)
 . . . . Q
"RTN","IBCSC4D",92,0)
 . . . Q
"RTN","IBCSC4D",93,0)
 . . Q
"RTN","IBCSC4D",94,0)
 . Q
"RTN","IBCSC4D",95,0)
 ;
"RTN","IBCSC4D",96,0)
EDITQ Q
"RTN","IBCSC4D",97,0)
 ;
"RTN","IBCSC4D",98,0)
SET(IFN,DXARR,POARR) ;setup arrays of all dx's for bill, array names should be passed by reference
"RTN","IBCSC4D",99,0)
 ;returns: DXARR(DX)=DX IFN, POARR(ORDER)=DX ^ PRINT ORDER ^ POA,  (DXARR,POARR)=IFN ^ dx count
"RTN","IBCSC4D",100,0)
 ;if a dx does not have a print order then PRINT ORDER=(999+count of dx) so will be in order of entry if no print order
"RTN","IBCSC4D",101,0)
 N CNT,IBX,IBY,IBZ,DIFN,IBC,ARR K DXARR,POARR S IBC="AIFN"_$G(IFN)
"RTN","IBCSC4D",102,0)
 S (CNT,IBX)=0 F  S IBX=$O(^IBA(362.3,IBC,IBX)) Q:'IBX  D
"RTN","IBCSC4D",103,0)
 . S DIFN=$O(^IBA(362.3,IBC,IBX,0)),IBY=$G(^IBA(362.3,DIFN,0)) Q:'IBY
"RTN","IBCSC4D",104,0)
 . S CNT=CNT+1,IBZ=+$P(IBY,U,3) I 'IBZ S IBZ=999+CNT
"RTN","IBCSC4D",105,0)
 . S DXARR(+IBY)=DIFN,ARR(IBZ)=+IBY_U_$P(IBY,U,3,4)
"RTN","IBCSC4D",106,0)
 S (IBX,IBY)=0 F  S IBY=$O(ARR(IBY)) Q:'IBY  S IBX=IBX+1,POARR(IBX)=ARR(IBY)
"RTN","IBCSC4D",107,0)
 S (DXARR,POARR)=$G(IFN)_"^"_CNT
"RTN","IBCSC4D",108,0)
 Q
"RTN","IBCSC4D",109,0)
 ;
"RTN","IBCSC4D",110,0)
DISP(POARR) ;screen display of existing dx's for a bill,
"RTN","IBCSC4D",111,0)
 ;input should be print order array returned by SET^IBCSC4D: POARR(PRINT ORDER)=DX, passed by reference
"RTN","IBCSC4D",112,0)
 N IBX,IBY,IBZ,IBDATE,POA
"RTN","IBCSC4D",113,0)
 S IBDATE=$$BDATE^IBACSV(+$G(IBIFN)) ; The bill date of service
"RTN","IBCSC4D",114,0)
 W !!,?5,"-----------------  Existing Diagnoses for Bill  -----------------",!
"RTN","IBCSC4D",115,0)
 S IBX=0 F  S IBX=$O(POARR(IBX)) Q:'IBX  S IBZ=POARR(IBX),IBY=$$ICD9^IBACSV(+IBZ,IBDATE) D
"RTN","IBCSC4D",116,0)
 .S POA="" I $$INPAT^IBCEF(IBIFN),$$FT^IBCEF(IBIFN)=3 S POA=$P(IBZ,U,3) S:POA=1 POA="" S:POA'="" POA="("_POA_")"
"RTN","IBCSC4D",117,0)
 . W !,$P(IBY,U),?9,POA,?13,$P(IBY,U,3),?75,$S($P(IBZ,U,2)<1000:"("_$P(IBZ,U,2)_")",1:"")
"RTN","IBCSC4D",118,0)
 W !
"RTN","IBCSC4D",119,0)
 Q
"RTN","IBCSC4D",120,0)
 ;
"RTN","IBCSC4D",121,0)
DISP1(IFN) ;
"RTN","IBCSC4D",122,0)
 I +$G(IFN) N POARR D SET(IFN,"",.POARR),DISP(.POARR)
"RTN","IBCSC4D",123,0)
 Q
"RTN","IBCSC4D",124,0)
HELP ;called for help from dx enter to display existing dx's
"RTN","IBCSC4D",125,0)
 Q:'$G(IBIFN)  N IBX
"RTN","IBCSC4D",126,0)
 D SET(IBIFN,.IBDXA,"") S IBX=$G(^DGCR(399,+IBIFN,0)) I IBX="" Q
"RTN","IBCSC4D",127,0)
 I $P(IBX,U,5)>2 S DFN=$P(IBX,U,2),IBX=$G(^DGCR(399,+IBIFN,"U")) D OPTDX(DFN,$P(IBX,U,1),$P(IBX,U,2),.IBOEDX,.IBDXA),DISPOE(.IBOEDX,.IBDXA)
"RTN","IBCSC4D",128,0)
 D SET(IBIFN,.IBDXA,.IBPOA) D:+IBDXA DISP(.IBPOA)
"RTN","IBCSC4D",129,0)
 Q
"RTN","IBCSC4D",130,0)
 ;
"RTN","IBCSC4D",131,0)
ADD1(IFN) ;does not work, but it should replace ask add, and edit
"RTN","IBCSC4D",132,0)
 ;S DIC="^IBA(362.3,",DIC(0)="EMAQ",D="AIFN"_$G(IFN) D IX^DIC K DA,DO,DIC,D
"RTN","IBCSC4D",133,0)
 Q
"RTN","IBCSC4D",134,0)
 ;
"RTN","IBCSC4D",135,0)
 ; ******************************************************************************************
"RTN","IBCSC4D",136,0)
 ;
"RTN","IBCSC4D",137,0)
DXOPT(IBIFN) ; display and ask user to select PCE diagnosis
"RTN","IBCSC4D",138,0)
 N IBDXA,IBOEDX,IBLIST,DFN,IBX
"RTN","IBCSC4D",139,0)
 D SET(IBIFN,.IBDXA,"")
"RTN","IBCSC4D",140,0)
 S DFN=$P($G(^DGCR(399,+IBIFN,0)),U,2),IBX=$G(^DGCR(399,+IBIFN,"U"))
"RTN","IBCSC4D",141,0)
 D OPTDX(DFN,$P(IBX,U,1),$P(IBX,U,2),.IBOEDX,.IBDXA),DISPOE(.IBOEDX,.IBDXA)
"RTN","IBCSC4D",142,0)
 I +$P($G(IBOEDX),U,2) D NEWDX(+IBOEDX) I $D(IBLIST) D ADDNEW(IBIFN,IBLIST,.IBOEDX)
"RTN","IBCSC4D",143,0)
 Q
"RTN","IBCSC4D",144,0)
 ;
"RTN","IBCSC4D",145,0)
OPTDX(DFN,DT1,DT2,ARRAY,IBDXE) ; get diagnosis from PCE for encounters within date range
"RTN","IBCSC4D",146,0)
 ; ARRAY(X)= DX ^ ORDER ^ OUTPATIENT ENCOUNTER (409.68) ^ DATE/TIME ^ TRUE IF NON-BILL ^ NON-BILL MESS ^ CLINIC
"RTN","IBCSC4D",147,0)
 N IBDT,IBOE,IBDX,IBDXN,IBDXA,IBDXB,IBCNT,IBCNT1,ARR,IBI,IBJ,IBK,IBVAL,IBCBK
"RTN","IBCSC4D",148,0)
 K ARRAY
"RTN","IBCSC4D",149,0)
 S (IBCNT,IBCNT1)=0,DT1=$G(DT1)-.0001,DT2=$S(+$G(DT2):DT2,1:9999999)+.7999
"RTN","IBCSC4D",150,0)
 ;
"RTN","IBCSC4D",151,0)
 S IBVAL("DFN")=DFN,IBVAL("BDT")=DT1,IBVAL("EDT")=DT2
"RTN","IBCSC4D",152,0)
 S IBCBK="D OEDX^IBCU81(Y,.IBDXA,.IBDXB)"
"RTN","IBCSC4D",153,0)
 D SCAN^IBSDU("PATIENT/DATE",.IBVAL,"",IBCBK,1) K ^TMP("DIERR",$J)
"RTN","IBCSC4D",154,0)
 ;
"RTN","IBCSC4D",155,0)
 S (IBCNT,IBCNT1,IBI)=0 F  S IBI=$O(IBDXA(IBI)) Q:'IBI  D
"RTN","IBCSC4D",156,0)
 . S IBJ=0 F  S IBJ=$O(IBDXA(IBI,IBJ)) Q:'IBJ  D
"RTN","IBCSC4D",157,0)
 .. S IBK=0 F  S IBK=$O(IBDXA(IBI,IBJ,IBK)) Q:'IBK  D
"RTN","IBCSC4D",158,0)
 ... S IBDXN=0 F  S IBDXN=$O(IBDXA(IBI,IBJ,IBK,IBDXN)) Q:'IBDXN  D
"RTN","IBCSC4D",159,0)
 .... S IBDX=IBDXA(IBI,IBJ,IBK,IBDXN) I $D(ARR(+IBDX))!(+$P(IBDX,U,5)&(+$G(IBDXB(+IBDX)))) Q
"RTN","IBCSC4D",160,0)
 .... S IBCNT=IBCNT+1 I '$D(IBDXE(+IBDX)) S IBCNT1=IBCNT1+1
"RTN","IBCSC4D",161,0)
 .... S ARRAY(IBCNT)=IBDX S ARR(+IBDX)=""
"RTN","IBCSC4D",162,0)
 S ARRAY=IBCNT_"^"_IBCNT1 K IBDXA,IBDXB,ARR
"RTN","IBCSC4D",163,0)
 Q
"RTN","IBCSC4D",164,0)
 ;
"RTN","IBCSC4D",165,0)
NEWDX(IBX) ; user select PCE diagnosis to add to bill
"RTN","IBCSC4D",166,0)
 Q:'$G(IBX)  N X,Y,DIR,DIRUT K IBLIST W !
"RTN","IBCSC4D",167,0)
NEWDX1 S DIR("?",1)="Enter the number preceding the Diagnosis you want added to the bill.",DIR("?",2)="Multiple entries may be added separated by commas or ranges separated by a dash."
"RTN","IBCSC4D",168,0)
 S DIR("?")="The diagnosis will be added to the bill with a print order corresponding to its position in this list."
"RTN","IBCSC4D",169,0)
 S DIR("A")="SELECT NEW DIAGNOSES TO ADD THE BILL"
"RTN","IBCSC4D",170,0)
 S DIR(0)="LO^1:"_+IBX D ^DIR K DIR G:'Y!$D(DIRUT) NEWDXE
"RTN","IBCSC4D",171,0)
 S IBLIST=Y
"RTN","IBCSC4D",172,0)
 ;
"RTN","IBCSC4D",173,0)
 S DIR("A")="YOU HAVE SELECTED "_IBLIST_" TO BE ADDED TO THE BILL IS THIS CORRECT",DIR("B")="YES"
"RTN","IBCSC4D",174,0)
 S DIR(0)="YO" D ^DIR K DIR I $D(DIRUT) K IBLIST G NEWDXE
"RTN","IBCSC4D",175,0)
 I 'Y G NEWDX1
"RTN","IBCSC4D",176,0)
NEWDXE Q
"RTN","IBCSC4D",177,0)
 ;
"RTN","IBCSC4D",178,0)
ADDNEW(IBIFN,LIST,IBOEA) ; add selected PCE diagnosis to bill
"RTN","IBCSC4D",179,0)
 Q:'LIST  N IBI,IBX,IBDX,IBDT,IBQ,IBY,IBPIFN,IBZ
"RTN","IBCSC4D",180,0)
 F IBI=1:1 S IBX=$P(LIST,",",IBI) Q:'IBX  I $D(IBOEA(IBX)) D
"RTN","IBCSC4D",181,0)
 . S IBDX=+IBOEA(IBX) I $D(^IBA(362.3,"AIFN"_IBIFN,IBDX)) Q
"RTN","IBCSC4D",182,0)
 . I $$ADD(IBDX,IBIFN) W "."
"RTN","IBCSC4D",183,0)
 Q
"RTN","IBCSC4D",184,0)
 ;
"RTN","IBCSC4D",185,0)
DISPOE(OEARR,EXARR) ; display outpatient PCE diagnosis
"RTN","IBCSC4D",186,0)
 N IBCNT,IBDX,IBX,IBY,IBDATE
"RTN","IBCSC4D",187,0)
 W @IOF,!,"============================= DIAGNOSIS SCREEN ==============================",!
"RTN","IBCSC4D",188,0)
 S IBDATE=$$BDATE^IBACSV(+$G(IBIFN)) ; The bills date of service
"RTN","IBCSC4D",189,0)
 S IBCNT=0 F  S IBCNT=$O(OEARR(IBCNT)) Q:'IBCNT  D
"RTN","IBCSC4D",190,0)
 . S IBY=OEARR(IBCNT),IBDX=$$ICD9^IBACSV(+IBY,IBDATE)
"RTN","IBCSC4D",191,0)
 . S IBX="" I $D(EXARR(+OEARR(IBCNT))) S IBX="*"
"RTN","IBCSC4D",192,0)
 . W !,$J(IBCNT,2),")",?4,IBX,?5,$P(IBDX,U),?14,$E($P(IBDX,U,3),1,19)
"RTN","IBCSC4D",193,0)
 . I +$P(IBY,U,7) W ?35,$E($P($G(^SC(+$P(IBY,U,7),0)),U,1),1,15)
"RTN","IBCSC4D",194,0)
 . I $P(IBY,U,2)'="" W ?52,$E($$EXPAND^IBTRE(9000010.07,.12,$P(IBY,U,2)),1,3)
"RTN","IBCSC4D",195,0)
 . I $P(IBY,U,4)'="" W ?57,$$FMTE^XLFDT($E($P(IBY,U,4),1,12),2)
"RTN","IBCSC4D",196,0)
 . I $P(IBY,U,6)'="" W ?72,$E($P(IBY,U,6),1,7)
"RTN","IBCSC4D",197,0)
 Q
"RTN","IBCSC4D",198,0)
 ;
"RTN","IBCSC4D",199,0)
DISPID ; Display the Associated Dx and Rx # for a procedure in the identifier.
"RTN","IBCSC4D",200,0)
 ;  Input:  Naked reference to the 0th node of an entry in the
"RTN","IBCSC4D",201,0)
 ;          Procedures (#304) sub-file of the Bill/Claims (#399) file.
"RTN","IBCSC4D",202,0)
 N I,X,IBY,Z
"RTN","IBCSC4D",203,0)
 S X=^(0),IBY=Y
"RTN","IBCSC4D",204,0)
 S I=$$PRCNM^IBCSCH1($P(X,U,1),$P(X,U,2)) W " ",$E($P(I,U,2)_$J("",27),1,27)
"RTN","IBCSC4D",205,0)
 S Z=$O(^DGCR(399,DA(1),"RC","ACP",+IBY,0))
"RTN","IBCSC4D",206,0)
 I Z S Z=$P($G(^DGCR(399,DA(1),"RC",Z,0)),U,11) W $E("  Rx: "_$S(Z:$P($G(^IBA(362.4,+Z,0)),U),1:"Missing")_$J("",14),1,14)
"RTN","IBCSC4D",207,0)
 I +$P(X,U,11) S I=+$G(^IBA(362.3,+$P(X,U,11),0)) W "  Dx 1: ",$P($$ICD9^IBACSV(+I,$$BDATE^IBACSV(DA(1))),U)
"RTN","IBCSC4D",208,0)
 Q
"RTN","IBCSC4D",209,0)
FIRSTDX(DA) ; Called by trigger cross reference #2 on file 362.3,.03
"RTN","IBCSC4D",210,0)
 ; DA is the ien of the entry in file 362.3
"RTN","IBCSC4D",211,0)
 ; Check if the corresponding bill is for an inpatient episode, the
"RTN","IBCSC4D",212,0)
 ; admitting dx for the corresponding bill is null and the dx being
"RTN","IBCSC4D",213,0)
 ; entered is the first for the bill.  If this is all true, admitting
"RTN","IBCSC4D",214,0)
 ; dx should be set to the dx.
"RTN","IBCSC4D",215,0)
 ;
"RTN","IBCSC4D",216,0)
 N OK,Z
"RTN","IBCSC4D",217,0)
 S Z=$G(^IBA(362.3,DA,0)),OK=0
"RTN","IBCSC4D",218,0)
 I $$INPAT^IBCEF(+$P(Z,U,2)),$P($G(^DGCR(399,+$P(Z,U,2),"U2")),U)="",'$O(^IBA(362.3,"AO",+$P(Z,U,2),+$P(Z,U,3)),-1) S OK=1
"RTN","IBCSC4D",219,0)
 Q OK
"RTN","IBCSC4D",220,0)
 ;
"RTN","IBCSC4E")
0^7^B48958417
"RTN","IBCSC4E",1,0)
IBCSC4E ;ALB/ARH - ADD/ENTER PTF/OE DIAGNOSIS ;3/2/94
"RTN","IBCSC4E",2,0)
 ;;2.0;INTEGRATED BILLING;**8,106,121,124,210,266,403,479,522**;21-MAR-94;Build 11
"RTN","IBCSC4E",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCSC4E",4,0)
 ;
"RTN","IBCSC4E",5,0)
DXINPT(IBIFN) ; display and ask user to select PTF diagnosis
"RTN","IBCSC4E",6,0)
 N IBLIST,IBPTFDX
"RTN","IBCSC4E",7,0)
 D PTFDSP(IBIFN),PTFASK I $D(IBLIST) D PTFADD(IBIFN,IBLIST) S POAEDIT=1
"RTN","IBCSC4E",8,0)
 ; get POA indicators from QuadraMed for UB-04 inpatient claims
"RTN","IBCSC4E",9,0)
 I $$FT^IBCEF(IBIFN)=3 D SETPOA^IBCSC4F(IBIFN)
"RTN","IBCSC4E",10,0)
 K ^TMP($J,"IBDX")
"RTN","IBCSC4E",11,0)
 Q
"RTN","IBCSC4E",12,0)
 ;
"RTN","IBCSC4E",13,0)
PTFASK ;
"RTN","IBCSC4E",14,0)
 D PTF Q:$G(IBPTFDX)'>0  N X,Y,DIR,DIRUT K IBLIST W !
"RTN","IBCSC4E",15,0)
PTFASK1 S DIR("A")="SELECT DIAGNOSIS FROM THE PTF RECORD TO INCLUDE ON THE BILL"
"RTN","IBCSC4E",16,0)
 S DIR("?",1)="Enter the alphanumeric preceding the diagnosis you want added to the bill.",DIR("?",2)=""
"RTN","IBCSC4E",17,0)
 S DIR("?",3)="To enter more than one separate them by a comma or within a movement use a"
"RTN","IBCSC4E",18,0)
 S DIR("?",4)="range separated by a dash.  * indicates the diagnosis is already on the bill."
"RTN","IBCSC4E",19,0)
 S DIR("?")="The print order for each diagnosis will be determined by the order in this list."
"RTN","IBCSC4E",20,0)
 S DIR(0)="FO^^D ITPTF^IBCSC4E" D ^DIR K DIR Q:$D(DIRUT)!(Y="")
"RTN","IBCSC4E",21,0)
 ;
"RTN","IBCSC4E",22,0)
 S X=Y D ITPTF S IBLIST=X,DIR("A",1)="YOU HAVE SELECTED "_X_" TO BE ADDED TO THE BILL",DIR("A")="IS THIS CORRECT",DIR("B")="YES"
"RTN","IBCSC4E",23,0)
 S DIR(0)="YO" D ^DIR K DIR I $D(DIRUT) K IBLIST Q
"RTN","IBCSC4E",24,0)
 I 'Y K IBLIST G PTFASK1
"RTN","IBCSC4E",25,0)
 Q
"RTN","IBCSC4E",26,0)
 ;
"RTN","IBCSC4E",27,0)
PTF ;
"RTN","IBCSC4E",28,0)
 Q:'$D(^TMP($J,"IBDX","S"))  N IBX,IBY,IBZ,IBORD,IBNUM K IBPTFDX S IBORD="",IBPTFDX=0
"RTN","IBCSC4E",29,0)
 S IBX="" F  S IBX=$O(^TMP($J,"IBDX","S",IBX)) Q:IBX=""  D
"RTN","IBCSC4E",30,0)
 . S IBZ=+$G(^TMP($J,"IBDX","S",IBX)) Q:'IBZ
"RTN","IBCSC4E",31,0)
 . S IBORD=$E(IBX) Q:IBORD'?1A  S IBNUM=+$E(IBX,2,999) Q:IBNUM'>0
"RTN","IBCSC4E",32,0)
 . I IBNUM>$G(IBPTFDX(IBORD)) S IBPTFDX(IBORD)=IBNUM
"RTN","IBCSC4E",33,0)
 . I '$D(^IBA(362.3,"AIFN"_+$G(IBIFN),+IBZ)) S IBPTFDX=IBPTFDX+1
"RTN","IBCSC4E",34,0)
 Q
"RTN","IBCSC4E",35,0)
 ;
"RTN","IBCSC4E",36,0)
ITPTF ;
"RTN","IBCSC4E",37,0)
 N IBI,IB1,IB2,IB3,IBJ,IBX,IBY,IBZ,IBA
"RTN","IBCSC4E",38,0)
 S IBA="",IBX=X
"RTN","IBCSC4E",39,0)
 F IBI=1:1 S IBY=$P(IBX,",",IBI) Q:IBY=""  D  Q:'$D(X)  S X=IBA
"RTN","IBCSC4E",40,0)
 . I IBY["-" S IBZ=$P(IBY,"-",1),IB2=$P(IBY,"-",2) D  Q:'$D(X)
"RTN","IBCSC4E",41,0)
 .. I $E(IBZ,1)'=$E(IB2,1) K X Q
"RTN","IBCSC4E",42,0)
 .. S IBY="",IB1=$E(IBZ,2,999),IB2=$E(IB2,2,999),IBZ=$E(IBZ,1) I +IB2'>+IB1 K X Q
"RTN","IBCSC4E",43,0)
 .. F IBJ=IB1:1:IB2 S IBY=IBY_IBZ_IBJ_"-" I IBJ>$G(IBPTFDX(IBZ)) Q
"RTN","IBCSC4E",44,0)
 . F IBJ=1:1 S IB1=$P(IBY,"-",IBJ) Q:IB1=""  S IB2=$E(IB1,1),IB3=$E(IB1,2,99) D  Q:'$D(X)
"RTN","IBCSC4E",45,0)
 .. I IB1'?1A1.3N K X Q
"RTN","IBCSC4E",46,0)
 .. I IB2=""!'IB3 K X Q
"RTN","IBCSC4E",47,0)
 .. I '$D(IBPTFDX(IB2)) K X Q
"RTN","IBCSC4E",48,0)
 .. I IB3>+$G(IBPTFDX(IB2)) K X Q
"RTN","IBCSC4E",49,0)
 .. S IBA=IBA_IB2_IB3_","
"RTN","IBCSC4E",50,0)
 Q
"RTN","IBCSC4E",51,0)
 ;
"RTN","IBCSC4E",52,0)
PTFADD(IBIFN,LIST) ;
"RTN","IBCSC4E",53,0)
 Q:'$D(^TMP($J,"IBDX","S"))!($G(LIST)="")!('$G(IBIFN))  N IBX,IBY,IBI,IBCD,IBDX
"RTN","IBCSC4E",54,0)
 F IBI=1:1 S IBCD=$P(LIST,",",IBI) Q:IBCD=""  D
"RTN","IBCSC4E",55,0)
 . S IBDX=$G(^TMP($J,"IBDX","S",IBCD)) Q:'IBDX
"RTN","IBCSC4E",56,0)
 . I ($$ICD9^IBACSV(+IBDX)'=""),'$D(^IBA(362.3,"AIFN"_IBIFN,+IBDX)) I $$ADD^IBCSC4D(+IBDX,IBIFN,$P(IBDX,U,3)) W "."
"RTN","IBCSC4E",57,0)
 Q
"RTN","IBCSC4E",58,0)
 ;
"RTN","IBCSC4E",59,0)
PTFDSP(IBIFN) ; display PTF diagnosis within date range of the bill
"RTN","IBCSC4E",60,0)
 ; Output:  ^TMP($J,"IBDX") as defined by PTFDXDT^IBCSC4F   and
"RTN","IBCSC4E",61,0)
 ;          ^TMP($J,"IBDX","S",x) = DIAGNOSIS w/x=selection identifer for a dx
"RTN","IBCSC4E",62,0)
 N IB0,IBPTF,IBTF,IBU,IBFDT,IBTDT,IBDSCH,IBW,IBC,IBA,IBN,IBCNT,IBMCNT,IBMDT,IBMV,IBDT,IBLN,IBLABEL,IBDXCNT,IBI
"RTN","IBCSC4E",63,0)
 N IBDX,IBID,IBON,IBY,IBMDRG,X,IBDATE,IBPOA,DIR,Y,IBMAXMV S IBMAXMV=0
"RTN","IBCSC4E",64,0)
 ;
"RTN","IBCSC4E",65,0)
 K ^TMP($J,"IBDX") S IBW=41
"RTN","IBCSC4E",66,0)
 ;
"RTN","IBCSC4E",67,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN) ; The Event Date of the bill
"RTN","IBCSC4E",68,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),IBPTF=$P(IB0,U,8),IBTF=$P(IB0,U,6) Q:'$G(IBPTF)
"RTN","IBCSC4E",69,0)
 S IBU=$G(^DGCR(399,+IBIFN,"U")),IBFDT=+IBU,IBTDT=$P(IBU,U,2) Q:$P(IB0,U,5)>2
"RTN","IBCSC4E",70,0)
 ;
"RTN","IBCSC4E",71,0)
 D PTFDXDT^IBCSC4F(IBPTF,IBFDT,IBTDT,IBTF) S IBDSCH=$P(+$P($G(^TMP($J,"IBDX","M")),U,3),".")
"RTN","IBCSC4E",72,0)
 ; 
"RTN","IBCSC4E",73,0)
 F IBN="M","D" S (IBCNT,IBMCNT,IBMDT)="" F  S IBMDT=$O(^TMP($J,"IBDX",IBN,IBMDT)) Q:'IBMDT  D  Q:IBMAXMV
"RTN","IBCSC4E",74,0)
 . S IBMCNT=IBMCNT+1 S IBMCNT=$S(IBMCNT=27:33,IBMCNT=24:25,IBMCNT=56:57,1:IBMCNT) I IBMCNT>58 S IBMAXMV=1 Q
"RTN","IBCSC4E",75,0)
 . ;
"RTN","IBCSC4E",76,0)
 . S IBMV=$G(^TMP($J,"IBDX",IBN,IBMDT)),IBDT=+IBMV,IBMDRG=$P(IBMV,U,4)
"RTN","IBCSC4E",77,0)
 . I IBN="M" S IBC=0,IBLABEL="Move",IBA=$C(64+IBMCNT) I 'IBDT S IBDT="D/C"
"RTN","IBCSC4E",78,0)
 . I IBN="D" S IBC=41,IBLABEL="Discharge",IBA="X" I 'IBDT S IBDT="NOT DISCHARGED"
"RTN","IBCSC4E",79,0)
 . ;
"RTN","IBCSC4E",80,0)
 . S IBLN=IBLABEL_": "_$S(+IBDT:$P($$FMTE^XLFDT(+IBDT,2),"@",1),1:IBDT)
"RTN","IBCSC4E",81,0)
 . S IBLN=IBLN_" "_$E($P($G(^DIC(42.4,+$P(IBMV,U,2),0)),U,1),1,12)
"RTN","IBCSC4E",82,0)
 . S IBLN=IBLN_" "_$J("",(29-$L(IBLN)))_$S(+$P(IBMV,U,3):"<SC>",1:"<NSC>")
"RTN","IBCSC4E",83,0)
 . ;
"RTN","IBCSC4E",84,0)
 . S IBCNT=IBCNT+1,X(IBCNT)=$G(X(IBCNT))_$J("",IBW)
"RTN","IBCSC4E",85,0)
 . S IBCNT=IBCNT+1,X(IBCNT)=$G(X(IBCNT))_$J("",IBW),X(IBCNT)=$E(X(IBCNT),1,IBC)_IBLN
"RTN","IBCSC4E",86,0)
 . ;
"RTN","IBCSC4E",87,0)
 . I '$O(^TMP($J,"IBDX",IBN,IBMDT,"")) S IBCNT=IBCNT+1,X(IBCNT)=$G(X(IBCNT))_$J("",IBW),X(IBCNT)=$E(X(IBCNT),1,IBC)_"  No DX Codes Entered For "_IBLABEL
"RTN","IBCSC4E",88,0)
 . ;
"RTN","IBCSC4E",89,0)
 . S (IBDXCNT,IBI)="" F  S IBI=$O(^TMP($J,"IBDX",IBN,IBMDT,IBI)) Q:'IBI  D
"RTN","IBCSC4E",90,0)
 .. S IBDX=^TMP($J,"IBDX",IBN,IBMDT,IBI),IBPOA=$P(IBDX,U,3),IBY=$$ICD9^IBACSV(+IBDX,IBDATE)
"RTN","IBCSC4E",91,0)
 .. S IBDXCNT=IBDXCNT+1,IBID=IBA_IBDXCNT,IBON=" " I +$O(^IBA(362.3,"AIFN"_IBIFN,+IBDX,"")) S IBON="*"
"RTN","IBCSC4E",92,0)
 .. S IBLN=" "_IBON_IBID_" - " S IBLN=IBLN_$J("",(8-$L(IBLN)))_$P(IBY,U,1) S IBLN=IBLN_$J("",(17-$L(IBLN)))_$E($P(IBY,U,3),1,22) I IBPOA'="" S $E(IBLN,36,39)=" ("_IBPOA_")"
"RTN","IBCSC4E",93,0)
 .. S IBCNT=IBCNT+1,X(IBCNT)=$G(X(IBCNT))_$J("",IBW),X(IBCNT)=$E(X(IBCNT),1,IBC)_IBLN
"RTN","IBCSC4E",94,0)
 .. S ^TMP($J,"IBDX","S",IBID)=IBDX
"RTN","IBCSC4E",95,0)
 . ;
"RTN","IBCSC4E",96,0)
 . I 'IBMDRG,IBN="M" S IBLN="   *** No DRG for Charges ***",IBCNT=IBCNT+1,X(IBCNT)=$G(X(IBCNT))_$J("",IBW),X(IBCNT)=$E(X(IBCNT),1,IBC)_IBLN
"RTN","IBCSC4E",97,0)
 . I IBMDRG S IBLN=$P($$DRG^IBACSV(+IBMDRG,IBDATE),U,1)_" - "_$E($$DRGTD^IBACSV(+IBMDRG,IBDATE),1,30),IBCNT=IBCNT+1,X(IBCNT)=$G(X(IBCNT))_$J("",IBW),X(IBCNT)=$E(X(IBCNT),1,IBC)_IBLN
"RTN","IBCSC4E",98,0)
 ;
"RTN","IBCSC4E",99,0)
 I IBDSCH,IBTDT<IBDSCH S IBCNT=2,X(IBCNT)=$G(X(IBCNT))_$J("",IBW),X(IBCNT)=$E(X(IBCNT),1,IBW)_"Discharge: "_$$FMTE^XLFDT(+$P(IBDSCH,"."),2)_" Not In Bill Range"
"RTN","IBCSC4E",100,0)
 I 'IBDSCH,IBTDT<DT S IBCNT=2,X(IBCNT)=$G(X(IBCNT))_$J("",IBW),X(IBCNT)=$E(X(IBCNT),1,IBW)_"Discharge:  NOT DISCHARGED"
"RTN","IBCSC4E",101,0)
 ;
"RTN","IBCSC4E",102,0)
 I IBMAXMV S IBCNT=$O(X("A"),-1)+1 S X(IBCNT)="Maximum number of displayable movements exceeded."
"RTN","IBCSC4E",103,0)
 ;
"RTN","IBCSC4E",104,0)
 W @IOF,"=============================== Diagnosis Screen ==============================="
"RTN","IBCSC4E",105,0)
 S IBCNT=1,IBI="" F  S IBI=$O(X(IBI)) Q:'IBI  W !,$E(X(IBI),1,80) S IBCNT=IBCNT+1 I IBCNT>22 D  S IBCNT=1 Q:'Y
"RTN","IBCSC4E",106,0)
 . S DIR(0)="E" D ^DIR W !
"RTN","IBCSC4E",107,0)
 Q
"RTN","IBCSC4E",108,0)
 ;
"RTN","IBCSC4E",109,0)
DELALL(IBIFN) ; ask/delete all diagnosis on a bill, including all CPT associated Diagnosis
"RTN","IBCSC4E",110,0)
 Q:'$O(^IBA(362.3,"AIFN"_+$G(IBIFN),0))
"RTN","IBCSC4E",111,0)
 ;
"RTN","IBCSC4E",112,0)
 N DIR,DIRUT,DUOUT,DTOUT,X,Y,DIK W !
"RTN","IBCSC4E",113,0)
 S DIR("?")="Enter Yes to delete all Diagnosis currently defined for a bill, including any CPT Associated Diagnosis.",DIR("??")="^D DISP1^IBCSC4D("_IBIFN_")"
"RTN","IBCSC4E",114,0)
 S DIR("A")="DELETE ALL DIAGNOSIS ON BILL, INCLUDING CPT ASSOCIATED DIAGNOSIS"
"RTN","IBCSC4E",115,0)
 S DIR(0)="YO",DIR("B")="NO" D ^DIR K DIR Q:Y'=1
"RTN","IBCSC4E",116,0)
 ;
"RTN","IBCSC4E",117,0)
 N IBPROC,IBPROCD,IBXRF,IBDX,IBDXI,DIE,DIC,DA,DR
"RTN","IBCSC4E",118,0)
 S IBPROC=0 F  S IBPROC=$O(^DGCR(399,IBIFN,"CP",IBPROC)) Q:'IBPROC  D
"RTN","IBCSC4E",119,0)
 . S IBPROCD=$G(^DGCR(399,IBIFN,"CP",IBPROC,0)) I "^^^"[$P(IBPROCD,U,11,14) Q
"RTN","IBCSC4E",120,0)
 . S DIE="^DGCR(399,"_IBIFN_",""CP"",",DA=IBPROC,DA(1)=IBIFN,DR="10///@;11///@;12///@;13///@" D ^DIE K DA,DIE,DR
"RTN","IBCSC4E",121,0)
 ;
"RTN","IBCSC4E",122,0)
 S IBXRF="AIFN"_+IBIFN
"RTN","IBCSC4E",123,0)
 S IBDX=0 F  S IBDX=$O(^IBA(362.3,IBXRF,IBDX)) Q:'IBDX  D
"RTN","IBCSC4E",124,0)
 . S IBDXI=0 F  S IBDXI=$O(^IBA(362.3,IBXRF,IBDX,IBDXI)) Q:'IBDXI  D
"RTN","IBCSC4E",125,0)
 .. S DIK="^IBA(362.3,",DA=IBDXI D ^DIK K DIK,DA
"RTN","IBCSC4E",126,0)
 W " .... deleted"
"RTN","IBCSC4E",127,0)
 Q
"RTN","IBCSC4E",128,0)
 ;
"RTN","IBCSC4E",129,0)
POAASK ; POA edit
"RTN","IBCSC4E",130,0)
 N DIR,DIRUT,DUOUT,DTOUT,DX,ORD,X,Y
"RTN","IBCSC4E",131,0)
 W !
"RTN","IBCSC4E",132,0)
 S DIR("?")="Enter Yes to edit POA indicators."
"RTN","IBCSC4E",133,0)
 S DIR("A")="Edit POA indicators"
"RTN","IBCSC4E",134,0)
 S DIR(0)="YO",DIR("B")="NO" D ^DIR K DIR Q:Y'=1
"RTN","IBCSC4E",135,0)
 S DIE="^IBA(362.3,",ORD="" F  S ORD=$O(^IBA(362.3,"AO",IBIFN,ORD)) Q:ORD=""  D  Q:$D(Y)  ;
"RTN","IBCSC4E",136,0)
 .S DA=$O(^IBA(362.3,"AO",IBIFN,ORD,"")),DX=$$GET1^DIQ(362.3,DA,.01),DR=".04 "_DX D ^DIE
"RTN","IBCSC4E",137,0)
 .Q
"RTN","IBCSC4E",138,0)
 K DA,DIE,DIR,DR
"RTN","IBCSC4E",139,0)
 D CLEAN^DILF
"RTN","IBCSC4E",140,0)
 Q
"RTN","IBCSC4F")
0^8^B34285009
"RTN","IBCSC4F",1,0)
IBCSC4F ;ALB/ARH - GET PTF DIAGNOSIS ;10-OCT-1998
"RTN","IBCSC4F",2,0)
 ;;2.0;INTEGRATED BILLING;**106,403,400,522**;21-MAR-94;Build 11
"RTN","IBCSC4F",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCSC4F",4,0)
 ;
"RTN","IBCSC4F",5,0)
PTFDXDT(IBPTF,IBDT1,IBDT2,TF) ; collect PTF Transfer (501) and Discharge (701) movements and diagnosis within a date range
"RTN","IBCSC4F",6,0)
 ; if end date is before Discharge date delete Discharge Diagnosis
"RTN","IBCSC4F",7,0)
 ; if bill is an interim first or interim continuous then the last date on the bill is included in the bill
"RTN","IBCSC4F",8,0)
 N IBSTAY,IBADM,IBDSCH,IBDT,IBLAST,IBMDT K ^TMP($J,"IBDX","D"),^TMP($J,"IBDX","M") Q:'$G(IBPTF)
"RTN","IBCSC4F",9,0)
 S IBDT1=+$G(IBDT1)\1 Q:IBDT1'?7N  S IBDT2=+$G(IBDT2)\1 Q:IBDT2'?7N
"RTN","IBCSC4F",10,0)
 ;
"RTN","IBCSC4F",11,0)
 D PTFDX(IBPTF)
"RTN","IBCSC4F",12,0)
 ;
"RTN","IBCSC4F",13,0)
 S IBSTAY=$G(^TMP($J,"IBDX","M")),IBADM=+$P($P(IBSTAY,U,2),".",1),IBDSCH=+$P($P(IBSTAY,U,3),".",1)
"RTN","IBCSC4F",14,0)
 ;
"RTN","IBCSC4F",15,0)
 I IBADM=IBDSCH Q  ; 1 day stay, accept all
"RTN","IBCSC4F",16,0)
 I IBDT1=IBADM,IBDT2=IBDSCH Q  ; bill for entire length of stay, accept all
"RTN","IBCSC4F",17,0)
 ;
"RTN","IBCSC4F",18,0)
 I IBDT2<IBDSCH K ^TMP($J,"IBDX","D") ; discharge date not on bill, exclude 701 Dxs
"RTN","IBCSC4F",19,0)
 I 'IBDSCH,IBDT2<DT K ^TMP($J,"IBDX","D") ; not discharged, current end date (today) not on bill, exclude 701 Dxs
"RTN","IBCSC4F",20,0)
 ;
"RTN","IBCSC4F",21,0)
 ; determine which of the movements should be included based on dates and timeframe
"RTN","IBCSC4F",22,0)
 S TF=$G(TF) I (TF=2)!(TF=3) S IBDT2=$$FMADD^XLFDT(IBDT2,1) ; if first or continuous bill include end date
"RTN","IBCSC4F",23,0)
 ;
"RTN","IBCSC4F",24,0)
 S (IBLAST,IBDT)="" F  S IBDT=$O(^TMP($J,"IBDX","M",IBDT)) Q:'IBDT  D  S IBLAST=IBDT
"RTN","IBCSC4F",25,0)
 . S IBMDT=$P(IBDT,".",1)
"RTN","IBCSC4F",26,0)
 . I IBMDT'>IBDT1 K ^TMP($J,"IBDX","M",IBDT)
"RTN","IBCSC4F",27,0)
 . I IBLAST>IBDT2 K ^TMP($J,"IBDX","M",IBDT)
"RTN","IBCSC4F",28,0)
 Q
"RTN","IBCSC4F",29,0)
 ;
"RTN","IBCSC4F",30,0)
PTFDX(IBPTF) ; collect all PTF Transfer (501) and Discharge (701) movements and diagnosis and try to assign SC
"RTN","IBCSC4F",31,0)
 ; PTF movements are assigned SC or NSC but diagnosis are not
"RTN","IBCSC4F",32,0)
 ; this routine 'interprets' this PTF data and 'assigns' SC/NSC to individual Diagnosis
"RTN","IBCSC4F",33,0)
 ; Movement (501) Diagnosis:  all Dx on SC movements are assigned SC
"RTN","IBCSC4F",34,0)
 ;                            a Dx on an NSC movement that is also the first Dx on an SC move is assigned SC
"RTN","IBCSC4F",35,0)
 ; Discharge (701) Diagnosis: if admit is for SC care all discharge Dx are assigned SC
"RTN","IBCSC4F",36,0)
 ;                            if the Dx is also the first Dx on an SC movement then is assigned SC
"RTN","IBCSC4F",37,0)
 ;                            a Dx on an SC movement only is assigned SC
"RTN","IBCSC4F",38,0)
 ;
"RTN","IBCSC4F",39,0)
 ; Output:  TMP($J,"IBDX","D")=PTF # ^ ADMIT DATE ^ DISCHARGE DATE
"RTN","IBCSC4F",40,0)
 ;          TMP($J,"IBDX","D", DISCHARGE DATE) = DISCHARGE DATE ^ SPECIALTY ^ SC (1/0) ^ DRG ^ PROVIDER
"RTN","IBCSC4F",41,0)
 ;          TMP($J,"IBDX","D", DISCHARGE DATE, x) = DIAGNOSIS ^ SC? (1/0) ^ POA
"RTN","IBCSC4F",42,0)
 ;
"RTN","IBCSC4F",43,0)
 ;          TMP($J,"IBDX","M")=PTF # ^ ADMIT DATE ^ DISCHARGE DATE
"RTN","IBCSC4F",44,0)
 ;          TMP($J,"IBDX","M", MOVEMENT DATE) = MOVEMENT DATE ^ SPECIALTY ^ SC (1/0) ^ DRG ^ PROVIDER
"RTN","IBCSC4F",45,0)
 ;          TMP($J,"IBDX","M", MOVEMENT DATE, x) = DIAGNOSIS ^ SC? (1/0) ^ POA
"RTN","IBCSC4F",46,0)
 ; if patient not discharged then NOW is used as date subscript and first piece will be null, SC?=interpreted SC
"RTN","IBCSC4F",47,0)
 ;
"RTN","IBCSC4F",48,0)
 N IBSTAY,IBMI,IBM0,IBDT,IBMDT,IBMBS,IBMP,IBMDRG,IBMPRV,IBMSC,IBMDX,IBD0,IBDDT,IBDBS,IBDDRG,IBDPRV,IBDSC,IBDDX
"RTN","IBCSC4F",49,0)
 N IBCNT,IBI,IBTMP,DFN,DGVAR,DRG,DRGCAL,ICDCAL,PTF,PTFCOD K ^TMP($J,"IBDX","M"),^TMP($J,"IBDX","D") Q:'$G(IBPTF)
"RTN","IBCSC4F",50,0)
 ;
"RTN","IBCSC4F",51,0)
 S IBSTAY=IBPTF_U_$P($G(^DGPT(IBPTF,0)),U,2)_U_$P($G(^DGPT(IBPTF,70)),U,1) Q:'$P(IBSTAY,U,2)
"RTN","IBCSC4F",52,0)
 ;
"RTN","IBCSC4F",53,0)
 ; collect PTF Movement Diagnosis (501)
"RTN","IBCSC4F",54,0)
 S ^TMP($J,"IBDX","M")=IBSTAY
"RTN","IBCSC4F",55,0)
 S IBMI=0 F  S IBMI=$O(^DGPT(IBPTF,"M",IBMI)) Q:'IBMI  D
"RTN","IBCSC4F",56,0)
 . S IBM0=$G(^DGPT(IBPTF,"M",IBMI,0)) Q:'IBM0
"RTN","IBCSC4F",57,0)
 . S (IBDT,IBMDT)=$P(IBM0,U,10) I 'IBDT S IBDT=$$NOW^XLFDT
"RTN","IBCSC4F",58,0)
 . S IBMBS=$P(IBM0,U,2),IBMSC=$P(IBM0,U,18),IBMSC=$S(IBMSC=1:1,1:"")
"RTN","IBCSC4F",59,0)
 . S IBMP=$G(^DGPT(IBPTF,"M",IBMI,"P")),IBMPRV=$P(IBMP,U,5),IBMDRG=$$MVDRG^IBCRBG(IBPTF,IBMI)
"RTN","IBCSC4F",60,0)
 . ;
"RTN","IBCSC4F",61,0)
 . S ^TMP($J,"IBDX","M",IBDT)=IBMDT_U_IBMBS_U_IBMSC_U_IBMDRG_U_IBMPRV
"RTN","IBCSC4F",62,0)
 . ;
"RTN","IBCSC4F",63,0)
 . D PTFCDS(IBPTF,501,IBMI,.PTFCOD) D  K PTFCOD ; get movements diagnosis
"RTN","IBCSC4F",64,0)
 .. S IBCNT=0,IBI="" F  S IBI=$O(PTFCOD(IBI)) Q:IBI=""  S IBMDX=PTFCOD(IBI) I +IBMDX S IBCNT=IBCNT+1 D
"RTN","IBCSC4F",65,0)
 ... S ^TMP($J,"IBDX","M",IBDT,IBCNT)=+IBMDX_U_U_$P(IBMDX,U,2),IBTMP("DXSC",+IBMDX,+IBMSC,IBCNT)=""
"RTN","IBCSC4F",66,0)
 ;
"RTN","IBCSC4F",67,0)
 ; collect PTF Discharge Diagnosis (701)
"RTN","IBCSC4F",68,0)
 S ^TMP($J,"IBDX","D")=IBSTAY
"RTN","IBCSC4F",69,0)
 S IBD0=$G(^DGPT(IBPTF,70)),IBDPRV=$P(IBD0,U,15),IBDDRG=$$PTFDDRG(IBPTF)
"RTN","IBCSC4F",70,0)
 S (IBDT,IBDDT)=$P(IBD0,U,1) I 'IBDT S IBDT=$$NOW^XLFDT
"RTN","IBCSC4F",71,0)
 S IBDBS=$P(IBD0,U,2),IBDSC=$P(IBD0,U,25),IBDSC=$S(IBDSC=1:1,1:"")
"RTN","IBCSC4F",72,0)
 ;
"RTN","IBCSC4F",73,0)
 S ^TMP($J,"IBDX","D",IBDT)=IBDDT_U_IBDBS_U_IBDSC_U_IBDDRG_U_IBDPRV
"RTN","IBCSC4F",74,0)
 ;
"RTN","IBCSC4F",75,0)
 D PTFCDS(IBPTF,701,,.PTFCOD) D  K PTFCOD ; get discharge diagnosis
"RTN","IBCSC4F",76,0)
 . S IBCNT=0,IBI="" F  S IBI=$O(PTFCOD(IBI)) Q:IBI=""  S IBDDX=PTFCOD(IBI) I +IBDDX S IBCNT=IBCNT+1 D
"RTN","IBCSC4F",77,0)
 .. S ^TMP($J,"IBDX","D",IBDT,IBCNT)=+IBDDX_U_U_$P(IBDDX,U,2)
"RTN","IBCSC4F",78,0)
 ;
"RTN","IBCSC4F",79,0)
 ; Try to assign SC to PTF Diagnosis
"RTN","IBCSC4F",80,0)
 ;
"RTN","IBCSC4F",81,0)
 ; assign SC to Movement Diagnosis (501):  if movement is SC or first Dx on an SC movement
"RTN","IBCSC4F",82,0)
 S IBMDT=0 F  S IBMDT=$O(^TMP($J,"IBDX","M",IBMDT)) Q:'IBMDT  D
"RTN","IBCSC4F",83,0)
 . S IBI="" F  S IBI=$O(^TMP($J,"IBDX","M",IBMDT,IBI)) Q:'IBI  D
"RTN","IBCSC4F",84,0)
 .. S IBMDX=+$G(^TMP($J,"IBDX","M",IBMDT,IBI)) Q:'IBMDX
"RTN","IBCSC4F",85,0)
 .. ;
"RTN","IBCSC4F",86,0)
 .. S IBMSC=+$P($G(^TMP($J,"IBDX","M",IBMDT)),U,3) ; sc move
"RTN","IBCSC4F",87,0)
 .. I 'IBMSC,$D(IBTMP("DXSC",IBMDX,1,1)) S IBMSC=1 ; first dx on sc move
"RTN","IBCSC4F",88,0)
 .. ;
"RTN","IBCSC4F",89,0)
 .. I +IBMSC S $P(^TMP($J,"IBDX","M",IBMDT,IBI),U,2)=1
"RTN","IBCSC4F",90,0)
 ;
"RTN","IBCSC4F",91,0)
 ; assign SC to Discharge Diagnosis (701):  if stay is SC or first Dx on an SC movement or only on SC movement
"RTN","IBCSC4F",92,0)
 S IBDDT=0 F  S IBDDT=$O(^TMP($J,"IBDX","D",IBDDT)) Q:'IBDDT  D
"RTN","IBCSC4F",93,0)
 . S IBI="" F  S IBI=$O(^TMP($J,"IBDX","D",IBDDT,IBI)) Q:'IBI  D
"RTN","IBCSC4F",94,0)
 .. S IBDDX=+$G(^TMP($J,"IBDX","D",IBDDT,IBI)) Q:'IBDDX
"RTN","IBCSC4F",95,0)
 .. ;
"RTN","IBCSC4F",96,0)
 .. S IBDSC=+$P($G(^TMP($J,"IBDX","D",IBDDT)),U,3) ; sc stay
"RTN","IBCSC4F",97,0)
 .. I 'IBDSC,$D(IBTMP("DXSC",IBDDX,1,1)) S IBDSC=1 ; first dx on sc move
"RTN","IBCSC4F",98,0)
 .. I 'IBDSC,+$O(IBTMP("DXSC",IBDDX,"")) S IBDSC=1 ; on sc move only
"RTN","IBCSC4F",99,0)
 .. ;
"RTN","IBCSC4F",100,0)
 .. I +IBDSC S $P(^TMP($J,"IBDX","D",IBDDT,IBI),U,2)=1
"RTN","IBCSC4F",101,0)
 ;
"RTN","IBCSC4F",102,0)
 Q
"RTN","IBCSC4F",103,0)
 ;
"RTN","IBCSC4F",104,0)
SETPOA(IBIFN) ; get POAs from file 19640.1 and put them into file 362.3
"RTN","IBCSC4F",105,0)
 N DIAG,DIEN,IBPTF,IEN362,ORDER,POASET
"RTN","IBCSC4F",106,0)
 ; ICD-9 only, beginning with ICD-10 DSS will pass POA to PTF
"RTN","IBCSC4F",107,0)
 I $$BDATE^IBACSV(IBIFN)'<$$CSVDATE^IBACSV(30) Q
"RTN","IBCSC4F",108,0)
 ; get PTF ien
"RTN","IBCSC4F",109,0)
 S IBPTF=$P($G(^DGCR(399,IBIFN,0)),U,8) Q:IBPTF=""
"RTN","IBCSC4F",110,0)
 ; loop through all entries in 19640.1 for this PTF
"RTN","IBCSC4F",111,0)
 S DIEN="" F  S DIEN=$O(^DSIPPOA("B",IBPTF,DIEN)) Q:DIEN=""  D
"RTN","IBCSC4F",112,0)
 .S DIAG=$P($G(^DSIPPOA(DIEN,0)),U,3) Q:DIAG=""
"RTN","IBCSC4F",113,0)
 .; loop through all DXes in 362.3 for this claim and try to find a match for 19640.1 entry
"RTN","IBCSC4F",114,0)
 .S POASET=0,ORDER="" F  S ORDER=$O(^IBA(362.3,"AO",IBIFN,ORDER)) Q:ORDER=""!(POASET=1)  D
"RTN","IBCSC4F",115,0)
 ..S IEN362=$O(^IBA(362.3,"AO",IBIFN,ORDER,""))
"RTN","IBCSC4F",116,0)
 ..; if DX in 362.3 matches DX in 19640.1, put proper POA indicator into 362.3 and bail out
"RTN","IBCSC4F",117,0)
 ..I DIAG=$P($G(^IBA(362.3,IEN362,0)),U) S $P(^IBA(362.3,IEN362,0),U,4)=$P(^DSIPPOA(DIEN,0),U,4),POASET=1
"RTN","IBCSC4F",118,0)
 ..Q 
"RTN","IBCSC4F",119,0)
 .Q
"RTN","IBCSC4F",120,0)
 Q
"RTN","IBCSC4F",121,0)
 ;
"RTN","IBCSC4F",122,0)
MAXECODE(IBIFN) ; returns 1 if there are already 3 Ecode diagnoses on the claim, 0 otherwise
"RTN","IBCSC4F",123,0)
 N IBDATE,IBDX,CNT
"RTN","IBCSC4F",124,0)
 Q:'IBIFN 0
"RTN","IBCSC4F",125,0)
 S CNT=0,IBDX="",IBDATE=$$BDATE^IBACSV(IBIFN)
"RTN","IBCSC4F",126,0)
 F  S IBDX=$O(^IBA(362.3,"AIFN"_IBIFN,IBDX))  Q:'IBDX  I $E($$ICD9^IBACSV(IBDX,IBDATE))="E" S CNT=CNT+1
"RTN","IBCSC4F",127,0)
 Q CNT>2
"RTN","IBCSC4F",128,0)
 ;
"RTN","IBCSC4F",129,0)
 ;
"RTN","IBCSC4F",130,0)
PTFDDRG(PTF) ; Returns PTF Discharge DRG (#45, 9) calculated field (clean up DG and ICD variables)
"RTN","IBCSC4F",131,0)
 N IBI,DFN,DGDAT,DGPMAN,DGPMCA,DGPTDAT,DGPTTMP,DGTMP,DGVAR,DRG,DRGCAL,EFFDATE
"RTN","IBCSC4F",132,0)
 N ICD10ORNIT,ICD10ORT,ICD10SDT,ICDCAL,ICDCDSY,ICDCSYS,ICDDATE,ICDDA,ICDIEN,ICDPOA,ICDRG,ICDTMP,ICDX,IMPDATE
"RTN","IBCSC4F",133,0)
 ;
"RTN","IBCSC4F",134,0)
 S IBI="" I +$G(PTF) S IBI=$$GET1^DIQ(45,PTF,9,"")
"RTN","IBCSC4F",135,0)
 Q IBI
"RTN","IBCSC4F",136,0)
 ;
"RTN","IBCSC4F",137,0)
PTFCDS(PTF,TYPE,NODE,PTFARR) ; Get PTF Diagnosis (501, 701) and PTF ICD Procedures (401, 601) Codes   DBIA ICR #6130
"RTN","IBCSC4F",138,0)
 ; returns codes for a single event: Discharge, one Movement, one Procedure or one Surgery
"RTN","IBCSC4F",139,0)
 ; Input:   PTF #, TYPE: 701, 501, 401, 601,  NODE: subfile IEN requested (501, 401, 601)
"RTN","IBCSC4F",140,0)
 ; Output:  PTFARR returned array of Diagnosis or Procedure codes found for event, pass by reference
"RTN","IBCSC4F",141,0)
 ;          PTFARR(x) = Dx IEN ^ POA ^ ... for 701 and 501,  PTFARR(x) =  ICD Prc IEN ^ ... for 401 and 601
"RTN","IBCSC4F",142,0)
 ; 
"RTN","IBCSC4F",143,0)
 N DGPMAN,DGPMCA K PTFARR S PTFARR=0 Q:'$G(PTF)
"RTN","IBCSC4F",144,0)
 S TYPE=$G(TYPE) I TYPE'=401,TYPE'=501,TYPE'=601,TYPE'=701 Q
"RTN","IBCSC4F",145,0)
 S NODE=$G(NODE) I TYPE'=701,'NODE Q
"RTN","IBCSC4F",146,0)
 ;
"RTN","IBCSC4F",147,0)
 D PTFICD^DGPTFUT(TYPE,PTF,NODE,.PTFARR)
"RTN","IBCSC4F",148,0)
 Q
"RTN","IBCU7")
0^9^B113207672
"RTN","IBCU7",1,0)
IBCU7 ;ALB/AAS - INTERCEPT SCREEN INPUT OF PROCEDURE CODES ;29-OCT-91
"RTN","IBCU7",2,0)
 ;;2.0;INTEGRATED BILLING;**62,52,106,125,51,137,210,245,228,260,348,371,432,447,488,461,516,522**;21-MAR-94;Build 11
"RTN","IBCU7",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCU7",4,0)
 ;
"RTN","IBCU7",5,0)
 ;MAP TO DGCRU7
"RTN","IBCU7",6,0)
 ;
"RTN","IBCU7",7,0)
CHKX ;  -interception of input x from Additional Procedure input
"RTN","IBCU7",8,0)
 G:X=" " CHKXQ
"RTN","IBCU7",9,0)
 I $$INPAT^IBCEF(DA(1)),'$P($G(^IBE(350.9,1,1)),"^",15),X'?1A1.2N D  G CHKXQ
"RTN","IBCU7",10,0)
 . K X
"RTN","IBCU7",11,0)
 . D EN^DDIOL("Site param does not allow entry of non-PTF procedures") ;Fileman error here will be: The previous error occurred when performing an action specified in a Pre-lookup transform (7.5 node).
"RTN","IBCU7",12,0)
 G:'$D(^UTILITY($J,"IB")) CHKXQ
"RTN","IBCU7",13,0)
 ;S M=($A($E(X,1))-64),S=+$E(X,2) Q:'$G(^UTILITY($J,"IB",M,S))  S X="`"_+^(S)
"RTN","IBCU7",14,0)
 S M=0 I X?1A1.2N S N=$G(^UTILITY($J,"IB","B",X)) S M=+N,S=+$P(N,U,2),P=X S S=$G(^UTILITY($J,"IB",M,S)) I +S S X="`"_+S I $P(N,U,3)="N" S X=""""_X_"""" S $P(^UTILITY($J,"IB","B",P),U,3)="Y"
"RTN","IBCU7",15,0)
 I +M,$D(DGPROCDT),DGPROCDT'=$P($G(^UTILITY($J,"IB",M,1)),"^",2) S DGPROCDT=$P(^(1),"^",2) W !!,"Procedure Date: " S Y=DGPROCDT X ^DD("DD") W Y,!
"RTN","IBCU7",16,0)
CHKXQ Q
"RTN","IBCU7",17,0)
 ;
"RTN","IBCU7",18,0)
CODMUL ;Date oriented entry of procedure
"RTN","IBCU7",19,0)
DELASK I $D(IBZ20),IBZ20,IBZ20'=$P(^DGCR(399,IBIFN,0),U,9) S %=2 W !,"SINCE THE PROCEDURE CODING METHOD HAS BEEN CHANGED, DO YOU WANT TO DELETE ALL",!,"PROCEDURE CODES IN THIS BILL"
"RTN","IBCU7",20,0)
 I  D YN^DICN Q:%=-1  D:%=1 DELADD I %Y?1."?" W !!,"If you answer 'Yes', all procedure codes will be DELETED from this bill.",! G DELASK
"RTN","IBCU7",21,0)
 K %,%Y,DA,IBZ20,DIK ;W !,"Procedure Entry:"
"RTN","IBCU7",22,0)
 ;
"RTN","IBCU7",23,0)
CODDT I $D(IBIFN),$D(^DGCR(399,IBIFN,0)),$P(^(0),U,9) S DIC("V")=$S($P(^(0),U,9)=9:"I +Y(0)=80.1",$P(^(0),U,9)=4!($P(^(0),U,9)=5):"I +Y(0)=81",1:"")
"RTN","IBCU7",24,0)
 I $P($G(^DGCR(399,IBIFN,0)),"^",5)<3 S IBZTYPE=1 I $P($G(^UTILITY($J,"IB",1,1)),"^",2) S DGPROCDT=$P(^(1),"^",2) D ASKCOD
"RTN","IBCU7",25,0)
 S X=$$PRCDIV^IBCU71(IBIFN) I +X W !!,$P(X,U,2),!
"RTN","IBCU7",26,0)
 N Z,Z0 S Z=$G(^DGCR(399,IBIFN,"U")),Z0=$$FMTE^XLFDT($P(Z,U),"2D")_"-"_$$FMTE^XLFDT($P(Z,U,2),"2D")
"RTN","IBCU7",27,0)
 W !,"Select PROCEDURE DATE"_$S($TR(Z0,"-")'="":" ("_Z0_")",1:"")_": " R X:DTIME G:'$T!("^"[X) CODQ D:X["?" CODHLP
"RTN","IBCU7",28,0)
 S IBEX=0 D  ; Get procedure date
"RTN","IBCU7",29,0)
 . I X=" ",$D(DGPROCDT),DGPROCDT?7N S Y=DGPROCDT D D^DIQ W "   (",Y,")" Q
"RTN","IBCU7",30,0)
 . I X=" ",+$P($G(^DGCR(399,IBIFN,"OP",0)),"^",4) S (DGPROCDT,Y)=$O(^DGCR(399,IBIFN,"OP",0)) D D^DIQ W "   (",Y,")" Q
"RTN","IBCU7",31,0)
 . S %DT="EXP",%DT(0)=-DT D ^%DT K %DT I Y<1 S IBEX=1 Q
"RTN","IBCU7",32,0)
 . I '$$OPV2^IBCU41(Y,IBIFN,1) S IBEX=1 Q
"RTN","IBCU7",33,0)
 . S:'$G(IBZTYPE) X=$$OPV^IBCU41(Y,IBIFN) S DGPROCDT=Y
"RTN","IBCU7",34,0)
 I 'IBEX D ASKCOD,ADDCPT^IBCU71:$D(DGCPT)
"RTN","IBCU7",35,0)
 K IBEX
"RTN","IBCU7",36,0)
 G CODDT
"RTN","IBCU7",37,0)
 ;
"RTN","IBCU7",38,0)
ASKCOD N Z,Z0,DA,IBACT,IBQUIT,IBLNPRV  ;WCJ;2.0*432
"RTN","IBCU7",39,0)
 N IBPOPOUT  S IBPOPOUT=0  ; IB*2.0*447 BI
"RTN","IBCU7",40,0)
 K DGCPT
"RTN","IBCU7",41,0)
 S DGCPT=0,DGCPTUP=$P($G(^IBE(350.9,1,1)),"^",19),DGADDVST=0,IBFT=$P($G(^DGCR(399,IBIFN,0)),"^",19)
"RTN","IBCU7",42,0)
 I '$D(^DGCR(399,IBIFN,"CP",0)) S ^DGCR(399,IBIFN,"CP",0)=U_$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCU7",43,0)
 ;
"RTN","IBCU7",44,0)
 F  S IBQUIT=0 D  Q:IBQUIT
"RTN","IBCU7",45,0)
 . S IBPOPOUT=0
"RTN","IBCU7",46,0)
 . D DICV ; restrict code type to PCM
"RTN","IBCU7",47,0)
 . S DIC("A")="   Select PROCEDURE: "
"RTN","IBCU7",48,0)
 . S DIC="^DGCR(399,"_IBIFN_",""CP"","
"RTN","IBCU7",49,0)
 . S DIC(0)="AEQMNL"
"RTN","IBCU7",50,0)
 . S DIC("S")="I '$D(DIV(""S""))&($P(^(0),U,2)=DGPROCDT)"
"RTN","IBCU7",51,0)
 . S DIC("DR")="1///^S X=DGPROCDT"
"RTN","IBCU7",52,0)
 . S DA(1)=IBIFN,DLAYGO=399
"RTN","IBCU7",53,0)
 . W ! D ^DIC I Y<1 S IBQUIT=1 Q
"RTN","IBCU7",54,0)
 . S IBPROCP=+Y
"RTN","IBCU7",55,0)
 . ; If we just added inactive code - it must be deleted.
"RTN","IBCU7",56,0)
 . S IBACT=0 ; Active flag
"RTN","IBCU7",57,0)
 . I Y["ICD0" S IBACT=$$ICD0ACT^IBACSV(+$P(Y,U,2),$$BDATE^IBACSV(IBIFN))
"RTN","IBCU7",58,0)
 . I Y["ICPT" S IBACT=$$CPTACT^IBACSV(+$P(Y,U,2),DGPROCDT)
"RTN","IBCU7",59,0)
 . S DGCPTNEW=$P(Y,"^",3) ;Was the procedure just added?
"RTN","IBCU7",60,0)
 . I DGCPTNEW,'IBACT D DELPROC Q
"RTN","IBCU7",61,0)
 . I 'IBACT W !,*7,"Warning:  Procedure code is inactive on this date",!
"RTN","IBCU7",62,0)
 . I DGCPTNEW,$D(^UTILITY($J,"IB")),$$INPAT^IBCEF(IBIFN),Y["ICPT(" D DATA^IBCU74(Y,.IBLNPRV)
"RTN","IBCU7",63,0)
 . S DGADDVST=$S(DGCPTNEW:1,$D(DGADDVST):DGADDVST,1:0)
"RTN","IBCU7",64,0)
 . N IBPRV,IBPRVO,IBPRVN
"RTN","IBCU7",65,0)
 . ;
"RTN","IBCU7",66,0)
 . ; Line level provider function by form type.
"RTN","IBCU7",67,0)
 . ;     CMS-1500 (FORM TYPE=2)
"RTN","IBCU7",68,0)
 . ;              RENDERING PROVIDER, REFERRING PROVIDER,
"RTN","IBCU7",69,0)
 . ;              and SUPERVISING PROVIDER.
"RTN","IBCU7",70,0)
 . ;     UB-04 (FORM TYPE=3)
"RTN","IBCU7",71,0)
 . ;              RENDERING PROVIDER, REFERRING PROVIDER,
"RTN","IBCU7",72,0)
 . ;              OPERATING PROVIDER, and OTHER OPERATING
"RTN","IBCU7",73,0)
 . ;              PROVIDER.
"RTN","IBCU7",74,0)
 . ;
"RTN","IBCU7",75,0)
 . ; Removed: Call to $$MAINPRV^IBCEU(IBIFN) is for claim
"RTN","IBCU7",76,0)
 . ;          level provider defaults.
"RTN","IBCU7",77,0)
 . ;     1. For new line level providers we don't need
"RTN","IBCU7",78,0)
 . ;        or want default claim level provider
"RTN","IBCU7",79,0)
 . ;        (requirement).
"RTN","IBCU7",80,0)
 . ;     2. We don't want to default claim level to
"RTN","IBCU7",81,0)
 . ;        line level provider (requirement).
"RTN","IBCU7",82,0)
 . ;
"RTN","IBCU7",83,0)
 . K DIC("V")  ; DEM;432 - KILL DIC("V") because this was for previous variable pointer use.
"RTN","IBCU7",84,0)
 . ;
"RTN","IBCU7",85,0)
 . N IBPROCSV  ; DEM;432 - Variable IBPROCSV is variable to preserve value of 'Y', which is procedure code info returned by call to ^DIC.
"RTN","IBCU7",86,0)
 . S IBPROCSV=Y  ; DEM;432 - Preserve value of Y for after calls to FileMan (Y = procedure code info returned by call to ^DIC).
"RTN","IBCU7",87,0)
 . K DR   ;WCJ;IB*2.0*432
"RTN","IBCU7",88,0)
 . ;
"RTN","IBCU7",89,0)
 . I IBPROCSV["ICD0" S DR=".01",DIE=DIC,(IBPROCP,DA)=+Y D ^DIE Q:'$D(DA)!($D(Y))  K DR ; IB*2.0*461
"RTN","IBCU7",90,0)
 . I IBPROCSV["ICPT" S DR=".01;16",DIE=DIC,(IBPROCP,DA)=+Y D ^DIE Q:'$D(DA)!($D(Y))  K DR ; IB*2.0*447 BI
"RTN","IBCU7",91,0)
 . ;
"RTN","IBCU7",92,0)
 . S DR=""
"RTN","IBCU7",93,0)
 . ;
"RTN","IBCU7",94,0)
 . ; MRD;IB*2.0*516 - Added line level PROCEDURE DESCRIPTION field,
"RTN","IBCU7",95,0)
 . ; asked only if the procedure is an "NOC".
"RTN","IBCU7",96,0)
 . I IBPROCSV["ICPT",$$NOCPROC(IBPROCSV) D
"RTN","IBCU7",97,0)
 . . S DA=$P(IBPROCSV,"^")  ; The line# on the bill/claim.
"RTN","IBCU7",98,0)
 . . S DR=51                ; Field# for PROCEDURE DESCRIPTION
"RTN","IBCU7",99,0)
 . . D ^DIE
"RTN","IBCU7",100,0)
 . . Q
"RTN","IBCU7",101,0)
 . ;
"RTN","IBCU7",102,0)
 . D EN^IBCU7B ; DEM;432 - Call to line level provider user input.
"RTN","IBCU7",103,0)
 . S Y=IBPROCSV  ; DEM;432 - Restore value of Y after calls to FileMan
"RTN","IBCU7",104,0)
 . K IBPROCSV
"RTN","IBCU7",105,0)
 . K DR   ;WCJ;IB*2.0*432
"RTN","IBCU7",106,0)
 . I IBPOPOUT Q   ; IB*2.0*447 BI
"RTN","IBCU7",107,0)
 . S DR="" I Y["ICPT" S DR="6;5//"_$$DEFDIV(IBIFN)_";"
"RTN","IBCU7",108,0)
 . S DR=DR_$S(IBFT=2:"8;9;17//NO;",1:"")_3,DIE=DIC,(IBPROCP,DA)=+Y D ^DIE Q:'$D(DA)!($E($G(Y))=U)
"RTN","IBCU7",109,0)
 . K DR   ;WCJ;IB*2.0*432
"RTN","IBCU7",110,0)
 . ;
"RTN","IBCU7",111,0)
 . ; MRD;IB*2.0*516 - Allow user to add an NDC and Units.  Ask only if
"RTN","IBCU7",112,0)
 . ; coding system is not ICD and this is not a prescription claim. If
"RTN","IBCU7",113,0)
 . ; an NDC is entered, prompt for Units.
"RTN","IBCU7",114,0)
 . I $P($G(^DGCR(399,IBIFN,0)),U,9)'=9,'$$RXLINK^IBCSC5C(IBIFN,IBPROCP) D
"RTN","IBCU7",115,0)
 . . K DA
"RTN","IBCU7",116,0)
 . . S DA=IBPROCP,DA(1)=IBIFN,DIE="^DGCR(399,"_IBIFN_",""CP"","
"RTN","IBCU7",117,0)
 . . S DR="53NDC NUMBER;I X="""" S Y="""";54//1"
"RTN","IBCU7",118,0)
 . . D ^DIE
"RTN","IBCU7",119,0)
 . . Q
"RTN","IBCU7",120,0)
 . ;
"RTN","IBCU7",121,0)
 . I IBFT=3 D:'$$INPAT^IBCEF(IBIFN) ATTACH  ; DEM;432 - Prompt for Attachment Control Number.
"RTN","IBCU7",122,0)
 . ; DEM;432 - Add Additional OB Minutes to DR string for call to DIE.
"RTN","IBCU7",123,0)
 . S DR=$$SPCUNIT(IBIFN,IBPROCP) S:DR["15;" DR=DR_"74Additional OB Minutes" D ^DIE ; miles/minutes/hours
"RTN","IBCU7",124,0)
 . ;
"RTN","IBCU7",125,0)
 . I IBFT=2 D
"RTN","IBCU7",126,0)
 .. D DX^IBCU72(IBIFN,IBPROCP)
"RTN","IBCU7",127,0)
 .. S X=$$ADDTNL(IBIFN,.DA)
"RTN","IBCU7",128,0)
 . Q:$$INPAT^IBCEF(IBIFN)  ;only outpatient bills
"RTN","IBCU7",129,0)
 . ;add procedures to array for download to PCE: dgcpt(assoc clinic,cpt,'provider^first dx^modifiers',cnt)=""
"RTN","IBCU7",130,0)
 . S DGPROC=$G(^DGCR(399,IBIFN,"CP",+DA,0))
"RTN","IBCU7",131,0)
 . S X=$P(DGPROC,U,18)_U_+$G(^IBA(362.3,+$P(DGPROC,U,11),0))_U_$P(DGPROC,U,15)
"RTN","IBCU7",132,0)
 . I 'DGCPTNEW,$P(DGPROC,"^",7)="" S DGCPTNEW=2
"RTN","IBCU7",133,0)
 . I DGCPTUP,DGCPTNEW S DGCPT=DGCPT+1 I $P(DGPROC,"^",7) S DGCPT($P(DGPROC,"^",7),+DGPROC,X,DGCPT)=""
"RTN","IBCU7",134,0)
 . ; add visit date to bill
"RTN","IBCU7",135,0)
 . I DGADDVST S (X,DINUM)=DGPROCDT D VFILE1^IBCOPV1 K DINUM,X,DGNOADD,DGADDVST
"RTN","IBCU7",136,0)
 ; Delete modifiers with only a sequence #, no code
"RTN","IBCU7",137,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"CP",Z)) Q:'Z  S Z0=0 F  S Z0=$O(^DGCR(399,IBIFN,"CP",Z,"MOD",Z0)) Q:'Z0  I $P($G(^(Z0,0)),U,2)="" S DA(2)=IBIFN,DA(1)=Z,DA=Z0,DIK="^DGCR(399,"_DA(2)_",""CP"","_DA(1)_",""MOD""," D ^DIK
"RTN","IBCU7",138,0)
 Q
"RTN","IBCU7",139,0)
CODQ K %DT,DGPROC,DIC,DIE,DR,DGPROCDT,IBPROCP,DLAYGO
"RTN","IBCU7",140,0)
 K IBFT,DGNOADD,DGADDVST,DGCPT,DGCPTUP,IBZTYPE,DGCPTNEW
"RTN","IBCU7",141,0)
 Q
"RTN","IBCU7",142,0)
 ;
"RTN","IBCU7",143,0)
DELPROC ; Remove the selected procedure, because of inactive status (cancel selection)
"RTN","IBCU7",144,0)
 W !!,*7,"The Procedure code is inactive on ",$$DAT1^IBOUTL(DGPROCDT),"."
"RTN","IBCU7",145,0)
 W !,"Please select another Procedure."
"RTN","IBCU7",146,0)
 S DA(1)=IBIFN,DA=+Y,DIK="^DGCR(399,"_IBIFN_",""CP"","
"RTN","IBCU7",147,0)
 D ^DIK
"RTN","IBCU7",148,0)
 Q
"RTN","IBCU7",149,0)
 ;
"RTN","IBCU7",150,0)
DELADD N Z,Z0,DA,DIK,X,Y
"RTN","IBCU7",151,0)
 S DA(1)=IBIFN
"RTN","IBCU7",152,0)
 ;Delete references to proc on rev codes
"RTN","IBCU7",153,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"RC",Z)) Q:'Z  S Z0=$G(^(Z,0)) I Z0'="",$P(Z0,U,15)!$S($P(Z0,U,10)=3:$P(Z0,U,11),1:0) S DIE="^DGCR(399,"_DA(1)_",""RC"",",DA=Z,DR=".11///@;.15///@"_$S($P(Z0,U,8):"",1:";.08////1") D ^DIE
"RTN","IBCU7",154,0)
 S DIK="^DGCR(399,"_DA(1)_",""CP""," F DA=0:0 S DA=$O(^DGCR(399,DA(1),"CP",DA)) Q:'DA  D ^DIK
"RTN","IBCU7",155,0)
 S DGRVRCAL=1
"RTN","IBCU7",156,0)
 Q
"RTN","IBCU7",157,0)
 ;
"RTN","IBCU7",158,0)
DTMES ;Message if procedure date not in date range
"RTN","IBCU7",159,0)
 Q:'$D(IBIFN)  Q:'$D(^DGCR(399,IBIFN,"U"))  S DGNODUU=^("U")
"RTN","IBCU7",160,0)
 G:X'<$P(DGNODUU,"^")&(X'>$P(DGNODUU,"^",2)) DTMESQ
"RTN","IBCU7",161,0)
 W *7,!!?3,"Date must be within STATEMENT COVERS FROM and STATEMENT COVERS TO period."
"RTN","IBCU7",162,0)
 S Y=$P(DGNODUU,"^") X ^DD("DD")
"RTN","IBCU7",163,0)
 W !?3,"Enter a date between ",Y," and " S Y=$P(DGNODUU,"^",2) X ^DD("DD") W Y,!
"RTN","IBCU7",164,0)
 K X,Y
"RTN","IBCU7",165,0)
DTMESQ K DGNODUU Q
"RTN","IBCU7",166,0)
 ;
"RTN","IBCU7",167,0)
CODHLP ;Display Additional Procedure codes
"RTN","IBCU7",168,0)
 N I,J,Y,IBMOD
"RTN","IBCU7",169,0)
 I '$O(^DGCR(399,IBIFN,"CP",0)) W !!?5,"No Codes Entered!",! Q
"RTN","IBCU7",170,0)
 W ! F I=0:0 S I=$O(^DGCR(399,IBIFN,"CP",I)) Q:'I  S Y=$G(^(I,0)) S Z=$$PRCNM^IBCSCH1($P(Y,"^",1),$P(Y,"^",2)) W !?5,$E($P(Z,"^",2),1,33),?40,"- ",$P(Z,"^") D
"RTN","IBCU7",171,0)
 . N IBY
"RTN","IBCU7",172,0)
 . S IBY=$P(Y,U,2)
"RTN","IBCU7",173,0)
 . S IBMOD=$$GETMOD^IBEFUNC(IBIFN,I,1)
"RTN","IBCU7",174,0)
 . I IBMOD'="" S IBMOD="/"_IBMOD W IBMOD
"RTN","IBCU7",175,0)
 . W ?60,"Date: " S Y=IBY D DT^DIQ
"RTN","IBCU7",176,0)
 W !
"RTN","IBCU7",177,0)
 ;
"RTN","IBCU7",178,0)
 K Z Q
"RTN","IBCU7",179,0)
 ;
"RTN","IBCU7",180,0)
DICV I $D(IBIFN),$D(^DGCR(399,IBIFN,0)),$P(^(0),U,9) S DIC("V")=$S($P(^(0),U,9)=9:"I +Y(0)=80.1",$P(^(0),U,9)=4!($P(^(0),U,9)=5):"I +Y(0)=81",1:"")
"RTN","IBCU7",181,0)
 Q
"RTN","IBCU7",182,0)
 ;
"RTN","IBCU7",183,0)
DEFDIV(IBIFN) ; Find default division for bill IBIFN
"RTN","IBCU7",184,0)
 Q $P($G(^DG(40.8,+$P($G(^DGCR(399,IBIFN,0)),U,22),0)),U)
"RTN","IBCU7",185,0)
 ;
"RTN","IBCU7",186,0)
ADDTNL(IBIFN,DA) ;
"RTN","IBCU7",187,0)
 N DR,IBOK,X,Y,DIR
"RTN","IBCU7",188,0)
 S IBOK=1
"RTN","IBCU7",189,0)
 S DR="19T;50.09T;50.08T" D ^DIE  ; WCJ;IB*2.0*488 Added Ts
"RTN","IBCU7",190,0)
 ;I '($$FT^IBCEF(IBIFN)'=3&($$INPAT^IBCEF(IBIFN))) D ATTACH  ; DEM;432 - Prompt for Attachment Control Number.
"RTN","IBCU7",191,0)
 I '($$FT^IBCEF(IBIFN)=3&($$INPAT^IBCEF(IBIFN))) D ATTACH  ; DEM;432 - Prompt for Attachment Control Number.
"RTN","IBCU7",192,0)
 I $D(Y) S IBOK=0 G ADDTNLQ
"RTN","IBCU7",193,0)
 ;/Beginning of IB*2.0*488 (vd)
"RTN","IBCU7",194,0)
 ;S DIR("B")="NO",DIR("A")="EDIT CMS-1500 SPECIAL PROGRAM FIELDS and BOX 19?: ",DIR("A",1)=" ",DIR(0)="YA"
"RTN","IBCU7",195,0)
 ;S DIR("?",1)="Respond YES only if you need to add/edit data for chiropractic visits,"
"RTN","IBCU7",196,0)
 ;S DIR("?")="EPSDT care, or if billing for HOSPICE and attending is not a hospice employee."
"RTN","IBCU7",197,0)
 ;D ^DIR K DIR
"RTN","IBCU7",198,0)
 ;I Y'=1 S IBOK=0 G ADDTNLQ
"RTN","IBCU7",199,0)
 ;S DR="W !,""  <<EPSDT>>"";50.07;W !!,""  <<HOSPICE>>"";50.03"
"RTN","IBCU7",200,0)
 S DR="50.07T;50.03T"   ;WCJ;IB*2.0*488 added Ts
"RTN","IBCU7",201,0)
 ;/End of IB*2.0*488 (vd)
"RTN","IBCU7",202,0)
 D ^DIE
"RTN","IBCU7",203,0)
 W !
"RTN","IBCU7",204,0)
ADDTNLQ Q IBOK
"RTN","IBCU7",205,0)
 ;
"RTN","IBCU7",206,0)
XTRA1(Y) ;
"RTN","IBCU7",207,0)
 K Y
"RTN","IBCU7",208,0)
 Q
"RTN","IBCU7",209,0)
 ;
"RTN","IBCU7",210,0)
SPCUNIT(IBIFN,DA) ; return fields for special units if applicable, in DR form
"RTN","IBCU7",211,0)
 N IB0,IBCPT,IBDR,IBCT,IBFT,DFN S IBDR=""
"RTN","IBCU7",212,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),IBCT=$P(IB0,U,27),IBFT=$P(IB0,U,19),DFN=$P(IB0,U,2)
"RTN","IBCU7",213,0)
 S IBCPT=$G(^DGCR(399,+$G(IBIFN),"CP",+$G(DA),0)) I IBCPT'["ICPT" G SPCUNTQ
"RTN","IBCU7",214,0)
 I +$$ITMUNIT^IBCRU4(+IBCPT,5,IBCT) S IBDR="15;" D SROMIN^IBCU74(IBIFN,DA) G SPCUNTQ ; minutes
"RTN","IBCU7",215,0)
 I +$$ITMUNIT^IBCRU4(+IBCPT,4,IBCT) S IBDR="21;" G SPCUNTQ ; miles
"RTN","IBCU7",216,0)
 I +$$ITMUNIT^IBCRU4(+IBCPT,6,IBCT) S IBDR="22//"_$$OBSHOUR^IBCU74(DFN,$P(IBCPT,U,2))_";" G SPCUNTQ ; hours
"RTN","IBCU7",217,0)
 I +IBFT=2,$P($G(^IBE(353.2,+$P(IBCPT,U,10),0)),U,2)="ANESTHESIA" S IBDR="15;" ; minutes
"RTN","IBCU7",218,0)
SPCUNTQ Q IBDR
"RTN","IBCU7",219,0)
 ;
"RTN","IBCU7",220,0)
ATTACH ; DEM;432 - Attachment control number.
"RTN","IBCU7",221,0)
 ; Ask if user wants to enter Attachment Control Number.
"RTN","IBCU7",222,0)
 N DIR,X,Y,DA,DIE,DR
"RTN","IBCU7",223,0)
 S DIR("A")="Enter Attachment Control Number"
"RTN","IBCU7",224,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IBCU7",225,0)
 D ^DIR
"RTN","IBCU7",226,0)
 Q:'Y
"RTN","IBCU7",227,0)
 ; User chose to enter Attachment Control Number.
"RTN","IBCU7",228,0)
 ; User enters Attachment Control fields.
"RTN","IBCU7",229,0)
 S DA(1)=IBIFN,DA=IBPROCP
"RTN","IBCU7",230,0)
 S DIE="^DGCR(399,"_DA(1)_",""CP"","
"RTN","IBCU7",231,0)
 S DR="71Report Type;72Report Transmission Method;70Attachment Control Number"
"RTN","IBCU7",232,0)
 D ^DIE
"RTN","IBCU7",233,0)
 Q
"RTN","IBCU7",234,0)
 ;
"RTN","IBCU7",235,0)
NOCPROC(IBPROCSV) ; MRD;IB*2.0*516 - Function to determine if procedure is an
"RTN","IBCU7",236,0)
 ; "NOC".  Returns '1' if "NOC" procedure, otherwise '0'.
"RTN","IBCU7",237,0)
 ;
"RTN","IBCU7",238,0)
 N IBNOC,IBPROCEX,IBPROCIN,IBPROCNM,IBX
"RTN","IBCU7",239,0)
 S IBNOC=0
"RTN","IBCU7",240,0)
 I $G(IBPROCSV)="" G NOCPROCQ
"RTN","IBCU7",241,0)
 S IBPROCIN=$P($P(IBPROCSV,U,2),";")
"RTN","IBCU7",242,0)
 I IBPROCIN="" G NOCPROCQ
"RTN","IBCU7",243,0)
 ;
"RTN","IBCU7",244,0)
 ; If procedure code ends in '99', quit with a '1'.
"RTN","IBCU7",245,0)
 ;
"RTN","IBCU7",246,0)
 S IBPROCEX=$P($G(^ICPT(IBPROCIN,0)),U,1)
"RTN","IBCU7",247,0)
 I $E(IBPROCEX,$L(IBPROCEX)-1,$L(IBPROCEX))=99 S IBNOC=1 G NOCPROCQ
"RTN","IBCU7",248,0)
 ;
"RTN","IBCU7",249,0)
 ; Pull procedure name, then check to see if it contains one of the
"RTN","IBCU7",250,0)
 ; specified strings.
"RTN","IBCU7",251,0)
 ;
"RTN","IBCU7",252,0)
 S IBPROCNM=$P($G(^ICPT(IBPROCIN,0)),U,2)
"RTN","IBCU7",253,0)
 I IBPROCNM'="",$$NOC(IBPROCNM) S IBNOC=1 G NOCPROCQ
"RTN","IBCU7",254,0)
 ;
"RTN","IBCU7",255,0)
 S IBX=0
"RTN","IBCU7",256,0)
 F  S IBX=$O(^ICPT(IBPROCIN,"D",IBX)) Q:'IBX  D  I IBNOC=1 Q
"RTN","IBCU7",257,0)
 . S IBTEXT=$G(^ICPT(IBPROCIN,"D",IBX,0))
"RTN","IBCU7",258,0)
 . I $G(^ICPT(IBPROCIN,"D",IBX+1,0))'="" S IBTEXT=IBTEXT_" "_$G(^ICPT(IBPROCIN,"D",IBX+1,0))
"RTN","IBCU7",259,0)
 . S IBNOC=$$NOC(IBTEXT)
"RTN","IBCU7",260,0)
 . Q
"RTN","IBCU7",261,0)
 ;
"RTN","IBCU7",262,0)
NOCPROCQ ; Quit out.
"RTN","IBCU7",263,0)
 Q IBNOC
"RTN","IBCU7",264,0)
 ;
"RTN","IBCU7",265,0)
NOC(IBTEXT) ; Quit with '1' if IBTEXT contains one of the specified strings.
"RTN","IBCU7",266,0)
 ;
"RTN","IBCU7",267,0)
 S IBTEXT=$TR(IBTEXT,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","IBCU7",268,0)
 ;
"RTN","IBCU7",269,0)
 I IBTEXT["NOT OTHERWISE" Q 1
"RTN","IBCU7",270,0)
 I IBTEXT["NOT ELSEWHERE" Q 1
"RTN","IBCU7",271,0)
 I IBTEXT["NOT LISTED" Q 1
"RTN","IBCU7",272,0)
 I IBTEXT["UNLISTED" Q 1
"RTN","IBCU7",273,0)
 I IBTEXT["UNSPECIFIED" Q 1
"RTN","IBCU7",274,0)
 I IBTEXT["UNCLASSIFIED" Q 1
"RTN","IBCU7",275,0)
 I IBTEXT["NON-SPECIFIED" Q 1
"RTN","IBCU7",276,0)
 I IBTEXT["NOS " Q 1
"RTN","IBCU7",277,0)
 I IBTEXT["NOS;" Q 1
"RTN","IBCU7",278,0)
 I IBTEXT["NOS." Q 1
"RTN","IBCU7",279,0)
 I IBTEXT["NOS," Q 1
"RTN","IBCU7",280,0)
 I IBTEXT["NOS/" Q 1
"RTN","IBCU7",281,0)
 I IBTEXT["(NOS)" Q 1
"RTN","IBCU7",282,0)
 I IBTEXT["NOC " Q 1
"RTN","IBCU7",283,0)
 I IBTEXT["NOC;" Q 1
"RTN","IBCU7",284,0)
 I IBTEXT["NOC." Q 1
"RTN","IBCU7",285,0)
 I IBTEXT["NOC," Q 1
"RTN","IBCU7",286,0)
 I IBTEXT["NOC/" Q 1
"RTN","IBCU7",287,0)
 I IBTEXT["(NOC)" Q 1
"RTN","IBCU7",288,0)
 ;
"RTN","IBCU7",289,0)
 ; Check if last three charcters are 'NOC' or 'NOS'.
"RTN","IBCU7",290,0)
 ;
"RTN","IBCU7",291,0)
 S IBTEXT=$E(IBTEXT,$L(IBTEXT)-2,$L(IBTEXT))
"RTN","IBCU7",292,0)
 I IBTEXT="NOC" Q 1
"RTN","IBCU7",293,0)
 I IBTEXT="NOS" Q 1
"RTN","IBCU7",294,0)
 ;
"RTN","IBCU7",295,0)
 Q 0
"RTN","IBCU7",296,0)
 ;
"VER")
8.0^22.0
**INSTALL NAME**
LR*5.2*442
"BLD",9663,0)
LR*5.2*442^LAB SERVICE^0^3150820^y
"BLD",9663,4,0)
^9.64PA^^
"BLD",9663,6.3)
15
"BLD",9663,"KRN",0)
^9.67PA^779.2^20
"BLD",9663,"KRN",.4,0)
.4
"BLD",9663,"KRN",.401,0)
.401
"BLD",9663,"KRN",.402,0)
.402
"BLD",9663,"KRN",.403,0)
.403
"BLD",9663,"KRN",.5,0)
.5
"BLD",9663,"KRN",.84,0)
.84
"BLD",9663,"KRN",3.6,0)
3.6
"BLD",9663,"KRN",3.8,0)
3.8
"BLD",9663,"KRN",9.2,0)
9.2
"BLD",9663,"KRN",9.8,0)
9.8
"BLD",9663,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",9663,"KRN",9.8,"NM",1,0)
LREPI3^^0^B50657708
"BLD",9663,"KRN",9.8,"NM",2,0)
LREPI5^^0^B9871956
"BLD",9663,"KRN",9.8,"NM",3,0)
LRAPQAT1^^0^B5639030
"BLD",9663,"KRN",9.8,"NM","B","LRAPQAT1",3)

"BLD",9663,"KRN",9.8,"NM","B","LREPI3",1)

"BLD",9663,"KRN",9.8,"NM","B","LREPI5",2)

"BLD",9663,"KRN",19,0)
19
"BLD",9663,"KRN",19.1,0)
19.1
"BLD",9663,"KRN",101,0)
101
"BLD",9663,"KRN",409.61,0)
409.61
"BLD",9663,"KRN",771,0)
771
"BLD",9663,"KRN",779.2,0)
779.2
"BLD",9663,"KRN",870,0)
870
"BLD",9663,"KRN",8989.51,0)
8989.51
"BLD",9663,"KRN",8989.52,0)
8989.52
"BLD",9663,"KRN",8994,0)
8994
"BLD",9663,"KRN","B",.4,.4)

"BLD",9663,"KRN","B",.401,.401)

"BLD",9663,"KRN","B",.402,.402)

"BLD",9663,"KRN","B",.403,.403)

"BLD",9663,"KRN","B",.5,.5)

"BLD",9663,"KRN","B",.84,.84)

"BLD",9663,"KRN","B",3.6,3.6)

"BLD",9663,"KRN","B",3.8,3.8)

"BLD",9663,"KRN","B",9.2,9.2)

"BLD",9663,"KRN","B",9.8,9.8)

"BLD",9663,"KRN","B",19,19)

"BLD",9663,"KRN","B",19.1,19.1)

"BLD",9663,"KRN","B",101,101)

"BLD",9663,"KRN","B",409.61,409.61)

"BLD",9663,"KRN","B",771,771)

"BLD",9663,"KRN","B",779.2,779.2)

"BLD",9663,"KRN","B",870,870)

"BLD",9663,"KRN","B",8989.51,8989.51)

"BLD",9663,"KRN","B",8989.52,8989.52)

"BLD",9663,"KRN","B",8994,8994)

"BLD",9663,"QUES",0)
^9.62^^
"BLD",9663,"REQB",0)
^9.611^3^3
"BLD",9663,"REQB",1,0)
LR*5.2*421^2
"BLD",9663,"REQB",2,0)
LR*5.2*422^2
"BLD",9663,"REQB",3,0)
DG*5.3*884^2
"BLD",9663,"REQB","B","DG*5.3*884",3)

"BLD",9663,"REQB","B","LR*5.2*421",1)

"BLD",9663,"REQB","B","LR*5.2*422",2)

"MBREQ")
0
"PKG",26,-1)
1^1
"PKG",26,0)
LAB SERVICE^LR^CORE LAB SYSTEM
"PKG",26,20,0)
^9.402P^1^1
"PKG",26,20,1,0)
2^^LRXDRPT
"PKG",26,20,1,1)

"PKG",26,20,"B",2,1)

"PKG",26,22,0)
^9.49I^1^1
"PKG",26,22,1,0)
5.2^2940927^2950611
"PKG",26,22,1,"PAH",1,0)
442^3150820^520736459
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","LRAPQAT1")
0^3^B5639030
"RTN","LRAPQAT1",1,0)
LRAPQAT1 ;AVAMC/REG/CYM,WOIFO/PMK - QA CODE SEARCH ;12/31/2014 11:06 AM
"RTN","LRAPQAT1",2,0)
 ;;5.2;LAB SERVICE;**201,315,422,442**;Sep 27, 1994;Build 15
"RTN","LRAPQAT1",3,0)
 ;
"RTN","LRAPQAT1",4,0)
 ; Reference to $$ICDDX^ICDEX supported by ICR #5747
"RTN","LRAPQAT1",5,0)
 ; Reference to $$ICDOP^ICDEX supported by ICR #5747
"RTN","LRAPQAT1",6,0)
 ; Reference to DGPTFUT supported by IA #6130
"RTN","LRAPQAT1",7,0)
 ;
"RTN","LRAPQAT1",8,0)
 D EN^LRUA S (LR("W"),LRS(5),LRQ(9),LRQ(3))=1,LRSDT=9999999-LRSDT,LRP=0
"RTN","LRAPQAT1",9,0)
 F LRB=0:0 S LRP=$O(^TMP("LRAP",$J,LRP)) Q:LRP=""!(LR("Q"))  F LRDFN=0:0 S LRDFN=$O(^TMP("LRAP",$J,LRP,LRDFN)) Q:'LRDFN!(LR("Q"))  S X=^(LRDFN) D L
"RTN","LRAPQAT1",10,0)
 Q
"RTN","LRAPQAT1",11,0)
L S DFN=$P(X,"^",2),LRQ=0,SEX=$P(X,"^",4),SSN=$P(X,"^"),Y=$P(X,"^",3) S DOB=$$FMTE^XLFDT(Y)
"RTN","LRAPQAT1",12,0)
 G:'$D(^LR(LRDFN,"SP"))&('$D(^LR(LRDFN,"CY")))&('$D(^LR(LRDFN,"EM"))) AU
"RTN","LRAPQAT1",13,0)
 D ^LRAPT1 Q:LR("Q")
"RTN","LRAPQAT1",14,0)
AU I $D(^LR(LRDFN,"AU")),+^("AU") D ^LRAPT2
"RTN","LRAPQAT1",15,0)
 Q:'DFN!(LR("Q"))  D INP^VADPT Q:VAIN(1)']""  D A
"RTN","LRAPQAT1",16,0)
 Q
"RTN","LRAPQAT1",17,0)
A S LRPTF=VAIN(10)
"RTN","LRAPQAT1",18,0)
 S LRADM=$P(VAIN(7),U,2)
"RTN","LRAPQAT1",19,0)
 S LRWARD=$P(VAIN(4),U,2)
"RTN","LRAPQAT1",20,0)
 S LRTS=$P(VAIN(3),U,2)
"RTN","LRAPQAT1",21,0)
 K VAIN
"RTN","LRAPQAT1",22,0)
 N LRC,LRF
"RTN","LRAPQAT1",23,0)
 W !,"Adm: ",$P(LRADM,"@"),?35,LRWARD
"RTN","LRAPQAT1",24,0)
 W !,?12,"Specialty: ",$P(LRADM,"@"),?35,LRTS
"RTN","LRAPQAT1",25,0)
 Q:'LRPTF
"RTN","LRAPQAT1",26,0)
 D LOOKUP(LRPTF,.LRF,.LRC)
"RTN","LRAPQAT1",27,0)
 ; output the results 
"RTN","LRAPQAT1",28,0)
 N LRTMP,LRX
"RTN","LRAPQAT1",29,0)
 F LRTMP=0:0 S LRTMP=$O(LRF(LRTMP)) Q:'LRTMP  D
"RTN","LRAPQAT1",30,0)
 . S LRX=$$ICDDX^ICDEX(LRTMP,,,"I")
"RTN","LRAPQAT1",31,0)
 . I +LRX=-1 Q
"RTN","LRAPQAT1",32,0)
 . W !,$P(LRX,"^",2),?10,$P(LRX,"^",4)
"RTN","LRAPQAT1",33,0)
 . Q
"RTN","LRAPQAT1",34,0)
 F LRTMP=0:0 S LRTMP=$O(LRC(LRTMP)) Q:'LRTMP  D
"RTN","LRAPQAT1",35,0)
 . S LRX=$$ICDOP^ICDEX(LRTMP,,,"I")
"RTN","LRAPQAT1",36,0)
 . I +LRX=-1 Q
"RTN","LRAPQAT1",37,0)
 . W !,$P(LRX,"^",2),?10,$P(LRX,"^",5)
"RTN","LRAPQAT1",38,0)
 . Q
"RTN","LRAPQAT1",39,0)
 Q
"RTN","LRAPQAT1",40,0)
 ;
"RTN","LRAPQAT1",41,0)
LOOKUP(LRPTF,LRF,LRC) ; get icd codes from Patient Treatment File
"RTN","LRAPQAT1",42,0)
 D GETCODES(701,LRPTF,.LRF) ; 70 - primary/secondary diagnosis
"RTN","LRAPQAT1",43,0)
 D GETCODES(501,LRPTF,.LRF) ; M - movements
"RTN","LRAPQAT1",44,0)
 D GETCODES(601,LRPTF,.LRC) ; P - procedures
"RTN","LRAPQAT1",45,0)
 D GETCODES(401,LRPTF,.LRC) ; S - surgeries
"RTN","LRAPQAT1",46,0)
 Q
"RTN","LRAPQAT1",47,0)
 ;
"RTN","LRAPQAT1",48,0)
GETCODES(DGA,DGB,ARRAY) ; get codes from Patient Treatment File (#45)
"RTN","LRAPQAT1",49,0)
 N DGC,DGD,I
"RTN","LRAPQAT1",50,0)
 I DGA=701 D
"RTN","LRAPQAT1",51,0)
 . D PTFICD^DGPTFUT(DGA,DGB,,.DGD),COPY(.DGD,.ARRAY)
"RTN","LRAPQAT1",52,0)
 . Q
"RTN","LRAPQAT1",53,0)
 E  D
"RTN","LRAPQAT1",54,0)
 . D PTFIEN^DGPTFUT(DGA,DGB,.DGC)
"RTN","LRAPQAT1",55,0)
 . S I="" F  S I=$O(DGC(I)) Q:I=""  D
"RTN","LRAPQAT1",56,0)
 . . D PTFICD^DGPTFUT(DGA,DGB,I,.DGD),COPY(.DGD,.ARRAY)
"RTN","LRAPQAT1",57,0)
 . . Q
"RTN","LRAPQAT1",58,0)
 . Q
"RTN","LRAPQAT1",59,0)
 Q
"RTN","LRAPQAT1",60,0)
 ;
"RTN","LRAPQAT1",61,0)
COPY(DGD,ARRAY) ; copy results into ARRAY
"RTN","LRAPQAT1",62,0)
 N I
"RTN","LRAPQAT1",63,0)
 S I="" F  S I=$O(DGD(I)) Q:I=""  S ARRAY($P(DGD(I),"^",1))=""
"RTN","LRAPQAT1",64,0)
 Q
"RTN","LRAPQAT1",65,0)
 ;
"RTN","LREPI3")
0^1^B50657708
"RTN","LREPI3",1,0)
LREPI3 ;DALOI/SED - EMERGING PATHOGENS HL7 SEGMENTS ;19 Jun 2013
"RTN","LREPI3",2,0)
 ;;5.2;LAB SERVICE;**132,175,260,281,320,315,421,442**;Sep 27, 1994;Build 15
"RTN","LREPI3",3,0)
 ; Reference to ^DGPT supported by IA #418
"RTN","LREPI3",4,0)
 ; Reference to DGPTFUT supported by IA #6130
"RTN","LREPI3",5,0)
 ; Reference to ^SC supported by IA #10040
"RTN","LREPI3",6,0)
 ; Reference to ^DIC(21 supported by IA #4280
"RTN","LREPI3",7,0)
 ; Reference to ICN supported by IA #2701
"RTN","LREPI3",8,0)
 ; Reference to VAFHLPID supported by IA # 263
"RTN","LREPI3",9,0)
 ; Reference to VAFHLPV1 supported by IA # 3018
"RTN","LREPI3",10,0)
 ; Reference to ^DIC(5 supported by IA # 10056
"RTN","LREPI3",11,0)
 ; Reference to $$HOMELESS supported by IA #1528
"RTN","LREPI3",12,0)
 ; Reference to VADPT supported by IA #10061
"RTN","LREPI3",13,0)
 ; Reference to ^AUPNVPOV supported by IA # 3094
"RTN","LREPI3",14,0)
 ; Reference to ^AUPNVSIT supported by IA #3530
"RTN","LREPI3",15,0)
 ; Reference to $$STA^XUAF4(IEN) supported by IA #2171
"RTN","LREPI3",16,0)
 ; Reference to $$PTR2CODE^DGUTL4 supported by IA #3799
"RTN","LREPI3",17,0)
 ; Reference to $$CODEN^ICDEX supported by IA #5747
"RTN","LREPI3",18,0)
 ;
"RTN","LREPI3",19,0)
NTE ;TO BUILD THE NTE SEGMENT TO DEFINE THE EPI
"RTN","LREPI3",20,0)
 S LRDATA="NTE"_HLFS_LRNTE_HLFS_$P(^LAB(69.5,LRPATH,0),U,9)_LRCS_$P(^LAB(69.5,LRPATH,0),U,1)
"RTN","LREPI3",21,0)
 S LRCNT=LRCNT+1,^TMP("HLS",$J,LRCNT)=$$UP^XLFSTR(LRDATA)
"RTN","LREPI3",22,0)
 S ^TMP("LREPIREP",$J,LRCNT)=$$UP^XLFSTR(LRDATA)
"RTN","LREPI3",23,0)
 S LRMSGSZ=LRMSGSZ+$L(LRDATA)
"RTN","LREPI3",24,0)
 S LRNTE=LRNTE+1
"RTN","LREPI3",25,0)
 Q
"RTN","LREPI3",26,0)
DG1 ;BUILD THE DG1 FOR ICD CODES
"RTN","LREPI3",27,0)
 K ^TMP($J,"DG1")
"RTN","LREPI3",28,0)
 S IFN=+$G(^TMP($J,LRPROT,DFN,LRENDT,LRPATH,LRINVD,LRND))
"RTN","LREPI3",29,0)
DG11 Q:+IFN'>0
"RTN","LREPI3",30,0)
 N LRDGPT,LRPDX,LRADMDT,LRDGMV
"RTN","LREPI3",31,0)
 D PTFICD^DGPTFUT("701",IFN,,.LRDGPT)
"RTN","LREPI3",32,0)
 Q:$G(LRDGPT)=""
"RTN","LREPI3",33,0)
 S LRPDX=$P($G(LRDGPT(0)),"^")
"RTN","LREPI3",34,0)
 S LRADMDT=$$HLDATE^HLFNC($P(LRDGPT,"^",3))
"RTN","LREPI3",35,0)
 ; Date of Interest is Discharge Date if present, otherwise Current
"RTN","LREPI3",36,0)
 ; System Date
"RTN","LREPI3",37,0)
 N LRDTINT S LRDTINT=$S($P(LRDGPT,"^",10)]"":$P(LRDGPT,"^",10),1:DT)
"RTN","LREPI3",38,0)
 ;SEARCH FOR LEGIONAIRS HERE
"RTN","LREPI3",39,0)
 I $P($G(^DGPT(IFN,300)),U,3)=1 D
"RTN","LREPI3",40,0)
 .I '$D(LRICDX) S LRCSYS=$$ICDSYS^LREPICD(LRDTINT,"D"),LRICDX=$S(LRCSYS="ICD":0,LRCSYS="10D":1,1:-1)
"RTN","LREPI3",41,0)
 .I 'LRICDX S LRICDIEN=+$$CODEN^ICDEX("482.84 ",80) Q:+LRICDIEN'>0  S ^TMP($J,"DG1",LRICDIEN)=LRPDX_"^"_LRADMDT
"RTN","LREPI3",42,0)
 .I LRICDX,LRICDX'=-1 F XCODE="A48.1","A48.2","A48.8" D  Q:'$D(LRICDIEN)
"RTN","LREPI3",43,0)
 ..S LRICDIEN(XCODE)=+$$CODEN^ICDEX(XCODE,80) I +LRICDIEN(XCODE)'>0 K LRICDIEN(XCODE) Q
"RTN","LREPI3",44,0)
 ..S ^TMP($J,"DG1",LRICDIEN(XCODE))=LRPDX_"^"_LRADMDT
"RTN","LREPI3",45,0)
 S LRI=-1 F  S LRI=$O(LRDGPT(LRI)) Q:LRI=""  D
"RTN","LREPI3",46,0)
 .S LRICDIEN=$P(LRDGPT(LRI),"^") Q:+LRICDIEN'>0
"RTN","LREPI3",47,0)
 .S ^TMP($J,"DG1",LRICDIEN)=LRPDX_"^"_LRADMDT
"RTN","LREPI3",48,0)
 ;SEARCH SUB FIELDS
"RTN","LREPI3",49,0)
 D PTFIEN^DGPTFUT("501",IFN,.LRDGMV)
"RTN","LREPI3",50,0)
 S LRMV=0 F  S LRMV=$O(LRDGMV(LRMV)) Q:'LRMV  K LRDGPT D PTFICD^DGPTFUT("501",IFN,LRMV,.LRDGPT)  D:$D(LRDGPT)>9
"RTN","LREPI3",51,0)
 .;SEARCH FOR LEGIONAIRS HERE IN SUB FILE
"RTN","LREPI3",52,0)
 .I $P($G(^DGPT(IFN,"M",LRMV,300)),U,3)=1 D
"RTN","LREPI3",53,0)
 ..I 'LRICDX S LRICDIEN=$$CODEN^ICDEX("482.84 ",80) Q:+LRICDIEN'>0  S ^TMP($J,"DG1",LRICDIEN)=LRPDX_"^"_LRADMDT
"RTN","LREPI3",54,0)
 ..I LRICDX,LRICDX'=-1 F XCODE="A48.1","A48.2","A48.8" D  Q:'$D(LRICDIEN)
"RTN","LREPI3",55,0)
 ...S LRICDIEN(XCODE)=+$$CODEN^ICDEX(XCODE,80) I +LRICDIEN(XCODE)'>0 K LRICDIEN(XCODE) Q
"RTN","LREPI3",56,0)
 ...S ^TMP($J,"DG1",LRICDIEN(XCODE))=LRPDX_"^"_LRADMDT
"RTN","LREPI3",57,0)
 .S LRI=0 F  S LRI=$O(LRDGPT(LRI)) Q:'LRI  D
"RTN","LREPI3",58,0)
 ..S LRICDIEN=$P(LRDGPT(LRI),"^") Q:+LRICDIEN'>0
"RTN","LREPI3",59,0)
 ..S ^TMP($J,"DG1",LRICDIEN)=LRPDX_"^"_LRADMDT
"RTN","LREPI3",60,0)
 Q:'$D(^TMP($J,"DG1"))
"RTN","LREPI3",61,0)
BLD S LRICDIEN=0 F  S LRICDIEN=$O(^TMP($J,"DG1",LRICDIEN)) Q:+LRICDIEN'>0  D
"RTN","LREPI3",62,0)
 .S:'$D(DGCNT) DGCNT=1
"RTN","LREPI3",63,0)
 .N LRTMP,LRXSYS
"RTN","LREPI3",64,0)
 .K LRCSYS S LRCSYS=$$ICDSYS^LREPICD(LRDTINT,"D") Q:$P(LRCSYS,U,1)=-1
"RTN","LREPI3",65,0)
 .S LRTMP=$$ICDDATA^ICDXCODE(LRCSYS,LRICDIEN,$G(LRDTINT,""),)
"RTN","LREPI3",66,0)
 .K LRDATA,LREPICSY
"RTN","LREPI3",67,0)
 .S LREPICSY=$S($P(LRTMP,U,20)=1:" I9",$P(LRTMP,U,20)=30:"I10",1:"UNKNOWN CODE SYSTEM"),LRXSYS=$S(LRCSYS="ICD":" I9",1:"I10")
"RTN","LREPI3",68,0)
 .Q:LREPICSY'=LRXSYS
"RTN","LREPI3",69,0)
 .S LRDATA="DG1"_HLFS_DGCNT_HLFS_HLFS_$P(LRTMP,U,2)
"RTN","LREPI3",70,0)
 .S LRDATA=LRDATA_LRCS_$P(LRTMP,U,4)_LRCS_LREPICSY
"RTN","LREPI3",71,0)
 .I LRPROT=LRPROTX S LRDATA=LRDATA_HLFS_$P(^TMP($J,"DG1",LRICDIEN),"^",2)_HLFS_HLFS_$S(LRICDIEN=$P(^TMP($J,"DG1",LRICDIEN),"^"):"PR",1:"")
"RTN","LREPI3",72,0)
 .S ^TMP("HL7",$J,DGCNT)=$$UP^XLFSTR(LRDATA),DGCNT=DGCNT+1
"RTN","LREPI3",73,0)
 K ^TMP($J,"DG1"),LRDATA,DGCNT,LRICDIEN,LRMV,LRICDX,LRCSYS,XCODE
"RTN","LREPI3",74,0)
 Q
"RTN","LREPI3",75,0)
PID ;TO BUILD PID SEGMENT
"RTN","LREPI3",76,0)
 K MSG
"RTN","LREPI3",77,0)
 S FLDS="1,2,3,5,7,8,10BT,19,22BT" S MSG=$$EN^VAFHLPID(DFN,FLDS,LRPID)
"RTN","LREPI3",78,0)
 ;MADE CHANGE FOR PID SEGMENTS TOO LONG;CKA;06/30/04
"RTN","LREPI3",79,0)
 D DEM^VADPT
"RTN","LREPI3",80,0)
 I $D(VAFPID(1)) D
"RTN","LREPI3",81,0)
 .S $P(MSG,HLFS,11)=VADM(12),MSG=MSG_VAFPID(1),$P(MSG,HLFS,23)=VADM(11)
"RTN","LREPI3",82,0)
 S ICN=$$GETICN^MPIF001(DFN)
"RTN","LREPI3",83,0)
 S:ICN<0 $P(MSG,HLFS,4)=$P(MSG,HLFS,4)_LRCS_""""""_LRCS_"VAMPI"
"RTN","LREPI3",84,0)
 S:ICN>0 $P(MSG,HLFS,4)=$P(MSG,HLFS,4)_LRCS_ICN_LRCS_"VAMPI"
"RTN","LREPI3",85,0)
 ;ADDITIONAL DATA ADDED HERE HOMELESSNESS
"RTN","LREPI3",86,0)
 S:$$HOMELESS^SOWKHIRM(DFN) $P(MSG,HLFS,12)="HOMELESS"
"RTN","LREPI3",87,0)
 ;NOW GET PERIOD OF SERVICE
"RTN","LREPI3",88,0)
 K VAEL D ELIG^VADPT
"RTN","LREPI3",89,0)
 S:$G(VAEL(2))'="" $P(MSG,HLFS,28)=$P($G(^DIC(21,+VAEL(2),0)),U,3)
"RTN","LREPI3",90,0)
 K VAEL
"RTN","LREPI3",91,0)
 ;GET ZIP IF THERE
"RTN","LREPI3",92,0)
 K VAPA D ADD^VADPT
"RTN","LREPI3",93,0)
 S $P(MSG,HLFS,12)=$P(MSG,HLFS,12)_LRCS_LRCS_LRCS_VAPA(5)_LRCS_$G(VAPA(6))_LRCS_LRCS_LRCS_LRCS
"RTN","LREPI3",94,0)
 I VAPA(7)'="",VAPA(5)'="" S CTY=$P(VAPA(7),U,2),CTYN=$P(VAPA(7),U) I CTYN'="" S CTYCD=$P($G(^DIC(5,$P(VAPA(5),U),1,CTYN,0)),U,3) D
"RTN","LREPI3",95,0)
 .S $P(MSG,HLFS,12)=$P(MSG,HLFS,12)_$G(CTYCD)_"^"_$G(CTY)
"RTN","LREPI3",96,0)
 K VAPA,CTY,CTYN,CTYCD,LRRACE
"RTN","LREPI3",97,0)
 I $P(MSG,HLFS,12)="~~~~~~~~" S $P(MSG,HLFS,12)=""
"RTN","LREPI3",98,0)
 S LRRACE=$$PTR2CODE^DGUTL4($P(VADM(8),U))
"RTN","LREPI3",99,0)
 I $L(MSG)>245 D
"RTN","LREPI3",100,0)
 .S $P(MSG,HLFS,11)=VADM(12),$P(MSG,HLFS,23)=VADM(11)
"RTN","LREPI3",101,0)
 S:$P(MSG,HLFS,11)="""""~""""~0005~""""~""""~CDC" $P(MSG,HLFS,11)=""
"RTN","LREPI3",102,0)
 S:$P(MSG,HLFS,23)="""""~""""~0189~""""~""""~CDC" $P(MSG,HLFS,23)=""
"RTN","LREPI3",103,0)
 S $P(MSG,HLFS,11)=LRRACE_"~"_$P(MSG,HLFS,11)
"RTN","LREPI3",104,0)
 I $P(MSG,HLFS,11)="~" S $P(MSG,HLFS,11)=""
"RTN","LREPI3",105,0)
 S LRPID=LRPID+1,LRCNT=LRCNT+1,^TMP("HLS",$J,LRCNT)=$$UP^XLFSTR(MSG)
"RTN","LREPI3",106,0)
 S ^TMP("LREPIREP",$J,LRCNT)=$$UP^XLFSTR(MSG)
"RTN","LREPI3",107,0)
 S LRMSGSZ=LRMSGSZ+$L(MSG)
"RTN","LREPI3",108,0)
 K FLDS,VAEL,ICN,VAFPID,VADM
"RTN","LREPI3",109,0)
 Q
"RTN","LREPI3",110,0)
PV1 ;TO BUILD PV1 SEGMENT
"RTN","LREPI3",111,0)
 K PTF,Y,C,LRDATA,MSG,LRPATLOC
"RTN","LREPI3",112,0)
 S LRDATA=""
"RTN","LREPI3",113,0)
 I $P(^TMP($J,LRPROT,DFN,LRENDT),U)="I" D
"RTN","LREPI3",114,0)
 .S FLDS="1,2,3,36,39,44,45" S LRDATA=$$IN^VAFHLPV1(DFN,LRENDT,FLDS,"","","","")
"RTN","LREPI3",115,0)
 I $P(LRDATA,HLFS)="" S $P(LRDATA,HLFS)="PV1"
"RTN","LREPI3",116,0)
 S $P(LRDATA,HLFS,2)=LRPV1
"RTN","LREPI3",117,0)
 S $P(LRDATA,HLFS,7)=""
"RTN","LREPI3",118,0)
 S $P(LRDATA,HLFS,3)=$P(^TMP($J,LRPROT,DFN,LRENDT),U)
"RTN","LREPI3",119,0)
 I $P(LRDATA,HLFS,3)="O" D
"RTN","LREPI3",120,0)
 .S LRPATLOC=$P(^TMP($J,LRPROT,DFN,LRENDT),U,2)
"RTN","LREPI3",121,0)
 .S LRFILE=$P(LRPATLOC,";",2)
"RTN","LREPI3",122,0)
 .S LRIFN=$P(LRPATLOC,";")
"RTN","LREPI3",123,0)
 .I LRFILE="SC(" D
"RTN","LREPI3",124,0)
 ..I $P($G(^SC(LRIFN,0)),U,4)'="" D
"RTN","LREPI3",125,0)
 ...S LRPATLOC=$$STA^XUAF4($P($G(^SC(LRIFN,0)),U,4))
"RTN","LREPI3",126,0)
 .I LRFILE="DIC(4" D
"RTN","LREPI3",127,0)
 ..I $$STA^XUAF4(LRIFN)'="" D
"RTN","LREPI3",128,0)
 ...S LRPATLOC=$$STA^XUAF4(LRIFN)
"RTN","LREPI3",129,0)
 .S $P(LRDATA,HLFS,39)=LRPATLOC
"RTN","LREPI3",130,0)
 .K LRPATLOC,LRFILE,LRIFN
"RTN","LREPI3",131,0)
 S:$P(^TMP($J,LRPROT,DFN,LRENDT),U,3)="UPDT" $P(LRDATA,HLFS,3)="U"
"RTN","LREPI3",132,0)
 S $P(LRDATA,HLFS,45)=$$HLDATE^HLFNC(LRENDT)
"RTN","LREPI3",133,0)
 S:$P(LRDATA,HLFS,46)="""""" $P(LRDATA,HLFS,46)=""
"RTN","LREPI3",134,0)
 ;MADE CHANGE FOR FUTURE DISCHARGE DATES;CKA 6/30/2004
"RTN","LREPI3",135,0)
 S:$P(LRDATA,HLFS,46)>LRRPE $P(LRDATA,HLFS,46)=""
"RTN","LREPI3",136,0)
 S PTF=$P(^TMP($J,LRPROT,DFN,LRENDT),U,2) I +PTF>0 D
"RTN","LREPI3",137,0)
 .Q:'$D(^DGPT(PTF,0))
"RTN","LREPI3",138,0)
 .Q:$P(^DGPT(PTF,0),U,6)'=3
"RTN","LREPI3",139,0)
 .Q:'$D(^DGPT(PTF,70))
"RTN","LREPI3",140,0)
 .I +$P(^DGPT(PTF,70),U)>0,+$P(^DGPT(PTF,70),U)<LRRPE S $P(LRDATA,HLFS,46)=$$HLDATE^HLFNC($P(^DGPT(PTF,70),U))
"RTN","LREPI3",141,0)
 .S (Y,LRDTY)=$P(^DGPT(PTF,70),U,3)
"RTN","LREPI3",142,0)
 .Q:+Y'>0
"RTN","LREPI3",143,0)
 .S Y=$$EXTERNAL^DILFD(45,72,,Y) ;removed direct reference to ^DD(45,72
"RTN","LREPI3",144,0)
 .;S C=$P(^DD(45,72,0),U,2) D Y^DIQ ;RLM
"RTN","LREPI3",145,0)
 .S $P(LRDATA,HLFS,37)=LRDTY_LRCS_Y_LRCS_"VA45"
"RTN","LREPI3",146,0)
 .S $P(LRDATA,HLFS,40)=$P(^DGPT(PTF,0),U,3)
"RTN","LREPI3",147,0)
 S LRCNT=LRCNT+1,^TMP("HLS",$J,LRCNT)=$$UP^XLFSTR(LRDATA),LRPV1=LRPV1+1
"RTN","LREPI3",148,0)
 S ^TMP("LREPIREP",$J,LRCNT)=$$UP^XLFSTR(LRDATA)
"RTN","LREPI3",149,0)
 S LRMSGSZ=LRMSGSZ+$L(LRDATA)
"RTN","LREPI3",150,0)
 I $P(LRDATA,HLFS,3)="O" D  D MOVE^LREPI2
"RTN","LREPI3",151,0)
 .S VIFN=0
"RTN","LREPI3",152,0)
 .F  S VIFN=$O(^AUPNVPOV("AA",DFN,9999999-$P(LRENDT,"."),VIFN)) Q:+VIFN'>0  D
"RTN","LREPI3",153,0)
 ..S LRVISIT=$P(^AUPNVSIT($P(^AUPNVPOV(VIFN,0),U,3),812),U,2)
"RTN","LREPI3",154,0)
 ..I LRVISIT'=26 S LRVISIT=0 Q
"RTN","LREPI3",155,0)
 ..S LRICDN=$P($G(^AUPNVPOV(VIFN,0)),U)
"RTN","LREPI3",156,0)
 ..Q:LRICDN=""
"RTN","LREPI3",157,0)
 ..N LRTMP
"RTN","LREPI3",158,0)
 ..I $G(LRCSYS)="" S LRCSYS=$$CSI^ICDEX(80,LRICDN)
"RTN","LREPI3",159,0)
 ..S LRTMP=$$ICDDATA^ICDXCODE(LRCSYS,LRICDN,,)
"RTN","LREPI3",160,0)
 ..S:'$D(DGCNT) DGCNT=1
"RTN","LREPI3",161,0)
 ..S LRDATA="DG1"_HLFS_DGCNT_HLFS_LREPICSY_HLFS_$P(LRTMP,U,2)
"RTN","LREPI3",162,0)
 ..S LRDATA=LRDATA_LRCS_$P(LRTMP,U,4)_LRCS_LREPICSY
"RTN","LREPI3",163,0)
 ..S LRDATA=LRDATA_HLFS_$$HLDATE^HLFNC(LRENDT)_HLFS_HLFS_$S($P(^AUPNVPOV(VIFN,0),U,12)="P":"PR",1:"")
"RTN","LREPI3",164,0)
 ..S ^TMP("HL7",$J,DGCNT)=$$UP^XLFSTR(LRDATA)
"RTN","LREPI3",165,0)
 .. S DGCNT=DGCNT+1
"RTN","LREPI3",166,0)
 K DGCNT,VIFN,LRICDN,LRICDIEN,LRDATA,LRVISIT
"RTN","LREPI3",167,0)
 Q:$G(PTF)'>0
"RTN","LREPI3",168,0)
 Q:'$D(^DGPT(PTF,0))
"RTN","LREPI3",169,0)
 Q:$P(^DGPT(PTF,0),U,6)'=3
"RTN","LREPI3",170,0)
 S IFN=PTF D DG11
"RTN","LREPI3",171,0)
 D MOVE^LREPI2
"RTN","LREPI3",172,0)
 K PTF,Y,C,LRDATA,LRDTY,IFN,LRICDIEN,LRICDN,LROLLOC,VIFN
"RTN","LREPI3",173,0)
 Q
"RTN","LREPI3",174,0)
 ;
"RTN","LREPI5")
0^2^B9871956
"RTN","LREPI5",1,0)
LREPI5 ;DALOI/SED,WOIFO/PMK - EMERGING PATHOGENS SEARCH ;31 Dec 2014  11:03 AM
"RTN","LREPI5",2,0)
 ;;5.2;LAB SERVICE;**281,315,421,442**;Sep 27, 1994;Build 15
"RTN","LREPI5",3,0)
 ; Reference to ^DGPT supported by IA #418
"RTN","LREPI5",4,0)
 ; Reference to DGPTFUT supported by IA #6130
"RTN","LREPI5",5,0)
 ; Reference to ^ORD supported by IA #872
"RTN","LREPI5",6,0)
 ; Reference to PATS^PXRMXX supported by IA #3134
"RTN","LREPI5",7,0)
 ; Reference to VADPT supported by IA #10061
"RTN","LREPI5",8,0)
 ; Reference to ^AUPNVPOV supported by IA #3094
"RTN","LREPI5",9,0)
 ; Reference to $$CODEN^ICDEX supported by IA #5747
"RTN","LREPI5",10,0)
 Q
"RTN","LREPI5",11,0)
 ;Called from LREPI
"RTN","LREPI5",12,0)
PTF ;SEARCH DISCHARGE DATES; NEED ADDITIONAL LATER SPECS
"RTN","LREPI5",13,0)
 N J,PTFICD ; ICD array built by PTFICD^DGPTFUT
"RTN","LREPI5",14,0)
 S STDT=(LRRPS-.0001),ENDT=(LRRPE+.9999)
"RTN","LREPI5",15,0)
 F  S STDT=$O(^DGPT("ADS",STDT)) Q:+STDT'>0!(STDT>ENDT)  D
"RTN","LREPI5",16,0)
 .K LRICDX,LRCSYS S LRCSYS=$$ICDSYS^LREPICD(STDT,"D"),LRICDX=$S(LRCSYS="ICD":0,LRCSYS="10D":1,1:-1) Q:LRICDX=-1
"RTN","LREPI5",17,0)
 .S IFN=0 F  S IFN=$O(^DGPT("ADS",STDT,IFN)) Q:+IFN'>0  D
"RTN","LREPI5",18,0)
 ..Q:$P($G(^DGPT(IFN,0)),U,6)'=3
"RTN","LREPI5",19,0)
 ..I $P($G(^DGPT(IFN,300)),U,3)=1 D
"RTN","LREPI5",20,0)
 ...I 'LRICDX S LRICDIEN=+$$CODEN^ICDEX("482.84 ",80) D CHKICD
"RTN","LREPI5",21,0)
 ...I LRICDX F LRXCODE="A48.1","A48.2","A48.8" D
"RTN","LREPI5",22,0)
 ....S LRICDIEN=+$$CODEN^ICDEX(LRXCODE,80) D CHKICD
"RTN","LREPI5",23,0)
 ..; I $D(^DGPT(IFN,70)) F LRI=10,11,16:1:24 D
"RTN","LREPI5",24,0)
 ..; .S LRICDIEN=$P(^DGPT(IFN,70),U,LRI) D CHKICD
"RTN","LREPI5",25,0)
 ..D PTFICD^DGPTFUT(701,IFN,,.PTFICD)
"RTN","LREPI5",26,0)
 ..S J="" F  S J=$O(PTFICD(J)) Q:J=""  D
"RTN","LREPI5",27,0)
 ...S LRICDIEN=$P(PTFICD(J),"^",1) D CHKICD
"RTN","LREPI5",28,0)
 ...Q
"RTN","LREPI5",29,0)
 ..;SEARCH SUB FIELDS IN 501-MOVEMENTS
"RTN","LREPI5",30,0)
 ..; S LRMV=0 F  S LRMV=$O(^DGPT(IFN,"M",LRMV)) Q:+LRMV'>0  D
"RTN","LREPI5",31,0)
 ..D PTFIEN^DGPTFUT(501,IFN,.LRMV)
"RTN","LREPI5",32,0)
 ..S LRMV="" F  S LRMV=$O(LRMV(LRMV)) Q:LRMV=""  D
"RTN","LREPI5",33,0)
 ...I $P($G(^DGPT(IFN,"M",LRMV,300)),U,3)=1 D
"RTN","LREPI5",34,0)
 ....I 'LRICDX S LRICDIEN=+$$CODEN^ICDEX("482.84 ",80) D CHKICD
"RTN","LREPI5",35,0)
 ....I LRICDX F LRXCODE="A48.1","A48.2","A48.8" D
"RTN","LREPI5",36,0)
 .....S LRICDIEN=+$$CODEN^ICDEX(LRXCODE,80) D CHKICD
"RTN","LREPI5",37,0)
 ...; I $D(^DGPT(IFN,"M",LRMV,0)) F LRI=5:1:9,11:1:15 D
"RTN","LREPI5",38,0)
 ...; .S LRICDIEN=$P(^DGPT(IFN,"M",LRMV,0),U,LRI) D CHKICD
"RTN","LREPI5",39,0)
 ...D PTFICD^DGPTFUT(501,IFN,LRMV,.PTFICD)
"RTN","LREPI5",40,0)
 ...S J="" F  S J=$O(PTFICD(J)) Q:J=""  D
"RTN","LREPI5",41,0)
 ....S LRICDIEN=$P(PTFICD(J),"^",1) D CHKICD
"RTN","LREPI5",42,0)
 ....Q
"RTN","LREPI5",43,0)
 K IFN,LRMV,LRICDIEN,LRI,LRXCODE
"RTN","LREPI5",44,0)
 Q
"RTN","LREPI5",45,0)
CHKICD ;CHECK LRICDIEN CODE AND SAVE
"RTN","LREPI5",46,0)
 Q:+LRICDIEN'>0
"RTN","LREPI5",47,0)
 Q:'$D(^TMP($J,"ICD",+LRICDIEN))
"RTN","LREPI5",48,0)
 S LRPROT=$G(LRPROT,999999) S ^TMP($J,"ICDPROT",+LRICDIEN,LRPROT)=""
"RTN","LREPI5",49,0)
 S DFN=$P(^DGPT(IFN,0),U,1),ADMDT=$P(^DGPT(IFN,0),U,2)
"RTN","LREPI5",50,0)
 S LRPATH=0 F  S LRPATH=$O(^TMP($J,"ICD",+LRICDIEN,LRPATH)) Q:+LRPATH'>0  D SET
"RTN","LREPI5",51,0)
 Q
"RTN","LREPI5",52,0)
SET ;SET THE TMP GLOBAL
"RTN","LREPI5",53,0)
 S LRPROT=$P(^LAB(69.5,LRPATH,0),U,7)
"RTN","LREPI5",54,0)
 S LRCHK=0 D ADDCHK Q:LRCHK
"RTN","LREPI5",55,0)
 S:'$D(^TMP($J,LRPROT,DFN,ADMDT)) ^TMP($J,LRPROT,DFN,ADMDT)="I"_U_IFN
"RTN","LREPI5",56,0)
 S ^TMP($J,LRPROT,DFN,ADMDT,LRPATH,(9999999-ADMDT),"PTF")=IFN
"RTN","LREPI5",57,0)
 Q
"RTN","LREPI5",58,0)
ADDCHK ;DO ADDITIONAL CHECKS HERE FOR AGE AND SEX SCREENING.
"RTN","LREPI5",59,0)
 ;
"RTN","LREPI5",60,0)
 I '$G(DFN) S DFN=$G(LRPAT)
"RTN","LREPI5",61,0)
 K VADM
"RTN","LREPI5",62,0)
 I $G(DFN) D DEM^VADPT
"RTN","LREPI5",63,0)
 ;
"RTN","LREPI5",64,0)
 I $P(^LAB(69.5,LRPATH,0),U,10)'="" D
"RTN","LREPI5",65,0)
 .S LRSEX=$P(^LAB(69.5,LRPATH,0),U,10)
"RTN","LREPI5",66,0)
 .I LRSEX="O"&$P(VADM(5),U,1)="M" S LRCHK=1 Q
"RTN","LREPI5",67,0)
 .I LRSEX="O"&$P(VADM(5),U,1)="F" S LRCHK=1 Q
"RTN","LREPI5",68,0)
 .I LRSEX'=$P(VADM(5),U,1) S LRCHK=1
"RTN","LREPI5",69,0)
 I $P(^LAB(69.5,LRPATH,0),U,11)'=""!$P(^LAB(69.5,LRPATH,0),U,12)'="" D
"RTN","LREPI5",70,0)
 .S LRBEF=$P(^LAB(69.5,LRPATH,0),U,11),LRAFT=$P(^LAB(69.5,LRPATH,0),U,12)
"RTN","LREPI5",71,0)
 .I LRBEF'=""&($P(VADM(3),U,1)>LRBEF) S LRCHK=1
"RTN","LREPI5",72,0)
 .I LRAFT'=""&($P(VADM(3),U,1)<LRAFT) S LRCHK=1
"RTN","LREPI5",73,0)
 K LRBEF,LRSEX,LRAFT,VADM
"RTN","LREPI5",74,0)
 Q
"VER")
8.0^22.0
**INSTALL NAME**
ROR*1.5*25
"BLD",9611,0)
ROR*1.5*25^CLINICAL CASE REGISTRIES^0^3150820^y
"BLD",9611,1,0)
^^2^2^3141104^^
"BLD",9611,1,1,0)
Updates to support ICD-10 for PTF's increase in the number of ICD-10
"BLD",9611,1,2,0)
codes to 25.
"BLD",9611,4,0)
^9.64PA^^0
"BLD",9611,6)
3^
"BLD",9611,6.3)
19
"BLD",9611,"ABPKG")
n
"BLD",9611,"INIT")
POST^RORP025
"BLD",9611,"KRN",0)
^9.67PA^779.2^20
"BLD",9611,"KRN",.4,0)
.4
"BLD",9611,"KRN",.401,0)
.401
"BLD",9611,"KRN",.402,0)
.402
"BLD",9611,"KRN",.403,0)
.403
"BLD",9611,"KRN",.5,0)
.5
"BLD",9611,"KRN",.84,0)
.84
"BLD",9611,"KRN",3.6,0)
3.6
"BLD",9611,"KRN",3.8,0)
3.8
"BLD",9611,"KRN",9.2,0)
9.2
"BLD",9611,"KRN",9.8,0)
9.8
"BLD",9611,"KRN",9.8,"NM",0)
^9.68A^8^7
"BLD",9611,"KRN",9.8,"NM",1,0)
RORX013A^^0^B79404657
"BLD",9611,"KRN",9.8,"NM",2,0)
RORX015A^^0^B90387034
"BLD",9611,"KRN",9.8,"NM",4,0)
RORHL081^^0^B53447433
"BLD",9611,"KRN",9.8,"NM",5,0)
RORXU010^^0^B14122091
"BLD",9611,"KRN",9.8,"NM",6,0)
RORUTL11^^0^B4346474
"BLD",9611,"KRN",9.8,"NM",7,0)
RORP025^^0^B6132875
"BLD",9611,"KRN",9.8,"NM",8,0)
RORUPD09^^0^B11230376
"BLD",9611,"KRN",9.8,"NM","B","RORHL081",4)
 
"BLD",9611,"KRN",9.8,"NM","B","RORP025",7)
 
"BLD",9611,"KRN",9.8,"NM","B","RORUPD09",8)

"BLD",9611,"KRN",9.8,"NM","B","RORUTL11",6)
 
"BLD",9611,"KRN",9.8,"NM","B","RORX013A",1)
 
"BLD",9611,"KRN",9.8,"NM","B","RORX015A",2)
 
"BLD",9611,"KRN",9.8,"NM","B","RORXU010",5)
 
"BLD",9611,"KRN",19,0)
19
"BLD",9611,"KRN",19,"NM",0)
^9.68A^^
"BLD",9611,"KRN",19.1,0)
19.1
"BLD",9611,"KRN",101,0)
101
"BLD",9611,"KRN",409.61,0)
409.61
"BLD",9611,"KRN",771,0)
771
"BLD",9611,"KRN",779.2,0)
779.2
"BLD",9611,"KRN",870,0)
870
"BLD",9611,"KRN",8989.51,0)
8989.51
"BLD",9611,"KRN",8989.52,0)
8989.52
"BLD",9611,"KRN",8994,0)
8994
"BLD",9611,"KRN","B",.4,.4)
 
"BLD",9611,"KRN","B",.401,.401)
 
"BLD",9611,"KRN","B",.402,.402)
 
"BLD",9611,"KRN","B",.403,.403)
 
"BLD",9611,"KRN","B",.5,.5)
 
"BLD",9611,"KRN","B",.84,.84)
 
"BLD",9611,"KRN","B",3.6,3.6)
 
"BLD",9611,"KRN","B",3.8,3.8)
 
"BLD",9611,"KRN","B",9.2,9.2)
 
"BLD",9611,"KRN","B",9.8,9.8)
 
"BLD",9611,"KRN","B",19,19)
 
"BLD",9611,"KRN","B",19.1,19.1)
 
"BLD",9611,"KRN","B",101,101)
 
"BLD",9611,"KRN","B",409.61,409.61)
 
"BLD",9611,"KRN","B",771,771)
 
"BLD",9611,"KRN","B",779.2,779.2)
 
"BLD",9611,"KRN","B",870,870)
 
"BLD",9611,"KRN","B",8989.51,8989.51)
 
"BLD",9611,"KRN","B",8989.52,8989.52)
 
"BLD",9611,"KRN","B",8994,8994)
 
"BLD",9611,"QUES",0)
^9.62^^
"BLD",9611,"REQB",0)
^9.611^3^2
"BLD",9611,"REQB",2,0)
DG*5.3*884^2
"BLD",9611,"REQB",3,0)
ROR*1.5*27^2
"BLD",9611,"REQB","B","DG*5.3*884",2)

"BLD",9611,"REQB","B","ROR*1.5*27",3)

"INIT")
POST^RORP025
"MBREQ")
0
"PKG",618,-1)
1^1
"PKG",618,0)
CLINICAL CASE REGISTRIES^ROR^CLINICAL REGISTRIES
"PKG",618,20,0)
^9.402P^^
"PKG",618,22,0)
^9.49I^1^1
"PKG",618,22,1,0)
1.5^3060208^3060419^568
"PKG",618,22,1,"PAH",1,0)
25^3150820^520736459
"PKG",618,22,1,"PAH",1,1,0)
^^2^2^3150820
"PKG",618,22,1,"PAH",1,1,1,0)
Updates to support ICD-10 for PTF's increase in the number of ICD-10
"PKG",618,22,1,"PAH",1,1,2,0)
codes to 25.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","RORHL081")
0^4^B53447433
"RTN","RORHL081",1,0)
RORHL081 ;HOIFO/BH - HL7 INPATIENT DATA: OBX ;10/27/05 12:32pm
"RTN","RORHL081",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**19,25**;Feb 17, 2006;Build 19
"RTN","RORHL081",3,0)
 ;
"RTN","RORHL081",4,0)
 ; This routine uses the following IAs:
"RTN","RORHL081",5,0)
 ;
"RTN","RORHL081",6,0)
 ; #92           Read access to the PTF file (Controlled)
"RTN","RORHL081",7,0)
 ; #6130         PTFICD^DGPTFUT         
"RTN","RORHL081",8,0)
 ;
"RTN","RORHL081",9,0)
 ;******************************************************************************
"RTN","RORHL081",10,0)
 ;******************************************************************************
"RTN","RORHL081",11,0)
 ; --- ROUTINE MODIFICATION LOG ---
"RTN","RORHL081",12,0)
 ; 
"RTN","RORHL081",13,0)
 ;PKG/PATCH   DATE       DEVELOPER   MODIFICATION
"RTN","RORHL081",14,0)
 ;----------- ---------- ----------- ----------------------------------------
"RTN","RORHL081",15,0)
 ;ROR*1.5*19  MAY 2012   K GUPTA     Support for ICD-10 Coding System.
"RTN","RORHL081",16,0)
 ;ROR*1.5*25  OCT 2014   T KOPP      Support for expanded # of PTF diagnoses
"RTN","RORHL081",17,0)
 ;                                    and procedures for ICD-10
"RTN","RORHL081",18,0)
 ;
"RTN","RORHL081",19,0)
 ;******************************************************************************
"RTN","RORHL081",20,0)
 ;******************************************************************************
"RTN","RORHL081",21,0)
 Q
"RTN","RORHL081",22,0)
 ;
"RTN","RORHL081",23,0)
 ;***** BED SECTION (501 segment)
"RTN","RORHL081",24,0)
BEDSEC(RORIEN) ;
"RTN","RORHL081",25,0)
 N DATE,ERRCNT,FLD,IEN4502,IENS,NODE,OID,RORBS,RORBSED,RORBSSD,RORBUF,RORIBUF,RORCODE,RORMSG,TMP,RORICDSNAM,DIERR
"RTN","RORHL081",26,0)
 S ERRCNT=0
"RTN","RORHL081",27,0)
 S OID="INBED"_RORCS_"Bedsection Diagnosis"_RORCS_"VA080"
"RTN","RORHL081",28,0)
 S NODE=$$ROOT^DILFD(45.02,","_RORIEN_",",1)
"RTN","RORHL081",29,0)
 ;---
"RTN","RORHL081",30,0)
 S DATE=$$GET1^DIQ(45,RORIEN_",",2,"I",,"RORMSG")
"RTN","RORHL081",31,0)
 I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORHL081",32,0)
 . D DBS^RORERR("RORMSG",-99,,RORDFN,45,RORIEN_",")
"RTN","RORHL081",33,0)
 S (RORBSSD,RORBSED)=$$FM2HL^RORHL7(DATE)
"RTN","RORHL081",34,0)
 ;
"RTN","RORHL081",35,0)
 S DATE=""
"RTN","RORHL081",36,0)
 F  S DATE=$O(@NODE@("AM",DATE))  Q:DATE=""  D
"RTN","RORHL081",37,0)
 . S IEN4502=0
"RTN","RORHL081",38,0)
 . F  S IEN4502=$O(@NODE@("AM",DATE,IEN4502))  Q:IEN4502'>0  D
"RTN","RORHL081",39,0)
 . . S RORBSSD=RORBSED  K RORBUF
"RTN","RORHL081",40,0)
 . . S IENS=IEN4502_","_RORIEN_","
"RTN","RORHL081",41,0)
 . . ;--- Load the data
"RTN","RORHL081",42,0)
 . . D GETS^DIQ(45.02,IENS,"2;10","EI","RORBUF","RORMSG")
"RTN","RORHL081",43,0)
 . . I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORHL081",44,0)
 . . . D DBS^RORERR("RORMSG",-99,,RORDFN,45.02,IENS)
"RTN","RORHL081",45,0)
 . . ;--- Name of the bed section
"RTN","RORHL081",46,0)
 . . S RORBS=$$ESCAPE^RORHL7($G(RORBUF(45.02,IENS,2,"E")))
"RTN","RORHL081",47,0)
 . . ;--- End date
"RTN","RORHL081",48,0)
 . . S RORBSED=$$FM2HL^RORHL7($G(RORBUF(45.02,IENS,10,"I")))
"RTN","RORHL081",49,0)
 . . ;--- ICD codes
"RTN","RORHL081",50,0)
 . . S (RORCODE,RORICDSNAM)=""
"RTN","RORHL081",51,0)
 . . D GETICD(501,RORIEN,IEN4502,"",.RORCODE,.RORICDSNAM)
"RTN","RORHL081",52,0)
 . . ;--- Store the segment (if there is at least one ICD code)
"RTN","RORHL081",53,0)
 . . D:RORCODE'="" SETOBX(OID,RORICDSNAM_":"_RORCODE,RORBS,RORBSED,RORBSSD)
"RTN","RORHL081",54,0)
 ;
"RTN","RORHL081",55,0)
 Q ERRCNT
"RTN","RORHL081",56,0)
 ;
"RTN","RORHL081",57,0)
 ;***** DISCHARGE DIAGNOSIS CODES (701 segment)
"RTN","RORHL081",58,0)
DDIAG(RORIEN) ;
"RTN","RORHL081",59,0)
 N ERRCNT,FLD,IFL,OID,RORIBUF,RORDDIAG,TMP,RORICDSNAM
"RTN","RORHL081",60,0)
 S ERRCNT=0,OID="INDIS"_RORCS_"Discharge Diagnosis"_RORCS_"VA080"
"RTN","RORHL081",61,0)
 ;--- ICD codes
"RTN","RORHL081",62,0)
 S (RORDDIAG,RORICDSNAM)=""
"RTN","RORHL081",63,0)
 D GETICD(701,RORIEN,"",0,.RORDDIAG,.RORICDSNAM)
"RTN","RORHL081",64,0)
 ;--- Store the segment (if there is at least one ICD code)
"RTN","RORHL081",65,0)
 D:RORDDIAG'="" SETOBX(OID,RORICDSNAM_":"_RORDDIAG)
"RTN","RORHL081",66,0)
 Q ERRCNT
"RTN","RORHL081",67,0)
 ;
"RTN","RORHL081",68,0)
 ;***** OBX SEGMENT(S) BUILDER (INPATIENT)
"RTN","RORHL081",69,0)
 ;
"RTN","RORHL081",70,0)
 ; RORIEN        IEN of file #45
"RTN","RORHL081",71,0)
 ; RORDFN        DFN of Patient Record in File #2
"RTN","RORHL081",72,0)
 ;
"RTN","RORHL081",73,0)
 ; Return Values:
"RTN","RORHL081",74,0)
 ;       <0  Error Code
"RTN","RORHL081",75,0)
 ;        0  Ok
"RTN","RORHL081",76,0)
 ;       >0  Non-fatal error(s)
"RTN","RORHL081",77,0)
 ;
"RTN","RORHL081",78,0)
OBX(RORIEN,RORDFN) ;
"RTN","RORHL081",79,0)
 N ERRCNT,RC,RORCS,RORLST,RORMSG,RORRS,TMP
"RTN","RORHL081",80,0)
 S (ERRCNT,RC)=0
"RTN","RORHL081",81,0)
 D ECH^RORHL7(.RORCS,,.RORRS)
"RTN","RORHL081",82,0)
 ;
"RTN","RORHL081",83,0)
 ;--- Principal diagnosis
"RTN","RORHL081",84,0)
 S RC=$$PRIN(RORIEN)
"RTN","RORHL081",85,0)
 I RC  S ERRCNT=ERRCNT+1  Q:RC<0 RC
"RTN","RORHL081",86,0)
 ;--- Primary discharge diagnosis
"RTN","RORHL081",87,0)
 S RC=$$PDISCH(RORIEN)
"RTN","RORHL081",88,0)
 I RC  S ERRCNT=ERRCNT+1  Q:RC<0 RC
"RTN","RORHL081",89,0)
 ;--- Discharge diagnosis codes
"RTN","RORHL081",90,0)
 S RC=$$DDIAG(RORIEN)
"RTN","RORHL081",91,0)
 I RC  S ERRCNT=ERRCNT+1  Q:RC<0 RC
"RTN","RORHL081",92,0)
 ;--- Bed section
"RTN","RORHL081",93,0)
 S RC=$$BEDSEC(RORIEN)
"RTN","RORHL081",94,0)
 I RC  S ERRCNT=ERRCNT+1  Q:RC<0 RC
"RTN","RORHL081",95,0)
 ;--- Surgical procedures
"RTN","RORHL081",96,0)
 S RC=$$SURGPRO(RORIEN)
"RTN","RORHL081",97,0)
 I RC  S ERRCNT=ERRCNT+1  Q:RC<0 RC
"RTN","RORHL081",98,0)
 ;--- Other diagnoses
"RTN","RORHL081",99,0)
 S RC=$$OTRPROC(RORIEN)
"RTN","RORHL081",100,0)
 I RC  S ERRCNT=ERRCNT+1  Q:RC<0 RC
"RTN","RORHL081",101,0)
 ;
"RTN","RORHL081",102,0)
 Q ERRCNT
"RTN","RORHL081",103,0)
 ;
"RTN","RORHL081",104,0)
 ;***** OTHER DIAGNOSES
"RTN","RORHL081",105,0)
OTRPROC(RORIEN) ;
"RTN","RORHL081",106,0)
 N ERRCNT,FLD,IEN4505,IENS,IFL,NODE,OID,RORBUF,RORMSG,ROROPBS,ROROPCD,ROROPDTE,TMP,RORICDSNAM
"RTN","RORHL081",107,0)
 S ERRCNT=0
"RTN","RORHL081",108,0)
 S OID="INOTR"_RORCS_"Other Diagnosis"_RORCS_"VA080"
"RTN","RORHL081",109,0)
 S NODE=$$ROOT^DILFD(45.05,","_RORIEN_",",1)
"RTN","RORHL081",110,0)
 ;
"RTN","RORHL081",111,0)
 S IEN4505=0
"RTN","RORHL081",112,0)
 F  S IEN4505=$O(@NODE@(IEN4505))  Q:IEN4505'>0  D
"RTN","RORHL081",113,0)
 . S IENS=IEN4505_","_RORIEN_","  K RORBUF
"RTN","RORHL081",114,0)
 . ;--- Load the data
"RTN","RORHL081",115,0)
 . D GETS^DIQ(45.05,IENS,".01;1;","EI","RORBUF","RORMSG")
"RTN","RORHL081",116,0)
 . I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORHL081",117,0)
 . . D DBS^RORERR("RORMSG",-99,,RORDFN,45.05,IENS)
"RTN","RORHL081",118,0)
 . ;--- Name of the facility
"RTN","RORHL081",119,0)
 . S ROROPBS=$$ESCAPE^RORHL7($G(RORBUF(45.05,IENS,1,"E")))
"RTN","RORHL081",120,0)
 . ;--- Date of the procedure
"RTN","RORHL081",121,0)
 . S ROROPDTE=$$FM2HL^RORHL7($G(RORBUF(45.05,IENS,.01,"I")))
"RTN","RORHL081",122,0)
 . ;--- ICD codes
"RTN","RORHL081",123,0)
 . S (ROROPCD,RORICDSNAM)=""
"RTN","RORHL081",124,0)
 . D GETICD(601,RORIEN,IEN4505,"",.ROROPCD,.RORICDSNAM)
"RTN","RORHL081",125,0)
 . ;--- Store the segment (if there is at least one ICD code)
"RTN","RORHL081",126,0)
 . D:ROROPCD'="" SETOBX(OID,RORICDSNAM_":"_ROROPCD,ROROPBS,,ROROPDTE)
"RTN","RORHL081",127,0)
 ;
"RTN","RORHL081",128,0)
 Q ERRCNT
"RTN","RORHL081",129,0)
 ;
"RTN","RORHL081",130,0)
 ;***** PRIMARY DISCHARGE DIAGNOSIS
"RTN","RORHL081",131,0)
PDISCH(IEN) ;
"RTN","RORHL081",132,0)
 N ERRCNT,OID,RORDD,RORMSG,TMP,RORICDSNAM,RORBUF
"RTN","RORHL081",133,0)
 S ERRCNT=0,OID="INPRI"_RORCS_"Primary Dis. Diagnosis"_RORCS_"VA080"
"RTN","RORHL081",134,0)
 ;--- Load the data
"RTN","RORHL081",135,0)
 S IEN=IEN_","
"RTN","RORHL081",136,0)
 D GETS^DIQ(45,IEN,79,"EI","RORBUF","RORMSG")
"RTN","RORHL081",137,0)
 I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORHL081",138,0)
 . D DBS^RORERR("RORMSG",-99,,RORDFN,45,IEN)
"RTN","RORHL081",139,0)
 S RORDD=$G(RORBUF(45,IEN,79,"E"))
"RTN","RORHL081",140,0)
 ;--- Store the segment
"RTN","RORHL081",141,0)
 I RORDD'="" D
"RTN","RORHL081",142,0)
 . S RORICDSNAM=$$CSNAME^RORHLUT1(80,$G(RORBUF(45,IEN,79,"I")))
"RTN","RORHL081",143,0)
 . D SETOBX(OID,RORICDSNAM_":"_RORDD)
"RTN","RORHL081",144,0)
 Q ERRCNT
"RTN","RORHL081",145,0)
 ;
"RTN","RORHL081",146,0)
 ;***** PRINCIPAL DIAGNOSIS
"RTN","RORHL081",147,0)
PRIN(IEN) ;
"RTN","RORHL081",148,0)
 N ERRCNT,OID,RORMSG,RORPDIAG,TMP,RORICDSNAM,RORBUF,RORFLD
"RTN","RORHL081",149,0)
 S ERRCNT=0,OID="INAD"_RORCS_"Admitting Diagnosis"_RORCS_"VA080"
"RTN","RORHL081",150,0)
 ;--- Load the data
"RTN","RORHL081",151,0)
 S IEN=IEN_","
"RTN","RORHL081",152,0)
 D GETS^DIQ(45,IEN,79,"EI","RORBUF","RORMSG")
"RTN","RORHL081",153,0)
 I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORHL081",154,0)
 . D DBS^RORERR("RORMSG",-99,,RORDFN,45,IEN)
"RTN","RORHL081",155,0)
 S RORPDIAG=$G(RORBUF(45,IEN,79,"E")),RORFLD=79
"RTN","RORHL081",156,0)
 ; Look at pre-1986 Dx only if PRIMARY DIAGNOSIS is missing
"RTN","RORHL081",157,0)
 I RORPDIAG="" D
"RTN","RORHL081",158,0)
 . K RORBUF,RORMSG
"RTN","RORHL081",159,0)
 . D GETS^DIQ(45,IEN,80,"EI","RORBUF","RORMSG")
"RTN","RORHL081",160,0)
 . I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORHL081",161,0)
 .. D DBS^RORERR("RORMSG",-99,,RORDFN,45,IEN)
"RTN","RORHL081",162,0)
 . S RORPDIAG=$G(RORBUF(45,IEN,80,"E")),RORFLD=80
"RTN","RORHL081",163,0)
 ;--- Store the segment
"RTN","RORHL081",164,0)
 I RORPDIAG'="" D
"RTN","RORHL081",165,0)
 . S RORICDSNAM=$$CSNAME^RORHLUT1(80,$G(RORBUF(45,IEN,RORFLD,"I")))
"RTN","RORHL081",166,0)
 . D SETOBX(OID,RORICDSNAM_":"_RORPDIAG)
"RTN","RORHL081",167,0)
 Q ERRCNT
"RTN","RORHL081",168,0)
 ;
"RTN","RORHL081",169,0)
 ;***** LOW-LEVEL SEGMENT BUILDER
"RTN","RORHL081",170,0)
 ;
"RTN","RORHL081",171,0)
 ; OBX3          Observation Identifier
"RTN","RORHL081",172,0)
 ;
"RTN","RORHL081",173,0)
 ; OBX5          Observation Value
"RTN","RORHL081",174,0)
 ;
"RTN","RORHL081",175,0)
 ; [OBX6]        Bed Section
"RTN","RORHL081",176,0)
 ;
"RTN","RORHL081",177,0)
 ; [OBX12]       Bed Section End Date/Time
"RTN","RORHL081",178,0)
 ;
"RTN","RORHL081",179,0)
 ; [OBX14]       Bed Section Start Date, if OBX3 contains
"RTN","RORHL081",180,0)
 ;               "INBED^Bedsection Diagnosis";
"RTN","RORHL081",181,0)
 ;               Surgical Procedure Date, if OBX3 contains
"RTN","RORHL081",182,0)
 ;               "INSURG^Surgical Procedures";
"RTN","RORHL081",183,0)
 ;               Other Procedure Date, if OBX3 contains
"RTN","RORHL081",184,0)
 ;               "INOTR^Other Diagnosis".
"RTN","RORHL081",185,0)
 ;
"RTN","RORHL081",186,0)
SETOBX(OBX3,OBX5,OBX6,OBX12,OBX14) ;
"RTN","RORHL081",187,0)
 N RORSEG
"RTN","RORHL081",188,0)
 S RORSEG(0)="OBX"
"RTN","RORHL081",189,0)
 ;--- OBX-2 Value Type
"RTN","RORHL081",190,0)
 S RORSEG(2)="FT"
"RTN","RORHL081",191,0)
 ;--- OBX-3 Observation Identifier
"RTN","RORHL081",192,0)
 S RORSEG(3)=OBX3
"RTN","RORHL081",193,0)
 ;--- OBX-5 Observation Value
"RTN","RORHL081",194,0)
 S RORSEG(5)=OBX5
"RTN","RORHL081",195,0)
 ;--- OBX-6 Bed Section
"RTN","RORHL081",196,0)
 S:$G(OBX6)'="" RORSEG(6)=OBX6
"RTN","RORHL081",197,0)
 ;--- OBX-11 Observation Result Status
"RTN","RORHL081",198,0)
 S RORSEG(11)="F"
"RTN","RORHL081",199,0)
 ;--- OBX-12 Bed Section End Date/Time
"RTN","RORHL081",200,0)
 S:$G(OBX12)'="" RORSEG(12)=OBX12
"RTN","RORHL081",201,0)
 ;--- OBX-14 Bed Section Start Date/Time or Procedure Date
"RTN","RORHL081",202,0)
 S:$G(OBX14)'="" RORSEG(14)=OBX14
"RTN","RORHL081",203,0)
 ;--- Store the segment
"RTN","RORHL081",204,0)
 D ADDSEG^RORHL7(.RORSEG)
"RTN","RORHL081",205,0)
 Q
"RTN","RORHL081",206,0)
 ;
"RTN","RORHL081",207,0)
 ;***** SURGICAL PROCEDURES  (401 segment)
"RTN","RORHL081",208,0)
SURGPRO(RORIEN) ;
"RTN","RORHL081",209,0)
 N ERRCNT,FLD,IEN4501,IENS,IFL,NODE,OID,RORBUF,RORIBUF,RORMSG,SDTE,SPCD,TMP,RORICDSNAM
"RTN","RORHL081",210,0)
 S ERRCNT=0
"RTN","RORHL081",211,0)
 ;S SPFLST="8;9;10;11;12"
"RTN","RORHL081",212,0)
 S OID="INSURG"_RORCS_"Surgical Procedures"_RORCS_"VA080"
"RTN","RORHL081",213,0)
 S NODE=$$ROOT^DILFD(45.01,","_RORIEN_",",1)
"RTN","RORHL081",214,0)
 ;
"RTN","RORHL081",215,0)
 S IEN4501=0
"RTN","RORHL081",216,0)
 F  S IEN4501=$O(@NODE@(IEN4501))  Q:IEN4501'>0  D
"RTN","RORHL081",217,0)
 . S IENS=IEN4501_","_RORIEN_","  K RORBUF
"RTN","RORHL081",218,0)
 . ;--- Load the data
"RTN","RORHL081",219,0)
 . D GETS^DIQ(45.01,IENS,".01;","EI","RORBUF","RORMSG")
"RTN","RORHL081",220,0)
 . I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORHL081",221,0)
 . . D DBS^RORERR("RORMSG",-99,,RORDFN,45.01,IENS)
"RTN","RORHL081",222,0)
 . ;--- Date of the procedure
"RTN","RORHL081",223,0)
 . S SDTE=$$FM2HL^RORHL7($G(RORBUF(45.01,IENS,.01,"I")))
"RTN","RORHL081",224,0)
 . ;--- Procedure codes
"RTN","RORHL081",225,0)
 . S (SPCD,RORICDSNAM)="",IFL=0
"RTN","RORHL081",226,0)
 . D GETICD(401,RORIEN,IEN4501,"",.SPCD,.RORICDSNAM)
"RTN","RORHL081",227,0)
 . ;--- Store the segment (if there is at least one code)
"RTN","RORHL081",228,0)
 . D:SPCD'="" SETOBX(OID,RORICDSNAM_":"_SPCD,,,SDTE)
"RTN","RORHL081",229,0)
 ;
"RTN","RORHL081",230,0)
 Q ERRCNT
"RTN","RORHL081",231,0)
 ;
"RTN","RORHL081",232,0)
GETICD(RORSEG,RORIEN,RORIEN1,RORSTART,RORCODE,RORICDSNAM) ;  Extract Dx or proc
"RTN","RORHL081",233,0)
 N RORIBUF,IFL,FLD,TMP
"RTN","RORHL081",234,0)
 ;--- Get ICD codes
"RTN","RORHL081",235,0)
 D PTFICD^DGPTFUT(RORSEG,RORIEN,RORIEN1,.RORIBUF)
"RTN","RORHL081",236,0)
 S (RORCODE,RORICDSNAM)="",IFL=0
"RTN","RORHL081",237,0)
 S FLD=$G(RORSTART) F  S FLD=$O(RORIBUF(FLD)) Q:FLD=""  I $G(RORIBUF(FLD))'="" D
"RTN","RORHL081",238,0)
 . S TMP=$P(RORIBUF(FLD),U,3) Q:TMP=""
"RTN","RORHL081",239,0)
 . S IFL=IFL+1,$P(RORCODE,RORRS,IFL)=TMP
"RTN","RORHL081",240,0)
 . S:RORICDSNAM="" RORICDSNAM=$$CSNAME^RORHLUT1(80,$P(RORIBUF(FLD),U))
"RTN","RORHL081",241,0)
 Q
"RTN","RORHL081",242,0)
 ;
"RTN","RORP025")
0^7^B6132875
"RTN","RORP025",1,0)
RORP025 ;ALB/TK - POST INSTALL PATCH 25 ;10/22/2014
"RTN","RORP025",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**25**;;Build 19
"RTN","RORP025",3,0)
 ; This routine uses the following IAs:
"RTN","RORP025",4,0)
 ;
"RTN","RORP025",5,0)
 ; #10141   XPDUTL (supported)
"RTN","RORP025",6,0)
 ; #2053    UPDATE^DIE (supported)
"RTN","RORP025",7,0)
 ; #2054    CLEAN^DILF (supported)
"RTN","RORP025",8,0)
 ;*****************************************************************************
"RTN","RORP025",9,0)
 ;Update to ROR METADATA
"RTN","RORP025",10,0)
 ;*****************************************************************************
"RTN","RORP025",11,0)
POST ; Post install for patch ROR*1.5*25
"RTN","RORP025",12,0)
 N DA,RORFDA,RORDATA,RORERR,RORIENS,RORPARM,RORMSG,I,I1
"RTN","RORP025",13,0)
 S RORPARM("DEVELOPER")=1
"RTN","RORP025",14,0)
 D BMES^XPDUTL("POST INSTALL START")
"RTN","RORP025",15,0)
 F I=1:1 S RORDATA=$P($T(META45+I),";;",2) Q:RORDATA=""  D
"RTN","RORP025",16,0)
 . S RORIENS="?+"_(I+1)_",45,"
"RTN","RORP025",17,0)
 . S RORFDA(799.22,RORIENS,.01)=$P(RORDATA,U)
"RTN","RORP025",18,0)
 . S RORFDA(799.22,RORIENS,.02)=$P(RORDATA,U,2)
"RTN","RORP025",19,0)
 . S RORFDA(799.22,RORIENS,2)=$P(RORDATA,U,3)
"RTN","RORP025",20,0)
 . S RORFDA(799.22,RORIENS,4)=$P(RORDATA,U,4)
"RTN","RORP025",21,0)
 . S RORFDA(799.22,RORIENS,1)=$P(RORDATA,U,5)
"RTN","RORP025",22,0)
 . S RORFDA(799.22,RORIENS,6)=$P(RORDATA,U,6)
"RTN","RORP025",23,0)
 D UPDATE^DIE(,"RORFDA","","RORMSG")
"RTN","RORP025",24,0)
 I $G(RORMSG) D  Q
"RTN","RORP025",25,0)
 . D BMES^XPDUTL("Update to ROR METADATA <<FAILED>>")
"RTN","RORP025",26,0)
 . S I="RORMSG",I1=0 F  S I=$Q(@I) Q:I'["RORMSG"  S I1=I1+1,RORERR(I1)=@I
"RTN","RORP025",27,0)
 . D MES^XPDUTL(.RORERR)
"RTN","RORP025",28,0)
 E  D
"RTN","RORP025",29,0)
 . D BMES^XPDUTL("Update to ROR METADATA <SUCCESSFUL>")
"RTN","RORP025",30,0)
 D CLEAN^DILF
"RTN","RORP025",31,0)
 D BMES^XPDUTL("POST INSTALL COMPLETE")
"RTN","RORP025",32,0)
 Q
"RTN","RORP025",33,0)
 ;
"RTN","RORP025",34,0)
 ;******************************************************************************
"RTN","RORP025",35,0)
 ; Data to be added to ROR METADATA file (#799.2)
"RTN","RORP025",36,0)
 ; DATA NAME^CODE^REQUIRED^VALUE TYPE^LOADER API^FIELD NUMBER
"RTN","RORP025",37,0)
 ;******************************************************************************
"RTN","RORP025",38,0)
META45 ;
"RTN","RORP025",39,0)
 ;;SECONDARY DIAGNOSIS 10^133^1^Internal^1^79.241
"RTN","RORP025",40,0)
 ;;SECONDARY DIAGNOSIS 11^134^1^Internal^1^79.242
"RTN","RORP025",41,0)
 ;;SECONDARY DIAGNOSIS 12^135^1^Internal^1^79.243
"RTN","RORP025",42,0)
 ;;SECONDARY DIAGNOSIS 13^136^1^Internal^1^79.244
"RTN","RORP025",43,0)
 ;;SECONDARY DIAGNOSIS 14^137^1^Internal^1^79.245
"RTN","RORP025",44,0)
 ;;SECONDARY DIAGNOSIS 15^138^1^Internal^1^79.246
"RTN","RORP025",45,0)
 ;;SECONDARY DIAGNOSIS 16^139^1^Internal^1^79.247
"RTN","RORP025",46,0)
 ;;SECONDARY DIAGNOSIS 17^140^1^Internal^1^79.248
"RTN","RORP025",47,0)
 ;;SECONDARY DIAGNOSIS 18^141^1^Internal^1^79.249
"RTN","RORP025",48,0)
 ;;SECONDARY DIAGNOSIS 19^142^1^Internal^1^79.2491
"RTN","RORP025",49,0)
 ;;SECONDARY DIAGNOSIS 20^143^1^Internal^1^79.24911
"RTN","RORP025",50,0)
 ;;SECONDARY DIAGNOSIS 21^144^1^Internal^1^79.24912
"RTN","RORP025",51,0)
 ;;SECONDARY DIAGNOSIS 22^145^1^Internal^1^79.24913
"RTN","RORP025",52,0)
 ;;SECONDARY DIAGNOSIS 23^146^1^Internal^1^79.24914
"RTN","RORP025",53,0)
 ;;SECONDARY DIAGNOSIS 24^147^1^Internal^1^79.24915
"RTN","RORP025",54,0)
 ;
"RTN","RORUPD09")
0^8^B11230376
"RTN","RORUPD09",1,0)
RORUPD09 ;HCIOFO/SG - PROCESSING OF THE 'PTF' FILE  ;8/3/05 9:50am
"RTN","RORUPD09",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**18,25**;Feb 17, 2006;Build 19
"RTN","RORUPD09",3,0)
 ;
"RTN","RORUPD09",4,0)
 ;*****************************************************************************
"RTN","RORUPD09",5,0)
 ;*****************************************************************************
"RTN","RORUPD09",6,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORUPD09",7,0)
 ;        
"RTN","RORUPD09",8,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORUPD09",9,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORUPD09",10,0)
 ;ROR*1.5*18   APR 2012    C RAY        Modified PTF RULE to use B xref #798.5
"RTN","RORUPD09",11,0)
 ;ROR*1.5*25   FEB 2015    T KOPP       Modified PTF rule to add new Diagnosis
"RTN","RORUPD09",12,0)
 ;                                      fields for ICD-10 PTF expansion.
"RTN","RORUPD09",13,0)
 ;                                      
"RTN","RORUPD09",14,0)
 ;*****************************************************************************
"RTN","RORUPD09",15,0)
 ;*****************************************************************************
"RTN","RORUPD09",16,0)
 ; This routine uses the following IAs:
"RTN","RORUPD09",17,0)
 ;
"RTN","RORUPD09",18,0)
 ; #3157         RPC^DGPTFAPI
"RTN","RORUPD09",19,0)
 ; #3545         Access to the "AAD" cross-reference and the field 80
"RTN","RORUPD09",20,0)
 ; #10103        $$FMADD^XLFDT (supported)
"RTN","RORUPD09",21,0)
 ; #2171         $$IEN^XUAF4 (supported)
"RTN","RORUPD09",22,0)
 ;
"RTN","RORUPD09",23,0)
 ;
"RTN","RORUPD09",24,0)
 Q
"RTN","RORUPD09",25,0)
 ;
"RTN","RORUPD09",26,0)
 ;***** LOADS DATA ELEMENT VALUES
"RTN","RORUPD09",27,0)
 ;
"RTN","RORUPD09",28,0)
 ; IENS          IENS of the current record
"RTN","RORUPD09",29,0)
 ;
"RTN","RORUPD09",30,0)
 ; Return values:
"RTN","RORUPD09",31,0)
 ;       <0  Error code
"RTN","RORUPD09",32,0)
 ;        0  Ok
"RTN","RORUPD09",33,0)
 ;
"RTN","RORUPD09",34,0)
LOAD(IENS) ;
"RTN","RORUPD09",35,0)
 N RC  S RC=0
"RTN","RORUPD09",36,0)
 ;--- API #1
"RTN","RORUPD09",37,0)
 I $D(RORUPD("SR",RORFILE,"F",1))  D  Q:RC<0 RC
"RTN","RORUPD09",38,0)
 . S RC=$$LOADFLDS^RORUPDUT(RORFILE,IENS)
"RTN","RORUPD09",39,0)
 ;--- API #2
"RTN","RORUPD09",40,0)
 I $D(RORUPD("SR",RORFILE,"F",2))  D  Q:RC<0 RC
"RTN","RORUPD09",41,0)
 . N API,DE,IN,IP,RORBUF,VT
"RTN","RORUPD09",42,0)
 . D RPC^DGPTFAPI(.RORBUF,+IENS)
"RTN","RORUPD09",43,0)
 . I $G(RORBUF(0))<0  S API="RPC^DGPTFAPI"  D  Q
"RTN","RORUPD09",44,0)
 . . S RC=$$ERROR^RORERR(-57,,,,RORBUF(0),API)
"RTN","RORUPD09",45,0)
 . ;---
"RTN","RORUPD09",46,0)
 . S DE=""
"RTN","RORUPD09",47,0)
 . F  S DE=$O(RORUPD("SR",RORFILE,"F",2,DE))  Q:DE=""  D
"RTN","RORUPD09",48,0)
 . . S VT=""
"RTN","RORUPD09",49,0)
 . . F  S VT=$O(RORUPD("SR",RORFILE,"F",2,DE,VT))  Q:VT=""  D
"RTN","RORUPD09",50,0)
 . . . S IP=+$P(RORUPD("SR",RORFILE,"F",2,DE,VT),U,1)  Q:IP'>0
"RTN","RORUPD09",51,0)
 . . . S IN=+$P(RORUPD("SR",RORFILE,"F",2,DE,VT),U,2)
"RTN","RORUPD09",52,0)
 . . . S RORVALS("DV",RORFILE,DE,VT)=$P($G(RORBUF(IN)),U,IP)
"RTN","RORUPD09",53,0)
 Q 0
"RTN","RORUPD09",54,0)
 ;
"RTN","RORUPD09",55,0)
 ;***** PROCESSING OF THE 'PTF' FILE
"RTN","RORUPD09",56,0)
 ;
"RTN","RORUPD09",57,0)
 ; UPDSTART      Date of the earliest update
"RTN","RORUPD09",58,0)
 ; PATIEN        Patient IEN
"RTN","RORUPD09",59,0)
 ;
"RTN","RORUPD09",60,0)
 ; Return values:
"RTN","RORUPD09",61,0)
 ;       <0  Error code
"RTN","RORUPD09",62,0)
 ;        0  Continue processing of the current patient
"RTN","RORUPD09",63,0)
 ;        1  Stop processing
"RTN","RORUPD09",64,0)
 ;
"RTN","RORUPD09",65,0)
PTF(UPDSTART,PATIEN) ;
"RTN","RORUPD09",66,0)
 N RORFILE       ; File number
"RTN","RORUPD09",67,0)
 ;
"RTN","RORUPD09",68,0)
 N ADMDT,ADMIENS,EDT,IEN,LOCATION,NODE,RC,TMP
"RTN","RORUPD09",69,0)
 S RORFILE=45,EDT=RORUPD("DSEND")
"RTN","RORUPD09",70,0)
 ;--- Check the event references if the events are enabled
"RTN","RORUPD09",71,0)
 I $G(RORUPD("FLAGS"))["E"  D  Q:RC'>0 RC
"RTN","RORUPD09",72,0)
 . S RC=$$GET^RORUPP02(PATIEN,3,.UPDSTART,.EDT)
"RTN","RORUPD09",73,0)
 . S:RC>1 UPDSTART=UPDSTART\1,EDT=$$FMADD^XLFDT(EDT\1,1)
"RTN","RORUPD09",74,0)
 ;--- Subtract 1 second from the start date to include
"RTN","RORUPD09",75,0)
 ;    it into the interval
"RTN","RORUPD09",76,0)
 S ADMDT=$$FMADD^XLFDT(UPDSTART,,,,-1)
"RTN","RORUPD09",77,0)
 ;
"RTN","RORUPD09",78,0)
 ;--- Browse through the admissions
"RTN","RORUPD09",79,0)
 S NODE=RORUPD("ROOT",RORFILE),NODE=$NA(@NODE@("AAD",PATIEN))
"RTN","RORUPD09",80,0)
 S RC=0
"RTN","RORUPD09",81,0)
 F  S ADMDT=$O(@NODE@(ADMDT))  Q:(ADMDT="")!(ADMDT'<EDT)  D  Q:RC
"RTN","RORUPD09",82,0)
 . S IEN=""
"RTN","RORUPD09",83,0)
 . F  S IEN=$O(@NODE@(ADMDT,IEN))  Q:IEN=""  D  Q:RC
"RTN","RORUPD09",84,0)
 . . S ADMIENS=IEN_","
"RTN","RORUPD09",85,0)
 . . ;--- Load necessary data elements
"RTN","RORUPD09",86,0)
 . . I $D(RORUPD("SR",RORFILE,"F"))>1  D  I TMP<0 D INCEC^RORUPDUT() Q
"RTN","RORUPD09",87,0)
 . . . S TMP=$$LOAD(ADMIENS)
"RTN","RORUPD09",88,0)
 . . . S TMP=$$GETDE^RORUPDUT(45,131)_$$GETDE^RORUPDUT(45,132)
"RTN","RORUPD09",89,0)
 . . . S LOCATION=$S(TMP'="":$$IEN^XUAF4(TMP),1:"")
"RTN","RORUPD09",90,0)
 . . ;--- Apply "before" rules
"RTN","RORUPD09",91,0)
 . . S RC=$$APLRULES^RORUPDUT(RORFILE,ADMIENS,"B",ADMDT,$G(LOCATION))
"RTN","RORUPD09",92,0)
 . . I RC  D INCEC^RORUPDUT(.RC)  Q
"RTN","RORUPD09",93,0)
 . . ;--- Apply "after" rules
"RTN","RORUPD09",94,0)
 . . S RC=$$APLRULES^RORUPDUT(RORFILE,ADMIENS,"A",ADMDT,$G(LOCATION))
"RTN","RORUPD09",95,0)
 . . I RC  D INCEC^RORUPDUT(.RC)  Q
"RTN","RORUPD09",96,0)
 ;
"RTN","RORUPD09",97,0)
 D CLRDES^RORUPDUT(RORFILE)
"RTN","RORUPD09",98,0)
 Q RC
"RTN","RORUPD09",99,0)
 ;
"RTN","RORUPD09",100,0)
 ;***** IMPLEMENTATION OF THE 'PTF' RULE
"RTN","RORUPD09",101,0)
PTFRULE(ICD) ;
"RTN","RORUPD09",102,0)
 N DATELMT,RC
"RTN","RORUPD09",103,0)
 S RC=0
"RTN","RORUPD09",104,0)
 F DATELMT=111,101:1:110,131:1:147  D  Q:RC
"RTN","RORUPD09",105,0)
 . S RC=+$D(^ROR(798.5,REGIEN,1,"B",+$G(RORVALS("DV",45,DATELMT,"I"))))
"RTN","RORUPD09",106,0)
 Q RC
"RTN","RORUTL11")
0^6^B4346474
"RTN","RORUTL11",1,0)
RORUTL11 ;HCIOFO/SG - ACCESS AND SECURITY UTILITIES ;15 Aug 2013  11:31 AM
"RTN","RORUTL11",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**13,14,15,17,18,20,19,21,22,24,27,25**;Feb 17, 2006;Build 19
"RTN","RORUTL11",3,0)
 ;
"RTN","RORUTL11",4,0)
 ;******************************************************************************
"RTN","RORUTL11",5,0)
 ;******************************************************************************
"RTN","RORUTL11",6,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORUTL11",7,0)
 ;        
"RTN","RORUTL11",8,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORUTL11",9,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORUTL11",10,0)
 ;ROR*1.5*13   DEC  2010   A SAUNDERS   Added tag VERSRV to return an associated
"RTN","RORUTL11",11,0)
 ;                                      version to the GUI during RPC call ROR
"RTN","RORUTL11",12,0)
 ;                                      GET M VERSION
"RTN","RORUTL11",13,0)
 ;ROR*1.5*14   APR  2011   A SAUNDERS   Updated version in tag VERSRV
"RTN","RORUTL11",14,0)
 ;
"RTN","RORUTL11",15,0)
 ;ROR*1.5*15   JUN 2011    C RAY        Updated version
"RTN","RORUTL11",16,0)
 ;
"RTN","RORUTL11",17,0)
 ;ROR*1.5*17   DEC 2011    C RAY        Updated version 
"RTN","RORUTL11",18,0)
 ;
"RTN","RORUTL11",19,0)
 ;ROR*1.5*18   MAY 2012    C RAY        Updated version 
"RTN","RORUTL11",20,0)
 ;
"RTN","RORUTL11",21,0)
 ;ROR*1.5*20   DEC 2012    C RAY        Updated version
"RTN","RORUTL11",22,0)
 ;
"RTN","RORUTL11",23,0)
 ;ROR*1.5*19   APR 2012    K GUPTA      Updated version
"RTN","RORUTL11",24,0)
 ;                                    
"RTN","RORUTL11",25,0)
 ;ROR*1.5*21   AUG 2013    T KOPP       Updated version
"RTN","RORUTL11",26,0)
 ;
"RTN","RORUTL11",27,0)
 ;ROR*1.5*22   FEB 2014    T KOPP       Updated version 
"RTN","RORUTL11",28,0)
 ;
"RTN","RORUTL11",29,0)
 ;ROR*1.5*24   DEC 2014    T KOPP       Updated version  
"RTN","RORUTL11",30,0)
 ;
"RTN","RORUTL11",31,0)
 ;ROR*1.5*27   FEB 2015    T KOPP       Updated version
"RTN","RORUTL11",32,0)
 ;
"RTN","RORUTL11",33,0)
 ;ROR*1.5*25   MAR 2015    T KOPP       Updated version
"RTN","RORUTL11",34,0)
 ;                  
"RTN","RORUTL11",35,0)
 ;******************************************************************************
"RTN","RORUTL11",36,0)
 ; This routine uses the following IAs:
"RTN","RORUTL11",37,0)
 ;
"RTN","RORUTL11",38,0)
 ; #2055   $$ROOT^DILFD (supported)
"RTN","RORUTL11",39,0)
 ; #10013  ENALL^DIK (supported)
"RTN","RORUTL11",40,0)
 ;         
"RTN","RORUTL11",41,0)
 ;******************************************************************************
"RTN","RORUTL11",42,0)
 Q
"RTN","RORUTL11",43,0)
 ;
"RTN","RORUTL11",44,0)
 ;***** REBUILDS THE "ACL" CROSS-REFERENCE (USER ACCESS)
"RTN","RORUTL11",45,0)
 ;
"RTN","RORUTL11",46,0)
 ; Return Values:
"RTN","RORUTL11",47,0)
 ;       <0  Error code
"RTN","RORUTL11",48,0)
 ;        0  Ok
"RTN","RORUTL11",49,0)
 ;
"RTN","RORUTL11",50,0)
RNDXACL() ;
"RTN","RORUTL11",51,0)
 N DA,DIK,REGIEN,ROOT
"RTN","RORUTL11",52,0)
 S ROOT=$$ROOT^DILFD(798.1,,1)  K @ROOT@("ACL")
"RTN","RORUTL11",53,0)
 S REGIEN=0
"RTN","RORUTL11",54,0)
 F  S REGIEN=$O(@ROOT@(REGIEN))  Q:'REGIEN  D
"RTN","RORUTL11",55,0)
 . S DIK=$$ROOT^DILFD(798.118,","_REGIEN_","),DIK(1)=".01^ACL"
"RTN","RORUTL11",56,0)
 . S DA(1)=REGIEN  D ENALL^DIK
"RTN","RORUTL11",57,0)
 Q 0
"RTN","RORUTL11",58,0)
 ;
"RTN","RORUTL11",59,0)
 ;***** CHECKS IF THE RPC CAN BE CALLED BY THE CURRENT USER
"RTN","RORUTL11",60,0)
 ;
"RTN","RORUTL11",61,0)
 ; RPCNAME       Name of the RPC
"RTN","RORUTL11",62,0)
 ;
"RTN","RORUTL11",63,0)
 ; [REGIEN]      Registry IEN
"RTN","RORUTL11",64,0)
 ;
"RTN","RORUTL11",65,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","RORUTL11",66,0)
 ;                 A  Administrator Only
"RTN","RORUTL11",67,0)
 ;                 I  IRM Only
"RTN","RORUTL11",68,0)
 ;
"RTN","RORUTL11",69,0)
 ; Return Values:
"RTN","RORUTL11",70,0)
 ;       <0  Error code
"RTN","RORUTL11",71,0)
 ;        0  Ok
"RTN","RORUTL11",72,0)
 ;       >0  Access denied
"RTN","RORUTL11",73,0)
 ;
"RTN","RORUTL11",74,0)
RPCHECK(RPCNAME,REGIEN,FLAGS) ;
"RTN","RORUTL11",75,0)
 N ACCESS,KEY,RC
"RTN","RORUTL11",76,0)
 Q:$G(DUZ)'>0 $$ERROR^RORERR(-40,,,,"DUZ")
"RTN","RORUTL11",77,0)
 S FLAGS=$G(FLAGS),REGIEN=+$G(REGIEN)
"RTN","RORUTL11",78,0)
 ;---
"RTN","RORUTL11",79,0)
 S (ACCESS,RC)=0
"RTN","RORUTL11",80,0)
 D  Q:ACCESS 0
"RTN","RORUTL11",81,0)
 . I REGIEN  Q:$D(^ROR(798.1,"ACL",DUZ,REGIEN))<10
"RTN","RORUTL11",82,0)
 . E  Q:$D(^ROR(798.1,"ACL",DUZ))<10
"RTN","RORUTL11",83,0)
 . I FLAGS["I"  Q:'$D(^XUSEC("ROR VA IRM",DUZ))
"RTN","RORUTL11",84,0)
 . I FLAGS["A"  S RC=1,KEY=""  D  Q:RC
"RTN","RORUTL11",85,0)
 . . F  S KEY=$O(^ROR(798.1,"ACL",DUZ,REGIEN,KEY))  Q:KEY=""  D  Q:'RC
"RTN","RORUTL11",86,0)
 . . . I KEY?1"ROR"1.E  S:KEY["ADMIN" RC=0
"RTN","RORUTL11",87,0)
 . S ACCESS=1
"RTN","RORUTL11",88,0)
 ;---
"RTN","RORUTL11",89,0)
 D ACVIOLTN^RORLOG(-91,$G(REGIEN),RPCNAME)
"RTN","RORUTL11",90,0)
 Q 1
"RTN","RORUTL11",91,0)
 ;
"RTN","RORUTL11",92,0)
 ;***** RETURNS SERVER VERSION
"RTN","RORUTL11",93,0)
 ;REMOTE PROCEDURE: ROR GET M VERSION
"RTN","RORUTL11",94,0)
 ;
"RTN","RORUTL11",95,0)
 ;The purpose of this RPC is to catch when the GUI executable has been
"RTN","RORUTL11",96,0)
 ;upgraded AND REQUIRES an associated M patch, but the M patch has not
"RTN","RORUTL11",97,0)
 ;been installed yet.
"RTN","RORUTL11",98,0)
 ;
"RTN","RORUTL11",99,0)
 ; VAL n.n.n represents the CCR package version and the m patch number that
"RTN","RORUTL11",100,0)
 ; contains the associated M changes that the GUI is expecting.
"RTN","RORUTL11",101,0)
 ;
"RTN","RORUTL11",102,0)
 ;NOTE TO CCR MAINTENANCE TEAM: For M changes made by the maintenance team,
"RTN","RORUTL11",103,0)
 ;the server version below should not be modified.  The only time the server
"RTN","RORUTL11",104,0)
 ;version should be modified is if the GUI was changed AND there were
"RTN","RORUTL11",105,0)
 ;associated M changes needed for it.
"RTN","RORUTL11",106,0)
 ;
"RTN","RORUTL11",107,0)
VERSRV(VAL) ;
"RTN","RORUTL11",108,0)
 S VAL="1.5.25"
"RTN","RORUTL11",109,0)
 Q
"RTN","RORX013A")
0^1^B79404657
"RTN","RORX013A",1,0)
RORX013A ;HCIOFO/SG - DIAGNOSIS CODES (QUERY & SORT) ;6/21/06 2:24pm
"RTN","RORX013A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,13,19,21,25**;Feb 17, 2006;Build 19
"RTN","RORX013A",3,0)
 ;
"RTN","RORX013A",4,0)
 ; This routine uses the following IAs:
"RTN","RORX013A",5,0)
 ;
"RTN","RORX013A",6,0)
 ; #928          ACTIVE^GMPLUTL (controlled)
"RTN","RORX013A",7,0)
 ; #1554         POV^PXAPIIB (controlled)
"RTN","RORX013A",8,0)
 ; #1905         SELECTED^VSIT (controlled)
"RTN","RORX013A",9,0)
 ; #2977         GETFLDS^GMPLEDT3 (controlled)
"RTN","RORX013A",10,0)
 ; #3157         RPC^DGPTFAPI (supported)
"RTN","RORX013A",11,0)
 ; #3545         Access to the "AAD" cross-reference and the field 80 (private)
"RTN","RORX013A",12,0)
 ; #92           ^DGPT(IEN,0)  (controlled)
"RTN","RORX013A",13,0)
 ; #5747         $$CODEN^ICDEX, $$CODEC^ICDEX, $$VSTD^ICDEX (controlled)
"RTN","RORX013A",14,0)
 ; #6130         PTFICD^DGPTFUT
"RTN","RORX013A",15,0)
 ;
"RTN","RORX013A",16,0)
 ;******************************************************************************
"RTN","RORX013A",17,0)
 ;******************************************************************************
"RTN","RORX013A",18,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORX013A",19,0)
 ;        
"RTN","RORX013A",20,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX013A",21,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX013A",22,0)
 ;ROR*1.5*13   DEC 2010    A SAUNDERS   User can select specific patients,
"RTN","RORX013A",23,0)
 ;                                      clinics, or divisions for the report.
"RTN","RORX013A",24,0)
 ;ROR*1.5*19   FEB 2012    J SCOTT      Support for ICD-10 Coding System.
"RTN","RORX013A",25,0)
 ;ROR*1.5*21   SEP 2013    T KOPP       Add Utilization date range to the report
"RTN","RORX013A",26,0)
 ;                                      Add ICN to report, if requested
"RTN","RORX013A",27,0)
 ;ROR*1.5*25   OCT 2014    T KOPP       Added PTF ICD-10 support for 25 diagnoses
"RTN","RORX013A",28,0)
 ;                                      
"RTN","RORX013A",29,0)
 ;******************************************************************************
"RTN","RORX013A",30,0)
 ;******************************************************************************
"RTN","RORX013A",31,0)
 Q
"RTN","RORX013A",32,0)
 ;
"RTN","RORX013A",33,0)
 ;**** STORES THE ICD CODE
"RTN","RORX013A",34,0)
 ;
"RTN","RORX013A",35,0)
 ; PATIEN        Patient IEN (DFN)
"RTN","RORX013A",36,0)
 ; SOURCE        ICD source code ("I", "O", "PB")
"RTN","RORX013A",37,0)
 ; [ICDIEN]      IEN of the ICD descriptor in file #80
"RTN","RORX013A",38,0)
 ; DATE          Date when the code was entered
"RTN","RORX013A",39,0)
 ; [ICD]         ICD code
"RTN","RORX013A",40,0)
 ;
"RTN","RORX013A",41,0)
 ; Either the ICDIEN or the ICD parameter must be provided.
"RTN","RORX013A",42,0)
 ;
"RTN","RORX013A",43,0)
ICDSET(PATIEN,SOURCE,ICDIEN,DATE,ICD) ;
"RTN","RORX013A",44,0)
 Q:DATE'>0
"RTN","RORX013A",45,0)
 N TMP
"RTN","RORX013A",46,0)
 S ICDIEN=+$G(ICDIEN)
"RTN","RORX013A",47,0)
 I ICDIEN'>0  Q:$G(ICD)=""  D  Q:ICDIEN'>0
"RTN","RORX013A",48,0)
 . S ICDIEN=+$$CODEN^ICDEX(ICD,80)
"RTN","RORX013A",49,0)
 ;---
"RTN","RORX013A",50,0)
 Q:$$ICDGRCHK^RORXU008(.RORPTGRP,ICDIEN,RORICDL)
"RTN","RORX013A",51,0)
 ;---
"RTN","RORX013A",52,0)
 S TMP=+$G(@RORTMP@("PAT",PATIEN,ICDIEN))
"RTN","RORX013A",53,0)
 S:'TMP!(DATE<TMP) @RORTMP@("PAT",PATIEN,ICDIEN)=DATE_U_SOURCE
"RTN","RORX013A",54,0)
 S ^(SOURCE)=$G(@RORTMP@("PAT",PATIEN,ICDIEN,SOURCE))+1 ;naked reference: ^TMP($J,"RORTMP-n") from RORX013
"RTN","RORX013A",55,0)
 Q
"RTN","RORX013A",56,0)
 ;
"RTN","RORX013A",57,0)
 ;***** SEARCHES FOR INPATIENT DIAGNOSES
"RTN","RORX013A",58,0)
 ;
"RTN","RORX013A",59,0)
 ; PATIEN        Patient IEN (DFN)
"RTN","RORX013A",60,0)
 ;
"RTN","RORX013A",61,0)
 ; Return Values:
"RTN","RORX013A",62,0)
 ;       <0  Error code
"RTN","RORX013A",63,0)
 ;        0  Ok
"RTN","RORX013A",64,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX013A",65,0)
 ;
"RTN","RORX013A",66,0)
INPAT(PATIEN) ;
"RTN","RORX013A",67,0)
 N ADMDT,DISDT,I,IEN,NODE,RC,RORBUF,RORMSG,DIERR,TMP
"RTN","RORX013A",68,0)
 S NODE=$NA(^DGPT("AAD",+PATIEN))
"RTN","RORX013A",69,0)
 S RC=0
"RTN","RORX013A",70,0)
 ;--- Browse through the admissions
"RTN","RORX013A",71,0)
 S ADMDT=ROREDT1
"RTN","RORX013A",72,0)
 F  S ADMDT=$O(@NODE@(ADMDT),-1)  Q:ADMDT'>0  D  Q:RC
"RTN","RORX013A",73,0)
 . S IEN=""
"RTN","RORX013A",74,0)
 . F  S IEN=$O(@NODE@(ADMDT,IEN),-1)  Q:IEN'>0  D  Q:RC
"RTN","RORX013A",75,0)
 . . Q:+$G(^DGPT(IEN,0))'=PATIEN
"RTN","RORX013A",76,0)
 . . Q:$$PTF^RORXU001(IEN,"FP",,.DISDT)
"RTN","RORX013A",77,0)
 . . ;--- Skip invalid and/or incomplete admissions
"RTN","RORX013A",78,0)
 . . I DISDT'>0  D  Q:TMP!(DISDT'>0)
"RTN","RORX013A",79,0)
 . . . S TMP=$$CHKADM^RORXU001(PATIEN,ADMDT,.DISDT)
"RTN","RORX013A",80,0)
 . . ;--- Check if any appropriate admissions are left
"RTN","RORX013A",81,0)
 . . I DISDT<RORSDT  S RC=1  Q
"RTN","RORX013A",82,0)
 . . Q:DISDT'<ROREDT1
"RTN","RORX013A",83,0)
 . . ;--- Load and process the admission data
"RTN","RORX013A",84,0)
 . . K RORBUF  D RPC^DGPTFAPI(.RORBUF,IEN)
"RTN","RORX013A",85,0)
 . . I $G(RORBUF(0))<0  D  Q
"RTN","RORX013A",86,0)
 . . . D ERROR^RORERR(-57,,,,RORBUF(0),"RPC^DGPTFAPI")
"RTN","RORX013A",87,0)
 . . S TMP=$P($G(RORBUF(1)),U,3)
"RTN","RORX013A",88,0)
 . . D:TMP'="" ICDSET(PATIEN,"I",,DISDT,TMP)   ; ICD1
"RTN","RORX013A",89,0)
 . . D:$G(RORBUF(2))'=""                       ; ICD2 - ICD24
"RTN","RORX013A",90,0)
 . . . F I=1:1:24  S TMP=$P(RORBUF(2),U,I)  D:TMP'=""
"RTN","RORX013A",91,0)
 . . . . D ICDSET(PATIEN,"I",,DISDT,TMP)
"RTN","RORX013A",92,0)
 . . S TMP=+$$GET1^DIQ(45,IEN,80,"I",,"RORMSG")
"RTN","RORX013A",93,0)
 . . D:$G(DIERR) DBS^RORERR("RORMSG",-9,,,45,IEN)
"RTN","RORX013A",94,0)
 . . D:TMP>0 ICDSET(PATIEN,"I",TMP,DISDT)     ; PRINCIPAL DIAGNOSIS
"RTN","RORX013A",95,0)
 ;---
"RTN","RORX013A",96,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORX013A",97,0)
 ;
"RTN","RORX013A",98,0)
 ;***** SEARCHES FOR OUTPATIENT DIAGNOSES
"RTN","RORX013A",99,0)
 ;
"RTN","RORX013A",100,0)
 ; PATIEN        Patient IEN (DFN)
"RTN","RORX013A",101,0)
 ;
"RTN","RORX013A",102,0)
 ; Return Values:
"RTN","RORX013A",103,0)
 ;       <0  Error code
"RTN","RORX013A",104,0)
 ;        0  Ok
"RTN","RORX013A",105,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX013A",106,0)
 ;
"RTN","RORX013A",107,0)
OUTPAT(PATIEN) ;
"RTN","RORX013A",108,0)
 N DATE,ICDIEN,RC,RORMSG,RORVPLST,TMP,VPIEN,VSIEN,VSIT
"RTN","RORX013A",109,0)
 D SELECTED^VSIT(PATIEN,RORSDT,ROREDT)
"RTN","RORX013A",110,0)
 ;--- Browse through the visits
"RTN","RORX013A",111,0)
 S (VSIEN,RC)=0
"RTN","RORX013A",112,0)
 F  S VSIEN=$O(^TMP("VSIT",$J,VSIEN))  Q:VSIEN=""  D  Q:RC<0
"RTN","RORX013A",113,0)
 . S TMP=+$O(^TMP("VSIT",$J,VSIEN,""))  Q:TMP'>0
"RTN","RORX013A",114,0)
 . S DATE=$P($G(^TMP("VSIT",$J,VSIEN,TMP)),U)  Q:DATE'>0
"RTN","RORX013A",115,0)
 . ;--- Get a list of V POV records
"RTN","RORX013A",116,0)
 . D POV^PXAPIIB(VSIEN,.RORVPLST)
"RTN","RORX013A",117,0)
 . ;--- Process the records
"RTN","RORX013A",118,0)
 . S (VPIEN,RC)=0
"RTN","RORX013A",119,0)
 . F  S VPIEN=$O(RORVPLST(VPIEN))  Q:VPIEN'>0  D  Q:RC
"RTN","RORX013A",120,0)
 . . S ICDIEN=+$P(RORVPLST(VPIEN),U)
"RTN","RORX013A",121,0)
 . . D:ICDIEN>0 ICDSET(PATIEN,"O",ICDIEN,DATE)
"RTN","RORX013A",122,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORX013A",123,0)
 ;
"RTN","RORX013A",124,0)
 ;***** SEARCHES FOR PROBLEMS
"RTN","RORX013A",125,0)
 ;
"RTN","RORX013A",126,0)
 ; PATIEN        Patient IEN (DFN)
"RTN","RORX013A",127,0)
 ;
"RTN","RORX013A",128,0)
 ; Return Values:
"RTN","RORX013A",129,0)
 ;       <0  Error code
"RTN","RORX013A",130,0)
 ;        0  Ok
"RTN","RORX013A",131,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX013A",132,0)
 ;
"RTN","RORX013A",133,0)
PROBLEM(PATIEN) ;
"RTN","RORX013A",134,0)
 N DATE,GMPFLD,GMPORIG,GMPROV,GMPVAMC,ICDIEN,IEN,IS,RC,RORPLST,TMP
"RTN","RORX013A",135,0)
 ;--- Load a list of active problems
"RTN","RORX013A",136,0)
 D ACTIVE^GMPLUTL(PATIEN,.RORPLST)
"RTN","RORX013A",137,0)
 ;--- Browse through the problems
"RTN","RORX013A",138,0)
 S (GMPVAMC,GMPROV)=0
"RTN","RORX013A",139,0)
 S (IS,RC)=0
"RTN","RORX013A",140,0)
 F  S IS=$O(RORPLST(IS))  Q:IS=""  D  Q:RC
"RTN","RORX013A",141,0)
 . S IEN=+$G(RORPLST(IS,0))  Q:IEN'>0
"RTN","RORX013A",142,0)
 . K GMPFLD,GMPORIG  D GETFLDS^GMPLEDT3(IEN)
"RTN","RORX013A",143,0)
 . S ICDIEN=+$G(GMPFLD(.01))  Q:ICDIEN'>0
"RTN","RORX013A",144,0)
 . S DATE=$P($G(GMPFLD(.08)),U)
"RTN","RORX013A",145,0)
 . D:(DATE'<RORSDT)&(DATE<ROREDT1) ICDSET(PATIEN,"PB",ICDIEN,DATE)
"RTN","RORX013A",146,0)
 Q 0
"RTN","RORX013A",147,0)
 ;
"RTN","RORX013A",148,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX013A",149,0)
 ;
"RTN","RORX013A",150,0)
 ; FLAGS         Flags for the $$SKIP^RORXU005
"RTN","RORX013A",151,0)
 ;
"RTN","RORX013A",152,0)
 ; Return Values:
"RTN","RORX013A",153,0)
 ;       <0  Error code
"RTN","RORX013A",154,0)
 ;        0  Ok
"RTN","RORX013A",155,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX013A",156,0)
 ;
"RTN","RORX013A",157,0)
QUERY(FLAGS) ;
"RTN","RORX013A",158,0)
 N RORDOD        ; Date of death
"RTN","RORX013A",159,0)
 N ROREDT1       ; Day after the end date
"RTN","RORX013A",160,0)
 N RORLAST4      ; Last 4 digits of the current patient's SSN
"RTN","RORX013A",161,0)
 N RORPNAME      ; Name of the current patient
"RTN","RORX013A",162,0)
 N RORICN        ; ICN of patient (optional)
"RTN","RORX013A",163,0)
 N RORPTGRP      ; Temporary list of ICD groups
"RTN","RORX013A",164,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX013A",165,0)
 N RORCDLIST     ; Flag to indicate whether a clinic or division list exists
"RTN","RORX013A",166,0)
 N RORCDSTDT     ; Start date for clinic/division utilization search
"RTN","RORX013A",167,0)
 N RORCDENDT     ; End date for clinic/division utilization search
"RTN","RORX013A",168,0)
 ;
"RTN","RORX013A",169,0)
 N CNT,ECNT,IEN,IENS,PATIEN,RC,SKIPEDT,SKIPSDT,TMP,UTEDT,UTIL,UTSDT,VA,VADM,XREFNODE
"RTN","RORX013A",170,0)
 ;--- Utilization date range
"RTN","RORX013A",171,0)
 D:$$PARAM^RORTSK01("PATIENTS","CAREONLY")
"RTN","RORX013A",172,0)
 . S UTSDT=$$PARAM^RORTSK01("DATE_RANGE_3","START")\1
"RTN","RORX013A",173,0)
 . S UTEDT=$$PARAM^RORTSK01("DATE_RANGE_3","END")\1
"RTN","RORX013A",174,0)
 . ;--- Combined date range
"RTN","RORX013A",175,0)
 . S SKIPSDT=$$DTMIN^RORUTL18(SKIPSDT,UTSDT)
"RTN","RORX013A",176,0)
 . S SKIPEDT=$$DTMAX^RORUTL18(SKIPEDT,UTEDT)
"RTN","RORX013A",177,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX013A",178,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX013A",179,0)
 S ROREDT1=$$FMADD^XLFDT(ROREDT\1,1)
"RTN","RORX013A",180,0)
 S (CNT,ECNT,RC)=0
"RTN","RORX013A",181,0)
 ;
"RTN","RORX013A",182,0)
 ;=== Set up Clinic/Division list parameters
"RTN","RORX013A",183,0)
 S RORCDLIST=$$CDPARMS^RORXU001(.RORTSK,.RORCDSTDT,.RORCDENDT)
"RTN","RORX013A",184,0)
 ;
"RTN","RORX013A",185,0)
 ;--- Browse through the registry records
"RTN","RORX013A",186,0)
 S IEN=0
"RTN","RORX013A",187,0)
 F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX013A",188,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX013A",189,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX013A",190,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX013A",191,0)
 . ;--- Get patient DFN
"RTN","RORX013A",192,0)
 . S PATIEN=$$PTIEN^RORUTL01(IEN)  Q:PATIEN'>0
"RTN","RORX013A",193,0)
 . ;check for patient list and quit if not on list
"RTN","RORX013A",194,0)
 . I $D(RORTSK("PARAMS","PATIENTS","C")),'$D(RORTSK("PARAMS","PATIENTS","C",PATIEN)) Q
"RTN","RORX013A",195,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX013A",196,0)
 . Q:$$SKIP^RORXU005(IEN,FLAGS,RORSDT,ROREDT)
"RTN","RORX013A",197,0)
 . ;
"RTN","RORX013A",198,0)
 . ;--- Check for Clinic or Division list and quit if not in list
"RTN","RORX013A",199,0)
 . I RORCDLIST,'$$CDUTIL^RORXU001(.RORTSK,PATIEN,RORCDSTDT,RORCDENDT) Q
"RTN","RORX013A",200,0)
 . ;
"RTN","RORX013A",201,0)
 . ;--- Check for any utilization in the corresponding date range
"RTN","RORX013A",202,0)
 . I $$PARAM^RORTSK01("PATIENTS","CAREONLY") D  Q:'UTIL
"RTN","RORX013A",203,0)
 . . K TMP  S TMP("ALL")=1
"RTN","RORX013A",204,0)
 . . S UTIL=+$$UTIL^RORXU003(UTSDT,UTEDT,PATIEN,.TMP)
"RTN","RORX013A",205,0)
 . ;
"RTN","RORX013A",206,0)
 . M RORPTGRP=RORIGRP("C")
"RTN","RORX013A",207,0)
 . ;
"RTN","RORX013A",208,0)
 . ;--- Inpatient codes
"RTN","RORX013A",209,0)
 . S RC=$$INPAT(PATIEN)
"RTN","RORX013A",210,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX013A",211,0)
 . ;
"RTN","RORX013A",212,0)
 . ;--- Outpatient codes
"RTN","RORX013A",213,0)
 . S RC=$$OUTPAT(PATIEN)
"RTN","RORX013A",214,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX013A",215,0)
 . ;
"RTN","RORX013A",216,0)
 . ;--- Problem list
"RTN","RORX013A",217,0)
 . S RC=$$PROBLEM(PATIEN)
"RTN","RORX013A",218,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX013A",219,0)
 . ;
"RTN","RORX013A",220,0)
 . ;--- Skip the patient if no data has been found
"RTN","RORX013A",221,0)
 . Q:$D(@RORTMP@("PAT",PATIEN))<10
"RTN","RORX013A",222,0)
 . ;--- No ICD from some groups
"RTN","RORX013A",223,0)
 . I $D(RORPTGRP)>1  K @RORTMP@("PAT",PATIEN)  Q
"RTN","RORX013A",224,0)
 . ;
"RTN","RORX013A",225,0)
 . ;--- Get the patient's data
"RTN","RORX013A",226,0)
 . D VADEM^RORUTL05(PATIEN,1)
"RTN","RORX013A",227,0)
 . S RORPNAME=VADM(1),RORDOD=$P(VADM(6),U),RORLAST4=VA("BID")
"RTN","RORX013A",228,0)
 . I $$PARAM^RORTSK01("PATIENTS","ICN") S RORICN=$$ICN^RORUTL02(PATIEN)
"RTN","RORX013A",229,0)
 . ;
"RTN","RORX013A",230,0)
 . ;--- Calculate the patient's totals
"RTN","RORX013A",231,0)
 . S RC=$$TOTALS(PATIEN)
"RTN","RORX013A",232,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX013A",233,0)
 ;---
"RTN","RORX013A",234,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX013A",235,0)
 ;
"RTN","RORX013A",236,0)
 ;***** SORTS THE RESULTS AND COMPILES THE TOTALS
"RTN","RORX013A",237,0)
 ;
"RTN","RORX013A",238,0)
 ; Return Values:
"RTN","RORX013A",239,0)
 ;       <0  Error code
"RTN","RORX013A",240,0)
 ;        0  Ok
"RTN","RORX013A",241,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX013A",242,0)
 ;
"RTN","RORX013A",243,0)
SORT() ;
"RTN","RORX013A",244,0)
 N ICDIEN,TMP,TNC,TNDC
"RTN","RORX013A",245,0)
 ;---
"RTN","RORX013A",246,0)
 S ICDIEN=0,(TNC,TNDC)=0
"RTN","RORX013A",247,0)
 F  S ICDIEN=$O(@RORTMP@("ICD",ICDIEN))  Q:ICDIEN'>0  D
"RTN","RORX013A",248,0)
 . S TNC=TNC+$G(@RORTMP@("ICD",ICDIEN,"C"))
"RTN","RORX013A",249,0)
 . S TNDC=TNDC+1
"RTN","RORX013A",250,0)
 S @RORTMP@("ICD")=TNC_U_TNDC
"RTN","RORX013A",251,0)
 ;---
"RTN","RORX013A",252,0)
 Q 0
"RTN","RORX013A",253,0)
 ;
"RTN","RORX013A",254,0)
 ;***** CALCULATES INTERMEDIATE TOTALS
"RTN","RORX013A",255,0)
 ;
"RTN","RORX013A",256,0)
 ; PATIEN        Patient IEN (DFN)
"RTN","RORX013A",257,0)
 ;
"RTN","RORX013A",258,0)
 ; Return Values:
"RTN","RORX013A",259,0)
 ;       <0  Error code
"RTN","RORX013A",260,0)
 ;        0  Ok
"RTN","RORX013A",261,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX013A",262,0)
 ;
"RTN","RORX013A",263,0)
TOTALS(PATIEN) ;
"RTN","RORX013A",264,0)
 N CNT,ICD,ICDIEN,ICDVST,PNODE,RC,TMP
"RTN","RORX013A",265,0)
 S PNODE=$NA(@RORTMP@("PAT",PATIEN))
"RTN","RORX013A",266,0)
 S @PNODE=RORLAST4_U_RORPNAME_U_RORDOD_U_$G(RORICN)
"RTN","RORX013A",267,0)
 S ^("PAT")=$G(@RORTMP@("PAT"))+1 ;naked reference: ^TMP($J,"RORTMP-n") from RORX013
"RTN","RORX013A",268,0)
 ;
"RTN","RORX013A",269,0)
 S ICDIEN=0
"RTN","RORX013A",270,0)
 F  S ICDIEN=$O(@PNODE@(ICDIEN))  Q:ICDIEN'>0  D
"RTN","RORX013A",271,0)
 . S ICD=$P($G(@RORTMP@("ICD",ICDIEN)),U)
"RTN","RORX013A",272,0)
 . I ICD=""  D
"RTN","RORX013A",273,0)
 . . S ICD=$$CODEC^ICDEX(80,ICDIEN)
"RTN","RORX013A",274,0)
 . . S ICDVST=$$VSTD^ICDEX(ICDIEN)
"RTN","RORX013A",275,0)
 . . S:ICD="" ICD="UNKN"
"RTN","RORX013A",276,0)
 . . S:ICDVST="" ICDVST="Unknown ("_ICDIEN_")"
"RTN","RORX013A",277,0)
 . . S @RORTMP@("ICD",ICDIEN)=ICD_U_ICDVST
"RTN","RORX013A",278,0)
 . ;---
"RTN","RORX013A",279,0)
 . S CNT=0
"RTN","RORX013A",280,0)
 . F TMP="I","O","PB"  S CNT=CNT+$G(@PNODE@(ICDIEN,TMP))
"RTN","RORX013A",281,0)
 . S @PNODE@(ICDIEN,"C")=CNT
"RTN","RORX013A",282,0)
 . S ^("C")=$G(@RORTMP@("ICD",ICDIEN,"C"))+CNT ;naked reference: ^TMP($J,"RORTMP-n") from RORX013
"RTN","RORX013A",283,0)
 . S ^("P")=$G(@RORTMP@("ICD",ICDIEN,"P"))+1 ;naked reference: ^TMP($J,"RORTMP-n") from RORX013
"RTN","RORX013A",284,0)
 Q 0
"RTN","RORX015A")
0^2^B90387034
"RTN","RORX015A",1,0)
RORX015A ;HOIFO/SG,VAC - OUTPATIENT PROCEDURES (QUERY & SORT) ;4/7/09 2:10pm
"RTN","RORX015A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,8,13,19,21,25**;Feb 17, 2006;Build 19
"RTN","RORX015A",3,0)
 ;
"RTN","RORX015A",4,0)
 ; This routine uses the following IAs:
"RTN","RORX015A",5,0)
 ;
"RTN","RORX015A",6,0)
 ; #1995         $$CODEN^ICPTCOD and $$CPT^ICPTCOD (supported)
"RTN","RORX015A",7,0)
 ; #2055         ROOT^DILFD
"RTN","RORX015A",8,0)
 ; #2056         GETS^DIQ
"RTN","RORX015A",9,0)
 ; #2546         GETCPT^SDOE
"RTN","RORX015A",10,0)
 ; #2548         Multiple APIs in SDQ routine (supported)
"RTN","RORX015A",11,0)
 ; #10103        FMADD^XLFDT (supported)
"RTN","RORX015A",12,0)
 ; #5747         $$CODEC^ICDEX, $$CODEN^ICDEX, $$VSTP^ICDEX (controlled)
"RTN","RORX015A",13,0)
 ; #6130         PTFICD^DGPTFUT
"RTN","RORX015A",14,0)
 ;
"RTN","RORX015A",15,0)
 ;******************************************************************************
"RTN","RORX015A",16,0)
 ;******************************************************************************
"RTN","RORX015A",17,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORX015A",18,0)
 ;        
"RTN","RORX015A",19,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX015A",20,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX015A",21,0)
 ;ROR*1.5*8    MAR 2010   V CARR        Modified to handle ICD9 filter for
"RTN","RORX015A",22,0)
 ;                                      'include' or 'exclude'.
"RTN","RORX015A",23,0)
 ;ROR*1.5*13   DEC 2010   A SAUNDERS    User can select specific patients,
"RTN","RORX015A",24,0)
 ;                                      clinics, or divisions for the report.
"RTN","RORX015A",25,0)
 ;ROR*1.5*19   FEB 2012   J SCOTT       Support for ICD-10 Coding System.
"RTN","RORX015A",26,0)
 ;ROR*1.5*21   SEP 2013   T KOPP        Added ICN as report column if
"RTN","RORX015A",27,0)
 ;                                      additional identifier option selected
"RTN","RORX015A",28,0)
 ;ROR*1.5*25   OCT 2014   T KOPP        Added PTF ICD-10 support for 25 diagnoses
"RTN","RORX015A",29,0)
 ;                                      
"RTN","RORX015A",30,0)
 ;******************************************************************************
"RTN","RORX015A",31,0)
 ;******************************************************************************
"RTN","RORX015A",32,0)
 Q
"RTN","RORX015A",33,0)
 ;
"RTN","RORX015A",34,0)
 ;***** SEARCHES FOR INPATIENT PROCEDURES
"RTN","RORX015A",35,0)
 ;
"RTN","RORX015A",36,0)
 ; PTIEN         Patient IEN (DFN)
"RTN","RORX015A",37,0)
 ;
"RTN","RORX015A",38,0)
 ; Return Values:
"RTN","RORX015A",39,0)
 ;       <0  Error code
"RTN","RORX015A",40,0)
 ;        0  Ok
"RTN","RORX015A",41,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX015A",42,0)
 ;
"RTN","RORX015A",43,0)
INPAT(PTIEN) ;
"RTN","RORX015A",44,0)
 N DATE,ERRCNT,IEN,IEN45,IENS,NODE,RC,RORBUF,RORIBUF,RORMSG,XREF,FLD
"RTN","RORX015A",45,0)
 S (ERRCNT,RC)=0
"RTN","RORX015A",46,0)
 S XREF=$$ROOT^DILFD(45,,1),XREF=$NA(@XREF@("B",PTIEN))
"RTN","RORX015A",47,0)
 S IEN45=0
"RTN","RORX015A",48,0)
 F  S IEN45=$O(@XREF@(IEN45))  Q:IEN45'>0  D
"RTN","RORX015A",49,0)
 . ;--- Surgical procedures
"RTN","RORX015A",50,0)
 . S NODE=$$ROOT^DILFD(45.01,","_IEN45_",",1)
"RTN","RORX015A",51,0)
 . S IEN=0
"RTN","RORX015A",52,0)
 . F  S IEN=$O(@NODE@(IEN))  Q:IEN'>0  D
"RTN","RORX015A",53,0)
 . . S IENS=IEN_","_IEN45_","  K RORBUF
"RTN","RORX015A",54,0)
 . . ;--- Load the data
"RTN","RORX015A",55,0)
 . . K RORMSG D GETS^DIQ(45.01,IENS,".01;","I","RORBUF","RORMSG")
"RTN","RORX015A",56,0)
 . . I $G(RORMSG("DIERR"))  D  S ERRCNT=ERRCNT+1
"RTN","RORX015A",57,0)
 . . . D DBS^RORERR("RORMSG",-99,,PTIEN,45.01,IENS)
"RTN","RORX015A",58,0)
 . . S DATE=$G(RORBUF(45.01,IENS,.01,"I"))
"RTN","RORX015A",59,0)
 . . Q:(DATE<RORSDT)!(DATE'<ROREDT1)
"RTN","RORX015A",60,0)
 . . ;--- Generate the output
"RTN","RORX015A",61,0)
 . . K RORIBUF
"RTN","RORX015A",62,0)
 . . D PTFICD^DGPTFUT(401,IEN45,IEN,.RORIBUF)
"RTN","RORX015A",63,0)
 . . S FLD="" F  S FLD=$O(RORIBUF(FLD)) Q:FLD=""  I $G(RORIBUF(FLD)) D
"RTN","RORX015A",64,0)
 . . . D PROCSET(PTIEN,"I",+RORIBUF(FLD),DATE)
"RTN","RORX015A",65,0)
 . ;--- Other procedures
"RTN","RORX015A",66,0)
 . S NODE=$$ROOT^DILFD(45.05,","_IEN45_",",1)
"RTN","RORX015A",67,0)
 . S IEN=0
"RTN","RORX015A",68,0)
 . F  S IEN=$O(@NODE@(IEN))  Q:IEN'>0  D
"RTN","RORX015A",69,0)
 . . S IENS=IEN_","_IEN45_","  K RORBUF
"RTN","RORX015A",70,0)
 . . ;--- Load the data
"RTN","RORX015A",71,0)
 . . K RORMSG D GETS^DIQ(45.05,IENS,".01","I","RORBUF","RORMSG")
"RTN","RORX015A",72,0)
 . . I $G(RORMSG("DIERR"))  D  S ERRCNT=ERRCNT+1
"RTN","RORX015A",73,0)
 . . . D DBS^RORERR("RORMSG",-99,,PTIEN,45.05,IENS)
"RTN","RORX015A",74,0)
 . . S DATE=$G(RORBUF(45.05,IENS,.01,"I"))
"RTN","RORX015A",75,0)
 . . Q:(DATE<RORSDT)!(DATE'<ROREDT1)
"RTN","RORX015A",76,0)
 . . ;--- Generate the output
"RTN","RORX015A",77,0)
 . . K RORIBUF
"RTN","RORX015A",78,0)
 . . D PTFICD^DGPTFUT(601,IEN45,IEN,.RORIBUF)
"RTN","RORX015A",79,0)
 . . S FLD="" F  S FLD=$O(RORIBUF(FLD)) Q:FLD=""  I $G(RORIBUF(FLD)) D
"RTN","RORX015A",80,0)
 . . . D PROCSET(PTIEN,"I",+RORIBUF(FLD),DATE)
"RTN","RORX015A",81,0)
 ;---
"RTN","RORX015A",82,0)
 Q $S(RC<0:RC,1:ERRCNT)
"RTN","RORX015A",83,0)
 ;
"RTN","RORX015A",84,0)
 ;***** CALL-BACK PROCEDURE FOR THE OUTPATIENT SEARCH
"RTN","RORX015A",85,0)
 ;
"RTN","RORX015A",86,0)
 ; PTIEN         Patient IEN (DFN)
"RTN","RORX015A",87,0)
 ;
"RTN","RORX015A",88,0)
OPSCAN(PTIEN) ;
"RTN","RORX015A",89,0)
 N CPTIEN,DATE,IEN,RORCPT,VDATE
"RTN","RORX015A",90,0)
 D GETCPT^SDOE(Y,"RORCPT")
"RTN","RORX015A",91,0)
 Q:$G(RORCPT)'>0
"RTN","RORX015A",92,0)
 S VDATE=+$P(Y0,U)
"RTN","RORX015A",93,0)
 ;---
"RTN","RORX015A",94,0)
 S IEN=0
"RTN","RORX015A",95,0)
 F  S IEN=$O(RORCPT(IEN))  Q:IEN'>0  D
"RTN","RORX015A",96,0)
 . S CPTIEN=+$P(RORCPT(IEN),U),DATE=+$P($G(RORCPT(IEN,12)),U)
"RTN","RORX015A",97,0)
 . D:CPTIEN>0 PROCSET(PTIEN,"O",CPTIEN,$S(DATE>0:DATE,1:VDATE))
"RTN","RORX015A",98,0)
 Q
"RTN","RORX015A",99,0)
 ;
"RTN","RORX015A",100,0)
 ;***** SEARCHES FOR OUTPATIENT PROCEDURES
"RTN","RORX015A",101,0)
 ;
"RTN","RORX015A",102,0)
 ; PTIEN         Patient IEN (DFN)
"RTN","RORX015A",103,0)
 ;
"RTN","RORX015A",104,0)
 ; Return Values:
"RTN","RORX015A",105,0)
 ;       <0  Error code
"RTN","RORX015A",106,0)
 ;        0  Ok
"RTN","RORX015A",107,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX015A",108,0)
 ;
"RTN","RORX015A",109,0)
OUTPAT(PTIEN) ;
"RTN","RORX015A",110,0)
 N QUERY
"RTN","RORX015A",111,0)
 D OPEN^SDQ(.QUERY)
"RTN","RORX015A",112,0)
 D INDEX^SDQ(.QUERY,"PATIENT/DATE","SET")
"RTN","RORX015A",113,0)
 D PAT^SDQ(.QUERY,PTIEN,"SET")
"RTN","RORX015A",114,0)
 D DATE^SDQ(.QUERY,RORSDT,ROREDT1,"SET")
"RTN","RORX015A",115,0)
 D SCANCB^SDQ(.QUERY,"D OPSCAN^RORX015A("_PTIEN_")","SET")
"RTN","RORX015A",116,0)
 D ACTIVE^SDQ(.QUERY,"TRUE","SET")
"RTN","RORX015A",117,0)
 D SCAN^SDQ(.QUERY,"FORWARD")
"RTN","RORX015A",118,0)
 D CLOSE^SDQ(.QUERY)
"RTN","RORX015A",119,0)
 Q 0
"RTN","RORX015A",120,0)
 ;
"RTN","RORX015A",121,0)
 ;**** STORES THE PROCEDURE CODE
"RTN","RORX015A",122,0)
 ;
"RTN","RORX015A",123,0)
 ; PTIEN         Patient IEN (DFN)
"RTN","RORX015A",124,0)
 ; SOURCE        CPT source code ("O" or "I")
"RTN","RORX015A",125,0)
 ; [IEN]         IEN of the procedure descriptor (file #81 or #80.1)
"RTN","RORX015A",126,0)
 ; DATE          Date when the code was entered
"RTN","RORX015A",127,0)
 ; [CODE]        Procedure code (CPT or ICD-9)
"RTN","RORX015A",128,0)
 ;
"RTN","RORX015A",129,0)
 ; Either the IEN or the CODE parameter must be provided.
"RTN","RORX015A",130,0)
 ;
"RTN","RORX015A",131,0)
PROCSET(PTIEN,SOURCE,IEN,DATE,CODE) ;
"RTN","RORX015A",132,0)
 Q:DATE'>0
"RTN","RORX015A",133,0)
 N TMP
"RTN","RORX015A",134,0)
 S IEN=+$G(IEN)
"RTN","RORX015A",135,0)
 ;---
"RTN","RORX015A",136,0)
 I IEN'>0  Q:$G(CODE)=""  D  Q:IEN'>0
"RTN","RORX015A",137,0)
 . I SOURCE="O"  S IEN=+$$CODEN^ICPTCOD(CODE) Q
"RTN","RORX015A",138,0)
 . I SOURCE="I"  S IEN=+$$CODEN^ICDEX(CODE,80.1) Q
"RTN","RORX015A",139,0)
 ;---
"RTN","RORX015A",140,0)
 I SOURCE="O",'$$PARAM^RORTSK01("CPTLST","ALL")  D  Q:'TMP
"RTN","RORX015A",141,0)
 . S TMP=$D(RORTSK("PARAMS","CPTLST","C",IEN))
"RTN","RORX015A",142,0)
 I SOURCE="I"  Q:$$ICDGRCHK^RORXU008(.RORPTGRP,IEN,RORICDL)
"RTN","RORX015A",143,0)
 ;---
"RTN","RORX015A",144,0)
 S TMP=+$G(@RORTMP@("PAT",PTIEN,SOURCE,IEN))
"RTN","RORX015A",145,0)
 S:'TMP!(DATE<TMP) @RORTMP@("PAT",PTIEN,SOURCE,IEN)=DATE
"RTN","RORX015A",146,0)
 S ^("C")=$G(@RORTMP@("PAT",PTIEN,SOURCE,IEN,"C"))+1 ;naked reference: ^TMP($J,"RORTMP-n") from RORX015
"RTN","RORX015A",147,0)
 Q
"RTN","RORX015A",148,0)
 ;
"RTN","RORX015A",149,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX015A",150,0)
 ;
"RTN","RORX015A",151,0)
 ; FLAGS         Flags for the $$SKIP^RORXU005
"RTN","RORX015A",152,0)
 ;
"RTN","RORX015A",153,0)
 ; Return Values:
"RTN","RORX015A",154,0)
 ;       <0  Error code
"RTN","RORX015A",155,0)
 ;        0  Ok
"RTN","RORX015A",156,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX015A",157,0)
 ;
"RTN","RORX015A",158,0)
QUERY(FLAGS) ;
"RTN","RORX015A",159,0)
 N ROREDT1       ; Day after the end date
"RTN","RORX015A",160,0)
 N RORPTGRP      ; Temporary list of ICD groups
"RTN","RORX015A",161,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX015A",162,0)
 N RORCDLIST     ; Flag to indicate whether a clinic or division list exists
"RTN","RORX015A",163,0)
 N RORCDSTDT     ; Start date for clinic/division utilization search
"RTN","RORX015A",164,0)
 N RORCDENDT     ; End date for clinic/division utilization search
"RTN","RORX015A",165,0)
 ;
"RTN","RORX015A",166,0)
 N CNT,ECNT,IEN,IENS,MODE,PTIEN,RC,SKIP,SKIPEDT,SKIPSDT,TMP,UTEDT,UTSDT,XREFNODE
"RTN","RORX015A",167,0)
 N RCC,FLAG,UTIL
"RTN","RORX015A",168,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX015A",169,0)
 S ROREDT1=$$FMADD^XLFDT(ROREDT\1,1)
"RTN","RORX015A",170,0)
 S (CNT,ECNT,RC)=0,SKIPEDT=ROREDT,SKIPSDT=RORSDT
"RTN","RORX015A",171,0)
 S:$$PARAM^RORTSK01("PATIENTS","INPATIENT") MODE("I")=1
"RTN","RORX015A",172,0)
 S:$$PARAM^RORTSK01("PATIENTS","OUTPATIENT") MODE("O")=1
"RTN","RORX015A",173,0)
 ;--- Utilization date range
"RTN","RORX015A",174,0)
 D:$$PARAM^RORTSK01("PATIENTS","CAREONLY")
"RTN","RORX015A",175,0)
 . S UTSDT=$$PARAM^RORTSK01("DATE_RANGE_3","START")\1
"RTN","RORX015A",176,0)
 . S UTEDT=$$PARAM^RORTSK01("DATE_RANGE_3","END")\1
"RTN","RORX015A",177,0)
 . ;--- Combined date range
"RTN","RORX015A",178,0)
 . S SKIPSDT=$$DTMIN^RORUTL18(SKIPSDT,UTSDT)
"RTN","RORX015A",179,0)
 . S SKIPEDT=$$DTMAX^RORUTL18(SKIPEDT,UTEDT)
"RTN","RORX015A",180,0)
 ;--- Number of patients in the registry
"RTN","RORX015A",181,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX015A",182,0)
 ;
"RTN","RORX015A",183,0)
 ;=== Set up Clinic/Division list parameters
"RTN","RORX015A",184,0)
 S RORCDLIST=$$CDPARMS^RORXU001(.RORTSK,.RORCDSTDT,.RORCDENDT,1)
"RTN","RORX015A",185,0)
 ;
"RTN","RORX015A",186,0)
 ;=== Browse through the registry records
"RTN","RORX015A",187,0)
 S IEN=0
"RTN","RORX015A",188,0)
 S FLAG=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORX015A",189,0)
 F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX015A",190,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX015A",191,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX015A",192,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX015A",193,0)
 . ;--- Get patient DFN
"RTN","RORX015A",194,0)
 . S PTIEN=$$PTIEN^RORUTL01(IEN)  Q:PTIEN'>0
"RTN","RORX015A",195,0)
 . ;--- Check for patient list and quit if not on list
"RTN","RORX015A",196,0)
 . I $D(RORTSK("PARAMS","PATIENTS","C")),'$D(RORTSK("PARAMS","PATIENTS","C",PTIEN)) Q
"RTN","RORX015A",197,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX015A",198,0)
 . Q:$$SKIP^RORXU005(IEN,FLAGS,SKIPSDT,SKIPEDT)
"RTN","RORX015A",199,0)
 . ;--- Check if patient has passed the ICD Filter
"RTN","RORX015A",200,0)
 . S RCC=0
"RTN","RORX015A",201,0)
 . I FLAG'="ALL" D
"RTN","RORX015A",202,0)
 . . S RCC=$$ICD^RORXU010(PTIEN)
"RTN","RORX015A",203,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX015A",204,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX015A",205,0)
 . ;--- End of ICD check
"RTN","RORX015A",206,0)
 . M RORPTGRP=RORIGRP("C")
"RTN","RORX015A",207,0)
 . ;
"RTN","RORX015A",208,0)
 . ;--- Check for Clinic or Division list and quit if not in list
"RTN","RORX015A",209,0)
 . I RORCDLIST,'$$CDUTIL^RORXU001(.RORTSK,PTIEN,RORCDSTDT,RORCDENDT) Q
"RTN","RORX015A",210,0)
 . ;
"RTN","RORX015A",211,0)
 . ;--- Inpatient codes (ICD)
"RTN","RORX015A",212,0)
 . I $G(MODE("I"))   D  I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX015A",213,0)
 . . S RC=$$INPAT(PTIEN)
"RTN","RORX015A",214,0)
 . ;--- Outpatient codes (CPT)
"RTN","RORX015A",215,0)
 . I $G(MODE("O"))  D  I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX015A",216,0)
 . . S RC=$$OUTPAT(PTIEN)
"RTN","RORX015A",217,0)
 . ;
"RTN","RORX015A",218,0)
 . ;--- If ICD codes from some groups have not been found,
"RTN","RORX015A",219,0)
 . ;--- then do not consider inpatient procedures at all
"RTN","RORX015A",220,0)
 . K:$D(RORPTGRP)>1 @RORTMP@("PAT",PTIEN,"I")
"RTN","RORX015A",221,0)
 . ;---
"RTN","RORX015A",222,0)
 . S SKIP=($D(@RORTMP@("PAT",PTIEN))<10)
"RTN","RORX015A",223,0)
 . S:RORPROC<0 SKIP='SKIP
"RTN","RORX015A",224,0)
 . ;
"RTN","RORX015A",225,0)
 . ;--- Check for any utilization in the corresponding date range
"RTN","RORX015A",226,0)
 . I 'SKIP  D:$$PARAM^RORTSK01("PATIENTS","CAREONLY")
"RTN","RORX015A",227,0)
 . . K TMP  S TMP("ALL")=1
"RTN","RORX015A",228,0)
 . . S UTIL=+$$UTIL^RORXU003(UTSDT,UTEDT,PTIEN,.TMP)
"RTN","RORX015A",229,0)
 . . S:'UTIL SKIP=1
"RTN","RORX015A",230,0)
 . ;
"RTN","RORX015A",231,0)
 . ;--- Skip the patient if not all search criteria have been met
"RTN","RORX015A",232,0)
 . I SKIP  K @RORTMP@("PAT",PTIEN)  Q
"RTN","RORX015A",233,0)
 . ;
"RTN","RORX015A",234,0)
 . ;--- Calculate the patient's totals
"RTN","RORX015A",235,0)
 . S RC=$$TOTALS(PTIEN)
"RTN","RORX015A",236,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX015A",237,0)
 ;---
"RTN","RORX015A",238,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX015A",239,0)
 ;
"RTN","RORX015A",240,0)
 ;***** SORTS THE RESULTS AND COMPILES THE TOTALS
"RTN","RORX015A",241,0)
 ;
"RTN","RORX015A",242,0)
 ; Return Values:
"RTN","RORX015A",243,0)
 ;       <0  Error code
"RTN","RORX015A",244,0)
 ;        0  Ok
"RTN","RORX015A",245,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX015A",246,0)
 ;
"RTN","RORX015A",247,0)
SORT() ;
"RTN","RORX015A",248,0)
 N IEN,SRC,TMP,TNC,TNDC
"RTN","RORX015A",249,0)
 ;---
"RTN","RORX015A",250,0)
 S (TNC,TNDC)=0
"RTN","RORX015A",251,0)
 F SRC="I","O"  D
"RTN","RORX015A",252,0)
 . S IEN=0
"RTN","RORX015A",253,0)
 . F  S IEN=$O(@RORTMP@("PROC",SRC,IEN))  Q:IEN'>0  D
"RTN","RORX015A",254,0)
 . . S TMP=$P($G(@RORTMP@("PROC",SRC,IEN)),U,2)
"RTN","RORX015A",255,0)
 . . S:TMP'="" @RORTMP@("PROC","B",TMP,SRC,IEN)=""
"RTN","RORX015A",256,0)
 . . S TNC=TNC+$G(@RORTMP@("PROC",SRC,IEN,"C"))
"RTN","RORX015A",257,0)
 . . S TNDC=TNDC+1
"RTN","RORX015A",258,0)
 S @RORTMP@("PROC")=TNC_U_TNDC
"RTN","RORX015A",259,0)
 ;---
"RTN","RORX015A",260,0)
 Q 0
"RTN","RORX015A",261,0)
 ;
"RTN","RORX015A",262,0)
 ;***** CALCULATES INTERMEDIATE TOTALS
"RTN","RORX015A",263,0)
 ;
"RTN","RORX015A",264,0)
 ; PTIEN         Patient IEN (DFN)
"RTN","RORX015A",265,0)
 ;
"RTN","RORX015A",266,0)
 ; Return Values:
"RTN","RORX015A",267,0)
 ;       <0  Error code
"RTN","RORX015A",268,0)
 ;        0  Ok
"RTN","RORX015A",269,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX015A",270,0)
 ;
"RTN","RORX015A",271,0)
TOTALS(PTIEN) ;
"RTN","RORX015A",272,0)
 N CNT,CODE,IEN,NAME,PNODE,RC,SRC,TMP,VA,VADM
"RTN","RORX015A",273,0)
 S PNODE=$NA(@RORTMP@("PAT",PTIEN))
"RTN","RORX015A",274,0)
 ;--- Get and store the patient's data
"RTN","RORX015A",275,0)
 D VADEM^RORUTL05(PTIEN,1)
"RTN","RORX015A",276,0)
 S TMP=$S($$PARAM^RORTSK01("PATIENTS","ICN"):$$ICN^RORUTL02(PTIEN),1:"")
"RTN","RORX015A",277,0)
 S @PNODE=VA("BID")_U_VADM(1)_U_$$DATE^RORXU002(VADM(6)\1)_U_TMP
"RTN","RORX015A",278,0)
 S ^("PAT")=$G(@RORTMP@("PAT"))+1 ;naked reference: ^TMP($J,"RORTMP-n") from RORX015
"RTN","RORX015A",279,0)
 ;
"RTN","RORX015A",280,0)
 F SRC="I","O"  D
"RTN","RORX015A",281,0)
 . S IEN=0
"RTN","RORX015A",282,0)
 . F  S IEN=$O(@PNODE@(SRC,IEN))  Q:IEN'>0  D
"RTN","RORX015A",283,0)
 . . S CODE=$P($G(@RORTMP@("PROC",SRC,IEN)),U),NAME=""
"RTN","RORX015A",284,0)
 . . D:CODE=""
"RTN","RORX015A",285,0)
 . . . I SRC="O"  D
"RTN","RORX015A",286,0)
 . . . . S TMP=$$CPT^ICPTCOD(IEN)
"RTN","RORX015A",287,0)
 . . . . S:TMP'<0 CODE=$P(TMP,U,2),NAME=$P(TMP,U,3)
"RTN","RORX015A",288,0)
 . . . E  D
"RTN","RORX015A",289,0)
 . . . . ;S TMP=$$ICDOP^ICDCODE(IEN)
"RTN","RORX015A",290,0)
 . . . . ;S:TMP'<0 CODE=$P(TMP,U,2),NAME=$P(TMP,U,5)
"RTN","RORX015A",291,0)
 . . . . S CODE=$$CODEC^ICDEX(80.1,IEN)
"RTN","RORX015A",292,0)
 . . . . S NAME=$$VSTP^ICDEX(IEN)
"RTN","RORX015A",293,0)
 . . . S:CODE="" CODE="UNKN"
"RTN","RORX015A",294,0)
 . . . S:NAME="" NAME="Unknown ("_IEN_")"
"RTN","RORX015A",295,0)
 . . . S @RORTMP@("PROC",SRC,IEN)=CODE_U_NAME
"RTN","RORX015A",296,0)
 . . ;---
"RTN","RORX015A",297,0)
 . . S CNT=+$G(@PNODE@(SRC,IEN,"C"))
"RTN","RORX015A",298,0)
 . . S ^("C")=$G(@RORTMP@("PROC",SRC,IEN,"C"))+CNT ;naked reference: ^TMP($J,"RORTMP-n") from RORX015
"RTN","RORX015A",299,0)
 . . S ^("P")=$G(@RORTMP@("PROC",SRC,IEN,"P"))+1 ;naked reference: ^TMP($J,"RORTMP-n") from RORX015
"RTN","RORX015A",300,0)
 Q 0
"RTN","RORXU010")
0^5^B14122091
"RTN","RORXU010",1,0)
RORXU010 ;HCOIFO/VC - REPORT MODIFICATON UTILITY ;4/16/09 2:54pm
"RTN","RORXU010",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8,19,25**;Feb 17, 2006;Build 19
"RTN","RORXU010",3,0)
 ;
"RTN","RORXU010",4,0)
 ;Routine builds the ^TMP($J,"RORFLTR" global array that includes
"RTN","RORXU010",5,0)
 ;ICD information from inpatient, outpatient and problem
"RTN","RORXU010",6,0)
 ;list data for the identified patient.
"RTN","RORXU010",7,0)
 ;
"RTN","RORXU010",8,0)
 ;The ICD information that is stored in the ^TMP($J,"RORFLTR"
"RTN","RORXU010",9,0)
 ;global array is then compared to ICD information stored in 
"RTN","RORXU010",10,0)
 ;the RORTSK local array which is established by the calling
"RTN","RORXU010",11,0)
 ;report routine.
"RTN","RORXU010",12,0)
 ;
"RTN","RORXU010",13,0)
 ;This routine returns a status flag indicating whether the
"RTN","RORXU010",14,0)
 ;patient should being included on the calling report.
"RTN","RORXU010",15,0)
 ;
"RTN","RORXU010",16,0)
 ;Format is:
"RTN","RORXU010",17,0)
 ;   ^TMP($J,"RORFLTR",PATIENT IEN,ICD FILE #,ICD IEN)=1
"RTN","RORXU010",18,0)
 ;
"RTN","RORXU010",19,0)
 ;The inputs are:
"RTN","RORXU010",20,0)
 ;   1)  PIEN - Patient's IEN in the registry file (required).
"RTN","RORXU010",21,0)
 ;              Specifically ^RORDATA(798.4,PIEN) and in the 
"RTN","RORXU010",22,0)
 ;              patient file ^DPT(PIEN).
"RTN","RORXU010",23,0)
 ;
"RTN","RORXU010",24,0)
 ;The return code is:
"RTN","RORXU010",25,0)
 ;       RC   - Flag indicating if patient should be retained.
"RTN","RORXU010",26,0)
 ;              1 - Patient should be retained for report.
"RTN","RORXU010",27,0)
 ;              0 - Patient should NOT be retained for report.
"RTN","RORXU010",28,0)
 ;
"RTN","RORXU010",29,0)
 ;ICD information is obtained from 3 different packages:
"RTN","RORXU010",30,0)
 ;   Registration package for patient inpatient diagnosis.
"RTN","RORXU010",31,0)
 ;   Patient Care Encounter package for patient outpatient diagnosis.
"RTN","RORXU010",32,0)
 ;   Problem List package for patient problem list diagnosis.
"RTN","RORXU010",33,0)
 ;   
"RTN","RORXU010",34,0)
 ;This routine uses the following IAs:
"RTN","RORXU010",35,0)
 ;
"RTN","RORXU010",36,0)
 ;#92       ^DGPT(  (controlled)
"RTN","RORXU010",37,0)
 ;#928      ACTIVE^GMPLUTL (controlled)
"RTN","RORXU010",38,0)
 ;#1554     POV^PXAPIIB (controlled)
"RTN","RORXU010",39,0)
 ;#1905     SELECTED^VSIT (controlled)
"RTN","RORXU010",40,0)
 ;#2977     GETFLDS^GMPLEDT3 (controlled)
"RTN","RORXU010",41,0)
 ;#3545     ^DGPT("AAD" (private)
"RTN","RORXU010",42,0)
 ;#6130     PTFICD^DGPTFUT
"RTN","RORXU010",43,0)
 ;
"RTN","RORXU010",44,0)
 ;******************************************************************************
"RTN","RORXU010",45,0)
 ;******************************************************************************
"RTN","RORXU010",46,0)
 ; --- ROUTINE MODIFICATION LOG ---
"RTN","RORXU010",47,0)
 ; 
"RTN","RORXU010",48,0)
 ;PKG/PATCH   DATE       DEVELOPER   MODIFICATION
"RTN","RORXU010",49,0)
 ;----------- ---------- ----------- ----------------------------------------
"RTN","RORXU010",50,0)
 ;ROR*1.5*8   MAR 2010   V CARR      Modified to handle ICD9 filter for
"RTN","RORXU010",51,0)
 ;                                   'include' or 'exclude'.
"RTN","RORXU010",52,0)
 ;ROR*1.5*13  DEC 2010   A SAUNDERS  User can select specific patients, 
"RTN","RORXU010",53,0)
 ;                                   clinics, or divisions for the report.
"RTN","RORXU010",54,0)
 ;ROR*1.5*19  FEB 2012   J SCOTT     Support for ICD-10 Coding System.
"RTN","RORXU010",55,0)
 ;ROR*1.5*19  FEB 2012   J SCOTT     Removed direct read of ^ICD9( global.
"RTN","RORXU010",56,0)
 ;ROR*1.5*19  FEB 2012   J SCOTT     Changed the screening of ICD codes from
"RTN","RORXU010",57,0)
 ;                                   external to internal values.
"RTN","RORXU010",58,0)
 ;ROR*1.5*19  FEB 2012   J SCOTT     Removed obsolete REG parameter from
"RTN","RORXU010",59,0)
 ;                                   ICD entry point.
"RTN","RORXU010",60,0)
 ;ROR*1.5*25  OCT 2014   T KOPP      Added PTF ICD-10 support for 25 diagnoses
"RTN","RORXU010",61,0)
 ; 
"RTN","RORXU010",62,0)
 ;******************************************************************************
"RTN","RORXU010",63,0)
 ;******************************************************************************
"RTN","RORXU010",64,0)
 Q
"RTN","RORXU010",65,0)
 ;
"RTN","RORXU010",66,0)
ICD(PIEN) ;Determine if patient is retained for report based on ICD information.
"RTN","RORXU010",67,0)
 ;
"RTN","RORXU010",68,0)
 K ^TMP($J,"RORFLTR",PIEN)
"RTN","RORXU010",69,0)
 N PATIEN,RORICDIEN
"RTN","RORXU010",70,0)
 S PATIEN=PIEN
"RTN","RORXU010",71,0)
 ;
"RTN","RORXU010",72,0)
 ;Gather INPATIENT ICD information from Registration package file #45 (PTF).
"RTN","RORXU010",73,0)
 N DATE,DGPTREF,ICD1,ICD2,FLDLOC,RORIBUF,FLD
"RTN","RORXU010",74,0)
 ;
"RTN","RORXU010",75,0)
 ;Browse through each inpatient date.
"RTN","RORXU010",76,0)
 S DATE=0
"RTN","RORXU010",77,0)
 F  S DATE=$O(^DGPT("AAD",PATIEN,DATE)) Q:DATE=""  D
"RTN","RORXU010",78,0)
 .;Browse through each PTF (#45) entry for an inpatient date.
"RTN","RORXU010",79,0)
 .S DGPTREF=0
"RTN","RORXU010",80,0)
 .F  S DGPTREF=$O(^DGPT("AAD",PATIEN,DATE,DGPTREF)) Q:DGPTREF=""  D
"RTN","RORXU010",81,0)
 ..;Extract ICD diagnosis codes.
"RTN","RORXU010",82,0)
 ..D PTFICD^DGPTFUT(701,DGPTREF,"",.RORIBUF)
"RTN","RORXU010",83,0)
 ..S FLD="" F  S FLD=$O(RORIBUF(FLD)) Q:FLD=""  I $G(RORIBUF(FLD)) D
"RTN","RORXU010",84,0)
 ... S ^TMP($J,"RORFLTR",PATIEN,80,+RORIBUF(FLD))=1
"RTN","RORXU010",85,0)
 ;
"RTN","RORXU010",86,0)
 ;Gather OUTPATIENT ICD information from Patient Care Encounter package.
"RTN","RORXU010",87,0)
 N VSIEN,TMP,RORVPLST,VPOVREF
"RTN","RORXU010",88,0)
 ;
"RTN","RORXU010",89,0)
 ;Get a list of all VISIT (#9000010) entries for the patient.
"RTN","RORXU010",90,0)
 D SELECTED^VSIT(PATIEN)
"RTN","RORXU010",91,0)
 ;Browse through each returned VISIT entry.
"RTN","RORXU010",92,0)
 S VSIEN=0
"RTN","RORXU010",93,0)
 F  S VSIEN=$O(^TMP("VSIT",$J,VSIEN)) Q:VSIEN=""  D
"RTN","RORXU010",94,0)
 .S TMP=+$O(^TMP("VSIT",$J,VSIEN,"")) Q:TMP'>0
"RTN","RORXU010",95,0)
 .;Get V POV (#9000010.07) entries for a specific VISIT entry.
"RTN","RORXU010",96,0)
 .D POV^PXAPIIB(VSIEN,.RORVPLST)
"RTN","RORXU010",97,0)
 .;Browse through each returned V POV entry.
"RTN","RORXU010",98,0)
 .S VPOVREF=""
"RTN","RORXU010",99,0)
 .F  S VPOVREF=$O(RORVPLST(VPOVREF)) Q:VPOVREF=""  D
"RTN","RORXU010",100,0)
 ..;Extract ICD diagnosis code.
"RTN","RORXU010",101,0)
 ..S RORICDIEN=$P(RORVPLST(VPOVREF),U,1)
"RTN","RORXU010",102,0)
 ..I RORICDIEN'="" S ^TMP($J,"RORFLTR",PATIEN,80,RORICDIEN)=1
"RTN","RORXU010",103,0)
 K ^TMP("VSIT",$J)
"RTN","RORXU010",104,0)
 ;
"RTN","RORXU010",105,0)
 ;Gather PROBLEM LIST ICD information from Problem List package.
"RTN","RORXU010",106,0)
 N RORPLST,PLSTREF,GMPVAMC,GMPROV,PROBNUM
"RTN","RORXU010",107,0)
 ;
"RTN","RORXU010",108,0)
 ;Get a list of all PROBLEM (#9000011) entries for the patient.
"RTN","RORXU010",109,0)
 D ACTIVE^GMPLUTL(PATIEN,.RORPLST)
"RTN","RORXU010",110,0)
 S (GMPVAMC,GMPROV)=0
"RTN","RORXU010",111,0)
 ;Browse through each returned PROBLEM entry.
"RTN","RORXU010",112,0)
 S PROBNUM=0
"RTN","RORXU010",113,0)
 F  S PROBNUM=$O(RORPLST(PROBNUM)) Q:PROBNUM=""  D
"RTN","RORXU010",114,0)
 .S PLSTREF=$G(RORPLST(PROBNUM,0))
"RTN","RORXU010",115,0)
 .Q:PLSTREF'>0
"RTN","RORXU010",116,0)
 .;Extract ICD diagnosis code.
"RTN","RORXU010",117,0)
 .K GMPFLD,GMPORIG
"RTN","RORXU010",118,0)
 .D GETFLDS^GMPLEDT3(PLSTREF)
"RTN","RORXU010",119,0)
 .S RORICDIEN=$P($G(GMPFLD(.01)),U,1)
"RTN","RORXU010",120,0)
 .I RORICDIEN'="" S ^TMP($J,"RORFLTR",PATIEN,80,RORICDIEN)=1
"RTN","RORXU010",121,0)
 .K GMPFLD,GMPORIG
"RTN","RORXU010",122,0)
 ;
"RTN","RORXU010",123,0)
COMPARE ;Determine if patient should be retained or not.
"RTN","RORXU010",124,0)
 ;
"RTN","RORXU010",125,0)
 ;Compare ICD data gathered for patient in ^TMP($J,"RORFLTR"
"RTN","RORXU010",126,0)
 ;with ICD data in RORTSK local array that was established from
"RTN","RORXU010",127,0)
 ;the calling routine.
"RTN","RORXU010",128,0)
 ;
"RTN","RORXU010",129,0)
 N A,B,STOP,X,Y,RC
"RTN","RORXU010",130,0)
 S A="PARAMS",B="ICDFILT",RC=0
"RTN","RORXU010",131,0)
 S X="",STOP="GO"
"RTN","RORXU010",132,0)
 F  S X=$O(RORTSK(A,B,"G",X)) Q:X=""  Q:STOP="STOP"  D
"RTN","RORXU010",133,0)
 .S Y=""
"RTN","RORXU010",134,0)
 .F  S Y=$O(RORTSK(A,B,"G",X,"C",Y)) Q:Y=""  Q:STOP="STOP"  D
"RTN","RORXU010",135,0)
 ..I $D(^TMP($J,"RORFLTR",PATIEN,80,Y))>0 D
"RTN","RORXU010",136,0)
 ...S RC=1,STOP="STOP"
"RTN","RORXU010",137,0)
 K ^TMP($J,"RORFLTR",PATIEN)
"RTN","RORXU010",138,0)
 Q RC
"VER")
8.0^22.0
**INSTALL NAME**
OR*3.0*406
"BLD",9667,0)
OR*3.0*406^ORDER ENTRY/RESULTS REPORTING^0^3150820^y
"BLD",9667,1,0)
^^2^2^3150127^
"BLD",9667,1,1,0)
Sets the ORWRP TIME/OCC LIMITS INDV parameter at the Package level for 
"BLD",9667,1,2,0)
several OE/RR REPORT file entries.
"BLD",9667,4,0)
^9.64PA^^
"BLD",9667,6)
1^
"BLD",9667,6.3)
13
"BLD",9667,"INIT")
POST^ORY406
"BLD",9667,"KRN",0)
^9.67PA^779.2^20
"BLD",9667,"KRN",.4,0)
.4
"BLD",9667,"KRN",.401,0)
.401
"BLD",9667,"KRN",.402,0)
.402
"BLD",9667,"KRN",.403,0)
.403
"BLD",9667,"KRN",.5,0)
.5
"BLD",9667,"KRN",.84,0)
.84
"BLD",9667,"KRN",3.6,0)
3.6
"BLD",9667,"KRN",3.8,0)
3.8
"BLD",9667,"KRN",9.2,0)
9.2
"BLD",9667,"KRN",9.8,0)
9.8
"BLD",9667,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",9667,"KRN",9.8,"NM",1,0)
ORY406^^0^B6519234
"BLD",9667,"KRN",9.8,"NM","B","ORY406",1)

"BLD",9667,"KRN",19,0)
19
"BLD",9667,"KRN",19.1,0)
19.1
"BLD",9667,"KRN",101,0)
101
"BLD",9667,"KRN",409.61,0)
409.61
"BLD",9667,"KRN",771,0)
771
"BLD",9667,"KRN",779.2,0)
779.2
"BLD",9667,"KRN",870,0)
870
"BLD",9667,"KRN",8989.51,0)
8989.51
"BLD",9667,"KRN",8989.52,0)
8989.52
"BLD",9667,"KRN",8994,0)
8994
"BLD",9667,"KRN","B",.4,.4)

"BLD",9667,"KRN","B",.401,.401)

"BLD",9667,"KRN","B",.402,.402)

"BLD",9667,"KRN","B",.403,.403)

"BLD",9667,"KRN","B",.5,.5)

"BLD",9667,"KRN","B",.84,.84)

"BLD",9667,"KRN","B",3.6,3.6)

"BLD",9667,"KRN","B",3.8,3.8)

"BLD",9667,"KRN","B",9.2,9.2)

"BLD",9667,"KRN","B",9.8,9.8)

"BLD",9667,"KRN","B",19,19)

"BLD",9667,"KRN","B",19.1,19.1)

"BLD",9667,"KRN","B",101,101)

"BLD",9667,"KRN","B",409.61,409.61)

"BLD",9667,"KRN","B",771,771)

"BLD",9667,"KRN","B",779.2,779.2)

"BLD",9667,"KRN","B",870,870)

"BLD",9667,"KRN","B",8989.51,8989.51)

"BLD",9667,"KRN","B",8989.52,8989.52)

"BLD",9667,"KRN","B",8994,8994)

"BLD",9667,"QUES",0)
^9.62^^
"BLD",9667,"REQB",0)
^9.611^^
"INIT")
POST^ORY406
"MBREQ")
0
"PKG",188,-1)
1^1
"PKG",188,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",188,22,0)
^9.49I^1^1
"PKG",188,22,1,0)
3.0^2971217^2981113^1
"PKG",188,22,1,"PAH",1,0)
406^3150820^520736461
"PKG",188,22,1,"PAH",1,1,0)
^^2^2^3150820
"PKG",188,22,1,"PAH",1,1,1,0)
Sets the ORWRP TIME/OCC LIMITS INDV parameter at the Package level for 
"PKG",188,22,1,"PAH",1,1,2,0)
several OE/RR REPORT file entries.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","ORY406")
0^1^B6519234
"RTN","ORY406",1,0)
ORY406 ;SLC/WAT - POST INSTALL ;01/27/15  12:57
"RTN","ORY406",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**406**;Dec 17, 1997;Build 13
"RTN","ORY406",3,0)
 ;ICR - B/MES^XPDUTL - 10141,  EN^XPAR - 2263
"RTN","ORY406",4,0)
 ;;GMTS*2.7*111 modifies health summary components for ICD-10 to expand the maximum ICD code/occurrence from 10 to 25.
"RTN","ORY406",5,0)
 ;;This patch sets ORWRP TIME/OCC LIMITS INDV at the PACKAGE level so that OE/RR reports that use the same components
"RTN","ORY406",6,0)
 ;;will also display 25 ICD-10 codes.
"RTN","ORY406",7,0)
 ;
"RTN","ORY406",8,0)
POST ; post-init
"RTN","ORY406",9,0)
 N ORMSG,ORERRFLG
"RTN","ORY406",10,0)
 S ORMSG(1)="This patch will establish a default value at the PACKAGE level"
"RTN","ORY406",11,0)
 S ORMSG(2)="for the ORWRP TIME/OCC LIMITS INDV parameter."
"RTN","ORY406",12,0)
 S ORMSG(2.5)="The value shall be: T-7;T;25"
"RTN","ORY406",13,0)
 S ORMSG(3)="These reports in OE/RR REPORT (#101.24) are affected:"
"RTN","ORY406",14,0)
 S ORMSG(4)="ORRPW ADT ADM DC"
"RTN","ORY406",15,0)
 S ORMSG(5)="ORRPW ADT DC DIAG"
"RTN","ORY406",16,0)
 S ORMSG(6)="ORRPW ADT EXP"
"RTN","ORY406",17,0)
 S ORMSG(7)="ORRPW ADT ICD PROC"
"RTN","ORY406",18,0)
 S ORMSG(8)="ORRPW ADT ICD SURG"
"RTN","ORY406",19,0)
 S ORMSG(9)="ORRPW DOD ADT EXP"
"RTN","ORY406",20,0)
 D BMES^XPDUTL(.ORMSG)
"RTN","ORY406",21,0)
 D SETPARAM
"RTN","ORY406",22,0)
 D:$G(ORERRFLG)=1 HELP
"RTN","ORY406",23,0)
 Q
"RTN","ORY406",24,0)
 ;
"RTN","ORY406",25,0)
SETPARAM ;set param value
"RTN","ORY406",26,0)
 N ORRPT,ORERR,ORVAL,ORI,ORRPID
"RTN","ORY406",27,0)
 S ORVAL="T-7;T;25"
"RTN","ORY406",28,0)
 F ORI=1:1 S ORRPT=$T(REPORT+ORI) Q:ORRPT["EOF"  D
"RTN","ORY406",29,0)
 .S ORRPT=$P(ORRPT,";;",2)
"RTN","ORY406",30,0)
 .S ORRPID=$O(^ORD(101.24,"B",ORRPT,"")) I +$G(ORRPID)'>0 D BMES^XPDUTL("   "_ORRPT_" NOT FOUND!!!") S ORERRFLG=1 Q
"RTN","ORY406",31,0)
 .D EN^XPAR("PKG","ORWRP TIME/OCC LIMITS INDV",ORRPID,ORVAL,.ORERR)
"RTN","ORY406",32,0)
 .I $G(ORERR)>0 D BMES^XPDUTL("Error setting parameter: "_$P(ORERR,"^",2)) S ORERRFLG=1 Q
"RTN","ORY406",33,0)
 .D BMES^XPDUTL(ORRPT_" complete.")
"RTN","ORY406",34,0)
 Q
"RTN","ORY406",35,0)
 ;
"RTN","ORY406",36,0)
REPORT ; list of OR reports to set parameter
"RTN","ORY406",37,0)
 ;;ORRPW ADT ADM DC
"RTN","ORY406",38,0)
 ;;ORRPW ADT DC DIAG
"RTN","ORY406",39,0)
 ;;ORRPW ADT EXP
"RTN","ORY406",40,0)
 ;;ORRPW ADT ICD PROC
"RTN","ORY406",41,0)
 ;;ORRPW ADT ICD SURG
"RTN","ORY406",42,0)
 ;;ORRPW DOD ADT EXP
"RTN","ORY406",43,0)
 ;;EOF
"RTN","ORY406",44,0)
 Q
"RTN","ORY406",45,0)
 ;
"RTN","ORY406",46,0)
HELP ; help message
"RTN","ORY406",47,0)
 N ORHLPMSG
"RTN","ORY406",48,0)
 S ORHLPMSG(1)=""
"RTN","ORY406",49,0)
 S ORHLPMSG(2)="For any errors associated with missing parameters or missing reports,"
"RTN","ORY406",50,0)
 S ORHLPMSG(3)="please submit a Remedy ticket for assistance."
"RTN","ORY406",51,0)
 D BMES^XPDUTL(.ORHLPMSG)
"RTN","ORY406",52,0)
 Q
"VER")
8.0^22.0
**END**
**END**
