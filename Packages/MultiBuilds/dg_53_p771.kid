KIDS Distribution saved on Dec 07, 2007@13:11:15
V2 12/7/07
**KIDS**:DG*5.3*771^IVM*2.0*127^

**INSTALL NAME**
DG*5.3*771
"BLD",7096,0)
DG*5.3*771^REGISTRATION^0^3071207^y
"BLD",7096,1,0)
^^1^1^3071030^
"BLD",7096,1,1,0)
DISABLE SOME Z07 CONSISTENCY CHECKS
"BLD",7096,4,0)
^9.64PA^^
"BLD",7096,6.3)
5
"BLD",7096,"ABNS",0)
^9.66A^1^1
"BLD",7096,"ABNS",1,0)
DG
"BLD",7096,"ABNS",1,1,0)
^9.661A^^
"BLD",7096,"ABNS","B","DG",1)

"BLD",7096,"ABPKG")
n^n
"BLD",7096,"INIT")
EN^DG53771P
"BLD",7096,"KRN",0)
^9.67PA^8989.52^19
"BLD",7096,"KRN",.4,0)
.4
"BLD",7096,"KRN",.401,0)
.401
"BLD",7096,"KRN",.402,0)
.402
"BLD",7096,"KRN",.403,0)
.403
"BLD",7096,"KRN",.5,0)
.5
"BLD",7096,"KRN",.84,0)
.84
"BLD",7096,"KRN",3.6,0)
3.6
"BLD",7096,"KRN",3.8,0)
3.8
"BLD",7096,"KRN",9.2,0)
9.2
"BLD",7096,"KRN",9.8,0)
9.8
"BLD",7096,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",7096,"KRN",9.8,"NM",1,0)
DG53771P^^0^B739719
"BLD",7096,"KRN",9.8,"NM","B","DG53771P",1)

"BLD",7096,"KRN",19,0)
19
"BLD",7096,"KRN",19.1,0)
19.1
"BLD",7096,"KRN",101,0)
101
"BLD",7096,"KRN",409.61,0)
409.61
"BLD",7096,"KRN",771,0)
771
"BLD",7096,"KRN",870,0)
870
"BLD",7096,"KRN",8989.51,0)
8989.51
"BLD",7096,"KRN",8989.52,0)
8989.52
"BLD",7096,"KRN",8994,0)
8994
"BLD",7096,"KRN","B",.4,.4)

"BLD",7096,"KRN","B",.401,.401)

"BLD",7096,"KRN","B",.402,.402)

"BLD",7096,"KRN","B",.403,.403)

"BLD",7096,"KRN","B",.5,.5)

"BLD",7096,"KRN","B",.84,.84)

"BLD",7096,"KRN","B",3.6,3.6)

"BLD",7096,"KRN","B",3.8,3.8)

"BLD",7096,"KRN","B",9.2,9.2)

"BLD",7096,"KRN","B",9.8,9.8)

"BLD",7096,"KRN","B",19,19)

"BLD",7096,"KRN","B",19.1,19.1)

"BLD",7096,"KRN","B",101,101)

"BLD",7096,"KRN","B",409.61,409.61)

"BLD",7096,"KRN","B",771,771)

"BLD",7096,"KRN","B",870,870)

"BLD",7096,"KRN","B",8989.51,8989.51)

"BLD",7096,"KRN","B",8989.52,8989.52)

"BLD",7096,"KRN","B",8994,8994)

"BLD",7096,"QUES",0)
^9.62^^
"BLD",7096,"REQB",0)
^9.611^1^1
"BLD",7096,"REQB",1,0)
DG*5.3*653^2
"BLD",7096,"REQB","B","DG*5.3*653",1)

"INIT")
EN^DG53771P
"MBREQ")
0
"PKG",47,-1)
1^1
"PKG",47,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",47,20,0)
^9.402P^^
"PKG",47,22,0)
^9.49I^1^1
"PKG",47,22,1,0)
5.3^2930813^2960613
"PKG",47,22,1,"PAH",1,0)
771^3071207
"PKG",47,22,1,"PAH",1,1,0)
^^1^1^3071207
"PKG",47,22,1,"PAH",1,1,1,0)
DISABLE SOME Z07 CONSISTENCY CHECKS
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","DG53771P")
0^1^B739719
"RTN","DG53771P",1,0)
DG53771P ;ALB/ERC - Patch DG53771P Post Install ;10/30/07
"RTN","DG53771P",2,0)
 ;;5.3;Registration;**771**;AUG 13, 1995;Build 5
"RTN","DG53771P",3,0)
 ;
"RTN","DG53771P",4,0)
 Q
"RTN","DG53771P",5,0)
EN ; This routine will update the USE FOR Z07 CHECK field #6
"RTN","DG53771P",6,0)
 ; in the INCONSISTENT DATA ELEMENTS file #38.6 for CC 
"RTN","DG53771P",7,0)
 ; 75, 76, 78, 306, 307 and 409
"RTN","DG53771P",8,0)
 N RULE,DA,DIE,DR
"RTN","DG53771P",9,0)
 F RULE=75,76,78,306,307,409 D
"RTN","DG53771P",10,0)
 .D BMES^XPDUTL("Modifying entry #"_RULE_" in 38.6 file.")
"RTN","DG53771P",11,0)
 .S DIE=38.6,DA=$$FIND1^DIC(DIE,"","X",RULE)
"RTN","DG53771P",12,0)
 .I 'DA D  Q
"RTN","DG53771P",13,0)
 ..D MES^XPDUTL("    *** Entry not found! Nothing Updated!! ***") Q
"RTN","DG53771P",14,0)
 .S DR="6////0" D ^DIE
"RTN","DG53771P",15,0)
 .D MES^XPDUTL("    *** Update Complete ***")
"RTN","DG53771P",16,0)
 D BMES^XPDUTL("")
"RTN","DG53771P",17,0)
 Q
"VER")
8.0^22.0
**INSTALL NAME**
IVM*2.0*127
"BLD",7097,0)
IVM*2.0*127^INCOME VERIFICATION MATCH^0^3071207^y
"BLD",7097,4,0)
^9.64PA^^
"BLD",7097,6.3)
6
"BLD",7097,"ABNS",0)
^9.66A^1^1
"BLD",7097,"ABNS",1,0)
IVM
"BLD",7097,"ABNS",1,1,0)
^9.661A^^
"BLD",7097,"ABNS","B","IVM",1)

"BLD",7097,"ABPKG")
n^n
"BLD",7097,"KRN",0)
^9.67PA^8989.52^19
"BLD",7097,"KRN",.4,0)
.4
"BLD",7097,"KRN",.401,0)
.401
"BLD",7097,"KRN",.402,0)
.402
"BLD",7097,"KRN",.403,0)
.403
"BLD",7097,"KRN",.5,0)
.5
"BLD",7097,"KRN",.84,0)
.84
"BLD",7097,"KRN",3.6,0)
3.6
"BLD",7097,"KRN",3.8,0)
3.8
"BLD",7097,"KRN",9.2,0)
9.2
"BLD",7097,"KRN",9.8,0)
9.8
"BLD",7097,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",7097,"KRN",9.8,"NM",1,0)
IVMZ7CR^^0^B68810098
"BLD",7097,"KRN",9.8,"NM",2,0)
IVMZ7CD^^0^B18262093
"BLD",7097,"KRN",9.8,"NM",3,0)
IVMZ7CE^^0^B3827377
"BLD",7097,"KRN",9.8,"NM","B","IVMZ7CD",2)

"BLD",7097,"KRN",9.8,"NM","B","IVMZ7CE",3)

"BLD",7097,"KRN",9.8,"NM","B","IVMZ7CR",1)

"BLD",7097,"KRN",19,0)
19
"BLD",7097,"KRN",19,"NM",0)
^9.68A^^
"BLD",7097,"KRN",19.1,0)
19.1
"BLD",7097,"KRN",101,0)
101
"BLD",7097,"KRN",409.61,0)
409.61
"BLD",7097,"KRN",771,0)
771
"BLD",7097,"KRN",870,0)
870
"BLD",7097,"KRN",8989.51,0)
8989.51
"BLD",7097,"KRN",8989.52,0)
8989.52
"BLD",7097,"KRN",8994,0)
8994
"BLD",7097,"KRN","B",.4,.4)

"BLD",7097,"KRN","B",.401,.401)

"BLD",7097,"KRN","B",.402,.402)

"BLD",7097,"KRN","B",.403,.403)

"BLD",7097,"KRN","B",.5,.5)

"BLD",7097,"KRN","B",.84,.84)

"BLD",7097,"KRN","B",3.6,3.6)

"BLD",7097,"KRN","B",3.8,3.8)

"BLD",7097,"KRN","B",9.2,9.2)

"BLD",7097,"KRN","B",9.8,9.8)

"BLD",7097,"KRN","B",19,19)

"BLD",7097,"KRN","B",19.1,19.1)

"BLD",7097,"KRN","B",101,101)

"BLD",7097,"KRN","B",409.61,409.61)

"BLD",7097,"KRN","B",771,771)

"BLD",7097,"KRN","B",870,870)

"BLD",7097,"KRN","B",8989.51,8989.51)

"BLD",7097,"KRN","B",8989.52,8989.52)

"BLD",7097,"KRN","B",8994,8994)

"BLD",7097,"QUES",0)
^9.62^^
"BLD",7097,"REQB",0)
^9.611^1^1
"BLD",7097,"REQB",1,0)
IVM*2.0*105^2
"BLD",7097,"REQB","B","IVM*2.0*105",1)

"MBREQ")
0
"PKG",120,-1)
1^1
"PKG",120,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",120,20,0)
^9.402P^^
"PKG",120,22,0)
^9.49I^1^1
"PKG",120,22,1,0)
2.0^2941021^2960823
"PKG",120,22,1,"PAH",1,0)
127^3071207
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","IVMZ7CD")
0^2^B18262093
"RTN","IVMZ7CD",1,0)
IVMZ7CD ;CKN,BAJ,ERC - HL7 Z07 CONSISTENCY CHECKER -- DEMOGRAPHIC SUBROUTINE ; 9/27/2006
"RTN","IVMZ7CD",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**105,127**;JUL 8,1996;Build 6
"RTN","IVMZ7CD",3,0)
 ;
"RTN","IVMZ7CD",4,0)
 ; Demographic Consistency Checks
"RTN","IVMZ7CD",5,0)
 ; This routine will be called from driver routine and it checks the
"RTN","IVMZ7CD",6,0)
 ; various elements of Person demographic information prior to
"RTN","IVMZ7CD",7,0)
 ; building a Z07 record. Any test which fails consistency check will
"RTN","IVMZ7CD",8,0)
 ; be saved in file 38.6 INCONSISTENT DATA ELEMENT record for Person.
"RTN","IVMZ7CD",9,0)
 ;
"RTN","IVMZ7CD",10,0)
 ;It is all facade
"RTN","IVMZ7CD",11,0)
 Q
"RTN","IVMZ7CD",12,0)
 ;
"RTN","IVMZ7CD",13,0)
EN(DFN,DGP,DGSD) ;Entry point
"RTN","IVMZ7CD",14,0)
 ;  input:  DFN - Patient IEN
"RTN","IVMZ7CD",15,0)
 ;          DGP - Patient data array
"RTN","IVMZ7CD",16,0)
 ;         DGSD - Spouse and Dependent data array
"RTN","IVMZ7CD",17,0)
 ; output: ^TMP($J,DFN,RULE) global
"RTN","IVMZ7CD",18,0)
 ;          DFN - Patient IEN
"RTN","IVMZ7CD",19,0)
 ;         RULE - Consistency rule #
"RTN","IVMZ7CD",20,0)
 ;initializing variables
"RTN","IVMZ7CD",21,0)
 N RULE,Y,X,FILERR
"RTN","IVMZ7CD",22,0)
 ;
"RTN","IVMZ7CD",23,0)
 ; loop through rules in INCONSISTENT DATA ELEMENTS file.
"RTN","IVMZ7CD",24,0)
 ; execute only the rules where CHECK/DON'T CHECK and INCLUDE IN Z07
"RTN","IVMZ7CD",25,0)
 ; CHECKS fields are turned ON.
"RTN","IVMZ7CD",26,0)
 ; 
"RTN","IVMZ7CD",27,0)
 ; ***NOTE loop boundary (301-311) must be changed if rule numbers
"RTN","IVMZ7CD",28,0)
 ; are added ***
"RTN","IVMZ7CD",29,0)
 F RULE=301:1:312 I $D(^DGIN(38.6,RULE)) D
"RTN","IVMZ7CD",30,0)
 . S Y=^DGIN(38.6,RULE,0)
"RTN","IVMZ7CD",31,0)
 . I '$P(Y,"^",5),$P(Y,"^",6) D @RULE
"RTN","IVMZ7CD",32,0)
 I $D(FILERR) M ^TMP($J,DFN)=FILERR
"RTN","IVMZ7CD",33,0)
 Q
"RTN","IVMZ7CD",34,0)
 ;
"RTN","IVMZ7CD",35,0)
301 ; PERSON LASTNAME REQUIRED
"RTN","IVMZ7CD",36,0)
 S X=$P($G(DGP("NAME",1)),U) I X="" S FILERR(RULE)=""
"RTN","IVMZ7CD",37,0)
 I '$D(DGSD("DEP")) Q
"RTN","IVMZ7CD",38,0)
 S RIEN=0 F  S RIEN=$O(DGSD("DEP",RIEN)) Q:RIEN=""  D
"RTN","IVMZ7CD",39,0)
 . S X=$P(DGSD("DEP",RIEN,0),U)
"RTN","IVMZ7CD",40,0)
 . S X=$P(X,",") I X="" S FILERR(RULE)=""
"RTN","IVMZ7CD",41,0)
 Q
"RTN","IVMZ7CD",42,0)
 ;
"RTN","IVMZ7CD",43,0)
302 ; DATE OF BIRTH REQUIRED - Duplicate with #4
"RTN","IVMZ7CD",44,0)
 Q  ;This tag needs to be removed after its placement in IVMZ7CR
"RTN","IVMZ7CD",45,0)
 S X=$P($G(DGP("PAT",0)),U,3) I X="" S FILERR(RULE)=""
"RTN","IVMZ7CD",46,0)
 I '$D(DGSD("DEP")) Q
"RTN","IVMZ7CD",47,0)
 S RIEN=0 F  S RIEN=$O(DGSD("DEP",RIEN)) Q:RIEN=""  D
"RTN","IVMZ7CD",48,0)
 . S X=$P(DGSD("DEP",RIEN,0),U,3) I X="" S FILERR(RULE)=""
"RTN","IVMZ7CD",49,0)
 Q
"RTN","IVMZ7CD",50,0)
 ;
"RTN","IVMZ7CD",51,0)
303 ; GENDER REQUIRED
"RTN","IVMZ7CD",52,0)
 S X=$P($G(DGP("PAT",0)),U,2) I X="" S FILERR(RULE)=""
"RTN","IVMZ7CD",53,0)
 I '$D(DGSD("DEP")) Q
"RTN","IVMZ7CD",54,0)
 S RIEN=0 F  S RIEN=$O(DGSD("DEP",RIEN)) Q:RIEN=""  D
"RTN","IVMZ7CD",55,0)
 . S X=$P(DGSD("DEP",RIEN,0),U,2) I X="" S FILERR(RULE)=""
"RTN","IVMZ7CD",56,0)
 Q
"RTN","IVMZ7CD",57,0)
 ;
"RTN","IVMZ7CD",58,0)
304 ; GENDER INVALID
"RTN","IVMZ7CD",59,0)
 S X=$P($G(DGP("PAT",0)),U,2) I X]"",X'="M",X'="F" S FILERR(RULE)=""
"RTN","IVMZ7CD",60,0)
 I '$D(DGSD("DEP")) Q
"RTN","IVMZ7CD",61,0)
 S RIEN=0 F  S RIEN=$O(DGSD("DEP",RIEN)) Q:RIEN=""  D
"RTN","IVMZ7CD",62,0)
 . S X=$P(DGSD("DEP",RIEN,0),U,2)
"RTN","IVMZ7CD",63,0)
 . I X]"",X'="M",X'="F" S FILERR(RULE)=""
"RTN","IVMZ7CD",64,0)
 Q
"RTN","IVMZ7CD",65,0)
 ;
"RTN","IVMZ7CD",66,0)
305 ; VETERAN SSN MISSING - Duplicate with #7
"RTN","IVMZ7CD",67,0)
 Q  ;This tag needs to be removed after its placement in IVMZ7CR
"RTN","IVMZ7CD",68,0)
 S X=$P($G(DGP("PAT",0)),U,9) I X="" S FILERR(RULE)=""
"RTN","IVMZ7CD",69,0)
 Q
"RTN","IVMZ7CD",70,0)
 ;
"RTN","IVMZ7CD",71,0)
306 ; VALID SSN/PSEUDO SSN REQUIRED, turned off with DG*5.3*771
"RTN","IVMZ7CD",72,0)
 N Z
"RTN","IVMZ7CD",73,0)
 S X=$P($G(DGP("PAT",0)),U,9)
"RTN","IVMZ7CD",74,0)
 Q:X=""  ;quit if no SSN
"RTN","IVMZ7CD",75,0)
 Q:$E(X,$L(X))="P"       ;quit if SSN is a Pseudo
"RTN","IVMZ7CD",76,0)
 I $E(X,1,5)="00000" S FILERR(RULE)="" ;First 5 number are zero
"RTN","IVMZ7CD",77,0)
 S $P(Z,$E(X),9)=$E(X) I X=Z S FILERR(RULE)="" ;all numbers are same
"RTN","IVMZ7CD",78,0)
 I $E(X,1,3)="000" S FILERR(RULE)="" ;First 3 digits are zeros
"RTN","IVMZ7CD",79,0)
 I $E(X,4,5)="00" S FILERR(RULE)="" ;4th & 5th are zeros
"RTN","IVMZ7CD",80,0)
 I $E(X,6,9)="0000" S FILERR(RULE)="" ;Last 4 digits are zeros
"RTN","IVMZ7CD",81,0)
 I X=123456789 S FILERR(RULE)="" ;SSN is 123456789
"RTN","IVMZ7CD",82,0)
 I X>728999999 S FILERR(RULE)="" ;SSN is greater than 728999999
"RTN","IVMZ7CD",83,0)
 Q
"RTN","IVMZ7CD",84,0)
 ;
"RTN","IVMZ7CD",85,0)
307 ; PSEUDO SSN REASON REQUIRED, turned off with DG*5.3*771
"RTN","IVMZ7CD",86,0)
 S X=$P($G(DGP("PAT",0)),U,9)
"RTN","IVMZ7CD",87,0)
 I X]"",X["P",$P($G(DGP("PAT","SSN")),U)="" S FILERR(RULE)=""
"RTN","IVMZ7CD",88,0)
 I '$D(DGSD("DEP")) Q
"RTN","IVMZ7CD",89,0)
 S RIEN=0 F  S RIEN=$O(DGSD("DEP",RIEN)) Q:RIEN=""  D
"RTN","IVMZ7CD",90,0)
 . S X=$P(DGSD("DEP",RIEN,0),U,9)
"RTN","IVMZ7CD",91,0)
 . I X]"",X["P",$P(DGSD("DEP",RIEN,0),U,10)="" S FILERR(RULE)=""
"RTN","IVMZ7CD",92,0)
 Q
"RTN","IVMZ7CD",93,0)
 ;
"RTN","IVMZ7CD",94,0)
308 ; DATE OF DEATH BEFORE DOB
"RTN","IVMZ7CD",95,0)
 S X=$P($G(DGP("PAT",.35)),U) I X']"" Q
"RTN","IVMZ7CD",96,0)
 I X<$P($G(DGP("PAT",0)),U,3) S FILERR(RULE)=""
"RTN","IVMZ7CD",97,0)
 Q
"RTN","IVMZ7CD",98,0)
 ;
"RTN","IVMZ7CD",99,0)
309 ; PATIENT RELATIONSHIP INVALID
"RTN","IVMZ7CD",100,0)
 N DEPSEX,RELSEX,DEPREL
"RTN","IVMZ7CD",101,0)
 I '$D(DGSD("DEP")) Q
"RTN","IVMZ7CD",102,0)
 S RIEN=0 F  S RIEN=$O(DGSD("DEP",RIEN)) Q:RIEN=""  D
"RTN","IVMZ7CD",103,0)
 . S DEPREL=$G(DGSD("DEP",RIEN))
"RTN","IVMZ7CD",104,0)
 . I DEPREL="" S FILERR(RULE)="" Q
"RTN","IVMZ7CD",105,0)
 . I '$D(^DG(408.11,DEPREL)) S FILERR(RULE)="" Q
"RTN","IVMZ7CD",106,0)
 . S DEPSEX=$P(DGSD("DEP",RIEN,0),U,2)
"RTN","IVMZ7CD",107,0)
 . S RELSEX=$P(^DG(408.11,DEPREL,0),U,3)
"RTN","IVMZ7CD",108,0)
 . I RELSEX="E" Q  ;Gender for relation can be either
"RTN","IVMZ7CD",109,0)
 . I DEPSEX'=RELSEX S FILERR(RULE)=""
"RTN","IVMZ7CD",110,0)
 Q
"RTN","IVMZ7CD",111,0)
 ;
"RTN","IVMZ7CD",112,0)
310 ; DEPENDENT EFF. DATE REQUIRED
"RTN","IVMZ7CD",113,0)
 I '$D(DGSD("DEP")) Q
"RTN","IVMZ7CD",114,0)
 S RIEN=0 F  S RIEN=$O(DGSD("DEP",RIEN)) Q:RIEN=""  D
"RTN","IVMZ7CD",115,0)
 . S X=$G(DGSD("DEP",RIEN,"EFF")) I 'X S FILERR(RULE)=""
"RTN","IVMZ7CD",116,0)
 Q
"RTN","IVMZ7CD",117,0)
 ;
"RTN","IVMZ7CD",118,0)
311 ; DATE OF DEATH IS FUTURE DATE - Duplicate with #16
"RTN","IVMZ7CD",119,0)
 Q  ;This tag needs to be removed after its placement in IVMZ7CR
"RTN","IVMZ7CD",120,0)
 S X=$P($G(DGP("PAT",.35)),U)
"RTN","IVMZ7CD",121,0)
 I X]"",X>$$NOW^XLFDT() S FILERR(RULE)=""
"RTN","IVMZ7CD",122,0)
 Q
"RTN","IVMZ7CD",123,0)
 ;
"RTN","IVMZ7CD",124,0)
312 ; PERSON MUST HAVE NATIONAL ICN
"RTN","IVMZ7CD",125,0)
 I $$GETICN^MPIF001(DFN)<0 S FILERR(RULE)="" Q  ;No ICN
"RTN","IVMZ7CD",126,0)
 I $$IFLOCAL^MPIF001(DFN)=1 S FILERR(RULE)=""  ;Not National ICN
"RTN","IVMZ7CD",127,0)
 Q
"RTN","IVMZ7CD",128,0)
 ;
"RTN","IVMZ7CE")
0^3^B3827377
"RTN","IVMZ7CE",1,0)
IVMZ7CE ;TDM,BAJ,ERC - HL7 Z07 CONSISTENCY CHECKER -- SERVICE SUBROUTINE ; 12/4/07 2:56pm
"RTN","IVMZ7CE",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**105,127**;JUL 8,1996;Build 6
"RTN","IVMZ7CE",3,0)
 ;
"RTN","IVMZ7CE",4,0)
 ; Eligibility Consistency Checks
"RTN","IVMZ7CE",5,0)
 ; This routine checks the various elements of service information
"RTN","IVMZ7CE",6,0)
 ; prior to building a Z07 record.  Any tests which fail consistency
"RTN","IVMZ7CE",7,0)
 ; check will be saved to the ^DGIN(38.6 record for the patient.
"RTN","IVMZ7CE",8,0)
 ;
"RTN","IVMZ7CE",9,0)
 ; Must be called from entry point
"RTN","IVMZ7CE",10,0)
 Q
"RTN","IVMZ7CE",11,0)
 ;
"RTN","IVMZ7CE",12,0)
EN(DFN,DGP) ; entry point.  Patient DFN is sent from calling routine.
"RTN","IVMZ7CE",13,0)
 ; initialize working variables
"RTN","IVMZ7CE",14,0)
 N RULE,Y,X,FILERR
"RTN","IVMZ7CE",15,0)
 ;
"RTN","IVMZ7CE",16,0)
 ; loop through rules in INCONSISTENT DATA ELEMENTS file.
"RTN","IVMZ7CE",17,0)
 ; execute only the rules where CHECK/DON'T CHECK and INCLUDE IN Z07
"RTN","IVMZ7CE",18,0)
 ; CHECKS fields are turned ON.
"RTN","IVMZ7CE",19,0)
 ;
"RTN","IVMZ7CE",20,0)
 ; ***NOTE loop boundary (401-413) must be changed if rule numbers
"RTN","IVMZ7CE",21,0)
 ; are added ***
"RTN","IVMZ7CE",22,0)
 F RULE=401:1:413 I $D(^DGIN(38.6,RULE)) D
"RTN","IVMZ7CE",23,0)
 . S Y=^DGIN(38.6,RULE,0)
"RTN","IVMZ7CE",24,0)
 . I '$P(Y,U,5),$P(Y,U,6) D @RULE
"RTN","IVMZ7CE",25,0)
 I $D(FILERR) M ^TMP($J,DFN)=FILERR
"RTN","IVMZ7CE",26,0)
 Q
"RTN","IVMZ7CE",27,0)
 ;
"RTN","IVMZ7CE",28,0)
401 ; RATED INCOMPETENT INVALID
"RTN","IVMZ7CE",29,0)
 S X=$P(DGP("PAT",.29),U,12) I (X'="")&(X'=0)&(X'=1) S FILERR(RULE)=""
"RTN","IVMZ7CE",30,0)
 Q
"RTN","IVMZ7CE",31,0)
 ;
"RTN","IVMZ7CE",32,0)
402 ; ELIGIBLE FOR MEDICAID INVALID
"RTN","IVMZ7CE",33,0)
 S X=$P(DGP("PAT",.38),U) I (X'="")&(X'=0)&(X'=1) S FILERR(RULE)=""
"RTN","IVMZ7CE",34,0)
 Q
"RTN","IVMZ7CE",35,0)
 ;
"RTN","IVMZ7CE",36,0)
403 ; DT MEDICAID LAST ASKED INVALID
"RTN","IVMZ7CE",37,0)
 I $P(DGP("PAT",.38),U)=1,$P(DGP("PAT",.38),U,2)<1 S FILERR(RULE)=""
"RTN","IVMZ7CE",38,0)
 Q
"RTN","IVMZ7CE",39,0)
 ;
"RTN","IVMZ7CE",40,0)
404 ; INELIGIBLE REASON INVALID
"RTN","IVMZ7CE",41,0)
 ; Note: RULE #15 in IVMZ7CR is a duplicate of this rule
"RTN","IVMZ7CE",42,0)
 Q
"RTN","IVMZ7CE",43,0)
 ;
"RTN","IVMZ7CE",44,0)
405 ; NON VETERAN ELIG CODE INVALID
"RTN","IVMZ7CE",45,0)
 ; Note: RULE #60 in IVMZ7CR is a duplicate of this rule
"RTN","IVMZ7CE",46,0)
 Q
"RTN","IVMZ7CE",47,0)
 ;
"RTN","IVMZ7CE",48,0)
406 ; CLAIM FOLDER NUMBER INVALID
"RTN","IVMZ7CE",49,0)
 S X=$P(DGP("PAT",.31),U,3)
"RTN","IVMZ7CE",50,0)
 I X'="",$P(DGP("PAT",0),U,9)'=X,(($L(X)>8)!($L(X)<7)) S FILERR(RULE)=""
"RTN","IVMZ7CE",51,0)
 Q
"RTN","IVMZ7CE",52,0)
 ;
"RTN","IVMZ7CE",53,0)
407 ; ELIGIBILITY STATUS INVALID
"RTN","IVMZ7CE",54,0)
 S X=$P(DGP("PAT",.361),U) I (X'="")&(X'="P")&(X'="R")&(X'="V") S FILERR(RULE)=""
"RTN","IVMZ7CE",55,0)
 Q
"RTN","IVMZ7CE",56,0)
 ;
"RTN","IVMZ7CE",57,0)
408 ; DECLINE TO GIVE INCOME INVALID
"RTN","IVMZ7CE",58,0)
 ; This CC removed per customer 05/08/2006 -- BAJ
"RTN","IVMZ7CE",59,0)
 ; I $D(DGP("MEANS",0)),$P(DGP("MEANS",0),U,4)<1,$P(DGP("MEANS",0),U,14)'=1 S FILERR(RULE)=""
"RTN","IVMZ7CE",60,0)
 Q
"RTN","IVMZ7CE",61,0)
 ;
"RTN","IVMZ7CE",62,0)
409 ; AGREE TO PAY DEDUCT INVALID
"RTN","IVMZ7CE",63,0)
 ; this CC inactivated by DG*5.3*771
"RTN","IVMZ7CE",64,0)
 ; 2  PENDING ADJUDICATION     MEANS TEST
"RTN","IVMZ7CE",65,0)
 ; 6  MT COPAY REQUIRED     MEANS TEST
"RTN","IVMZ7CE",66,0)
 ;16  GMT COPAY REQUIRED     MEANS TEST
"RTN","IVMZ7CE",67,0)
 I $D(DGP("MEANS",0)),$P(DGP("MEANS",0),U,11)="" D
"RTN","IVMZ7CE",68,0)
 . S X=$P(DGP("MEANS",0),U,3)
"RTN","IVMZ7CE",69,0)
 . I (X=2)!(X=6) S FILERR(RULE)="" Q
"RTN","IVMZ7CE",70,0)
 . I X=16,'$P(DGP("MEANS",0),U,20) S FILERR(RULE)=""
"RTN","IVMZ7CE",71,0)
 Q
"RTN","IVMZ7CE",72,0)
 ;
"RTN","IVMZ7CE",73,0)
410 ; Note: RULE #404 above is a duplicate of this rule
"RTN","IVMZ7CE",74,0)
 Q
"RTN","IVMZ7CE",75,0)
 ;
"RTN","IVMZ7CE",76,0)
411 ; ENROLLMENT APP DATE INVALID
"RTN","IVMZ7CE",77,0)
 I $D(DGP("ENR",0)) S X=$P(DGP("ENR","0"),U) I ($E(X,1,3)<1)!($E(X,4,5)<1)!($E(X,6,7)<1) S FILERR(RULE)=""
"RTN","IVMZ7CE",78,0)
 Q
"RTN","IVMZ7CE",79,0)
 ;
"RTN","IVMZ7CE",80,0)
412 ; POS/ELIG CODE INVALID
"RTN","IVMZ7CE",81,0)
 ; Note: RULE #24 in IVMZ7CR is a duplicate of this rule
"RTN","IVMZ7CE",82,0)
 Q
"RTN","IVMZ7CE",83,0)
 ;
"RTN","IVMZ7CE",84,0)
413 ; POS INVALID
"RTN","IVMZ7CE",85,0)
 ; Note: RULE #13 in IVMZ7CR is a duplicate of this rule
"RTN","IVMZ7CE",86,0)
 Q
"RTN","IVMZ7CR")
0^1^B68810098
"RTN","IVMZ7CR",1,0)
IVMZ7CR ;BAJ,ERC - HL7 Z07 CONSISTENCY CHECKER -- REGISTRATION SUBROUTINE ; 12/6/07 8:51am
"RTN","IVMZ7CR",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**105,127**;JUL 8,1996;Build 6
"RTN","IVMZ7CR",3,0)
 ;
"RTN","IVMZ7CR",4,0)
 ; Registration Consistency Checks
"RTN","IVMZ7CR",5,0)
 Q       ; Entry point must be specified
"RTN","IVMZ7CR",6,0)
EN(DFN,DGP,DGSD) ;Entry point
"RTN","IVMZ7CR",7,0)
 ;  input:  DFN - Patient IEN
"RTN","IVMZ7CR",8,0)
 ;          DGP - Patient data array
"RTN","IVMZ7CR",9,0)
 ;          DGSD - Spouse and Dependent data array
"RTN","IVMZ7CR",10,0)
 ; output: ^TMP($J,DFN,RULE) global
"RTN","IVMZ7CR",11,0)
 ;          DFN - Patient IEN
"RTN","IVMZ7CR",12,0)
 ;          RULE - Consistency rule #
"RTN","IVMZ7CR",13,0)
 ;initialize variables
"RTN","IVMZ7CR",14,0)
 N RULE,Y,X,FILERR,SPDEP
"RTN","IVMZ7CR",15,0)
 S SPDEP=$D(DGSD("DEP"))
"RTN","IVMZ7CR",16,0)
 ; we do not count through all numbers to save routine space
"RTN","IVMZ7CR",17,0)
 F RULE=4,7,9,11,13,15,16,19,24,29:1:31,34,60,72,74,75,76,78,81,83,85,86 I $D(^DGIN(38.6,RULE)) D
"RTN","IVMZ7CR",18,0)
 . I $$ON(RULE) D @RULE
"RTN","IVMZ7CR",19,0)
 I $D(FILERR) M ^TMP($J,DFN)=FILERR
"RTN","IVMZ7CR",20,0)
 Q
"RTN","IVMZ7CR",21,0)
4 ; DOB UNSPECIFIED
"RTN","IVMZ7CR",22,0)
 ; Note: RULE #302 in IVMZ7CD is a duplicate of this rule
"RTN","IVMZ7CR",23,0)
 N RIEN
"RTN","IVMZ7CR",24,0)
 I $P($G(DGP("PAT",0)),U,3)="" S FILERR(RULE)=""
"RTN","IVMZ7CR",25,0)
 I 'SPDEP Q
"RTN","IVMZ7CR",26,0)
 S RIEN=0 F  S RIEN=$O(DGSD("DEP",RIEN)) Q:RIEN=""  D
"RTN","IVMZ7CR",27,0)
 . I $P(DGSD("DEP",RIEN,0),U,3)="" S FILERR(RULE)=""
"RTN","IVMZ7CR",28,0)
 Q
"RTN","IVMZ7CR",29,0)
7 ; SSN UNSPECIFIED
"RTN","IVMZ7CR",30,0)
 ; Note: RULE #305 in IVMZ7CD is a duplicate of this rule
"RTN","IVMZ7CR",31,0)
 I $P($G(DGP("PAT",0)),U,9)="" S FILERR(RULE)=""
"RTN","IVMZ7CR",32,0)
 Q
"RTN","IVMZ7CR",33,0)
9 ; VETERAN STATUS UNSPECIFIED
"RTN","IVMZ7CR",34,0)
 I $P($G(DGP("PAT","VET")),U)="" S FILERR(RULE)=""
"RTN","IVMZ7CR",35,0)
 Q
"RTN","IVMZ7CR",36,0)
11 ; SC PROMPT INCONSISTENT
"RTN","IVMZ7CR",37,0)
 N VET,SC,PTYPE
"RTN","IVMZ7CR",38,0)
 ; If VET Status is not specified (RULE 9) no need for this test
"RTN","IVMZ7CR",39,0)
 Q:$P($G(DGP("PAT","VET")),U)=""
"RTN","IVMZ7CR",40,0)
 S VET=$P(DGP("PAT","VET"),U,1)="Y",SC=$P(DGP("PAT",.3),U,1)="Y"
"RTN","IVMZ7CR",41,0)
 I 'VET,SC S FILERR(RULE)=""
"RTN","IVMZ7CR",42,0)
 Q
"RTN","IVMZ7CR",43,0)
13 ; POS UNSPECIFIED
"RTN","IVMZ7CR",44,0)
 ; Note: Rule #413 IN IVMZ7CE is a duplicate of this rule
"RTN","IVMZ7CR",45,0)
 Q:$P($G(DGP("PAT","VET")),U,1)'="Y"
"RTN","IVMZ7CR",46,0)
 ; Make sure that the value in the field is valid -- DGRPC does this as well
"RTN","IVMZ7CR",47,0)
 I '$D(^DIC(21,+$P(DGP("PAT",.32),U,3),0)) S FILERR(RULE)=""
"RTN","IVMZ7CR",48,0)
 Q
"RTN","IVMZ7CR",49,0)
15 ; INEL REASON UNSPECIFIED
"RTN","IVMZ7CR",50,0)
 ; Note: Rule #404 IN IVMZ7CE is a duplicate of this rule
"RTN","IVMZ7CR",51,0)
 I $P(DGP("PAT",.15),U,2),$P($G(DGP("PAT",.3)),U,7)="" S FILERR(RULE)=""
"RTN","IVMZ7CR",52,0)
 Q
"RTN","IVMZ7CR",53,0)
16 ; DATE OF DEATH IN FUTURE
"RTN","IVMZ7CR",54,0)
 ; Note: Rule #308 IN IVMZ7CD is a duplicate of this rule
"RTN","IVMZ7CR",55,0)
 S X=$P($G(DGP("PAT",.35)),U) I X']"" Q
"RTN","IVMZ7CR",56,0)
 ; Compare DOD to right now
"RTN","IVMZ7CR",57,0)
 I X>$$DT^XLFDT S FILERR(RULE)=""
"RTN","IVMZ7CR",58,0)
 Q
"RTN","IVMZ7CR",59,0)
19 ; ELIG/NONVET STAT INCONSISTENT
"RTN","IVMZ7CR",60,0)
 ; Note: Rule #405 in IVMZ7CE is a duplicate of this rule
"RTN","IVMZ7CR",61,0)
 N VET,ELIG,FILE8,FILE81,MPTR,MTYPE,PTYPE
"RTN","IVMZ7CR",62,0)
 ; Patient's VET status
"RTN","IVMZ7CR",63,0)
 S VET=$P($G(DGP("PAT","VET")),U,1) I VET="" S FILERR(RULE)="" Q
"RTN","IVMZ7CR",64,0)
 ; do this check for NON-VET status only
"RTN","IVMZ7CR",65,0)
 Q:VET="Y"
"RTN","IVMZ7CR",66,0)
 ; Check PT type to see if we skip VET checks
"RTN","IVMZ7CR",67,0)
 S PTYPE=$P($G(DGP("PAT","TYPE")),U,1)
"RTN","IVMZ7CR",68,0)
 I PTYPE]"",$P(^DG(391,PTYPE,0),U,2) Q
"RTN","IVMZ7CR",69,0)
 ; Eligibility Code
"RTN","IVMZ7CR",70,0)
 S ELIG=$P($G(DGP("PAT",.36)),U,1) I ELIG="" S FILERR(RULE)="" Q
"RTN","IVMZ7CR",71,0)
 ;start in File #8
"RTN","IVMZ7CR",72,0)
 S FILE8=$G(^DIC(8,ELIG,0)) I FILE8="" S FILERR(RULE)="" Q
"RTN","IVMZ7CR",73,0)
 ;using the pointer value in field #8 (node 0; piece 9)
"RTN","IVMZ7CR",74,0)
 S MPTR=$P(FILE8,U,9)
"RTN","IVMZ7CR",75,0)
 ;find the record in File #8.1
"RTN","IVMZ7CR",76,0)
 S FILE81=$G(^DIC(8.1,MPTR,0)) I FILE81="" S FILERR(RULE)="" Q
"RTN","IVMZ7CR",77,0)
 ;check the Type field #4 (node 0; piece 5). 
"RTN","IVMZ7CR",78,0)
 S MTYPE=$P(FILE81,U,5)
"RTN","IVMZ7CR",79,0)
 ; Pt's VET status must match NON-VET Status of Eligibility Code
"RTN","IVMZ7CR",80,0)
 I VET'=MTYPE S FILERR(RULE)=""
"RTN","IVMZ7CR",81,0)
 Q
"RTN","IVMZ7CR",82,0)
24 ; POS/ELIG CODE INCONSISTENT
"RTN","IVMZ7CR",83,0)
 ; Note: Rule #412 in IVMZ7CE is a duplicate of this rule
"RTN","IVMZ7CR",84,0)
 I '$D(^DIC(21,+$P(DGP("PAT",.32),U,3),"E",+$P(DGP("PAT",.36),U,1))) S FILERR(RULE)=""
"RTN","IVMZ7CR",85,0)
 Q
"RTN","IVMZ7CR",86,0)
29 ; A&A CLAIMED, NONVET
"RTN","IVMZ7CR",87,0)
 I $P(DGP("PAT","VET"),U,1)'="Y",$P($G(^DPT(DFN,.362)),U,12)="Y" S FILERR(RULE)=""
"RTN","IVMZ7CR",88,0)
 Q
"RTN","IVMZ7CR",89,0)
30 ; HOUSEBOUND CLAIMED, NONVET
"RTN","IVMZ7CR",90,0)
 I $P(DGP("PAT","VET"),U,1)'="Y",$P($G(^DPT(DFN,.362)),U,13)="Y" S FILERR(RULE)=""
"RTN","IVMZ7CR",91,0)
 Q
"RTN","IVMZ7CR",92,0)
31 ; VA PENSION CLAIMED, NONVET
"RTN","IVMZ7CR",93,0)
 I $P(DGP("PAT","VET"),U,1)'="Y",$P($G(^DPT(DFN,.362)),U,14)="Y" S FILERR(RULE)=""
"RTN","IVMZ7CR",94,0)
 Q
"RTN","IVMZ7CR",95,0)
34 ; POW CLAIMED, NONVET
"RTN","IVMZ7CR",96,0)
 I $P(DGP("PAT","VET"),U,1)'="Y",$P($G(^DPT(DFN,.52)),U,5)="Y" S FILERR(RULE)=""
"RTN","IVMZ7CR",97,0)
 Q
"RTN","IVMZ7CR",98,0)
60 ; AGENT ORANGE EXP LOC MISSING
"RTN","IVMZ7CR",99,0)
 ; Note: Rule #512 in IVMZ7CS is a duplicate of this rule.
"RTN","IVMZ7CR",100,0)
 I $P(DGP("PAT",.321),U,2)="Y",$P(DGP("PAT",.321),U,13)="" S FILERR(RULE)=""
"RTN","IVMZ7CR",101,0)
 Q
"RTN","IVMZ7CR",102,0)
72 ; MSE DATA MISSING/INCOMPLETE, turned off with DG*5.3*765
"RTN","IVMZ7CR",103,0)
 ; Note: Rule #513 in IVMZ7CS is a duplicate of this rule.
"RTN","IVMZ7CR",104,0)
 N I,X
"RTN","IVMZ7CR",105,0)
 S X=DGP("PAT",.32)
"RTN","IVMZ7CR",106,0)
 F I=4,5,8 I $P(X,U,I)'="",'$$YY^IVMZ7CS($P(X,U,6)) S FILERR(RULE)="" Q     ;LAST
"RTN","IVMZ7CR",107,0)
 F I=9,10,13 I $P(X,U,I)'="",'$$YY^IVMZ7CS($P(X,U,11)) S FILERR(RULE)="" Q  ;NTL
"RTN","IVMZ7CR",108,0)
 F I=14,15,18 I $P(X,U,I)'="",'$$YY^IVMZ7CS($P(X,U,11)) S FILERR(RULE)=""   ;NNTL
"RTN","IVMZ7CR",109,0)
 Q
"RTN","IVMZ7CR",110,0)
 ;
"RTN","IVMZ7CR",111,0)
74 ; CONFLICT DT MISSING/INCOMPLETE, turned off with DG*5.3*765 
"RTN","IVMZ7CR",112,0)
 ; Note:#515 IVMZ7CS is a duplicate, turned off with DG*5.3*771
"RTN","IVMZ7CR",113,0)
75 ; ALSO # 75 CONFLICT TO DT BEFORE FROM DT
"RTN","IVMZ7CR",114,0)
76 ;      # 76 INACCURATE CONFLICT DATE, turned off with DG*5.3*771
"RTN","IVMZ7CR",115,0)
 ; 
"RTN","IVMZ7CR",116,0)
 N I,T,FROM,TO,NODE,PCE,PCEFR,PCETO,CONFL,RANGE,RFR,RTO,RNGE,ERR,COM,ON74,ON75,ON76
"RTN","IVMZ7CR",117,0)
 S ON74=$$ON(74),ON75=$$ON(75),ON76=$$ON(76)
"RTN","IVMZ7CR",118,0)
 S I=$$RANGE^DGMSCK()    ; load range table
"RTN","IVMZ7CR",119,0)
 F I=1:1 S CONFL=$P($T(CONLIST+I),";;",3) Q:CONFL="QUIT"  D
"RTN","IVMZ7CR",120,0)
 . ;we have to have a flag ERR because we don't want multiple
"RTN","IVMZ7CR",121,0)
 . ;inconsistencies on a single conflict but we do want to
"RTN","IVMZ7CR",122,0)
 . ;flag a single inconsistency on multiple conflicts
"RTN","IVMZ7CR",123,0)
 . S ERR=0
"RTN","IVMZ7CR",124,0)
 . S NODE=$P(CONFL,U,1),PCE=$P(CONFL,U,2),PCEFR=$P(CONFL,U,3),PCETO=$P(CONFL,U,4)
"RTN","IVMZ7CR",125,0)
 . S RNGE=$P(CONFL,U,5)
"RTN","IVMZ7CR",126,0)
 . Q:$P(DGP("PAT",NODE),U,PCE)'="Y"
"RTN","IVMZ7CR",127,0)
 . S FROM=$P(DGP("PAT",NODE),U,PCEFR),TO=$P(DGP("PAT",NODE),U,PCETO)
"RTN","IVMZ7CR",128,0)
 . ; check rule 74 CONFLICT DT MISSING/INCOMPLETE
"RTN","IVMZ7CR",129,0)
 . I ON74,(RULE=74) F T=FROM,TO I '$$YM^IVMZ7CS(T) S FILERR(RULE)="",ERR=1
"RTN","IVMZ7CR",130,0)
 . Q:ERR
"RTN","IVMZ7CR",131,0)
 . ; check rule 75 CONFLICT TO DT BEFORE CONFLICT FROM DT
"RTN","IVMZ7CR",132,0)
 . I ON75,(RULE=75),(FROM>TO) S FILERR(RULE)="",ERR=1
"RTN","IVMZ7CR",133,0)
 . Q:ERR
"RTN","IVMZ7CR",134,0)
 . ; check rule 76 INACCURATE CONFLICT DATE
"RTN","IVMZ7CR",135,0)
 . Q:ERR
"RTN","IVMZ7CR",136,0)
 . Q:'$D(RANGE(RNGE))  ; can't calculate if range table is missing
"RTN","IVMZ7CR",137,0)
 . ; determine whether dates are withing conflict range
"RTN","IVMZ7CR",138,0)
 . S RFR=$P(RANGE(RNGE),U,1),RTO=$P(RANGE(RNGE),U,2)
"RTN","IVMZ7CR",139,0)
 . I ON76,(RULE=76) D
"RTN","IVMZ7CR",140,0)
 . . I '((RFR'>FROM)&((RTO'<TO))) S FILERR(RULE)=""
"RTN","IVMZ7CR",141,0)
 Q
"RTN","IVMZ7CR",142,0)
78 ; INACCURATE COMBAT DT/LOC, turned off with DG*5.3*771
"RTN","IVMZ7CR",143,0)
 N I,T,FROM,TO,RULE,NODE,PCE,PCEFR,PCETO,CONFL,RANGE,RFR,RTO,RNGE,ERR,COM,ON78,LOC
"RTN","IVMZ7CR",144,0)
 ; This tag checks COMBAT status and verifies that valid FROM & TO dates are found
"RTN","IVMZ7CR",145,0)
 S RULE=78
"RTN","IVMZ7CR",146,0)
 I '$$ON(RULE) Q
"RTN","IVMZ7CR",147,0)
 S I=$$RANGE^DGMSCK()    ; load range table
"RTN","IVMZ7CR",148,0)
 F I=1:1 S CONFL=$P($T(COMLIST+I),";;",3) Q:CONFL="QUIT"  D
"RTN","IVMZ7CR",149,0)
 . S NODE=$P(CONFL,U,1),PCE=$P(CONFL,U,2),PCEFR=$P(CONFL,U,3),PCETO=$P(CONFL,U,4)
"RTN","IVMZ7CR",150,0)
 . S RNGE=$P(CONFL,U,5)
"RTN","IVMZ7CR",151,0)
 . ; if we have COMBAT data, get Service Location info, it comes under a different rule
"RTN","IVMZ7CR",152,0)
 . Q:$P(DGP("PAT",NODE),U,PCE)'="Y"
"RTN","IVMZ7CR",153,0)
 . S RNGE=$$COMPOW^DGRPMS($P(DGP("PAT",.52),U,12)) I $G(RNGE)="" S FILERR(RULE)="" Q
"RTN","IVMZ7CR",154,0)
 . S FROM=$P(DGP("PAT",NODE),U,PCEFR),TO=$P(DGP("PAT",NODE),U,PCETO)
"RTN","IVMZ7CR",155,0)
 . ; determine whether Pt dates are within conflict range for specified location
"RTN","IVMZ7CR",156,0)
 . S RFR=$P(RANGE(RNGE),U,1),RTO=$P(RANGE(RNGE),U,2)
"RTN","IVMZ7CR",157,0)
 . I '(RFR'>FROM&((FROM'>RTO)&((RTO'<TO)&((TO'<RFR))))) S FILERR(RULE)=""
"RTN","IVMZ7CR",158,0)
 Q
"RTN","IVMZ7CR",159,0)
81 ; COMBAT DT NOT WITHIN MSE, turned off with DG*5.3*765
"RTN","IVMZ7CR",160,0)
 ; this code is copied from DGRP3
"RTN","IVMZ7CR",161,0)
 ; MSFROMTO^DGMSCK creates a block for a continual MSE
"RTN","IVMZ7CR",162,0)
 N MSE,MSECHK,MSESET,ANYMSE,DGP81
"RTN","IVMZ7CR",163,0)
 I '$P($G(DGP("PAT",.52)),U,12) Q
"RTN","IVMZ7CR",164,0)
 ;
"RTN","IVMZ7CR",165,0)
 ; we're calling into DG Legacy code so we have to modify some arrays
"RTN","IVMZ7CR",166,0)
 M DGP81=DGP K DGP
"RTN","IVMZ7CR",167,0)
 M DGP=DGP81("PAT")
"RTN","IVMZ7CR",168,0)
 ; set up the check
"RTN","IVMZ7CR",169,0)
 S:'$G(MSECHK) MSECHK=$$MSCK^DGMSCK S:'$G(MSESET) MSESET=$$MSFROMTO^DGMSCK
"RTN","IVMZ7CR",170,0)
 ; If COMBAT, but no MSE, then Range is NOT within MSE
"RTN","IVMZ7CR",171,0)
 I '$G(ANYMSE) D  Q
"RTN","IVMZ7CR",172,0)
 . S FILERR(RULE)=""
"RTN","IVMZ7CR",173,0)
 . K DGP M DGP=DGP81
"RTN","IVMZ7CR",174,0)
 I '$$RWITHIN^DGRPDT($P(MSESET,U,1),$P(MSESET,U,2),$P($G(DGP81("PAT",.52)),U,13),$P($G(DGP81("PAT",.52)),U,14)) S FILERR(RULE)=""
"RTN","IVMZ7CR",175,0)
 K DGP M DGP=DGP81
"RTN","IVMZ7CR",176,0)
 Q
"RTN","IVMZ7CR",177,0)
 ;
"RTN","IVMZ7CR",178,0)
83 ; BOS REQUIRES DATE W/IN WWII
"RTN","IVMZ7CR",179,0)
 ; this code is copied from DGRP3
"RTN","IVMZ7CR",180,0)
 N BOS,BOSN,MS,MSE,DGP83
"RTN","IVMZ7CR",181,0)
 Q:'$D(DGP("PAT",.32))
"RTN","IVMZ7CR",182,0)
 ; we're calling into DG Legacy code so we have to modify some arrays
"RTN","IVMZ7CR",183,0)
 M DGP83=DGP K DGP
"RTN","IVMZ7CR",184,0)
 M DGP=DGP83("PAT")
"RTN","IVMZ7CR",185,0)
 F MS=1:1:3 D
"RTN","IVMZ7CR",186,0)
 . I MS=2,$P(DGP83("PAT",.32),U,19)'="Y" Q
"RTN","IVMZ7CR",187,0)
 . I MS=3,$P(DGP83("PAT",.32),U,20)'="Y" Q
"RTN","IVMZ7CR",188,0)
 . S BOS=$P(DGP83("PAT",.32),U,(5*MS)) Q:'BOS  S BOSN=$P($G(^DIC(23,BOS,0)),U)
"RTN","IVMZ7CR",189,0)
 . S MSE=$P("MSL^MSNTL^MSNNTL",U,MS)
"RTN","IVMZ7CR",190,0)
 . I $$BRANCH^DGRPMS(BOS_U_BOSN),'$$WWII^DGRPMS(DFN,"",MSE) S FILERR(RULE)=""
"RTN","IVMZ7CR",191,0)
 ; fix the arrays before we leave
"RTN","IVMZ7CR",192,0)
 K DGP M DGP=DGP83
"RTN","IVMZ7CR",193,0)
 Q
"RTN","IVMZ7CR",194,0)
85 ; FILIPINO VET SHOULD BE VET='Y'
"RTN","IVMZ7CR",195,0)
 ; this code is copied from DGRP3
"RTN","IVMZ7CR",196,0)
 N MS,BOS,FV,FILV,NOTFV,MSE,RULE2,DGVT,DGP85
"RTN","IVMZ7CR",197,0)
 Q:'$D(DGP("PAT",.32))
"RTN","IVMZ7CR",198,0)
 ; we're calling into DG Legacy code so we have to modify some arrays
"RTN","IVMZ7CR",199,0)
 S DGVT=$P($G(DGP("PAT","VET")),U)="Y"
"RTN","IVMZ7CR",200,0)
 M DGP85=DGP K DGP
"RTN","IVMZ7CR",201,0)
 M DGP=DGP85("PAT")
"RTN","IVMZ7CR",202,0)
 S RULE2=86   ; will also check RULE #86 INEL FIL VET SHOULD BE VET='N'
"RTN","IVMZ7CR",203,0)
 F MS=1:1:3 D
"RTN","IVMZ7CR",204,0)
 . I MS=2,$P(DGP85("PAT",.32),U,19)'="Y" Q
"RTN","IVMZ7CR",205,0)
 . I MS=3,$P(DGP85("PAT",.32),U,20)'="Y" Q
"RTN","IVMZ7CR",206,0)
 . S BOS=$P(DGP85("PAT",.32),U,(5*MS)),FV=$$FV^DGRPMS(BOS) I 'FV S NOTFV="" Q
"RTN","IVMZ7CR",207,0)
 . S MSE=$P("MSL^MSNTL^MSNNTL",U,MS)
"RTN","IVMZ7CR",208,0)
 . I '$$WWII^DGRPMS(DFN,"",MSE) S FILV("I")="" Q
"RTN","IVMZ7CR",209,0)
 . I FV=2 S FILV("E")="" Q
"RTN","IVMZ7CR",210,0)
 . I $P(DGP85("PAT",.321),U,14)=""!($P(DGP85("PAT",.321),U,14)="NO") S FILV("I")="" Q
"RTN","IVMZ7CR",211,0)
 . S FILV("E")=""
"RTN","IVMZ7CR",212,0)
 I $D(FILV) D
"RTN","IVMZ7CR",213,0)
 . I DGVT'=1,$D(FILV("E")) S FILERR(RULE)=""
"RTN","IVMZ7CR",214,0)
 . I DGVT=1,'$D(NOTFV),'$D(FILV("E")),$D(FILV("I")) S FILERR(RULE2)=""
"RTN","IVMZ7CR",215,0)
 ; fix the arrays before we leave
"RTN","IVMZ7CR",216,0)
 K DGP M DGP=DGP85
"RTN","IVMZ7CR",217,0)
 Q
"RTN","IVMZ7CR",218,0)
86 ; INEL FIL VET SHOULD BE VET='N'
"RTN","IVMZ7CR",219,0)
 ; This rule is satisfied in #85 above
"RTN","IVMZ7CR",220,0)
 Q
"RTN","IVMZ7CR",221,0)
ON(RULE) ;verify RULE is turned on
"RTN","IVMZ7CR",222,0)
 N ON,Y
"RTN","IVMZ7CR",223,0)
 S ON=0
"RTN","IVMZ7CR",224,0)
 S Y=^DGIN(38.6,RULE,0)
"RTN","IVMZ7CR",225,0)
 I '$P(Y,U,5),$P(Y,U,6) S ON=1
"RTN","IVMZ7CR",226,0)
 Q ON
"RTN","IVMZ7CR",227,0)
CONLIST ;;CONFLICT;;NODE^PIECE^FROM^TO^RANGE  -- offset list, do not add comments
"RTN","IVMZ7CR",228,0)
 ;;VIETNAM;;.321^1^4^5^VIET
"RTN","IVMZ7CR",229,0)
 ;;LEBANON;;.322^1^2^3^LEB
"RTN","IVMZ7CR",230,0)
 ;;GRENADA;;.322^4^5^6^GREN
"RTN","IVMZ7CR",231,0)
 ;;PANAMA;;.322^7^8^9^PAN
"RTN","IVMZ7CR",232,0)
 ;;PERSIAN GULF;;.322^10^11^12^GULF
"RTN","IVMZ7CR",233,0)
 ;;SOMALIA;;.322^16^17^18^SOM
"RTN","IVMZ7CR",234,0)
 ;;YUGOSLAVIA;;.322^19^20^21^YUG
"RTN","IVMZ7CR",235,0)
 ;;QUIT;;QUIT
"RTN","IVMZ7CR",236,0)
COMLIST ;;COMBAT;;NODE^PIECE^FROM^TO^RANGE  -- offset list, do not add comments
"RTN","IVMZ7CR",237,0)
 ;;WWI;;.52^11^13^14^WWI
"RTN","IVMZ7CR",238,0)
 ;;WWIIE;;.52^11^13^14^WWIIE
"RTN","IVMZ7CR",239,0)
 ;;WWIIP;;.52^11^13^14^WWIIP
"RTN","IVMZ7CR",240,0)
 ;;KOREA;;.52^11^13^14^KOR
"RTN","IVMZ7CR",241,0)
 ;;OTHER;;.52^11^13^14^OTHER
"RTN","IVMZ7CR",242,0)
 ;;VIETNAM;;.52^11^13^14^VIET
"RTN","IVMZ7CR",243,0)
 ;;LEBANON;;.52^11^13^14^LEB
"RTN","IVMZ7CR",244,0)
 ;;GRENADA;;.52^11^13^14^GREN
"RTN","IVMZ7CR",245,0)
 ;;PANAMA;;.52^11^13^14^PAN
"RTN","IVMZ7CR",246,0)
 ;;PERSIAN GULF;;.52^11^13^14^GULF
"RTN","IVMZ7CR",247,0)
 ;;SOMALIA;;.52^11^13^14^SOM
"RTN","IVMZ7CR",248,0)
 ;;YUGOSLAVIA;;.52^11^13^14^YUG
"RTN","IVMZ7CR",249,0)
 ;;QUIT;;QUIT
"VER")
8.0^22.0
**END**
**END**
