KIDS Distribution saved on Feb 05, 2010@06:51:44
Patch ACKQ*3*17 & ECX*3*124
**KIDS**:ACKQ*3.0*17^ECX*3.0*124^

**INSTALL NAME**
ACKQ*3.0*17
"BLD",6614,0)
ACKQ*3.0*17^QUASAR^0^3100205^y
"BLD",6614,1,0)
^^3^3^3081204^
"BLD",6614,1,1,0)
This patch will correct a problem with broken pointers.
"BLD",6614,1,2,0)
Associated Remedy
"BLD",6614,1,3,0)
HD147036 - Quasar Patch ACKQ*3*9 - Amendments for Scheduling 
"BLD",6614,4,0)
^9.64PA^509850.3^1
"BLD",6614,4,509850.3,0)
509850.3
"BLD",6614,4,509850.3,222)
y^n^f^^^^n^^n
"BLD",6614,4,509850.3,224)

"BLD",6614,4,"B",509850.3,509850.3)

"BLD",6614,6.3)
28
"BLD",6614,"ABPKG")
n
"BLD",6614,"INID")
y^y
"BLD",6614,"INIT")
POST^ACKQP17
"BLD",6614,"KRN",0)
^9.67PA^8989.52^19
"BLD",6614,"KRN",.4,0)
.4
"BLD",6614,"KRN",.401,0)
.401
"BLD",6614,"KRN",.402,0)
.402
"BLD",6614,"KRN",.402,"NM",0)
^9.68A^^0
"BLD",6614,"KRN",.403,0)
.403
"BLD",6614,"KRN",.5,0)
.5
"BLD",6614,"KRN",.84,0)
.84
"BLD",6614,"KRN",3.6,0)
3.6
"BLD",6614,"KRN",3.8,0)
3.8
"BLD",6614,"KRN",9.2,0)
9.2
"BLD",6614,"KRN",9.8,0)
9.8
"BLD",6614,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",6614,"KRN",9.8,"NM",1,0)
ACKQASU4^^0^B44737991
"BLD",6614,"KRN",9.8,"NM",2,0)
ACKQUTL4^^0^B81469112
"BLD",6614,"KRN",9.8,"NM",3,0)
ACKQUTL6^^0^B72728308
"BLD",6614,"KRN",9.8,"NM",4,0)
ACKQCLED^^0^B17815400
"BLD",6614,"KRN",9.8,"NM",5,0)
ACKQRU^^0^B18240668
"BLD",6614,"KRN",9.8,"NM","B","ACKQASU4",1)

"BLD",6614,"KRN",9.8,"NM","B","ACKQCLED",4)

"BLD",6614,"KRN",9.8,"NM","B","ACKQRU",5)

"BLD",6614,"KRN",9.8,"NM","B","ACKQUTL4",2)

"BLD",6614,"KRN",9.8,"NM","B","ACKQUTL6",3)

"BLD",6614,"KRN",19,0)
19
"BLD",6614,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",6614,"KRN",19,"NM",1,0)
ACKQAS CLINICIAN ENTRY^^0
"BLD",6614,"KRN",19,"NM","B","ACKQAS CLINICIAN ENTRY",1)

"BLD",6614,"KRN",19.1,0)
19.1
"BLD",6614,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",6614,"KRN",101,0)
101
"BLD",6614,"KRN",409.61,0)
409.61
"BLD",6614,"KRN",771,0)
771
"BLD",6614,"KRN",870,0)
870
"BLD",6614,"KRN",8989.51,0)
8989.51
"BLD",6614,"KRN",8989.52,0)
8989.52
"BLD",6614,"KRN",8994,0)
8994
"BLD",6614,"KRN","B",.4,.4)

"BLD",6614,"KRN","B",.401,.401)

"BLD",6614,"KRN","B",.402,.402)

"BLD",6614,"KRN","B",.403,.403)

"BLD",6614,"KRN","B",.5,.5)

"BLD",6614,"KRN","B",.84,.84)

"BLD",6614,"KRN","B",3.6,3.6)

"BLD",6614,"KRN","B",3.8,3.8)

"BLD",6614,"KRN","B",9.2,9.2)

"BLD",6614,"KRN","B",9.8,9.8)

"BLD",6614,"KRN","B",19,19)

"BLD",6614,"KRN","B",19.1,19.1)

"BLD",6614,"KRN","B",101,101)

"BLD",6614,"KRN","B",409.61,409.61)

"BLD",6614,"KRN","B",771,771)

"BLD",6614,"KRN","B",870,870)

"BLD",6614,"KRN","B",8989.51,8989.51)

"BLD",6614,"KRN","B",8989.52,8989.52)

"BLD",6614,"KRN","B",8994,8994)

"BLD",6614,"PRE")
ACKQEN17
"BLD",6614,"QUES",0)
^9.62^^
"BLD",6614,"REQB",0)
^9.611^2^2
"BLD",6614,"REQB",1,0)
ACKQ*3.0*14^2
"BLD",6614,"REQB",2,0)
ACKQ*3.0*7^2
"BLD",6614,"REQB","B","ACKQ*3.0*14",1)

"BLD",6614,"REQB","B","ACKQ*3.0*7",2)

"FIA",509850.3)
A&SP STAFF
"FIA",509850.3,0)
^ACK(509850.3,
"FIA",509850.3,0,0)
509850.3
"FIA",509850.3,0,1)
y^n^f^^^^n^^n
"FIA",509850.3,0,10)

"FIA",509850.3,0,11)

"FIA",509850.3,0,"RLRO")

"FIA",509850.3,0,"VR")
3.0^ACKQ
"FIA",509850.3,509850.3)
0
"INIT")
POST^ACKQP17
"KRN",19,10003,-1)
0^1
"KRN",19,10003,0)
ACKQAS CLINICIAN ENTRY^Staff (Enter/Edit)^^R^^^^^^^^QUASAR^^1^1
"KRN",19,10003,1,0)
^19.06^23^23^3071115^^^^
"KRN",19,10003,1,1,0)
The Staff (Enter/Edit) option allows you to enter data for 
"KRN",19,10003,1,2,0)
clinicians, fee-basis personnel, other providers (e.g., health 
"KRN",19,10003,1,3,0)
technician), and students into the A&SP STAFF file (#509850.3). The 
"KRN",19,10003,1,4,0)
information includes the staff person's name, activation and 
"KRN",19,10003,1,5,0)
inactivation dates, status, and an ID number for sites that choose to 
"KRN",19,10003,1,6,0)
use code numbers.
"KRN",19,10003,1,7,0)
  
"KRN",19,10003,1,8,0)
Names added to the A&SP STAFF file (#509850.3) must be in the NEW 
"KRN",19,10003,1,9,0)
PERSON file (#200). The A&SP Service Chief should contact IRM if an 
"KRN",19,10003,1,10,0)
entry needs to be made to the NEW PERSON file.
"KRN",19,10003,1,11,0)
  
"KRN",19,10003,1,12,0)
An activation date is required to associate the staff member with a 
"KRN",19,10003,1,13,0)
clinic visit. The activation date is the date the staff member became 
"KRN",19,10003,1,14,0)
an active member. For the staff member to receive credit for a patient 
"KRN",19,10003,1,15,0)
visit, he or she must have been active on or before the visit date.
"KRN",19,10003,1,16,0)
  
"KRN",19,10003,1,17,0)
Inactive staff members should never be deleted because entries in the 
"KRN",19,10003,1,18,0)
A&SP CLINIC VISIT file (#509850.6) reference them. This option is used 
"KRN",19,10003,1,19,0)
to activate and inactivate staff members as appropriate.
"KRN",19,10003,1,20,0)
  
"KRN",19,10003,1,21,0)
Selected clinicians can be designated as supervisors. Supervisors 
"KRN",19,10003,1,22,0)
have access to certain functionality that is not available to other 
"KRN",19,10003,1,23,0)
staff members (e.g., adequating any C&P exam).
"KRN",19,10003,15)
K ACKLAYGO,DLAYGO
"KRN",19,10003,20)
S ACKLAYGO="",DLAYGO=509850.3 D NMVD^ACKQCLED W @IOF,!,"This option allows you to enter data for A&SP staff members.",!,"This includes name, activation/inactivation dates, and status.",!
"KRN",19,10003,25)
EN^ACKQCLED
"KRN",19,10003,30)

"KRN",19,10003,31)

"KRN",19,10003,32)

"KRN",19,10003,34)

"KRN",19,10003,50)

"KRN",19,10003,51)

"KRN",19,10003,"U")
STAFF (ENTER/EDIT)
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",509,-1)
1^1
"PKG",509,0)
QUASAR^ACKQ^Quality: Audiology and Speech Pathology Audit and Review
"PKG",509,20,0)
^9.402P^^
"PKG",509,22,0)
^9.49I^1^1
"PKG",509,22,1,0)
3.0^3000211^3070412^10000000070
"PKG",509,22,1,"PAH",1,0)
17^3100205
"PKG",509,22,1,"PAH",1,1,0)
^^3^3^3100205
"PKG",509,22,1,"PAH",1,1,1,0)
This patch will correct a problem with broken pointers.
"PKG",509,22,1,"PAH",1,1,2,0)
Associated Remedy
"PKG",509,22,1,"PAH",1,1,3,0)
HD147036 - Quasar Patch ACKQ*3*9 - Amendments for Scheduling 
"PRE")
ACKQEN17
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","ACKQASU4")
0^1^B44737991
"RTN","ACKQASU4",1,0)
ACKQASU4 ;HCIOFO/AG - New/Edit Visit Utilities  ; 12/31/07 7:28am
"RTN","ACKQASU4",2,0)
 ;;3.0;QUASAR;**17**;Feb 11, 2000;Build 28
"RTN","ACKQASU4",3,0)
 ;Per VHA Directive 10-93-142, this routine SHOULD NOT be modified.
"RTN","ACKQASU4",4,0)
 ;
"RTN","ACKQASU4",5,0)
 ;
"RTN","ACKQASU4",6,0)
COPYPCE(ACKVIEN,ACKPCENO) ; Copies the visit data from given PCE Visit
"RTN","ACKQASU4",7,0)
 ; inputs:- ACKVIEN - QUASAR Visit ien to receive data
"RTN","ACKQASU4",8,0)
 ;          ACKPCENO - PCE Visit ien to copy from
"RTN","ACKQASU4",9,0)
 ; outputs:- 0^ - everything ok
"RTN","ACKQASU4",10,0)
 ;           n^ - n errors found
"RTN","ACKQASU4",11,0)
 ;   errors filed in ^TMP("ACKQASU4",$J,"COPYPCE","ERROR",n)=field^int^ext^message
"RTN","ACKQASU4",12,0)
 ; NB. In the validation of Dx and CPT codes, the Visit Stop Code (A,S,
"RTN","ACKQASU4",13,0)
 ; AT or ST) is read from the Qsr Visit record. For this validation to
"RTN","ACKQASU4",14,0)
 ; work therefore, the Visit Stop Code must already be filed on the Qsr
"RTN","ACKQASU4",15,0)
 ; visit.
"RTN","ACKQASU4",16,0)
 N ACKERR,ACKARR,ACKVELG,ACKI,ACKICD,ACKE,ACKTMP,ACKPRIM,ACKSTUD
"RTN","ACKQASU4",17,0)
 N ACKSC,ACKAO,ACKIR,ACKEC,ACKREC,ACKPRV,ACKTYP,ACKCPT,ACKQTY,ACKVTME
"RTN","ACKQASU4",18,0)
 N ACKDPRIM,ACKQPRV,ACKPRVCK
"RTN","ACKQASU4",19,0)
 K ^TMP("ACKQASU4",$J,"COPYPCE") ; initialise return array
"RTN","ACKQASU4",20,0)
 S ACKERR=0  ; error counter
"RTN","ACKQASU4",21,0)
 ;
"RTN","ACKQASU4",22,0)
 ; get the PCE Visit data - returned in ^TMP("PXKENC",$J,pce ien,...)
"RTN","ACKQASU4",23,0)
 D ENCEVENT^PXAPI(ACKPCENO,"")
"RTN","ACKQASU4",24,0)
 ;
"RTN","ACKQASU4",25,0)
 ;  Get Diagnostic codes
"RTN","ACKQASU4",26,0)
 S ACKI="",ACKDPRIM=""
"RTN","ACKQASU4",27,0)
 F  S ACKI=$O(^TMP("PXKENC",$J,ACKPCENO,"POV",ACKI)) Q:ACKI=""  D
"RTN","ACKQASU4",28,0)
 . S ACKICD=$P($G(^TMP("PXKENC",$J,ACKPCENO,"POV",ACKI,0)),U,1)  ; icd ien
"RTN","ACKQASU4",29,0)
 . I ACKDPRIM="",$P($G(^TMP("PXKENC",$J,ACKPCENO,"POV",ACKI,0)),U,12)="P" S ACKDPRIM=1
"RTN","ACKQASU4",30,0)
 . ; add to visit
"RTN","ACKQASU4",31,0)
 . S ACKE=$$SETDIAG^ACKQASU5(ACKVIEN,ACKICD,ACKDPRIM)
"RTN","ACKQASU4",32,0)
 . I ACKDPRIM S ACKDPRIM="0"
"RTN","ACKQASU4",33,0)
 . ; if error returned then file
"RTN","ACKQASU4",34,0)
 . I 'ACKE D  Q
"RTN","ACKQASU4",35,0)
 . . S ACKTMP="Diagnosis"_U_ACKICD_U_$$GET1^DIQ(80,ACKICD,.01,"E")_U_$P(ACKE,U,2)
"RTN","ACKQASU4",36,0)
 . . D ADDERR
"RTN","ACKQASU4",37,0)
 . ; if successful then ensure Diagnosis is added to  Patient Diagnostic history
"RTN","ACKQASU4",38,0)
 . D DIAGHIST
"RTN","ACKQASU4",39,0)
 ;
"RTN","ACKQASU4",40,0)
 ;  get all the providers and file
"RTN","ACKQASU4",41,0)
 S ACKI="",ACKPRIM="",ACKSTUD=""
"RTN","ACKQASU4",42,0)
 F  S ACKI=$O(^TMP("PXKENC",$J,ACKPCENO,"PRV",ACKI)) Q:ACKI=""  D
"RTN","ACKQASU4",43,0)
 . S ACKREC=$G(^TMP("PXKENC",$J,ACKPCENO,"PRV",ACKI,0))
"RTN","ACKQASU4",44,0)
 . S ACKPRV=$P(ACKREC,U,1)  ; provider ien
"RTN","ACKQASU4",45,0)
 . S ACKTYP=$P(ACKREC,U,4)  ; primary/secondary
"RTN","ACKQASU4",46,0)
 . I ACKTYP="P" D COPYPRIM Q   ; copy primary provider
"RTN","ACKQASU4",47,0)
 . I ACKTYP="S" D COPYSCND Q   ; copy secondary provider
"RTN","ACKQASU4",48,0)
 ;
"RTN","ACKQASU4",49,0)
 ; Get procedure codes
"RTN","ACKQASU4",50,0)
 S ACKI=""
"RTN","ACKQASU4",51,0)
 F  S ACKI=$O(^TMP("PXKENC",$J,ACKPCENO,"CPT",ACKI)) Q:ACKI=""  D
"RTN","ACKQASU4",52,0)
 . S ACKREC=$G(^TMP("PXKENC",$J,ACKPCENO,"CPT",ACKI,0))
"RTN","ACKQASU4",53,0)
 . S ACKCPT=$P(ACKREC,U,1),ACKQTY=$P(ACKREC,U,16)  ; unpack cpt and volume
"RTN","ACKQASU4",54,0)
 . ;  Get Procedure Provider
"RTN","ACKQASU4",55,0)
 . S ACKPRV=$P($G(^TMP("PXKENC",$J,ACKPCENO,"CPT",ACKI,12)),U,4)
"RTN","ACKQASU4",56,0)
 . S ACKQPRV=$$PROVCHK(ACKPRV)
"RTN","ACKQASU4",57,0)
 . I ACKPRV'="" D
"RTN","ACKQASU4",58,0)
 . . S ACKPRVCK=$$STACT^ACKQUTL(ACKQPRV,ACKVD)
"RTN","ACKQASU4",59,0)
 . . I ACKPRVCK'="0",ACKPRVCK'="-6" D
"RTN","ACKQASU4",60,0)
 . . . S ACKTMP="Provider"_U_ACKPRV_U_$$GET1^DIQ(200,ACKPRV_",",.01,"E")_U
"RTN","ACKQASU4",61,0)
 . . . S ACKTMP=ACKTMP_"Invalid Procedure Provider"
"RTN","ACKQASU4",62,0)
 . . . D ADDERR
"RTN","ACKQASU4",63,0)
 . . . S ACKQPRV=""
"RTN","ACKQASU4",64,0)
 . ; add to visit
"RTN","ACKQASU4",65,0)
 . S ACKE=$$SETPROC^ACKQASU5(ACKVIEN,ACKCPT,ACKQTY,ACKQPRV)
"RTN","ACKQASU4",66,0)
 . ; if error returned then file
"RTN","ACKQASU4",67,0)
 . I 'ACKE D  Q
"RTN","ACKQASU4",68,0)
 . . S ACKTMP="Procedure"_U_ACKCPT_U_$$GET1^DIQ(81,ACKCPT,.01,"E")_U_$P(ACKE,U,2)
"RTN","ACKQASU4",69,0)
 . . D ADDERR
"RTN","ACKQASU4",70,0)
 . ; if successful then do the modifiers for this procedure
"RTN","ACKQASU4",71,0)
 . S ACKM=0,ACKPIEN=+ACKE   ; ACKPIEN=procedure ien from visit file
"RTN","ACKQASU4",72,0)
 . F  S ACKM=$O(^TMP("PXKENC",$J,ACKPCENO,"CPT",ACKI,1,ACKM)) Q:'ACKM  D
"RTN","ACKQASU4",73,0)
 . . S ACKMOD=$P($G(^TMP("PXKENC",$J,ACKPCENO,"CPT",ACKI,1,ACKM,0)),U,1)
"RTN","ACKQASU4",74,0)
 . . ; add to visit
"RTN","ACKQASU4",75,0)
 . . S ACKE=$$SETMDFR^ACKQASU5(ACKVIEN,ACKPIEN,ACKMOD)
"RTN","ACKQASU4",76,0)
 . . ; if error returned then file
"RTN","ACKQASU4",77,0)
 . . I '+ACKE D  Q
"RTN","ACKQASU4",78,0)
 . . . S ACKTMP="Modifier"_U_ACKMOD_U_$$GET1^DIQ(81.3,ACKMOD_",",.01,"E")_U_$P(ACKE,U,2)
"RTN","ACKQASU4",79,0)
 . . . D ADDERR
"RTN","ACKQASU4",80,0)
 ;
"RTN","ACKQASU4",81,0)
 ; now file header items
"RTN","ACKQASU4",82,0)
 K ACKARR,ACKPRV
"RTN","ACKQASU4",83,0)
 ;
"RTN","ACKQASU4",84,0)
 ;  If PCE visit has an eligibility write to a&sp visit file
"RTN","ACKQASU4",85,0)
 S ACKVELG=$P($G(^TMP("PXKENC",$J,ACKPCENO,"VST",ACKPCENO,0)),U,21)
"RTN","ACKQASU4",86,0)
 I ACKVELG'="" S ACKARR(509850.6,ACKVIEN_",",80)=ACKVELG
"RTN","ACKQASU4",87,0)
 ;
"RTN","ACKQASU4",88,0)
 ;  Get service connected,Agent Orange,Radiation and Environmental
"RTN","ACKQASU4",89,0)
 ;  Contaminents from PCE file and set them to the Visit file.
"RTN","ACKQASU4",90,0)
 S ACKREC=$G(^TMP("PXKENC",$J,ACKPCENO,"VST",ACKPCENO,800))
"RTN","ACKQASU4",91,0)
 S ACKSC=$P(ACKREC,U,1)  ; service connected
"RTN","ACKQASU4",92,0)
 S ACKAO=$P(ACKREC,U,2)  ; agent orange
"RTN","ACKQASU4",93,0)
 S ACKIR=$P(ACKREC,U,3)  ; ionizing radiation
"RTN","ACKQASU4",94,0)
 S ACKEC=$P(ACKREC,U,4)  ; environmental contaminants
"RTN","ACKQASU4",95,0)
 S ACKARR(509850.6,ACKVIEN_",",20)=$S(+ACKSC:1,ACKSC=0:0,1:"")
"RTN","ACKQASU4",96,0)
 S ACKARR(509850.6,ACKVIEN_",",25)=$S(+ACKAO:1,ACKAO=0:0,1:"")
"RTN","ACKQASU4",97,0)
 S ACKARR(509850.6,ACKVIEN_",",30)=$S(+ACKIR:1,ACKIR=0:0,1:"")
"RTN","ACKQASU4",98,0)
 S ACKARR(509850.6,ACKVIEN_",",35)=$S(+ACKEC:1,ACKEC=0:0,1:"")
"RTN","ACKQASU4",99,0)
 ;
"RTN","ACKQASU4",100,0)
 ; Update QUASAR visit record
"RTN","ACKQASU4",101,0)
 D FILE^DIE("","ACKARR")
"RTN","ACKQASU4",102,0)
 K ACKARR
"RTN","ACKQASU4",103,0)
 ;
"RTN","ACKQASU4",104,0)
COPYPCEX ; Exit point
"RTN","ACKQASU4",105,0)
 K ^TMP("PXKENC",$J)  ; Clear PCE data
"RTN","ACKQASU4",106,0)
 I ACKERR S ^TMP("ACKQASU4",$J,"COPYPCE","ERROR")=ACKERR  ; final error count
"RTN","ACKQASU4",107,0)
 Q ACKERR_U  ; return error count
"RTN","ACKQASU4",108,0)
 ;
"RTN","ACKQASU4",109,0)
 ;
"RTN","ACKQASU4",110,0)
COPYPRIM ; Copy the primary provider to QUASAR
"RTN","ACKQASU4",111,0)
 ;
"RTN","ACKQASU4",112,0)
 ; If we haven't successfully filed a primary then attempt to
"RTN","ACKQASU4",113,0)
 I ACKPRIM="" D  Q  ;
"RTN","ACKQASU4",114,0)
 . S ACKQPRV=$$PROVCHK(ACKPRV)
"RTN","ACKQASU4",115,0)
 . S ACKE=$$SETPRIM^ACKQASU6(ACKVIEN,ACKQPRV)  ; Attempt to add to visit
"RTN","ACKQASU4",116,0)
 . I +ACKE S ACKPRIM=ACKQPRV  ; Record that we now have a primary
"RTN","ACKQASU4",117,0)
 . I '+ACKE D  ; error occurred
"RTN","ACKQASU4",118,0)
 . . S ACKTMP="Provider"_U_ACKPRV_U_$$GET1^DIQ(200,ACKPRV_",",.01,"E")_U
"RTN","ACKQASU4",119,0)
 . . S ACKTMP=ACKTMP_$P(ACKE,U,2)
"RTN","ACKQASU4",120,0)
 . . D ADDERR
"RTN","ACKQASU4",121,0)
 ;
"RTN","ACKQASU4",122,0)
 ; if we already have a primary then add an error message
"RTN","ACKQASU4",123,0)
 S ACKTMP="Provider"_U_ACKPRV_U_$$GET1^DIQ(200,ACKPRV_",",.01,"E")_U
"RTN","ACKQASU4",124,0)
 S ACKTMP=ACKTMP_"Visit already has a Primary Provider"
"RTN","ACKQASU4",125,0)
 D ADDERR
"RTN","ACKQASU4",126,0)
 ;
"RTN","ACKQASU4",127,0)
 ; return to provider loop
"RTN","ACKQASU4",128,0)
 Q
"RTN","ACKQASU4",129,0)
 ;
"RTN","ACKQASU4",130,0)
COPYSCND ; copy a secondary provider to QUASAR
"RTN","ACKQASU4",131,0)
 ;
"RTN","ACKQASU4",132,0)
 ; determine the Quasar classification for this provider
"RTN","ACKQASU4",133,0)
 S ACKQPRV=$$PROVCHK(ACKPRV)
"RTN","ACKQASU4",134,0)
 S ACKTYPQ=$$GET1^DIQ(509850.3,$S(ACKQPRV="":" ",1:ACKQPRV)_",",.02,"I")
"RTN","ACKQASU4",135,0)
 ;
"RTN","ACKQASU4",136,0)
 ; if they are a student and we haven't one already, 
"RTN","ACKQASU4",137,0)
 ;  then attempt to file as student
"RTN","ACKQASU4",138,0)
 I ACKTYPQ="S",ACKSTUD="" D  Q   ; student
"RTN","ACKQASU4",139,0)
 . S ACKE=$$SETSTUD^ACKQASU6(ACKVIEN,ACKQPRV)
"RTN","ACKQASU4",140,0)
 . I +ACKE S ACKSTUD=ACKQPRV Q  ; record that we now have a student
"RTN","ACKQASU4",141,0)
 . I '+ACKE D  ;         Error occurred
"RTN","ACKQASU4",142,0)
 . . S ACKTMP="Student"_U_ACKPRV_U_$$GET1^DIQ(200,ACKPRV_",",.01,"E")_U
"RTN","ACKQASU4",143,0)
 . . S ACKTMP=ACKTMP_$P(ACKE,U,2)
"RTN","ACKQASU4",144,0)
 . . D ADDERR
"RTN","ACKQASU4",145,0)
 ;
"RTN","ACKQASU4",146,0)
 ; if they are a student and we already have one then set error
"RTN","ACKQASU4",147,0)
 I ACKTYPQ="S",ACKSTUD'="" D  Q
"RTN","ACKQASU4",148,0)
 . S ACKTMP="Student"_U_ACKPRV_U_$$GET1^DIQ(200,ACKPRV_",",.01,"E")_U
"RTN","ACKQASU4",149,0)
 . S ACKTMP=ACKTMP_"Visit already has a Student"
"RTN","ACKQASU4",150,0)
 . D ADDERR
"RTN","ACKQASU4",151,0)
 ;
"RTN","ACKQASU4",152,0)
 ; if they are a regular provider, and we do not already have
"RTN","ACKQASU4",153,0)
 ;  a secondary provider then attempt to file
"RTN","ACKQASU4",154,0)
 I (ACKTYPQ="C")!(ACKTYPQ="F")!(ACKTYPQ="O") D  Q
"RTN","ACKQASU4",155,0)
 . S ACKE=$$SETSCND^ACKQASU6(ACKVIEN,ACKQPRV)  ; attempt to add to visit
"RTN","ACKQASU4",156,0)
 . I +ACKE Q    ; All okay
"RTN","ACKQASU4",157,0)
 . I '+ACKE D   ; Error occurred
"RTN","ACKQASU4",158,0)
 . . S ACKTMP="Provider"_U_ACKPRV_U_$$GET1^DIQ(200,ACKPRV_",",.01,"E")_U
"RTN","ACKQASU4",159,0)
 . . S ACKTMP=ACKTMP_$P(ACKE,U,2)
"RTN","ACKQASU4",160,0)
 . . D ADDERR
"RTN","ACKQASU4",161,0)
 ;
"RTN","ACKQASU4",162,0)
 ; if we get this far then provider must be unknown to Quasar
"RTN","ACKQASU4",163,0)
 S ACKTMP="Provider"_U_ACKPRV_U_$$GET1^DIQ(200,ACKPRV_",",.01,"E")_U
"RTN","ACKQASU4",164,0)
 S ACKTMP=ACKTMP_"Provider not defined for Audiology and Speech Pathology"
"RTN","ACKQASU4",165,0)
 D ADDERR
"RTN","ACKQASU4",166,0)
 ;
"RTN","ACKQASU4",167,0)
 ; end of checking a secondary provider
"RTN","ACKQASU4",168,0)
 Q
"RTN","ACKQASU4",169,0)
 ;
"RTN","ACKQASU4",170,0)
ADDERR ; add an error to return array in ^TMP
"RTN","ACKQASU4",171,0)
 ;  ACKERR is current error count, ACKTMP is the error detail
"RTN","ACKQASU4",172,0)
 S ACKERR=ACKERR+1
"RTN","ACKQASU4",173,0)
 S ^TMP("ACKQASU4",$J,"COPYPCE","ERROR",ACKERR)=ACKTMP
"RTN","ACKQASU4",174,0)
 Q
"RTN","ACKQASU4",175,0)
 ;
"RTN","ACKQASU4",176,0)
DIAGHIST ; ensure diagnosis is on Patient history
"RTN","ACKQASU4",177,0)
 ; this s/r checks for ACKICD (diagnosis ien) on the patient history
"RTN","ACKQASU4",178,0)
 ; of patient ACKPAT
"RTN","ACKQASU4",179,0)
 ; if the ICD is not found a new entry is automatically added using the
"RTN","ACKQASU4",180,0)
 ; visit date in ACKVD
"RTN","ACKQASU4",181,0)
 N ACKTGT
"RTN","ACKQASU4",182,0)
 ;
"RTN","ACKQASU4",183,0)
 ; look for the diagnosis on the current history
"RTN","ACKQASU4",184,0)
 D FIND^DIC(509850.22,","_ACKPAT_",","","Q",ACKICD,1,"B","","","ACKTGT")
"RTN","ACKQASU4",185,0)
 ;
"RTN","ACKQASU4",186,0)
 ; if found then exit 
"RTN","ACKQASU4",187,0)
 I +$P($G(ACKTGT("DILIST",0)),U,1)=1 Q  ; exactly one found
"RTN","ACKQASU4",188,0)
 ; 
"RTN","ACKQASU4",189,0)
 ; create a new entry
"RTN","ACKQASU4",190,0)
 S ACKUPD(509850.22,"+1,"_ACKPAT_",",.01)=ACKICD
"RTN","ACKQASU4",191,0)
 S ACKUPD(509850.22,"+1,"_ACKPAT_",",1)=ACKVD
"RTN","ACKQASU4",192,0)
 D UPDATE^DIE("","ACKUPD","","")
"RTN","ACKQASU4",193,0)
 ;
"RTN","ACKQASU4",194,0)
 ; end
"RTN","ACKQASU4",195,0)
 Q
"RTN","ACKQASU4",196,0)
 ;
"RTN","ACKQASU4",197,0)
PROVCHK(ACKPRV) ;  Check to see if Provider is on Quasar Staff file - if so
"RTN","ACKQASU4",198,0)
 ;          function passes back Quasars Provider IEN No else null
"RTN","ACKQASU4",199,0)
 ;
"RTN","ACKQASU4",200,0)
 N ACKA,ACKB,NPNAME S ACKB=""
"RTN","ACKQASU4",201,0)
 I ACKPRV="" Q ACKB
"RTN","ACKQASU4",202,0)
 ;ACKQ*3*17 
"RTN","ACKQASU4",203,0)
 S NPNAME=$$GET1^DIQ(200,ACKPRV,.01,"")
"RTN","ACKQASU4",204,0)
 I '$D(^ACK(509850.3,"B",NPNAME)) Q ACKB
"RTN","ACKQASU4",205,0)
 Q $O(^ACK(509850.3,"B",NPNAME,ACKB))
"RTN","ACKQASU4",206,0)
 ;
"RTN","ACKQCLED")
0^4^B17815400
"RTN","ACKQCLED",1,0)
ACKQCLED ;SMT - ACKQ CLINICIAN EDIT MENU ;11/14/07 10:24am ; 9/22/09 8:48am
"RTN","ACKQCLED",2,0)
 ;;3.0;QUASAR;**17**;Nov 10, 2007;Build 28
"RTN","ACKQCLED",3,0)
 Q
"RTN","ACKQCLED",4,0)
 ; ACKQ*3*17 Removed the pointer from the .01 field of file 509850.3
"RTN","ACKQCLED",5,0)
 ; to the .01 field of file 200. Because of this, Adding a new A&SP
"RTN","ACKQCLED",6,0)
 ; staff member can be done with ^A at the lookup prompt.
"RTN","ACKQCLED",7,0)
 ; 
"RTN","ACKQCLED",8,0)
 ;
"RTN","ACKQCLED",9,0)
EN ;Menu Entry Point.
"RTN","ACKQCLED",10,0)
 N X,Y,DIC,DR,DTOUT,DUOUT,DIE,ACKIEN,ADDFLG
"RTN","ACKQCLED",11,0)
 K RSLT
"RTN","ACKQCLED",12,0)
 ;
"RTN","ACKQCLED",13,0)
SRCH ;Search New Person file for a name
"RTN","ACKQCLED",14,0)
 S DIC="^ACK(509850.3,",DIC(0)="QAME",DIC("A")="Select A&SP STAFF NAME (^A to add new entry):"
"RTN","ACKQCLED",15,0)
 W !
"RTN","ACKQCLED",16,0)
 D ^DIC
"RTN","ACKQCLED",17,0)
 I X["^A" G ADDSTF
"RTN","ACKQCLED",18,0)
 I $D(DTOUT)!$D(DUOUT)!(Y<0) G EX
"RTN","ACKQCLED",19,0)
 S ACKIEN=$O(^ACK(509850.3,"B",$P(Y,"^",2),0)),RSLT=Y,ADDFLG=0
"RTN","ACKQCLED",20,0)
 G EDTSTF
"RTN","ACKQCLED",21,0)
 Q
"RTN","ACKQCLED",22,0)
 ;   
"RTN","ACKQCLED",23,0)
ADDSTF ;Add A&SP Staff Member
"RTN","ACKQCLED",24,0)
 N ANS,PCK,UCK
"RTN","ACKQCLED",25,0)
 K DIC S DIC="^VA(200,",DIC(0)="AQME"
"RTN","ACKQCLED",26,0)
 D ^DIC
"RTN","ACKQCLED",27,0)
 I $D(DTOUT)!$D(DUOUT)!(Y<0) G SRCH
"RTN","ACKQCLED",28,0)
 I $O(^ACK(509850.3,"B",$P(Y,"^",2),0)) W !,$P(Y,"^",2)_" is already an A&SP Staff Member" G ADDSTF
"RTN","ACKQCLED",29,0)
 S ACKLAYGO="",%=2,RSLT=Y
"RTN","ACKQCLED",30,0)
 W !,"Are you adding "_$P(RSLT,"^",2)_" as a new A&SP Staff" D YN^DICN S ANS=% G:ANS=2 ADDSTF
"RTN","ACKQCLED",31,0)
 S PCK=$$PCCHK(+RSLT),UCK=$$USRCHK($P(RSLT,"^",2))
"RTN","ACKQCLED",32,0)
 I (PCK<1) W !,$P(RSLT,"^",2)_$S(PCK=-1:" has no PERSON CLASS, status will be set to STUDENT.",1:" needs a valid PERSON CLASS.") S:PCK=0 ANS=2
"RTN","ACKQCLED",33,0)
 I (UCK=0) W !,$P(RSLT,"^",2)_" needs a valid USR CLASS." S ANS=2
"RTN","ACKQCLED",34,0)
 I ANS=2 G ADDSTF
"RTN","ACKQCLED",35,0)
 I ANS=1 D
"RTN","ACKQCLED",36,0)
 . S ADDFLG=1,DIC="^ACK(509850.3,",X=$P(RSLT,"^",2)
"RTN","ACKQCLED",37,0)
 . S DIC("DR")=".07////^S X=+RSLT" S:(PCK=-1) DIC("DR")=DIC("DR")_";.02//S;.06//0"
"RTN","ACKQCLED",38,0)
 . D FILE^DICN
"RTN","ACKQCLED",39,0)
 . I Y=-1 W "ERROR" Q
"RTN","ACKQCLED",40,0)
 G:Y=-1 EX
"RTN","ACKQCLED",41,0)
 S ACKIEN=$P(Y,"^") G EDTSTF
"RTN","ACKQCLED",42,0)
 Q
"RTN","ACKQCLED",43,0)
 ;
"RTN","ACKQCLED",44,0)
EDTSTF ;Edit an A&SP Staff Member.
"RTN","ACKQCLED",45,0)
 ;     Force User with No PERSON CLASS to remain student.
"RTN","ACKQCLED",46,0)
 ;
"RTN","ACKQCLED",47,0)
 N PCK,UCK
"RTN","ACKQCLED",48,0)
 D NOW^%DTC S TODAY=$P(%,".")
"RTN","ACKQCLED",49,0)
 S DIE="^ACK(509850.3,",DA=ACKIEN
"RTN","ACKQCLED",50,0)
 D DO^DIC1 S ID=$S(+$P(^ACK(509850.3,DA,0),"^",5):$P(^ACK(509850.3,DA,0),"^",5),1:$G(^ACK(509850.3,"ALID"))+1)
"RTN","ACKQCLED",51,0)
 S PCK=$$PCCHK($$GET1^DIQ(509850.3,DA,.07,"I")),UCK=$$USRCHK($$GET1^DIQ(509850.3,DA,.01,"E"))
"RTN","ACKQCLED",52,0)
 S DR=$S(PCK<1:".02///S;",1:".02;")_".03;"_$S('UCK:".04///^S X=TODAY-1",1:".04")_";.05//^S X=$E(""0000"",1,4-$L(ID))_ID;"_$S(PCK<1:".06///0",1:".06")
"RTN","ACKQCLED",53,0)
 ;If this is a newly added user, we don't need double alerts.
"RTN","ACKQCLED",54,0)
 I 'ADDFLG D
"RTN","ACKQCLED",55,0)
 . W:PCK<1 !,"No Valid/Active PERSON CLASS, STATUS forced to STUDENT"
"RTN","ACKQCLED",56,0)
 . W:'UCK !," No Valid USR CLASS, User forced INACTIVE."
"RTN","ACKQCLED",57,0)
 . Q
"RTN","ACKQCLED",58,0)
 D ^DIE
"RTN","ACKQCLED",59,0)
 G SRCH
"RTN","ACKQCLED",60,0)
 Q
"RTN","ACKQCLED",61,0)
 ; 
"RTN","ACKQCLED",62,0)
NMVD ;Validate that the NEW PERSON names match the A&SP Staff names,
"RTN","ACKQCLED",63,0)
 ;If the NEW PERSON name was changed, The A&SP Name will be changed to match
"RTN","ACKQCLED",64,0)
 N NPIEN,NPNM,I,DIK
"RTN","ACKQCLED",65,0)
 S I=0,DIK="^ACK(509850.3,",DIK(1)=".01^B" F  S I=$O(^ACK(509850.3,I)) Q:'I  D
"RTN","ACKQCLED",66,0)
 . S NPIEN=$P(^ACK(509850.3,I,1),"^"),NPNM=$$GET1^DIQ(200,NPIEN,.01,"")
"RTN","ACKQCLED",67,0)
 . I $P(^ACK(509850.3,I,0),"^")=NPNM Q
"RTN","ACKQCLED",68,0)
 . K ^ACK(509850.3,"B",$P(^ACK(509850.3,I,0),"^"),I)
"RTN","ACKQCLED",69,0)
 . S $P(^ACK(509850.3,I,0),"^")=NPNM,DA=I
"RTN","ACKQCLED",70,0)
 . D EN1^DIK
"RTN","ACKQCLED",71,0)
 Q
"RTN","ACKQCLED",72,0)
 ;
"RTN","ACKQCLED",73,0)
PCCHK(NPIEN) ;Check if User has a PERSON CLASS valid to QUASAR.
"RTN","ACKQCLED",74,0)
 ;  Input:
"RTN","ACKQCLED",75,0)
 ;    NPIEN = New Person File IEN
"RTN","ACKQCLED",76,0)
 ;  Output:
"RTN","ACKQCLED",77,0)
 ;    1 - if Audiology/Valid Quasra person class exists and is active
"RTN","ACKQCLED",78,0)
 ;    0 - No valid Quasar person class exists or is active(can be student)
"RTN","ACKQCLED",79,0)
 ;   -1 - No Person classes assigned to this user(can be student)
"RTN","ACKQCLED",80,0)
 ;
"RTN","ACKQCLED",81,0)
 N I,EFDT,EXPDT,X,RETRN,TODAY,PCLS
"RTN","ACKQCLED",82,0)
 S RETRN=0,PCLS=""
"RTN","ACKQCLED",83,0)
 D NOW^%DTC S TODAY=$P(%,".")
"RTN","ACKQCLED",84,0)
 F I=1:1 K ACKQARY D GETS^DIQ(200.05,I_","_NPIEN,".01;2:3","I","ACKQARY") Q:'$D(ACKQARY)  D
"RTN","ACKQCLED",85,0)
 . ;Unimplemented checks (Possible future use?)
"RTN","ACKQCLED",86,0)
 . ;S PCLS=$$GET1^DIQ(8932.1,$G(ACKQARY(200.05,I_","_NPIEN_",",.01,"I")),5,"") Q:(I=1)&(PCLS="")
"RTN","ACKQCLED",87,0)
 . ;I '((PCLS["V140200")!(PCLS["V140701")!(PCLS["V140600")!(PCLS["V140500")) Q
"RTN","ACKQCLED",88,0)
 . S EFDT=$G(ACKQARY(200.05,I_","_NPIEN_",",2,"I")),EXPDT=$G(ACKQARY(200.05,I_","_NPIEN_",",3,"I"))
"RTN","ACKQCLED",89,0)
 . I (EFDT<=TODAY),(+EXPDT=0)!(EXPDT>TODAY) S RETRN=1
"RTN","ACKQCLED",90,0)
 K ACKQARY
"RTN","ACKQCLED",91,0)
 I I=1,PCLS="" Q -1
"RTN","ACKQCLED",92,0)
 Q RETRN
"RTN","ACKQCLED",93,0)
 ;
"RTN","ACKQCLED",94,0)
USRCHK(NPNM) ;Check if User has valid USR Class
"RTN","ACKQCLED",95,0)
 ; Input:
"RTN","ACKQCLED",96,0)
 ;   NPNM = FILE 200 NAME
"RTN","ACKQCLED",97,0)
 ; Output:
"RTN","ACKQCLED",98,0)
 ;   Returns 1 if Valid, 0 if invalid.
"RTN","ACKQCLED",99,0)
 ;
"RTN","ACKQCLED",100,0)
 N USRARY,I,RETRN,TODAY,USRIEN
"RTN","ACKQCLED",101,0)
 D NOW^%DTC S RETRN=0,TODAY=$P(%,".")
"RTN","ACKQCLED",102,0)
 K USRARY D FIND^DIC(8930.3,"",".01","",NPNM,"","B","","","USRARY")
"RTN","ACKQCLED",103,0)
 S I=0 F  S I=$O(USRARY("DILIST",2,I)) Q:'I!RETRN  D
"RTN","ACKQCLED",104,0)
 . S RETRN=1,USRIEN=USRARY("DILIST",2,I)
"RTN","ACKQCLED",105,0)
 . I +$$GET1^DIQ(8930.3,USRIEN,".03","I")>TODAY S RETRN=0
"RTN","ACKQCLED",106,0)
 . I +$$GET1^DIQ(8930.3,USRIEN,".04","I")<=TODAY,+$$GET1^DIQ(8930.3,USRIEN,".04","I")>0 S RETRN=0
"RTN","ACKQCLED",107,0)
 Q RETRN
"RTN","ACKQCLED",108,0)
 ; 
"RTN","ACKQCLED",109,0)
EX K DIC,DIK,DIE,DR,X,Y,RSLT,ACKIEN,USRARY,ACKQARY,TODAY,RETRN,ID
"RTN","ACKQCLED",110,0)
 Q
"RTN","ACKQEN17")
0^^B9822057
"RTN","ACKQEN17",1,0)
ACKQEN17 ;ST/BP-OIFO Pre/Post Install routine for ACKQ*3*17 ; 9/23/09 6:39am
"RTN","ACKQEN17",2,0)
 ;;3.0;QUASAR;**17**;Sept. 26, 2007;Build 28
"RTN","ACKQEN17",3,0)
 ;
"RTN","ACKQEN17",4,0)
 ;This is the EnvCheck install for ACKQ*3*17
"RTN","ACKQEN17",5,0)
 ;
"RTN","ACKQEN17",6,0)
 ;
"RTN","ACKQEN17",7,0)
ENVCH ;Pre Install Entry
"RTN","ACKQEN17",8,0)
 N ACKQA,ACKQD,MSG,MCNT,MASK,NPNAM,XMY,XMDUZ,DIFROM,NPIEN,XMTEXT,BROKEN
"RTN","ACKQEN17",9,0)
 I $G(XPDENV)'=0 Q
"RTN","ACKQEN17",10,0)
 I $$PATCH^XPDUTL("ACKQ*3.0*17") D
"RTN","ACKQEN17",11,0)
 . W !,"Patch ACKQ*3*17 has been installed before, The data migration associated"
"RTN","ACKQEN17",12,0)
 . W !,"with this patch will NOT take place. Proceed with installation to update "
"RTN","ACKQEN17",13,0)
 . W !,"Routines and Data dictionaries."
"RTN","ACKQEN17",14,0)
 S MCNT=1,MASK="                                                       "
"RTN","ACKQEN17",15,0)
 S MSG(MCNT)="This is a list of the names in the A&SP Staff file.",MCNT=MCNT+1
"RTN","ACKQEN17",16,0)
 S MSG(MCNT)=" Be sure to verify and compare the data in the A&SP Staff file before",MCNT=MCNT+1
"RTN","ACKQEN17",17,0)
 S MSG(MCNT)=" installation of ACKQ*3*17. Below contains the names associated to the",MCNT=MCNT+1
"RTN","ACKQEN17",18,0)
 S MSG(MCNT)=" entry in the A&SP Staff file in comparison to the names the entry actually",MCNT=MCNT+1
"RTN","ACKQEN17",19,0)
 S MSG(MCNT)=" points to. If the names on the left don't match the names on the right,",MCNT=MCNT+1
"RTN","ACKQEN17",20,0)
 S MSG(MCNT)=" there is an obvious problem.",MCNT=MCNT+1
"RTN","ACKQEN17",21,0)
 S MSG(MCNT)="*Note* After installation, there will be no names associated to the IEN",MCNT=MCNT+1
"RTN","ACKQEN17",22,0)
 S MSG(MCNT)="       because the file structure has changed.",MCNT=MCNT+1
"RTN","ACKQEN17",23,0)
 S MSG(MCNT)="FILE #200 NAME                File #509850.3 IEN - ASSOCIATED NAME",MCNT=MCNT+1
"RTN","ACKQEN17",24,0)
 I $D(^ACK(509850.3,"D")) D
"RTN","ACKQEN17",25,0)
 . N I S I="" F  S I=$O(^ACK(509850.3,"D",I)) Q:I']""  S ACKQD($O(^ACK(509850.3,"D",I,0)))=I
"RTN","ACKQEN17",26,0)
 S ACKQA=0 F  S ACKQA=$O(^ACK(509850.3,ACKQA)) Q:'ACKQA  S NPNAM=$$GET1^DIQ(509850.3,ACKQA,.01,"E") D
"RTN","ACKQEN17",27,0)
 . S MSG(MCNT)=" "_NPNAM_$E(MASK,1,30-$L(NPNAM))_ACKQA_$E(MASK,1,10-$L(ACKQA))_"- "_$G(ACKQD(ACKQA)),MCNT=MCNT+1,NPIEN=$$GET1^DIQ(8930.3,$$GET1^DIQ(509850.3,ACKQA,.01,"I"),.01,"I")
"RTN","ACKQEN17",28,0)
 . I +ACKQA,('NPIEN)&(NPNAM']"") S BROKEN(ACKQA)="" Q
"RTN","ACKQEN17",29,0)
 . I $$GET1^DIQ(509850.3,ACKQA,.06,"I") S:+NPIEN XMY(NPIEN)="" S:'NPIEN XMY(NPNAM)=""
"RTN","ACKQEN17",30,0)
 I $D(BROKEN) S MSG(MCNT)="",MCNT=MCNT+1,MSG(MCNT)="These file #509850.3 IEN's are Broken Pointers.",MCNT=MCNT+1 F I=0:0 S I=$O(BROKEN(I)) Q:'I  S MSG(MCNT)=" "_I,MCNT=MCNT+1
"RTN","ACKQEN17",31,0)
 S XMDUZ="QUASAR",XMSUB="VERIFY A&SP STAFF DATA (PRE INSTALL)",XMTEXT="MSG(",XMY(DUZ)=""
"RTN","ACKQEN17",32,0)
 D ^XMD
"RTN","ACKQEN17",33,0)
 Q
"RTN","ACKQEN17",34,0)
 ;
"RTN","ACKQP17")
0^^B8121623
"RTN","ACKQP17",1,0)
ACKQP17 ;ST/BP-OIFO Post Install routine for ACKQ*3*17 ; 9/23/09 6:37am
"RTN","ACKQP17",2,0)
 ;;3.0;QUASAR;**17**;Sept. 26, 2007;Build 28
"RTN","ACKQP17",3,0)
 ;
"RTN","ACKQP17",4,0)
 ;This is the Post install for ACKQ*3*17
"RTN","ACKQP17",5,0)
 ;Data migration of file 509850.3 and Mailman message displaying after
"RTN","ACKQP17",6,0)
 ; data in file.
"RTN","ACKQP17",7,0)
 ;
"RTN","ACKQP17",8,0)
 Q
"RTN","ACKQP17",9,0)
POST ;Repoint (POST INSTALL ACKQ*3*17)
"RTN","ACKQP17",10,0)
 N ACKQA,DA,DIE,DR,MSG,MCNT,NPIEN,NPNAM,XMDUZ,XMSUB,XMTEXT,USRPT,MASK,ERR
"RTN","ACKQP17",11,0)
 S MCNT=1,MASK="                                                       "
"RTN","ACKQP17",12,0)
 S ACKQA=0,DIE="^ACK(509850.3,"
"RTN","ACKQP17",13,0)
 ;Quit if this patch has been previously installed.
"RTN","ACKQP17",14,0)
 I $$PATCH^XPDUTL("ACKQ*3.0*17") D  Q
"RTN","ACKQP17",15,0)
 . S XMSUB="ACKQ*3.0*17 Installed Without Data Migration."
"RTN","ACKQP17",16,0)
 . F  S ACKQA=$O(^ACK(509850.3,ACKQA)) Q:'ACKQA  I $$GET1^DIQ(509850.3,ACKQA,.06,"I") S:$$GET1^DIQ(509850.3,ACKQA,.07,"I") XMY($$GET1^DIQ(509850.3,ACKQA,.07,"I"))=""
"RTN","ACKQP17",17,0)
 . S XMY(DUZ)=""
"RTN","ACKQP17",18,0)
 . S MSG(MCNT)="Patch ACKQ*3.0*17 was previously installed, the data migration",MCNT=MCNT+1
"RTN","ACKQP17",19,0)
 . S MSG(MCNT)="has been skipped on the previously rebuilt file #509850.3",MCNT=MCNT+1
"RTN","ACKQP17",20,0)
 . S XMDUZ="QUASAR",XMSUB="ACKQ*3.0*17 Post Install Message.",XMTEXT="MSG("
"RTN","ACKQP17",21,0)
 . N DIFROM D ^XMD
"RTN","ACKQP17",22,0)
 S MSG(MCNT)="This is a list of data in the A&SP Staff File after installation",MCNT=MCNT+1
"RTN","ACKQP17",23,0)
 S MSG(MCNT)=" of ACKQ*3*17. Be sure to double check this data is correct before running",MCNT=MCNT+1
"RTN","ACKQP17",24,0)
 S MSG(MCNT)=" any ACKQ Menu options.",MCNT=MCNT+1
"RTN","ACKQP17",25,0)
 S MSG(MCNT)="File 200 IEN & NAME                            File 509850.3 IEN",MCNT=MCNT+1
"RTN","ACKQP17",26,0)
 F  S ACKQA=$O(^ACK(509850.3,ACKQA)) Q:'ACKQA  D
"RTN","ACKQP17",27,0)
 . S USRPT=$$GET1^DIQ(509850.3,ACKQA,.01,"I"),NPIEN=$$GET1^DIQ(8930.3,$G(USRPT),.01,"I"),NPNAM=$$GET1^DIQ(200,NPIEN,.01,"E")
"RTN","ACKQP17",28,0)
 . I (NPNAM="")!('NPIEN) S ERR(MCNT)="Bad entry at ^ACK(509850.3,"_ACKQA_" Please review." Q
"RTN","ACKQP17",29,0)
 . I $$GET1^DIQ(509850.3,ACKQA,.06,"I") S XMY(NPIEN)=""
"RTN","ACKQP17",30,0)
 . S MSG(MCNT)=NPIEN_$E(MASK,1,12-$L(NPIEN))_NPNAM_$E(MASK,1,35-$L(NPNAM))_ACKQA_$E(MASK,1,12-$L(ACKQA)),MCNT=MCNT+1
"RTN","ACKQP17",31,0)
 . S DA=ACKQA,DR=".01////"_NPNAM_";.07////"_NPIEN
"RTN","ACKQP17",32,0)
 . D ^DIE
"RTN","ACKQP17",33,0)
 S DIK="^ACK(509850.3," D IXALL^DIK ;reindex.
"RTN","ACKQP17",34,0)
 D DELIX^DDMOD(509850.3,.01,2,"") K ^ACK(509850.3,"D") ; Remove "D" X-ref.
"RTN","ACKQP17",35,0)
 ;Tack known ERROR data on at end of mail msg.
"RTN","ACKQP17",36,0)
 S CNT=0 F  S CNT=$O(ERR(CNT)) Q:'CNT  S MSG(MCNT)=ERR(CNT),MCNT=MCNT+1
"RTN","ACKQP17",37,0)
 S XMDUZ="QUASAR",XMSUB="VERIFY A&SP STAFF DATA (POST INSTALL)",XMTEXT="MSG("
"RTN","ACKQP17",38,0)
 N DIFROM D ^XMD
"RTN","ACKQP17",39,0)
 Q
"RTN","ACKQP17",40,0)
 ;
"RTN","ACKQRU")
0^5^B18240668
"RTN","ACKQRU",1,0)
ACKQRU ;AUG/JLTP BIR/PTD HCIOFO/AG-Support Routine for Reports ; 9/2/09 11:56am
"RTN","ACKQRU",2,0)
 ;;3.0;QUASAR;**17**;Feb 11, 2000;Build 28
"RTN","ACKQRU",3,0)
 ;Per VHA Directive 10-93-142, this routine SHOULD NOT be modified.
"RTN","ACKQRU",4,0)
DTRANGE ;
"RTN","ACKQRU",5,0)
BEGDT N ACKTMPB
"RTN","ACKQRU",6,0)
 S DIR(0)="D^:"_DT_":AEXP",DIR("A")="Beginning Date"
"RTN","ACKQRU",7,0)
 S DIR("?")="Enter the earliest date for which you want to see data"
"RTN","ACKQRU",8,0)
 S DIR("??")="^S ACKQHLP=1 D ^ACKQHLP"
"RTN","ACKQRU",9,0)
 D ^DIR K DIR
"RTN","ACKQRU",10,0)
 I Y?1"^"1.E W !,"Jumping not allowed.",! G BEGDT
"RTN","ACKQRU",11,0)
 Q:$D(DIRUT)  S ACKBD=Y-.1,ACKXBD=$$NUMDT^ACKQUTL(Y),ACKTMPB=Y
"RTN","ACKQRU",12,0)
 ;
"RTN","ACKQRU",13,0)
ENDDT ; S DIR(0)="D^"_(ACKBD+.1)_":"_DT_":AEXP",DIR("A")="Ending Date"
"RTN","ACKQRU",14,0)
 S DIR(0)="D"
"RTN","ACKQRU",15,0)
 S DIR("A")="Ending Date"
"RTN","ACKQRU",16,0)
 S DIR("?")="Enter the latest date for which you want to see data"
"RTN","ACKQRU",17,0)
 S DIR("??")="^S ACKQHLP=1 D ^ACKQHLP"
"RTN","ACKQRU",18,0)
 D ^DIR K DIR
"RTN","ACKQRU",19,0)
 I Y?1"^"1.E W !,"Jumping not allowed.",! G ENDDT
"RTN","ACKQRU",20,0)
 Q:$D(DIRUT)  S ACKED=Y+.9,ACKXED=$$NUMDT^ACKQUTL(Y)
"RTN","ACKQRU",21,0)
 I Y<ACKTMPB W !,"End date cannot be before the Begin date.",! G ENDDT
"RTN","ACKQRU",22,0)
 Q
"RTN","ACKQRU",23,0)
PARAMS ;
"RTN","ACKQRU",24,0)
 ; this subroutine contains two standard prompts
"RTN","ACKQRU",25,0)
 ;  1.   Select     a = AUDIOLOGY
"RTN","ACKQRU",26,0)
 ;                  s = SPEECH PATHOLOGY
"RTN","ACKQRU",27,0)
 ;                  b = BOTH
"RTN","ACKQRU",28,0)
 ;  2.   Choose     1 = ONE CLINICIAN
"RTN","ACKQRU",29,0)
 ;                  2 = ONE OTHER PROVIDER
"RTN","ACKQRU",30,0)
 ;                  3 = ONE STUDENT
"RTN","ACKQRU",31,0)
 ;                  4 = ALL CLINICIANS
"RTN","ACKQRU",32,0)
 ;                  5 = ALL OTHER PROVIDERS
"RTN","ACKQRU",33,0)
 ;                  6 = ALL STUDENTS
"RTN","ACKQRU",34,0)
 ; it returns
"RTN","ACKQRU",35,0)
 ;     DIRUT=1    user chose to exit
"RTN","ACKQRU",36,0)
 ;     ACKASB     response to prompt 1
"RTN","ACKQRU",37,0)
 ;                (A=audio, S=speech, B=Both)
"RTN","ACKQRU",38,0)
 ;     ACKSS      response to prompt 2 (1-6)
"RTN","ACKQRU",39,0)
 ;     ACKSTF()   array containing all selected staff
"RTN","ACKQRU",40,0)
 ;                where ACKSTF(n)=persons IEN on NEW PERSON FILE
"RTN","ACKQRU",41,0)
 ;
"RTN","ACKQRU",42,0)
 N DIR,I,X,Y,DIC,ACKQHLP
"RTN","ACKQRU",43,0)
 ;
"RTN","ACKQRU",44,0)
 ; prompt 1
"RTN","ACKQRU",45,0)
 S DIR(0)="S^a:AUDIOLOGY;s:SPEECH PATHOLOGY;b:BOTH"
"RTN","ACKQRU",46,0)
 S DIR("A")="Select",DIR("B")="BOTH"
"RTN","ACKQRU",47,0)
 S DIR("??")="^W !!,""You can select Audiology visits, Speech Pathology visits, or Both."",!"
"RTN","ACKQRU",48,0)
 D ^DIR K DIR Q:$D(DIRUT)
"RTN","ACKQRU",49,0)
 S ACKASB=$S(Y="a":"A",Y="s":"S",1:"B")
"RTN","ACKQRU",50,0)
 ;
"RTN","ACKQRU",51,0)
 ; prompt 2
"RTN","ACKQRU",52,0)
 S DIR(0)="S^1:ONE CLINICIAN;2:ONE OTHER PROVIDER;3:ONE STUDENT;4:ALL CLINICIANS;5:ALL OTHER PROVIDERS;6:ALL STUDENTS"
"RTN","ACKQRU",53,0)
 S DIR("A")="Choose",DIR("??")="^S ACKQHLP=4 D ^ACKQHLP"
"RTN","ACKQRU",54,0)
 D ^DIR K DIR Q:$D(DIRUT)
"RTN","ACKQRU",55,0)
 S ACKSS=Y
"RTN","ACKQRU",56,0)
 K ACKSTF
"RTN","ACKQRU",57,0)
 ; if ONE staff member selected then ask for name
"RTN","ACKQRU",58,0)
 I ACKSS<4 D  Q:$D(DIRUT)
"RTN","ACKQRU",59,0)
 . S DIC("A")="Select "_$S(ACKSS=1:"CLINICIAN",ACKSS=2:"OTHER PROVIDER",1:"STUDENT")_": "
"RTN","ACKQRU",60,0)
 . S DIC(0)="AEMQZ",DIC=509850.3
"RTN","ACKQRU",61,0)
 . S DIC("S")="I $P(^(0),U,2)]"""",$P(""CF^O^S"",U,ACKSS)[$P(^(0),U,2)"
"RTN","ACKQRU",62,0)
 . D ^DIC K DIC S:Y<0 DIRUT=1 Q:$D(DIRUT)
"RTN","ACKQRU",63,0)
 . ;*17 Update to correctly set DUZ
"RTN","ACKQRU",64,0)
 . ;S ACKSTF(+Y)=$P(Y,U,2)
"RTN","ACKQRU",65,0)
 . S ACKSTF(+Y)=$$CONVERT1^ACKQUTL4(+Y)
"RTN","ACKQRU",66,0)
 ; if ALL staff selected then get them from staff file
"RTN","ACKQRU",67,0)
 I ACKSS>3 D
"RTN","ACKQRU",68,0)
 . S I=0 F  S I=$O(^ACK(509850.3,I)) Q:'I  D
"RTN","ACKQRU",69,0)
 . . S X=$P(^ACK(509850.3,I,0),U,2)
"RTN","ACKQRU",70,0)
 . . I X="" Q
"RTN","ACKQRU",71,0)
 . . I ACKSS=4,"CF"'[X Q
"RTN","ACKQRU",72,0)
 . . I ACKSS=5,X'="O" Q
"RTN","ACKQRU",73,0)
 . . I ACKSS=6,X'="S" Q
"RTN","ACKQRU",74,0)
 . . ;*17 Update to correctly set DUZ
"RTN","ACKQRU",75,0)
 . . ;S ACKSTF(I)=$P(^ACK(509850.3,I,0),U)
"RTN","ACKQRU",76,0)
 . . S ACKSTF(I)=$$CONVERT1^ACKQUTL4(I)
"RTN","ACKQRU",77,0)
 ;
"RTN","ACKQRU",78,0)
 ; end
"RTN","ACKQRU",79,0)
 Q
"RTN","ACKQRU",80,0)
 ;
"RTN","ACKQRU",81,0)
GETDIV(DIVARR,ACKSTA,ACKOPT) ; get all the Divisions and put them in DIVARR
"RTN","ACKQRU",82,0)
 ;   INPUT: DIVARR must be passed by reference
"RTN","ACKQRU",83,0)
 ;          ACKSTA division status (optional)
"RTN","ACKQRU",84,0)
 ;                 'A' will get active divisions only (default)
"RTN","ACKQRU",85,0)
 ;                 'I' will get inactive divisions only
"RTN","ACKQRU",86,0)
 ;                 'AI' or 'IA' will get all divisions 
"RTN","ACKQRU",87,0)
 ;          ACKOPT options. so far the only option is 'U' to output the
"RTN","ACKQRU",88,0)
 ;                  names in uppercase.
"RTN","ACKQRU",89,0)
 ;   RETURNS: DIVARR= number found (n)
"RTN","ACKQRU",90,0)
 ;            DIVARR(1,n)=x^y^name
"RTN","ACKQRU",91,0)
 ;            DIVARR(2,name)=n
"RTN","ACKQRU",92,0)
 ;        and DIVARR(3,x)=n
"RTN","ACKQRU",93,0)
 ;              where x=IEN of Div from Medical Center Division file
"RTN","ACKQRU",94,0)
 ;                and y=sequence number from A&SP Site Parameter file
"RTN","ACKQRU",95,0)
 ;                      (in other words ^ACK(509850.8,1,2,y)=x^...)
"RTN","ACKQRU",96,0)
 ;                and name=the division name
"RTN","ACKQRU",97,0)
 ;
"RTN","ACKQRU",98,0)
 N ACKTGT,ACKMSG,ACKSCRN,ACK,SEQ,DIV,DIVNAME
"RTN","ACKQRU",99,0)
 K DIVARR
"RTN","ACKQRU",100,0)
 ; build screen based on requested status
"RTN","ACKQRU",101,0)
 I $G(ACKSTA)="" S ACKSTA="A"
"RTN","ACKQRU",102,0)
 S ACKSCRN="I """_ACKSTA_"""[$P(^(0),U,2)"
"RTN","ACKQRU",103,0)
 ; go get 'em
"RTN","ACKQRU",104,0)
 D LIST^DIC(509850.83,",1,",".01","I","*","","","",ACKSCRN,"","ACKTGT","ACKMSG")
"RTN","ACKQRU",105,0)
 ; now transfer to output array
"RTN","ACKQRU",106,0)
 S DIVARR=$P(ACKTGT("DILIST",0),U,1)
"RTN","ACKQRU",107,0)
 FOR ACK=1:1:DIVARR D
"RTN","ACKQRU",108,0)
 . S SEQ=ACKTGT("DILIST",2,ACK),DIV=ACKTGT("DILIST",1,ACK)
"RTN","ACKQRU",109,0)
 . S DIVNAME=$$GET1^DIQ(40.8,DIV_",",.01)
"RTN","ACKQRU",110,0)
 . S DIVARR(1,ACK)=DIV_U_SEQ_U_DIVNAME
"RTN","ACKQRU",111,0)
 . S DIVARR(2,$$UP($G(ACKOPT),DIVNAME))=ACK
"RTN","ACKQRU",112,0)
 . S DIVARR(3,DIV)=ACK
"RTN","ACKQRU",113,0)
 Q
"RTN","ACKQRU",114,0)
UP(ACKOPT,X) ; convert X to uppercase (if requested)
"RTN","ACKQRU",115,0)
 I ACKOPT["U" Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ACKQRU",116,0)
 Q X
"RTN","ACKQRU",117,0)
 ;
"RTN","ACKQRU",118,0)
STOPSORT(ACKASB,ACKVSC) ; determine stop code sort value
"RTN","ACKQRU",119,0)
 ; this function determines whether the Stop Code for the Visit is 
"RTN","ACKQRU",120,0)
 ;  valid for the type of report selected. 
"RTN","ACKQRU",121,0)
 ; If it is not valid the function returns 0
"RTN","ACKQRU",122,0)
 ; If it is valid the function returns an integer which may be used to 
"RTN","ACKQRU",123,0)
 ;  sequence the visit so that Audio comes first, Audio/Tel next,
"RTN","ACKQRU",124,0)
 ;  then Speech and Speech/Tel.
"RTN","ACKQRU",125,0)
 ; If an unknown Visit Stop Code is encountered, it is given a 9
"RTN","ACKQRU",126,0)
 ;  which means it will appear at the end of the report as UNKNOWN.
"RTN","ACKQRU",127,0)
 I ACKVSC="A" Q $S(ACKASB="A":1,ACKASB="B":1,1:0)  ; audiology #1
"RTN","ACKQRU",128,0)
 I ACKVSC="AT" Q $S(ACKASB="A":2,ACKASB="B":2,1:0)  ; telephone audiology #2
"RTN","ACKQRU",129,0)
 I ACKVSC="S" Q $S(ACKASB="S":3,ACKASB="B":3,1:0)  ; speech #3
"RTN","ACKQRU",130,0)
 I ACKVSC="ST" Q $S(ACKASB="S":4,ACKASB="B":4,1:0)  ; telephone speech #4
"RTN","ACKQRU",131,0)
 Q 9  ; any other value 9
"RTN","ACKQRU",132,0)
 ;
"RTN","ACKQRU",133,0)
STOPNM(ACKSORT) ; convert stop code sort value into a stop code name
"RTN","ACKQRU",134,0)
 I ACKSORT=1 Q "AUDIOLOGY"
"RTN","ACKQRU",135,0)
 I ACKSORT=2 Q "AUDIOLOGY TELEPHONE"
"RTN","ACKQRU",136,0)
 I ACKSORT=3 Q "SPEECH PATHOLOGY"
"RTN","ACKQRU",137,0)
 I ACKSORT=4 Q "SPEECH TELEPHONE"
"RTN","ACKQRU",138,0)
 Q "UNKNOWN"
"RTN","ACKQRU",139,0)
 ;
"RTN","ACKQUTL4")
0^2^B81469112
"RTN","ACKQUTL4",1,0)
ACKQUTL4 ;HCIOFO/BH-NEW/EDIT Visit Template Utilities for QUASAR ; 9/2/09 11:53am
"RTN","ACKQUTL4",2,0)
 ;;3.0;QUASAR;**1,8,14,17**;Feb 11, 2000;Build 28
"RTN","ACKQUTL4",3,0)
 ;Per VHA Directive 10-93-142, this routine SHOULD NOT be modified.
"RTN","ACKQUTL4",4,0)
 ;
"RTN","ACKQUTL4",5,0)
CHK(Y,ACKVD) ;
"RTN","ACKQUTL4",6,0)
 N ACKQQD
"RTN","ACKQUTL4",7,0)
 S ACKQQD=$P(^EC(725,Y,0),"^",3) I ACKQQD="" Q 1
"RTN","ACKQUTL4",8,0)
 I ACKVD<ACKQQD Q 1
"RTN","ACKQUTL4",9,0)
 Q 0
"RTN","ACKQUTL4",10,0)
 ;  Clears passed in field # of visit rec.
"RTN","ACKQUTL4",11,0)
CLEAR(ACKVIEN,ACKZNUM) ;
"RTN","ACKQUTL4",12,0)
 N ACKARR
"RTN","ACKQUTL4",13,0)
 S ACKARR(509850.6,ACKVIEN_",",ACKZNUM)=""
"RTN","ACKQUTL4",14,0)
 D FILE^DIE("","ACKARR","")
"RTN","ACKQUTL4",15,0)
 Q
"RTN","ACKQUTL4",16,0)
 ;  Decides if patient is/was suffering from MST at the time of the visit
"RTN","ACKQUTL4",17,0)
MST(ACKPCE,ACKVD,ACKPAT) ;
"RTN","ACKQUTL4",18,0)
 I '$$PATCH^XPDUTL("DG*5.3*308") Q 0
"RTN","ACKQUTL4",19,0)
 I ACKPCE'=1 Q 0
"RTN","ACKQUTL4",20,0)
 N ACKRET,ACKXKEEP
"RTN","ACKQUTL4",21,0)
 S ACKXKEEP=X
"RTN","ACKQUTL4",22,0)
 S ACKRET=$$GETSTAT^DGMSTAPI(ACKPAT,ACKVD)
"RTN","ACKQUTL4",23,0)
 S X=ACKXKEEP
"RTN","ACKQUTL4",24,0)
 I $P(ACKRET,"^",2)="Y" Q 1
"RTN","ACKQUTL4",25,0)
 Q 0
"RTN","ACKQUTL4",26,0)
 ;
"RTN","ACKQUTL4",27,0)
PROB(ACKPCE,ACKDIV) ;  Decides if Update PCE Problem List prompt appaers
"RTN","ACKQUTL4",28,0)
 I 'ACKPCE Q 0
"RTN","ACKQUTL4",29,0)
 I '$$GET1^DIQ(509850.83,ACKDIV_",1",".09","I") Q 0
"RTN","ACKQUTL4",30,0)
 Q 1
"RTN","ACKQUTL4",31,0)
 ;
"RTN","ACKQUTL4",32,0)
SETUP ;  Called from within the New/Edit visit template to set up parameters
"RTN","ACKQUTL4",33,0)
 ;
"RTN","ACKQUTL4",34,0)
 D ENS^%ZISS
"RTN","ACKQUTL4",35,0)
 ;
"RTN","ACKQUTL4",36,0)
 I ACKVISIT="EDIT" D
"RTN","ACKQUTL4",37,0)
 . K ACKAR
"RTN","ACKQUTL4",38,0)
 . S ACKAR(509850.6,ACKVIEN_",",.27)=""
"RTN","ACKQUTL4",39,0)
 . D FILE^DIE("K","ACKAR") K ACKAR
"RTN","ACKQUTL4",40,0)
 ;
"RTN","ACKQUTL4",41,0)
 N ACKX,ACKD0
"RTN","ACKQUTL4",42,0)
 ;
"RTN","ACKQUTL4",43,0)
 S (ICPTVDT,ICDVDT)=ACKVD
"RTN","ACKQUTL4",44,0)
 ;
"RTN","ACKQUTL4",45,0)
 S ACKPCE=$$PCE(ACKDIV,ACKVD)  ;  Sets PCE indicator
"RTN","ACKQUTL4",46,0)
 ;
"RTN","ACKQUTL4",47,0)
 S ACKEVENT=1
"RTN","ACKQUTL4",48,0)
 S ACKEVENT=$$EVENT^ACKQUTL5(ACKDIV,ACKVD)   ; Use EC Codes or CPT
"RTN","ACKQUTL4",49,0)
 ;  Indicates whether local clinic #'s are in use
"RTN","ACKQUTL4",50,0)
 S ACKCLNO=$$GET1^DIQ(509850.83,ACKDIV_",1",".04","I")
"RTN","ACKQUTL4",51,0)
 ;
"RTN","ACKQUTL4",52,0)
 ;  Indicates whether the bypass flag for Audiometrics is set
"RTN","ACKQUTL4",53,0)
 S ACKBA=$$GET1^DIQ(509850.83,ACKDIV_",1",".07","I")
"RTN","ACKQUTL4",54,0)
 ;
"RTN","ACKQUTL4",55,0)
 ;  Indicates whether the visit is service connected
"RTN","ACKQUTL4",56,0)
 S DFN=ACKPAT D ELIG^VADPT S ACKSC=$P(VAEL(3),U,1)
"RTN","ACKQUTL4",57,0)
 ;
"RTN","ACKQUTL4",58,0)
 ;  Indicates whether the patient has any previous visits
"RTN","ACKQUTL4",59,0)
 ;  with audiometric test scores
"RTN","ACKQUTL4",60,0)
 ;
"RTN","ACKQUTL4",61,0)
 S ACKATS=1
"RTN","ACKQUTL4",62,0)
 S ACKX=$O(^ACK(509850.6,"AMD",ACKPAT,0)),ACKD0=$O(^ACK(509850.6,"AMD",ACKPAT,+ACKX,0))
"RTN","ACKQUTL4",63,0)
 I 'ACKX!('$D(^ACK(509850.6,+ACKD0,0))) S ACKATS=0
"RTN","ACKQUTL4",64,0)
 ;
"RTN","ACKQUTL4",65,0)
 ;   
"RTN","ACKQUTL4",66,0)
 S ACKAO=0,ACKRAD=0,ACKENV=0,ACKLOSS="",ACKLAMD=""
"RTN","ACKQUTL4",67,0)
 I ACKPCE D STATUS
"RTN","ACKQUTL4",68,0)
 S:ACKSC ACKQSER=1 S:ACKAO ACKQORG=1
"RTN","ACKQUTL4",69,0)
 S:ACKRAD ACKQIR=1 S:ACKENV ACKQECON=1
"RTN","ACKQUTL4",70,0)
 ;
"RTN","ACKQUTL4",71,0)
 D ELIG
"RTN","ACKQUTL4",72,0)
 ;
"RTN","ACKQUTL4",73,0)
 K VASV,VAEL
"RTN","ACKQUTL4",74,0)
 ;  
"RTN","ACKQUTL4",75,0)
 Q
"RTN","ACKQUTL4",76,0)
 ;
"RTN","ACKQUTL4",77,0)
PCE(ACKDIV,ACKVD) ;  Sets ACKPCE to 1 if - The send to PCE flag is set 
"RTN","ACKQUTL4",78,0)
 ; (for the division) and the PCE INTERFACE START DATE is before or on
"RTN","ACKQUTL4",79,0)
 ; the same day as the Visit Date and the INTERFACE WITH PCE flag for
"RTN","ACKQUTL4",80,0)
 ; the site is set to true.
"RTN","ACKQUTL4",81,0)
 N ACKOUT S ACKOUT=0
"RTN","ACKQUTL4",82,0)
 I $$GET1^DIQ(509850.8,"1,","2","I") D
"RTN","ACKQUTL4",83,0)
 . I $$GET1^DIQ(509850.83,ACKDIV_",1",".03","I"),ACKVD'<$$GET1^DIQ(509850.83,ACKDIV_",1",".08","I") S ACKOUT=1
"RTN","ACKQUTL4",84,0)
 Q ACKOUT
"RTN","ACKQUTL4",85,0)
 ;
"RTN","ACKQUTL4",86,0)
 ;-----
"RTN","ACKQUTL4",87,0)
STATUS ;  Sets Agent orange, Radiation and Environmental Contaiment indicators
"RTN","ACKQUTL4",88,0)
 ;  if present.
"RTN","ACKQUTL4",89,0)
 ;
"RTN","ACKQUTL4",90,0)
 ;  Agent Orange and Radiation
"RTN","ACKQUTL4",91,0)
 D SVC^VADPT S ACKAO=VASV(2),ACKRAD=VASV(3)
"RTN","ACKQUTL4",92,0)
 ;
"RTN","ACKQUTL4",93,0)
 ;  Environmental Contaminents
"RTN","ACKQUTL4",94,0)
 S ACKENV=$$GET1^DIQ(2,ACKPAT,.322013,"I")
"RTN","ACKQUTL4",95,0)
 I ACKENV="Y" S ACKENV=1
"RTN","ACKQUTL4",96,0)
 S:ACKENV'="1" ACKENV=0
"RTN","ACKQUTL4",97,0)
 Q
"RTN","ACKQUTL4",98,0)
 ;-----
"RTN","ACKQUTL4",99,0)
 ;
"RTN","ACKQUTL4",100,0)
AUDIO() ;  Pass back 1 if user is valid to enter audimetric scores else 0
"RTN","ACKQUTL4",101,0)
 ;
"RTN","ACKQUTL4",102,0)
 I ACKCP=1 Q 1
"RTN","ACKQUTL4",103,0)
 I ACKLOSS,'ACKBA Q 1
"RTN","ACKQUTL4",104,0)
 Q 0
"RTN","ACKQUTL4",105,0)
 ;
"RTN","ACKQUTL4",106,0)
 ;-----
"RTN","ACKQUTL4",107,0)
 ;
"RTN","ACKQUTL4",108,0)
ELIG ;  Set up eligibiliy variables and if more than one eligibility create
"RTN","ACKQUTL4",109,0)
 ;  display array used in block ELIGDISP
"RTN","ACKQUTL4",110,0)
 ;
"RTN","ACKQUTL4",111,0)
 ;  If not service connected set default to primary & file in visit rec.
"RTN","ACKQUTL4",112,0)
 I $P(VAEL(3),U,1)=0 D  Q
"RTN","ACKQUTL4",113,0)
 . S ACKELGCT=1,ACKELIG=$P(VAEL(1),U,2),ACKELIG1=$P(VAEL(1),U,1)
"RTN","ACKQUTL4",114,0)
 . K ACKAR  S ACKAR(509850.6,ACKVIEN_",",80)=ACKELIG1
"RTN","ACKQUTL4",115,0)
 . D FILE^DIE("K","ACKAR") K ACKAR Q
"RTN","ACKQUTL4",116,0)
 ;
"RTN","ACKQUTL4",117,0)
 S ACKVELG=$$GET1^DIQ(509850.6,ACKVIEN,80,"I") I $G(ACKVELG)'="" D
"RTN","ACKQUTL4",118,0)
 . S ACKVELG=ACKVELG_"^"_$$GET1^DIQ(8,ACKVELG,.01,"I")
"RTN","ACKQUTL4",119,0)
 ;
"RTN","ACKQUTL4",120,0)
 ;  Set default eligibility
"RTN","ACKQUTL4",121,0)
 S ACKELIG=$S($G(ACKVELG)'="":$P(ACKVELG,U,2),1:$P(VAEL(1),U,2))
"RTN","ACKQUTL4",122,0)
 ;
"RTN","ACKQUTL4",123,0)
 ;  Set up display array
"RTN","ACKQUTL4",124,0)
 ;
"RTN","ACKQUTL4",125,0)
 K ACKELDIS S ACKELGCT=0
"RTN","ACKQUTL4",126,0)
 ;
"RTN","ACKQUTL4",127,0)
 I $G(ACKVELG)'="" S ACKELDIS($P(ACKVELG,U,1))=ACKVELG,ACKELGCT=ACKELGCT+1
"RTN","ACKQUTL4",128,0)
 S ACKELDIS($P(VAEL(1),U,1))=VAEL(1),ACKELGCT=ACKELGCT+1
"RTN","ACKQUTL4",129,0)
 ;
"RTN","ACKQUTL4",130,0)
 S ACKK2=""
"RTN","ACKQUTL4",131,0)
 F  S ACKK2=$O(VAEL(1,ACKK2)) Q:ACKK2=""  D
"RTN","ACKQUTL4",132,0)
 .S ACKELGCT=ACKELGCT+1
"RTN","ACKQUTL4",133,0)
 .S ACKELDIS($P(VAEL(1,ACKK2),U,1))=VAEL(1,ACKK2)
"RTN","ACKQUTL4",134,0)
 ;
"RTN","ACKQUTL4",135,0)
 ;  If not already set up add NSC internal number 5
"RTN","ACKQUTL4",136,0)
 I '$D(ACKELDIS(5)) S ACKELGCT=ACKELGCT+1,ACKELDIS(5)="5^NSC"
"RTN","ACKQUTL4",137,0)
 ;
"RTN","ACKQUTL4",138,0)
 Q
"RTN","ACKQUTL4",139,0)
 ;
"RTN","ACKQUTL4",140,0)
ELIGDIS  ;  Display patients eligibilities
"RTN","ACKQUTL4",141,0)
 ;
"RTN","ACKQUTL4",142,0)
 N ACKK2,RC
"RTN","ACKQUTL4",143,0)
 D ENS^%ZISS
"RTN","ACKQUTL4",144,0)
 S RC=$$PAGE^ACKQNQ(6)  Q:RC<0  W:'RC !!
"RTN","ACKQUTL4",145,0)
 W IOUON,"This Patient has other Entitled Eligibilities",IOUOFF,!!
"RTN","ACKQUTL4",146,0)
 S ACKK2=""
"RTN","ACKQUTL4",147,0)
 F  S ACKK2=$O(ACKELDIS(ACKK2)) Q:ACKK2=""  D  Q:RC<0
"RTN","ACKQUTL4",148,0)
 .Q:$P(ACKELDIS(ACKK2),U,2)=ACKELIG
"RTN","ACKQUTL4",149,0)
 .S RC=$$PAGE^ACKQNQ(2) Q:RC<0
"RTN","ACKQUTL4",150,0)
 .W:RC IOUON,"Other Entitled Eligibilities (cont'd)",IOUOFF,!!
"RTN","ACKQUTL4",151,0)
 .W ?1,$P(ACKELDIS(ACKK2),U,2)_" "
"RTN","ACKQUTL4",152,0)
 .W $$GET1^DIQ(8,ACKK2,5),!
"RTN","ACKQUTL4",153,0)
 Q
"RTN","ACKQUTL4",154,0)
 ;-----
"RTN","ACKQUTL4",155,0)
 ;  Display Patient data concerning Rated Disabilities and service clas.
"RTN","ACKQUTL4",156,0)
PATDIS ;
"RTN","ACKQUTL4",157,0)
 S DFN=ACKPAT  D RATDIS^ACKQNQ
"RTN","ACKQUTL4",158,0)
 D CLASDIS^ACKQNQ
"RTN","ACKQUTL4",159,0)
 Q
"RTN","ACKQUTL4",160,0)
 ;
"RTN","ACKQUTL4",161,0)
ACKCP() ;  This initialises the C&P Paramter.
"RTN","ACKQUTL4",162,0)
 ;  First check site parameteres file for C&P flag
"RTN","ACKQUTL4",163,0)
 ;
"RTN","ACKQUTL4",164,0)
 I '$$GET1^DIQ(509850.83,ACKDIV_",1",".06","I") Q 0
"RTN","ACKQUTL4",165,0)
 ;
"RTN","ACKQUTL4",166,0)
 ;  Check if C&P has an open request pass back 1 or 0
"RTN","ACKQUTL4",167,0)
 S ACKQCPS=$$EN1^DVBCTRN(ACKPAT,"AUDIO")
"RTN","ACKQUTL4",168,0)
 S:ACKQCPS>0 ACKQCPS=$P(ACKQCPS,U)
"RTN","ACKQUTL4",169,0)
 I $S(ACKCSC'="A":1,$$EN1^DVBCTRN(ACKPAT,"AUDIO",ACKQCPS)<1:1,$O(^ACK(509850.6,"ALCP",ACKQCPS,0))=ACKVIEN:0,$D(^ACK(509850.6,"ALCP",ACKQCPS)):1,1:0) Q 0
"RTN","ACKQUTL4",170,0)
 Q "1^"_ACKQCPS
"RTN","ACKQUTL4",171,0)
 ;
"RTN","ACKQUTL4",172,0)
 ;-----
"RTN","ACKQUTL4",173,0)
PROVDIS ;  Get providers already filed and display
"RTN","ACKQUTL4",174,0)
 ;
"RTN","ACKQUTL4",175,0)
 N RC
"RTN","ACKQUTL4",176,0)
 D ENS^%ZISS
"RTN","ACKQUTL4",177,0)
 N ACKK1,ACKPROV,ACKK2,D0,ACKARR,ACKTGT,ACKMSG
"RTN","ACKQUTL4",178,0)
 D LIST^DIC(509850.66,","_ACKVIEN_",",".01","","*","","","","","","ACKTGT","ACKMSG")
"RTN","ACKQUTL4",179,0)
 S ACKK1=""
"RTN","ACKQUTL4",180,0)
 F  S ACKK1=$O(ACKTGT("DILIST",1,ACKK1)) Q:ACKK1=""  D
"RTN","ACKQUTL4",181,0)
 . S ACKARR(ACKK1)=ACKTGT("DILIST",1,ACKK1)
"RTN","ACKQUTL4",182,0)
 K ACKPROV S ACKK2=ACKVIEN_","
"RTN","ACKQUTL4",183,0)
 D GETS^DIQ(509850.6,ACKK2,"6;7","E","ACKPROV")
"RTN","ACKQUTL4",184,0)
 I '$D(ACKARR),$G(ACKPROV(509850.6,ACKK2,"6","E"))="",$G(ACKPROV(509850.6,ACKK2,"7","E"))="" Q
"RTN","ACKQUTL4",185,0)
 S RC=$$PAGE^ACKQNQ(5) Q:RC<0  W:'RC !!
"RTN","ACKQUTL4",186,0)
 W " ",IOUON,"Providers currently recorded for this visit",IOUOFF,!
"RTN","ACKQUTL4",187,0)
 I $G(ACKPROV(509850.6,ACKK2,"6","E"))'="" W !," Primary Provider   - "_ACKPROV(509850.6,ACKK2,"6","E")
"RTN","ACKQUTL4",188,0)
 I $D(ACKARR)>1  S RC=0  D  Q:RC<0
"RTN","ACKQUTL4",189,0)
 . S ACKK1=""
"RTN","ACKQUTL4",190,0)
 . F  S ACKK1=$O(ACKARR(ACKK1))  Q:ACKK1=""  D  Q:RC<0
"RTN","ACKQUTL4",191,0)
 . . S RC=$$PAGE^ACKQNQ(2)  Q:RC<0
"RTN","ACKQUTL4",192,0)
 . . W !," Secondary Provider - "_ACKARR(ACKK1)
"RTN","ACKQUTL4",193,0)
 D:$G(ACKPROV(509850.6,ACKK2,"7","E"))'=""
"RTN","ACKQUTL4",194,0)
 . S RC=$$PAGE^ACKQNQ(2)  Q:RC<0
"RTN","ACKQUTL4",195,0)
 . W !," Student            - "_ACKPROV(509850.6,ACKK2,"7","E")
"RTN","ACKQUTL4",196,0)
 W !
"RTN","ACKQUTL4",197,0)
 Q
"RTN","ACKQUTL4",198,0)
 ;
"RTN","ACKQUTL4",199,0)
CPTDIS ;  Get procedures already filed and display
"RTN","ACKQUTL4",200,0)
 ;
"RTN","ACKQUTL4",201,0)
 D ENS^%ZISS
"RTN","ACKQUTL4",202,0)
 N D0,ACKKEY,ACKCPTDS,ACKK3,ACKPIEN,ACKTMOD,ACKCODE,ACKPROC,ACKPRV
"RTN","ACKQUTL4",203,0)
 D LIST^DIC(509850.61,","_ACKVIEN_",",".01;.03;.05","I","*","","","","","","ACKCPTDS")
"RTN","ACKQUTL4",204,0)
 I '$D(ACKCPTDS("DILIST",1)) Q
"RTN","ACKQUTL4",205,0)
 W !!," ",IOUON,"Procedures currently entered for this visit",IOUOFF,!
"RTN","ACKQUTL4",206,0)
 S ACKK3=""
"RTN","ACKQUTL4",207,0)
 F  S ACKK3=$O(ACKCPTDS("DILIST",1,ACKK3)) Q:ACKK3=""  D
"RTN","ACKQUTL4",208,0)
 . S ACKPROC=ACKCPTDS("DILIST",1,ACKK3)
"RTN","ACKQUTL4",209,0)
 . S ACKPRV=ACKCPTDS("DILIST","ID",ACKK3,.05)
"RTN","ACKQUTL4",210,0)
 . I ACKPRV'="" S ACKPRV=$$CONVERT(ACKPRV)
"RTN","ACKQUTL4",211,0)
 . W !," Code: ",$$GET1^DIQ(509850.4,ACKPROC_",",.01),?19,"Volume: ",ACKCPTDS("DILIST","ID",ACKK3,.03) I ACKPRV'="" W "   Provider : ",ACKPRV
"RTN","ACKQUTL4",212,0)
 . D LONG^ACKQUTL6(ACKPROC,"1")
"RTN","ACKQUTL4",213,0)
 . W !
"RTN","ACKQUTL4",214,0)
 . ;  Check if any Modifiers present for this Procedure
"RTN","ACKQUTL4",215,0)
 . S ACKPIEN="" I $D(ACKCODE(ACKPROC)) S ACKPIEN=$O(ACKCODE(ACKPROC,""),-1)
"RTN","ACKQUTL4",216,0)
 . S ACKPIEN=$O(^ACK(509850.6,ACKVIEN,3,"B",ACKPROC,ACKPIEN))
"RTN","ACKQUTL4",217,0)
 . I ACKPIEN="" W ! Q
"RTN","ACKQUTL4",218,0)
 . S ACKCODE(ACKPROC,ACKPIEN)=""
"RTN","ACKQUTL4",219,0)
 . ;  Modifier level present do a LIST to get them
"RTN","ACKQUTL4",220,0)
 . S ACKPIEN=ACKPIEN_","_ACKVIEN
"RTN","ACKQUTL4",221,0)
 . D LIST^DIC(509850.64,","_ACKPIEN_",",".01","I","*","","","","","","ACKTMOD")
"RTN","ACKQUTL4",222,0)
 . I $D(ACKTMOD("DILIST",1)) D
"RTN","ACKQUTL4",223,0)
 . . W "        Modifiers:"
"RTN","ACKQUTL4",224,0)
 . . ;  Loop through Modifier Array
"RTN","ACKQUTL4",225,0)
 . . S ACKKEY=""
"RTN","ACKQUTL4",226,0)
 . . F  S ACKKEY=$O(ACKTMOD("DILIST",1,ACKKEY)) Q:ACKKEY=""  D
"RTN","ACKQUTL4",227,0)
 . . . W ?19,$$MODTXT^ACKQUTL8(ACKTMOD("DILIST",1,ACKKEY),ACKVD),!
"RTN","ACKQUTL4",228,0)
 . . K ACKTMOD
"RTN","ACKQUTL4",229,0)
 W !
"RTN","ACKQUTL4",230,0)
 Q
"RTN","ACKQUTL4",231,0)
 ;
"RTN","ACKQUTL4",232,0)
DIAGDIS ;  Get diagnoses already filed and display
"RTN","ACKQUTL4",233,0)
 D ENS^%ZISS
"RTN","ACKQUTL4",234,0)
 N ACK1,D0,ACKDIAGD,ACKK3,ACKK4,ACKI,ACKD,RC
"RTN","ACKQUTL4",235,0)
 D LIST^DIC(509850.63,","_ACKVIEN_",",".01;.12","I","*","","","","","","ACKDIAGD")
"RTN","ACKQUTL4",236,0)
 I '$D(ACKDIAGD("DILIST",1)) Q
"RTN","ACKQUTL4",237,0)
 S RC=$$PAGE^ACKQNQ(5)  Q:RC<0  W:'RC !!
"RTN","ACKQUTL4",238,0)
 W " ",IOUON,"Diagnoses currently entered for this visit:",IOUOFF,!
"RTN","ACKQUTL4",239,0)
 S ACKK3="",ACKSP="                                   "
"RTN","ACKQUTL4",240,0)
 F  S ACKK3=$O(ACKDIAGD("DILIST",1,ACKK3)) Q:ACKK3=""  D
"RTN","ACKQUTL4",241,0)
 . S ACKK4=ACKDIAGD("DILIST",1,ACKK3)
"RTN","ACKQUTL4",242,0)
 . S ACKI=$$GET1^DIQ(80,ACKK4,.01)
"RTN","ACKQUTL4",243,0)
 . S ACKD($S(ACKI?.NP:+ACKI,1:ACKI))=ACKI_$E("   ",1,7-$L(ACKI))_"- "_$E($$DIAGTXT^ACKQUTL8(ACKK4,ACKVD)_ACKSP,1,35)_$S($G(ACKDIAGD("DILIST","ID",ACKK3,".12"))=1:"  * Primary Diagnosis *",1:"  * Secondary Diagnosis *")
"RTN","ACKQUTL4",244,0)
 ;
"RTN","ACKQUTL4",245,0)
 S ACK1=""
"RTN","ACKQUTL4",246,0)
 F  S ACK1=$O(ACKD(ACK1)) Q:ACK1=""  D
"RTN","ACKQUTL4",247,0)
 . S RC=$$PAGE^ACKQNQ(3)  Q:RC<0
"RTN","ACKQUTL4",248,0)
 . W:RC IOUON,"Diagnoses currently entered for this visit (cont'd)",IOUOFF,!
"RTN","ACKQUTL4",249,0)
 . W !," ",ACKD(ACK1)
"RTN","ACKQUTL4",250,0)
 W !
"RTN","ACKQUTL4",251,0)
 Q
"RTN","ACKQUTL4",252,0)
 ;
"RTN","ACKQUTL4",253,0)
 ;
"RTN","ACKQUTL4",254,0)
HLOSS ; Sets hearing loss variable if one or more diagnosis are for hearing
"RTN","ACKQUTL4",255,0)
 ;  loss
"RTN","ACKQUTL4",256,0)
 ;
"RTN","ACKQUTL4",257,0)
 N ACKK4,ACKDIAG
"RTN","ACKQUTL4",258,0)
 S (ACKLOSS,ACKK4)=0
"RTN","ACKQUTL4",259,0)
 F  S ACKK4=$O(^ACK(509850.6,ACKVIEN,1,ACKK4)) Q:ACKK4'?1.N!(ACKLOSS)  D
"RTN","ACKQUTL4",260,0)
 .S ACKDIAG=$P(^ACK(509850.6,ACKVIEN,1,ACKK4,0),U,1)
"RTN","ACKQUTL4",261,0)
 .I $P(^ACK(509850.1,ACKDIAG,0),U,5)=1 S ACKLOSS=1 Q 
"RTN","ACKQUTL4",262,0)
 Q
"RTN","ACKQUTL4",263,0)
 ;
"RTN","ACKQUTL4",264,0)
MODDIS ;  Display Modifiers - Called within Executable Help of Modiifer
"RTN","ACKQUTL4",265,0)
 ;  Enter Edit.
"RTN","ACKQUTL4",266,0)
 S ACK1="0"
"RTN","ACKQUTL4",267,0)
 F  S ACK1=$O(^ACK(509850.5,ACK1)) Q:'+ACK1  D
"RTN","ACKQUTL4",268,0)
 . W !,"  "_$$GET1^DIQ(81.3,ACK1,.01),?5,$$MODTXT^ACKQUTL8(ACK1,""),?53,$$GET1^DIQ(81.3,ACK1,.04)
"RTN","ACKQUTL4",269,0)
 W ! Q
"RTN","ACKQUTL4",270,0)
 ;
"RTN","ACKQUTL4",271,0)
CONVERT(ACKPRV) ; Converts the QSR Prov Code into a name string from file 200.
"RTN","ACKQUTL4",272,0)
 ;
"RTN","ACKQUTL4",273,0)
 ;ACKQ*3*17
"RTN","ACKQUTL4",274,0)
 Q $$GET1^DIQ(509850.3,ACKPRV,.07)
"RTN","ACKQUTL4",275,0)
 ;
"RTN","ACKQUTL4",276,0)
CONVERT1(ACKPRV) ;  Converts the Provider IEN number used within Quasar
"RTN","ACKQUTL4",277,0)
 ;                  to its equivalent code used on the 200 file.
"RTN","ACKQUTL4",278,0)
 ;ACKQ*3*17
"RTN","ACKQUTL4",279,0)
 Q +$$GET1^DIQ(509850.3,ACKPRV,.07,"I")
"RTN","ACKQUTL4",280,0)
 ;
"RTN","ACKQUTL4",281,0)
CONVERT2(ACKPRV) ;  Converts the Provider IEN number used within Quasar
"RTN","ACKQUTL4",282,0)
 ;                  to its equivalent code used on the 200 file.
"RTN","ACKQUTL4",283,0)
 ;ACKQ*3*17
"RTN","ACKQUTL4",284,0)
 Q +$$GET1^DIQ(509850.3,ACKPRV,.07,"I")
"RTN","ACKQUTL4",285,0)
 ;
"RTN","ACKQUTL6")
0^3^B72728308
"RTN","ACKQUTL6",1,0)
ACKQUTL6 ;HCIOFO/BH-A&SP Utilities routine ; 12/28/07 11:04am
"RTN","ACKQUTL6",2,0)
 ;;3.0;QUASAR;**1,7,17**;Feb 11, 2000;Build 28
"RTN","ACKQUTL6",3,0)
 ;Per VHA Directive 10-93-142, this routine SHOULD NOT be modified.
"RTN","ACKQUTL6",4,0)
 ;
"RTN","ACKQUTL6",5,0)
DATACHEK(X,ACKVIEN) ;  Checks that the input (X) is a valid time also checks that 
"RTN","ACKQUTL6",6,0)
 ;          current user has supervisor status
"RTN","ACKQUTL6",7,0)
 ;
"RTN","ACKQUTL6",8,0)
 I $$TIMECHEK^ACKQASU5(ACKVIEN,"") Q 0
"RTN","ACKQUTL6",9,0)
 S X=$$TTIME(X) Q X
"RTN","ACKQUTL6",10,0)
 ;
"RTN","ACKQUTL6",11,0)
 ;
"RTN","ACKQUTL6",12,0)
SUPER(DUZ) ;  Function passes back true if DUZ belongs to a supervisor
"RTN","ACKQUTL6",13,0)
 N ACKDUZ
"RTN","ACKQUTL6",14,0)
 S ACKDUZ=$$PROVCHK^ACKQASU4(DUZ)
"RTN","ACKQUTL6",15,0)
 I 'ACKDUZ Q 0
"RTN","ACKQUTL6",16,0)
 I $D(^ACK(509850.3,ACKDUZ,0)),$P(^(0),"^",6)=1 Q 1
"RTN","ACKQUTL6",17,0)
 Q 0
"RTN","ACKQUTL6",18,0)
 ;
"RTN","ACKQUTL6",19,0)
 ;
"RTN","ACKQUTL6",20,0)
TTIME(X) ;   Time input validation used within input transform of
"RTN","ACKQUTL6",21,0)
 ;           the Appointment time field (#55) of the visit file.
"RTN","ACKQUTL6",22,0)
 ;
"RTN","ACKQUTL6",23,0)
 ;           X=Time entered by the user
"RTN","ACKQUTL6",24,0)
 ;           Return value either O if input was invalid or formatted
"RTN","ACKQUTL6",25,0)
 ;           time.
"RTN","ACKQUTL6",26,0)
 ;
"RTN","ACKQUTL6",27,0)
 N Y,ACKFMT,ACKAMPM
"RTN","ACKQUTL6",28,0)
 I X="NOW"!(X="now") D NOW^%DTC S X=$P(%,".",2)
"RTN","ACKQUTL6",29,0)
 I X="NOO" S X="NOON"
"RTN","ACKQUTL6",30,0)
 ;
"RTN","ACKQUTL6",31,0)
 S %DT="%DTS"
"RTN","ACKQUTL6",32,0)
 ; S DIR(0)="D^::%DT"
"RTN","ACKQUTL6",33,0)
 S X="2990303@"_X
"RTN","ACKQUTL6",34,0)
 K Y
"RTN","ACKQUTL6",35,0)
 D ^%DT
"RTN","ACKQUTL6",36,0)
 ;
"RTN","ACKQUTL6",37,0)
 I Y="-1" Q 0
"RTN","ACKQUTL6",38,0)
 S Y=$P(Y,".",2)
"RTN","ACKQUTL6",39,0)
 S ACKT="."_Y
"RTN","ACKQUTL6",40,0)
 ;
"RTN","ACKQUTL6",41,0)
 S ACKFMT=Y
"RTN","ACKQUTL6",42,0)
 ;. D AMPM
"RTN","ACKQUTL6",43,0)
 ;. W ?30,"("_+$E(ACKFMT,1,2)_":"_$E(ACKFMT,3,4)_":"_$E(ACKFMT,5,6)_ACKAMPM_")"
"RTN","ACKQUTL6",44,0)
 ;. D AMPM
"RTN","ACKQUTL6",45,0)
 ;. W ?30,"("_+$E(ACKFMT,1,2)_":"_$E(ACKFMT,3,4)_ACKAMPM_")"
"RTN","ACKQUTL6",46,0)
 W ?30,"("_$$FMT(ACKFMT)_")"
"RTN","ACKQUTL6",47,0)
 Q ACKT
"RTN","ACKQUTL6",48,0)
 ;
"RTN","ACKQUTL6",49,0)
FMT(ACKFMT,ACKSTYL) ; convert Quasar Time to external format
"RTN","ACKQUTL6",50,0)
 ; inputs:- ACKFMT - fileman time (internal)  (reqd)
"RTN","ACKQUTL6",51,0)
 ;            can be passed in as 'date.time','.time' or just 'time'
"RTN","ACKQUTL6",52,0)
 ;          ACKSTYL - style of output (optional)
"RTN","ACKQUTL6",53,0)
 ;                    where 0 = 12:mm[:ss] am/pm (no lead space)
"RTN","ACKQUTL6",54,0)
 ;                          1 = 12:mm[:ss] am/pm (lead space)
"RTN","ACKQUTL6",55,0)
 ;                          2 = 12:mm am/pm
"RTN","ACKQUTL6",56,0)
 N ACKHH,ACKAMPM
"RTN","ACKQUTL6",57,0)
 S ACKSTYL=+$G(ACKSTYL)
"RTN","ACKQUTL6",58,0)
 I ACKFMT["." S ACKFMT=$P(ACKFMT,".",2)
"RTN","ACKQUTL6",59,0)
 S ACKFMT=ACKFMT_"00000"
"RTN","ACKQUTL6",60,0)
 S ACKHH=+$E(ACKFMT,1,2)
"RTN","ACKQUTL6",61,0)
 G:ACKSTYL=1 FMT1
"RTN","ACKQUTL6",62,0)
 G:ACKSTYL=2 FMT2
"RTN","ACKQUTL6",63,0)
FMT0 ; style 0 - 12:mm[:ss] am/pm  (the default)
"RTN","ACKQUTL6",64,0)
 S ACKAMPM=" AM" I ACKHH>11,ACKHH<24 S ACKAMPM=" PM"
"RTN","ACKQUTL6",65,0)
 I ACKHH<1 S ACKHH=12
"RTN","ACKQUTL6",66,0)
 I ACKHH>12 S ACKHH=ACKHH-12
"RTN","ACKQUTL6",67,0)
 S ACKFMT=ACKHH_":"_$E(ACKFMT,3,4)_$S(+$E(ACKFMT,5,6)>0:":"_$E(ACKFMT,5,6),1:"")_ACKAMPM
"RTN","ACKQUTL6",68,0)
 Q ACKFMT
"RTN","ACKQUTL6",69,0)
FMT1 ; style 1 - 12:mm[:ss] am/pm  (with lead space if hour<10)
"RTN","ACKQUTL6",70,0)
 S ACKAMPM=" AM" I ACKHH>11,ACKHH<24 S ACKAMPM=" PM"
"RTN","ACKQUTL6",71,0)
 I ACKHH<1 S ACKHH=12
"RTN","ACKQUTL6",72,0)
 I ACKHH>12 S ACKHH=ACKHH-12
"RTN","ACKQUTL6",73,0)
 S ACKFMT=$J(ACKHH,2)_":"_$E(ACKFMT,3,4)_$S(+$E(ACKFMT,5,6)>0:":"_$E(ACKFMT,5,6),1:"")_ACKAMPM
"RTN","ACKQUTL6",74,0)
 Q ACKFMT
"RTN","ACKQUTL6",75,0)
FMT2 ; style 2 - 12:mm am/pm
"RTN","ACKQUTL6",76,0)
 S ACKAMPM=" AM" I ACKHH>11,ACKHH<24 S ACKAMPM=" PM"
"RTN","ACKQUTL6",77,0)
 I ACKHH<1 S ACKHH=12
"RTN","ACKQUTL6",78,0)
 I ACKHH>12 S ACKHH=ACKHH-12
"RTN","ACKQUTL6",79,0)
 S ACKFMT=$J(ACKHH,2)_":"_$E(ACKFMT,3,4)_ACKAMPM
"RTN","ACKQUTL6",80,0)
 Q ACKFMT
"RTN","ACKQUTL6",81,0)
 ;
"RTN","ACKQUTL6",82,0)
DUPECHK(X,DA,ACKP) ;  Check there are no previous duplicate entries
"RTN","ACKQUTL6",83,0)
 N ACKTGT,ACKCLIN,ACKVD,ACKPAT
"RTN","ACKQUTL6",84,0)
 S ACKPAT=ACKP
"RTN","ACKQUTL6",85,0)
 D GETS^DIQ(509850.6,DA_",",".01;1;2.6","I","ACKTGT")
"RTN","ACKQUTL6",86,0)
 S ACKVD=$G(ACKTGT(509850.6,DA_",",.01,"I")) I ACKVD="" Q 1
"RTN","ACKQUTL6",87,0)
 I ACKPAT="" S ACKPAT=$G(ACKTGT(509850.6,DA_",",1,"I")) I ACKPAT="" Q 1
"RTN","ACKQUTL6",88,0)
 S ACKCLIN=$G(ACKTGT(509850.6,DA_",",2.6,"I")) I ACKCLIN="" Q 1
"RTN","ACKQUTL6",89,0)
 I $D(^ACK(509850.6,"APCE",ACKPAT,ACKCLIN,ACKVD,X)) Q 0
"RTN","ACKQUTL6",90,0)
 Q 1
"RTN","ACKQUTL6",91,0)
 ;
"RTN","ACKQUTL6",92,0)
DUPCHK ;  Called from xecutable help of Appointment Time field when ACKITME is
"RTN","ACKQUTL6",93,0)
 ;  defined.  This will only be defined if DUPECHK returned false
"RTN","ACKQUTL6",94,0)
 W !!,"Quasar already has a Visit entry for this Patient, within the same Clinic,"
"RTN","ACKQUTL6",95,0)
 W !,"on the same date at the same time."
"RTN","ACKQUTL6",96,0)
 W !!,"Please re-enter a new Appointment Time.",!!
"RTN","ACKQUTL6",97,0)
 K ACKITME Q
"RTN","ACKQUTL6",98,0)
 ;
"RTN","ACKQUTL6",99,0)
 ;
"RTN","ACKQUTL6",100,0)
CDR() ;  COMPUTE SUGGESTED CDR BASED ON TREATING SPECIALTY
"RTN","ACKQUTL6",101,0)
 S VAIP("D")=ACKVD D IN5^VADPT S ACKTS=+$$GET1^DIQ(45.7,+VAIP(8),1,"I"),ACKCDN=$$GET1^DIQ(42.4,ACKTS,6)_".00"
"RTN","ACKQUTL6",102,0)
 S ACKCDP=$S($O(^ACK(509850,"B",ACKCDN,0)):$O(^(0)),1:0) I 'ACKCDP S ACKCDP=$O(^ACK(509850,"B","2611.00",0))
"RTN","ACKQUTL6",103,0)
 S ACKCDN=$P(^ACK(509850,ACKCDP,0),U),ACKCD=$P(^(0),U,2)
"RTN","ACKQUTL6",104,0)
 K %,%H,%I,ACKTS,ACKCDP,VAIP,VAERR
"RTN","ACKQUTL6",105,0)
 W !!,"Suggested CDR Account :",ACKCDN,"  ",ACKCD,!
"RTN","ACKQUTL6",106,0)
 Q ACKCDN
"RTN","ACKQUTL6",107,0)
 ;
"RTN","ACKQUTL6",108,0)
 ;----------------------------------------------------------------
"RTN","ACKQUTL6",109,0)
 ;  Routines and Utilities used within the Clinician Template
"RTN","ACKQUTL6",110,0)
 ;
"RTN","ACKQUTL6",111,0)
 ;
"RTN","ACKQUTL6",112,0)
STAFFNO(X) ;  Finds valid staff No. to be used when allocating next time
"RTN","ACKQUTL6",113,0)
 ;
"RTN","ACKQUTL6",114,0)
 N ACKFIRST,ACKFIND,ACKX
"RTN","ACKQUTL6",115,0)
 S ACKFIRST=1
"RTN","ACKQUTL6",116,0)
 I X=9999 S X="0000" S ACKFIRST=0
"RTN","ACKQUTL6",117,0)
 D GETNEXT,FILE
"RTN","ACKQUTL6",118,0)
 Q
"RTN","ACKQUTL6",119,0)
 ;
"RTN","ACKQUTL6",120,0)
GETNEXT ;
"RTN","ACKQUTL6",121,0)
 S ACKFIND=0
"RTN","ACKQUTL6",122,0)
 F  Q:ACKFIND  D
"RTN","ACKQUTL6",123,0)
 . S ACKX=+X
"RTN","ACKQUTL6",124,0)
 . S X=X+1
"RTN","ACKQUTL6",125,0)
 . I X=9999,ACKFIRST S ACKFIRST=0 S X=0 Q
"RTN","ACKQUTL6",126,0)
 . I X=9999,'ACKFIRST S ACKFIND=1 Q
"RTN","ACKQUTL6",127,0)
 . S X=$E("0000",$L(X)+1,4)_X
"RTN","ACKQUTL6",128,0)
 . I '$D(^ACK(509850.3,"C",X)) S ACKFIND=1,X=ACKX Q
"RTN","ACKQUTL6",129,0)
 Q
"RTN","ACKQUTL6",130,0)
 ;
"RTN","ACKQUTL6",131,0)
FILE ;
"RTN","ACKQUTL6",132,0)
 S ^ACK(509850.3,"ALID")=$E("0000",$L(X)+1,4)_X
"RTN","ACKQUTL6",133,0)
 Q
"RTN","ACKQUTL6",134,0)
 ;
"RTN","ACKQUTL6",135,0)
 ;
"RTN","ACKQUTL6",136,0)
IDATE(D0,Y) ;  Checks that the entered Inactive date falls after the
"RTN","ACKQUTL6",137,0)
 ;          Active date (if one has been entered).
"RTN","ACKQUTL6",138,0)
 I Y="" Q 1  ;  Its valid to not enter an inactivation date. 
"RTN","ACKQUTL6",139,0)
 N ACKACT
"RTN","ACKQUTL6",140,0)
 S ACKACT=$$GET1^DIQ(509850.3,D0,.03,"I") I ACKACT="" Q 1
"RTN","ACKQUTL6",141,0)
 I Y<ACKACT Q 0
"RTN","ACKQUTL6",142,0)
 Q 1
"RTN","ACKQUTL6",143,0)
 ;
"RTN","ACKQUTL6",144,0)
ADATE(D0,Y) ;  Checks that the entered Active date falls before the
"RTN","ACKQUTL6",145,0)
 ;          Inactive date (if one has been entered).
"RTN","ACKQUTL6",146,0)
 N ACKINA
"RTN","ACKQUTL6",147,0)
 S ACKINA=$$GET1^DIQ(509850.3,D0,.04,"I") I ACKINA="" Q 1
"RTN","ACKQUTL6",148,0)
 I Y>ACKINA Q 0
"RTN","ACKQUTL6",149,0)
 Q 1
"RTN","ACKQUTL6",150,0)
 ;
"RTN","ACKQUTL6",151,0)
STAFFREF(X,DA) ;    Cross Reference called from Cross Reference 'Logic'
"RTN","ACKQUTL6",152,0)
 Q  ;Disabled With the removal of "D" X-ref ACKQ*3*17
"RTN","ACKQUTL6",153,0)
 ;
"RTN","ACKQUTL6",154,0)
 N ACKNAME
"RTN","ACKQUTL6",155,0)
 ;ACKQ*3*17
"RTN","ACKQUTL6",156,0)
 ;S ACKNAME=$$GET1^DIQ(8930.3,X_",",.01)
"RTN","ACKQUTL6",157,0)
 S ACKNAME=$$GET1^DIQ(200,X_",",.01)
"RTN","ACKQUTL6",158,0)
 S ^ACK(509850.3,"D",ACKNAME,DA)=""
"RTN","ACKQUTL6",159,0)
 Q
"RTN","ACKQUTL6",160,0)
 ;
"RTN","ACKQUTL6",161,0)
REINDEX() ;   Re-Indexes 'D' Cross Reference of Staff file
"RTN","ACKQUTL6",162,0)
 Q  ;Disabled With the removal of "D" X-ref ACKQ*3*17
"RTN","ACKQUTL6",163,0)
 ;   First checks that all ^USR(8930.3 entries that 509850.3 points to
"RTN","ACKQUTL6",164,0)
 ;   still exist
"RTN","ACKQUTL6",165,0)
 N ACK01,ACK,ACKARR,ACKCNT
"RTN","ACKQUTL6",166,0)
 K ACKARR
"RTN","ACKQUTL6",167,0)
 S ACK=0,ACKCNT=0
"RTN","ACKQUTL6",168,0)
 F  S ACK=$O(^ACK(509850.3,ACK)) Q:'ACK  D
"RTN","ACKQUTL6",169,0)
 . S ACK01=$P(^ACK(509850.3,ACK,0),"^",1)
"RTN","ACKQUTL6",170,0)
 . I '$D(^USR(8930.3,ACK01,0)) D SETARR(ACK)
"RTN","ACKQUTL6",171,0)
 ;
"RTN","ACKQUTL6",172,0)
 I $D(ACKARR) D  Q 0
"RTN","ACKQUTL6",173,0)
 . W !!,"Warning - The following user(s) have been deleted from the USR Class Membership"
"RTN","ACKQUTL6",174,0)
 . W !,"file (#8930.3)."
"RTN","ACKQUTL6",175,0)
 . W !,"Quasar's A&SP Staff file (#509850.3) points to this file."
"RTN","ACKQUTL6",176,0)
 . W !,"The Quasar staff member(s) need to be re-entered into the USR Class Membership"
"RTN","ACKQUTL6",177,0)
 . W !,"file (8930.3) and the associated Quasar staff record amended to point to this"
"RTN","ACKQUTL6",178,0)
 . W !,"new entry.",!!
"RTN","ACKQUTL6",179,0)
 . N ACK1
"RTN","ACKQUTL6",180,0)
 . S ACK1=""
"RTN","ACKQUTL6",181,0)
 . F  S ACK1=$O(ACKARR(ACK1)) Q:ACK1=""  D
"RTN","ACKQUTL6",182,0)
 . . W "     "_ACKARR(ACK1),!
"RTN","ACKQUTL6",183,0)
 . W !!
"RTN","ACKQUTL6",184,0)
 . W "Please inform IRM/National VistA Support of this problem.  This error"
"RTN","ACKQUTL6",185,0)
 . W !,"can be re-created by running this option again."
"RTN","ACKQUTL6",186,0)
 . W !!
"RTN","ACKQUTL6",187,0)
 ;
"RTN","ACKQUTL6",188,0)
 N DA,D0,X,Y
"RTN","ACKQUTL6",189,0)
 K ^ACK(509850.3,"D")
"RTN","ACKQUTL6",190,0)
 S DIK="^ACK(509850.3,"
"RTN","ACKQUTL6",191,0)
 S DIK(1)=".07^D"
"RTN","ACKQUTL6",192,0)
 D ENALL^DIK
"RTN","ACKQUTL6",193,0)
 Q 1
"RTN","ACKQUTL6",194,0)
 ;
"RTN","ACKQUTL6",195,0)
SETARR(ACK) ;
"RTN","ACKQUTL6",196,0)
 Q  ;Disabled With the removal of "D" X-ref ACKQ*3*17
"RTN","ACKQUTL6",197,0)
 ;
"RTN","ACKQUTL6",198,0)
 N ACKNAME
"RTN","ACKQUTL6",199,0)
 S ACKNAME=""
"RTN","ACKQUTL6",200,0)
 F  S ACKNAME=$O(^ACK(509850.3,"D",ACKNAME)) Q:ACKNAME=""  D
"RTN","ACKQUTL6",201,0)
 . I $D(^ACK(509850.3,"D",ACKNAME,ACK)) S ACKCNT=ACKCNT+1 S ACKARR(ACKCNT)=ACKNAME
"RTN","ACKQUTL6",202,0)
 Q
"RTN","ACKQUTL6",203,0)
 ;
"RTN","ACKQUTL6",204,0)
LONG(ACKPC,ACKQPR) ;  Displays Long Description of Procedure Code
"RTN","ACKQUTL6",205,0)
 ;
"RTN","ACKQUTL6",206,0)
 Q
"RTN","ACKQUTL6",207,0)
 N ACKQ,ACKRES,ACKNEW,ACKSTR,ACK1,ACKQARR,ACKLEN,ACKCNT S ACKSTR="",ACKCNT=0
"RTN","ACKQUTL6",208,0)
 S ACK1=0
"RTN","ACKQUTL6",209,0)
 F  S ACK1=$O(^ICPT(ACKPC,"D",ACK1)) Q:'ACK1  D
"RTN","ACKQUTL6",210,0)
 . S ACKNEW=^ICPT(ACKPC,"D",ACK1,0)
"RTN","ACKQUTL6",211,0)
 . S ACKNEW=$$STRIP(ACKNEW)
"RTN","ACKQUTL6",212,0)
 . I $G(ACKSTR)'="" S ACKNEW=ACKSTR_" "_ACKNEW
"RTN","ACKQUTL6",213,0)
 . S ACKLEN=$L(ACKNEW)
"RTN","ACKQUTL6",214,0)
 . I ACKLEN>54 D
"RTN","ACKQUTL6",215,0)
 . . I ACKLEN=55 S ACKCNT=ACKCNT+1,ACKQARR(ACKCNT)=ACKNEW S ACKSTR="" Q
"RTN","ACKQUTL6",216,0)
 . . S ACKRES=$$FORMAT(ACKNEW) S ACKNEW=$P(ACKRES,"^",1),ACKSTR=$P(ACKRES,"^",2),ACKCNT=ACKCNT+1,ACKQARR(ACKCNT)=ACKNEW
"RTN","ACKQUTL6",217,0)
 . I ACKLEN<55 S ACKSTR=ACKNEW
"RTN","ACKQUTL6",218,0)
 I $G(ACKSTR)'="" D
"RTN","ACKQUTL6",219,0)
 . S ACKQ=1
"RTN","ACKQUTL6",220,0)
 . F  Q:'ACKQ  D
"RTN","ACKQUTL6",221,0)
 . . S ACKNEW=ACKSTR S ACKRES=$$FORMAT(ACKNEW)
"RTN","ACKQUTL6",222,0)
 . . S ACKNEW=$P(ACKRES,"^",1),ACKSTR=$P(ACKRES,"^",2)
"RTN","ACKQUTL6",223,0)
 . . S ACKCNT=ACKCNT+1,ACKQARR(ACKCNT)=ACKNEW
"RTN","ACKQUTL6",224,0)
 . . I $G(ACKSTR)="" S ACKQ=0
"RTN","ACKQUTL6",225,0)
 ;
"RTN","ACKQUTL6",226,0)
 ;  Display Array
"RTN","ACKQUTL6",227,0)
 ;
"RTN","ACKQUTL6",228,0)
 I '$D(ACKQARR) Q
"RTN","ACKQUTL6",229,0)
 N ACKK1,ACKQUIT
"RTN","ACKQUTL6",230,0)
 S ACKK1="",ACKQUIT=0
"RTN","ACKQUTL6",231,0)
 W !!," Long Description: "
"RTN","ACKQUTL6",232,0)
 F  S ACKK1=$O(ACKQARR(ACKK1)) Q:'ACKK1!(ACKQUIT)  D
"RTN","ACKQUTL6",233,0)
 . I ACKK1'=1 W !,"                   "
"RTN","ACKQUTL6",234,0)
 . W ACKQARR(ACKK1) I ACKQPR=1,ACKK1=3 W "..." S ACKQUIT=1
"RTN","ACKQUTL6",235,0)
 W !
"RTN","ACKQUTL6",236,0)
 ;
"RTN","ACKQUTL6",237,0)
 Q
"RTN","ACKQUTL6",238,0)
 ;
"RTN","ACKQUTL6",239,0)
FORMAT(ACKNEW) ;
"RTN","ACKQUTL6",240,0)
 ;
"RTN","ACKQUTL6",241,0)
 N ACKRES,ACKCCT,ACKEND,ACKN
"RTN","ACKQUTL6",242,0)
 I $L(ACKNEW)<56 S ACKRES=ACKNEW_"^"_"" Q ACKRES
"RTN","ACKQUTL6",243,0)
 S ACKCCT=0,ACKEND=0
"RTN","ACKQUTL6",244,0)
 F  Q:ACKEND  D
"RTN","ACKQUTL6",245,0)
 . S ACKCCT=ACKCCT+1
"RTN","ACKQUTL6",246,0)
 . I $L($P(ACKNEW," ",1,ACKCCT))<56 S ACKN=ACKCCT
"RTN","ACKQUTL6",247,0)
 . I $L($P(ACKNEW," ",1,ACKCCT))'<56 S ACKEND=1
"RTN","ACKQUTL6",248,0)
 S ACKRES=$P(ACKNEW," ",1,ACKN)_"^"_$P(ACKNEW," ",ACKN+1,999)
"RTN","ACKQUTL6",249,0)
 Q ACKRES
"RTN","ACKQUTL6",250,0)
 ;
"RTN","ACKQUTL6",251,0)
STRIP(ACKNEW) ;
"RTN","ACKQUTL6",252,0)
 N ACKARRAY,ACKCT,ACKLEN,ACKX,ACKY,ACKI
"RTN","ACKQUTL6",253,0)
 S ACKY="",ACKCT=0
"RTN","ACKQUTL6",254,0)
 S ACKLEN=$L(ACKNEW)
"RTN","ACKQUTL6",255,0)
 F ACKI=1:1:ACKLEN D
"RTN","ACKQUTL6",256,0)
 . S ACKX=$E(ACKNEW,ACKI,ACKI)
"RTN","ACKQUTL6",257,0)
 . I ACKX'=" " S ACKY=ACKY_ACKX
"RTN","ACKQUTL6",258,0)
 . I ACKX=" ",ACKY'="" S ACKCT=ACKCT+1 S ACKARRAY(ACKCT)=ACKY S ACKY=""
"RTN","ACKQUTL6",259,0)
 . I ACKI=ACKLEN,ACKY'="" S ACKCT=ACKCT+1 S ACKARRAY(ACKCT)=ACKY S ACKY=""
"RTN","ACKQUTL6",260,0)
 ;
"RTN","ACKQUTL6",261,0)
 N ACKLOOP,ACKSTRG
"RTN","ACKQUTL6",262,0)
 S ACKLOOP=0,ACKSTRG=""
"RTN","ACKQUTL6",263,0)
 F  S ACKLOOP=$O(ACKARRAY(ACKLOOP)) Q:ACKLOOP=""  D
"RTN","ACKQUTL6",264,0)
 . S ACKSTRG=ACKSTRG_ACKARRAY(ACKLOOP)_" "
"RTN","ACKQUTL6",265,0)
 ;
"RTN","ACKQUTL6",266,0)
 S ACKLEN=$L(ACKSTRG)
"RTN","ACKQUTL6",267,0)
 I $E(ACKSTRG,ACKLEN,ACKLEN)=" " S ACKSTRG=$E(ACKSTRG,1,ACKLEN-1)
"RTN","ACKQUTL6",268,0)
 ;
"RTN","ACKQUTL6",269,0)
 Q ACKSTRG
"RTN","ACKQUTL6",270,0)
PLIST(ACKPAT,ACKDC) ; Determines if an entry exists in the Problem file
"RTN","ACKQUTL6",271,0)
 ; returns Status as first piece, Problem List IEN as second piece
"RTN","ACKQUTL6",272,0)
 ; (Status^IEN)
"RTN","ACKQUTL6",273,0)
 ; Status values -  1=Inactive, 2=Active
"RTN","ACKQUTL6",274,0)
 N ACKIFN,ACKPLQT
"RTN","ACKQUTL6",275,0)
 S (ACKIFN,ACKPLQT)=0
"RTN","ACKQUTL6",276,0)
 I $D(^AUPNPROB("AC",ACKPAT)) D
"RTN","ACKQUTL6",277,0)
 . F  S ACKIFN=$O(^AUPNPROB("AC",ACKPAT,ACKIFN)) Q:(ACKIFN="")  D  Q:ACKPLQT
"RTN","ACKQUTL6",278,0)
 . .I $D(^AUPNPROB("B",ACKDC,ACKIFN)) S ACKPLQT=ACKIFN
"RTN","ACKQUTL6",279,0)
 I ACKPLQT Q $S($P($G(^AUPNPROB(ACKPLQT,0)),U,12)="A":2,1:1)_U_ACKPLQT
"RTN","ACKQUTL6",280,0)
 Q 0
"RTN","ACKQUTL6",281,0)
 ;
"VER")
8.0^22.0
"^DD",509850.3,509850.3,0)
FIELD^^.07^7
"^DD",509850.3,509850.3,0,"DDA")
N
"^DD",509850.3,509850.3,0,"DT")
3071116
"^DD",509850.3,509850.3,0,"IX","ALID",509850.3,.05)

"^DD",509850.3,509850.3,0,"IX","B",509850.3,.01)

"^DD",509850.3,509850.3,0,"IX","C",509850.3,.05)

"^DD",509850.3,509850.3,0,"IX","D",509850.3,.01)

"^DD",509850.3,509850.3,0,"NM","A&SP STAFF")

"^DD",509850.3,509850.3,0,"PT",509850.6,.25)

"^DD",509850.3,509850.3,0,"PT",509850.6,.27)

"^DD",509850.3,509850.3,0,"PT",509850.6,6)

"^DD",509850.3,509850.3,0,"PT",509850.6,7)

"^DD",509850.3,509850.3,0,"PT",509850.6,8)

"^DD",509850.3,509850.3,0,"PT",509850.61,.05)

"^DD",509850.3,509850.3,0,"PT",509850.615,.05)

"^DD",509850.3,509850.3,0,"PT",509850.63,.14)

"^DD",509850.3,509850.3,0,"PT",509850.66,.01)

"^DD",509850.3,509850.3,0,"VRPK")
QUASAR
"^DD",509850.3,509850.3,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<1) X
"^DD",509850.3,509850.3,.01,.1)
Name
"^DD",509850.3,509850.3,.01,1,0)
^.1
"^DD",509850.3,509850.3,.01,1,1,0)
509850.3^B
"^DD",509850.3,509850.3,.01,1,1,1)
S ^ACK(509850.3,"B",$E(X,1,30),DA)=""
"^DD",509850.3,509850.3,.01,1,1,2)
K ^ACK(509850.3,"B",$E(X,1,30),DA)
"^DD",509850.3,509850.3,.01,1,2,0)
509850.3^D^MUMPS
"^DD",509850.3,509850.3,.01,1,2,1)
D STAFFREF^ACKQUTL6(X,DA)
"^DD",509850.3,509850.3,.01,1,2,2)
Q
"^DD",509850.3,509850.3,.01,1,2,3)
Do not Delete
"^DD",509850.3,509850.3,.01,1,2,"%D",0)
^^1^1^3071213^
"^DD",509850.3,509850.3,.01,1,2,"%D",1,0)
THIS X-REF IS NO LONGER USED AS PER ACKQ*3*17
"^DD",509850.3,509850.3,.01,1,2,"DT")
3071213
"^DD",509850.3,509850.3,.01,3)
Answer must be 1-30 characters in length
"^DD",509850.3,509850.3,.01,9)
^
"^DD",509850.3,509850.3,.01,21,0)
^.001^4^4^3071227^^^^
"^DD",509850.3,509850.3,.01,21,1,0)
The NAME field contains the name of the clinician, fee basis clinician, 
"^DD",509850.3,509850.3,.01,21,2,0)
other provider (e.g., health technician), or student providing direct care 
"^DD",509850.3,509850.3,.01,21,3,0)
in the clinic.  New names can be added to the A&SP STAFF file at any 
"^DD",509850.3,509850.3,.01,21,4,0)
time.  However, staff names should NEVER be deleted.
"^DD",509850.3,509850.3,.01,"DT")
3071213
"^DD",509850.3,509850.3,.01,"LAYGO",1,0)
D:'$D(ACKLAYGO) EN^DDIOL("Input should take place ONLY through the QUASAR menu options.","","!!?5") I $D(ACKLAYGO)
"^DD",509850.3,509850.3,.02,0)
STATUS^S^S:STUDENT;C:CLINICIAN;F:FEE BASIS CLINICIAN;O:OTHER PROVIDER;^0;2^Q
"^DD",509850.3,509850.3,.02,.1)
Status
"^DD",509850.3,509850.3,.02,3)
Enter the staff member's status.
"^DD",509850.3,509850.3,.02,9)
^
"^DD",509850.3,509850.3,.02,21,0)
^^3^3^3071025^^^^
"^DD",509850.3,509850.3,.02,21,1,0)
STATUS identifies the position of the individual in the NAME field 
"^DD",509850.3,509850.3,.02,21,2,0)
as a clinician, fee basis clinician, other provider (e.g., health 
"^DD",509850.3,509850.3,.02,21,3,0)
technician), or student.
"^DD",509850.3,509850.3,.02,"DT")
3071025
"^DD",509850.3,509850.3,.03,0)
ACTIVATION DATE^DX^^0;3^S %DT="EX" D ^%DT S:'$$ADATE^ACKQUTL6(D0,Y) Y=0 S X=Y K:Y<1 X
"^DD",509850.3,509850.3,.03,.1)
Activation Date
"^DD",509850.3,509850.3,.03,3)
Enter the date this person became actively associated with A&SP clinic visits.  Activation date must be before Inactivation date.
"^DD",509850.3,509850.3,.03,9)
^
"^DD",509850.3,509850.3,.03,21,0)
^^3^3^3071025^^^^
"^DD",509850.3,509850.3,.03,21,1,0)
ACTIVATION DATE is the earliest date that this individual is to be 
"^DD",509850.3,509850.3,.03,21,2,0)
associated with A&SP clinic visits.  You can enter EOD date or initial 
"^DD",509850.3,509850.3,.03,21,3,0)
QUASAR activation date.
"^DD",509850.3,509850.3,.03,"DT")
3071025
"^DD",509850.3,509850.3,.04,0)
INACTIVATION DATE^DX^^0;4^S %DT="EX" D ^%DT S:'$$IDATE^ACKQUTL6(D0,Y) Y=0 S X=Y K:Y<1 X
"^DD",509850.3,509850.3,.04,.1)
Inactivation Date
"^DD",509850.3,509850.3,.04,3)
Enter the date this person was inactivated. Inactivation date must be after the Activation date.
"^DD",509850.3,509850.3,.04,9)
^
"^DD",509850.3,509850.3,.04,21,0)
^^3^3^2991122^^^^
"^DD",509850.3,509850.3,.04,21,1,0)
INACTIVATION DATE is the date when this individual is no longer 
"^DD",509850.3,509850.3,.04,21,2,0)
associated with A&SP clinic visits.  You can enter the employee's 
"^DD",509850.3,509850.3,.04,21,3,0)
termination date.
"^DD",509850.3,509850.3,.04,"DT")
3071025
"^DD",509850.3,509850.3,.05,0)
ID NUMBER^RFX^^0;5^S X=+X,X=$E("0000",1,4-$L(X))_X K:X'?4N X I $D(X) S X1=$O(^ACK(509850.3,"C",X,0)) I X1 D EN^DDIOL("But "_X_" is already used by "_$$CONVERT^ACKQUTL4(X1),"","!") K X
"^DD",509850.3,509850.3,.05,.1)
ID Number
"^DD",509850.3,509850.3,.05,1,0)
^.1
"^DD",509850.3,509850.3,.05,1,1,0)
509850.3^ALID^MUMPS
"^DD",509850.3,509850.3,.05,1,1,1)
D STAFFNO^ACKQUTL6(X)
"^DD",509850.3,509850.3,.05,1,1,2)
Q
"^DD",509850.3,509850.3,.05,1,1,3)
DO NOT DELETE!
"^DD",509850.3,509850.3,.05,1,1,"%D",0)
^.101^1^1^3071115^^^^
"^DD",509850.3,509850.3,.05,1,1,"%D",1,0)
This cross-reference stores the highest used ID NUMBER.
"^DD",509850.3,509850.3,.05,1,1,"DT")
2990831
"^DD",509850.3,509850.3,.05,1,2,0)
509850.3^C
"^DD",509850.3,509850.3,.05,1,2,1)
S ^ACK(509850.3,"C",$E(X,1,30),DA)=""
"^DD",509850.3,509850.3,.05,1,2,2)
K ^ACK(509850.3,"C",$E(X,1,30),DA)
"^DD",509850.3,509850.3,.05,1,2,3)
DO NOT DELETE!
"^DD",509850.3,509850.3,.05,1,2,"%D",0)
^^1^1^2951207^^
"^DD",509850.3,509850.3,.05,1,2,"%D",1,0)
This cross-reference allows lookup of A&SP staff by the ID NUMBER field.
"^DD",509850.3,509850.3,.05,1,2,"DT")
2911230
"^DD",509850.3,509850.3,.05,3)
Your answer must be unique and 4 characters in length.
"^DD",509850.3,509850.3,.05,4)
S ACK=$G(^ACK(509850.3,"ALID"))+1 D EN^DDIOL("The next available ID NUMBER is "_$E("0000",1,4-$L(ACK))_ACK_".","","!?5")
"^DD",509850.3,509850.3,.05,9)
^
"^DD",509850.3,509850.3,.05,21,0)
^.001^3^3^3071025^^^^
"^DD",509850.3,509850.3,.05,21,1,0)
The ID NUMBER field is used at stations that use code numbers in lieu of 
"^DD",509850.3,509850.3,.05,21,2,0)
provider names.  QUASAR provides a sequential default number staring with 
"^DD",509850.3,509850.3,.05,21,3,0)
0001, but any unique four digit number is accepted.
"^DD",509850.3,509850.3,.05,"DT")
3071227
"^DD",509850.3,509850.3,.06,0)
SUPERVISOR^S^0:NO;1:YES;^0;6^Q
"^DD",509850.3,509850.3,.06,.1)
Supervisor
"^DD",509850.3,509850.3,.06,3)
Answer YES or NO.
"^DD",509850.3,509850.3,.06,4)

"^DD",509850.3,509850.3,.06,9)
^
"^DD",509850.3,509850.3,.06,21,0)
^^5^5^2950815^^^^
"^DD",509850.3,509850.3,.06,21,1,0)
The SUPERVISOR field determines whether or not this staff member is a 
"^DD",509850.3,509850.3,.06,21,2,0)
supervisor.  Supervisors have access to certain functions within the 
"^DD",509850.3,509850.3,.06,21,3,0)
QUASAR package that is not available to other staff members, such as C&P 
"^DD",509850.3,509850.3,.06,21,4,0)
exam adequation of exams performed by other clinicians.  Non-supervisory 
"^DD",509850.3,509850.3,.06,21,5,0)
clinicians can only adequate their own exams.
"^DD",509850.3,509850.3,.06,"DT")
3071227
"^DD",509850.3,509850.3,.07,0)
STAFF MEMBER^RP200'^VA(200,^1;1^Q
"^DD",509850.3,509850.3,.07,.1)
Staff Member
"^DD",509850.3,509850.3,.07,1,0)
^.1^^0
"^DD",509850.3,509850.3,.07,3)
THIS SHOULD NOT BE SET BY USERS
"^DD",509850.3,509850.3,.07,9)
^
"^DD",509850.3,509850.3,.07,21,0)
^^3^3^3071213^
"^DD",509850.3,509850.3,.07,21,1,0)
This field contains a pointer to the NEW PERSON file (#200) to ensure 
"^DD",509850.3,509850.3,.07,21,2,0)
that the NAME field (#.01) in the A&SP STAFF file (#509850.3) correctly 
"^DD",509850.3,509850.3,.07,21,3,0)
corresponds to the NAME field (#.01) in the NEW PERSON file (#200).
"^DD",509850.3,509850.3,.07,"DT")
3071213
"^DIC",509850.3,509850.3,0)
A&SP STAFF^509850.3P
"^DIC",509850.3,509850.3,0,"GL")
^ACK(509850.3,
"^DIC",509850.3,509850.3,"%",0)
^1.005^^0
"^DIC",509850.3,509850.3,"%D",0)
^^14^14^3071116^
"^DIC",509850.3,509850.3,"%D",1,0)
The A&SP STAFF file (#509850.3) contains the names of all A&SP clinicians 
"^DIC",509850.3,509850.3,"%D",2,0)
and students.  Information in this file includes the staff person's name, 
"^DIC",509850.3,509850.3,"%D",3,0)
activation and inactivation dates, status (i.e., clinician, fee basis, 
"^DIC",509850.3,509850.3,"%D",4,0)
other provider, or student), and an ID number for sites that may wish to 
"^DIC",509850.3,509850.3,"%D",5,0)
enter provider by code number.
"^DIC",509850.3,509850.3,"%D",6,0)
  
"^DIC",509850.3,509850.3,"%D",7,0)
Entries in this file are pointed to by fields in the A&SP CLINIC VISIT 
"^DIC",509850.3,509850.3,"%D",8,0)
file (#509850.6) in order to identify staff members who took part in a 
"^DIC",509850.3,509850.3,"%D",9,0)
given visit. Therefore, staff names should NEVER be deleted.
"^DIC",509850.3,509850.3,"%D",10,0)
  
"^DIC",509850.3,509850.3,"%D",11,0)
Data in this file SHOULD NOT be altered through the use of VA FileMan; 
"^DIC",509850.3,509850.3,"%D",12,0)
input should take place ONLY through the QUASAR menu options.
"^DIC",509850.3,509850.3,"%D",13,0)
  
"^DIC",509850.3,509850.3,"%D",14,0)
Per VHA Directive 10-93-142, this file definition SHOULD NOT be modified.
"^DIC",509850.3,"B","A&SP STAFF",509850.3)

**INSTALL NAME**
ECX*3.0*124
"BLD",7520,0)
ECX*3.0*124^DSS EXTRACTS^0^3100205^y
"BLD",7520,1,0)
^^3^3^3100107^
"BLD",7520,1,1,0)
This patch has the following changes:
"BLD",7520,1,2,0)
-makes an update to the QUASAR Extract (ECXQSR).
"BLD",7520,1,3,0)
-corrects a problem when transmitting extracts.  
"BLD",7520,4,0)
^9.64PA^^
"BLD",7520,6.3)
11
"BLD",7520,"ABPKG")
n
"BLD",7520,"KRN",0)
^9.67PA^779.2^20
"BLD",7520,"KRN",.4,0)
.4
"BLD",7520,"KRN",.401,0)
.401
"BLD",7520,"KRN",.402,0)
.402
"BLD",7520,"KRN",.403,0)
.403
"BLD",7520,"KRN",.5,0)
.5
"BLD",7520,"KRN",.84,0)
.84
"BLD",7520,"KRN",3.6,0)
3.6
"BLD",7520,"KRN",3.8,0)
3.8
"BLD",7520,"KRN",9.2,0)
9.2
"BLD",7520,"KRN",9.8,0)
9.8
"BLD",7520,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",7520,"KRN",9.8,"NM",1,0)
ECXQSR^^0^B40421374
"BLD",7520,"KRN",9.8,"NM",2,0)
ECXSCXN^^0^B58038700
"BLD",7520,"KRN",9.8,"NM","B","ECXQSR",1)

"BLD",7520,"KRN",9.8,"NM","B","ECXSCXN",2)

"BLD",7520,"KRN",19,0)
19
"BLD",7520,"KRN",19.1,0)
19.1
"BLD",7520,"KRN",101,0)
101
"BLD",7520,"KRN",409.61,0)
409.61
"BLD",7520,"KRN",771,0)
771
"BLD",7520,"KRN",779.2,0)
779.2
"BLD",7520,"KRN",870,0)
870
"BLD",7520,"KRN",8989.51,0)
8989.51
"BLD",7520,"KRN",8989.52,0)
8989.52
"BLD",7520,"KRN",8994,0)
8994
"BLD",7520,"KRN","B",.4,.4)

"BLD",7520,"KRN","B",.401,.401)

"BLD",7520,"KRN","B",.402,.402)

"BLD",7520,"KRN","B",.403,.403)

"BLD",7520,"KRN","B",.5,.5)

"BLD",7520,"KRN","B",.84,.84)

"BLD",7520,"KRN","B",3.6,3.6)

"BLD",7520,"KRN","B",3.8,3.8)

"BLD",7520,"KRN","B",9.2,9.2)

"BLD",7520,"KRN","B",9.8,9.8)

"BLD",7520,"KRN","B",19,19)

"BLD",7520,"KRN","B",19.1,19.1)

"BLD",7520,"KRN","B",101,101)

"BLD",7520,"KRN","B",409.61,409.61)

"BLD",7520,"KRN","B",771,771)

"BLD",7520,"KRN","B",779.2,779.2)

"BLD",7520,"KRN","B",870,870)

"BLD",7520,"KRN","B",8989.51,8989.51)

"BLD",7520,"KRN","B",8989.52,8989.52)

"BLD",7520,"KRN","B",8994,8994)

"BLD",7520,"QDEF")
^^^^NO^^^^^^NO
"BLD",7520,"QUES",0)
^9.62^^
"BLD",7520,"REQB",0)
^9.611^1^1
"BLD",7520,"REQB",1,0)
ECX*3.0*120^2
"BLD",7520,"REQB","B","ECX*3.0*120",1)

"MBREQ")
0
"PKG",513,-1)
1^1
"PKG",513,0)
DSS EXTRACTS^ECX^Decision Support System. (DSS)
"PKG",513,22,0)
^9.49I^1^1
"PKG",513,22,1,0)
3.0
"PKG",513,22,1,"PAH",1,0)
124^3100205^10000000070
"PKG",513,22,1,"PAH",1,1,0)
^^3^3^3100205
"PKG",513,22,1,"PAH",1,1,1,0)
This patch has the following changes:
"PKG",513,22,1,"PAH",1,1,2,0)
-makes an update to the QUASAR Extract (ECXQSR).
"PKG",513,22,1,"PAH",1,1,3,0)
-corrects a problem when transmitting extracts.  
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","ECXQSR")
0^1^B40421374
"RTN","ECXQSR",1,0)
ECXQSR ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ; 2/5/10 6:50am
"RTN","ECXQSR",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,26,24,34,33,35,39,43,46,49,64,71,84,92,106,105,120,124**;Dec 22, 1997;Build 11
"RTN","ECXQSR",3,0)
BEG ;entry point from option
"RTN","ECXQSR",4,0)
 I '$O(^ACK(509850.8,0)) W !,"You must be using the Quality Audiology & Speech Pathology",!,"Audit & Review (QUASAR) software to run this extract.",!! Q
"RTN","ECXQSR",5,0)
 I '$D(^ACK(509850.8,1,"DSS")) W !,"Linkage has not been established between QUASAR and the DSS UNIT file (#724).",!! Q
"RTN","ECXQSR",6,0)
 I '$O(^ACK(509850.6,0)) W !,"There is no data in the A&SP CLINIC VISIT file (#509850.6).",!! Q
"RTN","ECXQSR",7,0)
 D SETUP I ECFILE="" Q
"RTN","ECXQSR",8,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXQSR",9,0)
 Q
"RTN","ECXQSR",10,0)
START ;entry point from tasked job
"RTN","ECXQSR",11,0)
 N ERR,ECXQDT,ECXNPRFI
"RTN","ECXQSR",12,0)
 S QFLG=0,ECED=ECED+.9,ECD=ECSD1,ECXQV=""
"RTN","ECXQSR",13,0)
 D QINST I $D(ERR) Q
"RTN","ECXQSR",14,0)
 S ECL=+^ACK(509850.8,1,0),ECLINK=^ACK(509850.8,1,"DSS")
"RTN","ECXQSR",15,0)
 F  S ECD=$O(^ACK(509850.6,"B",ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)!(QFLG)  D
"RTN","ECXQSR",16,0)
 .I +ECXQV=3,ECD<ECXQDT S ECXQV=2.0
"RTN","ECXQSR",17,0)
 .F  S ECDA=$O(^ACK(509850.6,"B",ECD,ECDA)) Q:'ECDA  D UPDATE Q:QFLG
"RTN","ECXQSR",18,0)
 Q
"RTN","ECXQSR",19,0)
QINST ;Get installed information for QUASAR
"RTN","ECXQSR",20,0)
 N ARR,IENS,QVIEN,INTIEN
"RTN","ECXQSR",21,0)
 S ECXQDT=""
"RTN","ECXQSR",22,0)
 D FILE^DID(509850.6,,"VERSION","ARR","ERR")
"RTN","ECXQSR",23,0)
 S ECXQV=$G(ARR("VERSION")) I +ECXQV=0 S ERR=1 Q
"RTN","ECXQSR",24,0)
 S QVIEN=$$FIND1^DIC(9.4,"","X","QUASAR") I +QVIEN<1 S ERR=1 Q
"RTN","ECXQSR",25,0)
 S IENS=","_QVIEN_","
"RTN","ECXQSR",26,0)
 S INTIEN=$$FIND1^DIC(9.49,IENS,"X",ECXQV) I +INTIEN<1 S ERR=1 Q
"RTN","ECXQSR",27,0)
 S IENS=INTIEN_","_QVIEN,ECXQDT=$$GET1^DIQ(9.49,IENS,2,"I")
"RTN","ECXQSR",28,0)
 Q
"RTN","ECXQSR",29,0)
UPDATE ;create record for each unique CPT code for clinic visit 
"RTN","ECXQSR",30,0)
 N ARY,ECZNODE,CPT,LOC,MOD,STR,VOL,XX,ECTP,ECV
"RTN","ECXQSR",31,0)
 Q:'$D(^ACK(509850.6,ECDA,0))
"RTN","ECXQSR",32,0)
 S ECZNODE=^ACK(509850.6,ECDA,0),EC2NODE=$G(^ACK(509850.6,ECDA,2))
"RTN","ECXQSR",33,0)
 S ECDT=$P(ECZNODE,U),ECDAY=$$ECXDATE^ECXUTL(ECDT,ECXYM)
"RTN","ECXQSR",34,0)
 S ECTIME=$$ECXTIME^ECXUTL(ECDT) S:$P(ECDT,".",2)="" ECTIME="000000"
"RTN","ECXQSR",35,0)
 S ECXDFN=$P(ECZNODE,U,2)
"RTN","ECXQSR",36,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECD,"1;3;5")
"RTN","ECXQSR",37,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECDT,"1;5",.ECXPAT)
"RTN","ECXQSR",38,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXQSR",39,0)
 ;OEF/OIF data
"RTN","ECXQSR",40,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXQSR",41,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXQSR",42,0)
 ;
"RTN","ECXQSR",43,0)
 S ECHL="",ECXDIV=$P($G(^ACK(509850.6,ECDA,5)),U),ECSTOP=$P(EC2NODE,U)
"RTN","ECXQSR",44,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get Production Division
"RTN","ECXQSR",45,0)
 Q:ECSTOP=""
"RTN","ECXQSR",46,0)
 S (ECHLS,ECHL2S)="000",ECAC=$P($G(ECZNODE),U,6)
"RTN","ECXQSR",47,0)
 I ECAC D
"RTN","ECXQSR",48,0)
 .S ECHL=+$P($G(^SC(ECAC,0)),U,7),ECHL2=+$P($G(^(0)),U,18) I ECHL D
"RTN","ECXQSR",49,0)
 ..S ECHLS=$P($G(^DIC(40.7,+ECHL,0)),U,2),ECHL2S=$P($G(^DIC(40.7,+ECHL2,0)),U,2)
"RTN","ECXQSR",50,0)
 ..S ECHLS=$$RJ^XLFSTR(ECHLS,3,0),ECHL2S=$$RJ^XLFSTR(ECHL2S,3,0)
"RTN","ECXQSR",51,0)
 S ECDSS=ECHLS_ECHL2S
"RTN","ECXQSR",52,0)
 I ECXLOGIC>2003 D
"RTN","ECXQSR",53,0)
 .I "^18^23^24^36^41^65^94^108^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXQSR",54,0)
 S ECDU=$S(ECSTOP["A":$P(ECLINK,U),ECSTOP["S":$P(ECLINK,U,2),1:"")
"RTN","ECXQSR",55,0)
 Q:'ECDU
"RTN","ECXQSR",56,0)
 S ECDSSU=$G(^ECD(ECDU,0)),ECCS=+$P(ECDSSU,U,4),(ECO,ECM)=+$P(ECDSSU,U,3),ECXDSSD=$E($P(ECDSSU,U,5),1,10)
"RTN","ECXQSR",57,0)
 Q:'$O(^ACK(509850.6,ECDA,3,0))
"RTN","ECXQSR",58,0)
 ;Create local array of procedure codes and # of times each procedure
"RTN","ECXQSR",59,0)
 ; was performed.
"RTN","ECXQSR",60,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXQSR",61,0)
 S (ECDIA,ECXPPC,ECXPRV1,ECXPRV2,ECXPRV3,ECUN1NPI)=""
"RTN","ECXQSR",62,0)
 ;if QUASAR v2
"RTN","ECXQSR",63,0)
 I +ECXQV=2 D
"RTN","ECXQSR",64,0)
 .S ECXPRV1=$P(EC2NODE,U,7),ECXPRV2=$P(EC2NODE,U,3),ECXPRV3=$P(EC2NODE,U,5),ECPN=0
"RTN","ECXQSR",65,0)
 .S ECPR1NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV1,ECD)
"RTN","ECXQSR",66,0)
 .S:+ECPR1NPI'>0 ECPR1NPI="" S ECPR1NPI=$P(ECPR1NPI,U)
"RTN","ECXQSR",67,0)
 .S ECPR2NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV2,ECD)
"RTN","ECXQSR",68,0)
 .S:+ECPR2NPI'>0 ECPR2NPI="" S ECPR2NPI=$P(ECPR2NPI,U)
"RTN","ECXQSR",69,0)
 .S ECPR3NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV3,ECD)
"RTN","ECXQSR",70,0)
 .S:+ECPR3NPI'>0 ECPR3NPI="" S ECPR3NPI=$P(ECPR3NPI,U)
"RTN","ECXQSR",71,0)
 .F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",72,0)
 ..S XX=^ACK(509850.6,ECDA,3,ECPN,0),XX=$P(XX,U),XX=$P($G(^ACK(509850.4,XX,0)),U),ECXCPT=$E($$CPT^ECXUTL3(XX),1,5)
"RTN","ECXQSR",73,0)
 ..I ECXCPT]"" D
"RTN","ECXQSR",74,0)
 ...I '$D(LOC(ECXCPT)) S LOC(ECXCPT)=0_U_ECXPRV1
"RTN","ECXQSR",75,0)
 ...S $P(LOC(ECXCPT),U)=$P(LOC(ECXCPT),U)+1
"RTN","ECXQSR",76,0)
 .S ECIEN=$O(^ACK(509850.6,ECDA,1,0)),ECDIA=$P($G(^ICD9(+$G(^ACK(509850.6,ECDA,1,ECIEN,0)),0)),U)
"RTN","ECXQSR",77,0)
 .F I=1:1:4 S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'+ECIEN  D
"RTN","ECXQSR",78,0)
 ..S @("ECXICD9"_I)=$P($G(^ICD9(+$P(^ACK(509850.6,ECDA,1,ECIEN,0),U),0)),U)
"RTN","ECXQSR",79,0)
 ;if QUASAR v3
"RTN","ECXQSR",80,0)
 I +ECXQV=3 D
"RTN","ECXQSR",81,0)
 .N CPT,DIA,I,J,MOD,MOD1,P,STR,VOL,ECTP,ARY,ECP,ECPN
"RTN","ECXQSR",82,0)
 .S ECXPRV2=$G(^ACK(509850.6,ECDA,2.7,1,0)),ECXPRV3=$G(^ACK(509850.6,ECDA,2.7,2,0))
"RTN","ECXQSR",83,0)
 .I $G(ECXPRV2) S ECXPRV2=$$CONVERT1^ACKQUTL4(ECXPRV2)
"RTN","ECXQSR",84,0)
 .I $G(ECXPRV3) S ECXPRV3=$$CONVERT1^ACKQUTL4(ECXPRV3)
"RTN","ECXQSR",85,0)
 .S ECPN=0 F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",86,0)
 ..S CPT=^ACK(509850.6,ECDA,3,ECPN,0),ECXCPT=$P(CPT,U),ECTP=+$P(CPT,U,5),ECV=1,ECP=""
"RTN","ECXQSR",87,0)
 ..Q:ECXCPT=""
"RTN","ECXQSR",88,0)
 ..I ECTP D
"RTN","ECXQSR",89,0)
 ...S CPT=$G(^ACK(509850.6,ECDA,7,ECTP,0)),ECP=$P(CPT,U)
"RTN","ECXQSR",90,0)
 ...S ECP=$S(ECP<90000:$P($G(^EC(725,+ECP,0)),U,2)_"N",1:$P($G(^EC(725,+ECP,0)),U,2)_"L")
"RTN","ECXQSR",91,0)
 ...S VOL=+$P(CPT,U,2),ECXPRV1=$P(CPT,U,3)
"RTN","ECXQSR",92,0)
 ..I 'ECTP S VOL=+$P(CPT,U,3),ECXPRV1=$P(CPT,U,4)
"RTN","ECXQSR",93,0)
 ..I $G(ECXPRV1) S ECXPRV1=$$CONVERT1^ACKQUTL4(ECXPRV1)
"RTN","ECXQSR",94,0)
 ..S ECXCPT=$E($$CPT^ECXUTL3(ECXCPT),1,5),ECXMOD="",MOD=0
"RTN","ECXQSR",95,0)
 ..F  S MOD=$O(^ACK(509850.6,ECDA,3,ECPN,1,MOD)) Q:'MOD  D
"RTN","ECXQSR",96,0)
 ...S MOD1=+^ACK(509850.6,ECDA,3,ECPN,1,MOD,0) D:MOD1
"RTN","ECXQSR",97,0)
 ....S ECXMOD=ECXMOD_MOD1_";"
"RTN","ECXQSR",98,0)
 ..F I=1:1:$L(ECXMOD,";") I $G(ARY(ECXCPT))'[$P(ECXMOD,";",I) D
"RTN","ECXQSR",99,0)
 ...S ARY(ECXCPT)=$G(ARY(ECXCPT))_$P(ECXMOD,";",I)_";"
"RTN","ECXQSR",100,0)
 ..S:VOL ECV=VOL
"RTN","ECXQSR",101,0)
 ..S ECV=ECV+$G(LOC(ECXCPT)),LOC(ECXCPT)=ECV_U_ECXPRV1_U_ECP
"RTN","ECXQSR",102,0)
 .S ECIEN=0 F  S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'ECIEN  D
"RTN","ECXQSR",103,0)
 ..S DIA=^ACK(509850.6,ECDA,1,ECIEN,0),P=$P(DIA,U,2),P=$S(P=1:"P",1:"S")
"RTN","ECXQSR",104,0)
 ..S CNT=$G(STR(P))+1,STR(P,CNT)=$P($G(^ICD9(+DIA,0)),U),STR(P)=CNT
"RTN","ECXQSR",105,0)
 .S ECDIA=$G(STR("P",1))
"RTN","ECXQSR",106,0)
 .F I=1:1:4 Q:'$D(STR("P",I+1))  S @("ECXICD9"_I)=STR("P",I)
"RTN","ECXQSR",107,0)
 .S:ECDIA="" ECDIA=$G(STR("S",1)),I=2
"RTN","ECXQSR",108,0)
 .F J=I:1:4 Q:'$D(STR("S",J))  S @("ECXICD9"_J)=STR("S",J)
"RTN","ECXQSR",109,0)
 Q:('$D(LOC))!('$O(^ACK(509850.6,ECDA,1,0)))
"RTN","ECXQSR",110,0)
 ;- Ord Div, Contract St/End Dates, Contract Type placeholders for FY2002
"RTN","ECXQSR",111,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXQSR",112,0)
 ;set up Provider Person class
"RTN","ECXQSR",113,0)
 S (ECXCPT,ECXPPC1,ECXPPC2,ECXPPC3)=""
"RTN","ECXQSR",114,0)
 S:ECXPRV2'="" ECXPPC2=$$PRVCLASS^ECXUTL(ECXPRV2,ECD)
"RTN","ECXQSR",115,0)
 S:ECXPRV3'="" ECXPPC3=$$PRVCLASS^ECXUTL(ECXPRV3,ECD)
"RTN","ECXQSR",116,0)
 N DA,DIC,DIK,DR,FILEN,DIQ,XVAR,II,DI
"RTN","ECXQSR",117,0)
 F II=2,3 S XVAR="ECXPRV"_II I @XVAR'="" D
"RTN","ECXQSR",118,0)
 .S @XVAR=2_@XVAR
"RTN","ECXQSR",119,0)
 ; -Observation Patient Indicator (yes/no)
"RTN","ECXQSR",120,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXQSR",121,0)
 ; -CNH status (YES/NO)
"RTN","ECXQSR",122,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXQSR",123,0)
 ;get encounter classification
"RTN","ECXQSR",124,0)
 S (ECXAO,ECXECE,ECXIR,ECXMIL,ECXHNC)="",ECXVISIT=$P($G(^ACK(509850.6,ECDA,6)),U,3)
"RTN","ECXQSR",125,0)
 I ECXVISIT'="" D
"RTN","ECXQSR",126,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXQSR",127,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE"))
"RTN","ECXQSR",128,0)
 .S ECXIR=$G(ECXVIST("IR")),ECXMIL=$G(ECXVIST("MST")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXQSR",129,0)
 ; -Head and Neck Cancer Indicator
"RTN","ECXQSR",130,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXQSR",131,0)
 ;get enrollment data (category, status and priority)
"RTN","ECXQSR",132,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXQSR",133,0)
 ; -Get national patient record flag Indicator if exist
"RTN","ECXQSR",134,0)
 D NPRF^ECXUTL5
"RTN","ECXQSR",135,0)
 ; -If no encounter number don't file record
"RTN","ECXQSR",136,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSS,)
"RTN","ECXQSR",137,0)
 Q:ECXENC=""
"RTN","ECXQSR",138,0)
 ;Loop through array of unique procedures. Create record in ECODE.
"RTN","ECXQSR",139,0)
 S CPT="" F  S CPT=$O(LOC(CPT)) Q:CPT=""  D
"RTN","ECXQSR",140,0)
 .S ECV=+$P(LOC(CPT),U),ECXCPT=$$CPT^ECXUTL3(CPT,$G(ARY(CPT)),ECV)
"RTN","ECXQSR",141,0)
 .S ECXPRV1=$P(LOC(CPT),U,2)
"RTN","ECXQSR",142,0)
 .S:ECXPRV1'="" ECXPPC1=$$PRVCLASS^ECXUTL(ECXPRV1,ECD),ECXPRV1=2_ECXPRV1
"RTN","ECXQSR",143,0)
 .S ECP=$P(LOC(CPT),U,3) I ECP="" S ECP=$$CPT^ECXUTL3(CPT,"",ECV)
"RTN","ECXQSR",144,0)
 .D FILE^ECXQSR1
"RTN","ECXQSR",145,0)
 K CPT,LOC
"RTN","ECXQSR",146,0)
 Q
"RTN","ECXQSR",147,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR",148,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR",149,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR",150,0)
 Q
"RTN","ECXQSR",151,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR",152,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXSCXN")
0^2^B58038700
"RTN","ECXSCXN",1,0)
ECXSCXN ;ALB/JAP  Clinic Extract ; 1/6/10 6:33pm
"RTN","ECXSCXN",2,0)
 ;;3.0;DSS EXTRACTS;**24,27,29,30,31,32,33,39,46,49,52,71,84,92,107,105,120,124**;Dec 22, 1997;Build 11
"RTN","ECXSCXN",3,0)
 ;
"RTN","ECXSCXN",4,0)
BEG ;entry point from option
"RTN","ECXSCXN",5,0)
 D SETUP Q:ECFILE=""  D ^ECXTRAC,^ECXKILL
"RTN","ECXSCXN",6,0)
 Q
"RTN","ECXSCXN",7,0)
 ;
"RTN","ECXSCXN",8,0)
START ;entry point from taskmgr
"RTN","ECXSCXN",9,0)
 N DIC,EXNUM,I,LOCARR,OUT,P1,P2,P3,PROCESS,SOURCE,STOP,STAT,TOSEND
"RTN","ECXSCXN",10,0)
 N TIU,X,Y,ECXNPRFI
"RTN","ECXSCXN",11,0)
 F I=1:1:8 S @("ECXCPT"_I)=""
"RTN","ECXSCXN",12,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXSCXN",13,0)
 S (OUT,QFLG,ECRN)=0,(ECXICD9P,ECXOBI)=""
"RTN","ECXSCXN",14,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSCXN",15,0)
 ;get ien for tiu in file #839.7
"RTN","ECXSCXN",16,0)
 S DIC="^PX(839.7,",DIC(0)="X",X="TEXT INTEGRATION UTILITIES"
"RTN","ECXSCXN",17,0)
 D ^DIC S TIU=+Y,ECED=ECED+.3,ECXCLIN=0 K DIC,Y
"RTN","ECXSCXN",18,0)
 ;get clinic default appt length, type, division
"RTN","ECXSCXN",19,0)
 F  S ECXCLIN=$O(^SC(ECXCLIN)) Q:'ECXCLIN  D
"RTN","ECXSCXN",20,0)
 .K LOCARR S DIC=44,DA=ECXCLIN,DR="2;3.5;1912",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",21,0)
 .D EN^DIQ1
"RTN","ECXSCXN",22,0)
 .Q:$G(LOCARR(44,ECXCLIN,2,"I"))'="C"
"RTN","ECXSCXN",23,0)
 .S ALEN=+$G(LOCARR(44,ECXCLIN,1912,"I"))
"RTN","ECXSCXN",24,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=ALEN,ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",25,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=^TMP($J,"ECXCL",ECXCLIN)_"^"_ALEN_"^"_$G(LOCARR(44,ECXCLIN,2,"I"))_"^"_+$G(LOCARR(44,ECXCLIN,3.5,"I"))
"RTN","ECXSCXN",26,0)
 .D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",27,0)
 .K P1,P2,P3,TOSEND,ECXDIV
"RTN","ECXSCXN",28,0)
 ;get from file #44 any no-shows & get encounters from #409.68
"RTN","ECXSCXN",29,0)
 D NOSHOW^ECXSCXN1(ECSD1,ECED),ENCNTR(ECSD1,ECED)
"RTN","ECXSCXN",30,0)
 ;send missing clinic msg
"RTN","ECXSCXN",31,0)
 D:$D(^TMP($J,"ECXS")) EN^ECXSCX1
"RTN","ECXSCXN",32,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSCXN",33,0)
 Q
"RTN","ECXSCXN",34,0)
 ;
"RTN","ECXSCXN",35,0)
ENCNTR(ECSD1,ECED) ;search file #409.68 for encounter data
"RTN","ECXSCXN",36,0)
 N CHKOUT,ECD,JJ,K,OUT,PNODE,PP,STAT,STOP,MDIV
"RTN","ECXSCXN",37,0)
 S ECD=ECSD1
"RTN","ECXSCXN",38,0)
 F  S ECD=$O(^SCE("B",ECD)) Q:('ECD!(ECD>ECED))!(QFLG)  S ECXIEN=0 D
"RTN","ECXSCXN",39,0)
 .F  S ECXIEN=$O(^SCE("B",ECD,ECXIEN)) Q:'ECXIEN  D  Q:QFLG
"RTN","ECXSCXN",40,0)
 ..Q:'$D(^SCE(ECXIEN,0))
"RTN","ECXSCXN",41,0)
 ..D INTPAT^ECXSCX2 K LOCARR S DIC=409.68,DA=ECXIEN
"RTN","ECXSCXN",42,0)
 ..S DR=".01;.02;.03;.04;.05;.06;.07;.08;.11;.12;.13",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",43,0)
 ..D EN^DIQ1
"RTN","ECXSCXN",44,0)
 ..S ECXTI=$P($$FMTE^XLFDT(+$G(LOCARR(409.68,ECXIEN,.01,"I")),1),"@",2)
"RTN","ECXSCXN",45,0)
 ..S ECXTI=$E(($TR(ECXTI,":","")_"000000"),1,6)
"RTN","ECXSCXN",46,0)
 ..S:ECXTI="000000" ECXTI="000300" S MDIV=+$G(LOCARR(409.68,ECXIEN,.11,"I"))
"RTN","ECXSCXN",47,0)
 ..S STOP=+$G(LOCARR(409.68,ECXIEN,.03,"I"))
"RTN","ECXSCXN",48,0)
 ..S CHKOUT=+$G(LOCARR(409.68,ECXIEN,.07,"I"))
"RTN","ECXSCXN",49,0)
 ..S PROCESS=+$G(LOCARR(409.68,ECXIEN,.08,"I"))
"RTN","ECXSCXN",50,0)
 ..S STAT=$G(LOCARR(409.68,ECXIEN,.12,"I"))
"RTN","ECXSCXN",51,0)
 ..S ECXDFN=+$G(LOCARR(409.68,ECXIEN,.02,"I"))
"RTN","ECXSCXN",52,0)
 ..Q:(ECXDFN=0)!('CHKOUT)
"RTN","ECXSCXN",53,0)
 ..S:STAT="" STAT="ZZ" S STAT=";"_STAT_";"
"RTN","ECXSCXN",54,0)
 ..Q:";3;4;5;6;7;9;10;13;"[STAT
"RTN","ECXSCXN",55,0)
 ..Q:('STOP)!(PROCESS=4)!(+$G(LOCARR(409.68,ECXIEN,.06,"I")))
"RTN","ECXSCXN",56,0)
 ..S ECXDATE=+$G(LOCARR(409.68,ECXIEN,.01,"I"))
"RTN","ECXSCXN",57,0)
 ..S ECXCLIN=+$G(LOCARR(409.68,ECXIEN,.04,"I"))
"RTN","ECXSCXN",58,0)
 ..Q:$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,3)'="C"
"RTN","ECXSCXN",59,0)
 ..S ECXVISIT=+$G(LOCARR(409.68,ECXIEN,.05,"I"))
"RTN","ECXSCXN",60,0)
 ..S ECXENEL=+$G(LOCARR(409.68,ECXIEN,.13,"I"))
"RTN","ECXSCXN",61,0)
 ..Q:'ECXVISIT
"RTN","ECXSCXN",62,0)
 ..S ECXERR=0
"RTN","ECXSCXN",63,0)
 ..D PAT1^ECXSCX2(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",64,0)
 ..D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",65,0)
 ..Q:TOSEND=6
"RTN","ECXSCXN",66,0)
 ..K LOCARR S DIC=40.7,DA=STOP,DR="1",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",67,0)
 ..S ECXSTOP=$$RJ^XLFSTR($G(LOCARR(40.7,STOP,1,"I")),3,0)
"RTN","ECXSCXN",68,0)
 ..;get date specific patient data
"RTN","ECXSCXN",69,0)
 ..D PAT2^ECXSCX2(ECXDFN,ECXDATE)
"RTN","ECXSCXN",70,0)
 ..;get national patient record flag if exist
"RTN","ECXSCXN",71,0)
 ..D NPRF^ECXUTL5
"RTN","ECXSCXN",72,0)
 ..;get visit specific data
"RTN","ECXSCXN",73,0)
 ..S ECXERR=0 D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",74,0)
 ..F I=1:1:8 S @("ECXCPT"_I)=$G(ECXVIST("CPT"_I))
"RTN","ECXSCXN",75,0)
 ..S ECXICD9P=$G(ECXVIST("ICD9P"))
"RTN","ECXSCXN",76,0)
 ..F I=1:1:4 S @("ECXICD9"_I)=$G(ECXVIST("ICD9"_I))
"RTN","ECXSCXN",77,0)
 ..S SOURCE=ECXVIST("SOURCE"),ECXAO=ECXVIST("AO"),ECXIR=ECXVIST("IR")
"RTN","ECXSCXN",78,0)
 ..S ECXMIL=ECXVIST("MST"),ECXPROV=ECXVIST("PROV")
"RTN","ECXSCXN",79,0)
 ..S ECPRNPI=$$NPI^XUSNPI("Individual_ID",ECXPROV,ECXDATE)
"RTN","ECXSCXN",80,0)
 ..S:+ECPRNPI'>0 ECPRNPI="" S ECPRNPI=$P(ECPRNPI,U)
"RTN","ECXSCXN",81,0)
 ..S ECXPROVP=ECXVIST("PROV CLASS"),ECXPROVN=ECXVIST("PROV NPI")
"RTN","ECXSCXN",82,0)
 ..S ECXECE=ECXVIST("PGE"),ECXHNC=ECXVIST("HNC")
"RTN","ECXSCXN",83,0)
 ..K LOCARR S DIC=8,DA=ECXENEL,DR="8",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",84,0)
 ..S ECXENEL=+$G(LOCARR(8,ECXENEL,8,"I"))
"RTN","ECXSCXN",85,0)
 ..S:ECXENEL ECXENEL=$$ELIG^ECXUTL3(ECXENEL,ECXSVC)
"RTN","ECXSCXN",86,0)
 ..S ECXCBOC=$S(MDIV'="":$$CBOC^ECXSCX2(.MDIV),1:"")  ;is cboc facility?
"RTN","ECXSCXN",87,0)
 ..;setup feeder key and file in extract records
"RTN","ECXSCXN",88,0)
 ..S (ECXKEY,ECXDSSD)=""
"RTN","ECXSCXN",89,0)
 ..;xray (105) or lab (108)
"RTN","ECXSCXN",90,0)
 ..I (ECXSTOP=105)!(ECXSTOP=108) D  Q
"RTN","ECXSCXN",91,0)
 ...S ECXKEY=ECXSTOP_"00003000000",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",92,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE       ;- Don't file rec if no encounter num
"RTN","ECXSCXN",93,0)
 ..;appointments
"RTN","ECXSCXN",94,0)
 ..I PROCESS=1 D  Q     ;get appt length
"RTN","ECXSCXN",95,0)
 ...S (ALEN,JJ,OUT)=0
"RTN","ECXSCXN",96,0)
 ...F  S JJ=$O(^SC(ECXCLIN,"S",ECXDATE,JJ)) Q:('JJ)!(OUT)  S K=0 D
"RTN","ECXSCXN",97,0)
 ....F  S K=$O(^SC(ECXCLIN,"S",ECXDATE,JJ,K)) Q:('K)!(OUT)  D
"RTN","ECXSCXN",98,0)
 .....S ECXOBI=$G(^SC(ECXCLIN,"S",ECXDATE,JJ,K,"OB")),PP=$P($G(^SC(ECXCLIN,"S",ECXDATE,JJ,K,0)),U)
"RTN","ECXSCXN",99,0)
 .....S:PP=ECXDFN OUT=1,ALEN=$P(^(0),U,2),ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",100,0)
 .....S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",101,0)
 ....S ECXSTOP=P1
"RTN","ECXSCXN",102,0)
 ....S PNODE=$G(^DPT(ECXDFN,"S",ECXDATE,0)),ECXPVST=$P(PNODE,U,7),ECXATYP=$P(PNODE,U,16)  ;Get purpose of visit & appt type
"RTN","ECXSCXN",103,0)
 ....I TOSEND'=3 D
"RTN","ECXSCXN",104,0)
 .....S ECXKEY=P1_P2_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",105,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",106,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN",107,0)
 .....S ECXKEY=P1_"000"_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",108,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",109,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN",110,0)
 .....S ECXKEY=P2_"000"_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",111,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",112,0)
 ..I PROCESS=2 D  Q
"RTN","ECXSCXN",113,0)
 ...S ALEN=0
"RTN","ECXSCXN",114,0)
 ...I SOURCE=TIU S ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",115,0)
 ...S:+ALEN=0 ALEN="030" S ECXKEY=P1_P2_ALEN_P3_"0",ECXSTOP=P1
"RTN","ECXSCXN",116,0)
 ...S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",117,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",118,0)
 ..;dispositions
"RTN","ECXSCXN",119,0)
 ..I PROCESS=3 D  Q
"RTN","ECXSCXN",120,0)
 ...S ECXKEY=ECXSTOP_"47906000000",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",121,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",122,0)
 Q
"RTN","ECXSCXN",123,0)
 ;
"RTN","ECXSCXN",124,0)
FILE ;record setup for file #727.827
"RTN","ECXSCXN",125,0)
 N STR
"RTN","ECXSCXN",126,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get production division
"RTN","ECXSCXN",127,0)
 S EC7=$O(^ECX(727.827,999999999),-1),EC7=EC7+1
"RTN","ECXSCXN",128,0)
 S STR(0)=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSCXN",129,0)
 S STR(0)=STR(0)_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXKEY_U_ECXOBI_U
"RTN","ECXSCXN",130,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXSCXN",131,0)
 N ECXDATA
"RTN","ECXSCXN",132,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXSCXN",133,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXSCXN",134,0)
 ;done
"RTN","ECXSCXN",135,0)
 S STR(0)=STR(0)_ECXCLIN_U_ECXTS_U_ECXTI_U_ECPTTM_U_ECPTPR_U_ECCLAS_U
"RTN","ECXSCXN",136,0)
 S STR(0)=STR(0)_ECXPROV_U_ECXPROVP_U_ECXCPT1_U_ECXCPT2_U_ECXCPT3_U
"RTN","ECXSCXN",137,0)
 S STR(0)=STR(0)_ECXCPT4_U_ECXCPT5_U
"RTN","ECXSCXN",138,0)
 S STR(1)=ECXCPT6_U_ECXCPT7_U_ECXCPT8_U_ECXICD9P_U_ECXICD91_U_ECXICD92_U
"RTN","ECXSCXN",139,0)
 S STR(1)=STR(1)_ECXICD93_U_ECXICD94_U_ECXDOB_U_ECXELIG_U_ECXVET_U
"RTN","ECXSCXN",140,0)
 S STR(1)=STR(1)_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXIR_U_ECXAST_U
"RTN","ECXSCXN",141,0)
 S STR(1)=STR(1)_ECXAO_U_ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U
"RTN","ECXSCXN",142,0)
 S STR(1)=STR(1)_$G(ECXPCPNP)_U_U_ECXENEL_U_ECXMST_U
"RTN","ECXSCXN",143,0)
 S STR(1)=STR(1)_ECXMIL_U_U_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXSCXN",144,0)
 S STR(1)=STR(1)_ECXCNTY_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXCAT_U
"RTN","ECXSCXN",145,0)
 S STR(2)=ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPHI_U_ECXPOS_U_ECXOBS_U_ECXENC_U
"RTN","ECXSCXN",146,0)
 S STR(2)=STR(2)_ECXAOL_U_ECXPDIV_U_ECXATYP_U_ECXPVST_U_ECXMTST_U
"RTN","ECXSCXN",147,0)
 S STR(2)=STR(2)_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXSCXN",148,0)
 I ECXLOGIC>2003 S STR(2)=STR(2)_U_ECXCBOC
"RTN","ECXSCXN",149,0)
 I ECXLOGIC>2004 S STR(2)=STR(2)_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXSCXN",150,0)
 I ECXLOGIC>2005 S STR(2)=STR(2)_U_ECXEST_U_ECXECE
"RTN","ECXSCXN",151,0)
 I ECXLOGIC>2006 S STR(2)=STR(2)_U_ECXERI_U_ECXHNC
"RTN","ECXSCXN",152,0)
 I ECXLOGIC>2007 S STR(2)=STR(2)_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_$G(ECPRNPI)
"RTN","ECXSCXN",153,0)
 I ECXLOGIC>2009 S STR(2)=STR(2)_U S STR(3)=ECXCNTRY
"RTN","ECXSCXN",154,0)
 D FILE2^ECXSCX2(727.827,EC7,.STR)
"RTN","ECXSCXN",155,0)
 S ECRN=ECRN+1,$P(^ECX(727.827,0),U,3)=EC7
"RTN","ECXSCXN",156,0)
 Q
"RTN","ECXSCXN",157,0)
 ;
"RTN","ECXSCXN",158,0)
SETUP ;set required input for ECXTRAC
"RTN","ECXSCXN",159,0)
 S ECHEAD="CLI"
"RTN","ECXSCXN",160,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSCXN",161,0)
 Q
"VER")
8.0^22.0
**END**
**END**
