Released GMRA*4*42 SEQ #40
Extracted from mail message
**KIDS**:GMRA*4.0*42^

**INSTALL NAME**
GMRA*4.0*42
"BLD",7271,0)
GMRA*4.0*42^ADVERSE REACTION TRACKING^0^3090401^y
"BLD",7271,1,0)
^^5^5^3090319^^
"BLD",7271,1,1,0)
Fixes issue with historical allergy entries being associated with
"BLD",7271,1,2,0)
a progress note when the historical entry follows the entry of
"BLD",7271,1,3,0)
an observed drug reaction.
"BLD",7271,1,4,0)
Also, fixes issue with 0 node not being set correctly on XTMP node
"BLD",7271,1,5,0)
and provides failsafe for sending data to HDR.
"BLD",7271,4,0)
^9.64PA^^
"BLD",7271,6)
1^
"BLD",7271,6.3)
4
"BLD",7271,"ABPKG")
n
"BLD",7271,"KRN",0)
^9.67PA^779.2^20
"BLD",7271,"KRN",.4,0)
.4
"BLD",7271,"KRN",.401,0)
.401
"BLD",7271,"KRN",.402,0)
.402
"BLD",7271,"KRN",.403,0)
.403
"BLD",7271,"KRN",.5,0)
.5
"BLD",7271,"KRN",.84,0)
.84
"BLD",7271,"KRN",3.6,0)
3.6
"BLD",7271,"KRN",3.8,0)
3.8
"BLD",7271,"KRN",9.2,0)
9.2
"BLD",7271,"KRN",9.8,0)
9.8
"BLD",7271,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",7271,"KRN",9.8,"NM",1,0)
GMRAGUI1^^0^B59206501
"BLD",7271,"KRN",9.8,"NM",2,0)
GMRAHDR^^0^B23798281
"BLD",7271,"KRN",9.8,"NM",3,0)
GMRAOR^^0^B67130954
"BLD",7271,"KRN",9.8,"NM","B","GMRAGUI1",1)

"BLD",7271,"KRN",9.8,"NM","B","GMRAHDR",2)

"BLD",7271,"KRN",9.8,"NM","B","GMRAOR",3)

"BLD",7271,"KRN",19,0)
19
"BLD",7271,"KRN",19.1,0)
19.1
"BLD",7271,"KRN",101,0)
101
"BLD",7271,"KRN",409.61,0)
409.61
"BLD",7271,"KRN",771,0)
771
"BLD",7271,"KRN",779.2,0)
779.2
"BLD",7271,"KRN",870,0)
870
"BLD",7271,"KRN",8989.51,0)
8989.51
"BLD",7271,"KRN",8989.52,0)
8989.52
"BLD",7271,"KRN",8994,0)
8994
"BLD",7271,"KRN","B",.4,.4)

"BLD",7271,"KRN","B",.401,.401)

"BLD",7271,"KRN","B",.402,.402)

"BLD",7271,"KRN","B",.403,.403)

"BLD",7271,"KRN","B",.5,.5)

"BLD",7271,"KRN","B",.84,.84)

"BLD",7271,"KRN","B",3.6,3.6)

"BLD",7271,"KRN","B",3.8,3.8)

"BLD",7271,"KRN","B",9.2,9.2)

"BLD",7271,"KRN","B",9.8,9.8)

"BLD",7271,"KRN","B",19,19)

"BLD",7271,"KRN","B",19.1,19.1)

"BLD",7271,"KRN","B",101,101)

"BLD",7271,"KRN","B",409.61,409.61)

"BLD",7271,"KRN","B",771,771)

"BLD",7271,"KRN","B",779.2,779.2)

"BLD",7271,"KRN","B",870,870)

"BLD",7271,"KRN","B",8989.51,8989.51)

"BLD",7271,"KRN","B",8989.52,8989.52)

"BLD",7271,"KRN","B",8994,8994)

"BLD",7271,"QUES",0)
^9.62^^
"BLD",7271,"REQB",0)
^9.611^3^3
"BLD",7271,"REQB",1,0)
GMRA*4.0*38^1
"BLD",7271,"REQB",2,0)
GMRA*4.0*26^1
"BLD",7271,"REQB",3,0)
GMRA*4.0*41^1
"BLD",7271,"REQB","B","GMRA*4.0*26",2)

"BLD",7271,"REQB","B","GMRA*4.0*38",1)

"BLD",7271,"REQB","B","GMRA*4.0*41",3)

"MBREQ")
0
"PKG",140,-1)
1^1
"PKG",140,0)
ADVERSE REACTION TRACKING^GMRA^Allergy Tracking System
"PKG",140,20,0)
^9.402P^^
"PKG",140,22,0)
^9.49I^1^1
"PKG",140,22,1,0)
4.0^2960328^2960506^10
"PKG",140,22,1,"PAH",1,0)
42^3090401^1326
"PKG",140,22,1,"PAH",1,1,0)
^^5^5^3090401
"PKG",140,22,1,"PAH",1,1,1,0)
Fixes issue with historical allergy entries being associated with
"PKG",140,22,1,"PAH",1,1,2,0)
a progress note when the historical entry follows the entry of
"PKG",140,22,1,"PAH",1,1,3,0)
an observed drug reaction.
"PKG",140,22,1,"PAH",1,1,4,0)
Also, fixes issue with 0 node not being set correctly on XTMP node
"PKG",140,22,1,"PAH",1,1,5,0)
and provides failsafe for sending data to HDR.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","GMRAGUI1")
0^1^B59206501^B59106496
"RTN","GMRAGUI1",1,0)
GMRAGUI1 ;SLC/DAN - CPRS GUI support ;2/9/09  09:45
"RTN","GMRAGUI1",2,0)
 ;;4.0;Adverse Reaction Tracking;**21,25,36,38,42**;Mar 29, 1996;Build 4
"RTN","GMRAGUI1",3,0)
 ;
"RTN","GMRAGUI1",4,0)
 Q
"RTN","GMRAGUI1",5,0)
EN1 ; GETREC, cont'd
"RTN","GMRAGUI1",6,0)
OBSV ;  Get OBSERVATIONS from file 120.85
"RTN","GMRAGUI1",7,0)
 S STRING="~OBSERVATIONS" D NEXT
"RTN","GMRAGUI1",8,0)
 S OBSIEN=0
"RTN","GMRAGUI1",9,0)
OBSLOOP S OBSIEN=$O(^GMR(120.85,"C",GMRAIEN,OBSIEN)) G:OBSIEN<1 EXIT
"RTN","GMRAGUI1",10,0)
 S GMRA(1)=$G(^GMR(120.85,OBSIEN,0)) Q:'$L(GMRA(1))
"RTN","GMRAGUI1",11,0)
 S STRING="tRecord            : "_OBSIEN D NEXT
"RTN","GMRAGUI1",12,0)
 S USRNAM=""
"RTN","GMRAGUI1",13,0)
 S USR=$P(GMRA(1),U,13) I USR'="" D GETUSR
"RTN","GMRAGUI1",14,0)
 S Y=$P(GMRA(1),U,1) X ^DD("DD")
"RTN","GMRAGUI1",15,0)
 S STRING="tDate/Time of Event: "_Y D NEXT
"RTN","GMRAGUI1",16,0)
 S STRING="tObserver          : "_USRNAM D NEXT
"RTN","GMRAGUI1",17,0)
 S SEVCOD=$P(GMRA(1),U,14)
"RTN","GMRAGUI1",18,0)
 S SEVER=$S(SEVCOD=1:"MILD",SEVCOD=2:"MODERATE",SEVCOD=3:"SEVERE",1:"")
"RTN","GMRAGUI1",19,0)
 S STRING="tSeverity          : "_SEVER D NEXT
"RTN","GMRAGUI1",20,0)
 S Y=$P(GMRA(1),U,18) X ^DD("DD")
"RTN","GMRAGUI1",21,0)
 S STRING="tDate Reported     : "_Y D NEXT
"RTN","GMRAGUI1",22,0)
 S USRNAM=""
"RTN","GMRAGUI1",23,0)
 S USR=$P(GMRA(1),U,19) I USR'="" D GETUSR
"RTN","GMRAGUI1",24,0)
 S STRING="tReporting User    : "_USRNAM D NEXT
"RTN","GMRAGUI1",25,0)
 S STRING="t" F I=1:1:60 S STRING=STRING_"-"
"RTN","GMRAGUI1",26,0)
 D NEXT
"RTN","GMRAGUI1",27,0)
 G OBSLOOP
"RTN","GMRAGUI1",28,0)
EXIT Q
"RTN","GMRAGUI1",29,0)
NEXT ;SET ARRAY NODE AND INCREMENT ARRAY COUNTER
"RTN","GMRAGUI1",30,0)
 S @GMRARRAY@(ND)=STRING,ND=ND+1,STRING=""
"RTN","GMRAGUI1",31,0)
 Q
"RTN","GMRAGUI1",32,0)
GETUSR S USRNAM=$$GET1^DIQ(200,USR_",",".01")
"RTN","GMRAGUI1",33,0)
 Q
"RTN","GMRAGUI1",34,0)
 ;
"RTN","GMRAGUI1",35,0)
EIE(GMRAIEN,GMRADFN,GMRARRAY) ;Mark individual entry as entered in error
"RTN","GMRAGUI1",36,0)
 N DIE,DA,DR,Y,DIK,DFN,OROLD,VAIN,X,GMRAOUT,GMRAPA
"RTN","GMRAGUI1",37,0)
 L +^XTMP("GMRAED",GMRADFN):1 I '$T D MESS Q
"RTN","GMRAGUI1",38,0)
 S GMRAPA=GMRAIEN
"RTN","GMRAGUI1",39,0)
 S DIE="^GMR(120.8,",DA=GMRAPA,DR="15///1;22///1;23///"_@GMRARRAY@("GMRAERRDT")_";24////"_$G(@GMRARRAY@("GMRAERRBY"),.5) ;36
"RTN","GMRAGUI1",40,0)
 D ^DIE ;Entered in error on date/time by user
"RTN","GMRAGUI1",41,0)
 I $D(@GMRARRAY@("GMRAERRCMTS")) D ADCOM(GMRAPA,"E",$NA(@GMRARRAY@("GMRAERRCMTS"))) ;add comments
"RTN","GMRAGUI1",42,0)
 I $$NKASCR^GMRANKA($P(^GMR(120.8,GMRAPA,0),U)) D
"RTN","GMRAGUI1",43,0)
 .S DIK="^GMR(120.86,",DA=$P(^GMR(120.8,GMRAPA,0),U)
"RTN","GMRAGUI1",44,0)
 .D ^DIK ;If patient's last allergy marked as entered in error then delete assessment
"RTN","GMRAGUI1",45,0)
 S GMRAPA(0)=$G(^GMR(120.8,GMRAPA,0)) Q:GMRAPA(0)=""
"RTN","GMRAGUI1",46,0)
 S GMRAOUT=0
"RTN","GMRAGUI1",47,0)
 D EN1^GMRAEAB ;Sends entered in error bulletin to appropriate mail groups
"RTN","GMRAGUI1",48,0)
 D EN1^GMRAPET0(GMRADFN,GMRAPA,"E",.GMRAOUT) ;21 File Progress Note
"RTN","GMRAGUI1",49,0)
 S DFN=GMRADFN
"RTN","GMRAGUI1",50,0)
 D INP^VADPT S X=$$FIND1^DIC(101,,"BX","GMRA ENTERED IN ERROR")_";ORD(101,"
"RTN","GMRAGUI1",51,0)
 D:X EN^XQOR ;Process protocols hanging off of "entered in error" protocol
"RTN","GMRAGUI1",52,0)
 L -^XTMP("GMRAED",GMRADFN)
"RTN","GMRAGUI1",53,0)
 S ORY=0_$S(+$G(GMRAPN)>0:("^"_+$G(GMRAPN)),1:"") ;38 Return IEN of progress note if created
"RTN","GMRAGUI1",54,0)
 Q
"RTN","GMRAGUI1",55,0)
 ;
"RTN","GMRAGUI1",56,0)
ADCOM(ENTRY,TYPE,GMRACOM) ;Add comments to allergies
"RTN","GMRAGUI1",57,0)
 ;
"RTN","GMRAGUI1",58,0)
 N FDA,GMRAI,X,DIWL,DIWR
"RTN","GMRAGUI1",59,0)
 K ^UTILITY($J,"W") S DIWL=1,DIWR=60 S GMRAI=0 F  S GMRAI=$O(@GMRACOM@(GMRAI)) Q:'+GMRAI  S X=@GMRACOM@(GMRAI) D ^DIWP
"RTN","GMRAGUI1",60,0)
 S GMRACOM="^UTILITY($J,""W"",1)"
"RTN","GMRAGUI1",61,0)
 S FDA(120.826,"+1,"_ENTRY_",",.01)=$$NOW^XLFDT
"RTN","GMRAGUI1",62,0)
 S FDA(120.826,"+1,"_ENTRY_",",1)=DUZ
"RTN","GMRAGUI1",63,0)
 S FDA(120.826,"+1,"_ENTRY_",",1.5)=TYPE
"RTN","GMRAGUI1",64,0)
 S FDA(120.826,"+1,"_ENTRY_",",2)=GMRACOM
"RTN","GMRAGUI1",65,0)
 D UPDATE^DIE("","FDA")
"RTN","GMRAGUI1",66,0)
 Q
"RTN","GMRAGUI1",67,0)
 ;
"RTN","GMRAGUI1",68,0)
NKA ;Change patient assessment to NKA
"RTN","GMRAGUI1",69,0)
 ;
"RTN","GMRAGUI1",70,0)
 N DA,DR,DIE,NKA,DFN
"RTN","GMRAGUI1",71,0)
 S DFN=ORDFN
"RTN","GMRAGUI1",72,0)
 L +^XTMP("GMRAED",DFN):1 I '$T D MESS Q
"RTN","GMRAGUI1",73,0)
 S NKA=$$NKA^GMRANKA(DFN)
"RTN","GMRAGUI1",74,0)
 I NKA=0 Q  ;Patient is already NKA
"RTN","GMRAGUI1",75,0)
 I NKA=1 S ORY="-1^Patient has active allergies - can't mark as NKA" Q
"RTN","GMRAGUI1",76,0)
 L +^GMR(120.86,0):5 I '$T S ORY="-1^Unable to update assessment - try again." Q
"RTN","GMRAGUI1",77,0)
 I '$D(^GMR(120.86,DFN,0)) D  ;Add assessment entry
"RTN","GMRAGUI1",78,0)
 .S $P(^GMR(120.86,0),U,3,4)=(DFN_"^"_($P(^GMR(120.86,0),U,4)+1))
"RTN","GMRAGUI1",79,0)
 .S ^GMR(120.86,DFN,0)=DFN_U,^GMR(120.86,"B",DFN,DFN)=""
"RTN","GMRAGUI1",80,0)
 L -^GMR(120.86,0) L +^GMR(120.86,DFN,0):5 I '$T S ORY="-1^Unable to update assessment - try again." Q
"RTN","GMRAGUI1",81,0)
 S DIE="^GMR(120.86,",DA=DFN,DR="1////0;2////"_DUZ_";3///NOW" D ^DIE
"RTN","GMRAGUI1",82,0)
 S ORY=0
"RTN","GMRAGUI1",83,0)
 L -^XTMP("GMRAED",DFN)
"RTN","GMRAGUI1",84,0)
 Q
"RTN","GMRAGUI1",85,0)
 ;
"RTN","GMRAGUI1",86,0)
UPDATE(GMRAIEN,DFN,GMRARRAY) ;Add/edit allergies
"RTN","GMRAGUI1",87,0)
 N NEW,NKA,FDA,NODE,IEN,SUB,FILE,DA,DIK,SIEN,GMRAS0,GMRAIEN,GMRAL,GMRAPA,GMRAAR,GMRALL,GMRADFN,GMRAOUT,GMRAROT,GMRAPN
"RTN","GMRAGUI1",88,0)
 S NEW='$G(GMRAIEN)
"RTN","GMRAGUI1",89,0)
 I NEW,$$DUPCHK^GMRAOR0(DFN,$P(@GMRARRAY@("GMRAGNT"),U))=1 S ORY="-1^Patient already has a "_$P(@GMRARRAY@("GMRAGNT"),U)_" reaction entered.  No duplicates allowed." Q
"RTN","GMRAGUI1",90,0)
 L +^XTMP("GMRAED",DFN):1 I '$T D MESS Q
"RTN","GMRAGUI1",91,0)
 D SITE^GMRAUTL S GMRASITE(0)=$G(^GMRD(120.84,+GMRASITE,0))
"RTN","GMRAGUI1",92,0)
 S NKA='$$NKA^GMRANKA(DFN) ;is patient NKA?
"RTN","GMRAGUI1",93,0)
 I NKA,NEW D
"RTN","GMRAGUI1",94,0)
 .S FDA(120.86,"?+"_DFN_",",.01)=DFN
"RTN","GMRAGUI1",95,0)
 .S FDA(120.86,"?+"_DFN_",",1)=1
"RTN","GMRAGUI1",96,0)
 .S FDA(120.86,"?+"_DFN_",",2)=DUZ
"RTN","GMRAGUI1",97,0)
 .S FDA(120.86,"?+"_DFN_",",3)=$G(@GMRARRAY@("GMRAORDT"),$$NOW^XLFDT)
"RTN","GMRAGUI1",98,0)
 .S IEN(DFN)=DFN
"RTN","GMRAGUI1",99,0)
 .D UPDATE^DIE("","FDA","IEN")
"RTN","GMRAGUI1",100,0)
 K FDA,IEN
"RTN","GMRAGUI1",101,0)
 S NODE=$S($G(NEW):"+1,",1:(GMRAIEN_","))
"RTN","GMRAGUI1",102,0)
 S:$G(NEW) FDA(120.8,NODE,.01)=DFN
"RTN","GMRAGUI1",103,0)
 I $P($G(@GMRARRAY@("GMRAGNT")),U,2)["50.67" S $P(@GMRARRAY@("GMRAGNT"),U,2)=$$TGTOG^PSNAPIS($P(@GMRARRAY@("GMRAGNT"),U))_";PSNDF(50.6,"
"RTN","GMRAGUI1",104,0)
 F SUB="GMRAGNT;.02","GMRATYPE;3.1","GMRANATR;17","GMRAORIG;5","GMRAORDT;4","GMRAOBHX;6" D
"RTN","GMRAGUI1",105,0)
 .S FDA(120.8,NODE,$P(SUB,";",2))=$P(@GMRARRAY@($P(SUB,";")),U)
"RTN","GMRAGUI1",106,0)
 .I (SUB["GMRAGNT"),NEW S FDA(120.8,NODE,1)=$P(@GMRARRAY@($P(SUB,";")),U,2)
"RTN","GMRAGUI1",107,0)
 D UPDATE^DIE("","FDA","IEN")
"RTN","GMRAGUI1",108,0)
 S:NEW GMRAIEN=IEN(1)
"RTN","GMRAGUI1",109,0)
 K FDA
"RTN","GMRAGUI1",110,0)
 F SUB="GMRACHT","GMRAIDBN" D
"RTN","GMRAGUI1",111,0)
 .Q:'$D(@GMRARRAY@(SUB))  ;Stop if no updates
"RTN","GMRAGUI1",112,0)
 .S FILE=$S(SUB="GMRACHT":120.813,1:120.814)
"RTN","GMRAGUI1",113,0)
 .S FDA(FILE,"+1,"_GMRAIEN_",",.01)=@GMRARRAY@(SUB,1)
"RTN","GMRAGUI1",114,0)
 .S FDA(FILE,"+1,"_GMRAIEN_",",1)=DUZ
"RTN","GMRAGUI1",115,0)
 .D UPDATE^DIE("","FDA")
"RTN","GMRAGUI1",116,0)
 I $D(@GMRARRAY@("GMRACMTS")) D ADCOM(GMRAIEN,"O",$NA(@GMRARRAY@("GMRACMTS"))) ;Add comments if included
"RTN","GMRAGUI1",117,0)
 K FDA
"RTN","GMRAGUI1",118,0)
 S SUB=0 F  S SUB=$O(@GMRARRAY@("GMRASYMP",SUB)) Q:'+SUB  D
"RTN","GMRAGUI1",119,0)
 .S GMRAS0=^(SUB) ;Naked from above
"RTN","GMRAGUI1",120,0)
 .Q:$P(^(SUB),U)=""  ;25 No text or free text entered so don't store
"RTN","GMRAGUI1",121,0)
 .S SIEN=$O(^GMR(120.8,GMRAIEN,10,"B",$P(GMRAS0,U),0))
"RTN","GMRAGUI1",122,0)
 .I SIEN,$P(^GMR(120.8,GMRAIEN,10,SIEN,0),U,4)=$P(GMRAS0,U,3) Q  ;Exists and nothing has changed
"RTN","GMRAGUI1",123,0)
 .I SIEN,$P(GMRAS0,U,5)="@" S DIK="^GMR(120.8,"_GMRAIEN_",",DA(1)=GMRAIEN,DA=SIEN D ^DIK Q  ;Sign/symptom deleted
"RTN","GMRAGUI1",124,0)
 .S:'SIEN FDA(120.81,"+1,"_GMRAIEN_",",.01)=$S($P(GMRAS0,U)="FT":$O(^GMRD(120.83,"B","OTHER REACTION",0)),1:$P(GMRAS0,U))
"RTN","GMRAGUI1",125,0)
 .S NODE=$S(SIEN:SIEN_","_GMRAIEN,1:"+1,"_GMRAIEN_",")
"RTN","GMRAGUI1",126,0)
 .S:$P(GMRAS0,U)="FT" FDA(120.81,NODE,1)=$P(GMRAS0,U,2)
"RTN","GMRAGUI1",127,0)
 .S FDA(120.81,NODE,2)=DUZ
"RTN","GMRAGUI1",128,0)
 .S FDA(120.81,NODE,3)=$P(GMRAS0,U,3)
"RTN","GMRAGUI1",129,0)
 .D UPDATE^DIE("","FDA","","ERR")
"RTN","GMRAGUI1",130,0)
 .S GMRAROT($P(GMRAS0,U,2))="" ;21 record s/s added
"RTN","GMRAGUI1",131,0)
 I NEW D
"RTN","GMRAGUI1",132,0)
 .S GMRALL(GMRAIEN)="" D VAD^GMRAUTL1(DFN,,.GMRALOC,.GMRANAM) D EN7^GMRAMCB ;Send mark chart/ID band bulletin if needed.
"RTN","GMRAGUI1",133,0)
 .I $P(@GMRARRAY@("GMRAOBHX"),U)="o" D  ;if observed reaction add data to 120.85
"RTN","GMRAGUI1",134,0)
 ..S GMRAOUT=0 ;21
"RTN","GMRAGUI1",135,0)
 ..S GMRAL(GMRAIEN,"O",GMRAIEN)=$G(@GMRARRAY@("GMRARDT"))_"^"_$G(@GMRARRAY@("GMRASEVR"))
"RTN","GMRAGUI1",136,0)
 ..S GMRADFN=DFN
"RTN","GMRAGUI1",137,0)
 ..S GMRAL(GMRAIEN)="^^"_$P($G(@GMRARRAY@("GMRAGNT")),U)_"^^^^"_$G(@GMRARRAY@("GMRAORIG"))
"RTN","GMRAGUI1",138,0)
 ..M GMRAL(GMRAIEN,"S")=@GMRARRAY@("GMRASYMP")
"RTN","GMRAGUI1",139,0)
 ..S SUB=0 F  S SUB=$O(GMRAL(GMRAIEN,"S",SUB)) Q:'+SUB  S $P(GMRAL(GMRAIEN,"S",SUB),U,2)=$P(GMRAL(GMRAIEN,"S",SUB),U,2)_"^" S:$P(GMRAL(GMRAIEN,"S",SUB),U)="FT" $P(GMRAL(GMRAIEN,"S",SUB),U)=$O(^GMRD(120.83,"B","OTHER REACTION",0))
"RTN","GMRAGUI1",140,0)
 ..S GMRAL=GMRAIEN
"RTN","GMRAGUI1",141,0)
 ..D ADVERSE^GMRAOR7(GMRAIEN,.GMRAL) ;adds entry to 120.85
"RTN","GMRAGUI1",142,0)
 ..S GMRAIEN(GMRAIEN)="" ;21
"RTN","GMRAGUI1",143,0)
 ..D EN1^GMRAPET0(GMRADFN,.GMRAIEN,"S",.GMRAOUT) ;21 File progress note
"RTN","GMRAGUI1",144,0)
 ..I $G(@GMRARRAY@("GMRATYPE"))["D" S GMRAPA=GMRAIEN D EN1^GMRAPTB ;21 Send med-watch update
"RTN","GMRAGUI1",145,0)
 .S GMRAAR=$P($G(@GMRARRAY@("GMRAGNT")),U,2),GMRAPA=GMRAIEN
"RTN","GMRAGUI1",146,0)
 .D EN1^GMRAOR9 S ^TMP($J,"GMRASF",1,GMRAPA)="" D RANGE^GMRASIGN(1) ;add ingredients/classes send appropriate bulletins
"RTN","GMRAGUI1",147,0)
 S ORY=0_$S(+$G(GMRAPN)>0:("^"_+$G(GMRAPN)),1:"") ;38 If note was created send back IEN
"RTN","GMRAGUI1",148,0)
 L -^XTMP("GMRAED",DFN)
"RTN","GMRAGUI1",149,0)
 Q
"RTN","GMRAGUI1",150,0)
 ;
"RTN","GMRAGUI1",151,0)
MESS ;Give out locked message
"RTN","GMRAGUI1",152,0)
 N GMRAXBOS,GMRAL1,GMRAL2
"RTN","GMRAGUI1",153,0)
 S GMRAXBOS=$$BROKER^XWBLIB ;In GUI?
"RTN","GMRAGUI1",154,0)
 S GMRAL1="Another user is editing this patient's allergy information."
"RTN","GMRAGUI1",155,0)
 S GMRAL2="Please refresh/review the patient's information before proceeding."
"RTN","GMRAGUI1",156,0)
 I 'GMRAXBOS W !,GMRAL1,!,GMRAL2 D WAIT^GMRAFX3 Q
"RTN","GMRAGUI1",157,0)
 S ORY="-1^"_GMRAL1_"  "_GMRAL2
"RTN","GMRAGUI1",158,0)
 Q
"RTN","GMRAHDR")
0^2^B23798281^B21654904
"RTN","GMRAHDR",1,0)
GMRAHDR ;SLC/DAN - HDR calls for ART ;4/1/09  13:55
"RTN","GMRAHDR",2,0)
 ;;4.0;Adverse Reaction Tracking;**18,24,26,42**;Mar 29, 1996;Build 4
"RTN","GMRAHDR",3,0)
 ;
"RTN","GMRAHDR",4,0)
 ;The variable GMRADONT can be set before making a call to this
"RTN","GMRAHDR",5,0)
 ;routine if you'd like to be able to change data but not have it
"RTN","GMRAHDR",6,0)
 ;sent to the HDR.  If GMRADONT has a positive value then nothing
"RTN","GMRAHDR",7,0)
 ;will be queued to be sent to the HDR.
"RTN","GMRAHDR",8,0)
 ;A check will also be made for the existence of VAFCA08 to indicate
"RTN","GMRAHDR",9,0)
 ;whether a patient merge is taking place.  If so, then data isn't
"RTN","GMRAHDR",10,0)
 ;sent to the HDR.
"RTN","GMRAHDR",11,0)
 ;
"RTN","GMRAHDR",12,0)
SETADR ;Call here when updating data
"RTN","GMRAHDR",13,0)
 N IEN,OIEN
"RTN","GMRAHDR",14,0)
 I $G(GMRADONT)!($G(XDRDVALF)=1) Q  ;Don't send HDR information if variable is set
"RTN","GMRAHDR",15,0)
 S IEN=$S($D(DA)=1:DA,1:DA($O(DA("?"),-1)))
"RTN","GMRAHDR",16,0)
 I +$P($G(^GMR(120.8,IEN,0)),U,12)=0 Q  ;Stop if it isn't signed off yet
"RTN","GMRAHDR",17,0)
 I $$TESTPAT^VADPT($P(^GMR(120.8,IEN,0),U)) Q  ;24 Don't send data for test patients
"RTN","GMRAHDR",18,0)
 D TASK("ADR",IEN),UPDRDI ;26 Schedule entry to be sent to HDR, note new data for RDI
"RTN","GMRAHDR",19,0)
 I $P($G(^GMR(120.8,IEN,0)),U,6)="o" S OIEN=+$O(^GMR(120.85,"C",IEN,0)) I $D(^GMR(120.85,OIEN,0)),'+$G(^GMR(120.8,IEN,"ER")) D TASK("OBS",OIEN) ;If observed reaction, send observed data on sign off
"RTN","GMRAHDR",20,0)
 Q
"RTN","GMRAHDR",21,0)
 ;
"RTN","GMRAHDR",22,0)
KILLADR ;Call here when data is deleted
"RTN","GMRAHDR",23,0)
 N IEN
"RTN","GMRAHDR",24,0)
 I $G(GMRADONT)!($G(XDRDVALF)=1) Q  ;Don't send data to HDR if variable is set
"RTN","GMRAHDR",25,0)
 S IEN=$S($D(DA)=1:DA,1:DA($O(DA("?"),-1)))
"RTN","GMRAHDR",26,0)
 I $P($G(^GMR(120.8,IEN,0)),U,12)=0 Q  ;Stop if it isn't signed off yet
"RTN","GMRAHDR",27,0)
 I $$TESTPAT^VADPT($P(^GMR(120.8,IEN,0),U)) Q  ;24 Don't send data for test patients
"RTN","GMRAHDR",28,0)
 D TASK("ADR",IEN),UPDRDI ;26 Schedule entry to be sent to the HDR, note new data for RDI
"RTN","GMRAHDR",29,0)
 Q
"RTN","GMRAHDR",30,0)
 ;
"RTN","GMRAHDR",31,0)
SETAA ;Action taken when assessment is changed
"RTN","GMRAHDR",32,0)
 I $G(GMRADONT)!($G(XDRDVALF)=1) Q  ;Don't send data if variable is set
"RTN","GMRAHDR",33,0)
 I $$TESTPAT^VADPT(DA) Q  ;24 Don't send data for test patients
"RTN","GMRAHDR",34,0)
 D TASK("ASMT",DA)
"RTN","GMRAHDR",35,0)
 Q
"RTN","GMRAHDR",36,0)
 ;
"RTN","GMRAHDR",37,0)
KILLAA ;Action taken when value is deleted
"RTN","GMRAHDR",38,0)
 I $G(GMRADONT)!($G(XDRDVALF)=1) Q  ;Don't send data to HDR if variable is set
"RTN","GMRAHDR",39,0)
 I $$TESTPAT^VADPT(DA) Q  ;24 Don't send data for test patients
"RTN","GMRAHDR",40,0)
 D TASK("ASMT",DA)
"RTN","GMRAHDR",41,0)
 Q
"RTN","GMRAHDR",42,0)
 ;
"RTN","GMRAHDR",43,0)
SETOB ;Make call to HDR when observation data is added or edited
"RTN","GMRAHDR",44,0)
 N IEN,AIEN
"RTN","GMRAHDR",45,0)
 I $G(GMRADONT)!($G(XDRDVALF)=1) Q  ;Don't send data to HDR if variable is set
"RTN","GMRAHDR",46,0)
 S IEN=$S($D(DA)=1:DA,1:DA($O(DA("?"),-1)))
"RTN","GMRAHDR",47,0)
 S AIEN=+$P($G(^GMR(120.85,IEN,0)),U,15) Q:'+AIEN  ;Stop if there's no related reaction
"RTN","GMRAHDR",48,0)
 I $P($G(^GMR(120.8,AIEN,0)),U,12)=0 Q  ;Stop if related reaction not signed off
"RTN","GMRAHDR",49,0)
 I $$TESTPAT^VADPT($P(^GMR(120.8,AIEN,0),U)) Q  ;24 Don't send data for test patients
"RTN","GMRAHDR",50,0)
 D TASK("OBS",IEN)
"RTN","GMRAHDR",51,0)
 Q
"RTN","GMRAHDR",52,0)
 ;
"RTN","GMRAHDR",53,0)
KILLOB ;Action upon deletion of observation data
"RTN","GMRAHDR",54,0)
 N IEN,AIEN
"RTN","GMRAHDR",55,0)
 I $G(GMRADONT)!($G(XDRDVALF)=1) Q  ;Don't send data to HDR if variable is set
"RTN","GMRAHDR",56,0)
 S IEN=$S($D(DA)=1:DA,1:DA($O(DA("?"),-1)))
"RTN","GMRAHDR",57,0)
 S AIEN=+$P($G(^GMR(120.85,IEN,0)),U,15) Q:'AIEN  ;Quit if there's no related reaction
"RTN","GMRAHDR",58,0)
 I +$P($G(^GMR(120.8,AIEN,0)),U,12)=0 Q  ;Quit if related reaction not signed off
"RTN","GMRAHDR",59,0)
 I $$TESTPAT^VADPT($P(^GMR(120.8,AIEN,0),U)) Q  ;24 Don't send data for test patients
"RTN","GMRAHDR",60,0)
 D TASK("OBS",IEN)
"RTN","GMRAHDR",61,0)
 Q
"RTN","GMRAHDR",62,0)
 ;
"RTN","GMRAHDR",63,0)
TASK(TYPE,IEN) ;Create task, if needed, and add entry to list of items to be sent to HDR
"RTN","GMRAHDR",64,0)
 N ZTRTN,ZTDESC,ZTDTH,ZTSK,ZTIO
"RTN","GMRAHDR",65,0)
 F  L +^XTMP("GMRAHDR"):1 Q:$T  ;Control global so no new entries are added
"RTN","GMRAHDR",66,0)
 ;Check if task exists, if so and it's older than 10 minutes and it's not scheduled to run, get a new task.  Added w/patch 42
"RTN","GMRAHDR",67,0)
 I $D(^XTMP("GMRAHDR","TASK")) I $$FMDIFF^XLFDT($$NOW^XLFDT,$P(^XTMP("GMRAHDR",0),U,2),2)>600 I '$$TSKOK(+$G(^XTMP("GMRAHDR","TASK"))) K ^XTMP("GMRAHDR","TASK") ;42
"RTN","GMRAHDR",68,0)
 I '$D(^XTMP("GMRAHDR")) S ^XTMP("GMRAHDR",0)=$$FMADD^XLFDT(DT,30)_U_$$NOW^XLFDT_U_"Send allergy data to HDR"
"RTN","GMRAHDR",69,0)
 I '$D(^XTMP("GMRAHDR","TASK")) D
"RTN","GMRAHDR",70,0)
 .S ZTRTN="DQ^GMRAHDR",ZTDESC="Transmit allergy data to HDR",ZTDTH=$$HADD^XLFDT($H,,,2),ZTIO="" D ^%ZTLOAD S ^XTMP("GMRAHDR","TASK")=ZTSK
"RTN","GMRAHDR",71,0)
 S ^XTMP("GMRAHDR",TYPE,IEN)="" ;Store off entry to be sent later
"RTN","GMRAHDR",72,0)
 L -^XTMP("GMRAHDR") ;Release lock
"RTN","GMRAHDR",73,0)
 Q
"RTN","GMRAHDR",74,0)
 ;
"RTN","GMRAHDR",75,0)
DQ ;Send data to HDR
"RTN","GMRAHDR",76,0)
 N TYPE,IEN,A
"RTN","GMRAHDR",77,0)
 F  L +^XTMP("GMRAHDR"):1 Q:$T  ;Get control of global
"RTN","GMRAHDR",78,0)
 F TYPE="ADR","ASMT","OBS" I $D(^XTMP("GMRAHDR",TYPE)) D
"RTN","GMRAHDR",79,0)
 .S IEN=0 F  S IEN=$O(^XTMP("GMRAHDR",TYPE,IEN)) Q:'+IEN  I $L($T(QUEUE^VDEFQM)) S A=$$QUEUE^VDEFQM("ORU^R01","SUBTYPE="_$S(TYPE="ADR":"ALGY",TYPE="ASMT":"ADAS",1:"ADRA")_"^IEN="_IEN,.GMRAERR)
"RTN","GMRAHDR",80,0)
 K ^XTMP("GMRAHDR")
"RTN","GMRAHDR",81,0)
 L -^XTMP("GMRAHDR")
"RTN","GMRAHDR",82,0)
 Q
"RTN","GMRAHDR",83,0)
 ;
"RTN","GMRAHDR",84,0)
UPDRDI ;Create flag to let RDI know that patient data has changed
"RTN","GMRAHDR",85,0)
 N PIEN,ERR
"RTN","GMRAHDR",86,0)
 S PIEN=$P($G(^GMR(120.8,IEN,0)),U) Q:'+PIEN  ;Quit if no patient IEN
"RTN","GMRAHDR",87,0)
 I '$D(^XTMP("GMRAOC",PIEN)) Q  ;If no current patient data then no need to set flag
"RTN","GMRAHDR",88,0)
 F  L +^XTMP("GMRAOC",PIEN):1 Q:$T
"RTN","GMRAHDR",89,0)
 S ERR=+$G(^GMR(120.8,IEN,"ER"))
"RTN","GMRAHDR",90,0)
 S ^XTMP("GMRAOC",PIEN,$S('ERR:"NEW",1:"ERROR"))=""
"RTN","GMRAHDR",91,0)
 L -^XTMP("GMRAOC",PIEN)
"RTN","GMRAHDR",92,0)
 Q
"RTN","GMRAHDR",93,0)
 ;
"RTN","GMRAHDR",94,0)
TSKOK(ZTSK) ;Check to see if task is active.  Section added in patch 42
"RTN","GMRAHDR",95,0)
 D ISQED^%ZTLOAD
"RTN","GMRAHDR",96,0)
 Q +ZTSK(0)
"RTN","GMRAOR")
0^3^B67130954^B69044277
"RTN","GMRAOR",1,0)
GMRAOR ;HIRMFO/WAA,RM-OERR UTILITIES ;4/1/09  13:55
"RTN","GMRAOR",2,0)
 ;;4.0;Adverse Reaction Tracking;**2,13,26,37,41,42**;Mar 29, 1996;Build 4
"RTN","GMRAOR",3,0)
ORCHK(DFN,TYP,PTR,LOC) ; Given a patient IEN (DFN), this function will
"RTN","GMRAOR",4,0)
 ; return 1 (true) if the patient has an allergy to an agent defined
"RTN","GMRAOR",5,0)
 ; by TYP and PTR, else it returns 0 (false). See table below.
"RTN","GMRAOR",6,0)
 ; The Contrast Media Reaction check will return a null if the patient
"RTN","GMRAOR",7,0)
 ; is not in the ART database.  Contrast Media checks will also
"RTN","GMRAOR",8,0)
 ; return whether the check is from local or remote data as the second
"RTN","GMRAOR",9,0)
 ; piece of the flag if LOC is defined as a positive integer
"RTN","GMRAOR",10,0)
 ; 
"RTN","GMRAOR",11,0)
 ;    Contrast Media Reaction:  TYP="CM", PTR (undefined)
"RTN","GMRAOR",12,0)
 ;              Drug Reaction:  TYP="DR", PTR=IEN in ^PSNDF(.
"RTN","GMRAOR",13,0)
 ;           Drug Ingredients:  TYP="IN", PTR=IEN in ^PS(50.416,
"RTN","GMRAOR",14,0)
 ;                 Drug Class:  TYP="CL", PTR=IEN in ^PS(50.605,
"RTN","GMRAOR",15,0)
 ;
"RTN","GMRAOR",16,0)
 N GMRAFLG,GMRACM,DA ;37
"RTN","GMRAOR",17,0)
 S GMRAFLG=0
"RTN","GMRAOR",18,0)
 I $G(DFN)<1!("^CM^DR^IN^CL^"'[("^"_$G(TYP)_"^"))!($G(TYP)'="CM"&($G(PTR)<1)) S GMRAFLG=""
"RTN","GMRAOR",19,0)
 E  D
"RTN","GMRAOR",20,0)
 .D GETDATA(DFN) ;26 Retreive local/remote allergy data for order checking
"RTN","GMRAOR",21,0)
 .I TYP="CM" S GMRAFLG=$$RAD(DFN)_$S($G(LOC)&($G(GMRACM)'=""):("^"_$G(GMRACM)),1:"") ;37 check for Contrast Media Reaction, return location if requested
"RTN","GMRAOR",22,0)
 .I TYP="DR" S GMRAFLG=$$DRUG(DFN,PTR) ; check for Drug Reaction
"RTN","GMRAOR",23,0)
 .I TYP="IN" S GMRAFLG=$$ING(DFN,PTR) ; Check for Drug Ingredients
"RTN","GMRAOR",24,0)
 .I TYP="CL" S GMRAFLG=$$CLASS(DFN,PTR) ; Check for Drug Class
"RTN","GMRAOR",25,0)
 .Q
"RTN","GMRAOR",26,0)
 Q GMRAFLG
"RTN","GMRAOR",27,0)
RAD(DFN) ; Subroutine checks for Contrast Media Reaction, returns 1 or 0.
"RTN","GMRAOR",28,0)
 N FLG,DC,LOCAL,REMOTE ;37 entire section added
"RTN","GMRAOR",29,0)
 S FLG=$P($G(^GMR(120.86,DFN,0)),U,2) S:FLG=1 FLG=0 S DC="DX10" F  S DC=$O(^TMP("GMRAOC",$J,"APC",DC)) Q:DC'["DX10"  D
"RTN","GMRAOR",30,0)
 .S FLG=1
"RTN","GMRAOR",31,0)
 .I $G(^TMP("GMRAOC",$J,"APC",DC))["LOCAL" S LOCAL=1
"RTN","GMRAOR",32,0)
 .I $G(^TMP("GMRAOC",$J,"APC",DC))["REMOTE" S REMOTE=1
"RTN","GMRAOR",33,0)
 S GMRACM=$S($G(LOCAL)&($G(REMOTE)):"LOCAL AND REMOTE SITE(S)",$G(LOCAL):"LOCAL",$G(REMOTE):"REMOTE SITE(S)",1:"")
"RTN","GMRAOR",34,0)
 ;D EN1^GMRADPT S FLG=GMRAL
"RTN","GMRAOR",35,0)
 ;I GMRAL S GMRAPA=0 F  S GMRAPA=$O(GMRAL(GMRAPA)) Q:GMRAPA<1  D  Q:FLG
"RTN","GMRAOR",36,0)
 ;.S FLG=$$RALLG^GMRARAD(GMRAPA)
"RTN","GMRAOR",37,0)
 ;.Q
"RTN","GMRAOR",38,0)
 Q FLG
"RTN","GMRAOR",39,0)
DRUG(DFN,PTR) ; Subroutine checks for Drug Reaction, returns 1 or 0.
"RTN","GMRAOR",40,0)
 N %,FLG,GMRAC,GMRADR,GMRAI,PSNVPN,PSNDA S FLG=0
"RTN","GMRAOR",41,0)
 K GMRAING,GMRADRCL
"RTN","GMRAOR",42,0)
 S PSNDA=$P(PTR,"."),PSNVPN=$P(PTR,".",2)
"RTN","GMRAOR",43,0)
 I $G(@($$NDFREF_PSNDA_",0)"))'="" D
"RTN","GMRAOR",44,0)
 .; Check for rxn to ingredients.
"RTN","GMRAOR",45,0)
 .; If use the new entry point if there.
"RTN","GMRAOR",46,0)
 .I $T(DISPDRG^PSNNGR)]"",PSNVPN]"" D
"RTN","GMRAOR",47,0)
 ..K ^TMP("PSNDD",$J) D DISPDRG^PSNNGR ; get ingredients
"RTN","GMRAOR",48,0)
 ..S GMRAI=0,%=1 F  S GMRAI=$O(^TMP("PSNDD",$J,GMRAI)) Q:GMRAI<1  I $D(^TMP("GMRAOC",$J,"API",GMRAI)) S FLG=1,GMRAING(%)=^TMP("PSNDD",$J,GMRAI)_$$FAC(^TMP("GMRAOC",$J,"API",GMRAI)),%=%+1 ;26
"RTN","GMRAOR",49,0)
 ..K ^TMP("PSNDD",$J)
"RTN","GMRAOR",50,0)
 ..Q
"RTN","GMRAOR",51,0)
 .E  D  ; get ingredients
"RTN","GMRAOR",52,0)
 ..K ^TMP("PSN",$J) D ^PSNNGR
"RTN","GMRAOR",53,0)
 ..S GMRAI=0,%=1 F  S GMRAI=$O(^TMP("PSN",$J,GMRAI)) Q:GMRAI<1  I $D(^TMP("GMRAOC",$J,"API",GMRAI)) S FLG=1,GMRAING(%)=^TMP("PSN",$J,GMRAI)_$$FAC(^TMP("GMRAOC",$J,"API",GMRAI)),%=%+1 ;26
"RTN","GMRAOR",54,0)
 ..K ^TMP("PSN",$J)
"RTN","GMRAOR",55,0)
 ..Q
"RTN","GMRAOR",56,0)
 .Q:FLG  ; Rxn to ingredient, quit now.
"RTN","GMRAOR",57,0)
 .; Check for rxn to VA Drug Class
"RTN","GMRAOR",58,0)
 .S PSNDA=$P(PTR,"."),PSNVPN=$P(PTR,".",2)
"RTN","GMRAOR",59,0)
 .N CLASS
"RTN","GMRAOR",60,0)
 .I PSNVPN S CLASS=$$DCLCODE^PSNAPIS(PSNDA,PSNVPN) D DRCL(CLASS) Q
"RTN","GMRAOR",61,0)
 .N CLASS,GMRALIST
"RTN","GMRAOR",62,0)
 .S GMRALIST=$$CLIST^PSNAPIS(PSNDA,.GMRALIST) Q:'$G(GMRALIST)
"RTN","GMRAOR",63,0)
 .S GMRALIST=0 F  S GMRALIST=$O(GMRALIST(GMRALIST)) Q:'GMRALIST  D DRCL($P(GMRALIST(GMRALIST),U,2))
"RTN","GMRAOR",64,0)
 .Q
"RTN","GMRAOR",65,0)
 Q FLG
"RTN","GMRAOR",66,0)
FAC(NODE) ;
"RTN","GMRAOR",67,0)
 N FAC
"RTN","GMRAOR",68,0)
 S FAC=$S($L(NODE):" ("_NODE_")",1:"")
"RTN","GMRAOR",69,0)
 Q FAC
"RTN","GMRAOR",70,0)
DRCL(CODE) ;return any rxn's in GMRADRCL(
"RTN","GMRAOR",71,0)
 I '$D(^TMP("GMRAOC",$J,"APC",CODE)) Q
"RTN","GMRAOR",72,0)
 N J S J=$S('$D(GMRADRCL):1,1:$O(GMRADRCL(999),-1)+1)
"RTN","GMRAOR",73,0)
 ;S GMRADRCL(J)=$$CLASS2^PSNAPIS(CODE)
"RTN","GMRAOR",74,0)
 N CLSFN
"RTN","GMRAOR",75,0)
 ;S CLSFN=$P(^PS(50.605,+$O(^PS(50.605,"B",CODE,0)),0),U,2)
"RTN","GMRAOR",76,0)
 S CLSFN=$$CODE2CL^GMRAPENC(CODE)
"RTN","GMRAOR",77,0)
 S GMRADRCL(J)=CODE_"^"_CLSFN_$$FAC(^TMP("GMRAOC",$J,"APC",CODE))
"RTN","GMRAOR",78,0)
 S FLG=2
"RTN","GMRAOR",79,0)
 Q 
"RTN","GMRAOR",80,0)
ING(DFN,PTR) ; Subroutine checks for Drug Ingredients, returns:
"RTN","GMRAOR",81,0)
 ;                  If found FLG= 1 with GMRAIEN Array Drug Ingredients
"RTN","GMRAOR",82,0)
 ;                 Not found FLG= 0
"RTN","GMRAOR",83,0)
 N GMRAX K GMRAIEN
"RTN","GMRAOR",84,0)
 S FLG=0
"RTN","GMRAOR",85,0)
 S GMRAX=0
"RTN","GMRAOR",86,0)
 F  S GMRAX=$O(^GMR(120.8,"API",DFN,PTR,GMRAX)) Q:GMRAX<1  S FLG=1,GMRAIEN(GMRAX)=""
"RTN","GMRAOR",87,0)
 Q FLG
"RTN","GMRAOR",88,0)
CLASS(DFN,PTR) ; Subroutine checks for Drug Class, returns:
"RTN","GMRAOR",89,0)
 ;                  If found FLG= 1 with GMRAIEN Array Drug Class
"RTN","GMRAOR",90,0)
 ;                 Not found FLG= 0
"RTN","GMRAOR",91,0)
 N GMRAC,GMRAX K GMRAIEN
"RTN","GMRAOR",92,0)
 ;S GMRAX=0,FLG=0,GMRAC=$P($G(^PS(50.605,PTR,0)),U)
"RTN","GMRAOR",93,0)
 S GMRAX=0,FLG=0,GMRAC=$$CLP2CODE^GMRAPENC(PTR)
"RTN","GMRAOR",94,0)
 I GMRAC'="" F  S GMRAX=$O(^GMR(120.8,"APC",DFN,GMRAC,GMRAX)) Q:GMRAX<1  S FLG=1,GMRAIEN(GMRAX)=""
"RTN","GMRAOR",95,0)
 Q FLG
"RTN","GMRAOR",96,0)
NDFREF() ;get version dependent NDF reference
"RTN","GMRAOR",97,0)
 I $$VERSION^XPDUTL("PSN")<4 Q "^PSNDF("
"RTN","GMRAOR",98,0)
 Q "^PSNDF(50.6," ; new reference for ver 4.0
"RTN","GMRAOR",99,0)
 ;
"RTN","GMRAOR",100,0)
GETDATA(DFN) ;Obtain local and HDR related allergy data for use in order checking.  Section added in patch 26
"RTN","GMRAOR",101,0)
 ;Output from call will be stored in ^TMP as follows:
"RTN","GMRAOR",102,0)
 ;^TMP("GMRAOC",$J,"API",J)="" where J is the ingredient IEN
"RTN","GMRAOR",103,0)
 ;^TMP("GMRAOC",$J,"APC",K)="" where K is the drug class classification (e.g. MS105)
"RTN","GMRAOR",104,0)
 ;
"RTN","GMRAOR",105,0)
 F  L +^XTMP("GMRAOC",DFN):1 Q:$T
"RTN","GMRAOR",106,0)
 N GMRRECDT,GMRCACHE,GMRFRESH,GMRNEW,GMRXTMP
"RTN","GMRAOR",107,0)
 S (GMRFRESH,GMRNEW,GMRXTMP)=0
"RTN","GMRAOR",108,0)
 S GMRRECDT=$P($G(^XTMP("ORRDI","ART",DFN,0)),U)
"RTN","GMRAOR",109,0)
 S GMRCACHE=$$GET^XPAR("SYS","OR RDI CACHE TIME")
"RTN","GMRAOR",110,0)
 I $$FMDIFF^XLFDT($$NOW^XLFDT,GMRRECDT,2)<(60*GMRCACHE),$P(^XTMP("ORRDI","ART",DFN,0),U,3)>-1 S GMRFRESH=1
"RTN","GMRAOR",111,0)
 S GMRXTMP=$D(^XTMP("GMRAOC",DFN))
"RTN","GMRAOR",112,0)
 S GMRNEW=$S($D(^XTMP("GMRAOC",DFN,"ERROR")):2,$D(^XTMP("GMRAOC",DFN,"NEW")):1,1:0)
"RTN","GMRAOR",113,0)
 I GMRFRESH&GMRXTMP&(GMRNEW=1) K ^XTMP("GMRAOC",DFN,"NEW") D LOCAL(DFN)
"RTN","GMRAOR",114,0)
 I 'GMRFRESH!'GMRXTMP!(GMRNEW=2) K ^XTMP("GMRAOC",DFN) D REMOTE(DFN),LOCAL(DFN)
"RTN","GMRAOR",115,0)
 K ^TMP("GMRAOC",$J)
"RTN","GMRAOR",116,0)
 M ^TMP("GMRAOC",$J)=^XTMP("GMRAOC",DFN)
"RTN","GMRAOR",117,0)
 S ^XTMP("GMRAOC",DFN,0)=$$FMADD^XLFDT($$NOW^XLFDT,2)_U_$$NOW^XLFDT ;42
"RTN","GMRAOR",118,0)
 L -^XTMP("GMRAOC",DFN)
"RTN","GMRAOR",119,0)
 Q
"RTN","GMRAOR",120,0)
 ;
"RTN","GMRAOR",121,0)
LOCAL(DFN) ;
"RTN","GMRAOR",122,0)
 N J
"RTN","GMRAOR",123,0)
 S J=0 F  S J=$O(^GMR(120.8,"API",DFN,J)) Q:'+J  S ^XTMP("GMRAOC",DFN,"API",J)=$$SETNODE^GMRAOR1($G(^XTMP("GMRAOC",DFN,"API",J)),"LOCAL")
"RTN","GMRAOR",124,0)
 S J="" F  S J=$O(^GMR(120.8,"APC",DFN,J)) Q:J=""  S ^XTMP("GMRAOC",DFN,"APC",J)=$$SETNODE^GMRAOR1($G(^XTMP("GMRAOC",DFN,"APC",J)),"LOCAL")
"RTN","GMRAOR",125,0)
 Q
"RTN","GMRAOR",126,0)
 ;
"RTN","GMRAOR",127,0)
REMOTE(DFN) ;
"RTN","GMRAOR",128,0)
 N J,FLG,REACT,IN,VUID,FILE,GMRARAY,DC,DCLASS,GMRAING,GMRADC,K,INGLST,I,PRIM,IEN
"RTN","GMRAOR",129,0)
 ;Check for HDR data
"RTN","GMRAOR",130,0)
 Q:'$L($T(HAVEHDR^ORRDI1))  Q:'$$HAVEHDR^ORRDI1  ;Quit if call doesn't exist or if the HDR isn't available
"RTN","GMRAOR",131,0)
 Q:'$$GET^ORRDI1(DFN,"ART")  ;Quit if no HDR data for selected patient
"RTN","GMRAOR",132,0)
 S J=0 F  S J=$O(^XTMP("ORRDI","ART",DFN,J)) Q:'+J  D
"RTN","GMRAOR",133,0)
 .S FLG=0
"RTN","GMRAOR",134,0)
 .S REACT=$G(^XTMP("ORRDI","ART",DFN,J,"REACTANT",0)) ;Reaction VUID
"RTN","GMRAOR",135,0)
 .I $D(^XTMP("ORRDI","ART",DFN,J,"DRUG INGREDIENTS")) D  ;Ingredient data exists
"RTN","GMRAOR",136,0)
 ..S FLG=1 ;Have ingredient data so REACT is ok
"RTN","GMRAOR",137,0)
 ..S IN=0 F  S IN=$O(^XTMP("ORRDI","ART",DFN,J,"DRUG INGREDIENTS",IN)) Q:'+IN  D
"RTN","GMRAOR",138,0)
 ...S VUID=$P(^(IN),U),FILE=$P(^(IN),U,3) ;Naked from above line
"RTN","GMRAOR",139,0)
 ...S FILE=$P(FILE,"99VA",2)
"RTN","GMRAOR",140,0)
 ...D GETIREF^XTID(FILE,,VUID,"GMRARAY") ;Get IENs related to VUID
"RTN","GMRAOR",141,0)
 ...S IEN=0 F  S IEN=$O(GMRARAY(FILE,.01,IEN)) Q:'+IEN  S ^XTMP("GMRAOC",DFN,"API",+IEN)=$$SETNODE^GMRAOR1($G(^XTMP("GMRAOC",DFN,"API",+IEN)),"REMOTE SITE(S)")
"RTN","GMRAOR",142,0)
 ...K GMRARAY
"RTN","GMRAOR",143,0)
 .I $D(^XTMP("ORRDI","ART",DFN,J,"DRUG CLASSES")) D  ;Drug class data exists
"RTN","GMRAOR",144,0)
 ..S FLG=1
"RTN","GMRAOR",145,0)
 ..S DC=0 F  S DC=$O(^XTMP("ORRDI","ART",DFN,J,"DRUG CLASSES",DC)) Q:'+DC  D
"RTN","GMRAOR",146,0)
 ...S DCLASS=$P(^(DC),U,2) ;Naked from above, gets drug class (e.g.MS105)
"RTN","GMRAOR",147,0)
 ...S ^XTMP("GMRAOC",DFN,"APC",DCLASS)=$$SETNODE^GMRAOR1($G(^XTMP("GMRAOC",DFN,"APC",DCLASS)),"REMOTE SITE(S)")
"RTN","GMRAOR",148,0)
 .D FIND(REACT,.GMRAING,.GMRADC) I $D(GMRAING)!($D(GMRADC)) D
"RTN","GMRAOR",149,0)
 ..S K=0 F  S K=$O(GMRAING(K)) Q:'+K  S ^XTMP("GMRAOC",DFN,"API",K)=$$SETNODE^GMRAOR1($G(^XTMP("GMRAOC",DFN,"API",K)),"REMOTE SITE(S)")
"RTN","GMRAOR",150,0)
 ..S K="" F  S K=$O(GMRADC(K)) Q:K=""  S ^XTMP("GMRAOC",DFN,"APC",K)=$$SETNODE^GMRAOR1($G(^XTMP("GMRAOC",DFN,"APC",K)),"REMOTE SITE(S)")
"RTN","GMRAOR",151,0)
 I $D(^XTMP("GMRAOC",DFN,"API")) D
"RTN","GMRAOR",152,0)
 .N I,INGLST
"RTN","GMRAOR",153,0)
 .S I=0 F  S I=$O(^XTMP("GMRAOC",DFN,"API",I)) Q:'I  D
"RTN","GMRAOR",154,0)
 ..N PRIM
"RTN","GMRAOR",155,0)
 ..S PRIM=$$PRIMARY(I)
"RTN","GMRAOR",156,0)
 ..I PRIM S INGLST(PRIM)=^XTMP("GMRAOC",DFN,"API",I) K ^XTMP("GMRAOC",DFN,"API",I)
"RTN","GMRAOR",157,0)
 .S I=0 F  S I=$O(INGLST(I)) Q:'I  S ^XTMP("GMRAOC",DFN,"API",I)=INGLST(I)
"RTN","GMRAOR",158,0)
 Q
"RTN","GMRAOR",159,0)
 ;
"RTN","GMRAOR",160,0)
FIND(REACT,ING,DC) ;If reactant didn't include drug classes and/or ingredients, try and find them locally.  Section added in patch 26
"RTN","GMRAOR",161,0)
 N VUID,FILE,PSNDA,GMRAIEN,LIST,GMRAI,GMRALIST,GMRARAY,J,SUB,FLAG
"RTN","GMRAOR",162,0)
 S FLAG=0
"RTN","GMRAOR",163,0)
 S VUID=$P(REACT,U)
"RTN","GMRAOR",164,0)
 S FILE=$P(REACT,U,3)
"RTN","GMRAOR",165,0)
 S FILE=$P(FILE,"99VA",2)
"RTN","GMRAOR",166,0)
 D GETIREF^XTID(,,VUID,"GMRARAY")
"RTN","GMRAOR",167,0)
 S FILE="" F  S FILE=$O(GMRARAY(FILE)) Q:FILE=""  D
"RTN","GMRAOR",168,0)
 .S GMRAIEN=0 F  S GMRAIEN=$O(GMRARAY(FILE,.01,GMRAIEN)) Q:'+GMRAIEN  D
"RTN","GMRAOR",169,0)
 ..I FILE=50.6 D
"RTN","GMRAOR",170,0)
 ...K ^TMP("PSN",$J) S PSNDA=+GMRAIEN D ^PSNNGR
"RTN","GMRAOR",171,0)
 ...S GMRAI=0 F  S GMRAI=$O(^TMP("PSN",$J,GMRAI)) Q:GMRAI<1  S ING(GMRAI)=""
"RTN","GMRAOR",172,0)
 ...K ^TMP("PSN",$J),GMRARAY
"RTN","GMRAOR",173,0)
 ...S PSNDA=+GMRAIEN,GMRALIST=$$CLIST^PSNAPIS(PSNDA,.GMRALIST) Q:'$G(GMRALIST)
"RTN","GMRAOR",174,0)
 ...S GMRALIST=0 F  S GMRALIST=$O(GMRALIST(GMRALIST)) Q:'GMRALIST  S DC($P(GMRALIST(GMRALIST),U,2))=""
"RTN","GMRAOR",175,0)
 ..I FILE=120.82 D
"RTN","GMRAOR",176,0)
 ...S SUB=0 F  S SUB=$O(^GMRD(120.82,+GMRAIEN,"ING",SUB)) Q:'+SUB  S ING(+$P($G(^GMRD(120.82,+GMRAIEN,"ING",SUB,0)),U))="" ;record ingredients
"RTN","GMRAOR",177,0)
 ...S SUB=0 F  S SUB=$O(^GMRD(120.82,+GMRAIEN,"CLASS",SUB)) Q:'+SUB  S DC($P($$CLASS2^PSNAPIS(+$P($G(^GMRD(120.82,+GMRAIEN,"CLASS",SUB,0)),U)),U))="" ;Get drug classes
"RTN","GMRAOR",178,0)
 ..I FILE=50.605 D
"RTN","GMRAOR",179,0)
 ...S DC($P($$CLASS2^PSNAPIS(+GMRAIEN),U))=""
"RTN","GMRAOR",180,0)
 ..I FILE=50.416 D
"RTN","GMRAOR",181,0)
 ...S ING(+GMRAIEN)=""
"RTN","GMRAOR",182,0)
 Q
"RTN","GMRAOR",183,0)
PRIMARY(INGIEN) ;check if INGIEN is a primary ingredient
"RTN","GMRAOR",184,0)
 ;returns 0 if INGIEN is primary
"RTN","GMRAOR",185,0)
 ;returns the IEN of INGIEN's primary ingredient if INGIEN is not primary
"RTN","GMRAOR",186,0)
 N RETURN
"RTN","GMRAOR",187,0)
 K ^TMP($J,"GMRALIST")
"RTN","GMRAOR",188,0)
 D ZERO^PSN50P41(INGIEN,,,"GMRALIST")
"RTN","GMRAOR",189,0)
 S RETURN=+$G(^TMP($J,"GMRALIST",INGIEN,2))
"RTN","GMRAOR",190,0)
 Q RETURN
"VER")
8.0^22.0
"BLD",7271,6)
^40
**END**
**END**
