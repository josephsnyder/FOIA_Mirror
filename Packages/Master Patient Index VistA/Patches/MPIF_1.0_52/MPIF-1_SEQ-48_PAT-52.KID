EMERGENCY Released MPIF*1*52 SEQ #48
Extracted from mail message
**KIDS**:MPIF*1.0*52^

**INSTALL NAME**
MPIF*1.0*52
"BLD",2624,0)
MPIF*1.0*52^MASTER PATIENT INDEX VISTA^0^3091028^y
"BLD",2624,1,0)
^^4^4^3081026^
"BLD",2624,1,1,0)
 
"BLD",2624,1,2,0)
IDENTITY HUB CHANGES FOR MPI VISTA
"BLD",2624,1,3,0)
Refer to patch MPIF*1*52 in the FORUM Patch Module for a complete
"BLD",2624,1,4,0)
description.
"BLD",2624,4,0)
^9.64PA^^
"BLD",2624,6.3)
7
"BLD",2624,"ABNS",0)
^9.66A^^
"BLD",2624,"ABPKG")
n^y^G.CIRN DEV@DEVCRN.FO-ALBANY.MED.VA.GOV
"BLD",2624,"KRN",0)
^9.67PA^8989.52^19
"BLD",2624,"KRN",.4,0)
.4
"BLD",2624,"KRN",.401,0)
.401
"BLD",2624,"KRN",.402,0)
.402
"BLD",2624,"KRN",.403,0)
.403
"BLD",2624,"KRN",.5,0)
.5
"BLD",2624,"KRN",.84,0)
.84
"BLD",2624,"KRN",3.6,0)
3.6
"BLD",2624,"KRN",3.8,0)
3.8
"BLD",2624,"KRN",9.2,0)
9.2
"BLD",2624,"KRN",9.8,0)
9.8
"BLD",2624,"KRN",9.8,"NM",0)
^9.68A^10^10
"BLD",2624,"KRN",9.8,"NM",1,0)
MPIFDNL^^0^B17887652
"BLD",2624,"KRN",9.8,"NM",2,0)
MPIFBT3^^0^B15393291
"BLD",2624,"KRN",9.8,"NM",3,0)
MPIFQ0^^0^B71703643
"BLD",2624,"KRN",9.8,"NM",4,0)
MPIFSA2^^0^B80384646
"BLD",2624,"KRN",9.8,"NM",5,0)
MPIFSA3^^0^B27819479
"BLD",2624,"KRN",9.8,"NM",6,0)
MPIFSAQ^^0^B24115575
"BLD",2624,"KRN",9.8,"NM",7,0)
MPIFVTQ^^0^B42786955
"BLD",2624,"KRN",9.8,"NM",8,0)
MPIF002^^0^B18349548
"BLD",2624,"KRN",9.8,"NM",9,0)
MPIFRES^^0^B25044617
"BLD",2624,"KRN",9.8,"NM",10,0)
MPIFA24^^0^B22867722
"BLD",2624,"KRN",9.8,"NM","B","MPIF002",8)

"BLD",2624,"KRN",9.8,"NM","B","MPIFA24",10)

"BLD",2624,"KRN",9.8,"NM","B","MPIFBT3",2)

"BLD",2624,"KRN",9.8,"NM","B","MPIFDNL",1)

"BLD",2624,"KRN",9.8,"NM","B","MPIFQ0",3)

"BLD",2624,"KRN",9.8,"NM","B","MPIFRES",9)

"BLD",2624,"KRN",9.8,"NM","B","MPIFSA2",4)

"BLD",2624,"KRN",9.8,"NM","B","MPIFSA3",5)

"BLD",2624,"KRN",9.8,"NM","B","MPIFSAQ",6)

"BLD",2624,"KRN",9.8,"NM","B","MPIFVTQ",7)

"BLD",2624,"KRN",19,0)
19
"BLD",2624,"KRN",19,"NM",0)
^9.68A^13^13
"BLD",2624,"KRN",19,"NM",1,0)
MPIF CMOR REQUEST AUTO JOB^^1^
"BLD",2624,"KRN",19,"NM",2,0)
MPIF BATCH REVIEW^^1^
"BLD",2624,"KRN",19,"NM",3,0)
MPIF CMOR MGR^^1^
"BLD",2624,"KRN",19,"NM",4,0)
MPIF NEW REQUEST^^1^
"BLD",2624,"KRN",19,"NM",5,0)
MPIF VIEW REQUEST^^1^
"BLD",2624,"KRN",19,"NM",6,0)
MPIF EDIT REQUEST^^1^
"BLD",2624,"KRN",19,"NM",7,0)
MPIF PUSH CMOR^^1^
"BLD",2624,"KRN",19,"NM",8,0)
MPIF APPROVED REPORT^^1^
"BLD",2624,"KRN",19,"NM",9,0)
MPIF DISAPPROVE REPORT^^1^
"BLD",2624,"KRN",19,"NM",10,0)
MPIF RECEIVED REQUESTS^^1^
"BLD",2624,"KRN",19,"NM",11,0)
MPIF SENT REQUESTS^^1^
"BLD",2624,"KRN",19,"NM",12,0)
MPIF REVIEW REQUEST^^1^
"BLD",2624,"KRN",19,"NM",13,0)
MPIF SITE PARAMETER^^1^
"BLD",2624,"KRN",19,"NM","B","MPIF APPROVED REPORT",8)

"BLD",2624,"KRN",19,"NM","B","MPIF BATCH REVIEW",2)

"BLD",2624,"KRN",19,"NM","B","MPIF CMOR MGR",3)

"BLD",2624,"KRN",19,"NM","B","MPIF CMOR REQUEST AUTO JOB",1)

"BLD",2624,"KRN",19,"NM","B","MPIF DISAPPROVE REPORT",9)

"BLD",2624,"KRN",19,"NM","B","MPIF EDIT REQUEST",6)

"BLD",2624,"KRN",19,"NM","B","MPIF NEW REQUEST",4)

"BLD",2624,"KRN",19,"NM","B","MPIF PUSH CMOR",7)

"BLD",2624,"KRN",19,"NM","B","MPIF RECEIVED REQUESTS",10)

"BLD",2624,"KRN",19,"NM","B","MPIF REVIEW REQUEST",12)

"BLD",2624,"KRN",19,"NM","B","MPIF SENT REQUESTS",11)

"BLD",2624,"KRN",19,"NM","B","MPIF SITE PARAMETER",13)

"BLD",2624,"KRN",19,"NM","B","MPIF VIEW REQUEST",5)

"BLD",2624,"KRN",19.1,0)
19.1
"BLD",2624,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",2624,"KRN",101,0)
101
"BLD",2624,"KRN",409.61,0)
409.61
"BLD",2624,"KRN",771,0)
771
"BLD",2624,"KRN",870,0)
870
"BLD",2624,"KRN",8989.51,0)
8989.51
"BLD",2624,"KRN",8989.52,0)
8989.52
"BLD",2624,"KRN",8994,0)
8994
"BLD",2624,"KRN",8994,"NM",0)
^9.68A^2^2
"BLD",2624,"KRN",8994,"NM",1,0)
MPIF EDAT REMOTE^^0
"BLD",2624,"KRN",8994,"NM",2,0)
MPIF DNL ADD UPD^^0
"BLD",2624,"KRN",8994,"NM","B","MPIF DNL ADD UPD",2)

"BLD",2624,"KRN",8994,"NM","B","MPIF EDAT REMOTE",1)

"BLD",2624,"KRN","B",.4,.4)

"BLD",2624,"KRN","B",.401,.401)

"BLD",2624,"KRN","B",.402,.402)

"BLD",2624,"KRN","B",.403,.403)

"BLD",2624,"KRN","B",.5,.5)

"BLD",2624,"KRN","B",.84,.84)

"BLD",2624,"KRN","B",3.6,3.6)

"BLD",2624,"KRN","B",3.8,3.8)

"BLD",2624,"KRN","B",9.2,9.2)

"BLD",2624,"KRN","B",9.8,9.8)

"BLD",2624,"KRN","B",19,19)

"BLD",2624,"KRN","B",19.1,19.1)

"BLD",2624,"KRN","B",101,101)

"BLD",2624,"KRN","B",409.61,409.61)

"BLD",2624,"KRN","B",771,771)

"BLD",2624,"KRN","B",870,870)

"BLD",2624,"KRN","B",8989.51,8989.51)

"BLD",2624,"KRN","B",8989.52,8989.52)

"BLD",2624,"KRN","B",8994,8994)

"BLD",2624,"QDEF")
^^^^^^^^YES^^YES
"BLD",2624,"QUES",0)
^9.62^^
"BLD",2624,"REQB",0)
^9.611^5^5
"BLD",2624,"REQB",1,0)
MPIF*1.0*35^2
"BLD",2624,"REQB",2,0)
MPIF*1.0*43^2
"BLD",2624,"REQB",3,0)
MPIF*1.0*39^2
"BLD",2624,"REQB",4,0)
XT*7.3*113^2
"BLD",2624,"REQB",5,0)
MPIF*1.0*48^2
"BLD",2624,"REQB","B","MPIF*1.0*35",1)

"BLD",2624,"REQB","B","MPIF*1.0*39",3)

"BLD",2624,"REQB","B","MPIF*1.0*43",2)

"BLD",2624,"REQB","B","MPIF*1.0*48",5)

"BLD",2624,"REQB","B","XT*7.3*113",4)

"KRN",19,7216,-1)
1^1
"KRN",19,7216,0)
MPIF CMOR REQUEST AUTO JOB
"KRN",19,7217,-1)
1^2
"KRN",19,7217,0)
MPIF BATCH REVIEW
"KRN",19,7218,-1)
1^3
"KRN",19,7218,0)
MPIF CMOR MGR
"KRN",19,7219,-1)
1^4
"KRN",19,7219,0)
MPIF NEW REQUEST
"KRN",19,7220,-1)
1^5
"KRN",19,7220,0)
MPIF VIEW REQUEST
"KRN",19,7221,-1)
1^6
"KRN",19,7221,0)
MPIF EDIT REQUEST
"KRN",19,7222,-1)
1^7
"KRN",19,7222,0)
MPIF PUSH CMOR
"KRN",19,7223,-1)
1^8
"KRN",19,7223,0)
MPIF APPROVED REPORT
"KRN",19,7224,-1)
1^9
"KRN",19,7224,0)
MPIF DISAPPROVE REPORT
"KRN",19,7225,-1)
1^10
"KRN",19,7225,0)
MPIF RECEIVED REQUESTS
"KRN",19,7226,-1)
1^11
"KRN",19,7226,0)
MPIF SENT REQUESTS
"KRN",19,7227,-1)
1^12
"KRN",19,7227,0)
MPIF REVIEW REQUEST
"KRN",19,7228,-1)
1^13
"KRN",19,7228,0)
MPIF SITE PARAMETER
"KRN",8994,268,-1)
0^2
"KRN",8994,268,0)
MPIF DNL ADD UPD^DNLADD^MPIRPC^2^R^0^^^1^^1
"KRN",8994,268,1,0)
^8994.01^2^2^3080429^^^^
"KRN",8994,268,1,1,0)
This RPC has been established to allow the remote creation of records 
"KRN",8994,268,1,2,0)
into the MPI DO NOT LINK (#985.26) file.
"KRN",8994,268,2,0)
^8994.02A^12^6
"KRN",8994,268,2,1,0)
SOURCEID^1^50^1^1
"KRN",8994,268,2,1,1,0)
^8994.021^4^4^3080428^^^
"KRN",8994,268,2,1,1,1,0)
The field is the ID of the record you want to add to the DO NOT LINK list.
"KRN",8994,268,2,1,1,2,0)
The field format will be the fully qualified SourceID:
"KRN",8994,268,2,1,1,3,0)
  SourceID~AssigningLocation~AssigningAuthority~SourceType
"KRN",8994,268,2,1,1,4,0)
 For example: 123~500~USVHA~PI
"KRN",8994,268,2,2,0)
DNLSOURCEID^1^50^1^2
"KRN",8994,268,2,2,1,0)
^^5^5^3080428^
"KRN",8994,268,2,2,1,1,0)
The field contains the corresponding ID of the record you want to add to
"KRN",8994,268,2,2,1,2,0)
the DO NOT LINK list.  The field format will be the fully qualified
"KRN",8994,268,2,2,1,3,0)
SourceID:
"KRN",8994,268,2,2,1,4,0)
 SourceID~AssigningLocation~AssigningAuthority~SourceType
"KRN",8994,268,2,2,1,5,0)
  For example: 123~500~USVHA~PI
"KRN",8994,268,2,3,0)
DNLIDENTIFIEDBY^1^60^1^5
"KRN",8994,268,2,3,1,0)
^^1^1^3080428^
"KRN",8994,268,2,3,1,1,0)
This is the person that identified the DO NOT LINK record.
"KRN",8994,268,2,4,0)
DNLEVENT^1^30^1^3
"KRN",8994,268,2,4,1,0)
^^3^3^3080428^
"KRN",8994,268,2,4,1,1,0)
This is the event that triggered this entry to get created.  The events 
"KRN",8994,268,2,4,1,2,0)
are MPI Resolve Mismatch, User input, TOOLKIT Resolve Duplicate, and
"KRN",8994,268,2,4,1,3,0)
KERNEL VERIFIED NOT A DUPLICATE.
"KRN",8994,268,2,5,0)
DNLSOURCEID^1^50^1^2
"KRN",8994,268,2,5,1,0)
^8994.021^5^5^3080428^^
"KRN",8994,268,2,5,1,1,0)
The field contains the corresponding ID of the record you want to add to
"KRN",8994,268,2,5,1,2,0)
the DO NOT LINK list.  The field format will be the fully qualified
"KRN",8994,268,2,5,1,3,0)
SourceID:
"KRN",8994,268,2,5,1,4,0)
SourceID~AssigningLocation~AssigningAuthority~SourceType
"KRN",8994,268,2,5,1,5,0)
 For example: 123~500~USVHA~PI
"KRN",8994,268,2,6,0)
INACT^1^1^^6
"KRN",8994,268,2,6,1,0)
^8994.021^3^3^3081003^^
"KRN",8994,268,2,6,1,1,0)
This field will be used to pass whether the user/application wants the 
"KRN",8994,268,2,6,1,2,0)
pair to be inactivated.  If you want the pair to be inactivated pass a Y
"KRN",8994,268,2,6,1,3,0)
for yes, otherwise leave blank.
"KRN",8994,268,2,9,0)
DNLIDENTIFIEDBY^1^60^1^5
"KRN",8994,268,2,9,1,0)
^8994.021^1^1^3080428^^
"KRN",8994,268,2,9,1,1,0)
This is the person that identified the DO NOT LINK record.
"KRN",8994,268,2,10,0)
DNLEVENT^1^30^1^3
"KRN",8994,268,2,10,1,0)
^8994.021^3^3^3080428^^
"KRN",8994,268,2,10,1,1,0)
This is the event that triggered this entry to get created.  The events 
"KRN",8994,268,2,10,1,2,0)
are MPI Resolve Mismatch, User input, TOOLKIT Resolve Duplicate, 
"KRN",8994,268,2,10,1,3,0)
and KERNEL VERIFIED NOT A DUPLICATE.
"KRN",8994,268,2,11,0)
DNLIDENTIFYINGLOCATION^1^5^1^4
"KRN",8994,268,2,11,1,0)
^8994.021^2^2^3080428^^^
"KRN",8994,268,2,11,1,1,0)
This field contains the station# of the person that identified/triggered 
"KRN",8994,268,2,11,1,2,0)
the DO NOT LINK request to be added.
"KRN",8994,268,2,12,0)
INACT^1^1^^6
"KRN",8994,268,2,12,1,0)
^8994.021^3^3^3080429^^^^
"KRN",8994,268,2,12,1,1,0)
This field will be used to pass whether the user/application wants the pair
"KRN",8994,268,2,12,1,2,0)
to be inactivated.  If you want the pair to be inactivated pass a Y for
"KRN",8994,268,2,12,1,3,0)
yes, otherwise leave blank.
"KRN",8994,268,2,"B","DNLEVENT",4)

"KRN",8994,268,2,"B","DNLEVENT",10)

"KRN",8994,268,2,"B","DNLIDENTIFIEDBY",3)

"KRN",8994,268,2,"B","DNLIDENTIFIEDBY",9)

"KRN",8994,268,2,"B","DNLIDENTIFYINGLOCATION",5)

"KRN",8994,268,2,"B","DNLIDENTIFYINGLOCATION",11)

"KRN",8994,268,2,"B","DNLSOURCEID",2)

"KRN",8994,268,2,"B","DNLSOURCEID",5)

"KRN",8994,268,2,"B","INACT",6)

"KRN",8994,268,2,"B","INACT",12)

"KRN",8994,268,2,"B","SOURCEID",1)

"KRN",8994,268,2,"PARAMSEQ",1,1)

"KRN",8994,268,2,"PARAMSEQ",2,2)

"KRN",8994,268,2,"PARAMSEQ",2,5)

"KRN",8994,268,2,"PARAMSEQ",3,4)

"KRN",8994,268,2,"PARAMSEQ",3,10)

"KRN",8994,268,2,"PARAMSEQ",4,5)

"KRN",8994,268,2,"PARAMSEQ",4,11)

"KRN",8994,268,2,"PARAMSEQ",5,3)

"KRN",8994,268,2,"PARAMSEQ",5,9)

"KRN",8994,268,2,"PARAMSEQ",6,6)

"KRN",8994,268,2,"PARAMSEQ",6,12)

"KRN",8994,268,3,0)
^^11^11^3081006^
"KRN",8994,268,3,1,0)
This RPC will return a positive (1) or negative response (-1) in 
"KRN",8994,268,3,2,0)
RETURN(1), in the following format: result^text result
"KRN",8994,268,3,3,0)
 
"KRN",8994,268,3,4,0)
Example output:
"KRN",8994,268,3,5,0)
   -1^Missing SourceID passed, missing ID"
"KRN",8994,268,3,6,0)
   -1^Missing SourceID passed, missing Assigning Location
"KRN",8994,268,3,7,0)
   -1^Missing SourceID passed, missing Assigning Authority
"KRN",8994,268,3,8,0)
   -1^Missing SourceID passed, missing Id Type
"KRN",8994,268,3,9,0)
   -1^error text
"KRN",8994,268,3,10,0)
      or
"KRN",8994,268,3,11,0)
    1^SUCCESSFUL
"KRN",8994,270,-1)
0^1
"KRN",8994,270,0)
MPIF EDAT REMOTE^MPIEDAT^MPIRPC^2^P^^^^1
"KRN",8994,270,1,0)
^^2^2^3080620^
"KRN",8994,270,1,1,0)
MPI Extended Patient data inquiry for Display Only Query. ICN needs to be 
"KRN",8994,270,1,2,0)
passed in.
"KRN",8994,270,2,0)
^8994.02A^1^1
"KRN",8994,270,2,1,0)
ICN^1^16^1^1
"KRN",8994,270,2,1,1,0)
^^1^1^3080620^
"KRN",8994,270,2,1,1,1,0)
ICN for patient requesting data on.
"KRN",8994,270,2,"B","ICN",1)

"KRN",8994,270,2,"PARAMSEQ",1,1)

"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",282,-1)
1^1
"PKG",282,0)
MASTER PATIENT INDEX VISTA^MPIF^Master Patient Index VistA side
"PKG",282,20,0)
^9.402P^^
"PKG",282,22,0)
^9.49I^1^1
"PKG",282,22,1,0)
1.0^2990428
"PKG",282,22,1,"PAH",1,0)
52^3091028
"PKG",282,22,1,"PAH",1,1,0)
^^4^4^3091028
"PKG",282,22,1,"PAH",1,1,1,0)
 
"PKG",282,22,1,"PAH",1,1,2,0)
IDENTITY HUB CHANGES FOR MPI VISTA
"PKG",282,22,1,"PAH",1,1,3,0)
Refer to patch MPIF*1*52 in the FORUM Patch Module for a complete
"PKG",282,22,1,"PAH",1,1,4,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
10
"RTN","MPIF002")
0^8^B18349548^B28350773
"RTN","MPIF002",1,0)
MPIF002 ;CIOFOSF/CMC-UTILITY ROUTINE OF APIS ;JUL 12, 1996
"RTN","MPIF002",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**20,27,33,43,52**;30 Apr 99;Build 7
"RTN","MPIF002",3,0)
 ;
"RTN","MPIF002",4,0)
 ;Integration Agreements Utilized:
"RTN","MPIF002",5,0)
 ;  ^DPT( - #2070
"RTN","MPIF002",6,0)
 ;
"RTN","MPIF002",7,0)
GETICNH(DFN,ICNHA) ;Return all ICNs (including checksum) in ICN History for patient DFN
"RTN","MPIF002",8,0)
 ; DFN = IEN of patient in the Patient (#2) file
"RTN","MPIF002",9,0)
 ; ICNHA - array where ICN History will be returned.
"RTN","MPIF002",10,0)
 N IEN,ICN,CNT,RET
"RTN","MPIF002",11,0)
 I '$D(^DPT(DFN)) S ICNHA="-1^NO SUCH DFN" Q
"RTN","MPIF002",12,0)
 I '$D(^DPT(DFN,"MPIFHIS")) S ICNHA="-1^NO ICN HISTORY" Q
"RTN","MPIF002",13,0)
 S (IEN,CNT)=0,RET=""
"RTN","MPIF002",14,0)
 F  S IEN=$O(^DPT(DFN,"MPIFHIS",IEN)) Q:IEN=""  D
"RTN","MPIF002",15,0)
 .S ICN=$P($G(^DPT(DFN,"MPIFHIS",IEN,0)),"^")_"V"_$P($G(^DPT(DFN,"MPIFHIS",IEN,0)),"^",2)
"RTN","MPIF002",16,0)
 .I ICN'="" S CNT=CNT+1,ICNHA(CNT)=""""_ICN_""""
"RTN","MPIF002",17,0)
 I CNT=0 S ICNHA="-1^NO ICN HISTORY" Q
"RTN","MPIF002",18,0)
 S ICNHA=CNT
"RTN","MPIF002",19,0)
 Q
"RTN","MPIF002",20,0)
GETCMORH(DFN,CMORHA) ;Return all CMORs in CMOR History for patient DFN
"RTN","MPIF002",21,0)
 ; DFN = IEN of patient in the Patient (#2) file
"RTN","MPIF002",22,0)
 ; CMORHA - array where CMOR history will be returned
"RTN","MPIF002",23,0)
 N IEN,CMOR,CNT,RET
"RTN","MPIF002",24,0)
 I '$D(^DPT(DFN)) S CMORHA="-1^NO SUCH DFN" Q
"RTN","MPIF002",25,0)
 I '$D(^DPT(DFN,"MPICMOR")) S CMORHA="-1^NO CMOR HISTORY" Q
"RTN","MPIF002",26,0)
 S (IEN,CNT)=0,RET=""
"RTN","MPIF002",27,0)
 F  S IEN=$O(^DPT(DFN,"MPICMOR",IEN)) Q:IEN=""  D
"RTN","MPIF002",28,0)
 .S CMOR=$P($G(^DPT(DFN,"MPICMOR",IEN,0)),"^")
"RTN","MPIF002",29,0)
 .I CMOR'="" S CMOR=$P($$NNT^XUAF4(CMOR),"^",2)
"RTN","MPIF002",30,0)
 .I CMOR'="" S CNT=CNT+1,CMORHA(CNT)=""""_CMOR_""""
"RTN","MPIF002",31,0)
 I CNT=0 S CMORHA="-1^NO CMOR HISTORY" Q
"RTN","MPIF002",32,0)
 S CMORHA=CNT
"RTN","MPIF002",33,0)
 Q
"RTN","MPIF002",34,0)
GETDFNS(SSN) ; Find DFN for a given SSN - all if there are more than one
"RTN","MPIF002",35,0)
 ; SSN - SSN for patient attempted to be found in the Patient file (#2)
"RTN","MPIF002",36,0)
 ; Return - list of DFNs or -1^error msg
"RTN","MPIF002",37,0)
 N DFN,LIST,CNT,NODE
"RTN","MPIF002",38,0)
 I '$D(^DPT("SSN",SSN)) Q "-1^No such SSN"
"RTN","MPIF002",39,0)
 S (DFN,LIST)="",CNT=0
"RTN","MPIF002",40,0)
 F  S DFN=$O(^DPT("SSN",SSN,DFN)) Q:DFN=""  D
"RTN","MPIF002",41,0)
 .I $D(^DPT(DFN)) D
"RTN","MPIF002",42,0)
 ..S LIST=LIST_DFN_"^",CNT=CNT+1
"RTN","MPIF002",43,0)
 ..S NODE=$$MPINODE^MPIFAPI(DFN),ICN=$P($G(^DPT(DFN,"MPI")),"^")
"RTN","MPIF002",44,0)
 ..I ICN'="",'$D(^DPT("AICN",ICN,DFN)) S ^DPT("AICN",ICN,DFN)=""
"RTN","MPIF002",45,0)
 ..; check if missing AICN x-ref and set if missing
"RTN","MPIF002",46,0)
 I CNT=0 Q "-1^No such SSN"
"RTN","MPIF002",47,0)
 Q LIST
"RTN","MPIF002",48,0)
GETICNS(SSN) ; Find all ICNs for a given SSN -- all if there are more than one
"RTN","MPIF002",49,0)
 ; patient with that SSN
"RTN","MPIF002",50,0)
 ; SSN - SSN for patient attempted to be found in the Patient file (#2)
"RTN","MPIF002",51,0)
 ; Returned is a list of ICNs for this SSN
"RTN","MPIF002",52,0)
 N XX,DFNS,DFN,LIST,ICN,NODE
"RTN","MPIF002",53,0)
 S LIST=""
"RTN","MPIF002",54,0)
 I $G(SSN)'="" S DFNS=$$GETDFNS(SSN)
"RTN","MPIF002",55,0)
 I +DFNS=-1 Q DFNS
"RTN","MPIF002",56,0)
 F XX=1:1 S DFN=$P(DFNS,"^",XX) Q:DFN=""  D
"RTN","MPIF002",57,0)
 .S ICN=$$GETICN^MPIF001(DFN)
"RTN","MPIF002",58,0)
 .I +ICN>0 S LIST=LIST_ICN_"^"
"RTN","MPIF002",59,0)
 .I +ICN<0 S NODE=$$MPINODE^MPIFAPI(DFN),ICN=$P(NODE,"^") I ICN'="",'$D(^DPT("AICN",ICN,DFN)) S ^DPT("AICN",ICN,DFN)=""
"RTN","MPIF002",60,0)
 Q LIST
"RTN","MPIF002",61,0)
TWODFNS(DFN1,DFN2,ICN) ;Logging Exceptions when there are two DFNs trying to have the same ICN, which isn't allowed.
"RTN","MPIF002",62,0)
 N ARR1,ARR2,NAME1,NAME2,SSN1,SSN2,TEXT
"RTN","MPIF002",63,0)
 I $G(DFN1)=""!($G(DFN2)="") Q
"RTN","MPIF002",64,0)
 I '$D(^DPT(DFN1))!('$D(^DPT(DFN2))) Q
"RTN","MPIF002",65,0)
 D GETDATA^MPIFQ0("^DPT(",DFN1,"MPIFD1",".01;.09","EI")
"RTN","MPIF002",66,0)
 S NAME1=$G(MPIFD1(2,DFN1,.01,"E")),SSN1=$G(MPIFD1(2,DFN1,.09,"E"))
"RTN","MPIF002",67,0)
 D GETDATA^MPIFQ0("^DPT(",DFN2,"MPIFD2",".01;.09","EI")
"RTN","MPIF002",68,0)
 S NAME2=$G(MPIFD2(2,DFN2,.01,"E")),SSN2=$G(MPIFD2(2,DFN2,.09,"E"))
"RTN","MPIF002",69,0)
 D ADD^XDRDADDS(.XDRSLT1,2,DFN1,DFN2)
"RTN","MPIF002",70,0)
 ;** 52 replace CIRN exception logging and notification with the creation of Local POTENTIAL DUP MERGE with status of UNVERIFIED
"RTN","MPIF002",71,0)
 K MPIFD1,MPIFD2
"RTN","MPIF002",72,0)
 Q
"RTN","MPIF002",73,0)
CLEAN(DFN,ARR,MPIRETN) ; clean up MPI data from DPT for "stub" records
"RTN","MPIF002",74,0)
 ; called from UPDATE^MPIFAPI
"RTN","MPIF002",75,0)
 N ICN,CMOR
"RTN","MPIF002",76,0)
 S ICN=+$$GETICN^MPIF001(DFN),CMOR=$$SITE^VASITE()
"RTN","MPIF002",77,0)
 I +ICN<0 S MPIRETN="-1^PT HAS NO ICN" Q
"RTN","MPIF002",78,0)
 I $E(ICN,1,3)'=$P(CMOR,"^",3) S MPIRETN="-1^not a local ICN not cleaned up" Q
"RTN","MPIF002",79,0)
 S CMOR=$P(CMOR,"^",1)
"RTN","MPIF002",80,0)
 S ^DPT(DFN,"MPI")=""
"RTN","MPIF002",81,0)
 K ^DPT("AICNL",1,ICN),^DPT("AICN",ICN),^DPT("ACMOR",CMOR,DFN)
"RTN","MPIF002",82,0)
 S MPIRETN=0
"RTN","MPIF002",83,0)
 Q
"RTN","MPIF002",84,0)
 ;**43 COMPARE AND MIMDQ ADDED in patch 43
"RTN","MPIF002",85,0)
COMPARE(DFN,INDEX,COMMON,MORE) ; Checking if TFs in common between CURRENT PT (DFN)
"RTN","MPIF002",86,0)
 ; and ^TMP("MPIFVQQ",$J,INDEX,"TF",ien) OR if patient is shared to exclude those with TYPE of OTHER
"RTN","MPIF002",87,0)
 ; INDEX is the selection entry
"RTN","MPIF002",88,0)
 ; COMMON is the value returned indicating if there are TFs in common
"RTN","MPIF002",89,0)
 N ARR,IEN,ST,TYPE S (MORE,COMMON)=0
"RTN","MPIF002",90,0)
 D TFL^VAFCTFU1(.ARR,DFN)
"RTN","MPIF002",91,0)
 S IEN=0 F  S IEN=$O(ARR(IEN)) Q:IEN=""!(IEN="ST#")  S ARR("ST#",$P(ARR(IEN),"^"))=$$GET1^DIQ(4,$$IEN^XUAF4($P(ARR(IEN),"^"))_",",13,"E")
"RTN","MPIF002",92,0)
 S IEN=0 F  S IEN=$O(ARR("ST#",IEN)) Q:IEN=""  D
"RTN","MPIF002",93,0)
 .Q:IEN=$P($$SITE^VASITE(),"^",3)!(IEN=200)
"RTN","MPIF002",94,0)
 .I $G(ARR("ST#",IEN))'="OTHER" S MORE=1
"RTN","MPIF002",95,0)
 S IEN=0
"RTN","MPIF002",96,0)
 F  S IEN=$O(^TMP("MPIFVQQ",$J,INDEX,"TF",IEN)) Q:IEN=""!(COMMON)  D
"RTN","MPIF002",97,0)
 .S ST=$P(^TMP("MPIFVQQ",$J,INDEX,"TF",IEN),"^")
"RTN","MPIF002",98,0)
 .Q:ST=200
"RTN","MPIF002",99,0)
 .I $D(ARR("ST#",ST)) I $P($G(ARR("ST#",ST)),"^")'="OTHER" S COMMON=1
"RTN","MPIF002",100,0)
 Q
"RTN","MPIF002",101,0)
MIMDQ(ICN,ICN2,DFN,MSG) ; while reviewing potential duplicates, site picked to link 2 patients together with TFs in common
"RTN","MPIF002",102,0)
 ; send exception to IMDQ team
"RTN","MPIF002",103,0)
 D START^RGHLLOG()
"RTN","MPIF002",104,0)
 D EXC^RGHLLOG(208,MSG,DFN)
"RTN","MPIF002",105,0)
 D STOP^RGHLLOG()
"RTN","MPIF002",106,0)
 W !,"Unable to match these ICNs together as"_$P(MSG,"-",2)
"RTN","MPIF002",107,0)
 W !,"Exception has been sent to IMDQ team for assistance in resolving this",!,"MPI Duplicate. Local Exception has been automatically marked as processed."
"RTN","MPIF002",108,0)
 Q
"RTN","MPIF002",109,0)
 Q
"RTN","MPIFA24")
0^10^B22867722^B21971494
"RTN","MPIFA24",1,0)
MPIFA24 ;BPOFO/CMC-A24 PROCESSING ROUTINE ;18 Mar 02
"RTN","MPIFA24",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**22,24,27,31,25,41,39,48,52**;30 Apr 99;Build 7
"RTN","MPIFA24",3,0)
 ;
"RTN","MPIFA24",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFA24",5,0)
 ;  START, EXC, STOP^RGHLLOG - #2796
"RTN","MPIFA24",6,0)
 ;  BLDEVN, BLDPD1, BLDPID^VAFCQRY - #3630
"RTN","MPIFA24",7,0)
 ;  ^DPT("AICN" - #2070
"RTN","MPIFA24",8,0)
 ;  DELETETF^VAFCTFU, FILE^VAFCTFU - #2988
"RTN","MPIFA24",9,0)
 ;
"RTN","MPIFA24",10,0)
 ;PROCESS A24 RESULTING FROM A28 ADD TO MPI MESSAGE OR FROM A40 MERGE
"RTN","MPIFA24",11,0)
A24 ;
"RTN","MPIFA24",12,0)
 N MPII,MPIJ,ARRY,SEG,CNT,ERR,SITE,MSG,DFN,IEN,LIST,RARRY
"RTN","MPIFA24",13,0)
 S (CNT,ERR,FIRST)=1
"RTN","MPIFA24",14,0)
 F MPII=1:1 X HLNEXT Q:HLQUIT'>0  S MSG=HLNODE D
"RTN","MPIFA24",15,0)
 .S MPIJ=0 F  S MPIJ=$O(HLNODE(MPIJ)) Q:'MPIJ  S MSG(MPIJ)=HLNODE(MPIJ)
"RTN","MPIFA24",16,0)
 .S SEG=$E(HLNODE,1,3)
"RTN","MPIFA24",17,0)
 .I SEG="MSH" D MSH(.ARRY,.MSG) Q
"RTN","MPIFA24",18,0)
 .I SEG="EVN" D EVN(.ARRY,.MSG) Q
"RTN","MPIFA24",19,0)
 .I SEG="PID" D PID(.ARRY,.MSG,FIRST) D:FIRST=1  S FIRST=2 Q
"RTN","MPIFA24",20,0)
 ..;preserve the retained ICN values 991.01 and 991.02
"RTN","MPIFA24",21,0)
 .. S RARRY(991.01)=ARRY(991.01),RARRY(991.02)=ARRY(991.02)
"RTN","MPIFA24",22,0)
 .I SEG="PD1" D PD1(.ARRY,.MSG) Q
"RTN","MPIFA24",23,0)
 ;
"RTN","MPIFA24",24,0)
 ;restore the retained ICN values
"RTN","MPIFA24",25,0)
 S ARRY(991.01)=RARRY(991.01),ARRY(991.02)=RARRY(991.02)
"RTN","MPIFA24",26,0)
 ;UPDATE 991.01, 991.02, 991.03
"RTN","MPIFA24",27,0)
 ;**41 first check for DFN, if this DFN location is here
"RTN","MPIFA24",28,0)
 I $G(ARRY("DFN",2))'=""&($G(ARRY("DFNLOC"))=$P($$SITE^VASITE,"^",3)) S DFN=ARRY("DFN",2)
"RTN","MPIFA24",29,0)
 ;**41 if dfn is not passed set DFN from ICN
"RTN","MPIFA24",30,0)
 I $G(DFN)="" D
"RTN","MPIFA24",31,0)
 . I $G(ARRY("ICN",2))'="" S DFN=$$GETDFN^MPIF001(ARRY("ICN",2))
"RTN","MPIFA24",32,0)
 . I $G(ARRY("ICN",2))=""!(+$G(DFN)'>0) D
"RTN","MPIFA24",33,0)
 .. I $G(ARRY("DFN",2))'="" S DFN=ARRY("DFN",2)
"RTN","MPIFA24",34,0)
 .. I $G(ARRY("DFN",2))="" S DFN=ARRY("DFN",1)
"RTN","MPIFA24",35,0)
 S ARRY(991.03)=$$LKUP^XUAF4(ARRY(991.03))
"RTN","MPIFA24",36,0)
 I +$G(DFN)'>0 S ERR="-1^Unknown Identifier(s) ICN#"_$G(ARRY("ICN",2))_" and DFN#"_$G(ARRY("DFN",2))
"RTN","MPIFA24",37,0)
 I +$G(DFN)>0 S ERR=$$UPDATE^MPIFAPI(DFN,"ARRY",0) D
"RTN","MPIFA24",38,0)
 .;remove ALL Treating Facilities except your sites and add the CMOR
"RTN","MPIFA24",39,0)
 .D TFL^VAFCTFU1(.LIST,DFN) I $O(LIST(0)) D
"RTN","MPIFA24",40,0)
 .. N LOC,MPINODE,LOCIEN,CMOR,MPIFX,ERROR
"RTN","MPIFA24",41,0)
 .. S (CMOR,MPIFX)=0 F  S MPIFX=$O(LIST(MPIFX)) Q:'MPIFX  I $P(LIST(MPIFX),"^",5)="VAMC" D
"RTN","MPIFA24",42,0)
 ... ;get MPI node
"RTN","MPIFA24",43,0)
 ... S MPINODE=$$MPINODE^MPIFAPI(DFN),LOC=$P(LIST(MPIFX),"^"),LOCIEN=$$IEN^XUAF4(LOC)
"RTN","MPIFA24",44,0)
 ... I LOC=$P($$SITE^VASITE,"^",3) Q  ;do not delete own site
"RTN","MPIFA24",45,0)
 ... I LOCIEN=$P(MPINODE,"^",3) S CMOR=LOCIEN Q  ;do not delete CMOR site
"RTN","MPIFA24",46,0)
 ... S ERROR=$$DELETETF^VAFCTFU($P(MPINODE,"^",1),LOCIEN)
"RTN","MPIFA24",47,0)
 .. ;add CMOR site to TF list if it did not already exist
"RTN","MPIFA24",48,0)
 .. I CMOR'=0 D FILE^VAFCTFU(DFN,CMOR,1)
"RTN","MPIFA24",49,0)
 .; trigger A31 to MPI incase there have been edits since the ICN was created -- tasked off
"RTN","MPIFA24",50,0)
 .; **39 DON'T TASK OFF A31 IF MOVING FROM ONE NATIONAL ICN TO A DIFFERENT NATIONAL ICN
"RTN","MPIFA24",51,0)
 .I ARRY("ICN",1)=ARRY("ICN",2) D
"RTN","MPIFA24",52,0)
 ..S ZTRTN="TA31^MPIFA31B",ZTDESC="A31 triggered from A24 for DFN "_DFN ;**39 added DFN to text
"RTN","MPIFA24",53,0)
 ..S ZTSAVE("DFN")=DFN,ZTIO="",ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,0,0,1,0)
"RTN","MPIFA24",54,0)
 ..D ^%ZTLOAD
"RTN","MPIFA24",55,0)
 .I ARRY("ICN",1)'=ARRY("ICN",2) D RESEX^MPIFDUP(DFN,2) ;**48
"RTN","MPIFA24",56,0)
 .K ZTRTN,ZTDESC,ZTIO,ZTSAVE,ZTDTH,ZTREQ
"RTN","MPIFA24",57,0)
 ;
"RTN","MPIFA24",58,0)
 N AA S AA="AA"
"RTN","MPIFA24",59,0)
 I $G(ERR)'>0,$P($G(ERR),"^",2)["is already in use for pt DFN" S AA="AE" ;**52 MPIC_1681/1753
"RTN","MPIFA24",60,0)
 S HLA("HLA",1)="MSA"_HL("FS")_AA_HL("FS")_HL("MID")_HL("FS")_$S(+$G(ERR)'>0:$P(ERR,"^",2),1:"")
"RTN","MPIFA24",61,0)
 S $P(HLA("HLA",1),HL("FS"),7)="ICN="_ARRY("ICN",1)
"RTN","MPIFA24",62,0)
 D LINK^HLUTIL3(ARRY("SITE"),.LINK) S IEN=$O(LINK(0)),HLL("LINKS",1)="^"_LINK(IEN)
"RTN","MPIFA24",63,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.MPIFRSLT,"",.HL)
"RTN","MPIFA24",64,0)
 K LINK,MPIFRSLT
"RTN","MPIFA24",65,0)
 ;PATCH 25
"RTN","MPIFA24",66,0)
 I ARRY("ICN",1)'=ARRY("ICN",2),ARRY("ICN",2)'="" D
"RTN","MPIFA24",67,0)
 .; ^ checking if this is a result of a "merge" of ICNs from the MPI
"RTN","MPIFA24",68,0)
 .; to trigger if this is station 200 the MERGE for the FHIE Framework
"RTN","MPIFA24",69,0)
 .Q:$P($$SITE^VASITE,"^",3)'=200
"RTN","MPIFA24",70,0)
 .N FHIE S FHIE=$$MERGE^OMGPIDMI(ARRY("ICN",2),ARRY("ICN",1))
"RTN","MPIFA24",71,0)
 .;       ^^ THIS API IS ONLY AVAILABLE ON THE FHIE HOST SYSTEM
"RTN","MPIFA24",72,0)
 .I +FHIE=-1 D START^RGHLLOG(),EXC^RGHLLOG(208,$P(FHIE,"^",2),DFN),STOP^RGHLLOG()
"RTN","MPIFA24",73,0)
 Q
"RTN","MPIFA24",74,0)
 ;
"RTN","MPIFA24",75,0)
MSH(ARY,MSG) ;processing MSH fields
"RTN","MPIFA24",76,0)
 N COMP
"RTN","MPIFA24",77,0)
 S COMP=$E(HL("ECH"),1)
"RTN","MPIFA24",78,0)
 S ARY("SITE")=$$LKUP^XUAF4($P($P(MSG,HL("FS"),4),COMP))
"RTN","MPIFA24",79,0)
 Q
"RTN","MPIFA24",80,0)
 ;
"RTN","MPIFA24",81,0)
EVN(ARY,MSG) ;processing EVN fields
"RTN","MPIFA24",82,0)
 S ARY("EVTR")=$P(MSG,HL("FS"),2) ;not currently used
"RTN","MPIFA24",83,0)
 S ARY("DLT")=$$FMDATE^HLFNC($P(MSG,HL("FS"),3))
"RTN","MPIFA24",84,0)
 Q
"RTN","MPIFA24",85,0)
 ;
"RTN","MPIFA24",86,0)
PID(ARY,MSG,FIRST) ;processing PID fields
"RTN","MPIFA24",87,0)
 N REP,PID,COMP,SUBCOMP,MPIDFN,MPISSN,ICN
"RTN","MPIFA24",88,0)
 S REP=$E(HL("ECH"),2),COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4)
"RTN","MPIFA24",89,0)
 S MPISSN="",MPIDFN=""
"RTN","MPIFA24",90,0)
 ;**41 replaced with line below D PIDPROC^MPIFA43(.ICN,.MPISSN,.MPIDFN,.PID)
"RTN","MPIFA24",91,0)
 D PIDP^RGADTP1(.MSG,.ARY,.HL)
"RTN","MPIFA24",92,0)
 I FIRST=1 S ARY(991.01)=+ARY("ICN"),ARY(991.02)=$P(ARY("ICN"),"V",2)
"RTN","MPIFA24",93,0)
 S ARY("ICN",FIRST)=ARY("ICN")
"RTN","MPIFA24",94,0)
 S ARY("SSN",FIRST)=ARY("SSN")
"RTN","MPIFA24",95,0)
 S ARY("DFN",FIRST)=ARY("DFN")
"RTN","MPIFA24",96,0)
 Q
"RTN","MPIFA24",97,0)
 ;
"RTN","MPIFA24",98,0)
PD1(ARY,MSG) ;processing PD1 fields
"RTN","MPIFA24",99,0)
 N COMP
"RTN","MPIFA24",100,0)
 S COMP=$E(HL("ECH"),1)
"RTN","MPIFA24",101,0)
 S ARY(991.03)=$P($P(HLNODE,HL("FS"),4),COMP,3)
"RTN","MPIFA24",102,0)
 Q
"RTN","MPIFA24",103,0)
 ;
"RTN","MPIFA24",104,0)
PROC ;
"RTN","MPIFA24",105,0)
 N NXT,DFN
"RTN","MPIFA24",106,0)
 F NXT=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","MPIFA24",107,0)
 .I $E(HLNODE,1,3)="MSA" S DFN=$P($P(HLNODE,HL("FS"),7),"=",2)
"RTN","MPIFA24",108,0)
 .I $E(HLNODE,1,3)="MSA"&($P(HLNODE,HL("FS"),4)'="") D
"RTN","MPIFA24",109,0)
 ..; ERROR RETURNED IN MSA - LOG EXCEPTION
"RTN","MPIFA24",110,0)
 ..D START^RGHLLOG(HLMTIEN,"","")
"RTN","MPIFA24",111,0)
 ..D EXC^RGHLLOG(208,$P(HLNODE,HL("FS"),4)_" for HL msg# "_HLMTIEN,DFN)
"RTN","MPIFA24",112,0)
 ..D STOP^RGHLLOG(0)
"RTN","MPIFA24",113,0)
 K ^XTMP("MPIFA24%"_DFN)
"RTN","MPIFA24",114,0)
 Q
"RTN","MPIFBT3")
0^2^B15393291^B22745391
"RTN","MPIFBT3",1,0)
MPIFBT3 ;SLC/ARS-BATCH RESPONSE FROM MPI ;FEB 4, 1997
"RTN","MPIFBT3",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,3,10,17,21,24,28,31,33,35,43,52**;30 Apr 99;Build 7
"RTN","MPIFBT3",3,0)
 ;
"RTN","MPIFBT3",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFBT3",5,0)
 ;  ^DPT("AICN", ^DPT("AICNL", ^DPT("AMPIMIS" - #2070
"RTN","MPIFBT3",6,0)
 ;  EXC^RGHLLOG - #2796
"RTN","MPIFBT3",7,0)
 ;  FILE^VAFCTFU - #2988
"RTN","MPIFBT3",8,0)
 ;  NAME^VAFCPID2 - #3492
"RTN","MPIFBT3",9,0)
 ;
"RTN","MPIFBT3",10,0)
MULT(CNTR,ACK5,SEP,MPIMSG,PATID) ;multiple RDT segments
"RTN","MPIFBT3",11,0)
 N NEXTTF,MPITMP S CNTR=$O(^XTMP($J,"MPIF","MPIIN",CNTR)),NEXTTF=$P(ACK5,SEP,8)
"RTN","MPIFBT3",12,0)
 S MPITMP=$O(^XTMP($J,"MPIF","MPIIN",CNTR)) Q:MPITMP'>0
"RTN","MPIFBT3",13,0)
 S ACK5=^XTMP($J,"MPIF","MPIIN",MPITMP) K NEXTTF,MPITMP
"RTN","MPIFBT3",14,0)
 I $P(ACK5,SEP)="RDT" D MULT(.CNTR,ACK5,SEP,MPIMSG,PATID) ; ^ add to treating facility list.  If not RDT continue on processing next msh
"RTN","MPIFBT3",15,0)
 Q
"RTN","MPIFBT3",16,0)
VFYRDT(ACK4,SEP,CNTR,PATID,SITE,MPIMSG) ;Here is the meat
"RTN","MPIFBT3",17,0)
 N MPIY,IEN,MPICMOR,MPICOMP S DGSENFLG=""
"RTN","MPIFBT3",18,0)
 S MPICOMP=$E(HL("ECH"),1)
"RTN","MPIFBT3",19,0)
 D RDT^MPIFSA3(.CNTR,.HL,.ACK4)
"RTN","MPIFBT3",20,0)
 D FINDHM(PATID,SEP,.MPIY,MPIMSG,CNTR)
"RTN","MPIFBT3",21,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT3",22,0)
 N MPINUM,MPICKG,MPIIT,DR,DIE,X,MPIIPPF,MPIPPF,RESLT
"RTN","MPIFBT3",23,0)
 S MPINUM=$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",6),MPICKG=$P(MPINUM,"V",2),MPINUM=$P(MPINUM,"V",1)
"RTN","MPIFBT3",24,0)
 ;check if ICN already in use in Patient file
"RTN","MPIFBT3",25,0)
 I $D(^DPT("AICN",MPINUM)) D
"RTN","MPIFBT3",26,0)
 .Q:PATID=$O(^DPT("AICN",MPINUM,""))   ; same patient
"RTN","MPIFBT3",27,0)
 .S ^XTMP($J,"MPIF","MSHERR")="ICN already in use"
"RTN","MPIFBT3",28,0)
 .N DFN2 S DFN2=$O(^DPT("AICN",MPINUM,""))
"RTN","MPIFBT3",29,0)
 .D TWODFNS^MPIF002(DFN2,PATID,MPINUM)
"RTN","MPIFBT3",30,0)
 .;**52 need to trigger A28 add as if not found
"RTN","MPIFBT3",31,0)
 .S MPIFRPC=1 D A28^MPIFQ3(PATID) K MPIFRPC
"RTN","MPIFBT3",32,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT3",33,0)
 S DIE="^DPT(",DA=$P(MPIY,"^",1),MPIIT=$P(MPIY,"^",1),DR="991.01////^S X=MPINUM;991.02////^S X=MPICKG" D ^DIE K DR,DIE,DA
"RTN","MPIFBT3",34,0)
 S IEN=$P(MPIY,"^") ; check if need to kill Local/MISSING ICN field
"RTN","MPIFBT3",35,0)
 I $D(^DPT("AMPIMIS",IEN)) K ^DPT("AMPIMIS",IEN)
"RTN","MPIFBT3",36,0)
 I $D(^DPT("AICNL",1,IEN)) D
"RTN","MPIFBT3",37,0)
 .S DIE="^DPT(",DA=IEN,DR="991.04///@" D ^DIE K DR,DIE,DA
"RTN","MPIFBT3",38,0)
 S MPIIPPF=""
"RTN","MPIFBT3",39,0)
 S MPIPPF=$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",5),MPICMOR=$$LKUP^XUAF4(MPIPPF)
"RTN","MPIFBT3",40,0)
 I MPICMOR'="" S MPIIPPF=$$CHANGE^MPIF001(MPIIT,MPICMOR)
"RTN","MPIFBT3",41,0)
 I +MPIIPPF<0 D EXC^RGHLLOG(211,"Around line number "_(CNTR*2)_"  CMOR= "_MPIPPF_" DFN= "_MPIIT_"  MESSAGE# "_MPIMSG,MPIIT)
"RTN","MPIFBT3",42,0)
 Q:+MPIIPPF<0
"RTN","MPIFBT3",43,0)
 I $D(^TMP("MPIFVQQ",$J,CNTR,"TF")) D
"RTN","MPIFBT3",44,0)
 . N MPINTFI,MPINTF,TFSTRG,TFIEN
"RTN","MPIFBT3",45,0)
 . S MPINTFI=0,MPINTF="",TFIEN="",TFSTRG=""
"RTN","MPIFBT3",46,0)
 . F  S MPINTFI=$O(^TMP("MPIFVQQ",$J,CNTR,"TF",MPINTFI)) Q:'MPINTFI  D
"RTN","MPIFBT3",47,0)
 .. S MPINTF=^TMP("MPIFVQQ",$J,CNTR,"TF",MPINTFI)
"RTN","MPIFBT3",48,0)
 .. S TFIEN=$$IEN^XUAF4($P(MPINTF,MPICOMP,1))
"RTN","MPIFBT3",49,0)
 .. Q:'TFIEN
"RTN","MPIFBT3",50,0)
 .. S TFSTRG=TFIEN_"^"_$$FMDATE^HLFNC($P(MPINTF,MPICOMP,2))_"^"_$P(MPINTF,MPICOMP,3)
"RTN","MPIFBT3",51,0)
 .. D FILE^VAFCTFU(PATID,TFSTRG,1)
"RTN","MPIFBT3",52,0)
 S RESLT=$$A24^MPIFA24B(PATID)
"RTN","MPIFBT3",53,0)
 I +RESLT<0 D EXC^RGHLLOG(208,"Problem building A24 (ADD TF) for DFN= "_PATID,PATID)
"RTN","MPIFBT3",54,0)
 K RESLT N RESLT
"RTN","MPIFBT3",55,0)
 S RESLT=$$A31^MPIFA31B(PATID)
"RTN","MPIFBT3",56,0)
 I +RESLT<0 D EXC^RGHLLOG(208,"Problem building A31 for DFN= "_PATID,PATID)
"RTN","MPIFBT3",57,0)
 K ^TMP("MPIFVQQ",$J)
"RTN","MPIFBT3",58,0)
 Q
"RTN","MPIFBT3",59,0)
FINDHM(PATID,SEP,MPIY,MPIMSG,CNTR) ;LOOKUP
"RTN","MPIFBT3",60,0)
 N DIC,X,Y,NM,YTMP,MPIN,EXACT
"RTN","MPIFBT3",61,0)
 Q:'$D(^TMP("MPIFVQQ",$J,CNTR,"DATA"))
"RTN","MPIFBT3",62,0)
 ;added I to DIC(0) allow processing of sensitive patients when DUZ=0
"RTN","MPIFBT3",63,0)
 S DGSENFLG="",DIC="^DPT(",DIC(0)="OISZ",X="`"_PATID D ^DIC K DIC
"RTN","MPIFBT3",64,0)
 S YTMP=Y
"RTN","MPIFBT3",65,0)
 I YTMP=-1 S ^XTMP($J,"MPIF","MSHERR")="LOOKUP FAILED" D EXC^RGHLLOG(210,"SSN = "_$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",3)_"  MESSAGE# "_MPIMSG_" around line number "_(CNTR*2),PATID)
"RTN","MPIFBT3",66,0)
 Q:YTMP=-1
"RTN","MPIFBT3",67,0)
 S NM=$P(Y(0),"^"),YTMP=$G(Y(0)),MPIY=Y ; check if ICN already populated
"RTN","MPIFBT3",68,0)
 N ICN S ICN=$$GETICN^MPIF001(PATID)
"RTN","MPIFBT3",69,0)
 I +ICN'=-1,$E(+ICN,1,3)'=$P($$SITE^VASITE,"^",3) S ^XTMP($J,"MPIF","MSHERR")="Patient "_PATID_" Already has an ICN"
"RTN","MPIFBT3",70,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT3",71,0)
 S Y(0)=$G(YTMP)
"RTN","MPIFBT3",72,0)
 ;**43 ONLY EXACT MATCHES BEING RETURNED NO LONGER MAKE THESE CHECKES IN VISTA
"RTN","MPIFBT3",73,0)
 ;Q:$P(Y(0),"^",9)["P"&($P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",3)="")
"RTN","MPIFBT3",74,0)
 ;I $P(Y(0),"^",9)'=$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",3) D
"RTN","MPIFBT3",75,0)
 ;.S ^XTMP($J,"MPIF","MSHERR")="SSN MISMATCH"
"RTN","MPIFBT3",76,0)
 ;.D EXC^RGHLLOG(213,"SSN on File = "_$P(Y(0),"^",9)_" SSN in Message = "_$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",3)_"    MESSAGE # "_MPIMSG_" around line number "_(CNTR*2),PATID)
"RTN","MPIFBT3",77,0)
 ;.N LICN S LICN=$$ICNLC^MPIF001(PATID) ; create local ICN
"RTN","MPIFBT3",78,0)
 ;Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT3",79,0)
 ;D NAME^VAFCPID2(0,.NM,0) ; reformat name in DG 149 fashion for comparison
"RTN","MPIFBT3",80,0)
 ;S MPIN=$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",2)_","_$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",7)
"RTN","MPIFBT3",81,0)
 ;I $P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",10)'="" S MPIN=MPIN_" "_$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",10)
"RTN","MPIFBT3",82,0)
 ;I $P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",15)'="" S MPIN=MPIN_" "_$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",15)
"RTN","MPIFBT3",83,0)
 ;I $P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",14)'="" S MPIN=MPIN_" "_$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",14)
"RTN","MPIFBT3",84,0)
 ;D NAME^VAFCPID2(0,.MPIN,0)
"RTN","MPIFBT3",85,0)
 ; check if Last and First Match--yes-- then check if middle name vs initial
"RTN","MPIFBT3",86,0)
 ;I $P(NM,",")=$P(MPIN,",")&($P($P(MPIN,",",2)," ")=$P($P(NM,",",2)," ")) D
"RTN","MPIFBT3",87,0)
 ;.N MPIMID,NMMN S MPIMID=$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",10)
"RTN","MPIFBT3",88,0)
 ;.S NMMN=$P($P(NM,",",2)," ",2)
"RTN","MPIFBT3",89,0)
 ;.I $L(NMMN)>1&($L(MPIMID)=1),($E(NMMN,1)=MPIMID) S EXACT=1
"RTN","MPIFBT3",90,0)
 ;.I $L(MPIMID)>1&($L(NMMN)=1),($E(MPIMID,1)=NMMN) S EXACT=1
"RTN","MPIFBT3",91,0)
 ;I NM'=MPIN,'$D(EXACT) D
"RTN","MPIFBT3",92,0)
 ;.S ^XTMP($J,"MPIF","MSHERR")="NAME MISMATCH"
"RTN","MPIFBT3",93,0)
 ;.D EXC^RGHLLOG(214,"Name on File = "_$P(Y(0),"^")_"  Name in Message = "_MPIN_"  MESSAGE# "_MPIMSG_" around line number "_(CNTR*2),PATID)
"RTN","MPIFBT3",94,0)
 ;.N LICN S LICN=$$ICNLC^MPIF001(PATID) ;create local ICN
"RTN","MPIFBT3",95,0)
 ;check to see if SEX on MPI and local site match - no exception
"RTN","MPIFBT3",96,0)
 ;I $P($G(^DPT(PATID,0)),"^",2)'=$P($G(^TMP("MPIFVQQ",$J,CNTR,"DATA")),"^",11) D
"RTN","MPIFBT3",97,0)
 ;.S ^XTMP($J,"MPIF","MSHERR")="SEX MISMATCH"
"RTN","MPIFBT3",98,0)
 ;.D EXC^RGHLLOG(209,"PT on MPI "_MPIN_" has gender as "_$P($G(^TMP("MPIFVQQ",$J,CNTR,"DATA")),"^",10)_" While the Patient DFN= "_PATID_" has "_$P($G(^DPT(PATID,0)),"^",2)_" msg # "_MPIMSG_" about line number "_(CNTR*2),PATID)
"RTN","MPIFBT3",99,0)
 ;.N LICN S LICN=$$ICNLC^MPIF001(PATID) ;create local ICN
"RTN","MPIFBT3",100,0)
 ;
"RTN","MPIFBT3",101,0)
 ;check to see if MPI has Date of Death or if VistA has DOD
"RTN","MPIFBT3",102,0)
 ;N MPIDTH,VISTDTH K %DT
"RTN","MPIFBT3",103,0)
 ;I $P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",9)'="" S X=$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",9) D ^%DT S MPIDTH=Y
"RTN","MPIFBT3",104,0)
 ;I $D(^DPT(PATID,.35)),$P($G(^DPT(PATID,.35)),"^")'="" S VISTDTH=$P($G(^DPT(PATID,.35)),"^")\1
"RTN","MPIFBT3",105,0)
 ;I $D(MPIDTH)&$D(VISTDTH),MPIDTH'=VISTDTH D
"RTN","MPIFBT3",106,0)
 ;.N Y S Y=MPIDTH D DD^%DT S MPIDTH=Y,Y=VISTDTH D DD^%DT S VISTDTH=Y
"RTN","MPIFBT3",107,0)
 ;.D EXC^RGHLLOG(217,"Around line "_(CNTR*2)_" VISTA DOD= "_VISTDTH_" MPI DOD= "_MPIDTH_"  DFN= "_PATID_"  MESSAGE# "_MPIMSG,PATID)
"RTN","MPIFBT3",108,0)
 ; ^ BOTH HAVE DOD BUT THEY DON'T MATCH
"RTN","MPIFBT3",109,0)
 ;I '$D(MPIDTH)&($D(VISTDTH)) D
"RTN","MPIFBT3",110,0)
 ;.N Y S Y=VISTDTH D DD^%DT S VISTDTH=Y
"RTN","MPIFBT3",111,0)
 ;.D EXC^RGHLLOG(216,"Around line "_(CNTR*2)_" VISTA DOD= "_VISTDTH_"  DFN= "_PATID_"  MESSAGE# "_MPIMSG,PATID)
"RTN","MPIFBT3",112,0)
 ; ^ VISTA HAS DOD BUT MPI DOESN'T
"RTN","MPIFBT3",113,0)
 ;I $D(MPIDTH)&('$D(VISTDTH)) D
"RTN","MPIFBT3",114,0)
 ;.N Y S Y=MPIDTH D DD^%DT S MPIDTH=Y
"RTN","MPIFBT3",115,0)
 ;.D EXC^RGHLLOG(215,"Around line "_(CNTR*2)_" MPI DOD= "_MPIDTH_"  DFN= "_PATID_"  MESSAGE# "_MPIMSG,PATID)
"RTN","MPIFBT3",116,0)
 ; ^ MPI HAS DOD BUT VISTA DOESN'T
"RTN","MPIFBT3",117,0)
 Q
"RTN","MPIFDNL")
0^1^B17887652^n/a
"RTN","MPIFDNL",1,0)
MPIFDNL ;OAK/TKW-CALL RPC TO ADD TO MPI DO NOT LINK FILE #985.28 ;12/29/08  16:13
"RTN","MPIFDNL",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**52**;30 Apr 99;Build 7
"RTN","MPIFDNL",3,0)
 ;
"RTN","MPIFDNL",4,0)
 ;Reference to ^XWB2HL7 supported by IA #3144
"RTN","MPIFDNL",5,0)
 ;Reference to ^XWBDRPC supported by IA #3149
"RTN","MPIFDNL",6,0)
 ;
"RTN","MPIFDNL",7,0)
CALLRPC(MPIFDUZ,MPIFSITE,MPIFFR,MPIFTO,MPIFINAC) ; Activate (add if necessary) or
"RTN","MPIFDNL",8,0)
 ; inactivate entry on MPI DO NOT LINK file (#985.28)
"RTN","MPIFDNL",9,0)
 ;
"RTN","MPIFDNL",10,0)
 ; Called from option XDR VERIFY ALL when patient pair status set to VERIFIED, NOT A DUPLICATE
"RTN","MPIFDNL",11,0)
 ; Called from option XDR EDIT DUP RECORD STATUS when status set to POTENTIAL DUPLICATE, UNVERIFIED
"RTN","MPIFDNL",12,0)
 ;  MPIFDUZ = DUZ of current user (REQUIRED)
"RTN","MPIFDNL",13,0)
 ;  MPIFSITE = IEN from file 4 for current users institution (from DUZ(2)) (REQUIRED)
"RTN","MPIFDNL",14,0)
 ;  MPIFFR = First Patient IEN (DFN) from File 2 at the VistA site (REQUIRED)
"RTN","MPIFDNL",15,0)
 ;  MPIFTO = Second Patient IEN (DFN) from file 2 at the VistA site (REQUIRED)
"RTN","MPIFDNL",16,0)
 ;  MPIFINAC = If set to 1, entry will be inactivated (OPTIONAL)
"RTN","MPIFDNL",17,0)
 ;
"RTN","MPIFDNL",18,0)
 ; Call KERNEL routine to call remote RPC
"RTN","MPIFDNL",19,0)
 ; 1) Return array
"RTN","MPIFDNL",20,0)
 ; 2) Station number where RPC is to be executed (MPI="200M")
"RTN","MPIFDNL",21,0)
 ; 3) Name of RPC at VistA site
"RTN","MPIFDNL",22,0)
 ; 4) Version number
"RTN","MPIFDNL",23,0)
 ; 5) SOURCEID = TO_DFN~STATION~Assigning_Authority~Source_Type (Ex. 12345~500~USVHA~PI)
"RTN","MPIFDNL",24,0)
 ; 6) DNLSOURCEID = FROM_DFN~STATION~Assigning_Authority~Source_Type
"RTN","MPIFDNL",25,0)
 ; 7) DNLIDENTIFIEDBY = Name of person whose DUZ represents current user
"RTN","MPIFDNL",26,0)
 ; 8) DNLEVENT = "P" (KERNEL Duplicate Merge potential match resolution)
"RTN","MPIFDNL",27,0)
 ; 9) DNLIDENTIFYINGLOCATION = VistA station number
"RTN","MPIFDNL",28,0)
 ; 10) INACTIVATE_FLAG = (optional) set to "Y" if entry is to be inactivated.
"RTN","MPIFDNL",29,0)
 ; 
"RTN","MPIFDNL",30,0)
 N MPIFRTN,MPIFNAME,MPIFSTA,MPISTA,MPIFFRP,MPIFTOP,MPIFHNDL,MPIFUERR,X
"RTN","MPIFDNL",31,0)
 ; Set MPI station number
"RTN","MPIFDNL",32,0)
 S MPISTA="200M"
"RTN","MPIFDNL",33,0)
 ; Get current users name and current station number
"RTN","MPIFDNL",34,0)
 S MPIFDUZ=+$G(MPIFDUZ),MPIFSITE=+$G(MPIFSITE)
"RTN","MPIFDNL",35,0)
 S (MPIFNAME,MPIFSTA)=""
"RTN","MPIFDNL",36,0)
 I MPIFSITE,$D(^DIC(4,MPIFSITE,0)) S MPIFSTA=$$GET1^DIQ(4,+MPIFSITE_",",99)
"RTN","MPIFDNL",37,0)
 I MPIFSTA="" D  Q
"RTN","MPIFDNL",38,0)
 . D ERRMSG(MPIFNAME,MPIFSITE,MPIFFR,MPIFTO,"missing or invalid value in user's station DUZ(2) parameter")
"RTN","MPIFDNL",39,0)
 . Q
"RTN","MPIFDNL",40,0)
 I $D(^VA(200,MPIFDUZ,0)) S MPIFNAME=$$GET1^DIQ(200,MPIFDUZ_",",.01)
"RTN","MPIFDNL",41,0)
 I ('MPIFDUZ)!(MPIFNAME'?1U.E1","1U.E) D  Q
"RTN","MPIFDNL",42,0)
 . D ERRMSG(MPIFDUZ,MPIFSTA,MPIFFR,MPIFTO,"missing or invalid value in users DUZ variable")
"RTN","MPIFDNL",43,0)
 . Q
"RTN","MPIFDNL",44,0)
 S MPIFUERR=0
"RTN","MPIFDNL",45,0)
 S X=$$GET1^DIQ(200,MPIFDUZ_",",9)
"RTN","MPIFDNL",46,0)
 ; If station is not MANILA-RO, user must have an SSN.
"RTN","MPIFDNL",47,0)
 I MPIFSTA'=358,X'?9N D  Q
"RTN","MPIFDNL",48,0)
 . D ERRMSG(MPIFDUZ,MPIFSTA,MPIFFR,MPIFTO,"Current user has missing or invalid SSN")
"RTN","MPIFDNL",49,0)
 . Q
"RTN","MPIFDNL",50,0)
 S MPIFFR=+$G(MPIFFR),MPIFTO=+$G(MPIFTO)
"RTN","MPIFDNL",51,0)
 I ('$D(^DPT(MPIFFR,0)))!('$D(^DPT(MPIFTO,0))) D  Q
"RTN","MPIFDNL",52,0)
 . D ERRMSG(MPIFNAME,MPIFSTA,MPIFFR,MPIFTO,"invalid FROM or TO patient input variable")
"RTN","MPIFDNL",53,0)
 . Q
"RTN","MPIFDNL",54,0)
 ; Build FROM patient parameter
"RTN","MPIFDNL",55,0)
 S MPIFFRP=MPIFFR_"~"_MPIFSTA_"~USVHA~PI"
"RTN","MPIFDNL",56,0)
 ; Build TO patient parameter
"RTN","MPIFDNL",57,0)
 S MPIFTOP=MPIFTO_"~"_MPIFSTA_"~USVHA~PI"
"RTN","MPIFDNL",58,0)
 ; Call RPC to Activate or Inactivate the entry in the MPI DO NOT LINK file.
"RTN","MPIFDNL",59,0)
 I $G(MPIFINAC) D EN1^XWB2HL7(.MPIFRTN,MPISTA,"MPIF DNL ADD UPD",1,MPIFTOP,MPIFFRP,"P",MPIFSTA,MPIFNAME,"Y")
"RTN","MPIFDNL",60,0)
 I '$G(MPIFINAC) D EN1^XWB2HL7(.MPIFRTN,MPISTA,"MPIF DNL ADD UPD",1,MPIFTOP,MPIFFRP,"P",MPIFSTA,MPIFNAME)
"RTN","MPIFDNL",61,0)
 ; If RPC was not scheduled, return error.
"RTN","MPIFDNL",62,0)
 I $G(MPIFRTN(0))=""!($P($G(MPIFRTN(0)),U)=0)!(+$G(MPIFRTN(0))=-1) D  Q
"RTN","MPIFDNL",63,0)
 . S X=$P($G(MPIFRTN(0)),U,2)
"RTN","MPIFDNL",64,0)
 . S:X="" X=$P($G(MPIFRTN(1)),U,2)
"RTN","MPIFDNL",65,0)
 . D ERRMSG(MPIFNAME,MPIFSTA,MPIFFR,MPIFTO,X)
"RTN","MPIFDNL",66,0)
 . Q
"RTN","MPIFDNL",67,0)
 ; Schedule a taskman job to process results of RPC
"RTN","MPIFDNL",68,0)
 S MPIFHNDL=MPIFRTN(0)
"RTN","MPIFDNL",69,0)
 N ZTIO,ZTSK,ZTRTN,ZTDESC,ZTSAVE,ZTDTH,Y
"RTN","MPIFDNL",70,0)
 S ZTIO="",ZTRTN="CHKRSLT^MPIFDNL",ZTDTH=$H
"RTN","MPIFDNL",71,0)
 S ZTSAVE("MPIFHNDL")=MPIFHNDL,ZTSAVE("MPIFNAME")=MPIFNAME,ZTSAVE("MPIFSTA")=MPIFSTA
"RTN","MPIFDNL",72,0)
 S ZTSAVE("MPIFFR")=MPIFFR,ZTSAVE("MPIFTO")=MPIFTO
"RTN","MPIFDNL",73,0)
 S ZTDESC="Check Results from call to RPC MPIF DNL ADD UPD"
"RTN","MPIFDNL",74,0)
 D ^%ZTLOAD
"RTN","MPIFDNL",75,0)
 I '$G(ZTSK) D  Q
"RTN","MPIFDNL",76,0)
 . S MPIFMSG="Results not returned from RPC to log an MPI DO NOT LINK entry for User "_MPIFNAME_" at station "_MPIFSTA_", for "_MPIFFR_" and "_MPIFTO_"."
"RTN","MPIFDNL",77,0)
 . D EXC^RGHLLOG(208,MPIFMSG,MPIFTO)
"RTN","MPIFDNL",78,0)
 . D STOP^RGHLLOG(0)
"RTN","MPIFDNL",79,0)
 . Q
"RTN","MPIFDNL",80,0)
 Q
"RTN","MPIFDNL",81,0)
 ;
"RTN","MPIFDNL",82,0)
CHKRSLT ; Check results from calling RPC (QUEUED job)
"RTN","MPIFDNL",83,0)
 N MPIFCNT,MPIFRTN,MPIFDONE,X
"RTN","MPIFDNL",84,0)
 S MPIFDONE=0
"RTN","MPIFDNL",85,0)
 F MPIFCNT=1:1:20 D  Q:MPIFDONE
"RTN","MPIFDNL",86,0)
 . H 5
"RTN","MPIFDNL",87,0)
 . D RTNDATA^XWBDRPC(.MPIFRTN,MPIFHNDL)
"RTN","MPIFDNL",88,0)
 . Q:$P(MPIFRTN(0),U)=0  ; Not done
"RTN","MPIFDNL",89,0)
 . I $P(MPIFRTN(0),U)=-1 D  Q
"RTN","MPIFDNL",90,0)
 . . I MPIFRTN(0)["Not DONE" Q
"RTN","MPIFDNL",91,0)
 . . S X=$P($G(MPIFRTN(0)),U,2)
"RTN","MPIFDNL",92,0)
 . . S:X="" X=$P($G(MPIFRTN(1)),U,2)
"RTN","MPIFDNL",93,0)
 . . D ERRMSG(MPIFNAME,MPIFSTA,MPIFFR,MPIFTO,X)
"RTN","MPIFDNL",94,0)
 . . S MPIFDONE=1
"RTN","MPIFDNL",95,0)
 . . Q
"RTN","MPIFDNL",96,0)
 . ; Success.
"RTN","MPIFDNL",97,0)
 . S MPIFDONE=1 Q
"RTN","MPIFDNL",98,0)
 Q
"RTN","MPIFDNL",99,0)
 ;
"RTN","MPIFDNL",100,0)
ERRMSG(MPIFNAME,MPIFSTA,MPIFFR,MPIFTO,MPIFMSG) ; Send error to CIRN HL7 EXCEPTION LOG (991.1)
"RTN","MPIFDNL",101,0)
 S MPIFMSG="User "_MPIFNAME_" at station "_MPIFSTA_" failed to log a DO NOT LINK event for "_MPIFFR_" and "_MPIFTO_" due to "_MPIFMSG
"RTN","MPIFDNL",102,0)
 ; If MPIFTO is invalid, set it to null so it won't cause a problem logging the error
"RTN","MPIFDNL",103,0)
 I '$D(^DPT(+MPIFTO,0)) S MPIFTO=""
"RTN","MPIFDNL",104,0)
 D EXC^RGHLLOG(208,MPIFMSG,MPIFTO)
"RTN","MPIFDNL",105,0)
 D STOP^RGHLLOG(0)
"RTN","MPIFDNL",106,0)
 Q
"RTN","MPIFDNL",107,0)
 ;
"RTN","MPIFDNL",108,0)
 ;
"RTN","MPIFQ0")
0^3^B71703643^B70311672
"RTN","MPIFQ0",1,0)
MPIFQ0 ;ALB/RJS-QUERY HANDLER TOP LEVEL ; 5/14/08 6:20pm
"RTN","MPIFQ0",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,3,8,14,13,16,17,21,20,24,26,28,31,33,35,38,43,52**;30 Apr 99;Build 7
"RTN","MPIFQ0",3,0)
 ;
"RTN","MPIFQ0",4,0)
 ; Integration Agreements utilized:
"RTN","MPIFQ0",5,0)
 ;  EXC, START and STOP^RGHLLOG - #2796
"RTN","MPIFQ0",6,0)
 ;  FILE^VAFCTFU - #2988
"RTN","MPIFQ0",7,0)
 ;  $$EN^HLCSAC - #3471
"RTN","MPIFQ0",8,0)
 ;  NAME^VAFCPID2 - #3492
"RTN","MPIFQ0",9,0)
 ;
"RTN","MPIFQ0",10,0)
INTACTV ;Interactive standalone query
"RTN","MPIFQ0",11,0)
 N DFN,NAME1,MPIFLL
"RTN","MPIFQ0",12,0)
 K DTOUT,DUOUT,X,Y,DIC
"RTN","MPIFQ0",13,0)
 S MPIFRES="",MPIFINT="",DIC="^DPT(",DIC(0)="AEMQ" D ^DIC
"RTN","MPIFQ0",14,0)
 I ($D(DTOUT))!($D(DUOUT))!((+$G(Y))<0) W:'$D(MPIFRPC) !,"TRY AGAIN LATER" G END
"RTN","MPIFQ0",15,0)
 S DFN=+Y,HLP("ACKTIME")=300
"RTN","MPIFQ0",16,0)
 W:'$D(MPIFRPC) !
"RTN","MPIFQ0",17,0)
CIRNEXC ; Exception Entry Point
"RTN","MPIFQ0",18,0)
 I +$$GETICN^MPIF001(DFN)>0,$$IFLOCAL^MPIF001(DFN)'=1 W:'$D(MPIFRPC) !,"Patient already has an ICN" G END
"RTN","MPIFQ0",19,0)
 N LOCDATA ;Data Returned from GETDATA in ICN array
"RTN","MPIFQ0",20,0)
 D GETDATA("^DPT(",DFN,"LOCDATA",".01;.02;.03;.09;.301;391;1901")
"RTN","MPIFQ0",21,0)
 S LOCDATA(2,DFN,991.01)=$P($$MPINODE^MPIFAPI(DFN),"^"),TSSN=LOCDATA(2,DFN,.09)
"RTN","MPIFQ0",22,0)
 I $$IFLOCAL^MPIF001(DFN)=1 S MPIFLL=""
"RTN","MPIFQ0",23,0)
 I $G(LOCDATA(2,DFN,991.01))>0&('$D(MPIFLL)) W:'$D(MPIFRPC) !,"Patient already has an ICN" G END
"RTN","MPIFQ0",24,0)
 S HLP("ACKTIME")=300,MPIQRYNM="EXACT_MATCH_QUERY"
"RTN","MPIFQ0",25,0)
 ;MPIQRYNM="VTQ_PID_ICN_NO_LOAD" **43 CHANGING QUERY NAME
"RTN","MPIFQ0",26,0)
 G JUMP
"RTN","MPIFQ0",27,0)
VTQ G:$G(DFN)']"" END
"RTN","MPIFQ0",28,0)
 N LOCDATA ;Data Returned from GETDATA in ICN array
"RTN","MPIFQ0",29,0)
 D GETDATA("^DPT(",DFN,"LOCDATA",".01;.02;.03;.09;.301;391;1901")
"RTN","MPIFQ0",30,0)
 S LOCDATA(2,DFN,991.01)=$P($$MPINODE^MPIFAPI(DFN),"^"),TSSN=LOCDATA(2,DFN,.09)
"RTN","MPIFQ0",31,0)
 ;S MPIQRYNM="VTQ_PID_ICN_NO_LOAD" **43 CHANGING QUERY NAME
"RTN","MPIFQ0",32,0)
 S MPIQRYNM="EXACT_MATCH_QUERY"
"RTN","MPIFQ0",33,0)
 I $G(LOCDATA(2,DFN,991.01))>0 S MPIFRTN="ALREADY HAS ICN" G END ;If Pt already has ICN don't connect to MPI
"RTN","MPIFQ0",34,0)
JUMP N TIME,% D NOW^%DTC S TIME=%
"RTN","MPIFQ0",35,0)
 N HL,MPIINM,MPIOUT,MPIIN,MPIMCNT,MPICNT,MPICS,HEADER,TEST,SITE,MPIDC,SSN
"RTN","MPIFQ0",36,0)
 I $G(HLP("ACKTIME"))="" S HLP("ACKTIME")=30 ;If the HLP("ACKTIME") is not already set for the D/C
"RTN","MPIFQ0",37,0)
 S HL("ECH")="^~\&",HL("FS")="|"
"RTN","MPIFQ0",38,0)
 I '$D(MPIQRYNM) S MPIQRYNM="VTQ_PID_ICN"
"RTN","MPIFQ0",39,0)
 S MPIIN="",MPIMCNT=DFN,MPICNT=1,MPICS=$E(HL("ECH"),1)
"RTN","MPIFQ0",40,0)
 D VTQ1^MPIFVTQ(DFN,.MPIOUT,.HL,.MPIQRYNM) ; **33 remove field list to get all now
"RTN","MPIFQ0",41,0)
 I +MPIOUT(0)=-1 D  G EXIT
"RTN","MPIFQ0",42,0)
 .S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)=$G(MPIOUT(0)),MPIFRTN="CONTINUE"
"RTN","MPIFQ0",43,0)
 ;Create MSH
"RTN","MPIFQ0",44,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1,HEADER="MSH"_HL("FS")_HL("ECH")_HL("FS")_"MPI_LOAD"_HL("FS")_SITE_HL("FS")
"RTN","MPIFQ0",45,0)
 S HEADER=HEADER_"MPI-ICN"_HL("FS")_HL("FS")_HL("FS")_HL("FS")_"VQQ"_MPICS_"Q02"_HL("FS")_MPIMCNT_"-"_MPICNT_HL("FS") ;**38 changed VTQ to VQQ
"RTN","MPIFQ0",46,0)
 S MPIOUT(1)=HEADER K MPIOUT(0)
"RTN","MPIFQ0",47,0)
 I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Attempting to connect to the Master Patient Index in Austin...",!,"If no SSN or inexact DOB or common name, this request",!,"may take some time, please be patient...",!
"RTN","MPIFQ0",48,0)
 S TEST=$$EN^HLCSAC("MPIVA DIR","MPIOUT","MPIDC")
"RTN","MPIFQ0",49,0)
 K HLP("ACKTIME") ;kill the HLP array set for the ack timeout
"RTN","MPIFQ0",50,0)
 I +TEST=-1 D  G EXIT
"RTN","MPIFQ0",51,0)
 .S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)=TEST
"RTN","MPIFQ0",52,0)
 .I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Could not connect to MPI or Timed Out, assigning local ICN (if not already assigned)..."
"RTN","MPIFQ0",53,0)
 .D LOCAL^MPIFQ3(DFN) S MPIFRTN="ASSIGNING LOCAL"
"RTN","MPIFQ0",54,0)
 K ^TMP("MPIFVQQ",$J),^TMP("MPIFQ0",$J) ;array data is parsed into for display in LM
"RTN","MPIFQ0",55,0)
INIPARS ;
"RTN","MPIFQ0",56,0)
 N SEG,INDEX,SKIP,CHECK,AL,TTF2,TFLL,TF,TF2,MPIREP,MPICOMP
"RTN","MPIFQ0",57,0)
 S INDEX=0 K CHECK
"RTN","MPIFQ0",58,0)
LOOP1 ;
"RTN","MPIFQ0",59,0)
 ;process in ADT type messages
"RTN","MPIFQ0",60,0)
 N MPIX S MPIX=0 N REP,SG,MSG,MPIQUIT,MPINODE
"RTN","MPIFQ0",61,0)
 K TWODFN S MPIQUIT=0
"RTN","MPIFQ0",62,0)
 F MPIX=0:1 X "D LOOP2" D  K MPINODE,MSG Q:MPIQUIT'>0
"RTN","MPIFQ0",63,0)
 . I $D(MPINODE(1)) S SG=$E(MPINODE(1),1,3) S MSG(1)=MPINODE(1) D
"RTN","MPIFQ0",64,0)
 .. S MPIJ=1 F  S MPIJ=$O(MPINODE(MPIJ)) Q:'MPIJ  S MSG(MPIJ)=MPINODE(MPIJ)
"RTN","MPIFQ0",65,0)
 .. D:SG?2A1(1A,1N) @SG
"RTN","MPIFQ0",66,0)
DECIDE ;If no data in ^TMP that means the patient was not found in the MPI w/VTQ Query. So we go to A28 to add the patient to the MPI.
"RTN","MPIFQ0",67,0)
 N EXC,TEXT,EXACT,EXACT2
"RTN","MPIFQ0",68,0)
 I '$D(^TMP("MPIFVQQ",$J)) D  G EXIT
"RTN","MPIFQ0",69,0)
 .I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Exact match for Patient was not found in the MPI..."
"RTN","MPIFQ0",70,0)
 .D A28^MPIFQ3(DFN) S MPIFRTN="DID A28"
"RTN","MPIFQ0",71,0)
 .;**43 log potential match exception if exist
"RTN","MPIFQ0",72,0)
 .;**52 removed all references to logging of Potential Matches because that will be done via a remote RPC in the Probabilistic Search flow on the MPI
"RTN","MPIFQ0",73,0)
 ;If INDEX=1 it means we got 1 match check SSN see if definitely same pt
"RTN","MPIFQ0",74,0)
 I (INDEX=1) D  G EXIT
"RTN","MPIFQ0",75,0)
 .;**43 Removed &(TSSN=SSN) from line above as there will only be an exact match returned now
"RTN","MPIFQ0",76,0)
 .N CCMOR,ICN,DATA,TICN,SNM,SNM2,IEN
"RTN","MPIFQ0",77,0)
 .S DATA=^TMP("MPIFVQQ",$J,INDEX,"DATA"),CMOR=$P(DATA,"^",5),ICN=$P(DATA,"^",6),IEN=$$IEN^XUAF4(CMOR)
"RTN","MPIFQ0",78,0)
 .D START^RGHLLOG(0)
"RTN","MPIFQ0",79,0)
 .S TICN=$$GETDFN^MPIF001(+ICN)
"RTN","MPIFQ0",80,0)
 .I TICN>0,DFN'=TICN D
"RTN","MPIFQ0",81,0)
 ..; call the new DUPLICATE RECORD MERGE ADD API (see section 3.2.1.2)
"RTN","MPIFQ0",82,0)
 ..N XDRSLT,XDRLST,XDRFL
"RTN","MPIFQ0",83,0)
 ..S XDRFL=2,XDRLST(1)=TICN_"^"_DFN
"RTN","MPIFQ0",84,0)
 ..D ADD^XDRDADDS(.XDRSLT,XDRFL,.XDRLST) S TWODFN=1
"RTN","MPIFQ0",85,0)
 ..;D TWODFNS^MPIF002(TICN,DFN,ICN) S TWODFN=1
"RTN","MPIFQ0",86,0)
 ..;I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Exception logged, another patient has the ICN returned already, requesting new ICN for this patient..."
"RTN","MPIFQ0",87,0)
 ..D A28^MPIFQ3(DFN),STOP^RGHLLOG(0) S MPIFRTN="Did A28" Q
"RTN","MPIFQ0",88,0)
 .;I TICN>0&(DFN'=TICN)
"RTN","MPIFQ0",89,0)
 .; CHECK IF NAME IS SAME - IF NOT POTENTIAL MATCH EXCEPTION
"RTN","MPIFQ0",90,0)
 .; **43 remove checks here as only exact match will be returned from the MPI
"RTN","MPIFQ0",91,0)
 .;S SNM=LOCDATA(2,DFN,.01) D NAME^VAFCPID2(DFN,.SNM,0) ;reformat name to DG 149 standard
"RTN","MPIFQ0",92,0)
 .;S SNM2=$P(DATA,"^") D NAME^VAFCPID2(0,.SNM2,0) S $P(DATA,"^")=SNM2
"RTN","MPIFQ0",93,0)
 .;I $P(SNM,",")=$P(SNM2,",")&($P($P(SNM2,",",2)," ")=$P($P(SNM,",",2)," ")) D
"RTN","MPIFQ0",94,0)
 .; ^first and last match - check for middle name vs middle initial
"RTN","MPIFQ0",95,0)
 .;N SNMN,SNMN2
"RTN","MPIFQ0",96,0)
 .;S SNMN=$P($P(SNM,",",2)," ",2),SNMN2=$P($P(SNM2,",",2)," ",2)
"RTN","MPIFQ0",97,0)
 .;I $L(SNMN)>1&($L(SNMN2)=1),$E(SNMN,1)=SNMN2 S EXACT=1
"RTN","MPIFQ0",98,0)
 .;I $L(SNMN2)>1&($L(SNMN)=1),$E(SNMN2,1)=SNMN S EXACT=1
"RTN","MPIFQ0",99,0)
 .;I $P($G(^DPT(DFN,0)),"^",2)'=$P(DATA,"^",11) S EXC=209,TEXT="Gender fields don't match between site and MPI for DFN "_DFN S EXACT2=1
"RTN","MPIFQ0",100,0)
 .;I SNM2'=SNM&('$D(EXACT))!($D(EXACT2)) D  Q
"RTN","MPIFQ0",101,0)
 .;I '$D(EXC) S EXC=214,TEXT="Name fields don't match between site and MPI for DFN "_DFN
"RTN","MPIFQ0",102,0)
 .;I $D(MPIFINT) D START^MPIFQ1(INDEX) Q
"RTN","MPIFQ0",103,0)
 .;I '$D(MPIFINT) D LOC2^MPIFQ3(DFN) Q
"RTN","MPIFQ0",104,0)
 .I '$D(MPIFS)&('$D(TWODFN)) W:'$D(MPIFRPC) !!,"Found Patient "_$G(LOCDATA(2,DFN,.01))_" on MPI",!,"  Updating ICN to "_+ICN_"  - just a minute..."
"RTN","MPIFQ0",105,0)
 .D STOP^RGHLLOG(0),UPDATE(DFN,ICN,CMOR) S MPIFRTN="GOT 1 HIT FROM MPI"
"RTN","MPIFQ0",106,0)
 ;I '$D(MPIFINT) D  G EXIT
"RTN","MPIFQ0",107,0)
 ;. came in via PIMS options to d/c with MPI
"RTN","MPIFQ0",108,0)
 ;.I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Potential Matches Found, Assigning Local ICN..."
"RTN","MPIFQ0",109,0)
 ;.I '$D(EXC) S EXC=218,TEXT="Potential matches found for patient DFN= "_DFN_" Use Single Patient Initialization to MPI option to manually process."
"RTN","MPIFQ0",110,0)
 ;.D START^RGHLLOG(0),EXC^RGHLLOG(EXC,TEXT,DFN),STOP^RGHLLOG(0)
"RTN","MPIFQ0",111,0)
 ;.D LOCAL^MPIFQ3(DFN) S MPIFRTN="ASSIGNING LOCAL"
"RTN","MPIFQ0",112,0)
 ;D START^MPIFQ1(INDEX) G END
"RTN","MPIFQ0",113,0)
EXIT I $D(MPIFINT) K MPIFINT,MPIFRES,MPIQRYNM,TSSN,TWODFN
"RTN","MPIFQ0",114,0)
 K VALMCNT,VALMLST,CCMOR,FICN H 3 W:'$D(MPIFRPC) !!
"RTN","MPIFQ0",115,0)
END K ^TMP("MPIFVQQ",$J),^TMP("MPIFQ0",$J) Q
"RTN","MPIFQ0",116,0)
 ;
"RTN","MPIFQ0",117,0)
UPDATE(DFN,ICN,CMOR) ;
"RTN","MPIFQ0",118,0)
 N TICN,CHKSUM,SETICN,SETLOC,CHANGE,RGLOG,LOCAL
"RTN","MPIFQ0",119,0)
 S CHKSUM=$P(ICN,"V",2),ICN=$P(ICN,"V",1),TICN=$$GETDFN^MPIF001(+ICN)
"RTN","MPIFQ0",120,0)
 I TICN>0,TICN'=DFN,'$D(TWODFN) D TWODFNS^MPIF002(TICN,DFN,ICN) Q
"RTN","MPIFQ0",121,0)
 S SETICN=$$SETICN^MPIF001(DFN,ICN,CHKSUM)
"RTN","MPIFQ0",122,0)
 I +SETICN'>0 S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)="COULD NOT SET ICN IN MPIFQ0" Q
"RTN","MPIFQ0",123,0)
 S SETLOC=1,LOCAL="N"
"RTN","MPIFQ0",124,0)
 I $E(ICN,1,3)=$P($$SITE^VASITE(),"^",3) S LOCAL="Y"
"RTN","MPIFQ0",125,0)
 I $G(LOCAL)="Y" S SETLOC=$$SETLOC^MPIF001(DFN,1)
"RTN","MPIFQ0",126,0)
 I $G(LOCAL)'="Y" S SETLOC=$$SETLOC^MPIF001(DFN,0)
"RTN","MPIFQ0",127,0)
 I +SETLOC'>0 S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)="COULD NOT SETLOC IN MPIFQ0" Q
"RTN","MPIFQ0",128,0)
 N CMOR1 S CMOR1=$$LKUP^XUAF4(CMOR)
"RTN","MPIFQ0",129,0)
 I CMOR1'="" S CHANGE=$$CHANGE^MPIF001(DFN,CMOR1)
"RTN","MPIFQ0",130,0)
 I CMOR1="" S CHANGE=-1
"RTN","MPIFQ0",131,0)
 I $G(LOCAL)="Y" S CHANGE=$$CHANGE^MPIF001(DFN,$P($$SITE^VASITE,"^"))
"RTN","MPIFQ0",132,0)
 I +CHANGE'>0 S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)="COULD NOT SET CMOR IN MPIFQ0" Q
"RTN","MPIFQ0",133,0)
 Q:$G(LOCAL)="Y"
"RTN","MPIFQ0",134,0)
 N RESLT S RESLT=$$A24^MPIFA24B(DFN)
"RTN","MPIFQ0",135,0)
 I +RESLT<0 D EXC^RGHLLOG(208,"Problem building A24 (ADD TF) for DFN= "_DFN,DFN)
"RTN","MPIFQ0",136,0)
 ; Added for patch 31, create treating facility list
"RTN","MPIFQ0",137,0)
 I $D(^TMP("MPIFVQQ",$J,INDEX,"TF")) D
"RTN","MPIFQ0",138,0)
 . N MPINTFI,MPINTF,TFSTRG,TFIEN,MPIFMDT
"RTN","MPIFQ0",139,0)
 . S MPINTFI=0
"RTN","MPIFQ0",140,0)
 . F  S MPINTFI=$O(^TMP("MPIFVQQ",$J,INDEX,"TF",MPINTFI)) Q:'MPINTFI  D
"RTN","MPIFQ0",141,0)
 .. S MPINTF=^TMP("MPIFVQQ",$J,INDEX,"TF",MPINTFI)
"RTN","MPIFQ0",142,0)
 .. S TFIEN=$$IEN^XUAF4($P(MPINTF,"^",1))
"RTN","MPIFQ0",143,0)
 .. S MPIFMDT=$$HL7TFM^XLFDT($P(MPINTF,"^",2)) I MPIFMDT<0 S MPIFMDT=""
"RTN","MPIFQ0",144,0)
 .. S TFSTRG=TFIEN_"^"_$G(MPIFMDT)_"^"_$P(MPINTF,"^",3)
"RTN","MPIFQ0",145,0)
 .. D FILE^VAFCTFU(DFN,TFSTRG,1)
"RTN","MPIFQ0",146,0)
 Q
"RTN","MPIFQ0",147,0)
GETDATA(DIC,DA,MPIFAR,DR,EI) ;
"RTN","MPIFQ0",148,0)
 ;This function returns the values stored in the fields via FM call DIQ1
"RTN","MPIFQ0",149,0)
 ;DIC=file reference, DA=IEN in file, ARRAY=array for the values to be stored in, DR=fields requested, EI=external/internal values
"RTN","MPIFQ0",150,0)
 N DIQ S DIQ=MPIFAR
"RTN","MPIFQ0",151,0)
 I $G(EI)]"" S DIQ(0)=EI
"RTN","MPIFQ0",152,0)
 D EN^DIQ1
"RTN","MPIFQ0",153,0)
 Q
"RTN","MPIFQ0",154,0)
LOOP2 ;
"RTN","MPIFQ0",155,0)
 N MPIDONE,MPII,MPIJ
"RTN","MPIFQ0",156,0)
 S MPII=0,MPIDONE=0
"RTN","MPIFQ0",157,0)
 F  S MPIQUIT=$O(MPIDC(MPIQUIT)) Q:'MPIQUIT  D  Q:MPIDONE
"RTN","MPIFQ0",158,0)
 . I MPIDC(MPIQUIT)="" S MPIDONE=1 Q
"RTN","MPIFQ0",159,0)
 . S MPII=MPII+1,MPINODE(MPII)=$G(MPIDC(MPIQUIT)) Q
"RTN","MPIFQ0",160,0)
 Q
"RTN","MPIFQ0",161,0)
MSH ;
"RTN","MPIFQ0",162,0)
 S MPIREP=$E(HL("ECH"),2),MPICOMP=$E(HL("ECH"),1)
"RTN","MPIFQ0",163,0)
 Q
"RTN","MPIFQ0",164,0)
MSA ;
"RTN","MPIFQ0",165,0)
 Q
"RTN","MPIFQ0",166,0)
RDF ;
"RTN","MPIFQ0",167,0)
 Q
"RTN","MPIFQ0",168,0)
QAK ;**43 added check for potential matches
"RTN","MPIFQ0",169,0)
 K MPIPOT S MPIPOT=0
"RTN","MPIFQ0",170,0)
 I MSG(1)["POTENTIAL MATCHES" S MPIPOT=1
"RTN","MPIFQ0",171,0)
 Q
"RTN","MPIFQ0",172,0)
RDT ;
"RTN","MPIFQ0",173,0)
 N NAME,ICN,BIRTHDAY,CMOR,IEN,SEG,HEREICN,STRING,LASTNAME,FRSTNAME,MIDDLE,SUFF,SEX
"RTN","MPIFQ0",174,0)
 S STRING="",INDEX=$G(INDEX)+1
"RTN","MPIFQ0",175,0)
 D RDT^MPIFSA3(.INDEX,.HL,.MSG)
"RTN","MPIFQ0",176,0)
 S SEG=^TMP("MPIFVQQ",$J,INDEX,"DATA")
"RTN","MPIFQ0",177,0)
 S FRSTNAME=$P(SEG,"^",7),LASTNAME=$P(SEG,"^",2),MIDDLE=$P(SEG,"^",10),SUFF=$P(SEG,"^",15)
"RTN","MPIFQ0",178,0)
 S SSN=$P(SEG,"^",3),NAME=LASTNAME_","_FRSTNAME
"RTN","MPIFQ0",179,0)
 I MIDDLE'="" S NAME=NAME_" "_MIDDLE
"RTN","MPIFQ0",180,0)
 I SUFF'="" S NAME=NAME_" "_SUFF
"RTN","MPIFQ0",181,0)
 S SEX=$P(SEG,"^",11)
"RTN","MPIFQ0",182,0)
 S ICN=$P(SEG,"^",6)
"RTN","MPIFQ0",183,0)
 S BIRTHDAY=$P(SEG,"^",4)
"RTN","MPIFQ0",184,0)
 S CMOR=$P(SEG,"^",5),IEN=$$IEN^XUAF4(CMOR)
"RTN","MPIFQ0",185,0)
 S CMOR=$P($$NS^XUAF4(IEN),"^")
"RTN","MPIFQ0",186,0)
 S HEREICN=$$HEREICN^MPIFQ3($P(ICN,"V",1))
"RTN","MPIFQ0",187,0)
 I HEREICN S STRING=$$SETSTR^VALM1("*",STRING,1,1),^TMP("MPIFVQQ",$J,INDEX,"INDICATOR")="*"_"^"_HEREICN
"RTN","MPIFQ0",188,0)
 S STRING=$$SETSTR^VALM1(INDEX,STRING,2,4),STRING=$$SETSTR^VALM1($E(NAME,1,23),STRING,6,23)
"RTN","MPIFQ0",189,0)
 S STRING=$$SETSTR^VALM1(SSN,STRING,30,9),STRING=$$SETSTR^VALM1(BIRTHDAY,STRING,41,10)
"RTN","MPIFQ0",190,0)
 S STRING=$$SETSTR^VALM1(CMOR,STRING,54,20)
"RTN","MPIFQ0",191,0)
 S ^TMP("MPIFVQQ",$J,INDEX,0)=STRING,^TMP("MPIFVQQ",$J,"IDX",INDEX,INDEX)=""
"RTN","MPIFQ0",192,0)
 Q
"RTN","MPIFQ0",193,0)
 Q
"RTN","MPIFRES")
0^9^B25044617^B24792139
"RTN","MPIFRES",1,0)
MPIFRES ;SF/CMC-LOCAL AND MISSING ICN RESOLUTION ;JUL 13, 1998
"RTN","MPIFRES",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,7,10,15,17,21,26,28,33,35,43,39,52**;30 Apr 99;Build 7
"RTN","MPIFRES",3,0)
 ;
"RTN","MPIFRES",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFRES",5,0)
 ;  EXC, START and STOP^RGHLLOG - #2796
"RTN","MPIFRES",6,0)
 ;  ^DPT("AICNL", ^DPT("AMPIMIS" - #2070
"RTN","MPIFRES",7,0)
 ;  ^RGHL7(991.1 - #3259
"RTN","MPIFRES",8,0)
 ;  ^RGSITE - #2746
"RTN","MPIFRES",9,0)
 ;
"RTN","MPIFRES",10,0)
BKG ;
"RTN","MPIFRES",11,0)
 I $D(ZTQUEUED) D GO Q
"RTN","MPIFRES",12,0)
 S ZTRTN="GO^MPIFRES",ZTDESC="USE HL7 MSGS AND MAIL TO BUILD ICN"
"RTN","MPIFRES",13,0)
 S ZTIO="",ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,0,0,1,0)
"RTN","MPIFRES",14,0)
 I $D(DUZ) S ZTSAVE("DUZ")=DUZ
"RTN","MPIFRES",15,0)
 D ^%ZTLOAD
"RTN","MPIFRES",16,0)
 D HOME^%ZIS K IO("Q")
"RTN","MPIFRES",17,0)
 K ZTDESC,ZTDTH,ZTIO,ZTQUEUED,ZTREQ,ZTRTN,ZTSAVE,ZTSK,%
"RTN","MPIFRES",18,0)
 Q
"RTN","MPIFRES",19,0)
 ;
"RTN","MPIFRES",20,0)
GO ;ENTRY POINT
"RTN","MPIFRES",21,0)
 N MPIMORE,MPITOT
"RTN","MPIFRES",22,0)
 L +^XTMP("MPIF RESOLUTION"):3 E  Q
"RTN","MPIFRES",23,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","MPIFRES",24,0)
 ;
"RTN","MPIFRES",25,0)
 K ^TMP("HLS",$J),STOP
"RTN","MPIFRES",26,0)
 D START^RGHLLOG()
"RTN","MPIFRES",27,0)
 D HLRDF
"RTN","MPIFRES",28,0)
 I $D(STOP) K STOP Q  ;patch 7 added to quit if init returned an error
"RTN","MPIFRES",29,0)
 D LOOP
"RTN","MPIFRES",30,0)
 I $D(^TMP("HLS",$J)) D SEND
"RTN","MPIFRES",31,0)
 D STOP^RGHLLOG(0)
"RTN","MPIFRES",32,0)
 K MPIIT,MPITOT,HLDT,HLDT1,MPICNT,MPIDNUM,MPIEROR,MPIMIDT,MPIMSH
"RTN","MPIFRES",33,0)
 K MPIOUT,MPIQRYNM,MPISEQ,QCNT,MPIMCNT,MPIMTX,ENDT,MPIFRES
"RTN","MPIFRES",34,0)
 L -^XTMP("MPIF RESOLUTION")
"RTN","MPIFRES",35,0)
 ; mark job completion date/time
"RTN","MPIFRES",36,0)
 S $P(^RGSITE(991.8,1,0),"^",4)=$$NOW^XLFDT
"RTN","MPIFRES",37,0)
 Q
"RTN","MPIFRES",38,0)
 ;
"RTN","MPIFRES",39,0)
HLRDF ;
"RTN","MPIFRES",40,0)
 S (MPIOUT,MPIMCNT)=""
"RTN","MPIFRES",41,0)
 S HL("ECH")="^~\&"
"RTN","MPIFRES",42,0)
 S HL("FS")="|"
"RTN","MPIFRES",43,0)
 D INIT^HLFNC2("MPIF ICN-Q02 SERVER",.HL)
"RTN","MPIFRES",44,0)
 I $O(HL("")) D EXC^RGHLLOG(220,"INIT^HLFNC2 call error returned") S STOP="" Q
"RTN","MPIFRES",45,0)
 D CREATE^HLTF(.MPIMCNT,.MPIMTX,.HLDT,.HLDT1)
"RTN","MPIFRES",46,0)
 Q
"RTN","MPIFRES",47,0)
LOOP ;
"RTN","MPIFRES",48,0)
 S (MPICNT,MPIDNUM)=1
"RTN","MPIFRES",49,0)
 D MAKE
"RTN","MPIFRES",50,0)
 Q
"RTN","MPIFRES",51,0)
SEND ;ready to send
"RTN","MPIFRES",52,0)
 D GENERATE^HLMA("MPIF ICN-Q02 SERVER","GB",1,.MPIMTX,.MPIEROR,.MPIMORE)
"RTN","MPIFRES",53,0)
 I +MPIEROR=0 D EXC^RGHLLOG(220,"GENERATE^HLMA call returned error") Q
"RTN","MPIFRES",54,0)
 K %,MPIMTX,MPIEROR,MPIMORE
"RTN","MPIFRES",55,0)
 K ^TMP("HLS",$J)
"RTN","MPIFRES",56,0)
 Q
"RTN","MPIFRES",57,0)
MAKE ;
"RTN","MPIFRES",58,0)
 N LOCAL,MPIIT,TICN,STOP,X,Y,%,%H,%I,TODAY,SITE,XX,SDT,NDT
"RTN","MPIFRES",59,0)
 S LOCAL="",MPIIT=0,MPIFRES="",SITE=$P($$SITE^VASITE(),"^",3)
"RTN","MPIFRES",60,0)
 D NOW^%DTC S TODAY=X
"RTN","MPIFRES",61,0)
 ;local ICNs
"RTN","MPIFRES",62,0)
 F  S MPIIT=$O(^DPT("AICNL",1,MPIIT)) Q:MPIIT=""  D
"RTN","MPIFRES",63,0)
 .; LINE BELOW ADDED FOR PATCH 26 TO CLEANUP AICNL X-REF WHEN LEFT AROUND
"RTN","MPIFRES",64,0)
 .I $E($$GETICN^MPIF001(MPIIT),1,3)'=SITE S XX=$$SETLOC^MPIF001(MPIIT,0) K ^DPT("AICNL",1,MPIIT) Q
"RTN","MPIFRES",65,0)
 .;Q:+$G(^DPT("AICNL",1,MPIIT))=1 **39 changing check
"RTN","MPIFRES",66,0)
 .Q:+$G(^DPT("AICNL",1,MPIIT))=2&($P($G(^DPT("AICNL",1,MPIIT)),"^",2)=TODAY)
"RTN","MPIFRES",67,0)
 .; ^ check if A28 failed to get ICN back and should now be sent up
"RTN","MPIFRES",68,0)
 .; DON'T send if is the 2^today **35
"RTN","MPIFRES",69,0)
 .S SDT=$P($G(^DPT("AICNL",1,MPIIT)),"^",2)
"RTN","MPIFRES",70,0)
 .N X1,X2 K X S X1=SDT,X2=2 D C^%DTC S NDT=X ;**39 FIGURE 2 DAYS FROM NOW
"RTN","MPIFRES",71,0)
 .Q:+$G(^DPT("AICNL",1,MPIIT))=1&(SDT=TODAY)
"RTN","MPIFRES",72,0)
 .; **39 ^ if send up today don't send again
"RTN","MPIFRES",73,0)
 .Q:+$G(^DPT("AICNL",1,MPIIT))=1&(NDT>TODAY)
"RTN","MPIFRES",74,0)
 .;**39 ^ only send patient to MPI for Local ICN resolution 1 time UNLESS its day 3 since it was sent
"RTN","MPIFRES",75,0)
 .;I $D(^RGHL7(991.1,"ADFN",218,MPIIT)) S ^DPT("AICNL",1,MPIIT)="1^"_TODAY Q
"RTN","MPIFRES",76,0)
 .; ^ checking if potential match exception **43 REMOVE CHECK ON POTENTIAL MATCH EXCEPTIONS
"RTN","MPIFRES",77,0)
 .D MAKE3
"RTN","MPIFRES",78,0)
 ;missing ICNs
"RTN","MPIFRES",79,0)
 S MPIIT=0
"RTN","MPIFRES",80,0)
 F  S MPIIT=$O(^DPT("AMPIMIS",MPIIT)) Q:MPIIT=""  D
"RTN","MPIFRES",81,0)
 .K STOP
"RTN","MPIFRES",82,0)
 .I $D(^DPT(MPIIT,-9)) K ^DPT("AMPIMIS",MPIIT) Q  ;**43 CHECK IF MERGED PATIENT AND CLEANUP CROSS REFERENCE
"RTN","MPIFRES",83,0)
 .S TICN=+$$GETICN^MPIF001(MPIIT)
"RTN","MPIFRES",84,0)
 .I TICN<0 L +^DPT(MPIIT):5 I '$T Q  ;**35
"RTN","MPIFRES",85,0)
 .L -^DPT(MPIIT) ;**35 **52 UNLOCK WHAT IS LOCKED ABOVE
"RTN","MPIFRES",86,0)
 .;**35 If don't have ICN yet, try to lock if can't get lock skip record - still creating patient.
"RTN","MPIFRES",87,0)
 .I TICN<0,'$D(STOP) D MAKE3
"RTN","MPIFRES",88,0)
 .I TICN>0 K ^DPT("AMPIMIS",MPIIT)
"RTN","MPIFRES",89,0)
 Q
"RTN","MPIFRES",90,0)
MAKE3 ;
"RTN","MPIFRES",91,0)
 K MPIOUT
"RTN","MPIFRES",92,0)
 S MPIFRES=""
"RTN","MPIFRES",93,0)
 S:$G(MPIQRYNM)="" MPIQRYNM="EXACT_MATCH_QUERY" ;**43 changed MPIQRYNM from VTQ_PID_ICN_LOAD_1 to stop automatic add pts on the MPI
"RTN","MPIFRES",94,0)
 D VTQ1^MPIFVTQ(MPIIT,.MPIOUT,.HL,.MPIQRYNM)
"RTN","MPIFRES",95,0)
 I $P(MPIOUT(0),"^")<0,$P(MPIOUT(0),"^",2)="invalid DFN"!($P(MPIOUT(0),"^",2)="no encoding characters") D EXC^RGHLLOG(206,"DFN = "_MPIIT_"  Problem with building VTQ was "_$P(MPIOUT(0),"^",2),MPIIT) Q
"RTN","MPIFRES",96,0)
 ;I $P(MPIOUT(0),"^")<0,$P(MPIOUT(0),"^",2)="Missing Required Field(s)" Q
"RTN","MPIFRES",97,0)
 ;Q:$P(MPIOUT(0),"^")<0
"RTN","MPIFRES",98,0)
 S ^DPT("AICNL",1,MPIIT)="1^"_TODAY
"RTN","MPIFRES",99,0)
 ; ^ mark Local ICN as having been sent to MPI for resolution
"RTN","MPIFRES",100,0)
 ;call for HL7 header
"RTN","MPIFRES",101,0)
 S MPIMIDT=MPIMCNT_"-"_MPIDNUM
"RTN","MPIFRES",102,0)
 D MSH^HLFNC2(.HL,MPIMIDT,.MPIMSH)
"RTN","MPIFRES",103,0)
 S MPIOUT(1)=MPIMSH
"RTN","MPIFRES",104,0)
 S ^TMP("HLS",$J,MPICNT)=MPIOUT(1)
"RTN","MPIFRES",105,0)
 S MPICNT=MPICNT+1
"RTN","MPIFRES",106,0)
 ;MESSAGE BUILT
"RTN","MPIFRES",107,0)
 S MPISEQ=0
"RTN","MPIFRES",108,0)
 ;setup VTQ segment in HL array
"RTN","MPIFRES",109,0)
 S ^TMP("HLS",$J,MPICNT)=MPIOUT(2)
"RTN","MPIFRES",110,0)
 S MPICNT=MPICNT+1
"RTN","MPIFRES",111,0)
 ;setup RDF segment in HL array
"RTN","MPIFRES",112,0)
 S ^TMP("HLS",$J,MPICNT)=MPIOUT(3)
"RTN","MPIFRES",113,0)
 ;loop through and add the additional RDF continuations
"RTN","MPIFRES",114,0)
 N SCNT,Y S Y=3,SCNT=1 F  S Y=$O(MPIOUT(Y)) Q:'Y  D
"RTN","MPIFRES",115,0)
 .S ^TMP("HLS",$J,MPICNT,SCNT)=MPIOUT(Y),SCNT=SCNT+1
"RTN","MPIFRES",116,0)
 S MPICNT=MPICNT+1
"RTN","MPIFRES",117,0)
 S MPIDNUM=MPIDNUM+1
"RTN","MPIFRES",118,0)
 I MPIDNUM>100 D
"RTN","MPIFRES",119,0)
 .D SEND
"RTN","MPIFRES",120,0)
 .S (MPICNT,MPIDNUM)=1
"RTN","MPIFRES",121,0)
 .D HLRDF
"RTN","MPIFRES",122,0)
 Q
"RTN","MPIFSA2")
0^4^B80384646^B53121126
"RTN","MPIFSA2",1,0)
MPIFSA2 ;SF/CMC-STAND ALONE QUERY PART 2 ; 8/25/08 12:17pm
"RTN","MPIFSA2",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**28,29,35,38,43,52**;30 Apr 99;Build 7
"RTN","MPIFSA2",3,0)
 ;
"RTN","MPIFSA2",4,0)
 ;Integration Agreements: $$EN^HLCSAC - #3471
"RTN","MPIFSA2",5,0)
 ;
"RTN","MPIFSA2",6,0)
FIELD ;
"RTN","MPIFSA2",7,0)
 ;;@00108.1;LAST NAME;ST;30
"RTN","MPIFSA2",8,0)
 ;;@00122;SSN;ST;9
"RTN","MPIFSA2",9,0)
 ;;@00110;DOB;TS;8
"RTN","MPIFSA2",10,0)
 ;;@00756;PRIMARY CARE SITE;ST;6
"RTN","MPIFSA2",11,0)
 ;;@00105;ICN;ST;19
"RTN","MPIFSA2",12,0)
 ;;@00108.2;FIRST NAME;ST;30
"RTN","MPIFSA2",13,0)
 ;;@00169;TREATING FACILITY (MULTIPLE--FILE 985.5);ST;999
"RTN","MPIFSA2",14,0)
 ;;@00740;DATE OF DEATH;TS;8
"RTN","MPIFSA2",15,0)
 ;;@00108.3;MIDDLE;ST;16
"RTN","MPIFSA2",16,0)
 ;;@00111;SEX;ST;1
"RTN","MPIFSA2",17,0)
 ;;@00126.1;BIRTH PLACE CITY;ST;30
"RTN","MPIFSA2",18,0)
 ;;@00126.2;BIRTH PLACE STATE;ST;3
"RTN","MPIFSA2",19,0)
 ;;@00108.5;NAME PREFIX;ST;15
"RTN","MPIFSA2",20,0)
 ;;@00108.4;NAME SUFFIX;ST;10
"RTN","MPIFSA2",21,0)
 ;;@00109.1;MOTHER'S MAIDEN NAME;ST;20
"RTN","MPIFSA2",22,0)
 ;;@ZEL6;CLAIM NUMBER;ST;9
"RTN","MPIFSA2",23,0)
 ;;@CASE#;MPI DUP CASE#;ST;69
"RTN","MPIFSA2",24,0)
 ;;@POW;POW STATUS;ST;1
"RTN","MPIFSA2",25,0)
 ;;@00127;MULTIPLE BIRTH INDICATOR;ST;1
"RTN","MPIFSA2",26,0)
 ;;@00112.1;ALIAS LAST NAME;ST;30
"RTN","MPIFSA2",27,0)
 ;;@00112.2;ALIAS FIRST NAME;ST;25
"RTN","MPIFSA2",28,0)
 ;;@00112.3;ALIAS MIDDLE NAME;ST;25
"RTN","MPIFSA2",29,0)
 ;;@00112.5;ALIAS PREFIX;ST;10
"RTN","MPIFSA2",30,0)
 ;;@00112.4;ALIAS SUFFIX;ST;10
"RTN","MPIFSA2",31,0)
 ;;@00114.1;STREET ADDRESS LINE 1;ST;35
"RTN","MPIFSA2",32,0)
 ;;@00114.2;STREET ADDRESS LINE 2;ST;30
"RTN","MPIFSA2",33,0)
 ;;@00114.3;CITY;ST;28
"RTN","MPIFSA2",34,0)
 ;;@00114.8;STREET ADDRESS LINE 3;ST;30
"RTN","MPIFSA2",35,0)
 ;;@00116;PHONE NUMBER (RESIDENCE);ST;23
"RTN","MPIFSA2",36,0)
 ;;@SCORE;SCORE;ST;8
"RTN","MPIFSA2",37,0)
 ;;@ALTRSHLD;AUTOLINK THRESHOLD;ST;5
"RTN","MPIFSA2",38,0)
 ;;@TKTRSHLD;TASK THRESHOLD;ST;5
"RTN","MPIFSA2",39,0)
 ;;
"RTN","MPIFSA2",40,0)
VTQ(MPIVAR) ;
"RTN","MPIFSA2",41,0)
 N TIME,% D NOW^%DTC S TIME=%
"RTN","MPIFSA2",42,0)
 W !!,"Attempting to connect to the Master Patient Index in Austin...",!,"If DOB is inexact or if SSN is not passed or if common name,",!,"this could take some time - please be patient...."
"RTN","MPIFSA2",43,0)
 N HL,MPIQRYNM,MPIINM,MPIOUT,MPIIN,MPIMCNT,MPICNT,MPICS,HEADER,RDF,QUERY,TEST,SITE,MPIDC,MPINM,MPI1NM,MPI2NM,MPIESC,MPIHDOB,MPIRS,MPISCS,QUEDDOB,MPIFLDV
"RTN","MPIFSA2",44,0)
 S HLP("ACKTIME")=300,HL("ECH")="^~\&",HL("FS")="|",MPIIN="",MPICNT=1,MPICS=$E(HL("ECH"),1)
"RTN","MPIFSA2",45,0)
 ;**43 CHANGING QUERY NAME FROM VTQ_PID_ICN_NO_LOAD TO VTQ_DISPLAY_ONLY_QUERY to enable the returning of potential matches and not just exact matches
"RTN","MPIFSA2",46,0)
 S MPIQRYNM="VTQ_DISPLAY_ONLY_QUERY"
"RTN","MPIFSA2",47,0)
 I '$D(MPIVAR("DFN")) S MPIVAR("DFN")=""
"RTN","MPIFSA2",48,0)
 S MPIMCNT=MPIVAR("DFN")
"RTN","MPIFSA2",49,0)
 ;SETUP VTQ
"RTN","MPIFSA2",50,0)
 S MPICS=$E(HL("ECH"),1),MPIRS=$E(HL("ECH"),2),MPISCS=$E(HL("ECH"),4),MPIESC=$E(HL("ECH"),3)
"RTN","MPIFSA2",51,0)
 D BLDRDF(.MPIOUT,3,MPIRS,MPICS)
"RTN","MPIFSA2",52,0)
 ; ^ fields to be returned in query response
"RTN","MPIFSA2",53,0)
 S QUERY="VTQ"_HL("FS")_$G(MPIVAR("DFN"))_HL("FS")_"T"_HL("FS")_MPIQRYNM_HL("FS")_"ICN"_HL("FS")
"RTN","MPIFSA2",54,0)
 S MPI2NM=$P($G(MPIVAR("NM")),",",1),QUERY=QUERY_"@00108.1"_MPICS_"EQ"_MPICS_MPI2NM ; ^ sending last name
"RTN","MPIFSA2",55,0)
 I MPIVAR("SSN")'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00122"_MPICS_"EQ"_MPICS_$G(MPIVAR("SSN")) ; ^ sending SSN
"RTN","MPIFSA2",56,0)
 S MPI1NM=$P($G(MPIVAR("NM")),",",2),MPI1NM=$P(MPI1NM," ",1) I MPI1NM'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00108.2"_MPICS_"EQ"_MPICS_MPI1NM ; ^ sending first name
"RTN","MPIFSA2",57,0)
 I $G(MPIVAR("DOB"))>0 D
"RTN","MPIFSA2",58,0)
 .S MPIHDOB=$$HLDATE^HLFNC(MPIVAR("DOB")) ; send date of birth (convert to hl7 date format)
"RTN","MPIFSA2",59,0)
 .S QUEDDOB=MPICS_"AND"_MPIRS_"@00110"_MPICS_"EQ"_MPICS_MPIHDOB,QUERY=QUERY_QUEDDOB ; ^ sending date of birth
"RTN","MPIFSA2",60,0)
 S MPI1NM=$P($G(MPIVAR("NM")),",",2),MPIMID=$P(MPI1NM," ",2) I MPIMID'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00108.3"_MPICS_"EQ"_MPICS_MPIMID ; sending middle name
"RTN","MPIFSA2",61,0)
 S MPISUF=$P(MPI1NM," ",3) I MPISUF'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00108.4"_MPICS_"EQ"_MPICS_MPISUF ; sending suffix
"RTN","MPIFSA2",62,0)
 S MPIPRE=$P(MPI1NM," ",4) I MPIPRE'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00108.5"_MPICS_"EQ"_MPICS_MPIPRE ; sending prefix
"RTN","MPIFSA2",63,0)
 I $G(MPIVAR("SEX"))'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00111"_MPICS_"EQ"_MPICS_$G(MPIVAR("SEX")) ;sending sex
"RTN","MPIFSA2",64,0)
 I $G(MPIVAR("ADDR1"))'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00114.1"_MPICS_"EQ"_MPICS_$G(MPIVAR("ADDR1")) ;sending Address 1
"RTN","MPIFSA2",65,0)
 I $G(MPIVAR("ADDR2"))'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00114.2"_MPICS_"EQ"_MPICS_$G(MPIVAR("ADDR2")) ;sending Address 2
"RTN","MPIFSA2",66,0)
 I $G(MPIVAR("CITY"))'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00114.3"_MPICS_"EQ"_MPICS_$G(MPIVAR("CITY")) ;sending City
"RTN","MPIFSA2",67,0)
 I $G(MPIVAR("ADDR3"))'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00114.8"_MPICS_"EQ"_MPICS_$G(MPIVAR("ADDR3")) ;sending Address 3
"RTN","MPIFSA2",68,0)
 I $G(MPIVAR("PHONE"))'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00116"_MPICS_"EQ"_MPICS_$G(MPIVAR("PHONE")) ;sending Residence Phone
"RTN","MPIFSA2",69,0)
 ;keep following traits for future use
"RTN","MPIFSA2",70,0)
 ;I $G(MPIVAR("MMN"))'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00109.1"_MPICS_"EQ"_MPICS_$G(MPIVAR("MMN")) ;sending Mother's maiden name
"RTN","MPIFSA2",71,0)
 ;I $G(MPIVAR("CLAIM"))'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@ZEL6"_MPICS_"EQ"_MPICS_$G(MPIVAR("CLAIM")) ;sending Claim #
"RTN","MPIFSA2",72,0)
 ;I $G(MPIVAR("POBCITY"))'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00126.1"_MPICS_"EQ"_MPICS_$G(MPIVAR("POBCITY")) ;sending POB city
"RTN","MPIFSA2",73,0)
 ;I $G(MPIVAR("POBSTATE"))'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00126.2"_MPICS_"EQ"_MPICS_$G(MPIVAR("POBSTATE")) ;sending POB State
"RTN","MPIFSA2",74,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3) ;**29
"RTN","MPIFSA2",75,0)
 S HEADER="MSH"_HL("FS")_HL("ECH")_HL("FS")_"MPI_LOAD"_HL("FS")_SITE_HL("FS")_"MPI-ICN"_HL("FS")_HL("FS")_HL("FS")_HL("FS")_"VQQ"_MPICS_"Q02"_HL("FS")_MPIMCNT_"-"_MPICNT_HL("FS") ;create msh **38 changed VTQ to VQQ
"RTN","MPIFSA2",76,0)
 S MPIOUT(1)=HEADER K MPIOUT(0) S MPIOUT(2)=QUERY
"RTN","MPIFSA2",77,0)
 ;Attempt to connect to MPI and send message,receive message. Message is returned in MPIDC array
"RTN","MPIFSA2",78,0)
 S TEST=$$EN^HLCSAC("MPIVA DIR","MPIOUT","MPIDC")
"RTN","MPIFSA2",79,0)
 K HLP("ACKTIME") ;Clean up the ack timeout HLP array variable
"RTN","MPIFSA2",80,0)
 I +TEST<0 W !!,"Could not connect to MPI or Time-out occured, try again later." G EXIT
"RTN","MPIFSA2",81,0)
 K ^TMP("MPIFVQQ",$J),^TMP("MPIDOQ",$J)
"RTN","MPIFSA2",82,0)
INIPARS ;
"RTN","MPIFSA2",83,0)
 N SEG,INDEX,SKIP,CHECK,AL,TTF2,TFLL,TF,TF2,MPIREP,MPICOMP
"RTN","MPIFSA2",84,0)
 S INDEX=0 K CHECK
"RTN","MPIFSA2",85,0)
LOOP1 ;
"RTN","MPIFSA2",86,0)
 ;process in ADT type messages
"RTN","MPIFSA2",87,0)
 N MPIX S MPIX=0 N REP,SG,MSG,MPIQUIT,MPINODE
"RTN","MPIFSA2",88,0)
 S MPIQUIT=0
"RTN","MPIFSA2",89,0)
 F MPIX=0:1 X "D LOOP2" D  K MPINODE,MSG Q:MPIQUIT'>0
"RTN","MPIFSA2",90,0)
 . I $D(MPINODE(1)) S SG=$E(MPINODE(1),1,3) S MSG(1)=MPINODE(1) D
"RTN","MPIFSA2",91,0)
 ..  S MPIJ=1 F  S MPIJ=$O(MPINODE(MPIJ)) Q:'MPIJ  S MSG(MPIJ)=MPINODE(MPIJ)
"RTN","MPIFSA2",92,0)
 .. D:SG?2A1(1A,1N) @SG
"RTN","MPIFSA2",93,0)
 I '$D(^TMP("MPIFVQQ",$J)) W !!,"Patient was not found in the MPI." G EXIT
"RTN","MPIFSA2",94,0)
 I INDEX>9 W !!,"More Identity Traits Required to Make a Match." G EXIT
"RTN","MPIFSA2",95,0)
DISPLAY ; display data found
"RTN","MPIFSA2",96,0)
 I INDEX>1 W !!,"Found potential matches"
"RTN","MPIFSA2",97,0)
 I INDEX=1 W !!,"Found One Match"
"RTN","MPIFSA2",98,0)
 N CNT1,CNT2,STOP,CNTR2,TTF,CNT3,DIR,X,Y,DATA,PREFIX,ANAME,APRE,ALN,AFN,NAME,SSN,BIRTHDAY,CMOR,TF,ICN,POBC,POBS,PAST,XXX,AMID,ASUF,MNAME,SUFFIX,SEX,IEN,CMOR2,TF2,CLAIM,CASE,NOIS,CUSER,TFN,CMOR3,POW,MBIRTH,TIEN,MIDDLE,SCORE,ALTRSHLD,TKTRSHLD,I
"RTN","MPIFSA2",99,0)
 S (CNT1)=0
"RTN","MPIFSA2",100,0)
 F  S CNT1=$O(^TMP("MPIFVQQ",$J,CNT1)) Q:CNT1'>0!($D(STOP))  D
"RTN","MPIFSA2",101,0)
 . S DATA=$G(^TMP("MPIFVQQ",$J,CNT1,"DATA"))
"RTN","MPIFSA2",102,0)
 . Q:DATA=""
"RTN","MPIFSA2",103,0)
 . K CHECK S NAME=$P(DATA,"^"),SSN=$P(DATA,"^",3),BIRTHDAY=$P(DATA,"^",4),ICN=$P(DATA,"^",6)
"RTN","MPIFSA2",104,0)
 . S SEX=$P(DATA,"^",11),SCORE=$P(DATA,"^",21),ALTRSHLD=$P(DATA,"^",22),TKTRSHLD=$P(DATA,"^",23)
"RTN","MPIFSA2",105,0)
 . I $G(SCORE)="" W !!,"IdM System uavailable, try again later!" S STOP=1 Q  ;Quit if no score is returned.
"RTN","MPIFSA2",106,0)
 . I SCORE>=ALTRSHLD S M="E"
"RTN","MPIFSA2",107,0)
 . I SCORE<ALTRSHLD,(SCORE>=TKTRSHLD) S M="P"
"RTN","MPIFSA2",108,0)
 . ;Rearranging array for sectional view display
"RTN","MPIFSA2",109,0)
 . S ^TMP("MPIDOQ",$J,M,SCORE,+ICN)=NAME_"^"_SSN_"^"_BIRTHDAY_"^"_SEX
"RTN","MPIFSA2",110,0)
 . M ^TMP("MPIDOQ",$J,M,SCORE,+ICN,"TF")=^TMP("MPIFVQQ",$J,CNT1,"TF")
"RTN","MPIFSA2",111,0)
 I $D(STOP) Q  ;Quit if no score is returned
"RTN","MPIFSA2",112,0)
DISP2 ;
"RTN","MPIFSA2",113,0)
 S COUNT=0
"RTN","MPIFSA2",114,0)
 W @IOF
"RTN","MPIFSA2",115,0)
 F I="E","P" D
"RTN","MPIFSA2",116,0)
 . I $D(^TMP("MPIDOQ",$J,I)) D HDR($S(I="E":"",I="P":" POTENTIAL",1:""))
"RTN","MPIFSA2",117,0)
 . S SCORE=9999999 F  S SCORE=$O(^TMP("MPIDOQ",$J,I,SCORE),-1) Q:SCORE=""  D
"RTN","MPIFSA2",118,0)
 . . S ICN=0 F  S ICN=$O(^TMP("MPIDOQ",$J,I,SCORE,ICN)) Q:ICN=""  D
"RTN","MPIFSA2",119,0)
 . . . S ICNARR(ICN)="",COUNT=COUNT+1
"RTN","MPIFSA2",120,0)
 . . . S DATA=$G(^TMP("MPIDOQ",$J,I,SCORE,ICN))
"RTN","MPIFSA2",121,0)
 . . . D HDR1
"RTN","MPIFSA2",122,0)
 . . . W !,COUNT_") ",?4,ICN,?16,$P(DATA,"^"),?45,$P(DATA,"^",2),?57,$P(DATA,"^",3),?70,$P(DATA,"^",4)
"RTN","MPIFSA2",123,0)
 . . . W ! N TMP S XXX=0 F  S XXX=$O(^TMP("MPIDOQ",$J,I,SCORE,ICN,"TF",XXX)) Q:XXX=""  S TMP=$G(^TMP("MPIDOQ",$J,I,SCORE,ICN,"TF",XXX)) Q:TMP=""  D
"RTN","MPIFSA2",124,0)
 . . . . S TMP=$P(TMP,"^",1) W !,?10,"Treating Facility: ",$P($$NS^XUAF4($$LKUP^XUAF4(TMP)),"^")," (",TMP,")"
"RTN","MPIFSA2",125,0)
 . . . W !
"RTN","MPIFSA2",126,0)
 S ENOUGH=0
"RTN","MPIFSA2",127,0)
 W !
"RTN","MPIFSA2",128,0)
 D ASK I ENOUGH G EXIT
"RTN","MPIFSA2",129,0)
 I TMPICN'="" W !,"Please wait..." D ENRPC(TMPICN)
"RTN","MPIFSA2",130,0)
 W !!
"RTN","MPIFSA2",131,0)
 K DIR,DA S DIR(0)="Y",DIR("B")="NO",DIR("A")="Would you like to see another record" D ^DIR
"RTN","MPIFSA2",132,0)
 I $D(DTOUT)!($D(DUOUT)) S ENOUGH=1 G EXIT
"RTN","MPIFSA2",133,0)
 I Y G DISP2
"RTN","MPIFSA2",134,0)
EXIT K DA,X,Y,^TMP("MPIDOQ",$J) W !! Q
"RTN","MPIFSA2",135,0)
HDR(HDL) ;Header
"RTN","MPIFSA2",136,0)
 W !,"--- All ICNs Below meet the"_HDL_" Match criteria ---"
"RTN","MPIFSA2",137,0)
 Q
"RTN","MPIFSA2",138,0)
HDR1 ;Repeating header
"RTN","MPIFSA2",139,0)
 W !,?4,"ICN",?16,"NAME",?45,"SSN",?57,"DOB",?70,"SEX"
"RTN","MPIFSA2",140,0)
 Q
"RTN","MPIFSA2",141,0)
ASK ;
"RTN","MPIFSA2",142,0)
 N DIR,DA,DR,ND,SC,CNTR,BC,EC,ICN
"RTN","MPIFSA2",143,0)
 S EC=0,BC=1
"RTN","MPIFSA2",144,0)
 S TMP=0 F  S TMP=$O(ICNARR(TMP)) Q:TMP=""  S EC=EC+1
"RTN","MPIFSA2",145,0)
 K DIR,X,Y S DIR(0)="NA^"_BC_":"_EC,DIR("A")="Enter the Number to display the details: ",DIR("?")="Enter the number from range of "_BC_" to "_EC D ^DIR
"RTN","MPIFSA2",146,0)
 I $D(DTOUT)!($D(DUOUT)) S ENOUGH=1 Q
"RTN","MPIFSA2",147,0)
 S QFLG=0,CNTR=0
"RTN","MPIFSA2",148,0)
 F I="E","P" D
"RTN","MPIFSA2",149,0)
 . S SC=10000 F  S SC=$O(^TMP("MPIDOQ",$J,I,SC),-1) Q:SC=""!(QFLG)  D
"RTN","MPIFSA2",150,0)
 ..S ICN=0 F  S ICN=$O(^TMP("MPIDOQ",$J,I,SC,ICN)) Q:ICN=""!(QFLG)  D
"RTN","MPIFSA2",151,0)
 ...S CNTR=CNTR+1 I CNTR=+Y S QFLG=1,TMPICN=ICN
"RTN","MPIFSA2",152,0)
 Q
"RTN","MPIFSA2",153,0)
ENRPC(ICN) ;RPC Call
"RTN","MPIFSA2",154,0)
 N LOC,HNDL,RETURN,DONE,I,ND
"RTN","MPIFSA2",155,0)
 S LOC="200M"
"RTN","MPIFSA2",156,0)
 D EN1^XWB2HL7(.RETURN,LOC,"MPIF EDAT REMOTE",1,ICN)
"RTN","MPIFSA2",157,0)
 S HNDL=$G(RETURN(0))
"RTN","MPIFSA2",158,0)
 S DONE=0
"RTN","MPIFSA2",159,0)
 F I=1:1:20 D  Q:DONE
"RTN","MPIFSA2",160,0)
 . H 5 W "."
"RTN","MPIFSA2",161,0)
 . D RTNDATA^XWBDRPC(.RETURN,HNDL)
"RTN","MPIFSA2",162,0)
 . Q:$P(RETURN(0),"^")=0
"RTN","MPIFSA2",163,0)
 . I $P(RETURN(0),"^")=-1 D  Q
"RTN","MPIFSA2",164,0)
 . . I RETURN(0)["Not DONE" Q
"RTN","MPIFSA2",165,0)
 . S DONE=1
"RTN","MPIFSA2",166,0)
 I 'DONE W !,"MPI system is unavailable to display the record, Try again later." Q
"RTN","MPIFSA2",167,0)
 I DONE,$G(^XTMP(HNDL,"D",1))'="" D
"RTN","MPIFSA2",168,0)
 . W @IOF S $Y=1
"RTN","MPIFSA2",169,0)
 . S ND=0 F  S ND=$O(^XTMP(HNDL,"D",ND)) Q:ND=""  D
"RTN","MPIFSA2",170,0)
 ..W !,^XTMP(HNDL,"D",ND)
"RTN","MPIFSA2",171,0)
 K ^XTMP(HNDL),RETURN
"RTN","MPIFSA2",172,0)
 Q
"RTN","MPIFSA2",173,0)
LOOP2 ;
"RTN","MPIFSA2",174,0)
 N MPIDONE,MPII,MPIJ
"RTN","MPIFSA2",175,0)
 S MPII=0,MPIDONE=0
"RTN","MPIFSA2",176,0)
 F  S MPIQUIT=$O(MPIDC(MPIQUIT)) Q:'MPIQUIT  D  Q:MPIDONE
"RTN","MPIFSA2",177,0)
 . I MPIDC(MPIQUIT)="" S MPIDONE=1 Q
"RTN","MPIFSA2",178,0)
 . S MPII=MPII+1,MPINODE(MPII)=$G(MPIDC(MPIQUIT)) Q
"RTN","MPIFSA2",179,0)
 Q
"RTN","MPIFSA2",180,0)
MSH ;
"RTN","MPIFSA2",181,0)
 S MPIREP=$E(HL("ECH"),2),MPICOMP=$E(HL("ECH"),1)
"RTN","MPIFSA2",182,0)
 Q
"RTN","MPIFSA2",183,0)
MSA ;
"RTN","MPIFSA2",184,0)
 Q
"RTN","MPIFSA2",185,0)
RDF ;
"RTN","MPIFSA2",186,0)
 Q
"RTN","MPIFSA2",187,0)
QAK ;
"RTN","MPIFSA2",188,0)
 Q
"RTN","MPIFSA2",189,0)
RDT ;
"RTN","MPIFSA2",190,0)
 S INDEX=$G(INDEX)+1
"RTN","MPIFSA2",191,0)
 D RDT^MPIFSA3(.INDEX,.HL,.MSG)
"RTN","MPIFSA2",192,0)
 Q
"RTN","MPIFSA2",193,0)
BLDRDF(MPIOUT,MPICNT,MPIRS,MPICS) ;
"RTN","MPIFSA2",194,0)
 S MPIOUT(MPICNT)="RDF"_HL("FS")_32_HL("FS") N T,I F I=1:1 S T=$T(FIELD+I) Q:$P(T,";",3)=""  D
"RTN","MPIFSA2",195,0)
 . I I=1 S MPIFLDV=$P(T,";",3)_MPICS_$P(T,";",5)_MPICS_$P(T,";",6)
"RTN","MPIFSA2",196,0)
 . I I'=1 S MPIFLDV=MPIRS_$P(T,";",3)_MPICS_$P(T,";",5)_MPICS_$P(T,";",6)
"RTN","MPIFSA2",197,0)
  .N XLEN,TOTLEN
"RTN","MPIFSA2",198,0)
 . S TOTLEN=$L($G(MPIOUT(MPICNT)))+$L(MPIFLDV)
"RTN","MPIFSA2",199,0)
 . I TOTLEN'>245 S MPIOUT(MPICNT)=$G(MPIOUT(MPICNT))_MPIFLDV Q
"RTN","MPIFSA2",200,0)
 . I TOTLEN>245 D
"RTN","MPIFSA2",201,0)
 .. S XLEN=245-$L($G(MPIOUT(MPICNT)))
"RTN","MPIFSA2",202,0)
 .. S MPIOUT(MPICNT)=$G(MPIOUT(MPICNT))_$E(MPIFLDV,1,XLEN),MPICNT=MPICNT+1
"RTN","MPIFSA2",203,0)
 .. S MPIOUT(MPICNT)=$E(MPIFLDV,XLEN+1,245)
"RTN","MPIFSA2",204,0)
 Q
"RTN","MPIFSA3")
0^5^B27819479^B25833370
"RTN","MPIFSA3",1,0)
MPIFSA3 ;SF/CMC,DLR-STAND ALONE QUERY PART 2 ; 8/20/08 9:54am
"RTN","MPIFSA3",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**28,31,35,43,52**;30 Apr 99;Build 7
"RTN","MPIFSA3",3,0)
 ;
"RTN","MPIFSA3",4,0)
RDT(INDEX,HL,MSG) ;
"RTN","MPIFSA3",5,0)
 N LASTNAME,FRSTNAME,SSN,BIRTHDAY,CMOR,NAME,ICN,POBC,POBS,PAST,HEREICN,HERESSN,MIDDLE,MNAME,SUFFIX,PREFIX,SEX,IEN,CMOR2,CLAIM,CASE,NOIS,CUSER,TFN,CMOR3,XXX,POW,MBIRTH,Y,LNGTH,SEQ1,SEQ,RDT,NXT,LNGTH2,LNGTH1,MPIREP,MPICOMP,TCASE
"RTN","MPIFSA3",6,0)
 N SCORE,ALTRSHLD,TKTRSHLD
"RTN","MPIFSA3",7,0)
 S MPICOMP=$E(HL("ECH"),1),MPIREP=$E(HL("ECH"),2)
"RTN","MPIFSA3",8,0)
 S SEQ1=1,SEQ=0,X=0 F  S X=$O(MSG(X)) Q:'X  S LNGTH=$L(MSG(X),HL("FS")) D
"RTN","MPIFSA3",9,0)
 . F Y=1:1:LNGTH S:Y'=1 SEQ=SEQ+1 D
"RTN","MPIFSA3",10,0)
 .. S NXT=$P(MSG(X),HL("FS"),Y) D
"RTN","MPIFSA3",11,0)
 ... I $L($G(RDT(SEQ)))=245 D  Q
"RTN","MPIFSA3",12,0)
 .... I $L(NXT_$G(RDT(SEQ,SEQ1)))>245 S LNGTH1=$L(RDT(SEQ,SEQ1)) S LNGTH2=245-LNGTH1,RDT(SEQ,SEQ1)=$G(RDT(SEQ,SEQ1))_$E(NXT,1,LNGTH2),LNGTH2=LNGTH2+1,NXT=$E(NXT,LNGTH2,$L(NXT)),SEQ1=SEQ1+1
"RTN","MPIFSA3",13,0)
 .... I $L(NXT_$G(RDT(SEQ,SEQ1)))'>245 S RDT(SEQ,SEQ1)=$G(RDT(SEQ,SEQ1))_NXT
"RTN","MPIFSA3",14,0)
 ... I $L(NXT_$G(RDT(SEQ)))>245 S LNGTH1=$L($G(RDT(SEQ))) S LNGTH2=245-LNGTH1,RDT(SEQ)=$G(RDT(SEQ))_$E(NXT,1,LNGTH2),LNGTH2=LNGTH2+1,NXT=$E(NXT,LNGTH2,$L(NXT)) S RDT(SEQ,SEQ1)=NXT
"RTN","MPIFSA3",15,0)
 ... I $L(NXT_$G(RDT(SEQ)))'>245 S RDT(SEQ)=$G(RDT(SEQ))_NXT Q
"RTN","MPIFSA3",16,0)
RDTAL ;
"RTN","MPIFSA3",17,0)
 S FRSTNAME=RDT(6),LASTNAME=RDT(1),MIDDLE=RDT(9),SSN=RDT(2)
"RTN","MPIFSA3",18,0)
 S SUFFIX=RDT(14),PREFIX=RDT(13)
"RTN","MPIFSA3",19,0)
 S NAME=LASTNAME_","_FRSTNAME
"RTN","MPIFSA3",20,0)
 I MIDDLE'="" S NAME=NAME_" "_MIDDLE
"RTN","MPIFSA3",21,0)
 I SUFFIX'="" S NAME=NAME_" "_SUFFIX
"RTN","MPIFSA3",22,0)
 I PREFIX'="" S NAME=NAME_" "_PREFIX
"RTN","MPIFSA3",23,0)
 S ICN=RDT(5),CMOR=RDT(4),CMOR2=CMOR,CMOR3=CMOR
"RTN","MPIFSA3",24,0)
 I $G(CMOR)'="" S IEN=$$LKUP^XUAF4(CMOR) I IEN'="" S CMOR2=$P($$NS^XUAF4(+IEN),"^")
"RTN","MPIFSA3",25,0)
 I $G(SKIP)="Y" K SKIP Q
"RTN","MPIFSA3",26,0)
 S BIRTHDAY=RDT(3)
"RTN","MPIFSA3",27,0)
 I $G(LASTNAME)="" Q
"RTN","MPIFSA3",28,0)
 I $G(BIRTHDAY)]"" S BIRTHDAY=$$FMDATE^HLFNC(BIRTHDAY),BIRTHDAY=$TR($$FMTE^XLFDT(BIRTHDAY,"5D"),"/","-")
"RTN","MPIFSA3",29,0)
 S SEX=RDT(10),CLAIM=RDT(16),MNAME=RDT(15),POBC=RDT(11),POBS=RDT(12)
"RTN","MPIFSA3",30,0)
 S PAST=RDT(8) I $G(PAST)]"" S PAST=$$FMDATE^HLFNC(PAST),PAST=$TR($$FMTE^XLFDT(PAST,"5D"),"/","-")
"RTN","MPIFSA3",31,0)
 S CASE=RDT(17),NOIS=$P(CASE,"/",2),CUSER=$P(CASE,"/",3),TCASE=CASE,CASE=$P(CASE,"/")
"RTN","MPIFSA3",32,0)
 S MBIRTH=RDT(19),POW=RDT(18)
"RTN","MPIFSA3",33,0)
 I POW="N" S POW="No"
"RTN","MPIFSA3",34,0)
 I POW="Y" S POW="Yes"
"RTN","MPIFSA3",35,0)
 S SCORE=$G(RDT(30)),ALTRSHLD=$G(RDT(31)),TKTRSHLD=$G(RDT(32)) ;Match score, Auto Link threshold, Task Threshold
"RTN","MPIFSA3",36,0)
TMP ;New pt. so incrementing index and resetting counter
"RTN","MPIFSA3",37,0)
 K ^TMP("MPIFVQQ",$J,INDEX)
"RTN","MPIFSA3",38,0)
 S ^TMP("MPIFVQQ",$J,INDEX,"DATA")=NAME_"^"_LASTNAME_"^"_SSN_"^"_BIRTHDAY_"^"_CMOR_"^"_ICN_"^"_FRSTNAME_"^^"_PAST_"^"_MIDDLE_"^"_SEX_"^"_POBC_"^"_POBS_"^"_PREFIX_"^"_SUFFIX_"^"_MNAME_"^"_CLAIM_"^"_TCASE_"^"_POW_"^"_MBIRTH
"RTN","MPIFSA3",39,0)
 S ^TMP("MPIFVQQ",$J,INDEX,"DATA")=^TMP("MPIFVQQ",$J,INDEX,"DATA")_"^"_SCORE_"^"_ALTRSHLD_"^"_TKTRSHLD
"RTN","MPIFSA3",40,0)
 ;loop on TF's
"RTN","MPIFSA3",41,0)
 ;I TF2'="" F XXX=1:1 S TTF2=$P(TF2,MPIREP,XXX) Q:TTF2=""  S TFLL(INDEX,XXX)=TTF2
"RTN","MPIFSA3",42,0)
 N LAST,SEQ,ORGLST,TFLL
"RTN","MPIFSA3",43,0)
 I $D(RDT(7)),(RDT(7)'="^^~") N LAST,LASTN S SEQ=1 S LAST=$L(RDT(7),MPIREP) S LASTN=LAST-1 D
"RTN","MPIFSA3",44,0)
 .N X F X=1:1:LAST-1 S TFLL(INDEX,X)=$P(RDT(7),MPIREP,X)
"RTN","MPIFSA3",45,0)
 .I '$D(RDT(7,SEQ)) I $P(RDT(7),MPIREP,LAST)'="" S TFLL(INDEX,LAST)=$P($P(RDT(7),MPIREP,LAST),MPICOMP)
"RTN","MPIFSA3",46,0)
 . N LOOP I $D(RDT(7,SEQ)) S LASTVAL=$P(RDT(7),MPIREP,LAST) S LOOP=LASTN+1 F  Q:'$D(RDT(7,SEQ))  N LAST S LAST=$L(RDT(7,SEQ),MPIREP) D
"RTN","MPIFSA3",47,0)
 ..N X F X=1:1:LAST-1 S TFLL(INDEX,(LOOP))=$S($D(LASTVAL):LASTVAL,1:"")_$P(RDT(7,SEQ),MPIREP,X) K LASTVAL S LOOP=LOOP+1
"RTN","MPIFSA3",48,0)
 ..I '$D(RDT(7,SEQ)) I $P(RDT(7),MPIREP,LAST)'="" S TFLL(INDEX,(LASTN+LAST))=$P($P(RDT(7),MPIREP,LAST),MPICOMP) S LOOP=LOOP+1
"RTN","MPIFSA3",49,0)
 ..I $D(RDT(7,SEQ)) S LASTVAL=$P(RDT(7,SEQ),MPIREP,LAST)
"RTN","MPIFSA3",50,0)
 ..S SEQ=SEQ+1
"RTN","MPIFSA3",51,0)
 ;loop on TFLL to build TF LIST nodes
"RTN","MPIFSA3",52,0)
 S X=0 F  S X=$O(TFLL(INDEX,X)) Q:'X  S ^TMP("MPIFVQQ",$J,INDEX,"TF",X)=TFLL(INDEX,X)
"RTN","MPIFSA3",53,0)
ALIAS ;loop on alias last name
"RTN","MPIFSA3",54,0)
 N LAST,SEQ,ORGLST,AL
"RTN","MPIFSA3",55,0)
 I $D(RDT(20)) N LAST S SEQ=1 S LAST=$L(RDT(20),MPIREP) D
"RTN","MPIFSA3",56,0)
 .N X F X=1:1:LAST-1 S AL(INDEX,X)=$P(RDT(20),MPIREP,X)_","_$P($G(RDT(21)),MPIREP,X)_" "_$P($G(RDT(22)),MPIREP,X)_" "_$P($G(RDT(23)),MPIREP,X)_" "_$P($G(RDT(24)),MPIREP,X)
"RTN","MPIFSA3",57,0)
 .I '$D(RDT(20,SEQ)) I $P(RDT(20),MPIREP,LAST)'="" S AL(INDEX,LAST)=$P(RDT(20),MPIREP,LAST)_","_$P($G(RDT(21)),MPIREP,LAST)_" "_$P($G(RDT(22)),MPIREP,LAST)_" "_$P($G(RDT(23)),MPIREP,LAST)_" "_$P($G(RDT(24)),MPIREP,LAST)
"RTN","MPIFSA3",58,0)
 . I $D(RDT(20,SEQ)) S LASTVAL=$P(RDT(20),MPIREP,LAST) F  Q:'$D(RDT(20,SEQ))  N LAST S LAST=$L(RDT(20,SEQ),MPIREP) D
"RTN","MPIFSA3",59,0)
 ..N X F X=1:1:LAST-1 S AL(INDEX,X)=$S($D(LASTVAL):LASTVAL,1:"")_$P(RDT(20,SEQ),MPIREP,X)_","_$P($G(RDT(21)),MPIREP,X)_" "_$P($G(RDT(22)),MPIREP,X)_" "_$P($G(RDT(23)),MPIREP,X)_" "_$P($G(RDT(24)),MPIREP,X) K LASTVAL
"RTN","MPIFSA3",60,0)
 ..I '$D(RDT(20,SEQ)) I $P(RDT(20),MPIREP,LAST)'="" S AL(INDEX,LAST)=$P($P(RDT(20),MPIREP,LAST),MPICOMP)_","_$P($G(RDT(21)),MPIREP,LAST)_" "_$P($G(RDT(22)),MPIREP,LAST)_" "_$P($G(RDT(23)),MPIREP,LAST)_" "_$P($G(RDT(24)),MPIREP,LAST)
"RTN","MPIFSA3",61,0)
 ..I $D(RDT(20,SEQ)) S LASTVAL=$P(RDT(20,SEQ),MPIREP,LAST)
"RTN","MPIFSA3",62,0)
 ..S SEQ=SEQ+1
"RTN","MPIFSA3",63,0)
 S X=0 F  S X=$O(AL(INDEX,X)) Q:'X  S ^TMP("MPIFVQQ",$J,INDEX,"ALIAS",X)=AL(INDEX,X)
"RTN","MPIFSA3",64,0)
 Q
"RTN","MPIFSAQ")
0^6^B24115575^B13238010
"RTN","MPIFSAQ",1,0)
MPIFSAQ ;SF/CMC-STAND ALONE QUERY ; 10/7/08 12:41pm
"RTN","MPIFSAQ",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,3,8,13,17,21,23,28,35,52**;30 Apr 99;Build 7
"RTN","MPIFSAQ",3,0)
 ;
"RTN","MPIFSAQ",4,0)
VTQ(MPIVAR) ;
"RTN","MPIFSAQ",5,0)
 D VTQ^MPIFSA2(.MPIVAR)
"RTN","MPIFSAQ",6,0)
 Q
"RTN","MPIFSAQ",7,0)
 ;
"RTN","MPIFSAQ",8,0)
INTACTV ;Interactive standalone query - Display Only patient doesn't have to be in Patient file
"RTN","MPIFSAQ",9,0)
 S FLG=0 K DIR,X,Y S DIR(0)="Y",DIR("B")="YES",DIR("A")="Is Patient in the PATIENT file " D ^DIR
"RTN","MPIFSAQ",10,0)
 G:(Y'=1)&(Y'=0) END
"RTN","MPIFSAQ",11,0)
 I Y=1 S FLG=1 D PAT(.MPIVAR)
"RTN","MPIFSAQ",12,0)
 I Y'=1,'$D(MPIVAR) D NOPAT(.MPIVAR)
"RTN","MPIFSAQ",13,0)
 I '$D(MPIVAR("DFN"))&(FLG'=0) G END
"RTN","MPIFSAQ",14,0)
 I +$G(MPIVAR("DOB"))'>0 W !,"DOB is missing - Required field" G END
"RTN","MPIFSAQ",15,0)
 D VTQ^MPIFSA2(.MPIVAR) K DIR,X,Y,MPIVAR,FLG
"RTN","MPIFSAQ",16,0)
 Q
"RTN","MPIFSAQ",17,0)
END K DIR,X,Y,MPIVAR,DIRUT,DTOUT,DUOUT
"RTN","MPIFSAQ",18,0)
 Q
"RTN","MPIFSAQ",19,0)
CLEAN(NAM) ;NAM is the name to be cleaned up, Returned from this function is a clean name
"RTN","MPIFSAQ",20,0)
 N YY,I
"RTN","MPIFSAQ",21,0)
 I NAM?.E1L.E F I=1:1:$L(NAM) S:$E(NAM,I)?1L NAM=$E(NAM,0,I-1)_$C($A(NAM,I)-32)_$E(NAM,I+1,$L(NAM)) ; only uppercase
"RTN","MPIFSAQ",22,0)
 F YY=", ","  " F  Q:'$F(NAM,YY)  S NAM=$E(NAM,1,($F(NAM,YY)-2))_$E(NAM,$F(NAM,YY),$L(NAM)) ; no space after comma and no double spaces
"RTN","MPIFSAQ",23,0)
 F  Q:$E(NAM,$L(NAM))'=" "  S NAM=$E(NAM,1,$L(NAM)-1) ; no space at the end
"RTN","MPIFSAQ",24,0)
 Q NAM
"RTN","MPIFSAQ",25,0)
PAT(MPIVAR) ;patient is in local Patient file
"RTN","MPIFSAQ",26,0)
PATA N DIC,X,Y,DIQ,DR,DA,MPIFAR,DFN,DTOUT,DUOUT
"RTN","MPIFSAQ",27,0)
 S DIC="^DPT(",DIC(0)="AEQZM",DIC("A")="Patient Name: " D ^DIC
"RTN","MPIFSAQ",28,0)
 G:$D(DTOUT)!($D(DUOUT))!(Y="^")!(X="") END
"RTN","MPIFSAQ",29,0)
 I +Y=-1 W !,"Patient not found.  Try Again" G PATA
"RTN","MPIFSAQ",30,0)
 S (DFN,MPIVAR("DFN"))=+Y,MPIVAR("NM")=$P(Y(0),"^"),DIQ="MPIFAR",DR=".09;.03;.02;.131;.111;.112;.113;.114",DIC="^DPT(",DA=+Y,DIQ(0)="I" D EN^DIQ1 K DA
"RTN","MPIFSAQ",31,0)
 S MPIVAR("DOB")=$G(MPIFAR(2,DFN,.03,"I")),MPIVAR("SSN")=$G(MPIFAR(2,DFN,.09,"I")) I MPIVAR("SSN")["P" S MPIVAR("SSN")=""
"RTN","MPIFSAQ",32,0)
 S MPIVAR("SEX")=$G(MPIFAR(2,DFN,.02,"I")),MPIVAR("PHONE")=$G(MPIFAR(2,DFN,.131,"I"))
"RTN","MPIFSAQ",33,0)
 S MPIVAR("ADDR1")=$G(MPIFAR(2,DFN,.111,"I")),MPIVAR("ADDR2")=$G(MPIFAR(2,DFN,.112,"I"))
"RTN","MPIFSAQ",34,0)
 S MPIVAR("ADDR3")=$G(MPIFAR(2,DFN,.113,"I")),MPIVAR("CITY")=$G(MPIFAR(2,DFN,.114,"I"))
"RTN","MPIFSAQ",35,0)
 Q
"RTN","MPIFSAQ",36,0)
NOPAT(MPIVAR) ; patient is not in the local Patient file
"RTN","MPIFSAQ",37,0)
 W !!,"When the patient is NOT in the local PATIENT file, you will be asked",!,"to provide as much information as possible to facilitate the query."  ;**52
"RTN","MPIFSAQ",38,0)
 W !,"You will be asked for patient name, date of birth, Social Security Number,",!,"gender, phone number, and address.  Minimally, you must enter patient name",!,"and date of birth.",!!  ;**52
"RTN","MPIFSAQ",39,0)
NAME N DTOUT,DUOUT,DIR,X,Y,%
"RTN","MPIFSAQ",40,0)
 S DIR(0)="FU^::",DIR("A")="PATIENT NAME (last,first middle)"
"RTN","MPIFSAQ",41,0)
 S DIR("?")="Enter name in the following format: last<comma>first<space>middle" D ^DIR  ;**52
"RTN","MPIFSAQ",42,0)
 G:$D(DTOUT)!($D(DUOUT))!(Y="^") END
"RTN","MPIFSAQ",43,0)
 I (Y="")!($L(Y)>45)!($L(Y)<3) W !,"Name must be 3 to 30 characters, entered as: last<comma>first<space>middle" G NAME  ;**52
"RTN","MPIFSAQ",44,0)
 I (Y?1P.E)!(Y'?1A.ANP)!(Y'[",")!(Y[":")!(Y[";") W !,"Name must be 3 to 30 characters, entered as: last<comma>first<space>middle" G NAME  ;**52
"RTN","MPIFSAQ",45,0)
 I Y'?.UNP F %=1:1:$L(Y) I $E(Y,%)?1L S Y=$E(Y,0,%-1)_$C($A(Y,%)-32)_$E(Y,%+1,999)
"RTN","MPIFSAQ",46,0)
 S MPIVAR("NM")=$$CLEAN(Y)
"RTN","MPIFSAQ",47,0)
DOB K DIR,X,Y S DIR(0)="DU^::AEP",DIR("A")="Date of Birth" D ^DIR
"RTN","MPIFSAQ",48,0)
 G:$D(DTOUT)!($D(DUOUT)) END
"RTN","MPIFSAQ",49,0)
 S MPIVAR("DOB")=Y
"RTN","MPIFSAQ",50,0)
SSN ; ssn is optional
"RTN","MPIFSAQ",51,0)
 K DIR,X,Y S DIR(0)="FUO^9:9:",DIR("A")="9 Digit SSN (No Dashes)" D ^DIR
"RTN","MPIFSAQ",52,0)
 G:$D(DTOUT)!($D(DUOUT)) END
"RTN","MPIFSAQ",53,0)
 I Y'="",Y'?9N W !,"SSN should be 9 numbers" G SSN
"RTN","MPIFSAQ",54,0)
 S MPIVAR("SSN")=Y
"RTN","MPIFSAQ",55,0)
GENDER ; Gender is optional
"RTN","MPIFSAQ",56,0)
 K DIR,X,Y S DIR(0)="SAO^M:MALE;F:FEMALE",DIR("A")="Gender: " D ^DIR
"RTN","MPIFSAQ",57,0)
 G:$D(DTOUT)!($D(DUOUT)) END
"RTN","MPIFSAQ",58,0)
 S MPIVAR("SEX")=Y
"RTN","MPIFSAQ",59,0)
PHONE ; Phone is optional
"RTN","MPIFSAQ",60,0)
 K DIR,X,Y S DIR(0)="FAO^4:20",DIR("A")="Phone Number: " D ^DIR
"RTN","MPIFSAQ",61,0)
 G:$D(DTOUT)!($D(DUOUT)) END
"RTN","MPIFSAQ",62,0)
 S MPIVAR("PHONE")=Y
"RTN","MPIFSAQ",63,0)
ADDR1 ;Address line 1 is optional
"RTN","MPIFSAQ",64,0)
 K DIR,X,Y S DIR(0)="FAO^3:35",DIR("A")="Address Line 1: " D ^DIR
"RTN","MPIFSAQ",65,0)
 G:$D(DTOUT)!($D(DUOUT)) END
"RTN","MPIFSAQ",66,0)
 S MPIVAR("ADDR1")=Y
"RTN","MPIFSAQ",67,0)
ADDR2 ;Address line 2 is optional
"RTN","MPIFSAQ",68,0)
 K DIR,X,Y S DIR(0)="FAO^3:30",DIR("A")="Address Line 2: " D ^DIR
"RTN","MPIFSAQ",69,0)
 G:$D(DTOUT)!($D(DUOUT)) END
"RTN","MPIFSAQ",70,0)
 S MPIVAR("ADDR2")=Y
"RTN","MPIFSAQ",71,0)
ADDR3 ;Address line 3 is optional
"RTN","MPIFSAQ",72,0)
 K DIR,X,Y S DIR(0)="FAO^3:30",DIR("A")="Address Line 3: " D ^DIR
"RTN","MPIFSAQ",73,0)
 G:$D(DTOUT)!($D(DUOUT)) END
"RTN","MPIFSAQ",74,0)
 S MPIVAR("ADDR3")=Y
"RTN","MPIFSAQ",75,0)
CITY ;City is optional
"RTN","MPIFSAQ",76,0)
 K DIR,X,Y S DIR(0)="FAO^2:15",DIR("A")="City: " D ^DIR
"RTN","MPIFSAQ",77,0)
 G:$D(DTOUT)!($D(DUOUT)) END
"RTN","MPIFSAQ",78,0)
 S MPIVAR("CITY")=Y
"RTN","MPIFSAQ",79,0)
 Q
"RTN","MPIFSAQ",80,0)
SEG(SEGMENT,PIECE,CODE) ;Return segment from MPIDC array and kill node
"RTN","MPIFSAQ",81,0)
 N MPINODE,MPIDATA,MPIDONE,MPIC,HOLD K MPIDONE
"RTN","MPIFSAQ",82,0)
 I '$D(MPIC) S MPIC=$E(HL("ECH"))
"RTN","MPIFSAQ",83,0)
 S MPINODE=0
"RTN","MPIFSAQ",84,0)
 F  S MPINODE=$O(MPIDC(MPINODE)) Q:MPINODE=""!($D(MPIDONE))  D
"RTN","MPIFSAQ",85,0)
 .S MPIDATA=MPIDC(MPINODE)
"RTN","MPIFSAQ",86,0)
 .I ($P(MPIDATA,HL("FS"),1)=SEGMENT)&($P($P(MPIDATA,HL("FS"),PIECE),MPIC,1)=CODE) S MPIDONE=1 S HOLD(MPINODE)="" D
"RTN","MPIFSAQ",87,0)
 ..I SEGMENT="RDT" F  S MPINODE=$O(MPIDC(MPINODE)) Q:MPINODE=""  Q:MPIDC(+MPINODE)=""  S MPIDATA=MPIDATA_MPIDC(MPINODE),HOLD(MPINODE)=""
"RTN","MPIFSAQ",88,0)
 I $D(MPIDONE) S MPINODE=0 F  S MPINODE=$O(HOLD(MPINODE)) Q:MPINODE=""  K MPIDC(MPINODE)
"RTN","MPIFSAQ",89,0)
 Q:$D(MPIDONE) $G(MPIDATA)
"RTN","MPIFSAQ",90,0)
 Q ""
"RTN","MPIFVTQ")
0^7^B42786955^B29495992
"RTN","MPIFVTQ",1,0)
MPIFVTQ ;SLC/ARS-BUILD DATA TO QUERY MPI RESPONSE PROCESS (ADDPAT) ; 8/15/08 5:01pm
"RTN","MPIFVTQ",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,9,17,21,23,28,33,35,52**;30 Apr 99;Build 7
"RTN","MPIFVTQ",3,0)
 ;
"RTN","MPIFVTQ",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFVTQ",5,0)
 ;  ^DPT( -9 node check - #2762
"RTN","MPIFVTQ",6,0)
 ;  ^DPT( "MPI" node - #2070
"RTN","MPIFVTQ",7,0)
 ;  EXC, START, STOP ^RGHLLOG - #2796
"RTN","MPIFVTQ",8,0)
 ;  NAME^VAFCPID2 - #3492
"RTN","MPIFVTQ",9,0)
 ;
"RTN","MPIFVTQ",10,0)
 Q  ;NOT an entry point
"RTN","MPIFVTQ",11,0)
 ;
"RTN","MPIFVTQ",12,0)
VTQ1(MPIIT,MPIOUT,HL,MPIQRYNM,MPISND) ;
"RTN","MPIFVTQ",13,0)
 ;MPIIT=DFN in patient file.
"RTN","MPIFVTQ",14,0)
 ;MPIOUT=Array you want the VTQ/RDF put into.
"RTN","MPIFVTQ",15,0)
 ;HL=Array of encoding characters and Field separator.
"RTN","MPIFVTQ",16,0)
 ;MPIQRYNM=Name of query to put into message.
"RTN","MPIFVTQ",17,0)
 ;MPISND (OPTIONAL) = item #'s separated by ; to be used to query.
"RTN","MPIFVTQ",18,0)
 ;  default is DOB;SSN;LAST NAME;FIRST NAME;SUFFIX OF NAME;SEX;DOD;
"RTN","MPIFVTQ",19,0)
 ;  POB-CITY;POB-STATE;MIDDLE NAME
"RTN","MPIFVTQ",20,0)
 ;
"RTN","MPIFVTQ",21,0)
 ;If invalid DFN, Patient Merged, if ICN already assigned, Test SSN, the VTQ query is not built and -1^'error message' returned in MPIOUT(0).
"RTN","MPIFVTQ",22,0)
 ;
"RTN","MPIFVTQ",23,0)
 ;If DOB does not contain a 7 digit date OR if name is not present, -1^Missing Required fields will be returned in MPIOUT(0).
"RTN","MPIFVTQ",24,0)
 ;
"RTN","MPIFVTQ",25,0)
 ;If patient has a date of death, the VTQ query is built with MPIOUT(0) returned with 0^Patient has date of death.  Programmer to decide if VTQ should be sent.
"RTN","MPIFVTQ",26,0)
 ;
"RTN","MPIFVTQ",27,0)
 N MPITEST,MPISSN,MPIDTH,MPINM,MPIDOB,ERR,MPITST11,MPITST13
"RTN","MPIFVTQ",28,0)
 S MPIOUT(0)=""
"RTN","MPIFVTQ",29,0)
 I '$D(MPISND) S MPISND="00122;00108.1;00108.2;00110;00740;00111;00108.4;00126.1;00126.2;00108.3;00114.1;00114.2;00114.3;00114.4;00114.5;00114.6;00114.8;00114.9;00116;00119;00125;00127;00100"
"RTN","MPIFVTQ",30,0)
 ;validation check
"RTN","MPIFVTQ",31,0)
 I '$D(HL) S MPIOUT(0)="-1^no encoding characters" Q
"RTN","MPIFVTQ",32,0)
 I $G(HL("FS"))=""!($G(HL("ECH"))="") S MPIOUT(0)="-1^no encoding characters" Q
"RTN","MPIFVTQ",33,0)
 I MPIIT="" S MPIOUT(0)="-1^invalid DFN" Q
"RTN","MPIFVTQ",34,0)
 I $G(^DPT(MPIIT,-9))'="" S MPIOUT(0)="-1^Patient merged "_^DPT(MPIIT,-9) Q
"RTN","MPIFVTQ",35,0)
 S MPIMPI=$G(^DPT(MPIIT,"MPI"))
"RTN","MPIFVTQ",36,0)
 S:MPIMPI'="" MPIZICN=$P(^DPT(MPIIT,"MPI"),"^",1)
"RTN","MPIFVTQ",37,0)
 I '$D(MPIFRES),$G(MPIZICN)'="" S MPIOUT(0)="-1^ICN already assigned "_MPIZICN Q
"RTN","MPIFVTQ",38,0)
 S MPITEST=$G(^DPT(MPIIT,0))
"RTN","MPIFVTQ",39,0)
 S MPITST11=$G(^DPT(MPIIT,.11)),MPITST13=$G(^DPT(MPIIT,.13))
"RTN","MPIFVTQ",40,0)
 I MPITEST="" S MPIOUT(0)="-1^invalid DFN" Q
"RTN","MPIFVTQ",41,0)
 I $P(MPITEST,"^")=""&($P(MPITEST,"^",2)="")&($P(MPITEST,"^",3)="")&($P(MPITEST,"^",9)="") D  Q
"RTN","MPIFVTQ",42,0)
 .K MPIARR
"RTN","MPIFVTQ",43,0)
 .S MPIOUT(0)="-1^stub entry in DPT"
"RTN","MPIFVTQ",44,0)
 .S MPIARR(991.01)="@",MPIARR(991.02)="@",MPIARR(991.03)="@",MPIARR(991.05)="@",MPIARR(992)=MPIZICN,MPIARR(993)=+$$SITE^VASITE()
"RTN","MPIFVTQ",45,0)
 .S ERR=$$DELALLTF^VAFCTFU(MPIZICN) ;clean up tf list
"RTN","MPIFVTQ",46,0)
 .S ERR=$$UPDATE^MPIFAPI(MPIIT,"MPIARR",1,1) K MPIARR
"RTN","MPIFVTQ",47,0)
 .;PATCH 33 - stub entry with local, remove local and don't send to MPI
"RTN","MPIFVTQ",48,0)
 S MPISSN=$P(MPITEST,"^",9)
"RTN","MPIFVTQ",49,0)
 S MPIDTH=""
"RTN","MPIFVTQ",50,0)
 S:$G(^DPT(MPIIT,.35))'="" MPIDTH=$P(^DPT(MPIIT,.35),"^",1)
"RTN","MPIFVTQ",51,0)
 I $G(MPIDTH)'="" S MPIOUT(0)="0^Patient has Date of Death "_MPIDTH
"RTN","MPIFVTQ",52,0)
 D VTQC(MPISSN,MPIDTH,MPISND,.HL,MPIQRYNM,.MPIOUT,MPIIT)
"RTN","MPIFVTQ",53,0)
 Q
"RTN","MPIFVTQ",54,0)
EXC(IEN) ;
"RTN","MPIFVTQ",55,0)
 Q:'$D(^DPT(IEN))
"RTN","MPIFVTQ",56,0)
 D LOCAL^MPIFQ3(IEN)
"RTN","MPIFVTQ",57,0)
 D START^RGHLLOG()
"RTN","MPIFVTQ",58,0)
 D EXC^RGHLLOG(209,"DFN= "_IEN_" is Missing Required Field(s)",IEN)
"RTN","MPIFVTQ",59,0)
 D STOP^RGHLLOG()
"RTN","MPIFVTQ",60,0)
 Q
"RTN","MPIFVTQ",61,0)
 ;
"RTN","MPIFVTQ",62,0)
VTQC(MPISSN,MPIDTH,MPISND,HL,MPIQRYNM,MPIOUT,MPIIT) ;
"RTN","MPIFVTQ",63,0)
 N MPIPOB,MPIPOBS,MPINM,MPI2MN,MPI1NM,QUERY,MPIDOB,RDF,MPIMOD
"RTN","MPIFVTQ",64,0)
 N MPIHDTH,MPIZDOB,MPIXDOB,MPIMPI,MPIZICN,QUEDOB,MPI2NM,MPICS,MPIESC,MPIHDOB,MPIMNM,MPIMN
"RTN","MPIFVTQ",65,0)
 N MPINMSFX,MPIRS,MPISCS,MPISEX,MPIZLOC,MPISTR1,MPISTR2,MPISTR3,MPICITY,MPISTPRV,XNOD
"RTN","MPIFVTQ",66,0)
 N MPIZIPPL,MPICNTRY,MPICNTY,MPIRESPH,MPIMRTST,MPIETH,MPIDLT,MPIMBI
"RTN","MPIFVTQ",67,0)
 I $G(MPIQRYNM)="" S MPIQRYNM="VTQ_PID_ICN_LOAD_1"
"RTN","MPIFVTQ",68,0)
 S MPICS=$E(HL("ECH"),1)
"RTN","MPIFVTQ",69,0)
 S MPIRS=$E(HL("ECH"),2)
"RTN","MPIFVTQ",70,0)
 S MPISCS=$E(HL("ECH"),4)
"RTN","MPIFVTQ",71,0)
 S MPIESC=$E(HL("ECH"),3)
"RTN","MPIFVTQ",72,0)
 ;build RDF as the third segment
"RTN","MPIFVTQ",73,0)
 D BLDRDF^MPIFSA2(.MPIOUT,3,MPIRS,MPICS)
"RTN","MPIFVTQ",74,0)
 S QUERY="VTQ"_HL("FS")_MPIIT_HL("FS")_"T"_HL("FS")_MPIQRYNM_HL("FS")_"ICN"_HL("FS")
"RTN","MPIFVTQ",75,0)
 ;
"RTN","MPIFVTQ",76,0)
 I MPISND["00108" S MPINM=$P(MPITEST,"^") D NAME^VAFCPID2(MPIIT,.MPINM) ;agressive name reformatting
"RTN","MPIFVTQ",77,0)
 ; ^ sending all or part of name
"RTN","MPIFVTQ",78,0)
 I MPISND["00108.1" S MPI2NM=$P(MPINM,",",1) I MPI2NM'="" S QUERY=QUERY_"@00108.1"_MPICS_"EQ"_MPICS_MPI2NM
"RTN","MPIFVTQ",79,0)
 ; ^ sending last name
"RTN","MPIFVTQ",80,0)
 ;I MPISND["00122"&(MPISSN'="")&(MPISSN'["P") S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00122"_MPICS_"EQ"_MPICS_MPISSN
"RTN","MPIFVTQ",81,0)
 ; ^ **35 SENDING PSUEDO TO KNOW THAT THE SITE HAS A VALUE FOR SSN
"RTN","MPIFVTQ",82,0)
 I MPISND["00122"&(MPISSN'="") S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00122"_MPICS_"EQ"_MPICS_MPISSN
"RTN","MPIFVTQ",83,0)
 ; ^ sending SSN
"RTN","MPIFVTQ",84,0)
 I MPISND["00108.2" S MPI1NM=$P(MPINM,",",2),MPI1NM=$P(MPI1NM," ",1) I MPI1NM'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00108.2"_MPICS_"EQ"_MPICS_MPI1NM
"RTN","MPIFVTQ",85,0)
 ; ^ sending first name
"RTN","MPIFVTQ",86,0)
 I MPISND["00110" D
"RTN","MPIFVTQ",87,0)
 .S MPIDOB=$P(MPITEST,"^",3)
"RTN","MPIFVTQ",88,0)
 .Q:MPIDOB=""
"RTN","MPIFVTQ",89,0)
 .S MPIHDOB=$$HLDATE^HLFNC(MPIDOB)
"RTN","MPIFVTQ",90,0)
 .; send date of birth (convert to hl7 date format)
"RTN","MPIFVTQ",91,0)
 .S MPIMOD=MPIDOB#100
"RTN","MPIFVTQ",92,0)
 .I MPIQRYNM'="VTQ_PID_ICN_LOAD_1" S MPIZDOB=MPICS_"AND"_MPIRS_"@00110"_MPICS_"GN"_MPICS_MPIHDOB
"RTN","MPIFVTQ",93,0)
 .I MPIQRYNM="VTQ_PID_ICN_LOAD_1" S MPIZDOB=MPICS_"AND"_MPIRS_"@00110"_MPICS_"EQ"_MPICS_MPIHDOB
"RTN","MPIFVTQ",94,0)
 .S MPIXDOB=MPICS_"AND"_MPIRS_"@00110"_MPICS_"EQ"_MPICS_MPIHDOB
"RTN","MPIFVTQ",95,0)
 .S QUEDOB=$S(MPIMOD>0:MPIXDOB,1:MPIZDOB)
"RTN","MPIFVTQ",96,0)
 .S QUERY=QUERY_QUEDOB
"RTN","MPIFVTQ",97,0)
 ; ^ sending date of birth
"RTN","MPIFVTQ",98,0)
 I $D(MPIDTH),(MPISND["00740")&(MPIDTH'="") S MPIHDTH=$$HLDATE^HLFNC(MPIDTH),QUERY=QUERY_MPICS_"AND"_MPIRS_"@00740"_MPICS_"EQ"_MPICS_MPIHDTH
"RTN","MPIFVTQ",99,0)
 ; ^ sending date of death
"RTN","MPIFVTQ",100,0)
 I MPISND["00111" S:$G(^DPT(MPIIT,0))'="" MPISEX=$P(^DPT(MPIIT,0),"^",2) I MPISEX'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00111"_MPICS_"EQ"_MPICS_MPISEX
"RTN","MPIFVTQ",101,0)
 ; ^ sending Sex
"RTN","MPIFVTQ",102,0)
 I MPISND["00108.4" S MPI1NM=$P(MPINM,",",2),MPINMSFX=$P(MPI1NM," ",3) I MPINMSFX'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00108.4"_MPICS_"EQ"_MPICS_MPINMSFX
"RTN","MPIFVTQ",103,0)
 ; ^ sending suffix name
"RTN","MPIFVTQ",104,0)
 I MPISND["00126.1" S MPIPOB=$P(^DPT(MPIIT,0),"^",11) I MPIPOB'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00126.1"_MPICS_"EQ"_MPICS_MPIPOB
"RTN","MPIFVTQ",105,0)
 ; send place of birth - city
"RTN","MPIFVTQ",106,0)
 I MPISND["00126.2" S MPIPOBS=$P(^DPT(MPIIT,0),"^",12) I MPIPOBS'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00126.2"_MPICS_"EQ"_MPICS_$P($G(^DIC(5,+MPIPOBS,0)),"^",2)
"RTN","MPIFVTQ",107,0)
 ; send place of birth - state
"RTN","MPIFVTQ",108,0)
 I MPISND["00108.3" S MPIMN=$P($P(MPINM,",",2)," ",2) I MPIMN'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00108.3"_MPICS_"EQ"_MPICS_MPIMN
"RTN","MPIFVTQ",109,0)
 ; send middle name
"RTN","MPIFVTQ",110,0)
 ; **52 - Initiate project
"RTN","MPIFVTQ",111,0)
 ; get address data
"RTN","MPIFVTQ",112,0)
 D ADDR(MPITST11)
"RTN","MPIFVTQ",113,0)
 I MPISND["00114.1"&(MPISTR1'="") S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00114.1"_MPICS_"EQ"_MPICS_MPISTR1
"RTN","MPIFVTQ",114,0)
 ; ^ send Street address line 1
"RTN","MPIFVTQ",115,0)
 I MPISND["00114.2"&(MPISTR2'="") S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00114.2"_MPICS_"EQ"_MPICS_MPISTR2
"RTN","MPIFVTQ",116,0)
 ; ^ send Street Address Line 2
"RTN","MPIFVTQ",117,0)
 I MPISND["00114.3"&(MPICITY'="") S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00114.3"_MPICS_"EQ"_MPICS_MPICITY
"RTN","MPIFVTQ",118,0)
 ; ^ send City
"RTN","MPIFVTQ",119,0)
 ;I MPISND["00114.4"&(MPISTPRV'="") S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00114.4"_MPICS_"EQ"_MPICS_MPISTPRV
"RTN","MPIFVTQ",120,0)
 ; ^ send State/Province depending on US or Foreign address
"RTN","MPIFVTQ",121,0)
 ;I MPISND["00114.5"&(MPIZIPPL'="") S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00114.5"_MPICS_"EQ"_MPICS_MPIZIPPL
"RTN","MPIFVTQ",122,0)
 ; ^ send Zip code/ Postal code depending on US or Foreign address
"RTN","MPIFVTQ",123,0)
 ;I MPISND["00114.6"&(MPICNTRY'="") S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00114.6"_MPICS_"EQ"_MPICS_MPICNTRY
"RTN","MPIFVTQ",124,0)
 ; ^ send Country
"RTN","MPIFVTQ",125,0)
 I MPISND["00114.8"&(MPISTR3'="") S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00114.8"_MPICS_"EQ"_MPICS_MPISTR3
"RTN","MPIFVTQ",126,0)
 ; ^ send Address Line 3
"RTN","MPIFVTQ",127,0)
 ;I MPISND["00114.9"&(MPICNTY'="") S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00114.9"_MPICS_"EQ"_MPICS_MPICNTY
"RTN","MPIFVTQ",128,0)
 ; ^ send County
"RTN","MPIFVTQ",129,0)
 I MPISND["00116" S MPIRESPH=$P(MPITST13,"^") I MPIRESPH'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00116"_MPICS_"EQ"_MPICS_MPIRESPH
"RTN","MPIFVTQ",130,0)
 ; ^ send Residence Phone
"RTN","MPIFVTQ",131,0)
 ;I MPISND["00119" S MPIMRTST=$P(MPITEST,"^",5) I MPIMRTST'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00119"_MPICS_"EQ"_MPICS_MPIMRTST
"RTN","MPIFVTQ",132,0)
 ; ^ send Marital Status
"RTN","MPIFVTQ",133,0)
 ;I MPISND["00125" S XNOD=$O(^DPT(MPIIT,.06,"")) I XNOD'="" S MPIETH=$P($G(^DPT(MPIIT,.06,XNOD,0)),"^") I MPIETH'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00125"_MPICS_"EQ"_MPICS_MPIETH
"RTN","MPIFVTQ",134,0)
 ; ^ send Ethnicity
"RTN","MPIFVTQ",135,0)
 ;I MPISND["00127" S MPIMBI=$P($G(^DPT(MPIIT,"MPIMB")),"^") I MPIMBI'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00127"_MPICS_"EQ"_MPICS_MPIMBI
"RTN","MPIFVTQ",136,0)
 ; ^ send Multiple Birth Indicator
"RTN","MPIFVTQ",137,0)
 ;S MPIDLT=$$GETDLT(MPIIT)
"RTN","MPIFVTQ",138,0)
 ;I MPISND["00100"&(MPIDLT'="") S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00100"_MPICS_"EQ"_MPICS_MPIDLT
"RTN","MPIFVTQ",139,0)
 ; ^ send Date Last Treated
"RTN","MPIFVTQ",140,0)
 I $G(MPIOUT(0))="" S MPIOUT(0)="1^good data"
"RTN","MPIFVTQ",141,0)
 S MPIOUT(2)=QUERY
"RTN","MPIFVTQ",142,0)
 Q
"RTN","MPIFVTQ",143,0)
GETDLT(MPIIT) ;Get Date Last Treated
"RTN","MPIFVTQ",144,0)
 N TFIEN,TFZN
"RTN","MPIFVTQ",145,0)
 S TFIEN=$O(^DGCN(391.91,"APAT",MPIIT,+$$SITE^VASITE,0))
"RTN","MPIFVTQ",146,0)
 I $G(TFIEN)'="" S TFZN=^DGCN(391.91,TFIEN,0)
"RTN","MPIFVTQ",147,0)
 Q $P($G(TFZN),"^",3)
"RTN","MPIFVTQ",148,0)
 ;
"RTN","MPIFVTQ",149,0)
ADDR(MPITST11) ;Get Address information
"RTN","MPIFVTQ",150,0)
 ;
"RTN","MPIFVTQ",151,0)
 S MPISTR1=$P($G(MPITST11),"^") ;Street address line 1
"RTN","MPIFVTQ",152,0)
 S MPISTR2=$P($G(MPITST11),"^",2) ;Street address line 2
"RTN","MPIFVTQ",153,0)
 S MPISTR3=$P($G(MPITST11),"^",3) ;Street address line 3
"RTN","MPIFVTQ",154,0)
 S MPICITY=$P($G(MPITST11),"^",4) ;City
"RTN","MPIFVTQ",155,0)
 ;S MPICNTRY=$P($G(MPITST11),"^",10) ;Country
"RTN","MPIFVTQ",156,0)
 ;S MPICNTY=$P($G(MPITST11),"^",7) ;County
"RTN","MPIFVTQ",157,0)
 ;I MPICNTRY=""!(MPICNTRY=1) D
"RTN","MPIFVTQ",158,0)
 ;. ;Have USA address
"RTN","MPIFVTQ",159,0)
 ;. S MPISTPRV=$P($G(MPITST11),"^",5) ;State
"RTN","MPIFVTQ",160,0)
 ;. S MPIZIPPL=$P($G(MPITST11),"^",6) ;Zip code
"RTN","MPIFVTQ",161,0)
 ;I MPICNTRY'="",(MPICNTRY'=1) D
"RTN","MPIFVTQ",162,0)
 ;. ;Foreign Country
"RTN","MPIFVTQ",163,0)
 ;. S MPISTPRV=$P($G(MPITST11),"^",8) ;Province
"RTN","MPIFVTQ",164,0)
 ;. S MPIZIPPL=$P($G(MPITST11),"^",9) ;Postal code
"RTN","MPIFVTQ",165,0)
 Q
"VER")
8.0^22.0
"BLD",2624,6)
^48
**END**
**END**
