Released PSB*3*37 SEQ #31
Extracted from mail message
**KIDS**:PSB*3.0*37^

**INSTALL NAME**
PSB*3.0*37
"BLD",6399,0)
PSB*3.0*37^BAR CODE MED ADMIN^0^3080512^y
"BLD",6399,1,0)
^^10^10^3071214^
"BLD",6399,1,1,0)
This patch contains miscellaneous fixes for the BCMA Contingency plan 
"BLD",6399,1,2,0)
backup system.
"BLD",6399,1,3,0)
 
"BLD",6399,1,4,0)
This patch addresses the following remedy tickets:
"BLD",6399,1,5,0)
HD139965 -- Patient data not available on clients after PSB*3.0*8
"BLD",6399,1,6,0)
HD150133 -- Problem with new Contigency set up.
"BLD",6399,1,7,0)
HD189870 -- Variable needs to be NEW'd
"BLD",6399,1,8,0)
 
"BLD",6399,1,9,0)
This patch also contains an enhancement to the BCBU user init 
"BLD",6399,1,10,0)
functionality.
"BLD",6399,4,0)
^9.64PA^^
"BLD",6399,6.3)
10
"BLD",6399,"ABPKG")
n
"BLD",6399,"KRN",0)
^9.67PA^8989.52^19
"BLD",6399,"KRN",.4,0)
.4
"BLD",6399,"KRN",.401,0)
.401
"BLD",6399,"KRN",.402,0)
.402
"BLD",6399,"KRN",.403,0)
.403
"BLD",6399,"KRN",.5,0)
.5
"BLD",6399,"KRN",.84,0)
.84
"BLD",6399,"KRN",3.6,0)
3.6
"BLD",6399,"KRN",3.8,0)
3.8
"BLD",6399,"KRN",9.2,0)
9.2
"BLD",6399,"KRN",9.8,0)
9.8
"BLD",6399,"KRN",9.8,"NM",0)
^9.68A^6^4
"BLD",6399,"KRN",9.8,"NM",1,0)
ALPBINP^^0^B61914716
"BLD",6399,"KRN",9.8,"NM",2,0)
ALPBUTL1^^0^B35747915
"BLD",6399,"KRN",9.8,"NM",5,0)
ALPBGEN1^^0^B22399656
"BLD",6399,"KRN",9.8,"NM",6,0)
ALPBPWRD^^0^B51146671
"BLD",6399,"KRN",9.8,"NM","B","ALPBGEN1",5)

"BLD",6399,"KRN",9.8,"NM","B","ALPBINP",1)

"BLD",6399,"KRN",9.8,"NM","B","ALPBPWRD",6)

"BLD",6399,"KRN",9.8,"NM","B","ALPBUTL1",2)

"BLD",6399,"KRN",19,0)
19
"BLD",6399,"KRN",19.1,0)
19.1
"BLD",6399,"KRN",101,0)
101
"BLD",6399,"KRN",409.61,0)
409.61
"BLD",6399,"KRN",771,0)
771
"BLD",6399,"KRN",870,0)
870
"BLD",6399,"KRN",8989.51,0)
8989.51
"BLD",6399,"KRN",8989.51,"NM",0)
^9.68A^1^1
"BLD",6399,"KRN",8989.51,"NM",1,0)
PSB BKUP DOM FILTER^^0
"BLD",6399,"KRN",8989.51,"NM","B","PSB BKUP DOM FILTER",1)

"BLD",6399,"KRN",8989.52,0)
8989.52
"BLD",6399,"KRN",8989.52,"NM",0)
^9.68A^^
"BLD",6399,"KRN",8994,0)
8994
"BLD",6399,"KRN","B",.4,.4)

"BLD",6399,"KRN","B",.401,.401)

"BLD",6399,"KRN","B",.402,.402)

"BLD",6399,"KRN","B",.403,.403)

"BLD",6399,"KRN","B",.5,.5)

"BLD",6399,"KRN","B",.84,.84)

"BLD",6399,"KRN","B",3.6,3.6)

"BLD",6399,"KRN","B",3.8,3.8)

"BLD",6399,"KRN","B",9.2,9.2)

"BLD",6399,"KRN","B",9.8,9.8)

"BLD",6399,"KRN","B",19,19)

"BLD",6399,"KRN","B",19.1,19.1)

"BLD",6399,"KRN","B",101,101)

"BLD",6399,"KRN","B",409.61,409.61)

"BLD",6399,"KRN","B",771,771)

"BLD",6399,"KRN","B",870,870)

"BLD",6399,"KRN","B",8989.51,8989.51)

"BLD",6399,"KRN","B",8989.52,8989.52)

"BLD",6399,"KRN","B",8994,8994)

"BLD",6399,"QUES",0)
^9.62^^
"BLD",6399,"REQB",0)
^9.611^1^1
"BLD",6399,"REQB",1,0)
PSB*3.0*8^2
"BLD",6399,"REQB","B","PSB*3.0*8",1)

"KRN",8989.5,4580,0)
536;DIC(9.4,^PSB BKUP DOM FILTER^1
"KRN",8989.5,4580,1)
1
"KRN",8989.51,447,-1)
0^1
"KRN",8989.51,447,0)
PSB BKUP DOM FILTER^Filter out DOM patients^0
"KRN",8989.51,447,1)
Y^^Should the contingency backup filter out DOM patients?
"KRN",8989.51,447,20,0)
^8989.512^5^5^3071129^^
"KRN",8989.51,447,20,1,0)
This parameter is used by the BCMA backup system to determine if DOM 
"KRN",8989.51,447,20,2,0)
patients are included in the backup.  If the value is set to YES, DOM 
"KRN",8989.51,447,20,3,0)
patients will be filtered out of the backup and will not be sent to the 
"KRN",8989.51,447,20,4,0)
workstation.  If the value is NO or blank, DOM patients will be sent to 
"KRN",8989.51,447,20,5,0)
the backup workstation.
"KRN",8989.51,447,30,0)
^8989.513I^1^1
"KRN",8989.51,447,30,1,0)
1^9.4
"MBREQ")
0
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",536,-1)
1^1
"PKG",536,0)
BAR CODE MED ADMIN^PSB^BAR CODE MEDICATION ADMINISTRATION
"PKG",536,20,0)
^9.402P^^
"PKG",536,22,0)
^9.49I^1^1
"PKG",536,22,1,0)
3.0^3040224^3040819^11874
"PKG",536,22,1,"PAH",1,0)
37^3080512
"PKG",536,22,1,"PAH",1,1,0)
^^10^10^3080512
"PKG",536,22,1,"PAH",1,1,1,0)
This patch contains miscellaneous fixes for the BCMA Contingency plan 
"PKG",536,22,1,"PAH",1,1,2,0)
backup system.
"PKG",536,22,1,"PAH",1,1,3,0)
 
"PKG",536,22,1,"PAH",1,1,4,0)
This patch addresses the following remedy tickets:
"PKG",536,22,1,"PAH",1,1,5,0)
HD139965 -- Patient data not available on clients after PSB*3.0*8
"PKG",536,22,1,"PAH",1,1,6,0)
HD150133 -- Problem with new Contigency set up.
"PKG",536,22,1,"PAH",1,1,7,0)
HD189870 -- Variable needs to be NEW'd
"PKG",536,22,1,"PAH",1,1,8,0)
 
"PKG",536,22,1,"PAH",1,1,9,0)
This patch also contains an enhancement to the BCBU user init 
"PKG",536,22,1,"PAH",1,1,10,0)
functionality.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","ALPBGEN1")
0^5^B22399656^B21891202
"RTN","ALPBGEN1",1,0)
ALPBGEN1 ;SFVAMC/JC - Parse and File HL7 PMU messages ;05/10/07
"RTN","ALPBGEN1",2,0)
 ;;3.0;BAR CODE MED ADMIN;**8,37**;Mar 2004;Build 10
"RTN","ALPBGEN1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ALPBGEN1",4,0)
 Q
"RTN","ALPBGEN1",5,0)
 ;
"RTN","ALPBGEN1",6,0)
PARSIT ;PARSE MESSAGE ON RECEIVING SIDE
"RTN","ALPBGEN1",7,0)
 N FS,EC,CS,RS,ESC,SS,EEC,EFS,ECS,ERS,ESS,ALPBID,ALPBKY,ALPBMENU,ALPBMT,ALPBVC,DATE,DIK,DLAYGO,STF
"RTN","ALPBGEN1",8,0)
 S FS=$G(HL("FS")) I FS="" W !,"NO SEPARATOR" Q:FS=""  ;Field separator
"RTN","ALPBGEN1",9,0)
 S EC=$G(HL("ECH")) Q:EC=""  ;Encoding Charaters
"RTN","ALPBGEN1",10,0)
 S CS=$E(EC) ;Component separator
"RTN","ALPBGEN1",11,0)
 S RS=$E(EC,2) ;Repitition separator
"RTN","ALPBGEN1",12,0)
 S ESC=$E(EC,3) ;Escape character
"RTN","ALPBGEN1",13,0)
 S SS=$E(EC,4) ;Subcomponent separator
"RTN","ALPBGEN1",14,0)
 S EEC=ESC_"E"_ESC ;escaped escape character
"RTN","ALPBGEN1",15,0)
 S EFS=ESC_"F"_ESC ;escaped field sep
"RTN","ALPBGEN1",16,0)
 S ECS=ESC_"S"_ESC ;escaped component sep
"RTN","ALPBGEN1",17,0)
 S ERS=ESC_"R"_ESC ; escaped repitition sep
"RTN","ALPBGEN1",18,0)
 S ESS=ESC_"T"_ESC ;escaped subcomponent separator
"RTN","ALPBGEN1",19,0)
 N ALPBI,ALBPJ,ALPBX,ALPBAC,ACLPVC,ALPBSSN,ALPBERR,ALPBNAM,ALPBTRM
"RTN","ALPBGEN1",20,0)
 F  X HLNEXT Q:$G(HLQUIT)'>0  D
"RTN","ALPBGEN1",21,0)
 . I $E(HLNODE,1,3)="EVN" S ALPBMT=$P(HLNODE,2)
"RTN","ALPBGEN1",22,0)
 . I $E(HLNODE,1,3)="STF" S STF=$E(HLNODE,5,9999) D PSTF
"RTN","ALPBGEN1",23,0)
 Q
"RTN","ALPBGEN1",24,0)
PSTF ;Process STF segment
"RTN","ALPBGEN1",25,0)
 S ALPBKY=$P(STF,FS,1) Q:ALPBKY'[200_CS_"VISTA"
"RTN","ALPBGEN1",26,0)
 S ALPBID=$P(STF,FS,2) S ALPBSSN=$E(ALPBID,1,9),ALPBAC=$P(ALPBID,RS,2),ALPBVC=$P(ALPBID,RS,3) D
"RTN","ALPBGEN1",27,0)
 . S ALPBSSN=$TR(ALPBSSN,"-","")
"RTN","ALPBGEN1",28,0)
 . I ALPBAC']"" S ALERR("ACCESS")="MISSING ACCESS CODE"
"RTN","ALPBGEN1",29,0)
 . I ALPBVC']"" S ALERR("VERIFY")="MISSING VERIFY CODE"
"RTN","ALPBGEN1",30,0)
 . ;Unescape Access Code
"RTN","ALPBGEN1",31,0)
 . S ALPBAC=$$UNESC(ALPBAC)
"RTN","ALPBGEN1",32,0)
 . ;Unescape Verify Code
"RTN","ALPBGEN1",33,0)
 . S ALPBVC=$$UNESC(ALPBVC)
"RTN","ALPBGEN1",34,0)
 S ALPBNAM=$P(STF,FS,3),ALPBNAM=$P(ALPBNAM,CS,1)_","_$P(ALPBNAM,CS,2)_" "_$P(ALPBNAM,CS,3)_" "_$P(ALPBNAM,CS,4) I ALPBNAM["  " S ALPBNAM=$TR(ALPBNAM," ","") I ALPBNAM']"" S ALERR("NAME")="MISSING NAME"
"RTN","ALPBGEN1",35,0)
 I $D(ALERR) G PERR
"RTN","ALPBGEN1",36,0)
 S ALPBDIS=$S($P(STF,FS,7)="I":1,1:0)
"RTN","ALPBGEN1",37,0)
 I $P(STF,FS,13)]"" S ALPBTRM=$$HL7TFM^XLFDT($P(STF,FS,13),"L")
"RTN","ALPBGEN1",38,0)
FILE ;Store File 200 data on backup system
"RTN","ALPBGEN1",39,0)
 N Y,DIC,DIE,DA,DR
"RTN","ALPBGEN1",40,0)
 Q:'$D(ALPBNAM)
"RTN","ALPBGEN1",41,0)
 Q:$L(ALPBSSN)'=9
"RTN","ALPBGEN1",42,0)
 ;Try exact SSn lookup first
"RTN","ALPBGEN1",43,0)
 K Y S DIC="^VA(200,",DIC(0)="X",X=ALPBSSN,D="SSN" D IX^DIC
"RTN","ALPBGEN1",44,0)
 ;S DLAYGO=200,DIC="^VA(200,",DIC(0)="LM",X=ALPBNAM D ^DIC K DIC,DA,DR
"RTN","ALPBGEN1",45,0)
 ;If SSN lookup fails, try name lookup and add
"RTN","ALPBGEN1",46,0)
 I +Y<1 S DLAYGO=200,DIC="^VA(200,",DIC(0)="LM",X=ALPBNAM D ^DIC K DIC,DA,DR
"RTN","ALPBGEN1",47,0)
 I +Y>0 S (ALPBDA,DA,DUZ)=+Y S ALPBMENU=$O(^DIC(19,"B","PSB BCBU WRKSTN MAIN",0)) D
"RTN","ALPBGEN1",48,0)
 . S DIE="^VA(200,",DR="2////^S X=ALPBAC"
"RTN","ALPBGEN1",49,0)
 . ;Update name too
"RTN","ALPBGEN1",50,0)
 . S DR=DR_";.01////^S X=ALPBNAM"
"RTN","ALPBGEN1",51,0)
 . I ALPBDIS]"" S DR=DR_";7////^S X=ALPBDIS"
"RTN","ALPBGEN1",52,0)
 . I ALPBSSN]"",$L(ALPBSSN)=9 S DR=DR_";9////^S X=ALPBSSN"
"RTN","ALPBGEN1",53,0)
 . I ALPBVC]"" S DR=DR_";11////^S X=ALPBVC"
"RTN","ALPBGEN1",54,0)
 . I +ALPBMENU S DR=DR_";201////^S X=ALPBMENU"
"RTN","ALPBGEN1",55,0)
 . I $G(ALPBTRM)]"" S DR=DR_";9.2////^S X=ALPBTRM"
"RTN","ALPBGEN1",56,0)
 . I $G(DR)]"" D ^DIE K DIC,DA,DR S DIK=DIE,DA=ALPBDA D IX1^DIK
"RTN","ALPBGEN1",57,0)
 K ALPBDA,HL,ALPBDIS,ALPBI,ALBPJ,ALPBX,ALPBAC,ACLPVC,ALPBSSN,ALERR,ALPBNAM,ALPBTRM
"RTN","ALPBGEN1",58,0)
 Q
"RTN","ALPBGEN1",59,0)
UNESC(ST,PR) ;Unescape string from message
"RTN","ALPBGEN1",60,0)
 ;ST=String to translate
"RTN","ALPBGEN1",61,0)
 ;PR=Event Protocol to set up HL array variables (optional)
"RTN","ALPBGEN1",62,0)
 ;First, do the escape character
"RTN","ALPBGEN1",63,0)
 I $G(ST)="" Q ""
"RTN","ALPBGEN1",64,0)
 S PR=$G(PR) I PR]"" D INIT^HLFNC2(PR,.HL)
"RTN","ALPBGEN1",65,0)
 I '$D(HL) D
"RTN","ALPBGEN1",66,0)
 . S HL("FS")="^"
"RTN","ALPBGEN1",67,0)
 . S HL("ECH")="~|\&"
"RTN","ALPBGEN1",68,0)
 S FS=$G(HL("FS")) I FS="" Q "" ;Field separator
"RTN","ALPBGEN1",69,0)
 S EC=$G(HL("ECH")) I EC="" Q ""  ;Encoding Charaters
"RTN","ALPBGEN1",70,0)
 S CS=$E(EC) ;Component separator
"RTN","ALPBGEN1",71,0)
 S RS=$E(EC,2) ;Repitition separator
"RTN","ALPBGEN1",72,0)
 S ESC=$E(EC,3) ;Escape character
"RTN","ALPBGEN1",73,0)
 S SS=$E(EC,4) ;Subcomponent separator
"RTN","ALPBGEN1",74,0)
 S EEC=ESC_"E"_ESC ;escaped escape character
"RTN","ALPBGEN1",75,0)
 S EFS=ESC_"F"_ESC ;escaped field sep
"RTN","ALPBGEN1",76,0)
 S ECS=ESC_"S"_ESC ;escaped component sep
"RTN","ALPBGEN1",77,0)
 S ERS=ESC_"R"_ESC ; escaped repitition sep
"RTN","ALPBGEN1",78,0)
 S ESS=ESC_"T"_ESC ;escaped subcomponent separator
"RTN","ALPBGEN1",79,0)
 K I,J,K,L,X F  S X=$F(ST,EEC) S:X I=$G(I)+1,K(I)=$E(ST,1,X-1),ST=$E(ST,X,999) S:'X K($G(I)+1)=ST Q:'X
"RTN","ALPBGEN1",80,0)
 S I=0 F  S I=$O(K(I)) Q:I<1  S:K(I)[EEC K(I)=$P(K(I),EEC)_ESC S L=$G(L)_K(I)
"RTN","ALPBGEN1",81,0)
 I $G(L)]"" S ST=L
"RTN","ALPBGEN1",82,0)
 ;
"RTN","ALPBGEN1",83,0)
 K I,J,K,L,X F  S X=$F(ST,EFS) S:X I=$G(I)+1,K(I)=$E(ST,1,X-1),ST=$E(ST,X,999) S:'X K($G(I)+1)=ST Q:'X
"RTN","ALPBGEN1",84,0)
 S I=0 F  S I=$O(K(I)) Q:I<1  S:K(I)[EFS K(I)=$P(K(I),EFS)_FS S L=$G(L)_K(I)
"RTN","ALPBGEN1",85,0)
 I $G(L)]"" S ST=L
"RTN","ALPBGEN1",86,0)
 ;
"RTN","ALPBGEN1",87,0)
 K I,J,K,L,X S I=0 F  S X=$F(ST,ECS) S:X I=$G(I)+1,K(I)=$E(ST,1,X-1),ST=$E(ST,X,999) S:'X K(I+1)=ST Q:'X
"RTN","ALPBGEN1",88,0)
 S I=0 F  S I=$O(K(I)) Q:I<1  S:K(I)[ECS K(I)=$P(K(I),ECS)_CS S L=$G(L)_K(I)
"RTN","ALPBGEN1",89,0)
 I $G(L)]"" S ST=L
"RTN","ALPBGEN1",90,0)
 ;
"RTN","ALPBGEN1",91,0)
 K I,J,K,L,X S I=0 F  S X=$F(ST,ERS) S:X I=$G(I)+1,K(I)=$E(ST,1,X-1),ST=$E(ST,X,999) S:'X K(I+1)=ST Q:'X
"RTN","ALPBGEN1",92,0)
 S I=0 F  S I=$O(K(I)) Q:I<1  S:K(I)[ERS K(I)=$P(K(I),ERS)_RS S L=$G(L)_K(I)
"RTN","ALPBGEN1",93,0)
 I $G(L)]"" S ST=L
"RTN","ALPBGEN1",94,0)
 ;
"RTN","ALPBGEN1",95,0)
 K I,J,K,L,X S I=0 F  S X=$F(ST,ESS) S:X I=$G(I)+1,K(I)=$E(ST,1,X-1),ST=$E(ST,X,999) S:'X K(I+1)=ST Q:'X
"RTN","ALPBGEN1",96,0)
 S I=0 F  S I=$O(K(I)) Q:I<1  S:K(I)[ESS K(I)=$P(K(I),ESS)_SS S L=$G(L)_K(I)
"RTN","ALPBGEN1",97,0)
 I $G(L)]"" S ST=L
"RTN","ALPBGEN1",98,0)
 K I,J,K,L,X
"RTN","ALPBGEN1",99,0)
 Q ST
"RTN","ALPBGEN1",100,0)
PERR ;PROCESSING ERRORS
"RTN","ALPBGEN1",101,0)
 H 1 S DATE=$$NOW^XLFDT M ^TMP("BCBU",$J,$S($G(ALPBSSN)'="":ALPBSSN,1:0),DATE)=ALERR
"RTN","ALPBGEN1",102,0)
 K ALERR
"RTN","ALPBGEN1",103,0)
 Q
"RTN","ALPBINP")
0^1^B61914716^B57216519
"RTN","ALPBINP",1,0)
ALPBINP ;OIFO-DALLAS/SED/KC/MW  BCMA - BCBU INPT TO HL7 ;5/2/2002
"RTN","ALPBINP",2,0)
 ;;3.0;BAR CODE MED ADMIN;**8,37**;May 2007;Build 10
"RTN","ALPBINP",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ALPBINP",4,0)
 ;This routine will intercept the HL7 message that it sent from Pharmacy
"RTN","ALPBINP",5,0)
 ;to CPRS to update order information. The message is then parsed and 
"RTN","ALPBINP",6,0)
 ;repackage so it can be sent to the BCBU workstation.
"RTN","ALPBINP",7,0)
 ;
"RTN","ALPBINP",8,0)
 ; Reference/IA
"RTN","ALPBINP",9,0)
 ; EN^PSJBCBU/3876
"RTN","ALPBINP",10,0)
 ; $$EN^VAFHLPID/263
"RTN","ALPBINP",11,0)
 ; $$EN^VAFHAPV1/4512
"RTN","ALPBINP",12,0)
 ; EN1^GMRADPT/10099
"RTN","ALPBINP",13,0)
 ; EN^PSJBCMA1/2829
"RTN","ALPBINP",14,0)
 ;
"RTN","ALPBINP",15,0)
IPH(MSG) ;CAPTURE MESSAGE ARRAY FROM PHARMACY
"RTN","ALPBINP",16,0)
 N VAIN,ALPMSG
"RTN","ALPBINP",17,0)
 S ALPMSG=$S($L($G(MSG)):MSG,1:"MSG")
"RTN","ALPBINP",18,0)
 I '$O(@ALPMSG@(0)) Q "0^MSG^Missing Message Array"
"RTN","ALPBINP",19,0)
 S MSH=0
"RTN","ALPBINP",20,0)
 F  S MSH=$O(@ALPMSG@(MSH)) Q:MSH'>0  Q:$E(@ALPMSG@(MSH),1,3)="MSH"
"RTN","ALPBINP",21,0)
 I +MSH'>0 Q "0^MSG^Missing MSH Segment Bad Message"
"RTN","ALPBINP",22,0)
 S MSFS=$E(@ALPMSG@(MSH),4,4)
"RTN","ALPBINP",23,0)
 S MSCS=$E(@ALPMSG@(MSH),5,5)
"RTN","ALPBINP",24,0)
 S MSCH=$E(@ALPMSG@(MSH),6,6)
"RTN","ALPBINP",25,0)
 S MSCTR=$E(@ALPMSG@(MSH),4,8)
"RTN","ALPBINP",26,0)
 ;The message is confirmed to be a Pharmacy message
"RTN","ALPBINP",27,0)
 I $P(@ALPMSG@(MSH),MSFS,3)'="PHARMACY" Q "1^^Not a Pharmacy Message"
"RTN","ALPBINP",28,0)
 ;A PID and PV1 segment is required for this message
"RTN","ALPBINP",29,0)
 S PID=0
"RTN","ALPBINP",30,0)
 F  S PID=$O(@ALPMSG@(PID)) Q:PID'>0  Q:$E(@ALPMSG@(PID),1,3)="PID"
"RTN","ALPBINP",31,0)
 I +PID'>0 Q "0^MSG^Missing PID Segment Bad Message"
"RTN","ALPBINP",32,0)
 ;Also the patient must have an inpatient status
"RTN","ALPBINP",33,0)
 S PV1=0
"RTN","ALPBINP",34,0)
 F  S PV1=$O(@ALPMSG@(PV1)) Q:PV1'>0  Q:$E(@ALPMSG@(PV1),1,3)="PV1"
"RTN","ALPBINP",35,0)
 I +PV1'>0 Q "0^MSG^Missing PV1 Segment Bad Message"
"RTN","ALPBINP",36,0)
 I $P(@ALPMSG@(PV1),MSFS,3)'="I" Q "1^^Not an Inpatient Pharmacy Message"
"RTN","ALPBINP",37,0)
 S ORC=0
"RTN","ALPBINP",38,0)
 F  S ORC=$O(@ALPMSG@(ORC)) Q:ORC'>0  Q:$E(@ALPMSG@(ORC),1,3)="ORC"
"RTN","ALPBINP",39,0)
 I +ORC'>0 Q "0^MSG^Missing ORC Segment Bad Message"
"RTN","ALPBINP",40,0)
 ;RE-BUILDING THE MESSAGE FOR BCBU
"RTN","ALPBINP",41,0)
 S ALPDFN=$P(@ALPMSG@(PID),MSFS,4)
"RTN","ALPBINP",42,0)
 I +ALPDFN'>0 Q "0^MSG^Invalid or Missing Patient - PID"
"RTN","ALPBINP",43,0)
 S ALPORD=$P($P(@ALPMSG@(ORC),MSFS,4),MSCS,1)
"RTN","ALPBINP",44,0)
 I ALPORD="" Q "0^MSG^Invalid or Missing Order Number - ORC"
"RTN","ALPBINP",45,0)
 K ALPB
"RTN","ALPBINP",46,0)
 D EN^PSJBCBU(ALPDFN,ALPORD,.ALPB)
"RTN","ALPBINP",47,0)
SEED ;Entry point for ^ALPBIND
"RTN","ALPBINP",48,0)
 N VAIN
"RTN","ALPBINP",49,0)
 D INIT
"RTN","ALPBINP",50,0)
 S SUB=0 F  S SUB=$O(ALPB(SUB)) Q:'SUB  D
"RTN","ALPBINP",51,0)
 . ;convert and move the message to the HLA array for transport
"RTN","ALPBINP",52,0)
 . S HLA("HLS",SUB)=$$CNV^ALPBUTL1(MSCTR,HLCTR,ALPB(SUB))
"RTN","ALPBINP",53,0)
 . ;Now check for continuations 
"RTN","ALPBINP",54,0)
 . S SUB1=0
"RTN","ALPBINP",55,0)
 . F  S SUB1=$O(ALPB(SUB,SUB1)) Q:'SUB1  D
"RTN","ALPBINP",56,0)
 . . S HLA("HLS",SUB,SUB1)=$$CNV^ALPBUTL1(MSCTR,HLCTR,ALPB(SUB,SUB1))
"RTN","ALPBINP",57,0)
 . I $E(HLA("HLS",SUB),1,3)="RXE" S RXE=SUB
"RTN","ALPBINP",58,0)
 . I $E(HLA("HLS",SUB),1,3)="PID" S PID=SUB
"RTN","ALPBINP",59,0)
 . I $E(HLA("HLS",SUB),1,3)="PV1" S PV1=SUB
"RTN","ALPBINP",60,0)
 K HLA("HLS",MSH)
"RTN","ALPBINP",61,0)
 I '$D(HLA("HLS",PID)) Q "0^MSG^Missing PID Segment Bad Message"
"RTN","ALPBINP",62,0)
 S ALPDFN=$P($P(HLA("HLS",PID),HLFS,4),HLCS,1)
"RTN","ALPBINP",63,0)
 I +ALPDFN'>0 Q "0^MSG^Invalid or Missing Patient - PID"
"RTN","ALPBINP",64,0)
 S HLA("HLS",PID)=$$EN^VAFHLPID(ALPDFN,"2,7,8,19")
"RTN","ALPBINP",65,0)
 ;Fix RXE segement for Administration Type
"RTN","ALPBINP",66,0)
 D RXE
"RTN","ALPBINP",67,0)
 ;Get the Division that the patient is associated with
"RTN","ALPBINP",68,0)
 D PDIV
"RTN","ALPBINP",69,0)
 I ALPDIV="DOM",+$$GET^XPAR("PKG.BAR CODE MED ADMIN","PSB BKUP DOM FILTER",1,"Q")>0 Q "0^^Screen of DOMICILIARY"
"RTN","ALPBINP",70,0)
 I '$D(HLL("LINKS")) Q "0^HL7^Missing HLL Links Array Division # "_ALPDIV
"RTN","ALPBINP",71,0)
 ;SET NEW PV1
"RTN","ALPBINP",72,0)
 D NOW^%DTC
"RTN","ALPBINP",73,0)
 S STRING=$$EN^VAFHAPV1(ALPDFN,%,"2,3,7,18")
"RTN","ALPBINP",74,0)
 S HLA("HLS",PV1)=STRING
"RTN","ALPBINP",75,0)
 I +ORC>0 D
"RTN","ALPBINP",76,0)
 . S ALPST=$$STAT^ALPBUTL1($P(HLA("HLS",ORC),HLFS,6))
"RTN","ALPBINP",77,0)
 . Q:ALPST=""
"RTN","ALPBINP",78,0)
 . S $P(HLA("HLS",ORC),HLFS,6)=$P(HLA("HLS",ORC),HLFS,6)_HLCS_ALPST
"RTN","ALPBINP",79,0)
 D AL1
"RTN","ALPBINP",80,0)
 ;Capture message to review for testing before sending
"RTN","ALPBINP",81,0)
 D SEND
"RTN","ALPBINP",82,0)
EXIT ;EXIT and kill
"RTN","ALPBINP",83,0)
 K HLA,SUB,SUB1,STRING,ALPLOC,HLCS,HLCTR,HLFS,MSCH,MSCS,MSCTR
"RTN","ALPBINP",84,0)
 K MSH,ORC,PID,PV1,RXE,RXR,ALPB,ALPBY,ALPBYN,ALPC,ALPDATA,ALPDFN
"RTN","ALPBINP",85,0)
 K ALPDT,ALPI,ALPII,ALPIV,ALPOPTS,ALPOR,ALPORD,ALPST
"RTN","ALPBINP",86,0)
 K ALPSTN,ALPSYM,EVENT,GMRA,GMRAL
"RTN","ALPBINP",87,0)
 Q ALPRSLT
"RTN","ALPBINP",88,0)
INI() ;INTIAL SET UP ENTRY
"RTN","ALPBINP",89,0)
 G SEED
"RTN","ALPBINP",90,0)
INIT ;CALL HL7 TO INITIALIZE MESSAGE VARIABLES
"RTN","ALPBINP",91,0)
 ;SET UP ENVIRONMENT FOR MESSAGE
"RTN","ALPBINP",92,0)
 K HL,HLA,HLECH,HLQ,ALPRSLT,ALPOPTS
"RTN","ALPBINP",93,0)
 S EVENT="PSB BCBU ORM SEND"
"RTN","ALPBINP",94,0)
 D INIT^HLFNC2(EVENT,.HL,1)
"RTN","ALPBINP",95,0)
 S HLCS=$E(HL("ECH")),HLCTR=HLFS_HL("ECH")
"RTN","ALPBINP",96,0)
 Q
"RTN","ALPBINP",97,0)
SEND ;CALL HL7 TO TRANSMIT SINGLE MESSAGE
"RTN","ALPBINP",98,0)
 K ALPRSLT,ALPOPTS
"RTN","ALPBINP",99,0)
 D GENERATE^HLMA(EVENT,"LM",1,.ALPRSLT,"",.ALPOPTS)
"RTN","ALPBINP",100,0)
 Q
"RTN","ALPBINP",101,0)
AL1 ;ALLERGY SEGMENT BUILD
"RTN","ALPBINP",102,0)
 ;The will build the ALP segment with the curent allergies
"RTN","ALPBINP",103,0)
 ;for the patient to be added to the message
"RTN","ALPBINP",104,0)
 N DFN
"RTN","ALPBINP",105,0)
 Q:+ALPDFN'>0
"RTN","ALPBINP",106,0)
 K GMRAL
"RTN","ALPBINP",107,0)
 S DFN=ALPDFN
"RTN","ALPBINP",108,0)
 S GMRA="0^0^111"  ;DEFINES WHAT ALLERGIES TO RETURN
"RTN","ALPBINP",109,0)
 D EN1^GMRADPT
"RTN","ALPBINP",110,0)
 Q:'$D(GMRAL)
"RTN","ALPBINP",111,0)
 S ALPI=0,ALPC=1,ALPSYM=""
"RTN","ALPBINP",112,0)
 F  S ALPI=$O(GMRAL(ALPI)) Q:+ALPI'>0  D
"RTN","ALPBINP",113,0)
 . S ALPADR=""
"RTN","ALPBINP",114,0)
 . I $P($P(GMRAL(ALPI),U,8),";",2)="P" S ALPADR="**ADR** "
"RTN","ALPBINP",115,0)
 . S ALPDATA="AL1"_HLFS_ALPC_HLFS_$P(GMRAL(ALPI),U,7)
"RTN","ALPBINP",116,0)
 . S ALPDATA=ALPDATA_HLFS_ALPI_HLCS_ALPADR_$E($P(GMRAL(ALPI),U,2),1,25)_HLCS_"VA120.8"
"RTN","ALPBINP",117,0)
 . ;S ALPII=0 F  S ALPII=$O(GMRAL(ALPI,"S",ALPII)) Q:+ALPII'>0  D
"RTN","ALPBINP",118,0)
 . ;. S ALPSYM=ALPSYM_$P(GMRAL(ALPI,"S",ALPII),";",1)_HLCS
"RTN","ALPBINP",119,0)
 . ;S $P(ALPDATA,HLFS,6)=ALPSYM
"RTN","ALPBINP",120,0)
 . S HLA("HLS",$O(HLA("HLS",9999999),-1)+1)=ALPDATA
"RTN","ALPBINP",121,0)
 . S ALPC=ALPC+1
"RTN","ALPBINP",122,0)
 K GMRAL
"RTN","ALPBINP",123,0)
 Q
"RTN","ALPBINP",124,0)
RXE ;
"RTN","ALPBINP",125,0)
 Q:+$G(RXE)'>0
"RTN","ALPBINP",126,0)
 K ^TMP("PSJ1",$J)
"RTN","ALPBINP",127,0)
 Q:'$D(HLA("HLS",RXE))
"RTN","ALPBINP",128,0)
 S DATA=HLA("HLS",RXE)
"RTN","ALPBINP",129,0)
 D EN^PSJBCMA1(ALPDFN,ALPORD,1)
"RTN","ALPBINP",130,0)
 S TYP=$P($G(^TMP("PSJ1",$J,4)),U,2)
"RTN","ALPBINP",131,0)
 Q:TYP="CONTINUOUS"
"RTN","ALPBINP",132,0)
 Q:TYP="FILL ON REQUEST"
"RTN","ALPBINP",133,0)
 S ALP1=$P(DATA,HLFS,2),ALP2=$P(ALP1,HLCS,2)
"RTN","ALPBINP",134,0)
 I ALP1[TYP Q
"RTN","ALPBINP",135,0)
 I ALP2[TYP Q
"RTN","ALPBINP",136,0)
 S $P(ALP2,"&",1)=$P(ALP2,"&",1)_" "_TYP
"RTN","ALPBINP",137,0)
 S $P(ALP1,HLCS,2)=ALP2,$P(DATA,HLFS,2)=ALP1
"RTN","ALPBINP",138,0)
 S HLA("HLS",RXE)=DATA
"RTN","ALPBINP",139,0)
 K TYP,ALP1,ALP2,^TMP("PSJ1",$J)
"RTN","ALPBINP",140,0)
 Q
"RTN","ALPBINP",141,0)
PDIV ;PATIENT DIVISION
"RTN","ALPBINP",142,0)
 ;Check ALPBMDT Variable
"RTN","ALPBINP",143,0)
 S:+$G(ALPBMDT)'>0 ALPBMDT=0
"RTN","ALPBINP",144,0)
 S ALPDIV=$$DIV^ALPBUTL1(ALPDFN,ALPBMDT)
"RTN","ALPBINP",145,0)
 ;Screen Dom
"RTN","ALPBINP",146,0)
 I ALPDIV="DOM",+$$GET^XPAR("PKG.BAR CODE MED ADMIN","PSB BKUP DOM FILTER",1,"Q")>0 Q
"RTN","ALPBINP",147,0)
 ;Now do I send the Message or not Based of Division
"RTN","ALPBINP",148,0)
 I $D(ALPHLL("LINKS")) M HLL("LINKS")=ALPHLL("LINKS")
"RTN","ALPBINP",149,0)
 I '$D(HLL("LINKS")) D GET^ALPBPARM(.HLL,ALPDIV)
"RTN","ALPBINP",150,0)
 Q
"RTN","ALPBINP",151,0)
MEDL(ALPML) ;Use this entry to send MedLog messages
"RTN","ALPBINP",152,0)
 N VAIN
"RTN","ALPBINP",153,0)
 ;ALPML is the IEN of the MedLog for file #53.79
"RTN","ALPBINP",154,0)
 I '$D(ALPML) Q "0^ALPML^No Med-Log Number"
"RTN","ALPBINP",155,0)
 I '$D(^PSB(53.79,ALPML,0)) Q "0^"_ALPML_"^Med - Log Number Invalid"
"RTN","ALPBINP",156,0)
 ;First get the required HL7 Variables
"RTN","ALPBINP",157,0)
 D INIT
"RTN","ALPBINP",158,0)
 ;Need to build the PID, PV1 and ORC segments
"RTN","ALPBINP",159,0)
 S ALPDFN=+$P($G(^PSB(53.79,ALPML,0)),U,1)
"RTN","ALPBINP",160,0)
 I +ALPDFN'>0 Q "0^"_ALPML_"^Invalid or Missing Patient - Med-Log"
"RTN","ALPBINP",161,0)
 ;Get the Division that the patient is associated with
"RTN","ALPBINP",162,0)
 D PDIV
"RTN","ALPBINP",163,0)
 I ALPDIV="DOM",+$$GET^XPAR("PKG.BAR CODE MED ADMIN","PSB BKUP DOM FILTER",1,"Q")>0 Q "0^^Screen of DOMICILIARY"
"RTN","ALPBINP",164,0)
 I '$D(HLL("LINKS")) Q "0^"_ALPML_"^Missing HLL Links Array Med-Log"
"RTN","ALPBINP",165,0)
 S ALPST=$P($G(^PSB(53.79,ALPML,0)),U,9)
"RTN","ALPBINP",166,0)
 S ALPBY=$P($G(^PSB(53.79,ALPML,0)),U,7)
"RTN","ALPBINP",167,0)
 S ALPDT=$P($G(^PSB(53.79,ALPML,0)),U,6)
"RTN","ALPBINP",168,0)
 S ALPOR=$P($G(^PSB(53.79,ALPML,.1)),U,1)
"RTN","ALPBINP",169,0)
 S ALPBYN=$P($G(^VA(200,ALPBY,0)),U,1)
"RTN","ALPBINP",170,0)
 S ALPSTN=$S($D(ALPST):$$EXTERNAL^DILFD(53.79,".09",,ALPST),1:"Non")
"RTN","ALPBINP",171,0)
 I '$D(ALPOR) Q "0^"_ALPML_"^Invalid or Missing Pharmacy Order Number Med-Log"
"RTN","ALPBINP",172,0)
 S PID=$$EN^VAFHLPID(ALPDFN,"2,7,8,19")
"RTN","ALPBINP",173,0)
 I '$D(PID) Q "0^"_ALPML_"^Invalid or Missing Patient - PID Med-Log"
"RTN","ALPBINP",174,0)
 S PV1=$$EN^VAFHAPV1(ALPDFN,DT,"2,3,7,18")
"RTN","ALPBINP",175,0)
 I '$D(PV1) Q "0^"_ALPML_"^Invalid or Missing Patient Location - PV1 Med-Log"
"RTN","ALPBINP",176,0)
 S HLA("HLS",1)=PID
"RTN","ALPBINP",177,0)
 S HLA("HLS",2)=PV1
"RTN","ALPBINP",178,0)
 ;BUILD ORC SEGMENT
"RTN","ALPBINP",179,0)
 S ORC="ORC"_HLFS_"ML"_HLFS_ALPML_HLCS_"ML"_HLFS_ALPOR_HLCS_"PS"_HLFS
"RTN","ALPBINP",180,0)
 S ORC=ORC_HLFS_ALPST_HLCS_ALPSTN_HLFS_HLFS_HLFS_HLFS
"RTN","ALPBINP",181,0)
 S ORC=ORC_$$HLDATE^HLFNC(ALPDT,"TS")_HLFS_ALPBY_HLCS_ALPBYN
"RTN","ALPBINP",182,0)
 S HLA("HLS",3)=ORC
"RTN","ALPBINP",183,0)
 ;The Message is ready to send
"RTN","ALPBINP",184,0)
 D SEND
"RTN","ALPBINP",185,0)
 Q ALPRSLT
"RTN","ALPBINP",186,0)
 ;
"RTN","ALPBINP",187,0)
ADMQ ;Need to que a single patient init for admissions
"RTN","ALPBINP",188,0)
 S ALDFN=ALPDFN
"RTN","ALPBINP",189,0)
 S ZTDTH=$$NOW^XLFDT
"RTN","ALPBINP",190,0)
 S ZTRTN="PAT^ALPBIND"
"RTN","ALPBINP",191,0)
 S ZTDESC="PSB - Initialize Single Patient on Admission Contingency Workstation"
"RTN","ALPBINP",192,0)
 S ZTIO="",ZTSAVE("ALDFN")=""
"RTN","ALPBINP",193,0)
 D ^%ZTLOAD
"RTN","ALPBINP",194,0)
 K ZTIO,ZTDESC,ZTRTN,ZTSK
"RTN","ALPBINP",195,0)
 Q
"RTN","ALPBINP",196,0)
PMOV(ALPDFN,ALPTYP,ALPTT,ALPBMDT) ;Entry Point to send patient movement
"RTN","ALPBINP",197,0)
 N VAIN
"RTN","ALPBINP",198,0)
 I +$G(ALPDFN)'>0 Q "0^^Missing Patient ID"
"RTN","ALPBINP",199,0)
 D INIT
"RTN","ALPBINP",200,0)
 ;Check Movement type. If not a discharge then don't pass date and time
"RTN","ALPBINP",201,0)
 S:$G(ALPTT)'="DISCHARGE" ALPBMDT=0
"RTN","ALPBINP",202,0)
 ;Get the Division that the patient is associated with
"RTN","ALPBINP",203,0)
 D PDIV
"RTN","ALPBINP",204,0)
 I ALPDIV="DOM",+$$GET^XPAR("PKG.BAR CODE MED ADMIN","PSB BKUP DOM FILTER",1,"Q")>0 Q "0^^Screen of DOMICILIARY"
"RTN","ALPBINP",205,0)
 I '$D(HLL("LINKS")) Q "0^"_ALPDFN_"^Missing HLL Links Array Pat-Move"
"RTN","ALPBINP",206,0)
 S HLA("HLS",1)=$$EN^VAFHLPID(ALPDFN,"2,7,8,19")
"RTN","ALPBINP",207,0)
 S HLA("HLS",2)=$$EN^VAFHAPV1(ALPDFN,DT,"2,3,7,18")
"RTN","ALPBINP",208,0)
 S:$G(ALPTT)="DISCHARGE" $P(HLA("HLS",2),HLFS,37)=$G(ALPTYP)
"RTN","ALPBINP",209,0)
 D SEND
"RTN","ALPBINP",210,0)
 I ALPTYP=14!(ALPTYP=41) S ALPTT="ADMISSION" ;FOR RETURN FROM ASIH
"RTN","ALPBINP",211,0)
 I $G(ALPTT)="ADMISSION" D ADMQ
"RTN","ALPBINP",212,0)
 ;SEND A DISCHARGE TO DIV SENDING ASIH
"RTN","ALPBINP",213,0)
 I $G(ALPTYP)[13!($G(ALPTYP)[40) D
"RTN","ALPBINP",214,0)
 .D INIT
"RTN","ALPBINP",215,0)
 .S ALPWRD=$P($G(DGPMVI(5)),U,1) ;LAST WARD
"RTN","ALPBINP",216,0)
 .I +ALPWRD'>0 S ALPRSLT="0^^Screen - No Ward" Q  ;NO WARD
"RTN","ALPBINP",217,0)
 .S ALPBDIV=$P($G(^DIC(42,ALPWRD,0)),U,11)
"RTN","ALPBINP",218,0)
 .D GET^ALPBPARM(.HLL,ALPBDIV)
"RTN","ALPBINP",219,0)
 .S HLA("HLS",1)=$$EN^VAFHLPID(ALPDFN,"2,7,8,19")
"RTN","ALPBINP",220,0)
 .S HLA("HLS",2)=$$EN^VAFHAPV1(ALPDFN,DT,"2,3,7,18")
"RTN","ALPBINP",221,0)
 .S $P(HLA("HLS",2),HLFS,37)="ASIH"
"RTN","ALPBINP",222,0)
 .D SEND
"RTN","ALPBINP",223,0)
 Q ALPRSLT
"RTN","ALPBPWRD")
0^6^B51146671^B48969460
"RTN","ALPBPWRD",1,0)
ALPBPWRD ;OIFO-DALLAS MW,SED,KC-PRINT 3-DAY MAR BCMA BCBU REPORT FOR A SELECTED WARD ;01/01/03
"RTN","ALPBPWRD",2,0)
 ;;3.0;BAR CODE MED ADMIN;**8,37**;Mar 2004;Build 10
"RTN","ALPBPWRD",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ALPBPWRD",4,0)
 ; 
"RTN","ALPBPWRD",5,0)
 ; NOTE: this routine is designed for hard-copy output.
"RTN","ALPBPWRD",6,0)
 ;      Output is formatted for 132-column printing.
"RTN","ALPBPWRD",7,0)
 ; 
"RTN","ALPBPWRD",8,0)
 F  D  Q:$D(DIRUT)
"RTN","ALPBPWRD",9,0)
 .W !,"Inpatient Pharmacy Orders for a selected ward"
"RTN","ALPBPWRD",10,0)
 .S DIR(0)="FAO^2:10"
"RTN","ALPBPWRD",11,0)
 .S DIR("A")="Select WARD: "
"RTN","ALPBPWRD",12,0)
 .S DIR("?")="^D WARDLIST^ALPBUTL(""C"")"
"RTN","ALPBPWRD",13,0)
 .D ^DIR K DIR
"RTN","ALPBPWRD",14,0)
 .I $D(DIRUT) Q
"RTN","ALPBPWRD",15,0)
 .D WARDSEL^ALPBUTL(Y,.ALPBSEL)
"RTN","ALPBPWRD",16,0)
 .I +$G(ALPBSEL(0))=0 D  Q
"RTN","ALPBPWRD",17,0)
 ..W $C(7)
"RTN","ALPBPWRD",18,0)
 ..W "  ??"
"RTN","ALPBPWRD",19,0)
 ..D WARDLIST^ALPBUTL("C")
"RTN","ALPBPWRD",20,0)
 ..K ALPBSEL
"RTN","ALPBPWRD",21,0)
 .I +$G(ALPBSEL(0))=1 D
"RTN","ALPBPWRD",22,0)
 ..S ALPBWARD=ALPBSEL(1)
"RTN","ALPBPWRD",23,0)
 ..W "   ",ALPBWARD
"RTN","ALPBPWRD",24,0)
 ..K ALPBSEL
"RTN","ALPBPWRD",25,0)
 .I +$G(ALPBSEL(0))>1 D  I $D(DIRUT) K DIRUT,DTOUT,X,Y Q
"RTN","ALPBPWRD",26,0)
 ..S ALPBX=0
"RTN","ALPBPWRD",27,0)
 ..F  S ALPBX=$O(ALPBSEL(ALPBX)) Q:'ALPBX  W !?2,$J(ALPBX,2),"  ",ALPBSEL(ALPBX)
"RTN","ALPBPWRD",28,0)
 ..K ALPBX
"RTN","ALPBPWRD",29,0)
 ..S DIR(0)="NA^1:"_ALPBSEL(0)
"RTN","ALPBPWRD",30,0)
 ..S DIR("A")="Select Ward from the list (1-"_ALPBSEL(0)_"): "
"RTN","ALPBPWRD",31,0)
 ..W ! D ^DIR K DIR
"RTN","ALPBPWRD",32,0)
 ..I $D(DIRUT) K ALPBSEL Q
"RTN","ALPBPWRD",33,0)
 ..S ALPBWARD=ALPBSEL(+Y)
"RTN","ALPBPWRD",34,0)
 ..K ALPBSEL
"RTN","ALPBPWRD",35,0)
 .;
"RTN","ALPBPWRD",36,0)
 .; get all or just current orders?...
"RTN","ALPBPWRD",37,0)
 .S DIR(0)="SA^A:ALL;C:CURRENT"
"RTN","ALPBPWRD",38,0)
 .S DIR("A")="Report [A]LL or [C]URRENT orders? "
"RTN","ALPBPWRD",39,0)
 .S DIR("B")="CURRENT"
"RTN","ALPBPWRD",40,0)
 .S DIR("?")="[A]LL=all orders in the file, [C]URRENT=orders not yet expired."
"RTN","ALPBPWRD",41,0)
 .W ! D ^DIR K DIR
"RTN","ALPBPWRD",42,0)
 .I $D(DIRUT) K ALPBWARD,DIRUT,DTOUT,X,Y Q
"RTN","ALPBPWRD",43,0)
 .S ALPBOTYP=Y
"RTN","ALPBPWRD",44,0)
 .;
"RTN","ALPBPWRD",45,0)
 .;SORT BY NAME OR ROOM/BED     added 6/23/05
"RTN","ALPBPWRD",46,0)
 .S DIR(0)="SA^N:Name;R:Room/Bed"
"RTN","ALPBPWRD",47,0)
 .S DIR("A")="Sort Patients by [N]ame or [R]oom/Bed? "
"RTN","ALPBPWRD",48,0)
 .S DIR("B")="Room/bed"
"RTN","ALPBPWRD",49,0)
 .S DIR("?")="Sort by [N]ame or [R]oom Bed"
"RTN","ALPBPWRD",50,0)
 .W ! D ^DIR K DIR
"RTN","ALPBPWRD",51,0)
 .I $D(DIRUT) K ALPBWARD,DIRUT,DTOUT,X,Y Q
"RTN","ALPBPWRD",52,0)
 .S ALPBSORT=Y
"RTN","ALPBPWRD",53,0)
 .;
"RTN","ALPBPWRD",54,0)
 .; print how many days MAR?...
"RTN","ALPBPWRD",55,0)
 .S DIR(0)="NA^1:7"
"RTN","ALPBPWRD",56,0)
 .S DIR("A")="Print how many days MAR? "
"RTN","ALPBPWRD",57,0)
 .S DIR("B")=$$DEFDAYS^ALPBUTL()
"RTN","ALPBPWRD",58,0)
 .S DIR("?")="The default is shown; you may enter 3 or 7."
"RTN","ALPBPWRD",59,0)
 .W ! D ^DIR K DIR
"RTN","ALPBPWRD",60,0)
 .I $D(DIRUT) K ALPBOTYP,DIRUT,DTOUT,X,Y Q
"RTN","ALPBPWRD",61,0)
 .S ALPBDAYS=+Y
"RTN","ALPBPWRD",62,0)
 .;
"RTN","ALPBPWRD",63,0)
 .; BCMA Med Log info for how many ?...
"RTN","ALPBPWRD",64,0)
 .S DIR(0)="NA^1:99"
"RTN","ALPBPWRD",65,0)
 .S DIR("B")=$$DEFML^ALPBUTL3()
"RTN","ALPBPWRD",66,0)
 .S DIR("A")="Select how many BCMA Medication Log history: "
"RTN","ALPBPWRD",67,0)
 .S DIR("A",1)=" "
"RTN","ALPBPWRD",68,0)
 .S DIR("?",1)="Select a number of BCMA Medication log entries"
"RTN","ALPBPWRD",69,0)
 .S DIR("?",2)="for each of the patient's orders"
"RTN","ALPBPWRD",70,0)
 .S DIR("?")="They are listed by the most current entry first"
"RTN","ALPBPWRD",71,0)
 .D ^DIR K DIR
"RTN","ALPBPWRD",72,0)
 .I $D(DIRUT) K ALPBOTYP,ALPBWARD,DIRUT,DTOUT,X,Y Q
"RTN","ALPBPWRD",73,0)
 .S ALPBMLOG=Y
"RTN","ALPBPWRD",74,0)
 .;
"RTN","ALPBPWRD",75,0)
 .S %ZIS="Q"
"RTN","ALPBPWRD",76,0)
 .S %ZIS("B")=$$DEFPRT^ALPBUTL()
"RTN","ALPBPWRD",77,0)
 .I %ZIS("B")="" K %ZIS("B")
"RTN","ALPBPWRD",78,0)
 .W ! D ^%ZIS K %ZIS
"RTN","ALPBPWRD",79,0)
 .I POP D  Q
"RTN","ALPBPWRD",80,0)
 ..W $C(7)
"RTN","ALPBPWRD",81,0)
 ..K ALPBMLOG,ALPBOTYP,ALPBWARD,POP
"RTN","ALPBPWRD",82,0)
 .;
"RTN","ALPBPWRD",83,0)
 .; output not queued...
"RTN","ALPBPWRD",84,0)
 .I '$D(IO("Q")) D
"RTN","ALPBPWRD",85,0)
 ..U IO
"RTN","ALPBPWRD",86,0)
 ..D DQ
"RTN","ALPBPWRD",87,0)
 ..I IO'=IO(0) D ^%ZISC
"RTN","ALPBPWRD",88,0)
 .;
"RTN","ALPBPWRD",89,0)
 .; set up the Task...
"RTN","ALPBPWRD",90,0)
 .I $D(IO("Q")) D
"RTN","ALPBPWRD",91,0)
 ..S ZTRTN="DQ^ALPBPWRD"
"RTN","ALPBPWRD",92,0)
 ..S ZTDESC="PSB INPT PHARM ORDERS FOR WARD "_ALPBWARD
"RTN","ALPBPWRD",93,0)
 ..S ZTSAVE("ALPBDAYS")=""
"RTN","ALPBPWRD",94,0)
 ..S ZTSAVE("ALPBWARD")=""
"RTN","ALPBPWRD",95,0)
 ..S ZTSAVE("ALPBMLOG")=""
"RTN","ALPBPWRD",96,0)
 ..S ZTSAVE("ALPBOTYP")=""
"RTN","ALPBPWRD",97,0)
 ..S ZTSAVE("ALPBSORT")=""
"RTN","ALPBPWRD",98,0)
 ..S ZTIO=ION
"RTN","ALPBPWRD",99,0)
 ..D ^%ZTLOAD
"RTN","ALPBPWRD",100,0)
 ..D HOME^%ZIS
"RTN","ALPBPWRD",101,0)
 ..W !,$S($G(ZTSK):"Task number "_ZTSK_" queued.",1:"ERROR -- NOT QUEUED!")
"RTN","ALPBPWRD",102,0)
 ..K IO("Q"),ZTSK
"RTN","ALPBPWRD",103,0)
 .K ALPBDAYS,ALPBMLOG,ALPBOTYP,ALPBWARD
"RTN","ALPBPWRD",104,0)
 K DIRUT,DTOUT,X,Y
"RTN","ALPBPWRD",105,0)
 Q
"RTN","ALPBPWRD",106,0)
 ;
"RTN","ALPBPWRD",107,0)
DQ ; output entry point...
"RTN","ALPBPWRD",108,0)
 K ^TMP($J)
"RTN","ALPBPWRD",109,0)
 ;
"RTN","ALPBPWRD",110,0)
 ; set report date...  SED 11/4/03
"RTN","ALPBPWRD",111,0)
 S ALPBRDAT=$S(ALPBOTYP="C":$$NOW^XLFDT(),1:"")
"RTN","ALPBPWRD",112,0)
 ;
"RTN","ALPBPWRD",113,0)
 ; loop through ward cross reference in 53.7...
"RTN","ALPBPWRD",114,0)
 S ALPBPTN=""
"RTN","ALPBPWRD",115,0)
 F  S ALPBPTN=$O(^ALPB(53.7,"AW",ALPBWARD,ALPBPTN)) Q:ALPBPTN=""  D
"RTN","ALPBPWRD",116,0)
 .S ALPBIEN=0
"RTN","ALPBPWRD",117,0)
 .F  S ALPBIEN=$O(^ALPB(53.7,"AW",ALPBWARD,ALPBPTN,ALPBIEN)) Q:'ALPBIEN  D
"RTN","ALPBPWRD",118,0)
 ..D ORDS^ALPBUTL(ALPBIEN,ALPBRDAT,.ALPBORDS)
"RTN","ALPBPWRD",119,0)
 ..I +ALPBORDS(0)'>0 K ALPBORDS Q
"RTN","ALPBPWRD",120,0)
 ..I $G(ALPBPDAT(0))="" S ALPBPDAT(0)=$G(^ALPB(53.7,ALPBIEN,0))
"RTN","ALPBPWRD",121,0)
 ..S ALPBOIEN=0
"RTN","ALPBPWRD",122,0)
 ..F  S ALPBOIEN=$O(ALPBORDS(ALPBOIEN)) Q:'ALPBOIEN  D
"RTN","ALPBPWRD",123,0)
 ...S ALPBDATA=$G(^ALPB(53.7,ALPBIEN,2,ALPBOIEN,1))
"RTN","ALPBPWRD",124,0)
 ...S ALPBOCT=$P($G(^ALPB(53.7,ALPBIEN,2,ALPBOIEN,3)),U,1)
"RTN","ALPBPWRD",125,0)
 ...S:$P($G(^ALPB(53.7,ALPBIEN,2,ALPBOIEN,4)),U,3)["PRN" ALPBOCT=ALPBOCT_"P"
"RTN","ALPBPWRD",126,0)
 ...; if report is for "C"urrent, check stop date and quit if
"RTN","ALPBPWRD",127,0)
 ...; stop date is less than report date...
"RTN","ALPBPWRD",128,0)
 ...I ALPBOTYP="C"&($P(ALPBDATA,U,2)<ALPBRDAT) K ALPBDATA Q
"RTN","ALPBPWRD",129,0)
 ...S ALPBORDN=ALPBORDS(ALPBOIEN)
"RTN","ALPBPWRD",130,0)
 ...S ALPBOST=$$STAT2^ALPBUTL1(ALPBORDS(ALPBOIEN,2))
"RTN","ALPBPWRD",131,0)
 ...I '$D(^TMP($J,ALPBPTN)) S ^TMP($J,ALPBPTN)=ALPBIEN
"RTN","ALPBPWRD",132,0)
 ...S ^TMP($J,ALPBPTN,ALPBOCT,ALPBOST,ALPBORDN)=ALPBOIEN
"RTN","ALPBPWRD",133,0)
 ...K ALPBDATA,ALPBORDN,ALPBOST
"RTN","ALPBPWRD",134,0)
 ..K ALPBOIEN,ALPBORDS,ALPBPDAT
"RTN","ALPBPWRD",135,0)
 .K ALPBIEN
"RTN","ALPBPWRD",136,0)
 K ALPBPTN
"RTN","ALPBPWRD",137,0)
 ;
"RTN","ALPBPWRD",138,0)
 ; Sort by Patient Name or room/bed capability added 6/23/05 KFOX
"RTN","ALPBPWRD",139,0)
 S ALPBPG=0
"RTN","ALPBPWRD",140,0)
 S ALPBPTN=""
"RTN","ALPBPWRD",141,0)
 I ALPBSORT="N" D
"RTN","ALPBPWRD",142,0)
 .F  S ALPBPTN=$O(^TMP($J,ALPBPTN)) Q:ALPBPTN=""  S ALPBIEN=^TMP($J,ALPBPTN) D PRT
"RTN","ALPBPWRD",143,0)
 ;SORT BY ROOM/BED
"RTN","ALPBPWRD",144,0)
 I ALPBSORT="R" D
"RTN","ALPBPWRD",145,0)
 .S ALPBD="",ALPRM=""
"RTN","ALPBPWRD",146,0)
 .F  S ALPBPTN=$O(^TMP($J,ALPBPTN)) Q:ALPBPTN=""  D  Q:ALPBPTN=""
"RTN","ALPBPWRD",147,0)
 ..I ALPBPTN="BCBU" S ALPBPTN=$O(^TMP($J,ALPBPTN)) ;SKIP "BCBU" SUBSCRIBE
"RTN","ALPBPWRD",148,0)
 ..I ALPBPTN="" Q  ;PSB*3*37 Stop null subscript when "BCBU" is the last entry in ^TMP
"RTN","ALPBPWRD",149,0)
 ..S ALPBIEN=^TMP($J,ALPBPTN) S ALPRM=$P($G(^ALPB(53.7,ALPBIEN,0)),"^",6),ALPBD=$P($G(^ALPB(53.7,ALPBIEN,0)),"^",7)
"RTN","ALPBPWRD",150,0)
 ..I ALPBD="" S ALPB="NONE" I ALPRM="" S ALPB="NONE" ;INCASE NO ROOM AND BED YET
"RTN","ALPBPWRD",151,0)
 ..S ^TMP($J,"BCBU",ALPRM,ALPRM,ALPBD,ALPBPTN)=ALPBIEN
"RTN","ALPBPWRD",152,0)
 .S ALPRM1="" F  S ALPRM1=$O(^TMP($J,"BCBU",ALPRM1)) Q:ALPRM1=""  D
"RTN","ALPBPWRD",153,0)
 ..S ALPRM="" F  S ALPRM=$O(^TMP($J,"BCBU",ALPRM1,ALPRM)) Q:ALPRM=""  D
"RTN","ALPBPWRD",154,0)
 ...S ALPBD="" F  S ALPBD=$O(^TMP($J,"BCBU",ALPRM1,ALPRM,ALPBD)) Q:ALPBD=""  D
"RTN","ALPBPWRD",155,0)
 ....S ALPBPTN="" F  S ALPBPTN=$O(^TMP($J,"BCBU",ALPRM1,ALPRM,ALPBD,ALPBPTN)) Q:ALPBPTN=""  D
"RTN","ALPBPWRD",156,0)
 .....S ALPBIEN=$G(^TMP($J,"BCBU",ALPRM1,ALPRM,ALPBD,ALPBPTN))  D PRT
"RTN","ALPBPWRD",157,0)
 D DONE
"RTN","ALPBPWRD",158,0)
 Q
"RTN","ALPBPWRD",159,0)
PRT S ALPBPDAT(0)=$G(^ALPB(53.7,ALPBIEN,0))
"RTN","ALPBPWRD",160,0)
 M ALPBPDAT(1)=^ALPB(53.7,ALPBIEN,1)
"RTN","ALPBPWRD",161,0)
 I ALPBPG=0 D PAGE
"RTN","ALPBPWRD",162,0)
 S ALPBOCT=""
"RTN","ALPBPWRD",163,0)
 F  S ALPBOCT=$O(^TMP($J,ALPBPTN,ALPBOCT)) Q:ALPBOCT=""  D
"RTN","ALPBPWRD",164,0)
 .S ALPBOST=""
"RTN","ALPBPWRD",165,0)
 .F  S ALPBOST=$O(^TMP($J,ALPBPTN,ALPBOCT,ALPBOST)) Q:ALPBOST=""  D
"RTN","ALPBPWRD",166,0)
 ..S ALPBORDN=""
"RTN","ALPBPWRD",167,0)
 ..F  S ALPBORDN=$O(^TMP($J,ALPBPTN,ALPBOCT,ALPBOST,ALPBORDN)) Q:ALPBORDN=""  D
"RTN","ALPBPWRD",168,0)
 ...S ALPBOIEN=^TMP($J,ALPBPTN,ALPBOCT,ALPBOST,ALPBORDN)
"RTN","ALPBPWRD",169,0)
 ...; get and print this order's data...
"RTN","ALPBPWRD",170,0)
 ...M ALPBDATA=^ALPB(53.7,ALPBIEN,2,ALPBOIEN)
"RTN","ALPBPWRD",171,0)
 ...D F132^ALPBFRM1(.ALPBDATA,ALPBDAYS,ALPBMLOG,.ALPBFORM,ALPBIEN)
"RTN","ALPBPWRD",172,0)
 ...;D F132^ALPBFRM1(.ALPBDATA,ALPBDAYS,.ALPBFORM)
"RTN","ALPBPWRD",173,0)
 ...I $Y+ALPBFORM(0)=IOSL!($Y+ALPBFORM(0)>IOSL) D PAGE
"RTN","ALPBPWRD",174,0)
 ...F ALPBX=1:1:ALPBFORM(0) W !,ALPBFORM(ALPBX)
"RTN","ALPBPWRD",175,0)
 ...K ALPBDATA,ALPBFORM,ALPBOIEN,ALPBX
"RTN","ALPBPWRD",176,0)
 ..K ALPBORDN
"RTN","ALPBPWRD",177,0)
 .K ALPBOST
"RTN","ALPBPWRD",178,0)
 K ALPBOCT
"RTN","ALPBPWRD",179,0)
 ; print footer at end of this patient's record...
"RTN","ALPBPWRD",180,0)
 I $Y+10>IOSL D PAGE
"RTN","ALPBPWRD",181,0)
 W !!
"RTN","ALPBPWRD",182,0)
 D FOOT^ALPBFRMU
"RTN","ALPBPWRD",183,0)
 ;Print a blank page between patient
"RTN","ALPBPWRD",184,0)
 W @IOF
"RTN","ALPBPWRD",185,0)
 S ALPBPG=0
"RTN","ALPBPWRD",186,0)
 K ALPBPDAT
"RTN","ALPBPWRD",187,0)
 Q
"RTN","ALPBPWRD",188,0)
 ;K ALPBIEN,ALPBPDAT KILLING ALPBIEN WILL BREAK SORT BY ROOM/BED
"RTN","ALPBPWRD",189,0)
 ;
"RTN","ALPBPWRD",190,0)
DONE ;   
"RTN","ALPBPWRD",191,0)
 K ALPBDAYS,ALPBMLOG,ALPBOTYP,ALPBPG,ALPBPTN,ALPBRDAT,ALPBWARD,^TMP($J),ALPRM,ALPRM1,ALPBD,ALPBIEN,ALPBSORT
"RTN","ALPBPWRD",192,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ALPBPWRD",193,0)
 Q
"RTN","ALPBPWRD",194,0)
 ;
"RTN","ALPBPWRD",195,0)
PAGE ; print page header for patient...
"RTN","ALPBPWRD",196,0)
 W @IOF
"RTN","ALPBPWRD",197,0)
 S ALPBPG=ALPBPG+1
"RTN","ALPBPWRD",198,0)
 D HDR^ALPBFRMU(.ALPBPDAT,ALPBPG,.ALPBHDR)
"RTN","ALPBPWRD",199,0)
 F ALPBX=1:1:ALPBHDR(0) W !,ALPBHDR(ALPBX)
"RTN","ALPBPWRD",200,0)
 K ALPBHDR,ALPBX
"RTN","ALPBPWRD",201,0)
 Q
"RTN","ALPBUTL1")
0^2^B35747915^B34181309
"RTN","ALPBUTL1",1,0)
ALPBUTL1 ;OIFO-DALLAS MW,SED,KC-BCBU BACKUP REPORT FUNCTIONS AND UTILITIES  ;01/01/03
"RTN","ALPBUTL1",2,0)
 ;;3.0;BAR CODE MED ADMIN;**8,37**;Mar 2004;Build 10
"RTN","ALPBUTL1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ALPBUTL1",4,0)
 ;
"RTN","ALPBUTL1",5,0)
 ; Reference/IA
"RTN","ALPBUTL1",6,0)
 ; INP^VADPT/10061
"RTN","ALPBUTL1",7,0)
 ; DIC(42/10039
"RTN","ALPBUTL1",8,0)
 ; DIC(42/2440
"RTN","ALPBUTL1",9,0)
 ;
"RTN","ALPBUTL1",10,0)
ERRBLD(SEG,MSG,ERR) ; build an error array for non-FileMan-related errors...
"RTN","ALPBUTL1",11,0)
 ; SEG = HL7 segment name
"RTN","ALPBUTL1",12,0)
 ; MSG = a message that will be used in the error text portion of the array (optional -- if not passed, the
"RTN","ALPBUTL1",13,0)
 ;       default will be used)
"RTN","ALPBUTL1",14,0)
 ; ERR = array passed by reference in which error will be returned
"RTN","ALPBUTL1",15,0)
 ; note:  code 999 is a code indicating a non-FileMan error for filing the error message in file 53.71
"RTN","ALPBUTL1",16,0)
 S ERR("DIERR")=1
"RTN","ALPBUTL1",17,0)
 S ERR("DIERR",1)=999
"RTN","ALPBUTL1",18,0)
 S ERR("DIERR",1,"TEXT",1)=$S($G(MSG)'="":MSG,1:"Invalid parameter passed to "_SEG_" module in routine ALPBHL1U")
"RTN","ALPBUTL1",19,0)
 Q
"RTN","ALPBUTL1",20,0)
 ;
"RTN","ALPBUTL1",21,0)
ERRLOG(IEN,OIEN,MSGREC,SEGNAME,SEGDATA,ERRTEXT) ; log filing errors...
"RTN","ALPBUTL1",22,0)
 ; this module logs error data in the BCMA BACKUP PARAMETERS file (53.71).  These
"RTN","ALPBUTL1",23,0)
 ; errors usually occur as the result of missing or bad data passed to one of the
"RTN","ALPBUTL1",24,0)
 ; File Manager DBS calls used by this package.
"RTN","ALPBUTL1",25,0)
 ; 
"RTN","ALPBUTL1",26,0)
 ; IEN       = the patient's record number in file 53.7
"RTN","ALPBUTL1",27,0)
 ; OIEN      = the order number's sub-file record number in file 53.7
"RTN","ALPBUTL1",28,0)
 ; MSGREC    = the HL7 message's record number in file 772
"RTN","ALPBUTL1",29,0)
 ; SEGNAME   = the HL7 segment associated with the error (optional)
"RTN","ALPBUTL1",30,0)
 ; SEGDATA   = the HL7 segment's data (optional)
"RTN","ALPBUTL1",31,0)
 ; ERRTEXT   = an array passed by reference which contains the error
"RTN","ALPBUTL1",32,0)
 ;             code (numeric) and the error text to be filed.  It is
"RTN","ALPBUTL1",33,0)
 ;             expected that this is usually the error array returned
"RTN","ALPBUTL1",34,0)
 ;             from a FileMan DBS call, so the format is specific:
"RTN","ALPBUTL1",35,0)
 ;
"RTN","ALPBUTL1",36,0)
 ;             ERRTEXT("DIERR",n)=error code (numeric)
"RTN","ALPBUTL1",37,0)
 ;             ERRTEXT("DIERR",n,"TEXT",1)=first line of error text
"RTN","ALPBUTL1",38,0)
 ;             ERRTEXT("DIERR",n,"TEXT",2)=second line of error text
"RTN","ALPBUTL1",39,0)
 ;             ERRTEXT("DIERR",n,"TEXT",n)=last line of error text
"RTN","ALPBUTL1",40,0)
 ;
"RTN","ALPBUTL1",41,0)
 ;             However, any error message can be passed to this module
"RTN","ALPBUTL1",42,0)
 ;             as long as the above format is used.
"RTN","ALPBUTL1",43,0)
 N ALPBCODE,ALPBFERR,ALPBFILE,ALPBLOGD,ALPBN1,ALPBN2,ALPBPIEN,ALPBTEXT,ALPBX
"RTN","ALPBUTL1",44,0)
 S ALPBLOGD=$$NOW^XLFDT()
"RTN","ALPBUTL1",45,0)
 S ALPBPIEN=+$O(^ALPB(53.71,0))
"RTN","ALPBUTL1",46,0)
 I ALPBPIEN=0 D
"RTN","ALPBUTL1",47,0)
 .S X="ONE"
"RTN","ALPBUTL1",48,0)
 .S DIC="^ALPB(53.71,"
"RTN","ALPBUTL1",49,0)
 .S DIC(0)="LZ"
"RTN","ALPBUTL1",50,0)
 .S DIC("DR")="1///^S X=3"
"RTN","ALPBUTL1",51,0)
 .S DINUM=1
"RTN","ALPBUTL1",52,0)
 .S DLAYGO=53.71
"RTN","ALPBUTL1",53,0)
 .D FILE^DICN K DIC
"RTN","ALPBUTL1",54,0)
 .S ALPBPIEN=+Y
"RTN","ALPBUTL1",55,0)
 I ALPBPIEN'>0 Q
"RTN","ALPBUTL1",56,0)
 S ALPBN1=+$O(^ALPB(53.71,ALPBPIEN,1," "),-1)+1
"RTN","ALPBUTL1",57,0)
 S ALPBFILE(53.713,"+"_ALPBN1_","_ALPBPIEN_",",.01)=ALPBLOGD
"RTN","ALPBUTL1",58,0)
 S ALPBFILE(53.713,"+"_ALPBN1_","_ALPBPIEN_",",1)=+$G(IEN)
"RTN","ALPBUTL1",59,0)
 S ALPBFILE(53.713,"+"_ALPBN1_","_ALPBPIEN_",",2)=+$G(OIEN)
"RTN","ALPBUTL1",60,0)
 S ALPBFILE(53.713,"+"_ALPBN1_","_ALPBPIEN_",",3)=+$G(MSGREC)
"RTN","ALPBUTL1",61,0)
 S ALPBFILE(53.713,"+"_ALPBN1_","_ALPBPIEN_",",3.1)=$G(SEGNAME)
"RTN","ALPBUTL1",62,0)
 S ALPBFILE(53.713,"+"_ALPBN1_","_ALPBPIEN_",",3.2)=$G(SEGDATA)
"RTN","ALPBUTL1",63,0)
 D UPDATE^DIE("","ALPBFILE","ALPBN1","ALPBFERR")
"RTN","ALPBUTL1",64,0)
 K ALPBFERR,ALPBFILE
"RTN","ALPBUTL1",65,0)
 S ALPBX=0
"RTN","ALPBUTL1",66,0)
 F  S ALPBX=$O(ERRTEXT("DIERR",ALPBX)) Q:'ALPBX  D
"RTN","ALPBUTL1",67,0)
 .S ALPBCODE=ERRTEXT("DIERR",ALPBX)
"RTN","ALPBUTL1",68,0)
 .; file the error code...
"RTN","ALPBUTL1",69,0)
 .S ALPBN2=+$O(^ALPB(53.71,ALPBPIEN,1,ALPBN1,2," "),-1)+1
"RTN","ALPBUTL1",70,0)
 .S ALPBFILE(53.7135,"+"_ALPBN2_","_ALPBN1_","_ALPBPIEN_",",.01)=ALPBCODE
"RTN","ALPBUTL1",71,0)
 .D UPDATE^DIE("","ALPBFILE","ALPBN2","ALPBFERR")
"RTN","ALPBUTL1",72,0)
 .K ALPBFERR,ALPBFILE
"RTN","ALPBUTL1",73,0)
 .; file the error text...
"RTN","ALPBUTL1",74,0)
 .M ALPBTEXT=ERRTEXT("DIERR",ALPBX,"TEXT")
"RTN","ALPBUTL1",75,0)
 .D WP^DIE(53.7135,ALPBN2_","_ALPBN1_","_ALPBPIEN_",",1,"","ALPBTEXT","ALPBFERR")
"RTN","ALPBUTL1",76,0)
 .;S ALPBFILE(53.7135,"+"_ALPBN2_","_ALPBN1_","_ALPBPIEN_",",1)=ALPBTEXT
"RTN","ALPBUTL1",77,0)
 .;D UPDATE^DIE("","ALPBFILE","ALPBN2","ALPBFERR")
"RTN","ALPBUTL1",78,0)
 .K ALPBCODE,ALPBFERR,ALPBFILE,ALPBN2,ALPBTEXT
"RTN","ALPBUTL1",79,0)
 Q
"RTN","ALPBUTL1",80,0)
 ;
"RTN","ALPBUTL1",81,0)
CLEAN(IEN) ; check error log records to see if the patients' whose records
"RTN","ALPBUTL1",82,0)
 ; are noted still exist in file 53.7.  if not, delete the error log
"RTN","ALPBUTL1",83,0)
 ; record(s) in file 53.71...
"RTN","ALPBUTL1",84,0)
 ; IEN = patient record number in file 53.7
"RTN","ALPBUTL1",85,0)
 ; Note:  this function is also called from DELPT^ALPBUTL when a patient's
"RTN","ALPBUTL1",86,0)
 ; record is deleted (as a result of a discharge action) from 53.7.
"RTN","ALPBUTL1",87,0)
 ;
"RTN","ALPBUTL1",88,0)
 N ALPBX,ALPBY,DA,DIK,X,Y
"RTN","ALPBUTL1",89,0)
 ; patient still has record in 53.7?  if so, quit...
"RTN","ALPBUTL1",90,0)
 I $G(^ALPB(53.7,IEN,0))'="" Q
"RTN","ALPBUTL1",91,0)
 S ALPBX=0
"RTN","ALPBUTL1",92,0)
 F  S ALPBX=$O(^ALPB(53.71,"C",IEN,ALPBX)) Q:'ALPBX  D
"RTN","ALPBUTL1",93,0)
 .S ALPBY=0
"RTN","ALPBUTL1",94,0)
 .F  S ALPBY=$O(^ALPB(53.71,"C",IEN,ALPBX,ALPBY)) Q:'ALPBY  D
"RTN","ALPBUTL1",95,0)
 ..S DA=ALPBY
"RTN","ALPBUTL1",96,0)
 ..S DA(1)=ALPBX
"RTN","ALPBUTL1",97,0)
 ..S DIK="^ALPB(53.71,"_DA(1)_",1,"
"RTN","ALPBUTL1",98,0)
 ..D ^DIK
"RTN","ALPBUTL1",99,0)
 ..K DA,DIK
"RTN","ALPBUTL1",100,0)
 .K ALPBY
"RTN","ALPBUTL1",101,0)
 K ALPBX
"RTN","ALPBUTL1",102,0)
 Q
"RTN","ALPBUTL1",103,0)
 ;
"RTN","ALPBUTL1",104,0)
DELERR(ERRIEN) ; delete an error log entry from file 53.71...
"RTN","ALPBUTL1",105,0)
 ; ERRIEN = error log entry's internal record number
"RTN","ALPBUTL1",106,0)
 N ALPBPARM,DA,DIK,X,Y
"RTN","ALPBUTL1",107,0)
 S ALPBPARM=+$O(^ALPB(53.71,0))
"RTN","ALPBUTL1",108,0)
 I ALPBPARM'>0 Q
"RTN","ALPBUTL1",109,0)
 S DA=ERRIEN
"RTN","ALPBUTL1",110,0)
 S DA(1)=ALPBPARM
"RTN","ALPBUTL1",111,0)
 S DIK="^ALPB(53.71,"_DA(1)_",1,"
"RTN","ALPBUTL1",112,0)
 D ^DIK
"RTN","ALPBUTL1",113,0)
 Q
"RTN","ALPBUTL1",114,0)
 ;
"RTN","ALPBUTL1",115,0)
PTLIST(LTYPE,RESULTS) ; get list of patients in file 53.7...
"RTN","ALPBUTL1",116,0)
 ; LTYPE   = passed = "ALL" to list all patients or
"RTN","ALPBUTL1",117,0)
 ;                  = <wardname> to list patients on a selected ward
"RTN","ALPBUTL1",118,0)
 ; RESULTS = an array passed by reference in which data will be returned
"RTN","ALPBUTL1",119,0)
 N ALPBDATA,ALPBIEN,ALPBPTN,ALPBX
"RTN","ALPBUTL1",120,0)
 I $G(LTYPE)="" S LTYPE="ALL"
"RTN","ALPBUTL1",121,0)
 S ALPBX=0
"RTN","ALPBUTL1",122,0)
 I LTYPE="ALL" D
"RTN","ALPBUTL1",123,0)
 .S ALPBPTN=""
"RTN","ALPBUTL1",124,0)
 .F  S ALPBPTN=$O(^ALPB(53.7,"B",ALPBPTN)) Q:ALPBPTN=""  D
"RTN","ALPBUTL1",125,0)
 ..S ALPBIEN=0
"RTN","ALPBUTL1",126,0)
 ..F  S ALPBIEN=$O(^ALPB(53.7,"B",ALPBPTN,ALPBIEN)) Q:'ALPBIEN  D
"RTN","ALPBUTL1",127,0)
 ...S ALPBDATA=$G(^ALPB(53.7,ALPBIEN,0))
"RTN","ALPBUTL1",128,0)
 ...I ALPBDATA="" K ALPBDATA Q
"RTN","ALPBUTL1",129,0)
 ...S ALPBX=ALPBX+1
"RTN","ALPBUTL1",130,0)
 ...S RESULTS(ALPBX)=ALPBPTN_"^"_$P(ALPBDATA,"^",2)_"^"_$P(ALPBDATA,"^",5)_"^"_$P(ALPBDATA,"^",6)_"^"_$P(ALPBDATA,"^",7)
"RTN","ALPBUTL1",131,0)
 ...K ALPBDATA
"RTN","ALPBUTL1",132,0)
 ..K ALPBIEN
"RTN","ALPBUTL1",133,0)
 .K ALPBPTN
"RTN","ALPBUTL1",134,0)
 I LTYPE'="ALL" D
"RTN","ALPBUTL1",135,0)
 .S ALPBPTN=""
"RTN","ALPBUTL1",136,0)
 .F  S ALPBPTN=$O(^ALPB(53.7,"AW",LTYPE,ALPBPTN)) Q:ALPBPTN=""  D
"RTN","ALPBUTL1",137,0)
 ..S ALPBIEN=0
"RTN","ALPBUTL1",138,0)
 ..F  S ALPBIEN=$O(^ALPB(53.7,"AW",LTYPE,ALPBPTN,ALPBIEN)) Q:'ALPBIEN  D
"RTN","ALPBUTL1",139,0)
 ...S ALPBDATA=$G(^ALPB(53.7,ALPBIEN,0))
"RTN","ALPBUTL1",140,0)
 ...I ALPBDATA="" K ALPBDATA Q
"RTN","ALPBUTL1",141,0)
 ...S ALPBX=ALPBX+1
"RTN","ALPBUTL1",142,0)
 ...S RESULTS(ALPBX)=ALPBPTN_"^"_$P(ALPBDATA,"^",2)_"^"_$P(ALPBDATA,"^",5)_"^"_$P(ALPBDATA,"^",6)_"^"_$P(ALPBDATA,"^",7)
"RTN","ALPBUTL1",143,0)
 ...K ALPBDATA
"RTN","ALPBUTL1",144,0)
 ..K ALPBIEN
"RTN","ALPBUTL1",145,0)
 .K ALPBPTN
"RTN","ALPBUTL1",146,0)
 Q
"RTN","ALPBUTL1",147,0)
 ;
"RTN","ALPBUTL1",148,0)
STAT(ST) ;This will return the value of a status code for pharmacy
"RTN","ALPBUTL1",149,0)
 I $G(ST)="" Q ""
"RTN","ALPBUTL1",150,0)
 I $L($T(@ST)) G @ST
"RTN","ALPBUTL1",151,0)
 Q ""
"RTN","ALPBUTL1",152,0)
IP Q "pending"
"RTN","ALPBUTL1",153,0)
CM Q "finished/verified by pharmacist(active)"
"RTN","ALPBUTL1",154,0)
DC Q "discontinued"
"RTN","ALPBUTL1",155,0)
RP Q "replaced"
"RTN","ALPBUTL1",156,0)
HD Q "on hold"
"RTN","ALPBUTL1",157,0)
ZE Q "expired"
"RTN","ALPBUTL1",158,0)
ZS Q "suspended(active)"
"RTN","ALPBUTL1",159,0)
ZU Q "un-suspended(active)"
"RTN","ALPBUTL1",160,0)
ZX Q "unreleased"
"RTN","ALPBUTL1",161,0)
ZZ Q "renewed"
"RTN","ALPBUTL1",162,0)
 ;
"RTN","ALPBUTL1",163,0)
STAT2(CODE) ; convert order status code for output...
"RTN","ALPBUTL1",164,0)
 ; this function is used primarily by the workstation software
"RTN","ALPBUTL1",165,0)
 ; CODE = an order status code
"RTN","ALPBUTL1",166,0)
 ; returns printable status code
"RTN","ALPBUTL1",167,0)
 I $G(CODE)="" Q "Unknown"
"RTN","ALPBUTL1",168,0)
 I CODE="IP"!(CODE="ZX") Q "Pending"
"RTN","ALPBUTL1",169,0)
 I CODE="CM"!(CODE="ZU")!(CODE="ZZ") Q "Active"
"RTN","ALPBUTL1",170,0)
 I CODE="HD"!(CODE="ZS") Q "Hold"
"RTN","ALPBUTL1",171,0)
 I CODE="DC"!(CODE="RP")!(CODE="ZE") Q "Expired"
"RTN","ALPBUTL1",172,0)
 Q "Unknown"
"RTN","ALPBUTL1",173,0)
 ;
"RTN","ALPBUTL1",174,0)
DIV(DFN,ALPBMDT) ;get the Division for a patient
"RTN","ALPBUTL1",175,0)
 I +$G(DFN)'>0 Q ""
"RTN","ALPBUTL1",176,0)
 N ALPBDIV,ALPWRD,VAIN,VAINDT
"RTN","ALPBUTL1",177,0)
 S:+$G(ALPBMDT)>0 VAINDT=$P(ALPBMDT,".",1)
"RTN","ALPBUTL1",178,0)
 K ALPBMDT
"RTN","ALPBUTL1",179,0)
 D INP^VADPT
"RTN","ALPBUTL1",180,0)
 S ALPWRD=$P($G(VAIN(4)),U,1)
"RTN","ALPBUTL1",181,0)
 Q:+ALPWRD'>0 ""
"RTN","ALPBUTL1",182,0)
 ;Check to see if ward is a DOMICILIARY 
"RTN","ALPBUTL1",183,0)
 I $P($G(^DIC(42,ALPWRD,0)),U,3)="D",+$$GET^XPAR("PKG.BAR CODE MED ADMIN","PSB BKUP DOM FILTER",1,"Q")>0 Q "DOM"
"RTN","ALPBUTL1",184,0)
 S ALPBDIV=$P($G(^DIC(42,ALPWRD,0)),U,11)
"RTN","ALPBUTL1",185,0)
 Q:+ALPBDIV'>0 ""
"RTN","ALPBUTL1",186,0)
 Q ALPBDIV
"RTN","ALPBUTL1",187,0)
 ;
"RTN","ALPBUTL1",188,0)
CNV(A,B,X) ;CONVERT A STRING
"RTN","ALPBUTL1",189,0)
 ;This API will take a HL7 segment and convert characters
"RTN","ALPBUTL1",190,0)
 ;defined in the input
"RTN","ALPBUTL1",191,0)
 ;Example:
"RTN","ALPBUTL1",192,0)
 ;Single encoding characters can be converted such as ^ to ~
"RTN","ALPBUTL1",193,0)
 ;or multiple encoding characters can be converted such as
"RTN","ALPBUTL1",194,0)
 ;  |~^@/ to ^~|/@
"RTN","ALPBUTL1",195,0)
 ;A is the string of HL7 encoding characters to be converted
"RTN","ALPBUTL1",196,0)
 ;B is the string of HL7 encoding characters to be converted to
"RTN","ALPBUTL1",197,0)
 ;X is te message string to be converted
"RTN","ALPBUTL1",198,0)
 I A=""!B=""!X="" Q ""
"RTN","ALPBUTL1",199,0)
 F I=1:1:$L(A) S A(I)=$E(A,I,I),A(I,1)=""
"RTN","ALPBUTL1",200,0)
 F I=1:1:$L(B) S B(I)=$E(B,I,I)
"RTN","ALPBUTL1",201,0)
 S J=0
"RTN","ALPBUTL1",202,0)
 F  S J=$O(A(J)) Q:+J'>0  D
"RTN","ALPBUTL1",203,0)
 . F I=1:1:$L(X) S:$E(X,I,I)=A(J) A(J,1)=A(J,1)_I_U
"RTN","ALPBUTL1",204,0)
 S J=0
"RTN","ALPBUTL1",205,0)
 F  S J=$O(A(J)) Q:+J'>0  D
"RTN","ALPBUTL1",206,0)
 . Q:'$D(A(J,1))!'$D(B(J))
"RTN","ALPBUTL1",207,0)
 . F I=1:1:$L(A(J,1),U) S C=$P(A(J,1),U,I) S:+C>0 $E(X,C,C)=B(J)
"RTN","ALPBUTL1",208,0)
 Q X
"VER")
8.0^22.0
"BLD",6399,6)
^31
**END**
**END**
