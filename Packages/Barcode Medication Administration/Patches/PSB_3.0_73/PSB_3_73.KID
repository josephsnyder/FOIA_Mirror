KIDS Distribution saved on Dec 03, 2013@12:42:21
PSB*3*73
**KIDS**:PSB*3.0*73^

**INSTALL NAME**
PSB*3.0*73
"BLD",8606,0)
PSB*3.0*73^BAR CODE MED ADMIN^0^3131203^y
"BLD",8606,1,0)
^^1^1^3130108^
"BLD",8606,1,1,0)
IMR6 CLINIC ORDER ENHANCEMENT FOR BCBU
"BLD",8606,4,0)
^9.64PA^53.7^1
"BLD",8606,4,53.7,0)
53.7
"BLD",8606,4,53.7,2,0)
^9.641^53.702^1
"BLD",8606,4,53.7,2,53.702,0)
ORDER NUMBER  (sub-file)
"BLD",8606,4,53.7,2,53.702,1,0)
^9.6411^3.5^1
"BLD",8606,4,53.7,2,53.702,1,3.5,0)
CLINIC NAME
"BLD",8606,4,53.7,222)
y^y^p^^^^n^^n
"BLD",8606,4,53.7,224)

"BLD",8606,4,"APDD",53.7,53.702)

"BLD",8606,4,"APDD",53.7,53.702,3.5)

"BLD",8606,4,"B",53.7,53.7)

"BLD",8606,6.3)
31
"BLD",8606,"KRN",0)
^9.67PA^779.2^20
"BLD",8606,"KRN",.4,0)
.4
"BLD",8606,"KRN",.401,0)
.401
"BLD",8606,"KRN",.402,0)
.402
"BLD",8606,"KRN",.403,0)
.403
"BLD",8606,"KRN",.5,0)
.5
"BLD",8606,"KRN",.84,0)
.84
"BLD",8606,"KRN",3.6,0)
3.6
"BLD",8606,"KRN",3.8,0)
3.8
"BLD",8606,"KRN",9.2,0)
9.2
"BLD",8606,"KRN",9.8,0)
9.8
"BLD",8606,"KRN",9.8,"NM",0)
^9.68A^12^11
"BLD",8606,"KRN",9.8,"NM",1,0)
ALPBFRM1^^0^B66421112
"BLD",8606,"KRN",9.8,"NM",2,0)
ALPBPPAT^^0^B36616367
"BLD",8606,"KRN",9.8,"NM",4,0)
ALPBPWRD^^0^B81368962
"BLD",8606,"KRN",9.8,"NM",5,0)
ALPBPALL^^0^B49924442
"BLD",8606,"KRN",9.8,"NM",6,0)
ALPBUTL^^0^B88759700
"BLD",8606,"KRN",9.8,"NM",7,0)
ALPBPCLN^^0^B73767305
"BLD",8606,"KRN",9.8,"NM",8,0)
ALPBIN^^0^B15950829
"BLD",8606,"KRN",9.8,"NM",9,0)
ALPBIND^^0^B42568406
"BLD",8606,"KRN",9.8,"NM",10,0)
ALPBHL1^^0^B70207141
"BLD",8606,"KRN",9.8,"NM",11,0)
ALPBHL1U^^0^B69918866
"BLD",8606,"KRN",9.8,"NM",12,0)
ALPBINP^^0^B74330876
"BLD",8606,"KRN",9.8,"NM","B","ALPBFRM1",1)

"BLD",8606,"KRN",9.8,"NM","B","ALPBHL1",10)

"BLD",8606,"KRN",9.8,"NM","B","ALPBHL1U",11)

"BLD",8606,"KRN",9.8,"NM","B","ALPBIN",8)

"BLD",8606,"KRN",9.8,"NM","B","ALPBIND",9)

"BLD",8606,"KRN",9.8,"NM","B","ALPBINP",12)

"BLD",8606,"KRN",9.8,"NM","B","ALPBPALL",5)

"BLD",8606,"KRN",9.8,"NM","B","ALPBPCLN",7)

"BLD",8606,"KRN",9.8,"NM","B","ALPBPPAT",2)

"BLD",8606,"KRN",9.8,"NM","B","ALPBPWRD",4)

"BLD",8606,"KRN",9.8,"NM","B","ALPBUTL",6)

"BLD",8606,"KRN",19,0)
19
"BLD",8606,"KRN",19,"NM",0)
^9.68A^3^3
"BLD",8606,"KRN",19,"NM",1,0)
PSB BCBU PRINT MAR ALL CLINICS^^0
"BLD",8606,"KRN",19,"NM",2,0)
PSB BCBU PRINT MAR CLINIC^^0
"BLD",8606,"KRN",19,"NM",3,0)
PSB BCBU WRKSTN MAIN^^2
"BLD",8606,"KRN",19,"NM","B","PSB BCBU PRINT MAR ALL CLINICS",1)

"BLD",8606,"KRN",19,"NM","B","PSB BCBU PRINT MAR CLINIC",2)

"BLD",8606,"KRN",19,"NM","B","PSB BCBU WRKSTN MAIN",3)

"BLD",8606,"KRN",19.1,0)
19.1
"BLD",8606,"KRN",101,0)
101
"BLD",8606,"KRN",409.61,0)
409.61
"BLD",8606,"KRN",771,0)
771
"BLD",8606,"KRN",779.2,0)
779.2
"BLD",8606,"KRN",870,0)
870
"BLD",8606,"KRN",8989.51,0)
8989.51
"BLD",8606,"KRN",8989.52,0)
8989.52
"BLD",8606,"KRN",8994,0)
8994
"BLD",8606,"KRN","B",.4,.4)

"BLD",8606,"KRN","B",.401,.401)

"BLD",8606,"KRN","B",.402,.402)

"BLD",8606,"KRN","B",.403,.403)

"BLD",8606,"KRN","B",.5,.5)

"BLD",8606,"KRN","B",.84,.84)

"BLD",8606,"KRN","B",3.6,3.6)

"BLD",8606,"KRN","B",3.8,3.8)

"BLD",8606,"KRN","B",9.2,9.2)

"BLD",8606,"KRN","B",9.8,9.8)

"BLD",8606,"KRN","B",19,19)

"BLD",8606,"KRN","B",19.1,19.1)

"BLD",8606,"KRN","B",101,101)

"BLD",8606,"KRN","B",409.61,409.61)

"BLD",8606,"KRN","B",771,771)

"BLD",8606,"KRN","B",779.2,779.2)

"BLD",8606,"KRN","B",870,870)

"BLD",8606,"KRN","B",8989.51,8989.51)

"BLD",8606,"KRN","B",8989.52,8989.52)

"BLD",8606,"KRN","B",8994,8994)

"BLD",8606,"QDEF")
^^^^NO^^^^YES^^NO
"BLD",8606,"QUES",0)
^9.62^^
"BLD",8606,"REQB",0)
^9.611^1^1
"BLD",8606,"REQB",1,0)
PSB*3.0*59^2
"BLD",8606,"REQB","B","PSB*3.0*59",1)

"FIA",53.7)
BCMA BACKUP DATA
"FIA",53.7,0)
^ALPB(53.7,
"FIA",53.7,0,0)
53.7
"FIA",53.7,0,1)
y^y^p^^^^n^^n
"FIA",53.7,0,10)

"FIA",53.7,0,11)

"FIA",53.7,0,"RLRO")

"FIA",53.7,0,"VR")
3.0^PSB
"FIA",53.7,53.7)
1
"FIA",53.7,53.702)
1
"FIA",53.7,53.702,3.5)

"KRN",19,12299,-1)
2^3
"KRN",19,12299,0)
PSB BCBU WRKSTN MAIN^BCMA Backup System (Wrkstn)^^M^11874^^^^^^^536^^1
"KRN",19,12299,10,0)
^19.01IP^10^10
"KRN",19,12299,10,9,0)
14103^PAC^4.2
"KRN",19,12299,10,9,"^")
PSB BCBU PRINT MAR ALL CLINICS
"KRN",19,12299,10,10,0)
14104^PC^4.4
"KRN",19,12299,10,10,"^")
PSB BCBU PRINT MAR CLINIC
"KRN",19,12299,"U")
BCMA BACKUP SYSTEM (WRKSTN)
"KRN",19,14103,-1)
0^1
"KRN",19,14103,0)
PSB BCBU PRINT MAR ALL CLINICS^Print MAR for All Clinics^^R^^^^^^^^BAR CODE MED ADMIN^^
"KRN",19,14103,1,0)
^^1^1^3130225^
"KRN",19,14103,1,1,0)
This option prints a MAR report All Clinics.   
"KRN",19,14103,20)

"KRN",19,14103,25)
EN^ALPBPCLN("ALL")
"KRN",19,14103,99)
62878,48103
"KRN",19,14103,"U")
PRINT MAR FOR ALL CLINICS
"KRN",19,14104,-1)
0^2
"KRN",19,14104,0)
PSB BCBU PRINT MAR CLINIC^Print MAR for Selected Clinic^^R^^^^^^^^BAR CODE MED ADMIN
"KRN",19,14104,1,0)
^^1^1^3130225^
"KRN",19,14104,1,1,0)
This option prints a MAR report a Selected Clinic.
"KRN",19,14104,25)
EN^ALPBPCLN("CLN")
"KRN",19,14104,"U")
PRINT MAR FOR SELECTED CLINIC
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",536,-1)
1^1
"PKG",536,0)
BAR CODE MED ADMIN^PSB^BAR CODE MEDICATION ADMINISTRATION
"PKG",536,20,0)
^9.402P^^
"PKG",536,22,0)
^9.49I^1^1
"PKG",536,22,1,0)
3.0^3040224^3040819^11874
"PKG",536,22,1,"PAH",1,0)
73^3131203^10000000009
"PKG",536,22,1,"PAH",1,1,0)
^^1^1^3131203
"PKG",536,22,1,"PAH",1,1,1,0)
IMR6 CLINIC ORDER ENHANCEMENT FOR BCBU
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
11
"RTN","ALPBFRM1")
0^1^B66421112
"RTN","ALPBFRM1",1,0)
ALPBFRM1 ;OIFO-DALLAS MW,SED,KC -STANDARD PRINT FORMATTING UTIL;2/24/12 12:11am ;1/22/13 11:22pm
"RTN","ALPBFRM1",2,0)
 ;;3.0;BAR CODE MED ADMIN;**8,48,69,59,73**;Mar 2004;Build 31
"RTN","ALPBFRM1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ALPBFRM1",4,0)
 ;
"RTN","ALPBFRM1",5,0)
 ;*69 move code to print Long Wp special istructions lines near end of
"RTN","ALPBFRM1",6,0)
 ;    a grid boundary
"RTN","ALPBFRM1",7,0)
 ;*73 - add code to print Clinc Name above meds in detail lines and
"RTN","ALPBFRM1",8,0)
 ;      Location in heading.
"RTN","ALPBFRM1",9,0)
 ;
"RTN","ALPBFRM1",10,0)
F132(DATA,DAYS,MLCNT,RESULTS,ALPPAT) ; format data into a 132-column
"RTN","ALPBFRM1",11,0)
 ; output array...
"RTN","ALPBFRM1",12,0)
 ; DATA = an array containing a specific order node for a selected
"RTN","ALPBFRM1",13,0)
 ;        patient in file 53.7
"RTN","ALPBFRM1",14,0)
 ; DAYS = a number that represents the number of initial boxes
"RTN","ALPBFRM1",15,0)
 ;        (1 box = 1 day) to add to lines 4-10 (max=7 -- note that
"RTN","ALPBFRM1",16,0)
 ;        this is usually a 3-day MAR, but a 7-day MAR could be
"RTN","ALPBFRM1",17,0)
 ;        returned from this format utility)
"RTN","ALPBFRM1",18,0)
 ; MLCNT = Number of Med-log entries to print with orders
"RTN","ALPBFRM1",19,0)
 ; RESULTS = an array passed by reference into which the formatted
"RTN","ALPBFRM1",20,0)
 ;           entry is set up returns a formatted array in RESULTS
"RTN","ALPBFRM1",21,0)
 ;           (note: total line count is returned at RESULTS(0))
"RTN","ALPBFRM1",22,0)
 I $D(DATA)="" Q
"RTN","ALPBFRM1",23,0)
 ;
"RTN","ALPBFRM1",24,0)
 N ALPBADM,ALPBDAYS,ALPBDRUG,ALPBIBOX,ALPBNBOX,ALPBPBOX,ALPBSTOP,ALPBTEXT,ALPBTIME,ALPBX,DATE,LINE,BOLDON,BOLDOFF,X,ALPBPRNG,ALPBFLG,ALPBPRN,ALPBMLC,ALPBTSTART
"RTN","ALPBFRM1",25,0)
 ; to use BOLD, comment out the next line and remove comments from
"RTN","ALPBFRM1",26,0)
 ; the following five lines...
"RTN","ALPBFRM1",27,0)
 S BOLDON="<<",BOLDOFF=">>"
"RTN","ALPBFRM1",28,0)
 ;S X="IOINHI;IOINORM"
"RTN","ALPBFRM1",29,0)
 ;D ENDR^%ZISS
"RTN","ALPBFRM1",30,0)
 ;S BOLDON=$G(IOINHI)
"RTN","ALPBFRM1",31,0)
 ;S BOLDOFF=$G(IOINORM)
"RTN","ALPBFRM1",32,0)
 ;D KILL^%ZISS
"RTN","ALPBFRM1",33,0)
 ;
"RTN","ALPBFRM1",34,0)
 ;S MLCNT=$S(+$P($G(^ALPB(53.71,1,2)),U,4)>0:+$P(^ALPB(53.71,1,2),U,4),1:1)
"RTN","ALPBFRM1",35,0)
 I $G(DAYS)="" S DAYS=3
"RTN","ALPBFRM1",36,0)
 I DAYS>7 S DAYS=7
"RTN","ALPBFRM1",37,0)
 S DATE=$$DT^XLFDT()
"RTN","ALPBFRM1",38,0)
 D FDATES^ALPBUTL(DATE,DAYS,.ALPBDAYS)
"RTN","ALPBFRM1",39,0)
 ; get administration timing (needed for formatting various lines)
"RTN","ALPBFRM1",40,0)
 S ALPBX=$P($G(DATA(4)),"^",4)
"RTN","ALPBFRM1",41,0)
 I ALPBX="" S ALPBADM=0
"RTN","ALPBFRM1",42,0)
 I ALPBX'="" D
"RTN","ALPBFRM1",43,0)
 .S ALPBADM=0
"RTN","ALPBFRM1",44,0)
 .F I=1:1 Q:$P(ALPBX,"-",I)=""  D
"RTN","ALPBFRM1",45,0)
 ..S ALPBADM(I)=$P(ALPBX,"-",I)
"RTN","ALPBFRM1",46,0)
 ..S ALPBADM=ALPBADM+1
"RTN","ALPBFRM1",47,0)
 ; line 1...
"RTN","ALPBFRM1",48,0)
 S RESULTS(1)=""
"RTN","ALPBFRM1",49,0)
 S RESULTS(1)=$$PAD^ALPBUTL(RESULTS(1),2)_"Location"      ;*73
"RTN","ALPBFRM1",50,0)
 S RESULTS(1)=$$PAD^ALPBUTL(RESULTS(1),66)_"Admin"
"RTN","ALPBFRM1",51,0)
 ; line 2...
"RTN","ALPBFRM1",52,0)
 S RESULTS(2)="Start"
"RTN","ALPBFRM1",53,0)
 S RESULTS(2)=$$PAD^ALPBUTL(RESULTS(2),25)_"Stop"
"RTN","ALPBFRM1",54,0)
 S RESULTS(2)=$$PAD^ALPBUTL(RESULTS(2),66)_"Times"
"RTN","ALPBFRM1",55,0)
 S RESULTS(2)=$$PAD^ALPBUTL(RESULTS(2),74)_ALPBDAYS(0)
"RTN","ALPBFRM1",56,0)
 I DAYS=3 S RESULTS(2)=RESULTS(2)_"   Notes"
"RTN","ALPBFRM1",57,0)
 ; line 3...
"RTN","ALPBFRM1",58,0)
 S RESULTS(3)=$$REPEAT^XLFSTR("-",132)
"RTN","ALPBFRM1",59,0)
 ; line 4...Clinic Name or INPATIENT                             ;*73
"RTN","ALPBFRM1",60,0)
 S RESULTS(4)=$S($P(DATA(0),U,5)="":"   INPATIENT",1:"   "_$P(DATA(0),U,5))       ;*73
"RTN","ALPBFRM1",61,0)
 ; line 5...                                                     ;*73
"RTN","ALPBFRM1",62,0)
 ; start and stop date/times...
"RTN","ALPBFRM1",63,0)
 S RESULTS(5)=$S($P($G(DATA(1)),"^")'="":$$FMTE^XLFDT($P(DATA(1),"^")),1:"Not on file")       ;*73
"RTN","ALPBFRM1",64,0)
 S RESULTS(5)=$$PAD^ALPBUTL(RESULTS(5),25)_$S($P($G(DATA(1)),"^",2)'="":$$FMTE^XLFDT($P(DATA(1),"^",2)),1:"Not on file")       ;73
"RTN","ALPBFRM1",65,0)
 ;
"RTN","ALPBFRM1",66,0)
 ; end of fixed line format, continue...
"RTN","ALPBFRM1",67,0)
 S LINE=5                                                        ;*73
"RTN","ALPBFRM1",68,0)
 ; get drug(s)...
"RTN","ALPBFRM1",69,0)
 I +$O(DATA(7,0)) D
"RTN","ALPBFRM1",70,0)
 .S LINE=LINE+1
"RTN","ALPBFRM1",71,0)
 .S RESULTS(LINE)=""
"RTN","ALPBFRM1",72,0)
 .S ALPBX=0
"RTN","ALPBFRM1",73,0)
 .F  S ALPBX=$O(DATA(7,ALPBX)) Q:'ALPBX  D
"RTN","ALPBFRM1",74,0)
 ..S ALPBDRUG=$G(BOLDON)_$P(DATA(7,ALPBX,0),"^",2)_$G(BOLDOFF)
"RTN","ALPBFRM1",75,0)
 ..;S RESULTS(LINE)=$G(RESULTS(LINE))_$P(DATA(7,ALPBX,0),"^",2)
"RTN","ALPBFRM1",76,0)
 ..S RESULTS(LINE)=$G(RESULTS(LINE))_ALPBDRUG
"RTN","ALPBFRM1",77,0)
 ..K ALPBDRUG
"RTN","ALPBFRM1",78,0)
 ..I +$O(DATA(7,ALPBX)) S LINE=LINE+1
"RTN","ALPBFRM1",79,0)
 ; any additives...
"RTN","ALPBFRM1",80,0)
 I +$O(DATA(8,0)) D
"RTN","ALPBFRM1",81,0)
 .S LINE=LINE+1
"RTN","ALPBFRM1",82,0)
 .S RESULTS(LINE)=" Additive(s): "
"RTN","ALPBFRM1",83,0)
 .S ALPBX=0
"RTN","ALPBFRM1",84,0)
 .F  S ALPBX=$O(DATA(8,ALPBX)) Q:'ALPBX  D
"RTN","ALPBFRM1",85,0)
 ..S ALPBDRUG=$P(DATA(8,ALPBX,0),"^",2)
"RTN","ALPBFRM1",86,0)
 ..; if UNITS is not already contained in ADDITIVE NAME, add it...
"RTN","ALPBFRM1",87,0)
 ..I $P(DATA(8,ALPBX,0),"^",3)'=""&(ALPBDRUG'[$P(DATA(8,ALPBX,0),"^",3)) S ALPBDRUG=ALPBDRUG_" "_$P(DATA(8,ALPBX,0),"^",3)
"RTN","ALPBFRM1",88,0)
 ..S ALPBDRUG=$G(BOLDON)_ALPBDRUG_$G(BOLDOFF)
"RTN","ALPBFRM1",89,0)
 ..S RESULTS(LINE)=RESULTS(LINE)_ALPBDRUG
"RTN","ALPBFRM1",90,0)
 ..K ALPBDRUG
"RTN","ALPBFRM1",91,0)
 ..I +$O(DATA(8,ALPBX)) D
"RTN","ALPBFRM1",92,0)
 ...S LINE=LINE+1
"RTN","ALPBFRM1",93,0)
 ...S RESULTS(LINE)=" "
"RTN","ALPBFRM1",94,0)
 ...S RESULTS(LINE)=$$PAD^ALPBUTL(RESULTS(LINE),14)
"RTN","ALPBFRM1",95,0)
 .K ALPBX
"RTN","ALPBFRM1",96,0)
 ; any solutions...
"RTN","ALPBFRM1",97,0)
 I +$O(DATA(9,0)) D
"RTN","ALPBFRM1",98,0)
 .S LINE=LINE+1
"RTN","ALPBFRM1",99,0)
 .S RESULTS(LINE)=" Solution(s): "
"RTN","ALPBFRM1",100,0)
 .S ALPBX=0
"RTN","ALPBFRM1",101,0)
 .F  S ALPBX=$O(DATA(9,ALPBX)) Q:'ALPBX  D
"RTN","ALPBFRM1",102,0)
 ..S ALPBDRUG=$P(DATA(9,ALPBX,0),"^",2)
"RTN","ALPBFRM1",103,0)
 ..; if UNITS is not already contained in SOLUTION NAME, add it...
"RTN","ALPBFRM1",104,0)
 ..I $P(DATA(9,ALPBX,0),"^",3)'=""&(ALPBDRUG'[$P(DATA(9,ALPBX,0),"^",3)) S ALPBDRUG=ALPBDRUG_" "_$P(DATA(9,ALPBX,0),"^",3)
"RTN","ALPBFRM1",105,0)
 ..S ALPBDRUG=$G(BOLDON)_ALPBDRUG_$G(BOLDOFF)
"RTN","ALPBFRM1",106,0)
 ..S RESULTS(LINE)=RESULTS(LINE)_ALPBDRUG
"RTN","ALPBFRM1",107,0)
 ..K ALPBDRUG
"RTN","ALPBFRM1",108,0)
 ..I +$O(DATA(9,ALPBX)) D
"RTN","ALPBFRM1",109,0)
 ...S LINE=LINE+1
"RTN","ALPBFRM1",110,0)
 ...S RESULTS(LINE)=" "
"RTN","ALPBFRM1",111,0)
 ...S RESULTS(LINE)=$$PAD^ALPBUTL(RESULTS(LINE),14)
"RTN","ALPBFRM1",112,0)
 .K ALPBX
"RTN","ALPBFRM1",113,0)
 ; give ($P(DATA(4),"^",1)=DOSAGE  $P(DATA(4),"^",2)=ROUTE  $P(DATA(4),"^",3)=SCHEDULE)...
"RTN","ALPBFRM1",114,0)
 S LINE=LINE+1
"RTN","ALPBFRM1",115,0)
 S RESULTS(LINE)="        Give: "_$P($G(DATA(4)),"^")_" "_$P($G(DATA(4)),"^",2)_" "_$P($G(DATA(4)),"^",3)
"RTN","ALPBFRM1",116,0)
 ;Set PRN Flag
"RTN","ALPBFRM1",117,0)
 S ALPBPRNG=0
"RTN","ALPBFRM1",118,0)
 S:$P($G(DATA(4)),"^",3)["PRN" ALPBPRNG=1
"RTN","ALPBFRM1",119,0)
 ;
"RTN","ALPBFRM1",120,0)
 ;S LINE=LINE+1,RESULTS(LINE)=""
"RTN","ALPBFRM1",121,0)
 ;
"RTN","ALPBFRM1",122,0)
 ; provider, pharmacist or entry person, and verifier...
"RTN","ALPBFRM1",123,0)
 S LINE=LINE+1
"RTN","ALPBFRM1",124,0)
 S RESULTS(LINE)="    Provider: "_$P($G(DATA(2)),"^")
"RTN","ALPBFRM1",125,0)
 S LINE=LINE+1
"RTN","ALPBFRM1",126,0)
 S RESULTS(LINE)="RPh/Entry by: "_$P($G(DATA(2)),"^",2)
"RTN","ALPBFRM1",127,0)
 I $P($G(DATA(2)),"^",3)'="" D
"RTN","ALPBFRM1",128,0)
 .S LINE=LINE+1
"RTN","ALPBFRM1",129,0)
 .S RESULTS(LINE)=" Verified by: "_$P(DATA(2),"^",3)
"RTN","ALPBFRM1",130,0)
 ; order number and type...
"RTN","ALPBFRM1",131,0)
 S LINE=LINE+1
"RTN","ALPBFRM1",132,0)
 S RESULTS(LINE)="     Order #: "_$P(DATA(0),"^")
"RTN","ALPBFRM1",133,0)
 S RESULTS(LINE)=$$PAD^ALPBUTL(RESULTS(LINE),25)_"Type: "_$$OTYP^ALPBUTL($P($G(DATA(3)),"^"))
"RTN","ALPBFRM1",134,0)
 ; order status...
"RTN","ALPBFRM1",135,0)
 S LINE=LINE+1
"RTN","ALPBFRM1",136,0)
 S RESULTS(LINE)="      Status: "_$P($P(DATA(0),"^",3),"~",2)
"RTN","ALPBFRM1",137,0)
 ;
"RTN","ALPBFRM1",138,0)
 ; med log data...
"RTN","ALPBFRM1",139,0)
 S LINE=LINE+1
"RTN","ALPBFRM1",140,0)
 S RESULTS(LINE)="BCMA MEDICATION LOG HISTORY"
"RTN","ALPBFRM1",141,0)
 ;I $G(MLDATE)'="" S RESULTS(LINE)=RESULTS(LINE)_" (since "_$$FMTE^XLFDT(MLDATE)_")"
"RTN","ALPBFRM1",142,0)
 I +$O(DATA(10,0))=0 D
"RTN","ALPBFRM1",143,0)
 .S LINE=LINE+1
"RTN","ALPBFRM1",144,0)
 .S RESULTS(LINE)=" No Medication Log entries are on file for this order."
"RTN","ALPBFRM1",145,0)
 I +$O(DATA(10,0)) D
"RTN","ALPBFRM1",146,0)
 .S LINE=LINE+1
"RTN","ALPBFRM1",147,0)
 .S RESULTS(LINE)=" Log Date"
"RTN","ALPBFRM1",148,0)
 .S RESULTS(LINE)=$$PAD^ALPBUTL(RESULTS(LINE),16)_"Message"
"RTN","ALPBFRM1",149,0)
 .S RESULTS(LINE)=$$PAD^ALPBUTL(RESULTS(LINE),31)_"Log Entry Person"
"RTN","ALPBFRM1",150,0)
 .I $O(DATA(10,"IMLOG",0))="" D
"RTN","ALPBFRM1",151,0)
 ..S LINE=LINE+1
"RTN","ALPBFRM1",152,0)
 ..S RESULTS(LINE)=" No entries since the above date are on file."
"RTN","ALPBFRM1",153,0)
 .;S ALPBMDT=MLDATE
"RTN","ALPBFRM1",154,0)
 .S ALPBMDT=0,ALPBMLC=1
"RTN","ALPBFRM1",155,0)
 .F  S ALPBMDT=$O(DATA(10,"IMLOG",ALPBMDT)) Q:'ALPBMDT!(ALPBMLC>MLCNT)  D
"RTN","ALPBFRM1",156,0)
 ..S ALPBX=0
"RTN","ALPBFRM1",157,0)
 ..F  S ALPBX=$O(DATA(10,"IMLOG",ALPBMDT,ALPBX)) Q:'ALPBX!(ALPBMLC>MLCNT)  D
"RTN","ALPBFRM1",158,0)
 ...S LINE=LINE+1,ALPBMLC=ALPBMLC+1
"RTN","ALPBFRM1",159,0)
 ...S RESULTS(LINE)=" "_$$FDATE^ALPBUTL($P(DATA(10,ALPBX,0),"^",1))
"RTN","ALPBFRM1",160,0)
 ...S RESULTS(LINE)=$$PAD^ALPBUTL(RESULTS(LINE),16)_$P(DATA(10,ALPBX,0),"^",3)
"RTN","ALPBFRM1",161,0)
 ...S RESULTS(LINE)=$$PAD^ALPBUTL(RESULTS(LINE),31)_$S($P(DATA(10,ALPBX,0),"^",2)'="":$P(DATA(10,ALPBX,0),"^",2),1:"<not on file")
"RTN","ALPBFRM1",162,0)
 ..K ALPBX
"RTN","ALPBFRM1",163,0)
 .K ALPBMDT,ALPBMLC
"RTN","ALPBFRM1",164,0)
 ;
"RTN","ALPBFRM1",165,0)
 ; BCMA LAST ACTION
"RTN","ALPBFRM1",166,0)
 I +$G(ALPPAT)>0 D
"RTN","ALPBFRM1",167,0)
 .S ALPBX=0
"RTN","ALPBFRM1",168,0)
 .F  S ALPBX=$O(DATA(7,ALPBX)) Q:'ALPBX  D
"RTN","ALPBFRM1",169,0)
 ..S ALPDRUG=$P(DATA(7,ALPBX,0),"^",1),ALPBDNM=$P(DATA(7,ALPBX,0),"^",2)
"RTN","ALPBFRM1",170,0)
 ..Q:+ALPDRUG'>0
"RTN","ALPBFRM1",171,0)
 ..S ALPLACT=$$LACT^ALPBUTL3(ALPPAT,ALPDRUG)
"RTN","ALPBFRM1",172,0)
 ..I ALPLACT'="" D
"RTN","ALPBFRM1",173,0)
 ...S LINE=LINE+1,RESULTS(LINE)=$$REPEAT^XLFSTR("-",75)
"RTN","ALPBFRM1",174,0)
 ...S LINE=LINE+1
"RTN","ALPBFRM1",175,0)
 ...S RESULTS(LINE)="Last action for "_ALPBDNM_"  "_" was "_$P(ALPLACT,"^",3)_" on "_$$FDATE^ALPBUTL($P(ALPLACT,"^",1))
"RTN","ALPBFRM1",176,0)
 ...S RESULTS(LINE)=RESULTS(LINE)_" By "_$S($P(ALPLACT,"^",2)'="":$P(ALPLACT,"^",2),1:"<not on file>")
"RTN","ALPBFRM1",177,0)
 K ALPLACT,ALPDRUG,ALPBX
"RTN","ALPBFRM1",178,0)
 ;
"RTN","ALPBFRM1",179,0)
 I LINE<11 F I=1:1 Q:LINE=11  D
"RTN","ALPBFRM1",180,0)
 .S LINE=LINE+1
"RTN","ALPBFRM1",181,0)
 .S RESULTS(LINE)=""
"RTN","ALPBFRM1",182,0)
 ;
"RTN","ALPBFRM1",183,0)
 ; now add admin times and initial boxes to lines 4-10 as required
"RTN","ALPBFRM1",184,0)
 ; by number of administration times...
"RTN","ALPBFRM1",185,0)
 S ALPBIBOX="______|"
"RTN","ALPBFRM1",186,0)
 S ALPBNBOX="******|"
"RTN","ALPBFRM1",187,0)
 I +$G(ALPBADM)=0 S ALPBADM=8
"RTN","ALPBFRM1",188,0)
 ;S ALPBPRN=ALPBADM+4
"RTN","ALPBFRM1",189,0)
 S ALPBTSTART=$P($G(DATA(1)),"^",1)
"RTN","ALPBFRM1",190,0)
 S ALPBSTOP=$P($G(DATA(1)),"^",2)
"RTN","ALPBFRM1",191,0)
 F I=1:1:ALPBADM D
"RTN","ALPBFRM1",192,0)
 .S ALPBPRN=I+3
"RTN","ALPBFRM1",193,0)
 .S ALPBADMT=$G(ALPBADM(I))
"RTN","ALPBFRM1",194,0)
 .I ALPBADMT="" S ALPBADMT="    "
"RTN","ALPBFRM1",195,0)
 .I '$D(RESULTS(I+3)) D
"RTN","ALPBFRM1",196,0)
 ..S RESULTS(I+3)=" "
"RTN","ALPBFRM1",197,0)
 ..S LINE=LINE+1
"RTN","ALPBFRM1",198,0)
 .S RESULTS(I+3)=$$PAD^ALPBUTL(RESULTS(I+3),65)_"| "
"RTN","ALPBFRM1",199,0)
 .S RESULTS(I+3)=RESULTS(I+3)_$S($L(ALPBADMT)=2:ALPBADMT_"00",1:ALPBADMT)
"RTN","ALPBFRM1",200,0)
 .S RESULTS(I+3)=$$PAD^ALPBUTL(RESULTS(I+3),74)_"|"
"RTN","ALPBFRM1",201,0)
 .F J=1:1:DAYS D
"RTN","ALPBFRM1",202,0)
 ..I ALPBADMT="    " S ALPBTSTART=$P($P($G(DATA(1)),"^",1),".",1),ALPBSTOP=$P($P($G(DATA(1)),"^",2),".",1)
"RTN","ALPBFRM1",203,0)
 ..S ALPBDAY=ALPBDAYS(J)_"."_ALPBADMT
"RTN","ALPBFRM1",204,0)
 ..S ALPBPBOX=ALPBIBOX
"RTN","ALPBFRM1",205,0)
 ..;prints asterisks in boxes if start date is in the future
"RTN","ALPBFRM1",206,0)
 ..;and if the stop date has already expired
"RTN","ALPBFRM1",207,0)
 ..I ALPBDAY<ALPBTSTART S ALPBPBOX=ALPBNBOX
"RTN","ALPBFRM1",208,0)
 ..I ALPBDAY>ALPBSTOP!(ALPBDAY=ALPBSTOP) S ALPBPBOX=ALPBNBOX
"RTN","ALPBFRM1",209,0)
 ..S RESULTS(I+3)=RESULTS(I+3)_ALPBPBOX
"RTN","ALPBFRM1",210,0)
 .K ALPBADMT,ALPBPBOX,ALPBDAY
"RTN","ALPBFRM1",211,0)
 K ALPBIBOX,ALPBNBOX
"RTN","ALPBFRM1",212,0)
 ; if PRN med, add line for documenting effectiveness...
"RTN","ALPBFRM1",213,0)
 I +ALPBPRNG D
"RTN","ALPBFRM1",214,0)
 .S ALPBFLG=0,ALPBPRN=ALPBPRN+1
"RTN","ALPBFRM1",215,0)
 .S:'$D(RESULTS(ALPBPRN)) RESULTS(ALPBPRN)=" ",ALPBFLG=1
"RTN","ALPBFRM1",216,0)
 .S RESULTS(ALPBPRN)=$$PAD^ALPBUTL(RESULTS(ALPBPRN),63)_"  PRN Effectiveness:_____________"
"RTN","ALPBFRM1",217,0)
 .S:ALPBFLG LINE=LINE+1
"RTN","ALPBFRM1",218,0)
 ;
"RTN","ALPBFRM1",219,0)
 ;*69 move SI text to here outside confines of grid
"RTN","ALPBFRM1",220,0)
 ; provider comments, special instructions, and other print info...
"RTN","ALPBFRM1",221,0)
 I +$O(DATA(5,0)) D
"RTN","ALPBFRM1",222,0)
 .K ALPBTEXT M ALPBTEXT=DATA(5)
"RTN","ALPBFRM1",223,0)
 .S ALPBX=0
"RTN","ALPBFRM1",224,0)
 .F  S ALPBX=$O(ALPBTEXT(ALPBX)) Q:'ALPBX  D
"RTN","ALPBFRM1",225,0)
 ..S ALPBLINE=ALPBTEXT(ALPBX,0)
"RTN","ALPBFRM1",226,0)
 ..S LINE=LINE+1
"RTN","ALPBFRM1",227,0)
 ..S RESULTS(LINE)=ALPBLINE
"RTN","ALPBFRM1",228,0)
 .K ALPBLINE,ALPBTEXT,ALPBX
"RTN","ALPBFRM1",229,0)
 ;
"RTN","ALPBFRM1",230,0)
 S LINE=LINE+1
"RTN","ALPBFRM1",231,0)
 S RESULTS(LINE)=$$REPEAT^XLFSTR("-",132)
"RTN","ALPBFRM1",232,0)
 S RESULTS(0)=LINE
"RTN","ALPBFRM1",233,0)
 Q
"RTN","ALPBHL1")
0^10^B70207141
"RTN","ALPBHL1",1,0)
ALPBHL1 ;OIFO-DALLAS MW,SED,KC - BCBU main HL7 message processor ;01/01/03
"RTN","ALPBHL1",2,0)
 ;;3.0;BAR CODE MED ADMIN;**7,8,73**;Mar 2004;Build 31
"RTN","ALPBHL1",3,0)
 ;
"RTN","ALPBHL1",4,0)
 S ALPBECH=HL("ECH")
"RTN","ALPBHL1",5,0)
 S ALPBCS=$E(ALPBECH)
"RTN","ALPBHL1",6,0)
 S ALPBFS=HL("FS")
"RTN","ALPBHL1",7,0)
 S ALPBHREC=$S(+$G(HLMTIEN)>0:HLMTIEN,1:$G(HL("MID")))
"RTN","ALPBHL1",8,0)
 ;
"RTN","ALPBHL1",9,0)
 ; process the entire HL7 message's lines into local array...
"RTN","ALPBHL1",10,0)
 F I=1:1 X HLNEXT Q:+$G(HLQUIT)'>0  D
"RTN","ALPBHL1",11,0)
 .S ALPBSEG=$P(HLNODE,ALPBFS,1)
"RTN","ALPBHL1",12,0)
 .; store patient ID and order segments in a special way...
"RTN","ALPBHL1",13,0)
 .I ALPBSEG="PID"!(ALPBSEG="ORC")!(ALPBSEG="PV1")!(ALPBSEG="RXO") S ALPBMTXT(ALPBSEG)=HLNODE
"RTN","ALPBHL1",14,0)
 .I ALPBSEG="AL1" S ALPBMTXT("AL1")=1
"RTN","ALPBHL1",15,0)
 .S ALPBMTXT(I)=HLNODE
"RTN","ALPBHL1",16,0)
 .; get any continuation lines...
"RTN","ALPBHL1",17,0)
 .S J=0
"RTN","ALPBHL1",18,0)
 .F  S J=$O(HLNODE(J)) Q:'J  S ALPBMTXT(I,J)=HLNODE(J)
"RTN","ALPBHL1",19,0)
 .K ALPBSEG
"RTN","ALPBHL1",20,0)
 ;
"RTN","ALPBHL1",21,0)
 ; retrieve patient ID data from the PID segment...
"RTN","ALPBHL1",22,0)
 S ALPBX=$G(ALPBMTXT("PID"))
"RTN","ALPBHL1",23,0)
 I ALPBX'="" D
"RTN","ALPBHL1",24,0)
 .D GETPID^ALPBUTL2(ALPBX,ALPBFS,ALPBCS,ALPBECH,.ALPBDATA)
"RTN","ALPBHL1",25,0)
 .S ALPBPDFN=$G(ALPBDATA(1))
"RTN","ALPBHL1",26,0)
 .S ALPBPNAM=$G(ALPBDATA(2))
"RTN","ALPBHL1",27,0)
 .S ALPBPSSN=$G(ALPBDATA(3))
"RTN","ALPBHL1",28,0)
 .S ALPBPDOB=$G(ALPBDATA(4))
"RTN","ALPBHL1",29,0)
 .S ALPBPSEX=$G(ALPBDATA(5))
"RTN","ALPBHL1",30,0)
 .K ALPBDATA
"RTN","ALPBHL1",31,0)
 K ALPBX
"RTN","ALPBHL1",32,0)
 ; we must have patient's SSN (ALPBPSSN) to process this message...
"RTN","ALPBHL1",33,0)
 I $G(ALPBPSSN)="" D  Q
"RTN","ALPBHL1",34,0)
 .D ERRBLD^ALPBUTL1("PID","Invalid/missing SSN",.ALPBFERR)
"RTN","ALPBHL1",35,0)
 .D ERRLOG^ALPBUTL1(0,0,ALPBHREC,"PID",$G(ALPBMTXT("PID"),"PID segment undefined"),.ALPBFERR)
"RTN","ALPBHL1",36,0)
 .K ALPBFERR
"RTN","ALPBHL1",37,0)
 .D CLEAN
"RTN","ALPBHL1",38,0)
 K ALPBMTXT("PID")
"RTN","ALPBHL1",39,0)
 ;
"RTN","ALPBHL1",40,0)
 ; using patient's DFN, get BCBU record number...
"RTN","ALPBHL1",41,0)
 S ALPBIEN=0
"RTN","ALPBHL1",42,0)
 I $D(^ALPB(53.7,ALPBPDFN)) S ALPBIEN=ALPBPDFN
"RTN","ALPBHL1",43,0)
 ; create new record?...
"RTN","ALPBHL1",44,0)
 I ALPBIEN'>0 D
"RTN","ALPBHL1",45,0)
 .S DIC="^ALPB(53.7,"
"RTN","ALPBHL1",46,0)
 .S DIC(0)="LZ"
"RTN","ALPBHL1",47,0)
 .S DINUM=ALPBPDFN
"RTN","ALPBHL1",48,0)
 .S DLAYGO=53.7
"RTN","ALPBHL1",49,0)
 .S X=ALPBPNAM
"RTN","ALPBHL1",50,0)
 .D FILE^DICN
"RTN","ALPBHL1",51,0)
 .K DIC,DINUM,DLAYGO
"RTN","ALPBHL1",52,0)
 .S ALPBIEN=+Y
"RTN","ALPBHL1",53,0)
 ; if ALPBIEN'>0 then patient record find or creation error...
"RTN","ALPBHL1",54,0)
 I +ALPBIEN'>0 D  Q
"RTN","ALPBHL1",55,0)
 .D ERRBLD^ALPBUTL1("","Failed to find/create patient record",.ALPBFERR)
"RTN","ALPBHL1",56,0)
 .D ERRLOG^ALPBUTL1(0,0,ALPBHREC,"",$G(ALPBPDFN,"DFN undefined")_"^"_$G(ALPBPNAM,"Name undefined")_"^"_$G(ALPBPSSN,"SSN undefined"),.ALPBFERR)
"RTN","ALPBHL1",57,0)
 .K ALPBFERR
"RTN","ALPBHL1",58,0)
 .D CLEAN
"RTN","ALPBHL1",59,0)
 ;
"RTN","ALPBHL1",60,0)
 ; check PV1 segment to see if this is a discharge movement.  if so,
"RTN","ALPBHL1",61,0)
 ; delete the patient's BCBU record and quit...
"RTN","ALPBHL1",62,0)
 I $P($G(ALPBMTXT("PV1")),ALPBFS,37)'="" D  Q
"RTN","ALPBHL1",63,0)
 .D DELPT^ALPBUTL(+$G(ALPBIEN))
"RTN","ALPBHL1",64,0)
 .D CLEAN
"RTN","ALPBHL1",65,0)
 ;
"RTN","ALPBHL1",66,0)
 ; file/update patient demographic data...
"RTN","ALPBHL1",67,0)
 S ALPBFILE(53.7,ALPBIEN_",",.01)=ALPBPNAM
"RTN","ALPBHL1",68,0)
 S ALPBFILE(53.7,ALPBIEN_",",1)=ALPBPSSN
"RTN","ALPBHL1",69,0)
 S ALPBFILE(53.7,ALPBIEN_",",2)=ALPBPDOB
"RTN","ALPBHL1",70,0)
 S ALPBFILE(53.7,ALPBIEN_",",3)=ALPBPSEX
"RTN","ALPBHL1",71,0)
 D FILE^DIE("","ALPBFILE","ALPBFERR")
"RTN","ALPBHL1",72,0)
 I +$G(ALPBFERR("DIERR")) D ERRLOG^ALPBUTL1(+$G(ALPBIEN),0,$G(ALPBHREC),"PID","Demographics update failed",.ALPBFERR)
"RTN","ALPBHL1",73,0)
 K ALPBFERR,ALPBFILE
"RTN","ALPBHL1",74,0)
 ;
"RTN","ALPBHL1",75,0)
 ; if the allergies flag is set (ALPBMTXT("AL1")), delete any
"RTN","ALPBHL1",76,0)
 ; allergies on file (they will be rebuilt by this message)...
"RTN","ALPBHL1",77,0)
 I +$G(ALPBMTXT("AL1")) D DELALG^ALPBUTL2(ALPBIEN)
"RTN","ALPBHL1",78,0)
 ;
"RTN","ALPBHL1",79,0)
 ; if there is no ORC (order) segment, process the rest of the
"RTN","ALPBHL1",80,0)
 ; message and quit...
"RTN","ALPBHL1",81,0)
 I $G(ALPBMTXT("ORC"))="" D PM Q
"RTN","ALPBHL1",82,0)
 ;
"RTN","ALPBHL1",83,0)
 ; retrieve order number and transaction date from ORC segment...
"RTN","ALPBHL1",84,0)
 D GETORC^ALPBUTL2($G(ALPBMTXT("ORC")),$G(ALPBFS),$G(ALPBCS),.ALPBDATA)
"RTN","ALPBHL1",85,0)
 S ALPBMLOG=$S($G(ALPBDATA(0))="ML":1,1:0)
"RTN","ALPBHL1",86,0)
 S ALPBORDN=$G(ALPBDATA(1))
"RTN","ALPBHL1",87,0)
 S ALPBORDT=$G(ALPBDATA(2))
"RTN","ALPBHL1",88,0)
 S ALPBORDC=+$G(ALPBDATA(3))
"RTN","ALPBHL1",89,0)
 ; ALPBOTYP="V" for IV, "U" for Unit Dose, or "P" for Pending
"RTN","ALPBHL1",90,0)
 S ALPBOTYP=$G(ALPBDATA(4))
"RTN","ALPBHL1",91,0)
 K ALPBDATA
"RTN","ALPBHL1",92,0)
 ;
"RTN","ALPBHL1",93,0)
 ; we must have an order number to process the order-specific data,
"RTN","ALPBHL1",94,0)
 ; if we do not then log that error condition and quit...
"RTN","ALPBHL1",95,0)
 I $G(ALPBORDN)="" D  Q
"RTN","ALPBHL1",96,0)
 .D ERRBLD^ALPBUTL1("","No order number in ORC segment",.ALPBFERR)
"RTN","ALPBHL1",97,0)
 .D ERRLOG^ALPBUTL1(0,0,ALPBHREC,"ORC",$G(ALPBMTXT("ORC"),"ORC segment not defined"),.ALPBFERR)
"RTN","ALPBHL1",98,0)
 .K ALPBFERR
"RTN","ALPBHL1",99,0)
 .D CLEAN
"RTN","ALPBHL1",100,0)
 K ALPBMTXT("ORC")
"RTN","ALPBHL1",101,0)
 ;
"RTN","ALPBHL1",102,0)
 ; using CPRS order number, check to see if the order is already on
"RTN","ALPBHL1",103,0)
 ; file.  if so, and status is PENDING delete the order record...
"RTN","ALPBHL1",104,0)
 I ALPBORDC>0 D
"RTN","ALPBHL1",105,0)
 .;LOOP Through. May have replaced orders so need to check all
"RTN","ALPBHL1",106,0)
 .S ALPBI=0
"RTN","ALPBHL1",107,0)
 .F  S ALPBI=$O(^ALPB(53.7,ALPBIEN,2,"ACPRS",ALPBORDC,ALPBI)) Q:+ALPBI'>0  D
"RTN","ALPBHL1",108,0)
 ..I $E($P($G(^ALPB(53.7,ALPBIEN,2,ALPBI,0)),"^",3),1,2)'="IP" Q
"RTN","ALPBHL1",109,0)
 ..D DELORD^ALPBUTL(ALPBIEN,ALPBI)
"RTN","ALPBHL1",110,0)
 K ALPBI
"RTN","ALPBHL1",111,0)
 ;
"RTN","ALPBHL1",112,0)
 ; existing order's record number?...
"RTN","ALPBHL1",113,0)
 K ALPBOIEN
"RTN","ALPBHL1",114,0)
 S ALPBOIEN=+$O(^ALPB(53.7,ALPBIEN,2,"B",ALPBORDN,0))
"RTN","ALPBHL1",115,0)
 ; if this isn't a Med Log update, and this order is already on
"RTN","ALPBHL1",116,0)
 ; file, delete its drug(s), additive(s) and/or solution(s) --
"RTN","ALPBHL1",117,0)
 ; they will be rebuilt by the other segments in this message...
"RTN","ALPBHL1",118,0)
 I +$G(ALPBMLOG)=0&(ALPBOIEN>0) D CLORD^ALPBUTL2(ALPBIEN,ALPBOIEN)
"RTN","ALPBHL1",119,0)
 ; create new order record?...
"RTN","ALPBHL1",120,0)
 I +$G(ALPBOIEN)=0 D
"RTN","ALPBHL1",121,0)
 .S ALPBOIEN=+$O(^ALPB(53.7,ALPBIEN,2," "),-1)+1
"RTN","ALPBHL1",122,0)
 .S ALPBFILE(53.702,"+"_ALPBOIEN_","_ALPBIEN_",",.01)=ALPBORDN
"RTN","ALPBHL1",123,0)
 .; don't file a 0 (zero) CPRS order number...
"RTN","ALPBHL1",124,0)
 .I ALPBORDC>0 S ALPBFILE(53.702,"+"_ALPBOIEN_","_ALPBIEN_",",1)=ALPBORDC
"RTN","ALPBHL1",125,0)
 .S ALPBFILE(53.702,"+"_ALPBOIEN_","_ALPBIEN_",",3)=ALPBORDT
"RTN","ALPBHL1",126,0)
 .S ALPBFILE(53.702,"+"_ALPBOIEN_","_ALPBIEN_",",6)=ALPBOTYP
"RTN","ALPBHL1",127,0)
 .D UPDATE^DIE("","ALPBFILE","ALPBOIEN","ALPBFERR")
"RTN","ALPBHL1",128,0)
 .I +$G(ALPBFERR("DIERR")) D ERRLOG^ALPBUTL1(ALPBIEN,"0",ALPBHREC,"NEWORD","",.ALPBFERR)
"RTN","ALPBHL1",129,0)
 .K ALPBFERR,ALPBFILE
"RTN","ALPBHL1",130,0)
 ;
"RTN","ALPBHL1",131,0)
PM ; process the message segments...
"RTN","ALPBHL1",132,0)
 S I=0
"RTN","ALPBHL1",133,0)
 F  S I=$O(ALPBMTXT(I)) Q:'I  D
"RTN","ALPBHL1",134,0)
 .S ALPBDATA=ALPBMTXT(I) I $O(ALPBMTXT(I,0)) D
"RTN","ALPBHL1",135,0)
 ..N CONTLN S CONTLN=0 F  S CONTLN=$O(ALPBMTXT(I,CONTLN)) Q:'CONTLN  I $L($G(ALPBMTXT(I,CONTLN))) S ALPBDATA=ALPBDATA_ALPBMTXT(I,CONTLN)
"RTN","ALPBHL1",136,0)
 .S ALPBSEG=$P(ALPBDATA,ALPBFS)
"RTN","ALPBHL1",137,0)
 .; allergies segment...
"RTN","ALPBHL1",138,0)
 .I ALPBSEG="AL1" D
"RTN","ALPBHL1",139,0)
 ..D AL1^ALPBHL1U(+$G(ALPBIEN),$G(ALPBDATA),$G(ALPBFS),$G(ALPBCS),.ALPBFERR)
"RTN","ALPBHL1",140,0)
 ..I +$G(ALPBFERR("DIERR")) D ERRLOG^ALPBUTL1(+$G(ALPBIEN),+$G(ALPBOIEN),$G(ALPBHREC),"AL1",$G(ALPBDATA),.ALPBFERR)
"RTN","ALPBHL1",141,0)
 ..K ALPBFERR
"RTN","ALPBHL1",142,0)
 .; general order segment...
"RTN","ALPBHL1",143,0)
 .I ALPBSEG="ORC" D
"RTN","ALPBHL1",144,0)
 ..D ORC^ALPBHL1U(+$G(ALPBIEN),+$G(ALPBOIEN),$G(ALPBDATA),$G(ALPBMLOG),$G(ALPBFS),$G(ALPBCS),.ALPBFERR)
"RTN","ALPBHL1",145,0)
 ..I +$G(ALPBFERR("DIERR")) D ERRLOG^ALPBUTL1(+$G(ALPBIEN),+$G(ALPBOIEN),$G(ALPBHREC),"ORC",$G(ALPBDATA),.ALPBFERR)
"RTN","ALPBHL1",146,0)
 ..K ALPBFERR
"RTN","ALPBHL1",147,0)
 .; patient movement/location segment...
"RTN","ALPBHL1",148,0)
 .I ALPBSEG="PV1" D
"RTN","ALPBHL1",149,0)
 ..D PV1^ALPBHL1U(+$G(ALPBIEN),$G(ALPBDATA),$G(ALPBFS),$G(ALPBCS),.ALPBFERR)
"RTN","ALPBHL1",150,0)
 ..I +$G(ALPBFERR("DIERR")) D ERRLOG^ALPBUTL1(+$G(ALPBIEN),+$G(ALPBOIEN),$G(ALPBHREC),"PV1",$G(ALPBDATA),.ALPBFERR)
"RTN","ALPBHL1",151,0)
 ..K ALPBFERR
"RTN","ALPBHL1",152,0)
 .; IV orders segment...
"RTN","ALPBHL1",153,0)
 .I ALPBSEG="RXC" D
"RTN","ALPBHL1",154,0)
 ..D RXC^ALPBHL1U(+$G(ALPBIEN),+$G(ALPBOIEN),$G(ALPBDATA),$G(ALPBFS),$G(ALPBCS),.ALPBFERR)
"RTN","ALPBHL1",155,0)
 ..I +$G(ALPBFERR("DIERR")) D ERRLOG^ALPBUTL1(+$G(ALPBIEN),+$G(ALPBOIEN),$G(ALPBHREC),"RXC",$G(ALPBDATA),.ALPBFERR)
"RTN","ALPBHL1",156,0)
 ..K ALPBFERR
"RTN","ALPBHL1",157,0)
 .; drug, additives and/or solutions segment...
"RTN","ALPBHL1",158,0)
 .I ALPBSEG="RXE" D
"RTN","ALPBHL1",159,0)
 ..I $G(ALPBDATA)="" Q
"RTN","ALPBHL1",160,0)
 ..; if this is a Pending order, check to see if a drug is included in this RXE seg.  if not, let's try to add the one that may be in the RXO seg...
"RTN","ALPBHL1",161,0)
 ..I +$P($P(ALPBDATA,ALPBFS,3),ALPBCS,4)=0 S $P(ALPBDATA,ALPBFS,3)=$P($G(ALPBMTXT("RXO")),ALPBFS,2)
"RTN","ALPBHL1",162,0)
 ..;chech for any continuation lines
"RTN","ALPBHL1",163,0)
 ..S J=0 F  S J=$O(ALPBMTXT(I,J)) Q:'J  S ALPBDATA=ALPBDATA_ALPBMTXT(I,J)
"RTN","ALPBHL1",164,0)
 ..D RXE^ALPBHL1U(+$G(ALPBIEN),+$G(ALPBOIEN),ALPBDATA,$G(ALPBFS),$G(ALPBCS),$G(ALPBECH),.ALPBFERR)
"RTN","ALPBHL1",165,0)
 ..I +$G(ALPBFERR("DIERR")) D ERRLOG^ALPBUTL1(+$G(ALPBIEN),+$G(ALPBOIEN),$G(ALPBHREC),"RXE",ALPBDATA,.ALPBFERR)
"RTN","ALPBHL1",166,0)
 ..K ALPBFERR
"RTN","ALPBHL1",167,0)
 .; med route...
"RTN","ALPBHL1",168,0)
 .I ALPBSEG="RXR" D
"RTN","ALPBHL1",169,0)
 ..D RXR^ALPBHL1U(+$G(ALPBIEN),+$G(ALPBOIEN),$G(ALPBDATA),$G(ALPBFS),$G(ALPBCS),.ALBPFERR)
"RTN","ALPBHL1",170,0)
 ..I +$G(ALPBFERR("DIERR")) D ERRLOG^ALPBUTL1(+$G(ALPBIEN),+$G(ALPBOIEN),$G(ALPBHREC),"RXR",$G(ALPBDATA),.ALPBFERR)
"RTN","ALPBHL1",171,0)
 ..K ALPBFERR
"RTN","ALPBHL1",172,0)
 .; provider comments, special instructions or other print info...
"RTN","ALPBHL1",173,0)
 .I ALPBSEG="NTE" D
"RTN","ALPBHL1",174,0)
 ..; NTE segments can be multiple-lines.  set up an array (ALPBNTE(...)) to pass to the filer...
"RTN","ALPBHL1",175,0)
 ..; the first node will be the one that contains the NTE segment identifier
"RTN","ALPBHL1",176,0)
 ..N TMPI,TMPJ S TMPI=I S ALPBNTE(1)=$$UNESC^ALPBGEN(ALPBMTXT(I)) S I=TMPI
"RTN","ALPBHL1",177,0)
 ..S ALPBX=1
"RTN","ALPBHL1",178,0)
 ..; loop from ALPBMTXT(I) to retrieve any continuation lines...
"RTN","ALPBHL1",179,0)
 ..S TMPJ=0
"RTN","ALPBHL1",180,0)
 ..F  S TMPJ=$O(ALPBMTXT(I,TMPJ)) Q:'TMPJ  D
"RTN","ALPBHL1",181,0)
 ...S ALPBX=ALPBX+1
"RTN","ALPBHL1",182,0)
 ...S ALPBNTE(ALPBX)=$$UNESC^ALPBGEN(ALPBMTXT(I,TMPJ)) S I=TMPI
"RTN","ALPBHL1",183,0)
 ..K ALPBX,J
"RTN","ALPBHL1",184,0)
 ..D NTE^ALPBHL1U(+$G(ALPBIEN),+$G(ALPBOIEN),.ALPBNTE,$G(ALPBFS),$G(ALPBCS),.ALPBFERR)
"RTN","ALPBHL1",185,0)
 ..I +$G(ALPBFERR("DIERR")) D ERRLOG^ALPBUTL1(+$G(ALPBIEN),+$G(ALPBOIEN),$G(ALPBHREC),"NTE",ALPBDATA,.ALPBFERR)
"RTN","ALPBHL1",186,0)
 ..K ALPBFERR,ALPBNTE
"RTN","ALPBHL1",187,0)
 .K ALPBDATA,ALPBSEG
"RTN","ALPBHL1",188,0)
 ;
"RTN","ALPBHL1",189,0)
 ; set RECORD LAST UPDATED field...
"RTN","ALPBHL1",190,0)
 S ALPBLUPD=$$NOW^XLFDT()
"RTN","ALPBHL1",191,0)
 I $G(^ALPB(53.7,+$G(ALPBIEN),0))'="" D
"RTN","ALPBHL1",192,0)
 .S ALPBFILE(53.7,ALPBIEN_",",7)=ALPBLUPD
"RTN","ALPBHL1",193,0)
 .D FILE^DIE("","ALPBFILE","ALPBFERR")
"RTN","ALPBHL1",194,0)
 .K ALPBFERR,ALPBFILE
"RTN","ALPBHL1",195,0)
 ;
"RTN","ALPBHL1",196,0)
 ; update PARAMETER file with last update date...
"RTN","ALPBHL1",197,0)
 S ALPBPARM=+$O(^ALPB(53.71,0))
"RTN","ALPBHL1",198,0)
 I ALPBPARM>0 D
"RTN","ALPBHL1",199,0)
 .S ALPBFILE(53.71,ALPBPARM_",",4)=ALPBLUPD
"RTN","ALPBHL1",200,0)
 .D FILE^DIE("","ALPBFILE","ALPBFERR")
"RTN","ALPBHL1",201,0)
 .K ALPBFERR,ALPBFILE
"RTN","ALPBHL1",202,0)
 K ALPBLUPD,ALPBPARM
"RTN","ALPBHL1",203,0)
 ;
"RTN","ALPBHL1",204,0)
CLEAN K ALPBCS,ALPBDATA,ALPBECH,ALPBFS,ALPBHREC,ALPBIEN,ALPBMLOG,ALPBMTXT
"RTN","ALPBHL1",205,0)
 K ALPBOIEN,ALPBORDC,ALPBORDN,ALPBORDT,ALPBOTYP,ALPBPDFN,ALPBPDOB
"RTN","ALPBHL1",206,0)
 K ALPBPNAM,ALPBPSEX,ALPBPSSN,ALPBSEG
"RTN","ALPBHL1",207,0)
 Q
"RTN","ALPBHL1U")
0^11^B69918866
"RTN","ALPBHL1U",1,0)
ALPBHL1U ;OIFO-DALLAS MW,SED,KC -HL7 MESSAGE SEGMENT PARSER AND UPDATE ;1/22/13 11:22pm
"RTN","ALPBHL1U",2,0)
 ;;3.0;BAR CODE MED ADMIN;**7,69,59,73**;May 2002;Build 31
"RTN","ALPBHL1U",3,0)
 ;
"RTN","ALPBHL1U",4,0)
 ; passed parameters common to all functions:
"RTN","ALPBHL1U",5,0)
 ;   IEN   = patient's internal entry number in file 53.7
"RTN","ALPBHL1U",6,0)
 ;   OIEN  = the order number's internal entry number in file 53.7
"RTN","ALPBHL1U",7,0)
 ;   DATA  = the HL7 message line
"RTN","ALPBHL1U",8,0)
 ;   FS    = the HL7 field separator character (e.g., "|" or "^")
"RTN","ALPBHL1U",9,0)
 ;   CS    = the HL7 component separator character (e.g., "~")
"RTN","ALPBHL1U",10,0)
 ;   ECH   = the HL7 encoding characters
"RTN","ALPBHL1U",11,0)
 ;   ERR   = an array passed by reference, returned containing
"RTN","ALPBHL1U",12,0)
 ;           FileMan DBS call error array (if any)
"RTN","ALPBHL1U",13,0)
 ;
"RTN","ALPBHL1U",14,0)
 ;*69 - A New NTE segment will now contain WP unlimited text.  This
"RTN","ALPBHL1U",15,0)
 ;      text will also contain formatted text escape character \.br\
"RTN","ALPBHL1U",16,0)
 ;      NTE tag will now rebuild work arrays honoring the line break
"RTN","ALPBHL1U",17,0)
 ;      escape character prior to storing into BCMA BACKUP DATA #53.7.
"RTN","ALPBHL1U",18,0)
 ;**73- Add Clinic name to Order multiple for orders that were placed
"RTN","ALPBHL1U",19,0)
 ;       in a clinic vs. a Ward.
"RTN","ALPBHL1U",20,0)
 ;
"RTN","ALPBHL1U",21,0)
AL1(IEN,DATA,FS,CS,ERR) ; process AL1 (allergies) segment...
"RTN","ALPBHL1U",22,0)
 I +$G(IEN)'>0!($G(DATA)="")!($G(FS)="")!($G(CS)="") D ERRBLD^ALPBUTL1("AL1","",.ERR) Q
"RTN","ALPBHL1U",23,0)
 N ALPBALG,ALPBALGN,ALPBFILE,ALPBNEXT,ALPBSCHD,ALPBX,SCS,ALPBXX,ALPBSCHDLE1,ALPBX2,ALPBYY
"RTN","ALPBHL1U",24,0)
 S ALPBALG=+$P(DATA,FS,4)
"RTN","ALPBHL1U",25,0)
 I ALPBALG'>0 D ERRBLD^ALPBUTL1("AL1","Undefined allergy "_DATA,.ERR) Q
"RTN","ALPBHL1U",26,0)
 S ALPBALGN=$P($P(DATA,FS,4),CS,2)
"RTN","ALPBHL1U",27,0)
 ; is this allergy already on file for this patient?...
"RTN","ALPBHL1U",28,0)
 I $D(^ALPB(53.7,IEN,1,"B",ALPBALG)) S ERR("DIERR")=0 Q
"RTN","ALPBHL1U",29,0)
 ; if not, file it...
"RTN","ALPBHL1U",30,0)
 S ALPBNEXT=+$O(^ALPB(53.7,IEN,1," "),-1)+1
"RTN","ALPBHL1U",31,0)
 S ALPBFILE(53.701,"+"_ALPBNEXT_","_IEN_",",.01)=ALPBALG
"RTN","ALPBHL1U",32,0)
 S ALPBFILE(53.701,"+"_ALPBNEXT_","_IEN_",",1)=ALPBALGN
"RTN","ALPBHL1U",33,0)
 D UPDATE^DIE("","ALPBFILE","ALPBNEXT","ERR")
"RTN","ALPBHL1U",34,0)
 Q
"RTN","ALPBHL1U",35,0)
 ;
"RTN","ALPBHL1U",36,0)
ORC(IEN,OIEN,DATA,MLOG,FS,CS,ERR) ; process ORC (common order) segment...
"RTN","ALPBHL1U",37,0)
 ; MLOG = if 1 then this is an ORC segment with a Med Log update
"RTN","ALPBHL1U",38,0)
 ;        if 0 then this is a common order update
"RTN","ALPBHL1U",39,0)
 I +$G(IEN)'>0!(+$G(OIEN)'>0)!($G(DATA)="")!($G(MLOG)="")!($G(FS)="")!($G(CS)="") D ERRBLD^ALPBUTL1("ORC","",.ERR) Q
"RTN","ALPBHL1U",40,0)
 N ALPBFIEN,ALPBFILE,ALPBMREC,ALPBNEXT,ALPBTEXT,ALPBX
"RTN","ALPBHL1U",41,0)
 S ALPBFIEN=OIEN_","_IEN_","
"RTN","ALPBHL1U",42,0)
 ; ORC segment with NO MedLog data...
"RTN","ALPBHL1U",43,0)
 I +MLOG=0 D
"RTN","ALPBHL1U",44,0)
 .S ALPBX=$P(DATA,FS,1)
"RTN","ALPBHL1U",45,0)
 .; order status...
"RTN","ALPBHL1U",46,0)
 .S ALPBFILE(53.702,ALPBFIEN,2)=$P(DATA,FS,6)
"RTN","ALPBHL1U",47,0)
 .; provider...
"RTN","ALPBHL1U",48,0)
 .S ALPBFILE(53.702,ALPBFIEN,5)=$P($P(DATA,FS,13),CS,2)
"RTN","ALPBHL1U",49,0)
 .; entry person/rph...
"RTN","ALPBHL1U",50,0)
 .S ALPBFILE(53.702,ALPBFIEN,5.1)=$P($P(DATA,FS,11),CS,2)
"RTN","ALPBHL1U",51,0)
 .; verified by...
"RTN","ALPBHL1U",52,0)
 .S ALPBFILE(53.702,ALPBFIEN,5.2)=$P($P(DATA,FS,12),CS,2)
"RTN","ALPBHL1U",53,0)
 .; set clinic name in new DD field 3.5 if a clinic order         ;*73
"RTN","ALPBHL1U",54,0)
 .S ALPBFILE(53.702,ALPBFIEN,3.5)=$P(DATA,FS,22)
"RTN","ALPBHL1U",55,0)
 .D UPDATE^DIE("","ALPBFILE","","ERR")
"RTN","ALPBHL1U",56,0)
 .; if this is a pending order, add special instructions...
"RTN","ALPBHL1U",57,0)
 .I $P($P(DATA,FS,6),CS,1)="IP" D
"RTN","ALPBHL1U",58,0)
 ..S ALPBTEXT(1)="CAUTION!  THIS IS A PENDING ORDER :: CHECK WITH PROVIDER OR PHARMACIST!"
"RTN","ALPBHL1U",59,0)
 ..D WP^DIE(53.702,ALPBFIEN,8,"A","ALPBTEXT","ERR")
"RTN","ALPBHL1U",60,0)
 ..K ALPBTEXT
"RTN","ALPBHL1U",61,0)
 ; ORC segment with specific MedLog data...
"RTN","ALPBHL1U",62,0)
 I +MLOG=1 D
"RTN","ALPBHL1U",63,0)
 .; ALPBX = med log date/time...
"RTN","ALPBHL1U",64,0)
 .S ALPBX=$$FMDATE^HLFNC($P(DATA,FS,10))
"RTN","ALPBHL1U",65,0)
 .I ALPBX="" K ALPBX Q
"RTN","ALPBHL1U",66,0)
 .; ALPBMREC = med log record number...
"RTN","ALPBHL1U",67,0)
 .S ALPBMREC=+$P($P(DATA,FS,3),CS,1)
"RTN","ALPBHL1U",68,0)
 .; if the med log entry is already on file, update and quit.
"RTN","ALPBHL1U",69,0)
 .; check for both an entry on file for the log date/time ("B" xref)
"RTN","ALPBHL1U",70,0)
 .; or med log record number ("C" xref)...
"RTN","ALPBHL1U",71,0)
 .S ALPBNEXT=+$O(^ALPB(53.7,IEN,2,OIEN,10,"B",ALPBX,""))
"RTN","ALPBHL1U",72,0)
 .I ALPBNEXT'>0 S ALPBNEXT=+$O(^ALPB(53.7,IEN,2,OIEN,10,"C",ALPBMREC,""))
"RTN","ALPBHL1U",73,0)
 .I ALPBNEXT>0 D  Q
"RTN","ALPBHL1U",74,0)
 ..S ALPBFILE(53.70213,ALPBNEXT_","_ALPBFIEN,.01)=ALPBX
"RTN","ALPBHL1U",75,0)
 ..S ALPBFILE(53.70213,ALPBNEXT_","_ALPBFIEN,1)=$P($P(DATA,FS,11),CS,2)
"RTN","ALPBHL1U",76,0)
 ..S ALPBFILE(53.70213,ALPBNEXT_","_ALPBFIEN,2)=$P($P(DATA,FS,6),CS,2)
"RTN","ALPBHL1U",77,0)
 ..I ALPBMREC>0 S ALPBFILE(53.70213,ALPBNEXT_","_ALPBFIEN,3)=ALPBMREC
"RTN","ALPBHL1U",78,0)
 ..D UPDATE^DIE("","ALPBFILE","","ERR")
"RTN","ALPBHL1U",79,0)
 .K ALPBNEXT
"RTN","ALPBHL1U",80,0)
 .; if not, add it...
"RTN","ALPBHL1U",81,0)
 .S ALPBNEXT=+$O(^ALPB(53.7,IEN,2,OIEN,6," "),-1)+1
"RTN","ALPBHL1U",82,0)
 .S ALPBFILE(53.70213,"+"_ALPBNEXT_","_ALPBFIEN,.01)=ALPBX
"RTN","ALPBHL1U",83,0)
 .; med log entry person...
"RTN","ALPBHL1U",84,0)
 .S ALPBFILE(53.70213,"+"_ALPBNEXT_","_ALPBFIEN,1)=$P($P(DATA,FS,11),CS,2)
"RTN","ALPBHL1U",85,0)
 .; med log transaction message...
"RTN","ALPBHL1U",86,0)
 .S ALPBFILE(53.70213,"+"_ALPBNEXT_","_ALPBFIEN,2)=$P($P(DATA,FS,6),CS,2)
"RTN","ALPBHL1U",87,0)
 .; med log record number...
"RTN","ALPBHL1U",88,0)
 .I ALPBMREC>0 S ALPBFILE(53.70213,"+"_ALPBNEXT_","_ALPBFIEN,3)=ALPBMREC
"RTN","ALPBHL1U",89,0)
 .D UPDATE^DIE("","ALPBFILE","ALPBNEXT","ERR")
"RTN","ALPBHL1U",90,0)
 Q
"RTN","ALPBHL1U",91,0)
 ;
"RTN","ALPBHL1U",92,0)
PV1(IEN,DATA,FS,CS,ERR) ; process PV1 (patient visit/movement) segment...
"RTN","ALPBHL1U",93,0)
 I +$G(IEN)=0!($G(DATA)="") D ERRBLD^ALPBUTL1("PV1","",.ERR) Q
"RTN","ALPBHL1U",94,0)
 N ALPBFIEN,ALPBFILE,ALPBX
"RTN","ALPBHL1U",95,0)
 S ALPBFIEN=IEN_","
"RTN","ALPBHL1U",96,0)
 S ALPBX=$P(DATA,FS,4)
"RTN","ALPBHL1U",97,0)
 ; ward...
"RTN","ALPBHL1U",98,0)
 S ALPBFILE(53.7,ALPBFIEN,4)=$P(ALPBX,CS)
"RTN","ALPBHL1U",99,0)
 ; room...
"RTN","ALPBHL1U",100,0)
 S ALPBFILE(53.7,ALPBFIEN,5)=$P(ALPBX,CS,2)
"RTN","ALPBHL1U",101,0)
 ; bed...
"RTN","ALPBHL1U",102,0)
 S ALPBFILE(53.7,ALPBFIEN,6)=$P(ALPBX,CS,3)
"RTN","ALPBHL1U",103,0)
 D FILE^DIE("","ALPBFILE","ERR")
"RTN","ALPBHL1U",104,0)
 Q
"RTN","ALPBHL1U",105,0)
 ;
"RTN","ALPBHL1U",106,0)
RXO(IEN,OIEN,DATA,FS,CS,ERR) ; process RXO (pharmacy prescription order) segment...
"RTN","ALPBHL1U",107,0)
 ; for inpatient meds, this segment contains an orderable item.  this
"RTN","ALPBHL1U",108,0)
 ; module is ONLY called if the order is "P"ending.  it only files the
"RTN","ALPBHL1U",109,0)
 ; orderable item if no drug is on file for the order.
"RTN","ALPBHL1U",110,0)
 N ALPBDIEN,ALPBDRUG,ALPBFILE,ALPBNEXT
"RTN","ALPBHL1U",111,0)
 I +$G(IEN)'>0!(+$G(OIEN)'>0)!($G(DATA)="")!($G(FS)="")!($G(CS)="") D ERRBLD^ALPBUTL1("RXO","",.ERR) Q
"RTN","ALPBHL1U",112,0)
 S ALPBDIEN=+$P($P(DATA,FS,2),CS,4)
"RTN","ALPBHL1U",113,0)
 S ALPBDRUG=$P($P(DATA,FS,2),CS,5)
"RTN","ALPBHL1U",114,0)
 I ALPBDIEN'>0 D ERRBLD^ALPBUTL1("RXO","Invalid drug IEN in RXO segment",.ERR) Q
"RTN","ALPBHL1U",115,0)
 ; if there is ANY drug already on file, quit...
"RTN","ALPBHL1U",116,0)
 I +$O(^ALPB(53.7,IEN,2,OIEN,7,0))>0 Q
"RTN","ALPBHL1U",117,0)
 ; if not, file it...
"RTN","ALPBHL1U",118,0)
 S ALPBNEXT=+$O(^ALPB(53.7,IEN,2,OIEN,7," "),-1)+1
"RTN","ALPBHL1U",119,0)
 S ALPBFILE(53.703,"+"_ALPBNEXT_","_OIEN_","_IEN_",",.01)=ALPBDIEN
"RTN","ALPBHL1U",120,0)
 S ALPBFILE(53.703,"+"_ALPBNEXT_","_OIEN_","_IEN_",",1)=ALPBDRUG
"RTN","ALPBHL1U",121,0)
 D UPDATE^DIE("","ALPBFILE","ALPBNEXT","ERR")
"RTN","ALPBHL1U",122,0)
 Q
"RTN","ALPBHL1U",123,0)
 ;
"RTN","ALPBHL1U",124,0)
RXE(IEN,OIEN,DATA,FS,CS,ECH,ERR) ; process RXE (order detail) segment...
"RTN","ALPBHL1U",125,0)
 ; this segment may contain the drug name, though there may not be a drug
"RTN","ALPBHL1U",126,0)
 ; because this can also be used for order detail for IV's which are
"RTN","ALPBHL1U",127,0)
 ; contained in an RXC segment.  this segment can also contain start/stop
"RTN","ALPBHL1U",128,0)
 ; date&time, dosage and schedule
"RTN","ALPBHL1U",129,0)
 I +$G(IEN)'>0!(+$G(OIEN)'>0)!($G(DATA)="")!($G(FS)="")!($G(CS)="")!($G(ECH)="") D ERRBLD^ALPBUTL1("RXE","",.ERR) Q
"RTN","ALPBHL1U",130,0)
 N ALPBDIEN,ALPBDRUG,ALPBFIEN,ALPBFILE,ALPBNEXT,ALPBSCHD,ALPBX,SCS
"RTN","ALPBHL1U",131,0)
 S SCS=$E(ECH,4)
"RTN","ALPBHL1U",132,0)
 S ALPBFIEN=OIEN_","_IEN_","
"RTN","ALPBHL1U",133,0)
 ; for drug, we'll use the one that came from the Drug file...
"RTN","ALPBHL1U",134,0)
 S ALPBDIEN=+$P($P(DATA,FS,3),CS,4)
"RTN","ALPBHL1U",135,0)
 S ALPBDRUG=$P($P(DATA,FS,3),CS,5)
"RTN","ALPBHL1U",136,0)
 ; is this drug already on file for this order?  if not, add it...
"RTN","ALPBHL1U",137,0)
 I ALPBDIEN>0&('$D(^ALPB(53.7,IEN,2,OIEN,7,"B",ALPBDIEN))) D
"RTN","ALPBHL1U",138,0)
 .S ALPBNEXT=+$O(^ALPB(53.7,IEN,2,OIEN,7," "),-1)+1
"RTN","ALPBHL1U",139,0)
 .S ALPBFILE(53.703,"+"_ALPBNEXT_","_ALPBFIEN,.01)=ALPBDIEN
"RTN","ALPBHL1U",140,0)
 .S ALPBFILE(53.703,"+"_ALPBNEXT_","_ALPBFIEN,1)=ALPBDRUG
"RTN","ALPBHL1U",141,0)
 .D UPDATE^DIE("","ALPBFILE","ALPBNEXT","ERR")
"RTN","ALPBHL1U",142,0)
 .K ALPBFERR,ALPBFILE,ALPBNEXT
"RTN","ALPBHL1U",143,0)
 S ALPBX=$P(DATA,FS,2)
"RTN","ALPBHL1U",144,0)
 ; start date/time...
"RTN","ALPBHL1U",145,0)
 S ALPBFILE(53.702,ALPBFIEN,4)=$$FMDATE^HLFNC($P(ALPBX,CS,4))
"RTN","ALPBHL1U",146,0)
 ; stop date/time...
"RTN","ALPBHL1U",147,0)
 S ALPBFILE(53.702,ALPBFIEN,4.1)=$$FMDATE^HLFNC($P(ALPBX,CS,5))
"RTN","ALPBHL1U",148,0)
 ; dosage...
"RTN","ALPBHL1U",149,0)
 S ALPBFILE(53.702,ALPBFIEN,7)=$P(ALPBX,CS,8)
"RTN","ALPBHL1U",150,0)
 ; schedule...
"RTN","ALPBHL1U",151,0)
 S ALPBSCHD=$P(ALPBX,CS,2)
"RTN","ALPBHL1U",152,0)
 ; the following three lines remove the additional ampersand symbol (&) and admin. time(s) that are added to the schedule by variable ALPBSCHD
"RTN","ALPBHL1U",153,0)
 S ALPBXX=$L(ALPBSCHD,SCS),ALPBSCHDLE1="",ALPBX2=$P(ALPBSCHD,SCS,ALPBXX)
"RTN","ALPBHL1U",154,0)
 F ALPBYY=1:1:(ALPBXX-1) S ALPBSCHDLE1=ALPBSCHDLE1_$P(ALPBSCHD,SCS,ALPBYY) Q:ALPBYY=(ALPBXX-1)  S ALPBSCHDLE1=ALPBSCHDLE1_SCS
"RTN","ALPBHL1U",155,0)
 S ALPBSCHD=ALPBSCHDLE1
"RTN","ALPBHL1U",156,0)
 I $P(DATA,FS,24)'="" S ALPBSCHD=ALPBSCHD_" "_$P(DATA,FS,24)
"RTN","ALPBHL1U",157,0)
 I $P($P(DATA,FS,25),CS,5)'="" S ALPBSCHD=ALPBSCHD_" "_$P($P(DATA,FS,25),CS,5)
"RTN","ALPBHL1U",158,0)
 S ALPBFILE(53.702,ALPBFIEN,7.2)=ALPBSCHD
"RTN","ALPBHL1U",159,0)
 ; timing...
"RTN","ALPBHL1U",160,0)
 S ALPBFILE(53.702,ALPBFIEN,7.3)=$P($P(DATA,FS,22),CS,2)
"RTN","ALPBHL1U",161,0)
 D UPDATE^DIE("","ALPBFILE","","ERR")
"RTN","ALPBHL1U",162,0)
 Q
"RTN","ALPBHL1U",163,0)
 ;
"RTN","ALPBHL1U",164,0)
RXR(IEN,OIEN,DATA,FS,CS,ERR) ; process RXR (med administration route) segment...
"RTN","ALPBHL1U",165,0)
 I +$G(IEN)'>0!(+$G(OIEN)'>0)!($G(DATA)="")!($G(FS)="")!($G(CS)="") D ERRBLD^ALPBUTL1("RXR","",.ERR) Q
"RTN","ALPBHL1U",166,0)
 N ALPBFILE
"RTN","ALPBHL1U",167,0)
 ; route...
"RTN","ALPBHL1U",168,0)
 S ALPBFILE(53.702,OIEN_","_IEN_",",7.1)=$P($P(DATA,FS,2),CS,5)
"RTN","ALPBHL1U",169,0)
 D UPDATE^DIE("","ALPBFILE","","ERR")
"RTN","ALPBHL1U",170,0)
 Q
"RTN","ALPBHL1U",171,0)
 ;
"RTN","ALPBHL1U",172,0)
RXC(IEN,OIEN,DATA,FS,CS,ERR) ; process RXC (IV orders: additives/solutions) segment...
"RTN","ALPBHL1U",173,0)
 I +$G(IEN)'>0!(+$G(OIEN)'>0)!($G(DATA)="")!($G(FS)="")!($G(CS)="") D ERRBLD^ALPBUTL1("RXC","",.ERR) Q
"RTN","ALPBHL1U",174,0)
 N ALPBFILE,ALPBFNOD,ALPBGNOD,ALPBNAM,ALPBNEXT,ALPBNUM,ALPBTYP,ALPBUNIT
"RTN","ALPBHL1U",175,0)
 S ALPBTYP=$P(DATA,FS,2)
"RTN","ALPBHL1U",176,0)
 S ALPBGNOD=$S(ALPBTYP="A":8,ALPBTYP="B":9,1:0)
"RTN","ALPBHL1U",177,0)
 I ALPBGNOD=0 D ERRBLD^ALPBUTL1("RXC","Unable to determine Additive or Solution in RXC segment",.ERR) Q
"RTN","ALPBHL1U",178,0)
 S ALPBFNOD="53.7021"_$S(ALPBGNOD=8:1,1:2)
"RTN","ALPBHL1U",179,0)
 S ALPBNUM=$P($P(DATA,FS,3),CS,4)
"RTN","ALPBHL1U",180,0)
 ; is this additive or solution already on file?...
"RTN","ALPBHL1U",181,0)
 I $D(^ALPB(53.7,IEN,2,OIEN,ALPBGNOD,"B",ALPBNUM)) S ERR("DIERR")=0 Q
"RTN","ALPBHL1U",182,0)
 ; if not, file it...
"RTN","ALPBHL1U",183,0)
 S ALPBNAM=$P($P(DATA,FS,3),CS,5)
"RTN","ALPBHL1U",184,0)
 S ALPBUNIT=$P(DATA,FS,4)_$P($P(DATA,FS,5),CS,5)
"RTN","ALPBHL1U",185,0)
 S ALPBNEXT=+$O(^ALPB(53.7,IEN,2,OIEN,ALPBGNOD," "),-1)+1
"RTN","ALPBHL1U",186,0)
 S ALPBFILE(ALPBFNOD,"+"_ALPBNEXT_","_OIEN_","_IEN_",",.01)=ALPBNUM
"RTN","ALPBHL1U",187,0)
 S ALPBFILE(ALPBFNOD,"+"_ALPBNEXT_","_OIEN_","_IEN_",",1)=ALPBNAM
"RTN","ALPBHL1U",188,0)
 S ALPBFILE(ALPBFNOD,"+"_ALPBNEXT_","_OIEN_","_IEN_",",2)=ALPBUNIT
"RTN","ALPBHL1U",189,0)
 D UPDATE^DIE("","ALPBFILE","ALPBNEXT","ERR")
"RTN","ALPBHL1U",190,0)
 Q
"RTN","ALPBHL1U",191,0)
 ;
"RTN","ALPBHL1U",192,0)
NTE(IEN,OIEN,DATA,FS,CS,ERR) ; process NTE (note) segment...
"RTN","ALPBHL1U",193,0)
 ; note: in the case of NTE segments, DATA is passed in as an array.
"RTN","ALPBHL1U",194,0)
 ; NTE data can be in multiple nodes, the first subscript of which
"RTN","ALPBHL1U",195,0)
 ; contains the actual NTE segments itself.
"RTN","ALPBHL1U",196,0)
 I +$G(IEN)'>0!(+$G(OIEN)'>0)!($D(DATA)=0)!($G(FS)="")!($G(CS)="") D ERRBLD^ALPBUTL1("NTE","",.ERR) Q
"RTN","ALPBHL1U",197,0)
 N ALPBFILE,I
"RTN","ALPBHL1U",198,0)
 ; check the status of this order.  if it is pending, abort
"RTN","ALPBHL1U",199,0)
 ; and do not file any special comments (note ORC module comments)...
"RTN","ALPBHL1U",200,0)
 I $E($P($G(^ALPB(53.7,IEN,2,OIEN,0)),"^",3),1,2)="IP" Q
"RTN","ALPBHL1U",201,0)
 ; examine DATA(1) and from the Pharmacy package code in the second
"RTN","ALPBHL1U",202,0)
 ; field, insert a header at the first subscript level of our working
"RTN","ALPBHL1U",203,0)
 ; array (which we will pass to the FileMan call)...
"RTN","ALPBHL1U",204,0)
 S ALPBFILE(1)=$S($P(DATA(1),FS,2)=6:"Provider Comments:",$P(DATA(1),FS,2)=21:"Special Instructions:",1:"Other Info:")
"RTN","ALPBHL1U",205,0)
 ;
"RTN","ALPBHL1U",206,0)
 ;*69  Rebuild the WP Instructions from the formatted NTE segment.
"RTN","ALPBHL1U",207,0)
 ;     The NTE text will be put into the DATA array and can contain
"RTN","ALPBHL1U",208,0)
 ;     the escape character \.br\ for line break.  The line break will
"RTN","ALPBHL1U",209,0)
 ;     allow this routine to store the WP text exactly how the Rph
"RTN","ALPBHL1U",210,0)
 ;     keyed it in IM backdoor.  They may have keyed in hard returns
"RTN","ALPBHL1U",211,0)
 ;     and spaces, so to create an aligned columnar table, i.e.
"RTN","ALPBHL1U",212,0)
 ;     an Insulin sliding scale.
"RTN","ALPBHL1U",213,0)
 S DATA(1)=$P(DATA(1),FS,4)     ;reset DATA(1) from piece 4 of DATA(1)
"RTN","ALPBHL1U",214,0)
 ;
"RTN","ALPBHL1U",215,0)
 ; Unwrap DATA array into one large field, 64k is limit
"RTN","ALPBHL1U",216,0)
 N ALEN,DLEN,ELEN,QUIT,ALLTXT,NEWALPB
"RTN","ALPBHL1U",217,0)
 S QUIT=0,ALLTXT=""
"RTN","ALPBHL1U",218,0)
 ;
"RTN","ALPBHL1U",219,0)
 ; Put formatted NTE array together as one line up to 64k
"RTN","ALPBHL1U",220,0)
 F I=0:0 S I=$O(DATA(I)) Q:'I  D  Q:QUIT
"RTN","ALPBHL1U",221,0)
 .S ALEN=$L(ALLTXT),DLEN=$L(DATA(I))
"RTN","ALPBHL1U",222,0)
 .I ALEN+DLEN>65536 S ELEN=65536-ALEN S ALLTXT=ALLTXT_$E(DATA(I),1,ELEN) S QUIT=1 Q
"RTN","ALPBHL1U",223,0)
 .S ALLTXT=ALLTXT_DATA(I)
"RTN","ALPBHL1U",224,0)
 ;
"RTN","ALPBHL1U",225,0)
 ; Build new work array from the formatted lines of the large field
"RTN","ALPBHL1U",226,0)
 D HL7FMT(ALLTXT,.NEWALPB)
"RTN","ALPBHL1U",227,0)
 ;
"RTN","ALPBHL1U",228,0)
 ; Now add back to the text of the new working array into the original
"RTN","ALPBHL1U",229,0)
 ; work array beginning with element 2, as element 1 has the heading
"RTN","ALPBHL1U",230,0)
 F I=0:0 S I=$O(NEWALPB(I)) Q:'I  S ALPBFILE(I+1)=NEWALPB(I)
"RTN","ALPBHL1U",231,0)
 ;
"RTN","ALPBHL1U",232,0)
 ; Store new WP text to field 8
"RTN","ALPBHL1U",233,0)
 D WP^DIE(53.702,OIEN_","_IEN_",",8,"","ALPBFILE","ERR")
"RTN","ALPBHL1U",234,0)
 Q
"RTN","ALPBHL1U",235,0)
 ;
"RTN","ALPBHL1U",236,0)
HL7FMT(NEWLN,AR) ;Unwrap formatted text array lines into a new array
"RTN","ALPBHL1U",237,0)
 ;  the escape character, \.br\ ,will cause a new array element to
"RTN","ALPBHL1U",238,0)
 ;  begin with the text after the escape character.
"RTN","ALPBHL1U",239,0)
 N ESC,LIN,LN,QUIT,I
"RTN","ALPBHL1U",240,0)
 S QUIT=0
"RTN","ALPBHL1U",241,0)
 F I=1:1 S LN=NEWLN D  Q:QUIT
"RTN","ALPBHL1U",242,0)
 . S ESC=$F(LN,"\.br\")
"RTN","ALPBHL1U",243,0)
 . I ESC=6 S LIN="",NEWLN=$E(LN,ESC,65536) S AR(I)=LIN Q
"RTN","ALPBHL1U",244,0)
 . I ESC=0 S LIN=NEWLN,NEWLN="" S AR(I)=LIN,QUIT=1 Q
"RTN","ALPBHL1U",245,0)
 . S LIN=$E(LN,1,ESC-6)
"RTN","ALPBHL1U",246,0)
 . S NEWLN=$E(LN,ESC,65536)
"RTN","ALPBHL1U",247,0)
 . S AR(I)=LIN
"RTN","ALPBHL1U",248,0)
 Q
"RTN","ALPBIN")
0^8^B15950829
"RTN","ALPBIN",1,0)
ALPBIN ;OIFO-DALLAS/SED/KC/MW  BCMA-BCBU INPT TO HL7 INIT ;5/2/2002
"RTN","ALPBIN",2,0)
 ;;3.0;BAR CODE MED ADMIN;**8,73**;Mar 2004;Build 31
"RTN","ALPBIN",3,0)
 ;
"RTN","ALPBIN",4,0)
 ; Reference/IA
"RTN","ALPBIN",5,0)
 ; DPT/10035
"RTN","ALPBIN",6,0)
 ; DIC(42/10039
"RTN","ALPBIN",7,0)
 ; DIC(42/2440
"RTN","ALPBIN",8,0)
 Q
"RTN","ALPBIN",9,0)
OPT ;Entry point for the option
"RTN","ALPBIN",10,0)
 ;Select all or by Division
"RTN","ALPBIN",11,0)
ALL ;Ask if the user want to send to all divisions
"RTN","ALPBIN",12,0)
 K DTOUT,DUOUT,DIRUT,DIROUT,DIR,ALPALL,ALPWKS,ALPDIV,ALPBDVN
"RTN","ALPBIN",13,0)
 S DIR(0)="Y",DIR("B")="YES"
"RTN","ALPBIN",14,0)
 S DIR("A")="Enter Yes or No"
"RTN","ALPBIN",15,0)
 S DIR("A",1)="Include all Divisions"
"RTN","ALPBIN",16,0)
 D ^DIR
"RTN","ALPBIN",17,0)
 I $D(DIRUT) G EXIT
"RTN","ALPBIN",18,0)
 S ALPALL=+Y
"RTN","ALPBIN",19,0)
 ;I +ALPALL>0 D QUE
"RTN","ALPBIN",20,0)
 I ALPALL'>0 D DIV
"RTN","ALPBIN",21,0)
 ;I +ALPALL'>0!(+ALPWKS>0) D QUE
"RTN","ALPBIN",22,0)
 D QUE
"RTN","ALPBIN",23,0)
 ;
"RTN","ALPBIN",24,0)
EXIT ;
"RTN","ALPBIN",25,0)
 K ALPB,ALPBI,ALPBJ,ALPCN,ALDFN,ALPMDT,ALPML,ALPORDR,MSCTR,MSH,ORC
"RTN","ALPBIN",26,0)
 K PID,PV1,ALPHLL,ALPALL,DIR,Y,DTOUT,DUOUT,DIRUT,DIROUT,ALPDIV
"RTN","ALPBIN",27,0)
 K ALPTST,ALPSTOP,ALPOK,ZTSAVE,ALPCNI,ALPCNT,ALP,ALPDVN
"RTN","ALPBIN",28,0)
 Q
"RTN","ALPBIN",29,0)
 ;
"RTN","ALPBIN",30,0)
DIV K ALPHLL,DIR,ALPDIV,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ALPBIN",31,0)
 S DIR(0)="PO^40.8:EMZ"
"RTN","ALPBIN",32,0)
 S DIR("A",1)="Enter the division that you would like to"
"RTN","ALPBIN",33,0)
 S DIR("A",2)="initialize"
"RTN","ALPBIN",34,0)
 D ^DIR
"RTN","ALPBIN",35,0)
 I $D(DIRUT)!(+Y'>0) S ALPDIV="" Q
"RTN","ALPBIN",36,0)
 S ALPDIV=$P(Y,U,1),ALPDVN=$P(Y,U,2)
"RTN","ALPBIN",37,0)
 D GET^ALPBPARM(.ALPHLL,ALPDIV)
"RTN","ALPBIN",38,0)
 I '$D(ALPHLL) W !,"No workstations defined with "_ALPDVN G DIV
"RTN","ALPBIN",39,0)
ALLWKS ;If no then set allow the user to select the workstation
"RTN","ALPBIN",40,0)
 K DTOUT,DUOUT,DIRUT,DIROUT,DIR
"RTN","ALPBIN",41,0)
 S DIR(0)="Y",DIR("B")="YES"
"RTN","ALPBIN",42,0)
 S DIR("A")="Enter Yes or No"
"RTN","ALPBIN",43,0)
 S DIR("A",1)="Include all workstations for the "_ALPDVN_" Division"
"RTN","ALPBIN",44,0)
 D ^DIR
"RTN","ALPBIN",45,0)
 I $D(DIRUT) G DIV
"RTN","ALPBIN",46,0)
 S ALPWKS=+Y
"RTN","ALPBIN",47,0)
 I +ALPWKS>0 Q
"RTN","ALPBIN",48,0)
 ;
"RTN","ALPBIN",49,0)
WRKSTN ;Now select which workstations for the division to be initialized
"RTN","ALPBIN",50,0)
 K ALPSCRN,ALPBANS
"RTN","ALPBIN",51,0)
 ;Set up screen
"RTN","ALPBIN",52,0)
 S ALP=0 F  S ALP=$O(ALPHLL("LINKS",ALP))  Q:+ALP'>0  D
"RTN","ALPBIN",53,0)
 . S ALPSCRN($P(ALPHLL("LINKS",ALP),U,2),ALP)=ALPHLL("LINKS",ALP)
"RTN","ALPBIN",54,0)
 K ALPHLL
"RTN","ALPBIN",55,0)
 F  D LP Q:$D(DIRUT)
"RTN","ALPBIN",56,0)
 ;I  $D(DIRUT)!$D(ALPHLL) W !!,"No Selected Workstations" G ALLWKS
"RTN","ALPBIN",57,0)
 I '$D(ALPBANS)!$D(ALPHLL) W !!,"No Selected Workstations" G ALLWKS
"RTN","ALPBIN",58,0)
 Q:'$D(ALPBANS)
"RTN","ALPBIN",59,0)
 S ALP="",ALPCNT=1
"RTN","ALPBIN",60,0)
 F  S ALP=$O(ALPBANS(ALP)) Q:ALP=""  D
"RTN","ALPBIN",61,0)
 . S ALPHLL("LINKS",ALPCNT)=ALPSCRN(ALP,$O(ALPSCRN(ALP,0)))
"RTN","ALPBIN",62,0)
 . S ALPCNT=ALPCNT+1
"RTN","ALPBIN",63,0)
 K ALPSCRN,ALPBANS
"RTN","ALPBIN",64,0)
 Q
"RTN","ALPBIN",65,0)
 ;
"RTN","ALPBIN",66,0)
LP ;Multiple entries
"RTN","ALPBIN",67,0)
 K DIR,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ALPBIN",68,0)
 S DIR(0)="PO^870:EMZ",DIR("A")="Select WorkStation Link "
"RTN","ALPBIN",69,0)
 S DIR("?")="Answer with WorkStation Link to update "
"RTN","ALPBIN",70,0)
 S DIR("S")="I $D(ALPSCRN($P(^HLCS(870,+Y,0),U,1)))"
"RTN","ALPBIN",71,0)
 D ^DIR
"RTN","ALPBIN",72,0)
 Q:$D(DIRUT)
"RTN","ALPBIN",73,0)
 S ALPBANS($P(Y,U,2),+Y)=""
"RTN","ALPBIN",74,0)
 W #,!!,"Selected Workstations",!!
"RTN","ALPBIN",75,0)
 S ALPB=""
"RTN","ALPBIN",76,0)
 F ALP=1:1 S ALPB=$O(ALPBANS(ALPB)) Q:ALPB=""  D
"RTN","ALPBIN",77,0)
 .W ?$S(ALP#2:1,1:40),ALPB
"RTN","ALPBIN",78,0)
 .W:ALP#2'>0 !
"RTN","ALPBIN",79,0)
 Q
"RTN","ALPBIN",80,0)
 ;
"RTN","ALPBIN",81,0)
QUE ;Que the job
"RTN","ALPBIN",82,0)
 ;W !,"QUE"
"RTN","ALPBIN",83,0)
 S ZTRTN="EN^ALPBIN"
"RTN","ALPBIN",84,0)
 S ZTDESC="PSB - Initialize the Contingency Workstation"
"RTN","ALPBIN",85,0)
 S ZTIO="",ZTSAVE("ALPWKS")="",ZTSAVE("ALPDIV")=""
"RTN","ALPBIN",86,0)
 I $D(ALPHLL) S ZTSAVE("ALPHLL(")=""
"RTN","ALPBIN",87,0)
 D ^%ZTLOAD
"RTN","ALPBIN",88,0)
 W:$D(ZTSK) !,ZTSK
"RTN","ALPBIN",89,0)
 K ZTIO,ZTDESC,ZTRTN,ZTSK
"RTN","ALPBIN",90,0)
 Q
"RTN","ALPBIN",91,0)
EN ;Loop through the inpatient list.
"RTN","ALPBIN",92,0)
 S ALPDTS=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","ALPBIN",93,0)
 I +$G(ALPDIV)'>0 S ALPDIV=0
"RTN","ALPBIN",94,0)
 S ALPSTOP=0,ALPOK=1
"RTN","ALPBIN",95,0)
 S ALPCN=""
"RTN","ALPBIN",96,0)
 F  S ALPCN=$O(^DPT("CN",ALPCN)) Q:ALPCN=""!(ALPSTOP)  D
"RTN","ALPBIN",97,0)
 . ;DIVISION SCREEN HERE
"RTN","ALPBIN",98,0)
 . S ALPCNI=$O(^DIC(42,"B",ALPCN,0))
"RTN","ALPBIN",99,0)
 . Q:+ALPCNI'>0  ;Quit if I can't decifer the Ward Location
"RTN","ALPBIN",100,0)
 . S ALPTST=$P($G(^DIC(42,ALPCNI,0)),U,11)
"RTN","ALPBIN",101,0)
 . I +ALPDIV&(ALPDIV'=ALPTST) Q
"RTN","ALPBIN",102,0)
 . S ALPSTOP=$$S^%ZTLOAD()
"RTN","ALPBIN",103,0)
 . Q:ALPSTOP
"RTN","ALPBIN",104,0)
 . S ALDFN=0
"RTN","ALPBIN",105,0)
 . F  S ALDFN=$O(^DPT("CN",ALPCN,ALDFN)) Q:+ALDFN'>0!(ALPSTOP)  D PAT^ALPBIND
"RTN","ALPBIN",106,0)
 ;
"RTN","ALPBIN",107,0)
 N ALPNOWCL S ALPNOWCL=$$NOW^XLFDT()
"RTN","ALPBIN",108,0)
 D UDCLIN^ALPBIND(ALPNOWCL)
"RTN","ALPBIN",109,0)
 D IVCLIN^ALPBIND(ALPNOWCL)
"RTN","ALPBIN",110,0)
 ;
"RTN","ALPBIN",111,0)
 K XQA,XQAMSG
"RTN","ALPBIN",112,0)
 S ALPDTE=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","ALPBIN",113,0)
 S XQA(DUZ)=""
"RTN","ALPBIN",114,0)
 S XQAMSG="BCBU WORKSTATION INIT Started "_ALPDTS_" and finished "_ALPDTE_". "
"RTN","ALPBIN",115,0)
 ;_ALPBK_" entries sent."
"RTN","ALPBIN",116,0)
 D SETUP^XQALERT
"RTN","ALPBIN",117,0)
 K ALPDTS,ALPDTE,ALPCNT
"RTN","ALPBIN",118,0)
 D EXIT
"RTN","ALPBIN",119,0)
 Q
"RTN","ALPBIND")
0^9^B42568406
"RTN","ALPBIND",1,0)
ALPBIND ;OIFO-DALLAS/SED/KC/MW  BCMA-BCBU INPT TO HL7 INIT ;5/2/2002
"RTN","ALPBIND",2,0)
 ;;3.0;BAR CODE MED ADMIN;**8,73**;Mar 2004;Build 31
"RTN","ALPBIND",3,0)
 ;
"RTN","ALPBIND",4,0)
 ; Reference/IA
"RTN","ALPBIND",5,0)
 ; DPT/10035
"RTN","ALPBIND",6,0)
 ; DIC(42/10039
"RTN","ALPBIND",7,0)
 ; DIC(42/2440
"RTN","ALPBIND",8,0)
 ; EN^PSJBCBU/3876
"RTN","ALPBIND",9,0)
 Q
"RTN","ALPBIND",10,0)
OPT ;Entry point for the option
"RTN","ALPBIND",11,0)
 ;Select Workstations assigned to Default.
"RTN","ALPBIND",12,0)
DFT K ALPHLL,DIR,ALPDIV,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ALPBIND",13,0)
 D GET^ALPBPARM(.ALPHLL,"")
"RTN","ALPBIND",14,0)
 I '$D(ALPHLL) W !,"No workstations defined for default " G EXIT
"RTN","ALPBIND",15,0)
 D ALLWKS
"RTN","ALPBIND",16,0)
 ;D:'$D(DIRUT) QUE
"RTN","ALPBIND",17,0)
 D QUE
"RTN","ALPBIND",18,0)
 G EXIT
"RTN","ALPBIND",19,0)
 ;
"RTN","ALPBIND",20,0)
ALLWKS ;If no then set allow the user to select the workstation
"RTN","ALPBIND",21,0)
 K DTOUT,DUOUT,DIRUT,DIROUT,DIR
"RTN","ALPBIND",22,0)
 S DIR(0)="Y",DIR("B")="YES"
"RTN","ALPBIND",23,0)
 S DIR("A")="Enter Yes or No"
"RTN","ALPBIND",24,0)
 S DIR("A",1)="Include all workstations"
"RTN","ALPBIND",25,0)
 D ^DIR
"RTN","ALPBIND",26,0)
 I $D(DIRUT) Q
"RTN","ALPBIND",27,0)
 S ALPWKS=+Y
"RTN","ALPBIND",28,0)
 I +ALPWKS>0 Q
"RTN","ALPBIND",29,0)
 ;
"RTN","ALPBIND",30,0)
WRKSTN ;Now select which workstations to be initialized
"RTN","ALPBIND",31,0)
 K ALPSCRN,ALPBANS
"RTN","ALPBIND",32,0)
 ;Set up screen
"RTN","ALPBIND",33,0)
 S ALP=0 F  S ALP=$O(ALPHLL("LINKS",ALP))  Q:+ALP'>0  D
"RTN","ALPBIND",34,0)
 . S ALPSCRN($P(ALPHLL("LINKS",ALP),U,2),ALP)=ALPHLL("LINKS",ALP)
"RTN","ALPBIND",35,0)
 K ALPHLL
"RTN","ALPBIND",36,0)
 F  D LP Q:$D(DIRUT)
"RTN","ALPBIND",37,0)
 ;I $D(DIRUT)&($D(ALPHLL)) W !!,"No Selected Workstations" G ALLWKS
"RTN","ALPBIND",38,0)
 I '$D(ALPBANS)!$D(ALPHLL) W !!,"No Selected Workstations" G ALLWKS
"RTN","ALPBIND",39,0)
 Q:'$D(ALPBANS)
"RTN","ALPBIND",40,0)
 S ALP="",ALPCNT=1
"RTN","ALPBIND",41,0)
 F  S ALP=$O(ALPBANS(ALP)) Q:ALP=""  D
"RTN","ALPBIND",42,0)
 . S ALPHLL("LINKS",ALPCNT)=ALPSCRN(ALP,$O(ALPSCRN(ALP,0)))
"RTN","ALPBIND",43,0)
 . S ALPCNT=ALPCNT+1
"RTN","ALPBIND",44,0)
 K ALPSCRN,ALPBANS
"RTN","ALPBIND",45,0)
 Q
"RTN","ALPBIND",46,0)
 ;
"RTN","ALPBIND",47,0)
LP ;Multiple entries
"RTN","ALPBIND",48,0)
 K DIR,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ALPBIND",49,0)
 S DIR(0)="PO^870:EMZ",DIR("A")="Select WorkStation Link "
"RTN","ALPBIND",50,0)
 S DIR("?")="Answer with WorkStation Link to update "
"RTN","ALPBIND",51,0)
 S DIR("S")="I $D(ALPSCRN($P(^HLCS(870,+Y,0),U,1)))"
"RTN","ALPBIND",52,0)
 D ^DIR
"RTN","ALPBIND",53,0)
 Q:$D(DIRUT)
"RTN","ALPBIND",54,0)
 S ALPBANS($P(Y,U,2),+Y)=""
"RTN","ALPBIND",55,0)
 W #,!!,"Selected Workstations",!!
"RTN","ALPBIND",56,0)
 S ALPB=""
"RTN","ALPBIND",57,0)
 F ALP=1:1 S ALPB=$O(ALPBANS(ALPB)) Q:ALPB=""  D
"RTN","ALPBIND",58,0)
 .W ?$S(ALP#2:1,1:40),ALPB
"RTN","ALPBIND",59,0)
 .W:ALP#2'>0 !
"RTN","ALPBIND",60,0)
 Q
"RTN","ALPBIND",61,0)
 ;
"RTN","ALPBIND",62,0)
QUE ;Que the job
"RTN","ALPBIND",63,0)
 ;W !,"QUE"
"RTN","ALPBIND",64,0)
 S ZTRTN="EN^ALPBIND"
"RTN","ALPBIND",65,0)
 S ZTDESC="PSB - Initialize Default Contingency Workstation"
"RTN","ALPBIND",66,0)
 S ZTIO="",ZTSAVE("ALPWKS")=""
"RTN","ALPBIND",67,0)
 I $D(ALPHLL) S ZTSAVE("ALPHLL(")=""
"RTN","ALPBIND",68,0)
 D ^%ZTLOAD
"RTN","ALPBIND",69,0)
 W:$D(ZTSK) !,ZTSK
"RTN","ALPBIND",70,0)
 K ZTIO,ZTDESC,ZTRTN,ZTSK
"RTN","ALPBIND",71,0)
 Q
"RTN","ALPBIND",72,0)
EN ;Loop through the inpatient list.
"RTN","ALPBIND",73,0)
 Q:'$D(ALPHLL)
"RTN","ALPBIND",74,0)
 S ALPDTS=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","ALPBIND",75,0)
 K ALPSCR
"RTN","ALPBIND",76,0)
 S ALPSTOP=0,ALPOK=1
"RTN","ALPBIND",77,0)
 S ALPCN=""
"RTN","ALPBIND",78,0)
 F  S ALPCN=$O(^DPT("CN",ALPCN)) Q:ALPCN=""!(ALPSTOP)  D
"RTN","ALPBIND",79,0)
 . ;DIVISION SCREEN HERE
"RTN","ALPBIND",80,0)
 . S ALPCNI=$O(^DIC(42,"B",ALPCN,0))
"RTN","ALPBIND",81,0)
 . Q:+ALPCNI'>0  ;Quit if I can't decifer the Ward Location
"RTN","ALPBIND",82,0)
 . S ALPDIV=$P($G(^DIC(42,ALPCNI,0)),U,11)
"RTN","ALPBIND",83,0)
 . ;Check to see is the Division has Machines defined to it.
"RTN","ALPBIND",84,0)
 . ;if it does then it is not to go to default
"RTN","ALPBIND",85,0)
 . K ALPTEST
"RTN","ALPBIND",86,0)
 . D GET^ALPBPARM(.ALPTEST,ALPDIV,1)
"RTN","ALPBIND",87,0)
 . Q:$D(ALPTEST)
"RTN","ALPBIND",88,0)
 . S ALPSTOP=$$S^%ZTLOAD()
"RTN","ALPBIND",89,0)
 . S ALDFN=0
"RTN","ALPBIND",90,0)
 . F  S ALDFN=$O(^DPT("CN",ALPCN,ALDFN)) Q:+ALDFN'>0!(ALPSTOP)  D PAT
"RTN","ALPBIND",91,0)
 ;
"RTN","ALPBIND",92,0)
 N ALPNOWCL S ALPNOWCL=$$NOW^XLFDT()
"RTN","ALPBIND",93,0)
 D UDCLIN(ALPNOWCL)
"RTN","ALPBIND",94,0)
 D IVCLIN(ALPNOWCL)
"RTN","ALPBIND",95,0)
 ;
"RTN","ALPBIND",96,0)
 K XQA,XQAMSG
"RTN","ALPBIND",97,0)
 S ALPDTE=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","ALPBIND",98,0)
 S XQA(DUZ)=""
"RTN","ALPBIND",99,0)
 S XQAMSG="BCBU WORKSTATION INIT Started "_ALPDTS_" and finished "_ALPDTE_". "
"RTN","ALPBIND",100,0)
 ;_ALPBK_" entries sent."
"RTN","ALPBIND",101,0)
 D SETUP^XQALERT
"RTN","ALPBIND",102,0)
EXIT ;
"RTN","ALPBIND",103,0)
 K ALPDTS,ALPDTE,ALPCNT
"RTN","ALPBIND",104,0)
 K ALPB,ALPBI,ALPBJ,ALPCN,ALDFN,ALPMDT,ALPML,ALPORDR,MSCTR,MSH,ORC
"RTN","ALPBIND",105,0)
 K PID,PV1,ALPHLL,ALPALL,DIR,Y,DTOUT,DUOUT,DIRUT,DIROUT,ALPDIV
"RTN","ALPBIND",106,0)
 K ALPTST,ALPSTOP,ALPOK,ZTSAVE,ALPCNI,ALPCNT,ALP,ALPDVN,ALPSLT,ALPWKS
"RTN","ALPBIND",107,0)
 K PID,PV1,^TMP("PSJ",$J),^TMP("PSJBU",$J)
"RTN","ALPBIND",108,0)
 ;
"RTN","ALPBIND",109,0)
 Q
"RTN","ALPBIND",110,0)
MLOG ;Need to loop though the Med log file to get all med logs
"RTN","ALPBIND",111,0)
 ;associated with the order
"RTN","ALPBIND",112,0)
 Q:'$D(^PSB(53.79,"AORDX",ALDFN,ALPORDR))
"RTN","ALPBIND",113,0)
 S X=+$$GET^XPAR("PKG.BAR CODE MED ADMIN","PSB BKUP MEDLG",1,"Q")
"RTN","ALPBIND",114,0)
 S X=$S(X>0:"T-"_X,1:"T-30")
"RTN","ALPBIND",115,0)
 D ^%DT
"RTN","ALPBIND",116,0)
 Q:+Y'>0  ;Cannot get a valid date
"RTN","ALPBIND",117,0)
 S ALPMDT=Y
"RTN","ALPBIND",118,0)
 F  S ALPMDT=$O(^PSB(53.79,"AORDX",ALDFN,ALPORDR,ALPMDT)) Q:+ALPMDT'>0  D
"RTN","ALPBIND",119,0)
 . S ALPML=0
"RTN","ALPBIND",120,0)
 . F  S ALPML=$O(^PSB(53.79,"AORDX",ALDFN,ALPORDR,ALPMDT,ALPML)) Q:+ALPML'>0  D
"RTN","ALPBIND",121,0)
 . . Q:+$P($G(^PSB(53.79,ALPML,0)),U,1)'>0  ; Bad Med-log
"RTN","ALPBIND",122,0)
 . . S ALPRSLT=$$MEDL^ALPBINP(ALPML)
"RTN","ALPBIND",123,0)
 Q
"RTN","ALPBIND",124,0)
MESS ;BUILD AND SEND MESSAGE
"RTN","ALPBIND",125,0)
 K ALPB
"RTN","ALPBIND",126,0)
 D EN^PSJBCBU(ALDFN,ALPORDR,.ALPB)
"RTN","ALPBIND",127,0)
 S ALPBI=0
"RTN","ALPBIND",128,0)
 F  S ALPBI=$O(ALPB(ALPBI)) Q:ALPBI'>0  D
"RTN","ALPBIND",129,0)
 . I $E(ALPB(ALPBI),1,3)="MSH" S MSH=ALPBI
"RTN","ALPBIND",130,0)
 . I $E(ALPB(ALPBI),1,3)="PID" S PID=ALPBI
"RTN","ALPBIND",131,0)
 . I $E(ALPB(ALPBI),1,3)="PV1" S PV1=ALPBI
"RTN","ALPBIND",132,0)
 . I $E(ALPB(ALPBI),1,3)="ORC" S ORC=ALPBI
"RTN","ALPBIND",133,0)
 I +MSH'>0 Q   ;MISSING MSH SEGMENT BAD MESSAGE
"RTN","ALPBIND",134,0)
 S MSCTR=$E(ALPB(MSH),4,8),ALPORD=ALPORDR
"RTN","ALPBIND",135,0)
 S X=$$INI^ALPBINP()
"RTN","ALPBIND",136,0)
 Q
"RTN","ALPBIND",137,0)
SNDPT ;Send a Single Patient
"RTN","ALPBIND",138,0)
 K DIR,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ALPBIND",139,0)
 S DIR(0)="PO^2:EM",DIR("A")="Select Patient "
"RTN","ALPBIND",140,0)
 D ^DIR
"RTN","ALPBIND",141,0)
 Q:$D(DIRUT)
"RTN","ALPBIND",142,0)
 Q:+Y'>0
"RTN","ALPBIND",143,0)
 S ALDFN=+Y
"RTN","ALPBIND",144,0)
 W !!,"Please Hold On While I send the orders",!!
"RTN","ALPBIND",145,0)
 ;
"RTN","ALPBIND",146,0)
PAT ;
"RTN","ALPBIND",147,0)
 K ^TMP("PSJBU",$J)
"RTN","ALPBIND",148,0)
 S X=+$$GET^XPAR("PKG.BAR CODE MED ADMIN","PSB BKUP IPH",1,"Q")
"RTN","ALPBIND",149,0)
 S X=$S(X>0:"T-"_X,1:"T-15")
"RTN","ALPBIND",150,0)
 D ^%DT
"RTN","ALPBIND",151,0)
 Q:+Y'>0  ;Cannot get a valid date
"RTN","ALPBIND",152,0)
 D EN2^PSJBCBU(ALDFN,Y)
"RTN","ALPBIND",153,0)
 Q:'$D(^TMP("PSJBU",$J))  ; NO DATA
"RTN","ALPBIND",154,0)
 S ALPBJ=0
"RTN","ALPBIND",155,0)
 F  S ALPBJ=$O(^TMP("PSJBU",$J,ALPBJ)) Q:+ALPBJ'>0  D
"RTN","ALPBIND",156,0)
 . Q:'$D(^TMP("PSJBU",$J,ALPBJ,0))
"RTN","ALPBIND",157,0)
 . S ALPORDR=$P(^TMP("PSJBU",$J,ALPBJ,0),U,3)
"RTN","ALPBIND",158,0)
 . Q:+ALPORDR'>0
"RTN","ALPBIND",159,0)
 . D MESS
"RTN","ALPBIND",160,0)
 . Q:ALPORDR["P"  ;If not pending do Med-Log
"RTN","ALPBIND",161,0)
 . D MLOG
"RTN","ALPBIND",162,0)
 S ALPSTOP=$$S^%ZTLOAD()
"RTN","ALPBIND",163,0)
 Q
"RTN","ALPBIND",164,0)
 ;
"RTN","ALPBIND",165,0)
UDCLIN(ALPNOW) ; Unit Dose Clinic Orders
"RTN","ALPBIND",166,0)
 N ALPCSTPD,ALPCN,ALPDFNAR S ALPCSTPD=ALPNOW
"RTN","ALPBIND",167,0)
 F  S ALPCSTPD=$O(^PS(55,"AUDC",ALPCSTPD)) Q:ALPCSTPD=""  S ALPCN="" F  S ALPCN=$O(^PS(55,"AUDC",ALPCSTPD,ALPCN)) Q:ALPCN=""  D
"RTN","ALPBIND",168,0)
 . ;DIVISION SCREEN
"RTN","ALPBIND",169,0)
 . Q:+ALPCNI'>0
"RTN","ALPBIND",170,0)
 . S ALPDIV=$P($G(^SC(ALPCNI,0)),"^",15)
"RTN","ALPBIND",171,0)
 . K ALPTEST
"RTN","ALPBIND",172,0)
 . D GET^ALPBPARM(.ALPTEST,ALPDIV,1)
"RTN","ALPBIND",173,0)
 . Q:$D(ALPTEST)
"RTN","ALPBIND",174,0)
 . S ALPSTOP=$$S^%ZTLOAD()
"RTN","ALPBIND",175,0)
 . S ALDFN=0
"RTN","ALPBIND",176,0)
 . F  S ALDFN=$O(^PS(55,"AUDC",ALPCSTPD,ALPCN,ALDFN)) Q:'ALDFN  S ALPDFNAR(ALDFN)=""
"RTN","ALPBIND",177,0)
 S ALDFN=0
"RTN","ALPBIND",178,0)
 F  S ALDFN=$O(ALPDFNAR(ALDFN)) Q:'ALDFN!$G(ALPSTOP)  D PAT
"RTN","ALPBIND",179,0)
 Q
"RTN","ALPBIND",180,0)
 ;
"RTN","ALPBIND",181,0)
IVCLIN(ALPNOW) ; IV Clinic Orders
"RTN","ALPBIND",182,0)
 N ALPCSTPD,ALPCN,ALPDFNAR S ALPCSTPD=ALPNOW
"RTN","ALPBIND",183,0)
 F  S ALPCSTPD=$O(^PS(55,"AIVC",ALPCSTPD)) Q:ALPCSTPD=""  S ALPCN="" F  S ALPCN=$O(^PS(55,"AIVC",ALPCSTPD,ALPCN)) Q:ALPCN=""  D
"RTN","ALPBIND",184,0)
 . ;DIVISION SCREEN
"RTN","ALPBIND",185,0)
 . Q:+ALPCNI'>0
"RTN","ALPBIND",186,0)
 . S ALPDIV=$P($G(^SC(ALPCNI,0)),"^",15)
"RTN","ALPBIND",187,0)
 . K ALPTEST
"RTN","ALPBIND",188,0)
 . D GET^ALPBPARM(.ALPTEST,ALPDIV,1)
"RTN","ALPBIND",189,0)
 . Q:$D(ALPTEST)
"RTN","ALPBIND",190,0)
 . S ALPSTOP=$$S^%ZTLOAD()
"RTN","ALPBIND",191,0)
 . S ALDFN=0
"RTN","ALPBIND",192,0)
 . F  S ALDFN=$O(^PS(55,"AIVC",ALPCSTPD,ALPCN,ALDFN)) Q:'ALDFN  S ALPDFNAR(ALDFN)=""
"RTN","ALPBIND",193,0)
 S ALDFN=0
"RTN","ALPBIND",194,0)
 F  S ALDFN=$O(ALPDFNAR(ALDFN)) Q:'ALDFN!$G(ALPSTOP)  D PAT
"RTN","ALPBIND",195,0)
 Q
"RTN","ALPBINP")
0^12^B74330876
"RTN","ALPBINP",1,0)
ALPBINP ;OIFO-DALLAS/SED/KC/MW  BCMA - BCBU INPT TO HL7 ;5/2/2002
"RTN","ALPBINP",2,0)
 ;;3.0;BAR CODE MED ADMIN;**8,37,73**;May 2007;Build 31
"RTN","ALPBINP",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ALPBINP",4,0)
 ;This routine will intercept the HL7 message that it sent from Pharmacy
"RTN","ALPBINP",5,0)
 ;to CPRS to update order information. The message is then parsed and 
"RTN","ALPBINP",6,0)
 ;repackage so it can be sent to the BCBU workstation.
"RTN","ALPBINP",7,0)
 ;
"RTN","ALPBINP",8,0)
 ; Reference/IA
"RTN","ALPBINP",9,0)
 ; EN^PSJBCBU/3876
"RTN","ALPBINP",10,0)
 ; $$EN^VAFHLPID/263
"RTN","ALPBINP",11,0)
 ; $$EN^VAFHAPV1/4512
"RTN","ALPBINP",12,0)
 ; EN1^GMRADPT/10099
"RTN","ALPBINP",13,0)
 ; EN^PSJBCMA1/2829
"RTN","ALPBINP",14,0)
 ;
"RTN","ALPBINP",15,0)
IPH(MSG) ;CAPTURE MESSAGE ARRAY FROM PHARMACY
"RTN","ALPBINP",16,0)
 N VAIN,ALPMSG
"RTN","ALPBINP",17,0)
 S ALPMSG=$S($L($G(MSG)):MSG,1:"MSG")
"RTN","ALPBINP",18,0)
 I '$O(@ALPMSG@(0)) Q "0^MSG^Missing Message Array"
"RTN","ALPBINP",19,0)
 S MSH=0
"RTN","ALPBINP",20,0)
 F  S MSH=$O(@ALPMSG@(MSH)) Q:MSH'>0  Q:$E(@ALPMSG@(MSH),1,3)="MSH"
"RTN","ALPBINP",21,0)
 I +MSH'>0 Q "0^MSG^Missing MSH Segment Bad Message"
"RTN","ALPBINP",22,0)
 S MSFS=$E(@ALPMSG@(MSH),4,4)
"RTN","ALPBINP",23,0)
 S MSCS=$E(@ALPMSG@(MSH),5,5)
"RTN","ALPBINP",24,0)
 S MSCH=$E(@ALPMSG@(MSH),6,6)
"RTN","ALPBINP",25,0)
 S MSCTR=$E(@ALPMSG@(MSH),4,8)
"RTN","ALPBINP",26,0)
 ;The message is confirmed to be a Pharmacy message
"RTN","ALPBINP",27,0)
 I $P(@ALPMSG@(MSH),MSFS,3)'="PHARMACY" Q "1^^Not a Pharmacy Message"
"RTN","ALPBINP",28,0)
 ;A PID and PV1 segment is required for this message
"RTN","ALPBINP",29,0)
 S PID=0
"RTN","ALPBINP",30,0)
 F  S PID=$O(@ALPMSG@(PID)) Q:PID'>0  Q:$E(@ALPMSG@(PID),1,3)="PID"
"RTN","ALPBINP",31,0)
 I +PID'>0 Q "0^MSG^Missing PID Segment Bad Message"
"RTN","ALPBINP",32,0)
 ;Also the patient must have an inpatient status
"RTN","ALPBINP",33,0)
 S PV1=0
"RTN","ALPBINP",34,0)
 F  S PV1=$O(@ALPMSG@(PV1)) Q:PV1'>0  Q:$E(@ALPMSG@(PV1),1,3)="PV1"
"RTN","ALPBINP",35,0)
 I +PV1'>0 Q "0^MSG^Missing PV1 Segment Bad Message"
"RTN","ALPBINP",36,0)
 I $P(@ALPMSG@(PV1),MSFS,3)'="I" Q "1^^Not an Inpatient Pharmacy Message"
"RTN","ALPBINP",37,0)
 S ORC=0
"RTN","ALPBINP",38,0)
 F  S ORC=$O(@ALPMSG@(ORC)) Q:ORC'>0  Q:$E(@ALPMSG@(ORC),1,3)="ORC"
"RTN","ALPBINP",39,0)
 I +ORC'>0 Q "0^MSG^Missing ORC Segment Bad Message"
"RTN","ALPBINP",40,0)
 ;RE-BUILDING THE MESSAGE FOR BCBU
"RTN","ALPBINP",41,0)
 S ALPDFN=$P(@ALPMSG@(PID),MSFS,4)
"RTN","ALPBINP",42,0)
 I +ALPDFN'>0 Q "0^MSG^Invalid or Missing Patient - PID"
"RTN","ALPBINP",43,0)
 S ALPORD=$P($P(@ALPMSG@(ORC),MSFS,4),MSCS,1)
"RTN","ALPBINP",44,0)
 I ALPORD="" Q "0^MSG^Invalid or Missing Order Number - ORC"
"RTN","ALPBINP",45,0)
 K ALPB
"RTN","ALPBINP",46,0)
 D EN^PSJBCBU(ALPDFN,ALPORD,.ALPB)
"RTN","ALPBINP",47,0)
SEED ;Entry point for ^ALPBIND
"RTN","ALPBINP",48,0)
 N VAIN
"RTN","ALPBINP",49,0)
 D INIT
"RTN","ALPBINP",50,0)
 S SUB=0 F  S SUB=$O(ALPB(SUB)) Q:'SUB  D
"RTN","ALPBINP",51,0)
 . ;convert and move the message to the HLA array for transport
"RTN","ALPBINP",52,0)
 . S HLA("HLS",SUB)=$$CNV^ALPBUTL1(MSCTR,HLCTR,ALPB(SUB))
"RTN","ALPBINP",53,0)
 . ;Now check for continuations 
"RTN","ALPBINP",54,0)
 . S SUB1=0
"RTN","ALPBINP",55,0)
 . F  S SUB1=$O(ALPB(SUB,SUB1)) Q:'SUB1  D
"RTN","ALPBINP",56,0)
 . . S HLA("HLS",SUB,SUB1)=$$CNV^ALPBUTL1(MSCTR,HLCTR,ALPB(SUB,SUB1))
"RTN","ALPBINP",57,0)
 . I $E(HLA("HLS",SUB),1,3)="RXE" S RXE=SUB
"RTN","ALPBINP",58,0)
 . I $E(HLA("HLS",SUB),1,3)="PID" S PID=SUB
"RTN","ALPBINP",59,0)
 . I $E(HLA("HLS",SUB),1,3)="PV1" S PV1=SUB
"RTN","ALPBINP",60,0)
 K HLA("HLS",MSH)
"RTN","ALPBINP",61,0)
 I '$D(HLA("HLS",PID)) Q "0^MSG^Missing PID Segment Bad Message"
"RTN","ALPBINP",62,0)
 S ALPDFN=$P($P(HLA("HLS",PID),HLFS,4),HLCS,1)
"RTN","ALPBINP",63,0)
 I +ALPDFN'>0 Q "0^MSG^Invalid or Missing Patient - PID"
"RTN","ALPBINP",64,0)
 S HLA("HLS",PID)=$$EN^VAFHLPID(ALPDFN,"2,7,8,19")
"RTN","ALPBINP",65,0)
 ;Fix RXE segement for Administration Type
"RTN","ALPBINP",66,0)
 D RXE
"RTN","ALPBINP",67,0)
 ;Get the Division that the patient is associated with
"RTN","ALPBINP",68,0)
 D PDIV
"RTN","ALPBINP",69,0)
 I ALPDIV="",$G(ALPORD) S ALPDIV=$$CDIVOR(ALPDFN,ALPORD)
"RTN","ALPBINP",70,0)
 I ALPDIV="DOM",+$$GET^XPAR("PKG.BAR CODE MED ADMIN","PSB BKUP DOM FILTER",1,"Q")>0 Q "0^^Screen of DOMICILIARY"
"RTN","ALPBINP",71,0)
 I '$D(HLL("LINKS")) Q "0^HL7^Missing HLL Links Array Division # "_ALPDIV
"RTN","ALPBINP",72,0)
 ;SET NEW PV1
"RTN","ALPBINP",73,0)
 D NOW^%DTC
"RTN","ALPBINP",74,0)
 S STRING=$$EN^VAFHAPV1(ALPDFN,%,"2,3,7,18")
"RTN","ALPBINP",75,0)
 S HLA("HLS",PV1)=STRING
"RTN","ALPBINP",76,0)
 I +ORC>0 D
"RTN","ALPBINP",77,0)
 . S ALPST=$$STAT^ALPBUTL1($P(HLA("HLS",ORC),HLFS,6))
"RTN","ALPBINP",78,0)
 . Q:ALPST=""
"RTN","ALPBINP",79,0)
 . S $P(HLA("HLS",ORC),HLFS,6)=$P(HLA("HLS",ORC),HLFS,6)_HLCS_ALPST
"RTN","ALPBINP",80,0)
 D AL1
"RTN","ALPBINP",81,0)
 ;Capture message to review for testing before sending
"RTN","ALPBINP",82,0)
 D SEND
"RTN","ALPBINP",83,0)
EXIT ;EXIT and kill
"RTN","ALPBINP",84,0)
 K HLA,SUB,SUB1,STRING,ALPLOC,HLCS,HLCTR,HLFS,MSCH,MSCS,MSCTR
"RTN","ALPBINP",85,0)
 K MSH,ORC,PID,PV1,RXE,RXR,ALPB,ALPBY,ALPBYN,ALPC,ALPDATA,ALPDFN
"RTN","ALPBINP",86,0)
 K ALPDT,ALPI,ALPII,ALPIV,ALPOPTS,ALPOR,ALPORD,ALPST
"RTN","ALPBINP",87,0)
 K ALPSTN,ALPSYM,EVENT,GMRA,GMRAL
"RTN","ALPBINP",88,0)
 Q ALPRSLT
"RTN","ALPBINP",89,0)
INI() ;INTIAL SET UP ENTRY
"RTN","ALPBINP",90,0)
 G SEED
"RTN","ALPBINP",91,0)
INIT ;CALL HL7 TO INITIALIZE MESSAGE VARIABLES
"RTN","ALPBINP",92,0)
 ;SET UP ENVIRONMENT FOR MESSAGE
"RTN","ALPBINP",93,0)
 K HL,HLA,HLECH,HLQ,ALPRSLT,ALPOPTS
"RTN","ALPBINP",94,0)
 S EVENT="PSB BCBU ORM SEND"
"RTN","ALPBINP",95,0)
 D INIT^HLFNC2(EVENT,.HL,1)
"RTN","ALPBINP",96,0)
 S HLCS=$E(HL("ECH")),HLCTR=HLFS_HL("ECH")
"RTN","ALPBINP",97,0)
 Q
"RTN","ALPBINP",98,0)
SEND ;CALL HL7 TO TRANSMIT SINGLE MESSAGE
"RTN","ALPBINP",99,0)
 K ALPRSLT,ALPOPTS
"RTN","ALPBINP",100,0)
 D GENERATE^HLMA(EVENT,"LM",1,.ALPRSLT,"",.ALPOPTS)
"RTN","ALPBINP",101,0)
 Q
"RTN","ALPBINP",102,0)
AL1 ;ALLERGY SEGMENT BUILD
"RTN","ALPBINP",103,0)
 ;The will build the ALP segment with the curent allergies
"RTN","ALPBINP",104,0)
 ;for the patient to be added to the message
"RTN","ALPBINP",105,0)
 N DFN
"RTN","ALPBINP",106,0)
 Q:+ALPDFN'>0
"RTN","ALPBINP",107,0)
 K GMRAL
"RTN","ALPBINP",108,0)
 S DFN=ALPDFN
"RTN","ALPBINP",109,0)
 S GMRA="0^0^111"  ;DEFINES WHAT ALLERGIES TO RETURN
"RTN","ALPBINP",110,0)
 D EN1^GMRADPT
"RTN","ALPBINP",111,0)
 Q:'$D(GMRAL)
"RTN","ALPBINP",112,0)
 S ALPI=0,ALPC=1,ALPSYM=""
"RTN","ALPBINP",113,0)
 F  S ALPI=$O(GMRAL(ALPI)) Q:+ALPI'>0  D
"RTN","ALPBINP",114,0)
 . S ALPADR=""
"RTN","ALPBINP",115,0)
 . I $P($P(GMRAL(ALPI),U,8),";",2)="P" S ALPADR="**ADR** "
"RTN","ALPBINP",116,0)
 . S ALPDATA="AL1"_HLFS_ALPC_HLFS_$P(GMRAL(ALPI),U,7)
"RTN","ALPBINP",117,0)
 . S ALPDATA=ALPDATA_HLFS_ALPI_HLCS_ALPADR_$E($P(GMRAL(ALPI),U,2),1,25)_HLCS_"VA120.8"
"RTN","ALPBINP",118,0)
 . ;S ALPII=0 F  S ALPII=$O(GMRAL(ALPI,"S",ALPII)) Q:+ALPII'>0  D
"RTN","ALPBINP",119,0)
 . ;. S ALPSYM=ALPSYM_$P(GMRAL(ALPI,"S",ALPII),";",1)_HLCS
"RTN","ALPBINP",120,0)
 . ;S $P(ALPDATA,HLFS,6)=ALPSYM
"RTN","ALPBINP",121,0)
 . S HLA("HLS",$O(HLA("HLS",9999999),-1)+1)=ALPDATA
"RTN","ALPBINP",122,0)
 . S ALPC=ALPC+1
"RTN","ALPBINP",123,0)
 K GMRAL
"RTN","ALPBINP",124,0)
 Q
"RTN","ALPBINP",125,0)
RXE ;
"RTN","ALPBINP",126,0)
 Q:+$G(RXE)'>0
"RTN","ALPBINP",127,0)
 K ^TMP("PSJ1",$J)
"RTN","ALPBINP",128,0)
 Q:'$D(HLA("HLS",RXE))
"RTN","ALPBINP",129,0)
 S DATA=HLA("HLS",RXE)
"RTN","ALPBINP",130,0)
 D EN^PSJBCMA1(ALPDFN,ALPORD,1)
"RTN","ALPBINP",131,0)
 S TYP=$P($G(^TMP("PSJ1",$J,4)),U,2)
"RTN","ALPBINP",132,0)
 Q:TYP="CONTINUOUS"
"RTN","ALPBINP",133,0)
 Q:TYP="FILL ON REQUEST"
"RTN","ALPBINP",134,0)
 S ALP1=$P(DATA,HLFS,2),ALP2=$P(ALP1,HLCS,2)
"RTN","ALPBINP",135,0)
 I ALP1[TYP Q
"RTN","ALPBINP",136,0)
 I ALP2[TYP Q
"RTN","ALPBINP",137,0)
 S $P(ALP2,"&",1)=$P(ALP2,"&",1)_" "_TYP
"RTN","ALPBINP",138,0)
 S $P(ALP1,HLCS,2)=ALP2,$P(DATA,HLFS,2)=ALP1
"RTN","ALPBINP",139,0)
 S HLA("HLS",RXE)=DATA
"RTN","ALPBINP",140,0)
 K TYP,ALP1,ALP2,^TMP("PSJ1",$J)
"RTN","ALPBINP",141,0)
 Q
"RTN","ALPBINP",142,0)
PDIV ;PATIENT DIVISION
"RTN","ALPBINP",143,0)
 ;Check ALPBMDT Variable
"RTN","ALPBINP",144,0)
 S:+$G(ALPBMDT)'>0 ALPBMDT=0
"RTN","ALPBINP",145,0)
 S ALPDIV=$$DIV^ALPBUTL1(ALPDFN,ALPBMDT)
"RTN","ALPBINP",146,0)
 ;Screen Dom
"RTN","ALPBINP",147,0)
 I ALPDIV="DOM",+$$GET^XPAR("PKG.BAR CODE MED ADMIN","PSB BKUP DOM FILTER",1,"Q")>0 Q
"RTN","ALPBINP",148,0)
 ;Now do I send the Message or not Based of Division
"RTN","ALPBINP",149,0)
 I $D(ALPHLL("LINKS")) M HLL("LINKS")=ALPHLL("LINKS")
"RTN","ALPBINP",150,0)
 I '$D(HLL("LINKS")) D GET^ALPBPARM(.HLL,ALPDIV)
"RTN","ALPBINP",151,0)
 Q
"RTN","ALPBINP",152,0)
MEDL(ALPML) ;Use this entry to send MedLog messages
"RTN","ALPBINP",153,0)
 N VAIN
"RTN","ALPBINP",154,0)
 ;ALPML is the IEN of the MedLog for file #53.79
"RTN","ALPBINP",155,0)
 I '$D(ALPML) Q "0^ALPML^No Med-Log Number"
"RTN","ALPBINP",156,0)
 I '$D(^PSB(53.79,ALPML,0)) Q "0^"_ALPML_"^Med - Log Number Invalid"
"RTN","ALPBINP",157,0)
 ;First get the required HL7 Variables
"RTN","ALPBINP",158,0)
 D INIT
"RTN","ALPBINP",159,0)
 ;Need to build the PID, PV1 and ORC segments
"RTN","ALPBINP",160,0)
 S ALPDFN=+$P($G(^PSB(53.79,ALPML,0)),U,1)
"RTN","ALPBINP",161,0)
 I +ALPDFN'>0 Q "0^"_ALPML_"^Invalid or Missing Patient - Med-Log"
"RTN","ALPBINP",162,0)
 ;Get the Division that the patient is associated with
"RTN","ALPBINP",163,0)
 D PDIV
"RTN","ALPBINP",164,0)
 I ALPDIV="",$G(ALPML) S ALPDIV=$$CDIV(ALPML)
"RTN","ALPBINP",165,0)
 I ALPDIV="DOM",+$$GET^XPAR("PKG.BAR CODE MED ADMIN","PSB BKUP DOM FILTER",1,"Q")>0 Q "0^^Screen of DOMICILIARY"
"RTN","ALPBINP",166,0)
 I '$D(HLL("LINKS")) Q "0^"_ALPML_"^Missing HLL Links Array Med-Log"
"RTN","ALPBINP",167,0)
 S ALPST=$P($G(^PSB(53.79,ALPML,0)),U,9)
"RTN","ALPBINP",168,0)
 S ALPBY=$P($G(^PSB(53.79,ALPML,0)),U,7)
"RTN","ALPBINP",169,0)
 S ALPDT=$P($G(^PSB(53.79,ALPML,0)),U,6)
"RTN","ALPBINP",170,0)
 S ALPOR=$P($G(^PSB(53.79,ALPML,.1)),U,1)
"RTN","ALPBINP",171,0)
 S ALPBYN=$P($G(^VA(200,ALPBY,0)),U,1)
"RTN","ALPBINP",172,0)
 S ALPSTN=$S($D(ALPST):$$EXTERNAL^DILFD(53.79,".09",,ALPST),1:"Non")
"RTN","ALPBINP",173,0)
 I '$D(ALPOR) Q "0^"_ALPML_"^Invalid or Missing Pharmacy Order Number Med-Log"
"RTN","ALPBINP",174,0)
 S PID=$$EN^VAFHLPID(ALPDFN,"2,7,8,19")
"RTN","ALPBINP",175,0)
 I '$D(PID) Q "0^"_ALPML_"^Invalid or Missing Patient - PID Med-Log"
"RTN","ALPBINP",176,0)
 S PV1=$$EN^VAFHAPV1(ALPDFN,DT,"2,3,7,18")
"RTN","ALPBINP",177,0)
 I '$D(PV1) Q "0^"_ALPML_"^Invalid or Missing Patient Location - PV1 Med-Log"
"RTN","ALPBINP",178,0)
 S HLA("HLS",1)=PID
"RTN","ALPBINP",179,0)
 S HLA("HLS",2)=PV1
"RTN","ALPBINP",180,0)
 ;BUILD ORC SEGMENT
"RTN","ALPBINP",181,0)
 S ORC="ORC"_HLFS_"ML"_HLFS_ALPML_HLCS_"ML"_HLFS_ALPOR_HLCS_"PS"_HLFS
"RTN","ALPBINP",182,0)
 S ORC=ORC_HLFS_ALPST_HLCS_ALPSTN_HLFS_HLFS_HLFS_HLFS
"RTN","ALPBINP",183,0)
 S ORC=ORC_$$HLDATE^HLFNC(ALPDT,"TS")_HLFS_ALPBY_HLCS_ALPBYN
"RTN","ALPBINP",184,0)
 S HLA("HLS",3)=ORC
"RTN","ALPBINP",185,0)
 ;The Message is ready to send
"RTN","ALPBINP",186,0)
 D SEND
"RTN","ALPBINP",187,0)
 Q ALPRSLT
"RTN","ALPBINP",188,0)
 ;
"RTN","ALPBINP",189,0)
ADMQ ;Need to que a single patient init for admissions
"RTN","ALPBINP",190,0)
 S ALDFN=ALPDFN
"RTN","ALPBINP",191,0)
 S ZTDTH=$$NOW^XLFDT
"RTN","ALPBINP",192,0)
 S ZTRTN="PAT^ALPBIND"
"RTN","ALPBINP",193,0)
 S ZTDESC="PSB - Initialize Single Patient on Admission Contingency Workstation"
"RTN","ALPBINP",194,0)
 S ZTIO="",ZTSAVE("ALDFN")=""
"RTN","ALPBINP",195,0)
 D ^%ZTLOAD
"RTN","ALPBINP",196,0)
 K ZTIO,ZTDESC,ZTRTN,ZTSK
"RTN","ALPBINP",197,0)
 Q
"RTN","ALPBINP",198,0)
PMOV(ALPDFN,ALPTYP,ALPTT,ALPBMDT) ;Entry Point to send patient movement
"RTN","ALPBINP",199,0)
 N VAIN
"RTN","ALPBINP",200,0)
 I +$G(ALPDFN)'>0 Q "0^^Missing Patient ID"
"RTN","ALPBINP",201,0)
 D INIT
"RTN","ALPBINP",202,0)
 ;Check Movement type. If not a discharge then don't pass date and time
"RTN","ALPBINP",203,0)
 S:$G(ALPTT)'="DISCHARGE" ALPBMDT=0
"RTN","ALPBINP",204,0)
 ;Get the Division that the patient is associated with
"RTN","ALPBINP",205,0)
 D PDIV
"RTN","ALPBINP",206,0)
 I ALPDIV="DOM",+$$GET^XPAR("PKG.BAR CODE MED ADMIN","PSB BKUP DOM FILTER",1,"Q")>0 Q "0^^Screen of DOMICILIARY"
"RTN","ALPBINP",207,0)
 I '$D(HLL("LINKS")) Q "0^"_ALPDFN_"^Missing HLL Links Array Pat-Move"
"RTN","ALPBINP",208,0)
 S HLA("HLS",1)=$$EN^VAFHLPID(ALPDFN,"2,7,8,19")
"RTN","ALPBINP",209,0)
 S HLA("HLS",2)=$$EN^VAFHAPV1(ALPDFN,DT,"2,3,7,18")
"RTN","ALPBINP",210,0)
 S:$G(ALPTT)="DISCHARGE" $P(HLA("HLS",2),HLFS,37)=$G(ALPTYP)
"RTN","ALPBINP",211,0)
 D SEND
"RTN","ALPBINP",212,0)
 I ALPTYP=14!(ALPTYP=41) S ALPTT="ADMISSION" ;FOR RETURN FROM ASIH
"RTN","ALPBINP",213,0)
 I $G(ALPTT)="ADMISSION" D ADMQ
"RTN","ALPBINP",214,0)
 ;SEND A DISCHARGE TO DIV SENDING ASIH
"RTN","ALPBINP",215,0)
 I $G(ALPTYP)[13!($G(ALPTYP)[40) D
"RTN","ALPBINP",216,0)
 .D INIT
"RTN","ALPBINP",217,0)
 .S ALPWRD=$P($G(DGPMVI(5)),U,1) ;LAST WARD
"RTN","ALPBINP",218,0)
 .I +ALPWRD'>0 S ALPRSLT="0^^Screen - No Ward" Q  ;NO WARD
"RTN","ALPBINP",219,0)
 .S ALPBDIV=$P($G(^DIC(42,ALPWRD,0)),U,11)
"RTN","ALPBINP",220,0)
 .D GET^ALPBPARM(.HLL,ALPBDIV)
"RTN","ALPBINP",221,0)
 .S HLA("HLS",1)=$$EN^VAFHLPID(ALPDFN,"2,7,8,19")
"RTN","ALPBINP",222,0)
 .S HLA("HLS",2)=$$EN^VAFHAPV1(ALPDFN,DT,"2,3,7,18")
"RTN","ALPBINP",223,0)
 .S $P(HLA("HLS",2),HLFS,37)="ASIH"
"RTN","ALPBINP",224,0)
 .D SEND
"RTN","ALPBINP",225,0)
 Q ALPRSLT
"RTN","ALPBINP",226,0)
 ;
"RTN","ALPBINP",227,0)
CDIV(ML) ; Return DIVISION associated with input CLINIC
"RTN","ALPBINP",228,0)
 Q:'$G(ML) ""
"RTN","ALPBINP",229,0)
 N MLDATA,CLINICE,CLINICI,DIVE,DIVI S MLDATA=$G(^PSB(53.79,+ML,0))
"RTN","ALPBINP",230,0)
 S CLINICE=$P(MLDATA,"^",2),CLINICI=$O(^SC("B",CLINICE,0))
"RTN","ALPBINP",231,0)
 I 'CLINICI Q "" I '$D(^SC(CLINICI,0)) Q ""
"RTN","ALPBINP",232,0)
 S DIVI=$P($G(^SC(CLINICI,0)),"^",15),DIVE=$P($G(^DG(40.8,+DIVI,0)),"^")
"RTN","ALPBINP",233,0)
 D GET^ALPBPARM(.HLL,DIVE)
"RTN","ALPBINP",234,0)
 Q $P(^SC(CLINICI,0),"^",15)
"RTN","ALPBINP",235,0)
 ;
"RTN","ALPBINP",236,0)
CDIVOR(DFN,ORDER) ; Return DIVISION associated with input ORDER
"RTN","ALPBINP",237,0)
 Q:'$G(ORDER) "" Q:'$G(DFN) ""
"RTN","ALPBINP",238,0)
 N CLINICI,DIVI,DIVE
"RTN","ALPBINP",239,0)
 S CLINICI=$S(ORDER["P":+$G(^PS(53.1,+ORDER,"DSS")),ORDER["U":+$G(^PS(55,DFN,5,+ORDER,8)),ORDER["V":+$G(^PS(55,DFN,"IV",+ORDER,"DSS")),1:"")
"RTN","ALPBINP",240,0)
 I 'CLINICI Q "" I '$D(^SC(CLINICI,0)) Q ""
"RTN","ALPBINP",241,0)
 S DIVI=$P($G(^SC(CLINICI,0)),"^",15),DIVE=$P($G(^DG(40.8,+DIVI,0)),"^")
"RTN","ALPBINP",242,0)
 D GET^ALPBPARM(.HLL,DIVE)
"RTN","ALPBINP",243,0)
 Q $P(^SC(CLINICI,0),"^",15)
"RTN","ALPBPALL")
0^5^B49924442
"RTN","ALPBPALL",1,0)
ALPBPALL ;OIFO-DALLAS MW,SED,KC-PRINT 3-DAY MAR BCMA BACLUP REPORT FOR ALL WARDS ;2/13/13 13:13pm
"RTN","ALPBPALL",2,0)
 ;;3.0;BAR CODE MED ADMIN;**8,29,48,59,73**;Mar 2004;Build 31
"RTN","ALPBPALL",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ALPBPALL",4,0)
 ;
"RTN","ALPBPALL",5,0)
 ; based on original code by FD@NJHCS, May 2002
"RTN","ALPBPALL",6,0)
 ; 
"RTN","ALPBPALL",7,0)
 ;*73 Add Clinic Order (CO) identification and clinic name print with 
"RTN","ALPBPALL",8,0)
 ;    CO's sorting after IM meds.
"RTN","ALPBPALL",9,0)
 ;
"RTN","ALPBPALL",10,0)
 W !,"Inpatient Pharmacy Orders for all wards"
"RTN","ALPBPALL",11,0)
 ;
"RTN","ALPBPALL",12,0)
 ; get all or just current orders?...
"RTN","ALPBPALL",13,0)
 S DIR(0)="SA^A:ALL;C:CURRENT"
"RTN","ALPBPALL",14,0)
 S DIR("A")="Report [A]LL or [C]URRENT orders? "
"RTN","ALPBPALL",15,0)
 S DIR("B")="CURRENT"
"RTN","ALPBPALL",16,0)
 S DIR("?")="[A]LL=all orders in the file, [C]URRENT=orders not yet expired."
"RTN","ALPBPALL",17,0)
 W ! D ^DIR K DIR
"RTN","ALPBPALL",18,0)
 I $D(DIRUT) K DIRUT,DTOUT,X,Y Q
"RTN","ALPBPALL",19,0)
 S ALPBOTYP=Y
"RTN","ALPBPALL",20,0)
 ;
"RTN","ALPBPALL",21,0)
 ;added in PSB*3*59 to benefit users located at the long term care and domiciliary sites
"RTN","ALPBPALL",22,0)
 ;include patients without active medications?...  
"RTN","ALPBPALL",23,0)
 I ALPBOTYP="A" S ALPBWOMED=""
"RTN","ALPBPALL",24,0)
 I ALPBOTYP="C" D
"RTN","ALPBPALL",25,0)
 .S DIR(0)="SA^Y:YES;N:NO"
"RTN","ALPBPALL",26,0)
 .S DIR("A")="Include Patients Without Active Medications? "
"RTN","ALPBPALL",27,0)
 .S DIR("B")="YES"
"RTN","ALPBPALL",28,0)
 .S DIR("?",1)="[Y]es=include patients without active medication orders,"
"RTN","ALPBPALL",29,0)
 .S DIR("?",2)="[N]o=do not include patients without active medication orders."
"RTN","ALPBPALL",30,0)
 .W ! D ^DIR K DIR
"RTN","ALPBPALL",31,0)
 .I $D(DIRUT) K ALPBOTYP,DIRUT,DTOUT,X,Y Q
"RTN","ALPBPALL",32,0)
 .S ALPBWOMED=Y
"RTN","ALPBPALL",33,0)
 ;
"RTN","ALPBPALL",34,0)
 ; print how many days MAR?...
"RTN","ALPBPALL",35,0)
 S DIR(0)="NA^1:7"
"RTN","ALPBPALL",36,0)
 S DIR("A")="Print how many days MAR? "
"RTN","ALPBPALL",37,0)
 S DIR("B")=$$DEFDAYS^ALPBUTL()
"RTN","ALPBPALL",38,0)
 S DIR("?")="The default is shown; please select a number 1 to 7."
"RTN","ALPBPALL",39,0)
 W ! D ^DIR K DIR
"RTN","ALPBPALL",40,0)
 I $D(DIRUT) K ALPBOTYP,DIRUT,DTOUT,X,Y Q
"RTN","ALPBPALL",41,0)
 S ALPBDAYS=+Y
"RTN","ALPBPALL",42,0)
 ;
"RTN","ALPBPALL",43,0)
 ; BCMA Med Log info for how many ?...
"RTN","ALPBPALL",44,0)
 S DIR(0)="NA^1:99"
"RTN","ALPBPALL",45,0)
 S DIR("B")=$$DEFML^ALPBUTL3()
"RTN","ALPBPALL",46,0)
 S DIR("A")="Select how many BCMA Medication Log history: "
"RTN","ALPBPALL",47,0)
 S DIR("A",1)=" "
"RTN","ALPBPALL",48,0)
 S DIR("?",1)="Select a number of BCMA Medication log entries"
"RTN","ALPBPALL",49,0)
 S DIR("?",2)="for each of the patient's orders"
"RTN","ALPBPALL",50,0)
 S DIR("?")="They are listed by the most current entry first"
"RTN","ALPBPALL",51,0)
 D ^DIR K DIR
"RTN","ALPBPALL",52,0)
 I $D(DIRUT) K ALPBOTYP,ALPBWARD,DIRUT,DTOUT,X,Y Q
"RTN","ALPBPALL",53,0)
 S ALPBMLOG=Y
"RTN","ALPBPALL",54,0)
 ;
"RTN","ALPBPALL",55,0)
 S %ZIS="Q"
"RTN","ALPBPALL",56,0)
 S %ZIS("B")=$$DEFPRT^ALPBUTL()
"RTN","ALPBPALL",57,0)
 I %ZIS("B")="" K %ZIS("B")
"RTN","ALPBPALL",58,0)
 W ! D ^%ZIS K %ZIS
"RTN","ALPBPALL",59,0)
 I POP K POP Q
"RTN","ALPBPALL",60,0)
 ;
"RTN","ALPBPALL",61,0)
 ; output not queued...
"RTN","ALPBPALL",62,0)
 I '$D(IO("Q")) D
"RTN","ALPBPALL",63,0)
 .U IO
"RTN","ALPBPALL",64,0)
 .D DQ
"RTN","ALPBPALL",65,0)
 .I IO'=IO(0) D ^%ZISC
"RTN","ALPBPALL",66,0)
 ;
"RTN","ALPBPALL",67,0)
 ; set up the task...
"RTN","ALPBPALL",68,0)
 I $D(IO("Q")) D
"RTN","ALPBPALL",69,0)
 .S ZTRTN="DQ^ALPBPALL"
"RTN","ALPBPALL",70,0)
 .S ZTDESC="PSB INPT PHARM ORDER FOR ALL WARDS"
"RTN","ALPBPALL",71,0)
 .S ZTIO=ION
"RTN","ALPBPALL",72,0)
 .S ZTSAVE("ALPBMLOG")=""
"RTN","ALPBPALL",73,0)
 .S ZTSAVE("ALPBOTYP")=""
"RTN","ALPBPALL",74,0)
 .S ZTSAVE("ALPBDAYS")=""
"RTN","ALPBPALL",75,0)
 .S ZTSAVE("ALPBWOMED")=""
"RTN","ALPBPALL",76,0)
 .D ^%ZTLOAD
"RTN","ALPBPALL",77,0)
 .D HOME^%ZIS
"RTN","ALPBPALL",78,0)
 .W !,$S($G(ZTSK):"Task number "_ZTSK_" queued.",1:"ERROR -- NOT QUEUED!")
"RTN","ALPBPALL",79,0)
 .K IO("Q"),ZTSK
"RTN","ALPBPALL",80,0)
 K ALPBDAYS,ALPBMLOG,ALPBOTYP,ALPBWOMED
"RTN","ALPBPALL",81,0)
 Q
"RTN","ALPBPALL",82,0)
 ;
"RTN","ALPBPALL",83,0)
DQ ; output entry point...
"RTN","ALPBPALL",84,0)
 K ^TMP($J)
"RTN","ALPBPALL",85,0)
 N ALPBCLIN,ALPBDAT0
"RTN","ALPBPALL",86,0)
 ;
"RTN","ALPBPALL",87,0)
 ; set report date...MOD 11/03/03 SED
"RTN","ALPBPALL",88,0)
 S ALPBRDAT=$S(ALPBOTYP="C":$$NOW^XLFDT(),1:"")
"RTN","ALPBPALL",89,0)
 ;
"RTN","ALPBPALL",90,0)
 ; loop through ward cross reference in 53.7...
"RTN","ALPBPALL",91,0)
 N ALPBDRGNAME
"RTN","ALPBPALL",92,0)
 S ALPBWARD=""
"RTN","ALPBPALL",93,0)
 F  S ALPBWARD=$O(^ALPB(53.7,"AW",ALPBWARD)) Q:ALPBWARD=""  D
"RTN","ALPBPALL",94,0)
 .S ALPBPTN=""
"RTN","ALPBPALL",95,0)
 .F  S ALPBPTN=$O(^ALPB(53.7,"AW",ALPBWARD,ALPBPTN)) Q:ALPBPTN=""  D
"RTN","ALPBPALL",96,0)
 ..S ALPBIEN=0
"RTN","ALPBPALL",97,0)
 ..F  S ALPBIEN=$O(^ALPB(53.7,"AW",ALPBWARD,ALPBPTN,ALPBIEN)) Q:'ALPBIEN  D
"RTN","ALPBPALL",98,0)
 ...D ORDS^ALPBUTL(ALPBIEN,ALPBRDAT,.ALPBORDS)
"RTN","ALPBPALL",99,0)
 ...I +ALPBORDS(0)'>0&(ALPBWOMED="Y") D  Q
"RTN","ALPBPALL",100,0)
 ....S ^TMP($J,ALPBWARD,ALPBPTN)=ALPBIEN
"RTN","ALPBPALL",101,0)
 ....K ALPBORDS
"RTN","ALPBPALL",102,0)
 ...S ALPBOIEN=0
"RTN","ALPBPALL",103,0)
 ...F  S ALPBOIEN=$O(ALPBORDS(ALPBOIEN)) Q:'ALPBOIEN  D
"RTN","ALPBPALL",104,0)
 ....S ALPBDAT0=$G(^ALPB(53.7,ALPBIEN,2,ALPBOIEN,0))
"RTN","ALPBPALL",105,0)
 ....S ALPBDATA=$G(^ALPB(53.7,ALPBIEN,2,ALPBOIEN,1))
"RTN","ALPBPALL",106,0)
 ....I ALPBOTYP="C"&($P(ALPBDATA,U,2)<ALPBRDAT) K ALPBDATA Q
"RTN","ALPBPALL",107,0)
 ....S ALPBOCT=$P($G(^ALPB(53.7,ALPBIEN,2,ALPBOIEN,3)),U,1)
"RTN","ALPBPALL",108,0)
 ....S:$P($G(^ALPB(53.7,ALPBIEN,2,ALPBOIEN,4)),U,3)["PRN" ALPBOCT=ALPBOCT_"P"
"RTN","ALPBPALL",109,0)
 ....S ALPBDRGNAME=$P($G(^ALPB(53.7,ALPBIEN,2,ALPBOIEN,7,1,0)),U,2)
"RTN","ALPBPALL",110,0)
 ....S ALPBCLIN=$P(ALPBDAT0,U,5) S:ALPBCLIN="" ALPBCLIN=0        ;*73
"RTN","ALPBPALL",111,0)
 ....S ALPBORDN=ALPBORDS(ALPBOIEN)
"RTN","ALPBPALL",112,0)
 ....S ALPBOST=$$STAT2^ALPBUTL1(ALPBORDS(ALPBOIEN,2))
"RTN","ALPBPALL",113,0)
 ....I '$D(^TMP($J,ALPBWARD,ALPBPTN)) S ^TMP($J,ALPBWARD,ALPBPTN)=ALPBIEN
"RTN","ALPBPALL",114,0)
 ....S ^TMP($J,ALPBWARD,ALPBPTN,ALPBCLIN,ALPBOCT,ALPBDRGNAME,ALPBOST,ALPBORDN)=ALPBOIEN
"RTN","ALPBPALL",115,0)
 ....K ALPBDATA,ALPBORDN,ALPBOST,ALPBOCT,ALPBDRGNAME
"RTN","ALPBPALL",116,0)
 ...K ALPBOIEN,ALPBORDS
"RTN","ALPBPALL",117,0)
 ..K ALPBIEN
"RTN","ALPBPALL",118,0)
 .K ALPBPTN
"RTN","ALPBPALL",119,0)
 K ALPBWARD
"RTN","ALPBPALL",120,0)
 ;
"RTN","ALPBPALL",121,0)
 ; process through our sorted list...
"RTN","ALPBPALL",122,0)
 S ALPBPG=0
"RTN","ALPBPALL",123,0)
 S ALPBWARD=""
"RTN","ALPBPALL",124,0)
 F  S ALPBWARD=$O(^TMP($J,ALPBWARD)) Q:ALPBWARD=""  D
"RTN","ALPBPALL",125,0)
 .S ALPBPTN=""
"RTN","ALPBPALL",126,0)
 .F  S ALPBPTN=$O(^TMP($J,ALPBWARD,ALPBPTN)) Q:ALPBPTN=""  D
"RTN","ALPBPALL",127,0)
 ..S ALPBIEN=+^TMP($J,ALPBWARD,ALPBPTN)
"RTN","ALPBPALL",128,0)
 ..S ALPBPDAT(0)=$G(^ALPB(53.7,ALPBIEN,0))
"RTN","ALPBPALL",129,0)
 ..M ALPBPDAT(1)=^ALPB(53.7,ALPBIEN,1)
"RTN","ALPBPALL",130,0)
 ..N ALPBNOMEDS2
"RTN","ALPBPALL",131,0)
 ..S ALPBNOMEDS2=""
"RTN","ALPBPALL",132,0)
 ..S:$D(^TMP($J,ALPBWARD,ALPBPTN))=1 ALPBNOMEDS2=1
"RTN","ALPBPALL",133,0)
 ..; paginate between patients...
"RTN","ALPBPALL",134,0)
 ..I ALPBPG=0 D PAGE
"RTN","ALPBPALL",135,0)
 ..S ALPBCLIN=""
"RTN","ALPBPALL",136,0)
 ..F  S ALPBCLIN=$O(^TMP($J,ALPBWARD,ALPBPTN,ALPBCLIN)) Q:ALPBCLIN=""  D
"RTN","ALPBPALL",137,0)
 ...S ALPBOCT=""
"RTN","ALPBPALL",138,0)
 ...F  S ALPBOCT=$O(^TMP($J,ALPBWARD,ALPBPTN,ALPBCLIN,ALPBOCT)) Q:ALPBOCT=""  D
"RTN","ALPBPALL",139,0)
 ....S ALPBDRGNAME=""
"RTN","ALPBPALL",140,0)
 ....F  S ALPBDRGNAME=$O(^TMP($J,ALPBWARD,ALPBPTN,ALPBCLIN,ALPBOCT,ALPBDRGNAME)) Q:ALPBDRGNAME=""  D
"RTN","ALPBPALL",141,0)
 .....S ALPBOST=""
"RTN","ALPBPALL",142,0)
 .....F  S ALPBOST=$O(^TMP($J,ALPBWARD,ALPBPTN,ALPBCLIN,ALPBOCT,ALPBDRGNAME,ALPBOST)) Q:ALPBOST=""  D
"RTN","ALPBPALL",143,0)
 ......S ALPBORDN=""
"RTN","ALPBPALL",144,0)
 ......F  S ALPBORDN=$O(^TMP($J,ALPBWARD,ALPBPTN,ALPBCLIN,ALPBOCT,ALPBDRGNAME,ALPBOST,ALPBORDN)) Q:ALPBORDN=""  D
"RTN","ALPBPALL",145,0)
 .......S ALPBOIEN=^TMP($J,ALPBWARD,ALPBPTN,ALPBCLIN,ALPBOCT,ALPBDRGNAME,ALPBOST,ALPBORDN)
"RTN","ALPBPALL",146,0)
 .......; get and print this order's data...
"RTN","ALPBPALL",147,0)
 .......M ALPBDATA=^ALPB(53.7,ALPBIEN,2,ALPBOIEN)
"RTN","ALPBPALL",148,0)
 .......D F132^ALPBFRM1(.ALPBDATA,ALPBDAYS,ALPBMLOG,.ALPBFORM,ALPBIEN)
"RTN","ALPBPALL",149,0)
 .......I $Y+ALPBFORM(0)>IOSL D PAGE
"RTN","ALPBPALL",150,0)
 .......S ALPBX=0
"RTN","ALPBPALL",151,0)
 .......F  S ALPBX=$O(ALPBFORM(ALPBX)) Q:'ALPBX  W !,ALPBFORM(ALPBX)
"RTN","ALPBPALL",152,0)
 .......K ALPBDATA,ALPBFORM,ALPBOIEN,ALPBX
"RTN","ALPBPALL",153,0)
 ......K ALPBORDN
"RTN","ALPBPALL",154,0)
 .....K ALPBOST
"RTN","ALPBPALL",155,0)
 ....K ALPBDRGNAME
"RTN","ALPBPALL",156,0)
 ..K ALPBIEN,ALPBPDAT,ALPBOCT
"RTN","ALPBPALL",157,0)
 ..S ALPBPG=0
"RTN","ALPBPALL",158,0)
 ..;notification message displays one line below header info if patient has no med orders when the report is generated
"RTN","ALPBPALL",159,0)
 ..I ALPBNOMEDS2 D
"RTN","ALPBPALL",160,0)
 ...W !!,"No Active Medication Orders were reported to the Contingency at the time the MAR was printed ",!!!
"RTN","ALPBPALL",161,0)
 ...;additional blank lines added to separate footer from header and allow room for notes
"RTN","ALPBPALL",162,0)
 ...I $E(IOST)="P" F  Q:$Y>=(IOSL-6)  W !
"RTN","ALPBPALL",163,0)
 ..; print footer at end of this patient's record...
"RTN","ALPBPALL",164,0)
 ..D FOOT^ALPBFRMU
"RTN","ALPBPALL",165,0)
 ..;Print a blank page between patient (this was removed by PSB*3*59 - the BCMA Workgroup agreed to condense the report)
"RTN","ALPBPALL",166,0)
 ..;W @IOF
"RTN","ALPBPALL",167,0)
 .K ALPBPTN
"RTN","ALPBPALL",168,0)
 ;
"RTN","ALPBPALL",169,0)
 K ALPBDAYS,ALPBMLOG,ALPBOTYP,ALPBPG,ALPBRDAT,ALPBWARD,^TMP($J),ALPBNOMEDS2
"RTN","ALPBPALL",170,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ALPBPALL",171,0)
 Q
"RTN","ALPBPALL",172,0)
 ;
"RTN","ALPBPALL",173,0)
PAGE ; paginate and print header for a patient...
"RTN","ALPBPALL",174,0)
 W @IOF
"RTN","ALPBPALL",175,0)
 ; increment page count...
"RTN","ALPBPALL",176,0)
 S ALPBPG=ALPBPG+1
"RTN","ALPBPALL",177,0)
 D HDR^ALPBFRMU(.ALPBPDAT,ALPBPG,.ALPBHDR)
"RTN","ALPBPALL",178,0)
 S ALPBX=0
"RTN","ALPBPALL",179,0)
 F  S ALPBX=$O(ALPBHDR(ALPBX)) Q:'ALPBX  W !,ALPBHDR(ALPBX)
"RTN","ALPBPALL",180,0)
 K ALPBHDR,ALPBX
"RTN","ALPBPALL",181,0)
 Q
"RTN","ALPBPCLN")
0^7^B73767305
"RTN","ALPBPCLN",1,0)
ALPBPCLN ;OIFO-DALLAS MW,SED,KC-PRINT 3-7 DAY MAR BCMA BCBU REPORT FOR CLINICS ;3/9/13 9:13am
"RTN","ALPBPCLN",2,0)
 ;;3.0;BAR CODE MED ADMIN;**73**;Mar 2004;Build 31
"RTN","ALPBPCLN",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ALPBPCLN",4,0)
 ; 
"RTN","ALPBPCLN",5,0)
 ; NOTE: this routine is designed for hard-copy output.
"RTN","ALPBPCLN",6,0)
 ;      Output is formatted for 132-column printing.
"RTN","ALPBPCLN",7,0)
 ; 
"RTN","ALPBPCLN",8,0)
EN(RPT) ;Entry point to print either All clinics or a selected clinics
"RTN","ALPBPCLN",9,0)
 N ALPBCL
"RTN","ALPBPCLN",10,0)
 S RPT=$G(RPT,"ALL")   ;assume All cllinics if RPT is not defined
"RTN","ALPBPCLN",11,0)
 ;
"RTN","ALPBPCLN",12,0)
 ;selected Clinic report tag
"RTN","ALPBPCLN",13,0)
 F  D  Q:$D(DIRUT)
"RTN","ALPBPCLN",14,0)
 .D:RPT="CLN"
"RTN","ALPBPCLN",15,0)
 ..W !,"Inpatient Pharmacy Orders for a selected Clinic"
"RTN","ALPBPCLN",16,0)
 ..S DIR(0)="FAO^2:30"
"RTN","ALPBPCLN",17,0)
 ..S DIR("A")="Select CLINIC: "
"RTN","ALPBPCLN",18,0)
 ..S DIR("?")="^D CLINLIST^ALPBUTL(""C"")"
"RTN","ALPBPCLN",19,0)
 ..D ^DIR K DIR
"RTN","ALPBPCLN",20,0)
 ..I $D(DIRUT) Q
"RTN","ALPBPCLN",21,0)
 ..D CLINSEL^ALPBUTL(Y,.ALPBSEL)
"RTN","ALPBPCLN",22,0)
 ..I +$G(ALPBSEL(0))=0 D  Q
"RTN","ALPBPCLN",23,0)
 ...W $C(7)
"RTN","ALPBPCLN",24,0)
 ...W "  ??"
"RTN","ALPBPCLN",25,0)
 ...D CLINLIST^ALPBUTL("C")
"RTN","ALPBPCLN",26,0)
 ...K ALPBSEL
"RTN","ALPBPCLN",27,0)
 ..I +$G(ALPBSEL(0))=1 D
"RTN","ALPBPCLN",28,0)
 ...S ALPBCL=ALPBSEL(1)
"RTN","ALPBPCLN",29,0)
 ...W "   ",ALPBCL
"RTN","ALPBPCLN",30,0)
 ...K ALPBSEL
"RTN","ALPBPCLN",31,0)
 ..I +$G(ALPBSEL(0))>1 D  I $D(DIRUT) K DIRUT,DTOUT,X,Y Q
"RTN","ALPBPCLN",32,0)
 ...S ALPBX=0
"RTN","ALPBPCLN",33,0)
 ...F  S ALPBX=$O(ALPBSEL(ALPBX)) Q:'ALPBX  W !?2,$J(ALPBX,2),"  ",ALPBSEL(ALPBX)
"RTN","ALPBPCLN",34,0)
 ...K ALPBX
"RTN","ALPBPCLN",35,0)
 ...S DIR(0)="NA^1:"_ALPBSEL(0)
"RTN","ALPBPCLN",36,0)
 ...S DIR("A")="Select Clinic from the list (1-"_ALPBSEL(0)_"): "
"RTN","ALPBPCLN",37,0)
 ...W ! D ^DIR K DIR
"RTN","ALPBPCLN",38,0)
 ...I $D(DIRUT) K ALPBSEL Q
"RTN","ALPBPCLN",39,0)
 ...S ALPBCL=ALPBSEL(+Y)
"RTN","ALPBPCLN",40,0)
 ...W "   ",ALPBCL
"RTN","ALPBPCLN",41,0)
 ...K ALPBSEL
"RTN","ALPBPCLN",42,0)
 .Q:$D(DIRUT)!($D(DUOUT))
"RTN","ALPBPCLN",43,0)
 .I ($G(RPT)="CLN")&($G(ALPBCL)="") D  Q
"RTN","ALPBPCLN",44,0)
 ..W !,"No Clinic Selected"
"RTN","ALPBPCLN",45,0)
 .;
"RTN","ALPBPCLN",46,0)
 .; Get All or Current Orders?
"RTN","ALPBPCLN",47,0)
 .S DIR(0)="SA^A:ALL;C:CURRENT"
"RTN","ALPBPCLN",48,0)
 .S DIR("A")="Report [A]LL or [C]URRENT orders? "
"RTN","ALPBPCLN",49,0)
 .S DIR("B")="CURRENT"
"RTN","ALPBPCLN",50,0)
 .S DIR("?")="[A]LL=all orders in the file, [C]URRENT=orders not yet expired."
"RTN","ALPBPCLN",51,0)
 .W ! D ^DIR K DIR
"RTN","ALPBPCLN",52,0)
 .I $D(DIRUT) K:RPT="CLN" ALPBCL,DIRUT,DTOUT,X,Y Q
"RTN","ALPBPCLN",53,0)
 .S ALPBOTYP=Y
"RTN","ALPBPCLN",54,0)
 .;
"RTN","ALPBPCLN",55,0)
 .; Include a Patient's Inpatient Medications on this Clinic Report
"RTN","ALPBPCLN",56,0)
 .S ALPBINCLI=""
"RTN","ALPBPCLN",57,0)
 .S DIR(0)="SA^Y:YES;N:NO"
"RTN","ALPBPCLN",58,0)
 .S DIR("A")="Include a Patient's Inpatient Medications on the Clinic report? "
"RTN","ALPBPCLN",59,0)
 .S DIR("B")="YES"
"RTN","ALPBPCLN",60,0)
 .S DIR("?",1)=" [Y]es = include any Inpatient medications found for this patient on the"
"RTN","ALPBPCLN",61,0)
 .S DIR("?",2)="         Clinic report."
"RTN","ALPBPCLN",62,0)
 .S DIR("?",3)=" [N]o =  do not include Inpatient medications for this patient on the"
"RTN","ALPBPCLN",63,0)
 .S DIR("?")="         Clinic report."
"RTN","ALPBPCLN",64,0)
 .W ! D ^DIR K DIR
"RTN","ALPBPCLN",65,0)
 .I $D(DIRUT) K ALPBOTYP,DIRUT,DTOUT,DUOUT,X,Y Q
"RTN","ALPBPCLN",66,0)
 .S ALPBINCLI=Y
"RTN","ALPBPCLN",67,0)
 .;
"RTN","ALPBPCLN",68,0)
 .; Print How Many Days MAR?...
"RTN","ALPBPCLN",69,0)
 .S DIR(0)="NA^1:7"
"RTN","ALPBPCLN",70,0)
 .S DIR("A")="Print how many days MAR? "
"RTN","ALPBPCLN",71,0)
 .S DIR("B")=$$DEFDAYS^ALPBUTL()
"RTN","ALPBPCLN",72,0)
 .S DIR("?")="The default is shown; please select a number 1 to 7."
"RTN","ALPBPCLN",73,0)
 .W ! D ^DIR K DIR
"RTN","ALPBPCLN",74,0)
 .I $D(DIRUT) K ALPBOTYP,DIRUT,DTOUT,X,Y Q
"RTN","ALPBPCLN",75,0)
 .S ALPBDAYS=+Y
"RTN","ALPBPCLN",76,0)
 .;
"RTN","ALPBPCLN",77,0)
 .; BCMA Med Log Info for How Many Entries?
"RTN","ALPBPCLN",78,0)
 .S DIR(0)="NA^1:99"
"RTN","ALPBPCLN",79,0)
 .S DIR("B")=$$DEFML^ALPBUTL3()
"RTN","ALPBPCLN",80,0)
 .S DIR("A")="Select how many BCMA Medication Log history: "
"RTN","ALPBPCLN",81,0)
 .S DIR("A",1)=" "
"RTN","ALPBPCLN",82,0)
 .S DIR("?",1)="Select a number of BCMA Medication log entries"
"RTN","ALPBPCLN",83,0)
 .S DIR("?",2)="for each of the patient's orders"
"RTN","ALPBPCLN",84,0)
 .S DIR("?")="They are listed by the most current entry first"
"RTN","ALPBPCLN",85,0)
 .D ^DIR K DIR
"RTN","ALPBPCLN",86,0)
 .I $D(DIRUT) K ALPBOTYP,ALPBCL,DIRUT,DTOUT,X,Y Q
"RTN","ALPBPCLN",87,0)
 .S ALPBMLOG=Y
"RTN","ALPBPCLN",88,0)
 .;
"RTN","ALPBPCLN",89,0)
 .S %ZIS="Q"
"RTN","ALPBPCLN",90,0)
 .S %ZIS("B")=$$DEFPRT^ALPBUTL()
"RTN","ALPBPCLN",91,0)
 .I %ZIS("B")="" K %ZIS("B")
"RTN","ALPBPCLN",92,0)
 .W ! D ^%ZIS K %ZIS
"RTN","ALPBPCLN",93,0)
 .I POP D  Q
"RTN","ALPBPCLN",94,0)
 ..W $C(7)
"RTN","ALPBPCLN",95,0)
 ..K ALPBMLOG,ALPBOTYP,ALPBCL,ALPBINCLI,POP
"RTN","ALPBPCLN",96,0)
 .;
"RTN","ALPBPCLN",97,0)
 .; output not queued...
"RTN","ALPBPCLN",98,0)
 .I '$D(IO("Q")) D
"RTN","ALPBPCLN",99,0)
 ..W ! W:RPT="ALL" "ALL CLINICS REPORT" W:RPT="CLN" "SELECTED CLINIC REPORT FOR "_$G(ALPBCL) W " IS RUNNING...",! H 1
"RTN","ALPBPCLN",100,0)
 ..U IO
"RTN","ALPBPCLN",101,0)
 ..D DQ(RPT)
"RTN","ALPBPCLN",102,0)
 ..I IO'=IO(0) D ^%ZISC
"RTN","ALPBPCLN",103,0)
 .;
"RTN","ALPBPCLN",104,0)
 .; Set up the Task
"RTN","ALPBPCLN",105,0)
 .I $D(IO("Q")) D
"RTN","ALPBPCLN",106,0)
 ..S ZTRTN="DQ^ALPBPCLN(RPT)"
"RTN","ALPBPCLN",107,0)
 ..S ZTDESC="PSB INPT PHARM ORDERS FOR CLIN "_$S(($G(ALPBCL)'=""):ALPBCL,1:"ALL CLINICS")
"RTN","ALPBPCLN",108,0)
 ..S ZTSAVE("ALPBDAYS")=""
"RTN","ALPBPCLN",109,0)
 ..S ZTSAVE("ALPBCL")=""
"RTN","ALPBPCLN",110,0)
 ..S ZTSAVE("ALPBMLOG")=""
"RTN","ALPBPCLN",111,0)
 ..S ZTSAVE("ALPBOTYP")=""
"RTN","ALPBPCLN",112,0)
 ..S ZTSAVE("ALPBINCLI")=""
"RTN","ALPBPCLN",113,0)
 ..S ZTSAVE("RPT")=""
"RTN","ALPBPCLN",114,0)
 ..S ZTIO=ION
"RTN","ALPBPCLN",115,0)
 ..D ^%ZTLOAD
"RTN","ALPBPCLN",116,0)
 ..D HOME^%ZIS
"RTN","ALPBPCLN",117,0)
 ..W !,$S($G(ZTSK):"Task number "_ZTSK_" queued.",1:"ERROR -- NOT QUEUED!")
"RTN","ALPBPCLN",118,0)
 ..K IO("Q"),ZTSK
"RTN","ALPBPCLN",119,0)
 .K ALPBDAYS,ALPBMLOG,ALPBOTYP,ALPBCL,ALPBINCLI
"RTN","ALPBPCLN",120,0)
 .I RPT="ALL" S DIRUT=1
"RTN","ALPBPCLN",121,0)
 K DIRUT,DTOUT,X,Y
"RTN","ALPBPCLN",122,0)
 Q
"RTN","ALPBPCLN",123,0)
 ;
"RTN","ALPBPCLN",124,0)
DQ(RPT) ; output entry point...
"RTN","ALPBPCLN",125,0)
 ; set report date...  SED 11/4/03
"RTN","ALPBPCLN",126,0)
 N ALPBRDAT S ALPBRDAT=$S(ALPBOTYP="C":$$NOW^XLFDT(),1:"")
"RTN","ALPBPCLN",127,0)
 K ^TMP($J),^TMP("PSBCL",$J)
"RTN","ALPBPCLN",128,0)
 D @RPT                           ;Do Tag CLN or ALL
"RTN","ALPBPCLN",129,0)
 D DONE
"RTN","ALPBPCLN",130,0)
 Q
"RTN","ALPBPCLN",131,0)
 ;
"RTN","ALPBPCLN",132,0)
ALL ;All Clinic report
"RTN","ALPBPCLN",133,0)
 N ALPBPG,ALPBIEN,PATNAM
"RTN","ALPBPCLN",134,0)
 ;loop thru Clinics xref for ALL clinics & build ^TMP, sorted by
"RTN","ALPBPCLN",135,0)
 ; Clinic, by patn name, by patn ien
"RTN","ALPBPCLN",136,0)
 S ALPBCL=""
"RTN","ALPBPCLN",137,0)
 F  S ALPBCL=$O(^ALPB(53.7,"AC",ALPBCL)) Q:ALPBCL=""  D
"RTN","ALPBPCLN",138,0)
 .S ALPBIEN=0
"RTN","ALPBPCLN",139,0)
 .F  S ALPBIEN=$O(^ALPB(53.7,"AC",ALPBCL,ALPBIEN)) Q:'ALPBIEN  D
"RTN","ALPBPCLN",140,0)
 ..S PATNAM=$P(^ALPB(53.7,ALPBIEN,0),U)
"RTN","ALPBPCLN",141,0)
 ..S ^TMP("PSBCL",$J,ALPBCL,PATNAM,ALPBIEN)=""
"RTN","ALPBPCLN",142,0)
 S ALPBCL=""
"RTN","ALPBPCLN",143,0)
 F  S ALPBCL=$O(^TMP("PSBCL",$J,ALPBCL)) Q:ALPBCL=""  D
"RTN","ALPBPCLN",144,0)
 .D GETORDS
"RTN","ALPBPCLN",145,0)
 S ALPBPG=0
"RTN","ALPBPCLN",146,0)
 D PRT
"RTN","ALPBPCLN",147,0)
 Q
"RTN","ALPBPCLN",148,0)
 ;
"RTN","ALPBPCLN",149,0)
CLN ;Selected Clinic report
"RTN","ALPBPCLN",150,0)
 N ALPBPG,ALPBIEN,PATNAM
"RTN","ALPBPCLN",151,0)
 ;loop thru Clinics xref & build a TMP global for each clinic on file
"RTN","ALPBPCLN",152,0)
 ;   by clinic name, by patn name, by patn ien
"RTN","ALPBPCLN",153,0)
 S ALPBIEN=0
"RTN","ALPBPCLN",154,0)
 F  S ALPBIEN=$O(^ALPB(53.7,"AC",ALPBCL,ALPBIEN)) Q:'ALPBIEN  D
"RTN","ALPBPCLN",155,0)
 .S PATNAM=$P(^ALPB(53.7,ALPBIEN,0),U)
"RTN","ALPBPCLN",156,0)
 .S ^TMP("PSBCL",$J,ALPBCL,PATNAM,ALPBIEN)=""
"RTN","ALPBPCLN",157,0)
 D GETORDS
"RTN","ALPBPCLN",158,0)
 S ALPBPG=0
"RTN","ALPBPCLN",159,0)
 D PRT
"RTN","ALPBPCLN",160,0)
 Q
"RTN","ALPBPCLN",161,0)
 ;
"RTN","ALPBPCLN",162,0)
GETORDS ;Get orders per clinic
"RTN","ALPBPCLN",163,0)
 N ALPBPTN,ALPBIEN,ALPBOIEN,ALPBCLIN,ALPBOCT,ALPBDRGNAME,ALPBOST
"RTN","ALPBPCLN",164,0)
 N ALPBORDS,ALPBDATA,ALPBDAT0
"RTN","ALPBPCLN",165,0)
 S ALPBPTN=""
"RTN","ALPBPCLN",166,0)
 F  S ALPBPTN=$O(^TMP("PSBCL",$J,ALPBCL,ALPBPTN)) Q:ALPBPTN=""  D
"RTN","ALPBPCLN",167,0)
 .S ALPBIEN=0 K ALPBORDS
"RTN","ALPBPCLN",168,0)
 .F  S ALPBIEN=$O(^TMP("PSBCL",$J,ALPBCL,ALPBPTN,ALPBIEN)) Q:'ALPBIEN  D
"RTN","ALPBPCLN",169,0)
 ..D ORDS^ALPBUTL(ALPBIEN,ALPBRDAT,.ALPBORDS,ALPBCL,ALPBINCLI)
"RTN","ALPBPCLN",170,0)
 ..I $G(ALPBPDAT(0))="" S ALPBPDAT(0)=$G(^ALPB(53.7,ALPBIEN,0))
"RTN","ALPBPCLN",171,0)
 ..S ALPBOIEN=0
"RTN","ALPBPCLN",172,0)
 ..F  S ALPBOIEN=$O(ALPBORDS(ALPBOIEN)) Q:'ALPBOIEN  D
"RTN","ALPBPCLN",173,0)
 ...S ALPBDATA=$G(^ALPB(53.7,ALPBIEN,2,ALPBOIEN,1))
"RTN","ALPBPCLN",174,0)
 ...S ALPBDAT0=$G(^ALPB(53.7,ALPBIEN,2,ALPBOIEN,0))
"RTN","ALPBPCLN",175,0)
 ...S ALPBCLIN=$P(ALPBDAT0,U,5) S:ALPBCLIN="" ALPBCLIN=0
"RTN","ALPBPCLN",176,0)
 ...S ALPBOCT=$P($G(^ALPB(53.7,ALPBIEN,2,ALPBOIEN,3)),U,1)
"RTN","ALPBPCLN",177,0)
 ...S:$P($G(^ALPB(53.7,ALPBIEN,2,ALPBOIEN,4)),U,3)["PRN" ALPBOCT=ALPBOCT_"P"
"RTN","ALPBPCLN",178,0)
 ...;drug name being used for alpha-sorting medications within order types (unit dose, unit dose-PRN, intravenous, intravenous-PRN)
"RTN","ALPBPCLN",179,0)
 ...S ALPBDRGNAME=$P($G(^ALPB(53.7,ALPBIEN,2,ALPBOIEN,7,1,0)),U,2)
"RTN","ALPBPCLN",180,0)
 ...S:ALPBDRGNAME="" ALPBDRGNAME="NOT FOUND"
"RTN","ALPBPCLN",181,0)
 ...; if report is for "C"urrent, check stop date and quit if
"RTN","ALPBPCLN",182,0)
 ...; stop date is less than report date
"RTN","ALPBPCLN",183,0)
 ...I ALPBOTYP="C"&($P(ALPBDATA,U,2)<ALPBRDAT) K ALPBDATA Q
"RTN","ALPBPCLN",184,0)
 ...S ALPBORDN=ALPBORDS(ALPBOIEN)
"RTN","ALPBPCLN",185,0)
 ...S ALPBOST=$$STAT2^ALPBUTL1(ALPBORDS(ALPBOIEN,2))
"RTN","ALPBPCLN",186,0)
 ...S ^TMP($J,ALPBPTN)=ALPBIEN
"RTN","ALPBPCLN",187,0)
 ...S ^TMP($J,ALPBPTN,ALPBCLIN,ALPBOCT,ALPBDRGNAME,ALPBOST,ALPBORDN)=ALPBOIEN
"RTN","ALPBPCLN",188,0)
 Q
"RTN","ALPBPCLN",189,0)
 ;
"RTN","ALPBPCLN",190,0)
PRT ;
"RTN","ALPBPCLN",191,0)
 N ALPBPTN,ALPBCLIN,ALPBOCT,ALPBDRGNAME,ALPBOST
"RTN","ALPBPCLN",192,0)
 S ALPBPTN=""
"RTN","ALPBPCLN",193,0)
 F  S ALPBPTN=$O(^TMP($J,ALPBPTN)) Q:ALPBPTN=""  D
"RTN","ALPBPCLN",194,0)
 .S ALPBIEN=^TMP($J,ALPBPTN)
"RTN","ALPBPCLN",195,0)
 .S ALPBPDAT(0)=$G(^ALPB(53.7,ALPBIEN,0))
"RTN","ALPBPCLN",196,0)
 .K ALPBPDAT(1) M ALPBPDAT(1)=^ALPB(53.7,ALPBIEN,1)
"RTN","ALPBPCLN",197,0)
 .I ALPBPG=0 D PAGE
"RTN","ALPBPCLN",198,0)
 .S ALPBCLIN=""
"RTN","ALPBPCLN",199,0)
 .F  S ALPBCLIN=$O(^TMP($J,ALPBPTN,ALPBCLIN)) Q:ALPBCLIN=""  D
"RTN","ALPBPCLN",200,0)
 ..S ALPBOCT=""
"RTN","ALPBPCLN",201,0)
 ..F  S ALPBOCT=$O(^TMP($J,ALPBPTN,ALPBCLIN,ALPBOCT)) Q:ALPBOCT=""  D
"RTN","ALPBPCLN",202,0)
 ...S ALPBDRGNAME=""
"RTN","ALPBPCLN",203,0)
 ...F  S ALPBDRGNAME=$O(^TMP($J,ALPBPTN,ALPBCLIN,ALPBOCT,ALPBDRGNAME)) Q:ALPBDRGNAME=""  D
"RTN","ALPBPCLN",204,0)
 ....S ALPBOST=""
"RTN","ALPBPCLN",205,0)
 ....F  S ALPBOST=$O(^TMP($J,ALPBPTN,ALPBCLIN,ALPBOCT,ALPBDRGNAME,ALPBOST)) Q:ALPBOST=""  D
"RTN","ALPBPCLN",206,0)
 .....S ALPBORDN=""
"RTN","ALPBPCLN",207,0)
 .....F  S ALPBORDN=$O(^TMP($J,ALPBPTN,ALPBCLIN,ALPBOCT,ALPBDRGNAME,ALPBOST,ALPBORDN)) Q:ALPBORDN=""  D
"RTN","ALPBPCLN",208,0)
 ......S ALPBOIEN=^TMP($J,ALPBPTN,ALPBCLIN,ALPBOCT,ALPBDRGNAME,ALPBOST,ALPBORDN)
"RTN","ALPBPCLN",209,0)
 ......; get and print this order's data...
"RTN","ALPBPCLN",210,0)
 ......M ALPBDATA=^ALPB(53.7,ALPBIEN,2,ALPBOIEN)
"RTN","ALPBPCLN",211,0)
 ......D F132^ALPBFRM1(.ALPBDATA,ALPBDAYS,ALPBMLOG,.ALPBFORM,ALPBIEN)
"RTN","ALPBPCLN",212,0)
 ......I $Y+ALPBFORM(0)=IOSL!($Y+ALPBFORM(0)>IOSL) D PAGE
"RTN","ALPBPCLN",213,0)
 ......F ALPBX=1:1:ALPBFORM(0) W !,ALPBFORM(ALPBX)
"RTN","ALPBPCLN",214,0)
 ......K ALPBDATA,ALPBFORM,ALPBOIEN,ALPBX
"RTN","ALPBPCLN",215,0)
 .; print footer at end of this patient's record...
"RTN","ALPBPCLN",216,0)
 .I $Y+10>IOSL D PAGE
"RTN","ALPBPCLN",217,0)
 .;
"RTN","ALPBPCLN",218,0)
 .;additional blank lines added to separate footer from header and
"RTN","ALPBPCLN",219,0)
 .;allow room for notes
"RTN","ALPBPCLN",220,0)
 .I $E(IOST)="P" F  Q:$Y>=(IOSL-6)  W !
"RTN","ALPBPCLN",221,0)
 .;
"RTN","ALPBPCLN",222,0)
 .D FOOT^ALPBFRMU
"RTN","ALPBPCLN",223,0)
 .S ALPBPG=0
"RTN","ALPBPCLN",224,0)
 .K ALPBDAT
"RTN","ALPBPCLN",225,0)
 Q
"RTN","ALPBPCLN",226,0)
 ;
"RTN","ALPBPCLN",227,0)
DONE ;   
"RTN","ALPBPCLN",228,0)
 K ALPBDAYS,ALPBMLOG,ALPBOTYP,ALPBCL,ALPRM,ALPRM1,ALPBD,^TMP($J),^TMP("PSBCL",$J)
"RTN","ALPBPCLN",229,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ALPBPCLN",230,0)
 Q
"RTN","ALPBPCLN",231,0)
 ;
"RTN","ALPBPCLN",232,0)
PAGE ; print page header for patient...
"RTN","ALPBPCLN",233,0)
 W @IOF
"RTN","ALPBPCLN",234,0)
 S ALPBPG=ALPBPG+1
"RTN","ALPBPCLN",235,0)
 D HDR^ALPBFRMU(.ALPBPDAT,ALPBPG,.ALPBHDR)
"RTN","ALPBPCLN",236,0)
 F ALPBX=1:1:ALPBHDR(0) W !,ALPBHDR(ALPBX)
"RTN","ALPBPCLN",237,0)
 K ALPBHDR,ALPBX
"RTN","ALPBPCLN",238,0)
 Q
"RTN","ALPBPPAT")
0^2^B36616367
"RTN","ALPBPPAT",1,0)
ALPBPPAT ;OIFO-DALLAS MW,SED,KC-PRINT 3-DAY MAR BCBU BACKUP REPORT FOR A SELECTED PATIENT ;2/13/13 13:13pm
"RTN","ALPBPPAT",2,0)
 ;;3.0;BAR CODE MED ADMIN;**8,48,59,73**;Mar 2004;Build 31
"RTN","ALPBPPAT",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ALPBPPAT",4,0)
 ; 
"RTN","ALPBPPAT",5,0)
 ; NOTE: this routine is designed for hard-copy output. 
"RTN","ALPBPPAT",6,0)
 ;  Output is formatted for 132-column printing.
"RTN","ALPBPPAT",7,0)
 ;
"RTN","ALPBPPAT",8,0)
 ;*73 Add Clinic Order (CO) identification and clinic name print with 
"RTN","ALPBPPAT",9,0)
 ;    CO's sorting after IM meds.
"RTN","ALPBPPAT",10,0)
 ;
"RTN","ALPBPPAT",11,0)
 F  D  Q:$D(DIRUT)
"RTN","ALPBPPAT",12,0)
 .W !!,"Inpatient Pharmacy Orders for a selected patient"
"RTN","ALPBPPAT",13,0)
 .S DIR(0)="PAO^53.7:QEMZ"
"RTN","ALPBPPAT",14,0)
 .S DIR("A")="Select PATIENT NAME: "
"RTN","ALPBPPAT",15,0)
 .D ^DIR K DIR
"RTN","ALPBPPAT",16,0)
 .I $D(DIRUT) K X,Y Q
"RTN","ALPBPPAT",17,0)
 .S ALPBIEN=+Y
"RTN","ALPBPPAT",18,0)
 .S ALPBPTN=Y(0,0)
"RTN","ALPBPPAT",19,0)
 .; get all or just current orders?...
"RTN","ALPBPPAT",20,0)
 .S DIR(0)="SA^A:ALL;C:CURRENT"
"RTN","ALPBPPAT",21,0)
 .S DIR("A")="Report [A]LL or [C]URRENT orders? "
"RTN","ALPBPPAT",22,0)
 .S DIR("B")="CURRENT"
"RTN","ALPBPPAT",23,0)
 .S DIR("?")="[A]LL=all orders in the file, [C]URRENT=orders not yet expired."
"RTN","ALPBPPAT",24,0)
 .W ! D ^DIR K DIR
"RTN","ALPBPPAT",25,0)
 .I $D(DIRUT) K DIRUT,DTOUT,X,Y Q
"RTN","ALPBPPAT",26,0)
 .S ALPBOTYP=Y
"RTN","ALPBPPAT",27,0)
 .;
"RTN","ALPBPPAT",28,0)
 .; print how many days MAR?...
"RTN","ALPBPPAT",29,0)
 .S DIR(0)="NA^1:7"
"RTN","ALPBPPAT",30,0)
 .S DIR("A")="Print how many days MAR? "
"RTN","ALPBPPAT",31,0)
 .S DIR("B")=$$DEFDAYS^ALPBUTL()
"RTN","ALPBPPAT",32,0)
 .S DIR("?")="The default is shown; please select a number 1 to 7."
"RTN","ALPBPPAT",33,0)
 .W ! D ^DIR K DIR
"RTN","ALPBPPAT",34,0)
 .I $D(DIRUT) K ALPBOTYP,DIRUT,DTOUT,X,Y Q
"RTN","ALPBPPAT",35,0)
 .S ALPBDAYS=+Y
"RTN","ALPBPPAT",36,0)
 .;
"RTN","ALPBPPAT",37,0)
 .; BCMA Med Log info for how many ?...
"RTN","ALPBPPAT",38,0)
 .S DIR(0)="NA^1:99"
"RTN","ALPBPPAT",39,0)
 .S DIR("B")=$$DEFML^ALPBUTL3()
"RTN","ALPBPPAT",40,0)
 .S DIR("A")="Select how many BCMA Medication Log history: "
"RTN","ALPBPPAT",41,0)
 .S DIR("A",1)=" "
"RTN","ALPBPPAT",42,0)
 .S DIR("?",1)="Select a number of BCMA Medication log entries"
"RTN","ALPBPPAT",43,0)
 .S DIR("?",2)="for each of the patient's orders"
"RTN","ALPBPPAT",44,0)
 .S DIR("?")="They are listed by the most current entry first"
"RTN","ALPBPPAT",45,0)
 .D ^DIR K DIR
"RTN","ALPBPPAT",46,0)
 .I $D(DIRUT) K ALPBOTYP,ALPBWARD,DIRUT,DTOUT,X,Y Q
"RTN","ALPBPPAT",47,0)
 .S ALPBMLOG=Y
"RTN","ALPBPPAT",48,0)
 .;
"RTN","ALPBPPAT",49,0)
 .S %ZIS="Q"
"RTN","ALPBPPAT",50,0)
 .S %ZIS("B")=$$DEFPRT^ALPBUTL()
"RTN","ALPBPPAT",51,0)
 .I %ZIS("B")="" K %ZIS("B")
"RTN","ALPBPPAT",52,0)
 .W ! D ^%ZIS K %ZIS
"RTN","ALPBPPAT",53,0)
 .I POP D  Q
"RTN","ALPBPPAT",54,0)
 ..K ALPBIEN,ALPBPTN,POP
"RTN","ALPBPPAT",55,0)
 .;
"RTN","ALPBPPAT",56,0)
 .; output not queued...
"RTN","ALPBPPAT",57,0)
 .I '$D(IO("Q")) D
"RTN","ALPBPPAT",58,0)
 ..U IO
"RTN","ALPBPPAT",59,0)
 ..D DQ
"RTN","ALPBPPAT",60,0)
 ..I IO'=IO(0) D ^%ZISC
"RTN","ALPBPPAT",61,0)
 .;
"RTN","ALPBPPAT",62,0)
 .; set up the Task...
"RTN","ALPBPPAT",63,0)
 .I $D(IO("Q")) D
"RTN","ALPBPPAT",64,0)
 ..S ZTRTN="DQ^ALPBPPAT"
"RTN","ALPBPPAT",65,0)
 ..S ZTIO=ION
"RTN","ALPBPPAT",66,0)
 ..S ZTDESC="PSB INPT PHARM ORDERS FOR "_ALPBPTN
"RTN","ALPBPPAT",67,0)
 ..S ZTSAVE("ALPBDAYS")=""
"RTN","ALPBPPAT",68,0)
 ..S ZTSAVE("ALPBIEN")=""
"RTN","ALPBPPAT",69,0)
 ..S ZTSAVE("ALPBMLOG")=""
"RTN","ALPBPPAT",70,0)
 ..S ZTSAVE("ALPBOTYP")=""
"RTN","ALPBPPAT",71,0)
 ..D ^%ZTLOAD
"RTN","ALPBPPAT",72,0)
 ..D HOME^%ZIS
"RTN","ALPBPPAT",73,0)
 ..W !!,$S(+$G(ZTSK):"Task "_ZTSK_" queued.",1:"ERROR: NOT QUEUED!")
"RTN","ALPBPPAT",74,0)
 ..K IO("Q"),ZTSK
"RTN","ALPBPPAT",75,0)
 .;
"RTN","ALPBPPAT",76,0)
 .K ALPBDAYS,ALPBIEN,ALPBMLOG,ALPBOTYP,ALPBPTN,X,Y
"RTN","ALPBPPAT",77,0)
 K DIRUT,DTOUT,X,Y
"RTN","ALPBPPAT",78,0)
 Q
"RTN","ALPBPPAT",79,0)
 ;
"RTN","ALPBPPAT",80,0)
DQ ; output entry point...
"RTN","ALPBPPAT",81,0)
 K ^TMP($J)
"RTN","ALPBPPAT",82,0)
 N ALPBCLIN                                                   ;*73
"RTN","ALPBPPAT",83,0)
 ;
"RTN","ALPBPPAT",84,0)
 ; set report date...
"RTN","ALPBPPAT",85,0)
 S ALPBRDAT=$$NOW^XLFDT()
"RTN","ALPBPPAT",86,0)
 S ALPBPT(0)=$G(^ALPB(53.7,ALPBIEN,0))
"RTN","ALPBPPAT",87,0)
 M ALPBPT(1)=^ALPB(53.7,ALPBIEN,1)
"RTN","ALPBPPAT",88,0)
 S ALPBPG=1
"RTN","ALPBPPAT",89,0)
 D HDR^ALPBFRMU(.ALPBPT,ALPBPG,.ALPBHDR)
"RTN","ALPBPPAT",90,0)
 F I=1:1:ALPBHDR(0) W !,ALPBHDR(I)
"RTN","ALPBPPAT",91,0)
 K ALPBHDR
"RTN","ALPBPPAT",92,0)
 ;
"RTN","ALPBPPAT",93,0)
 ; loop through orders and sort by order status...
"RTN","ALPBPPAT",94,0)
 N ALPBNOMEDS1,ALPBDRGNAME
"RTN","ALPBPPAT",95,0)
 S ALPBOIEN=0,ALPBNOMEDS1=1
"RTN","ALPBPPAT",96,0)
 F  S ALPBOIEN=$O(^ALPB(53.7,ALPBIEN,2,ALPBOIEN)) Q:'ALPBOIEN  D
"RTN","ALPBPPAT",97,0)
 .M ALPBDATA=^ALPB(53.7,ALPBIEN,2,ALPBOIEN)
"RTN","ALPBPPAT",98,0)
 .; if report type is "C"urrent and stop date is less than report date then quit and if status contains 'on hold' do not print and quit...
"RTN","ALPBPPAT",99,0)
 .I ALPBOTYP="C" D  Q:'$D(ALPBDATA)
"RTN","ALPBPPAT",100,0)
 ..I $$STAT^ALPBUTL1($E($P(ALPBDATA(0),U,3),1,2))["on hold" K ALPBDATA Q
"RTN","ALPBPPAT",101,0)
 ..I $G(ALPBDATA(1))="" K ALPBDATA Q
"RTN","ALPBPPAT",102,0)
 ..I $P(ALPBDATA(1),U,2)<ALPBRDAT K ALPBDATA
"RTN","ALPBPPAT",103,0)
 .S ALPBNOMEDS1=0
"RTN","ALPBPPAT",104,0)
 .S ALPBCLIN=$P(ALPBDATA(0),U,5) S:ALPBCLIN="" ALPBCLIN=0       ;*73
"RTN","ALPBPPAT",105,0)
 .S ALPBORDN=$P(ALPBDATA(0),U)
"RTN","ALPBPPAT",106,0)
 .S ALPBOCT=$P($G(ALPBDATA(3)),U,1)
"RTN","ALPBPPAT",107,0)
 .S:$P($G(ALPBDATA(4)),U,3)["PRN" ALPBOCT=ALPBOCT_"P"
"RTN","ALPBPPAT",108,0)
 .;drug name being used for alpha-sorting medications within order types (unit dose, unit dose-PRN, intravenous, intravenous-PRN)
"RTN","ALPBPPAT",109,0)
 .S ALPBDRGNAME=$P($G(ALPBDATA(7,1,0)),U,2)
"RTN","ALPBPPAT",110,0)
 .; gets the medications order status based on the order status code
"RTN","ALPBPPAT",111,0)
 .S ALPBOST=$$STAT2^ALPBUTL1($P($P($G(ALPBDATA(0),"XX"),U,3),"~"))
"RTN","ALPBPPAT",112,0)
 .S ^TMP($J,ALPBCLIN,ALPBOCT,ALPBDRGNAME,ALPBOST,ALPBORDN)=ALPBOIEN
"RTN","ALPBPPAT",113,0)
 .K ALPBDATA,ALPBOST,ALPBOCT,ALPBDRGNAME
"RTN","ALPBPPAT",114,0)
 ;
"RTN","ALPBPPAT",115,0)
 ; loop through the sorted orders...
"RTN","ALPBPPAT",116,0)
 S ALPBCLIN=""
"RTN","ALPBPPAT",117,0)
 F  S ALPBCLIN=$O(^TMP($J,ALPBCLIN)) Q:ALPBCLIN=""  D
"RTN","ALPBPPAT",118,0)
 .S ALPBOCT=""
"RTN","ALPBPPAT",119,0)
 .F  S ALPBOCT=$O(^TMP($J,ALPBCLIN,ALPBOCT)) Q:ALPBOCT=""  D
"RTN","ALPBPPAT",120,0)
 ..S ALPBDRGNAME=""
"RTN","ALPBPPAT",121,0)
 ..F  S ALPBDRGNAME=$O(^TMP($J,ALPBCLIN,ALPBOCT,ALPBDRGNAME)) Q:ALPBDRGNAME=""  D
"RTN","ALPBPPAT",122,0)
 ...S ALPBOST=""
"RTN","ALPBPPAT",123,0)
 ...F  S ALPBOST=$O(^TMP($J,ALPBCLIN,ALPBOCT,ALPBDRGNAME,ALPBOST)) Q:ALPBOST=""  D
"RTN","ALPBPPAT",124,0)
 ....S ALPBORDN=""
"RTN","ALPBPPAT",125,0)
 ....F  S ALPBORDN=$O(^TMP($J,ALPBCLIN,ALPBOCT,ALPBDRGNAME,ALPBOST,ALPBORDN)) Q:ALPBORDN=""  D
"RTN","ALPBPPAT",126,0)
 .....S ALPBOIEN=^TMP($J,ALPBCLIN,ALPBOCT,ALPBDRGNAME,ALPBOST,ALPBORDN)
"RTN","ALPBPPAT",127,0)
 .....M ALPBDATA=^ALPB(53.7,ALPBIEN,2,ALPBOIEN)
"RTN","ALPBPPAT",128,0)
 .....W !
"RTN","ALPBPPAT",129,0)
 .....D F132^ALPBFRM1(.ALPBDATA,ALPBDAYS,ALPBMLOG,.ALPBFORM,ALPBIEN)
"RTN","ALPBPPAT",130,0)
 .....; paginate?...
"RTN","ALPBPPAT",131,0)
 .....I $Y+ALPBFORM(0)=IOSL!($Y+ALPBFORM(0)>IOSL) D
"RTN","ALPBPPAT",132,0)
 ......W @IOF
"RTN","ALPBPPAT",133,0)
 ......S ALPBPG=ALPBPG+1
"RTN","ALPBPPAT",134,0)
 ......D HDR^ALPBFRMU(.ALPBPT,ALPBPG,.ALPBHDR)
"RTN","ALPBPPAT",135,0)
 ......F I=1:1:ALPBHDR(0) W !,ALPBHDR(I)
"RTN","ALPBPPAT",136,0)
 ......W !
"RTN","ALPBPPAT",137,0)
 ......K ALPBHDR
"RTN","ALPBPPAT",138,0)
 .....F I=1:1:ALPBFORM(0) W !,ALPBFORM(I)
"RTN","ALPBPPAT",139,0)
 .....K ALPBDATA,ALPBFORM
"RTN","ALPBPPAT",140,0)
 ....K ALPBORDN
"RTN","ALPBPPAT",141,0)
 ...K ALPBOST
"RTN","ALPBPPAT",142,0)
 ..K ALPBDRGNAME
"RTN","ALPBPPAT",143,0)
 .K ALPBOCT
"RTN","ALPBPPAT",144,0)
 ;
"RTN","ALPBPPAT",145,0)
 ;notification message displays one line below header info if patient has no med orders when the report is generated
"RTN","ALPBPPAT",146,0)
 I ALPBNOMEDS1 D
"RTN","ALPBPPAT",147,0)
 .W !!,"No Active Medication Orders were reported to the Contingency at the time the MAR was printed ",!!!
"RTN","ALPBPPAT",148,0)
 .;additional blank lines added to separate footer from header and allow room for notes
"RTN","ALPBPPAT",149,0)
 .I $E(IOST)="P" F  Q:$Y>=(IOSL-6)  W !
"RTN","ALPBPPAT",150,0)
 ;
"RTN","ALPBPPAT",151,0)
 ; print footer at end of this patient's record...
"RTN","ALPBPPAT",152,0)
 D FOOT^ALPBFRMU
"RTN","ALPBPPAT",153,0)
 ;
"RTN","ALPBPPAT",154,0)
 K ALPBDAYS,ALPBMLOG,ALPBOIEN,ALPBORDN,ALPBOST,ALPBOTYP,ALPBPG,ALPBPT,ALPBRDAT,^TMP($J),ALPBNOMEDS1
"RTN","ALPBPPAT",155,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ALPBPPAT",156,0)
 ;
"RTN","ALPBPPAT",157,0)
 ; write form feed at end if output device is a printer...
"RTN","ALPBPPAT",158,0)
 I $E(IOST)="P" W @IOF
"RTN","ALPBPPAT",159,0)
 Q
"RTN","ALPBPWRD")
0^4^B81368962
"RTN","ALPBPWRD",1,0)
ALPBPWRD ;OIFO-DALLAS MW,SED,KC-PRINT 3-DAY MAR BCMA BCBU REPORT FOR A SELECTED WARD ; 2/27/13 2:24pm
"RTN","ALPBPWRD",2,0)
 ;;3.0;BAR CODE MED ADMIN;**8,37,48,59,73**;Mar 2004;Build 31
"RTN","ALPBPWRD",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ALPBPWRD",4,0)
 ; 
"RTN","ALPBPWRD",5,0)
 ; NOTE: this routine is designed for hard-copy output.
"RTN","ALPBPWRD",6,0)
 ;      Output is formatted for 132-column printing.
"RTN","ALPBPWRD",7,0)
 ; 
"RTN","ALPBPWRD",8,0)
 ;*73 Add Clinic Order (CO) identification and clinic name print with 
"RTN","ALPBPWRD",9,0)
 ;    CO's sorting after IM meds.
"RTN","ALPBPWRD",10,0)
 ;
"RTN","ALPBPWRD",11,0)
 F  D  Q:$D(DIRUT)
"RTN","ALPBPWRD",12,0)
 .W !,"Inpatient Pharmacy Orders for a selected ward"
"RTN","ALPBPWRD",13,0)
 .S DIR(0)="FAO^2:10"
"RTN","ALPBPWRD",14,0)
 .S DIR("A")="Select WARD: "
"RTN","ALPBPWRD",15,0)
 .S DIR("?")="^D WARDLIST^ALPBUTL(""C"")"
"RTN","ALPBPWRD",16,0)
 .D ^DIR K DIR
"RTN","ALPBPWRD",17,0)
 .I $D(DIRUT) Q
"RTN","ALPBPWRD",18,0)
 .D WARDSEL^ALPBUTL(Y,.ALPBSEL)
"RTN","ALPBPWRD",19,0)
 .I +$G(ALPBSEL(0))=0 D  Q
"RTN","ALPBPWRD",20,0)
 ..W $C(7)
"RTN","ALPBPWRD",21,0)
 ..W "  ??"
"RTN","ALPBPWRD",22,0)
 ..D WARDLIST^ALPBUTL("C")
"RTN","ALPBPWRD",23,0)
 ..K ALPBSEL
"RTN","ALPBPWRD",24,0)
 .I +$G(ALPBSEL(0))=1 D
"RTN","ALPBPWRD",25,0)
 ..S ALPBWARD=ALPBSEL(1)
"RTN","ALPBPWRD",26,0)
 ..W "   ",ALPBWARD
"RTN","ALPBPWRD",27,0)
 ..K ALPBSEL
"RTN","ALPBPWRD",28,0)
 .I +$G(ALPBSEL(0))>1 D  I $D(DIRUT) K DIRUT,DTOUT,X,Y Q
"RTN","ALPBPWRD",29,0)
 ..S ALPBX=0
"RTN","ALPBPWRD",30,0)
 ..F  S ALPBX=$O(ALPBSEL(ALPBX)) Q:'ALPBX  W !?2,$J(ALPBX,2),"  ",ALPBSEL(ALPBX)
"RTN","ALPBPWRD",31,0)
 ..K ALPBX
"RTN","ALPBPWRD",32,0)
 ..S DIR(0)="NA^1:"_ALPBSEL(0)
"RTN","ALPBPWRD",33,0)
 ..S DIR("A")="Select Ward from the list (1-"_ALPBSEL(0)_"): "
"RTN","ALPBPWRD",34,0)
 ..W ! D ^DIR K DIR
"RTN","ALPBPWRD",35,0)
 ..I $D(DIRUT) K ALPBSEL Q
"RTN","ALPBPWRD",36,0)
 ..S ALPBWARD=ALPBSEL(+Y)
"RTN","ALPBPWRD",37,0)
 ..K ALPBSEL
"RTN","ALPBPWRD",38,0)
 .;
"RTN","ALPBPWRD",39,0)
 .; get all or just current orders?...
"RTN","ALPBPWRD",40,0)
 .S DIR(0)="SA^A:ALL;C:CURRENT"
"RTN","ALPBPWRD",41,0)
 .S DIR("A")="Report [A]LL or [C]URRENT orders? "
"RTN","ALPBPWRD",42,0)
 .S DIR("B")="CURRENT"
"RTN","ALPBPWRD",43,0)
 .S DIR("?")="[A]LL=all orders in the file, [C]URRENT=orders not yet expired."
"RTN","ALPBPWRD",44,0)
 .W ! D ^DIR K DIR
"RTN","ALPBPWRD",45,0)
 .I $D(DIRUT) K ALPBWARD,DIRUT,DTOUT,X,Y Q
"RTN","ALPBPWRD",46,0)
 .S ALPBOTYP=Y
"RTN","ALPBPWRD",47,0)
 .;
"RTN","ALPBPWRD",48,0)
 .;added in PSB*3*59 to benefit users located at the long term care and domiciliary sites.
"RTN","ALPBPWRD",49,0)
 .;include patients without active medications?...
"RTN","ALPBPWRD",50,0)
 .S ALPBWOMD=""
"RTN","ALPBPWRD",51,0)
 .I ALPBOTYP="C" D
"RTN","ALPBPWRD",52,0)
 ..S DIR(0)="SA^Y:YES;N:NO"
"RTN","ALPBPWRD",53,0)
 ..S DIR("A")="Include Patients Without Active Medications? "
"RTN","ALPBPWRD",54,0)
 ..S DIR("B")="YES"
"RTN","ALPBPWRD",55,0)
 ..S DIR("?",1)="[Y]es=include patients without active medication orders,"
"RTN","ALPBPWRD",56,0)
 ..S DIR("?",2)="[N]o=do not include patients without active medication orders."
"RTN","ALPBPWRD",57,0)
 ..W ! D ^DIR K DIR
"RTN","ALPBPWRD",58,0)
 ..I $D(DIRUT) K ALPBOTYP,DIRUT,DTOUT,X,Y Q
"RTN","ALPBPWRD",59,0)
 ..S ALPBWOMD=Y
"RTN","ALPBPWRD",60,0)
 .;
"RTN","ALPBPWRD",61,0)
 .;SORT BY NAME OR ROOM/BED     added 6/23/05
"RTN","ALPBPWRD",62,0)
 .S DIR(0)="SA^N:Name;R:Room/Bed"
"RTN","ALPBPWRD",63,0)
 .S DIR("A")="Sort Patients by [N]ame or [R]oom/Bed? "
"RTN","ALPBPWRD",64,0)
 .S DIR("B")="Room/bed"
"RTN","ALPBPWRD",65,0)
 .S DIR("?")="Sort by [N]ame or [R]oom Bed"
"RTN","ALPBPWRD",66,0)
 .W ! D ^DIR K DIR
"RTN","ALPBPWRD",67,0)
 .I $D(DIRUT) K ALPBWARD,ALPBWOMD,DIRUT,DTOUT,X,Y Q
"RTN","ALPBPWRD",68,0)
 .S ALPBSORT=Y
"RTN","ALPBPWRD",69,0)
 .;
"RTN","ALPBPWRD",70,0)
 .; print how many days MAR?...
"RTN","ALPBPWRD",71,0)
 .S DIR(0)="NA^1:7"
"RTN","ALPBPWRD",72,0)
 .S DIR("A")="Print how many days MAR? "
"RTN","ALPBPWRD",73,0)
 .S DIR("B")=$$DEFDAYS^ALPBUTL()
"RTN","ALPBPWRD",74,0)
 .S DIR("?")="The default is shown; please select a number 1 to 7."
"RTN","ALPBPWRD",75,0)
 .W ! D ^DIR K DIR
"RTN","ALPBPWRD",76,0)
 .I $D(DIRUT) K ALPBOTYP,DIRUT,DTOUT,X,Y Q
"RTN","ALPBPWRD",77,0)
 .S ALPBDAYS=+Y
"RTN","ALPBPWRD",78,0)
 .;
"RTN","ALPBPWRD",79,0)
 .; BCMA Med Log info for how many ?...
"RTN","ALPBPWRD",80,0)
 .S DIR(0)="NA^1:99"
"RTN","ALPBPWRD",81,0)
 .S DIR("B")=$$DEFML^ALPBUTL3()
"RTN","ALPBPWRD",82,0)
 .S DIR("A")="Select how many BCMA Medication Log history: "
"RTN","ALPBPWRD",83,0)
 .S DIR("A",1)=" "
"RTN","ALPBPWRD",84,0)
 .S DIR("?",1)="Select a number of BCMA Medication log entries"
"RTN","ALPBPWRD",85,0)
 .S DIR("?",2)="for each of the patient's orders"
"RTN","ALPBPWRD",86,0)
 .S DIR("?")="They are listed by the most current entry first"
"RTN","ALPBPWRD",87,0)
 .D ^DIR K DIR
"RTN","ALPBPWRD",88,0)
 .I $D(DIRUT) K ALPBOTYP,ALPBWARD,DIRUT,DTOUT,X,Y Q
"RTN","ALPBPWRD",89,0)
 .S ALPBMLOG=Y
"RTN","ALPBPWRD",90,0)
 .;
"RTN","ALPBPWRD",91,0)
 .S %ZIS="Q"
"RTN","ALPBPWRD",92,0)
 .S %ZIS("B")=$$DEFPRT^ALPBUTL()
"RTN","ALPBPWRD",93,0)
 .I %ZIS("B")="" K %ZIS("B")
"RTN","ALPBPWRD",94,0)
 .W ! D ^%ZIS K %ZIS
"RTN","ALPBPWRD",95,0)
 .I POP D  Q
"RTN","ALPBPWRD",96,0)
 ..W $C(7)
"RTN","ALPBPWRD",97,0)
 ..K ALPBMLOG,ALPBOTYP,ALPBWARD,POP,ALPBWOMD
"RTN","ALPBPWRD",98,0)
 .;
"RTN","ALPBPWRD",99,0)
 .; output not queued...
"RTN","ALPBPWRD",100,0)
 .I '$D(IO("Q")) D
"RTN","ALPBPWRD",101,0)
 ..U IO
"RTN","ALPBPWRD",102,0)
 ..D DQ
"RTN","ALPBPWRD",103,0)
 ..I IO'=IO(0) D ^%ZISC
"RTN","ALPBPWRD",104,0)
 .;
"RTN","ALPBPWRD",105,0)
 .; set up the Task...
"RTN","ALPBPWRD",106,0)
 .I $D(IO("Q")) D
"RTN","ALPBPWRD",107,0)
 ..S ZTRTN="DQ^ALPBPWRD"
"RTN","ALPBPWRD",108,0)
 ..S ZTDESC="PSB INPT PHARM ORDERS FOR WARD "_ALPBWARD
"RTN","ALPBPWRD",109,0)
 ..S ZTSAVE("ALPBDAYS")=""
"RTN","ALPBPWRD",110,0)
 ..S ZTSAVE("ALPBWARD")=""
"RTN","ALPBPWRD",111,0)
 ..S ZTSAVE("ALPBMLOG")=""
"RTN","ALPBPWRD",112,0)
 ..S ZTSAVE("ALPBOTYP")=""
"RTN","ALPBPWRD",113,0)
 ..S ZTSAVE("ALPBSORT")=""
"RTN","ALPBPWRD",114,0)
 ..S ZTSAVE("ALPBWOMD")=""
"RTN","ALPBPWRD",115,0)
 ..S ZTIO=ION
"RTN","ALPBPWRD",116,0)
 ..D ^%ZTLOAD
"RTN","ALPBPWRD",117,0)
 ..D HOME^%ZIS
"RTN","ALPBPWRD",118,0)
 ..W !,$S($G(ZTSK):"Task number "_ZTSK_" queued.",1:"ERROR -- NOT QUEUED!")
"RTN","ALPBPWRD",119,0)
 ..K IO("Q"),ZTSK
"RTN","ALPBPWRD",120,0)
 .K ALPBDAYS,ALPBMLOG,ALPBOTYP,ALPBWARD,ALPBWOMD
"RTN","ALPBPWRD",121,0)
 K DIRUT,DTOUT,X,Y
"RTN","ALPBPWRD",122,0)
 Q
"RTN","ALPBPWRD",123,0)
 ;
"RTN","ALPBPWRD",124,0)
DQ ; output entry point...
"RTN","ALPBPWRD",125,0)
 K ^TMP($J)
"RTN","ALPBPWRD",126,0)
 N ALPBCLIN                                                       ;*73
"RTN","ALPBPWRD",127,0)
 ;
"RTN","ALPBPWRD",128,0)
 ; set report date...  SED 11/4/03
"RTN","ALPBPWRD",129,0)
 S ALPBRDAT=$S(ALPBOTYP="C":$$NOW^XLFDT(),1:"")
"RTN","ALPBPWRD",130,0)
 ;
"RTN","ALPBPWRD",131,0)
 ; loop through ward cross reference in 53.7...
"RTN","ALPBPWRD",132,0)
 N ALPBDRGNAME
"RTN","ALPBPWRD",133,0)
 S ALPBPTN=""
"RTN","ALPBPWRD",134,0)
 F  S ALPBPTN=$O(^ALPB(53.7,"AW",ALPBWARD,ALPBPTN)) Q:ALPBPTN=""  D
"RTN","ALPBPWRD",135,0)
 .S ALPBIEN=0
"RTN","ALPBPWRD",136,0)
 .F  S ALPBIEN=$O(^ALPB(53.7,"AW",ALPBWARD,ALPBPTN,ALPBIEN)) Q:'ALPBIEN  D
"RTN","ALPBPWRD",137,0)
 ..D ORDS^ALPBUTL(ALPBIEN,ALPBRDAT,.ALPBORDS)
"RTN","ALPBPWRD",138,0)
 ..I $G(ALPBPDAT(0))="" S ALPBPDAT(0)=$G(^ALPB(53.7,ALPBIEN,0))
"RTN","ALPBPWRD",139,0)
 ..I +ALPBORDS(0)'>0&(ALPBWOMD="Y") D  Q
"RTN","ALPBPWRD",140,0)
 ...S ^TMP($J,ALPBPTN)=ALPBIEN
"RTN","ALPBPWRD",141,0)
 ...K ALPBORDS
"RTN","ALPBPWRD",142,0)
 ..S ALPBOIEN=0
"RTN","ALPBPWRD",143,0)
 ..F  S ALPBOIEN=$O(ALPBORDS(ALPBOIEN)) Q:'ALPBOIEN  D
"RTN","ALPBPWRD",144,0)
 ...S ALPBDATA=$G(^ALPB(53.7,ALPBIEN,2,ALPBOIEN,1))
"RTN","ALPBPWRD",145,0)
 ...S ALPBDAT0=$G(^ALPB(53.7,ALPBIEN,2,ALPBOIEN,0))               ;*73
"RTN","ALPBPWRD",146,0)
 ...S ALPBCLIN=$P(ALPBDAT0,U,5) S:ALPBCLIN="" ALPBCLIN=0          ;*73
"RTN","ALPBPWRD",147,0)
 ...S ALPBOCT=$P($G(^ALPB(53.7,ALPBIEN,2,ALPBOIEN,3)),U,1)
"RTN","ALPBPWRD",148,0)
 ...S:$P($G(^ALPB(53.7,ALPBIEN,2,ALPBOIEN,4)),U,3)["PRN" ALPBOCT=ALPBOCT_"P"
"RTN","ALPBPWRD",149,0)
 ...;drug name being used for alpha-sorting medications within order types (unit dose, unit dose-PRN, intravenous, intravenous-PRN)
"RTN","ALPBPWRD",150,0)
 ...S ALPBDRGNAME=$P($G(^ALPB(53.7,ALPBIEN,2,ALPBOIEN,7,1,0)),U,2)
"RTN","ALPBPWRD",151,0)
 ...S:ALPBDRGNAME="" ALPBDRGNAME="NOT FOUND"   ;*73
"RTN","ALPBPWRD",152,0)
 ...; if report is for "C"urrent, check stop date and quit if
"RTN","ALPBPWRD",153,0)
 ...; stop date is less than report date
"RTN","ALPBPWRD",154,0)
 ...I ALPBOTYP="C"&($P(ALPBDATA,U,2)<ALPBRDAT) K ALPBDATA Q
"RTN","ALPBPWRD",155,0)
 ...S ALPBORDN=ALPBORDS(ALPBOIEN)
"RTN","ALPBPWRD",156,0)
 ...S ALPBOST=$$STAT2^ALPBUTL1(ALPBORDS(ALPBOIEN,2))
"RTN","ALPBPWRD",157,0)
 ...I '$D(^TMP($J,ALPBPTN)) S ^TMP($J,ALPBPTN)=ALPBIEN
"RTN","ALPBPWRD",158,0)
 ...S ^TMP($J,ALPBPTN,ALPBCLIN,ALPBOCT,ALPBDRGNAME,ALPBOST,ALPBORDN)=ALPBOIEN  ;*73
"RTN","ALPBPWRD",159,0)
 ...K ALPBDATA,ALPBDAT0,ALPBORDN,ALPBOST,ALPBDRGNAME
"RTN","ALPBPWRD",160,0)
 ..K ALPBOIEN,ALPBORDS,ALPBPDAT
"RTN","ALPBPWRD",161,0)
 .K ALPBIEN
"RTN","ALPBPWRD",162,0)
 K ALPBPTN
"RTN","ALPBPWRD",163,0)
 ;
"RTN","ALPBPWRD",164,0)
 ; Sort by Patient Name or room/bed capability added 6/23/05 KFOX
"RTN","ALPBPWRD",165,0)
 S ALPBPG=0
"RTN","ALPBPWRD",166,0)
 S ALPBPTN=""
"RTN","ALPBPWRD",167,0)
 I ALPBSORT="N" D
"RTN","ALPBPWRD",168,0)
 .F  S ALPBPTN=$O(^TMP($J,ALPBPTN)) Q:ALPBPTN=""  S ALPBIEN=^TMP($J,ALPBPTN) D PRT
"RTN","ALPBPWRD",169,0)
 ;SORT BY ROOM/BED
"RTN","ALPBPWRD",170,0)
 I ALPBSORT="R" D
"RTN","ALPBPWRD",171,0)
 .S ALPBD="",ALPRM=""
"RTN","ALPBPWRD",172,0)
 .F  S ALPBPTN=$O(^TMP($J,ALPBPTN)) Q:ALPBPTN=""  D  Q:ALPBPTN=""
"RTN","ALPBPWRD",173,0)
 ..I ALPBPTN="BCBU" S ALPBPTN=$O(^TMP($J,ALPBPTN)) ;SKIP "BCBU" SUBSCRIBE
"RTN","ALPBPWRD",174,0)
 ..I ALPBPTN="" Q  ;PSB*3*37 Stop null subscript when "BCBU" is the last entry in ^TMP
"RTN","ALPBPWRD",175,0)
 ..S ALPBIEN=^TMP($J,ALPBPTN) S ALPRM=$P($G(^ALPB(53.7,ALPBIEN,0)),"^",6),ALPBD=$P($G(^ALPB(53.7,ALPBIEN,0)),"^",7)
"RTN","ALPBPWRD",176,0)
 ..S:$TR(ALPBD,"""","")="" ALPBD="NONE" S:$TR(ALPRM,"""","")="" ALPRM="NONE" ;INCASE NO ROOM AND BED YET
"RTN","ALPBPWRD",177,0)
 ..S ^TMP($J,"BCBU",ALPRM,ALPRM,ALPBD,ALPBPTN)=ALPBIEN
"RTN","ALPBPWRD",178,0)
 .S ALPRM1="" F  S ALPRM1=$O(^TMP($J,"BCBU",ALPRM1)) Q:ALPRM1=""  D
"RTN","ALPBPWRD",179,0)
 ..S ALPRM="" F  S ALPRM=$O(^TMP($J,"BCBU",ALPRM1,ALPRM)) Q:ALPRM=""  D
"RTN","ALPBPWRD",180,0)
 ...S ALPBD="" F  S ALPBD=$O(^TMP($J,"BCBU",ALPRM1,ALPRM,ALPBD)) Q:ALPBD=""  D
"RTN","ALPBPWRD",181,0)
 ....S ALPBPTN="" F  S ALPBPTN=$O(^TMP($J,"BCBU",ALPRM1,ALPRM,ALPBD,ALPBPTN)) Q:ALPBPTN=""  D
"RTN","ALPBPWRD",182,0)
 .....S ALPBIEN=$G(^TMP($J,"BCBU",ALPRM1,ALPRM,ALPBD,ALPBPTN))  D PRT
"RTN","ALPBPWRD",183,0)
 D DONE
"RTN","ALPBPWRD",184,0)
 Q
"RTN","ALPBPWRD",185,0)
PRT S ALPBPDAT(0)=$G(^ALPB(53.7,ALPBIEN,0))
"RTN","ALPBPWRD",186,0)
 M ALPBPDAT(1)=^ALPB(53.7,ALPBIEN,1)
"RTN","ALPBPWRD",187,0)
 I ALPBPG=0 D PAGE
"RTN","ALPBPWRD",188,0)
 N ALPBNOMDS
"RTN","ALPBPWRD",189,0)
 S ALPBNOMDS=""
"RTN","ALPBPWRD",190,0)
 S:$D(^TMP($J,ALPBPTN))=1 ALPBNOMDS=1
"RTN","ALPBPWRD",191,0)
 S ALPBCLIN=""     ;*73
"RTN","ALPBPWRD",192,0)
 F  S ALPBCLIN=$O(^TMP($J,ALPBPTN,ALPBCLIN)) Q:ALPBCLIN=""  D     ;*73
"RTN","ALPBPWRD",193,0)
 .S ALPBOCT=""
"RTN","ALPBPWRD",194,0)
 .F  S ALPBOCT=$O(^TMP($J,ALPBPTN,ALPBCLIN,ALPBOCT)) Q:ALPBOCT=""  D
"RTN","ALPBPWRD",195,0)
 ..S ALPBDRGNAME=""
"RTN","ALPBPWRD",196,0)
 ..F  S ALPBDRGNAME=$O(^TMP($J,ALPBPTN,ALPBCLIN,ALPBOCT,ALPBDRGNAME)) Q:ALPBDRGNAME=""  D
"RTN","ALPBPWRD",197,0)
 ...S ALPBOST=""
"RTN","ALPBPWRD",198,0)
 ...F  S ALPBOST=$O(^TMP($J,ALPBPTN,ALPBCLIN,ALPBOCT,ALPBDRGNAME,ALPBOST)) Q:ALPBOST=""  D
"RTN","ALPBPWRD",199,0)
 ....S ALPBORDN=""
"RTN","ALPBPWRD",200,0)
 ....F  S ALPBORDN=$O(^TMP($J,ALPBPTN,ALPBCLIN,ALPBOCT,ALPBDRGNAME,ALPBOST,ALPBORDN)) Q:ALPBORDN=""  D
"RTN","ALPBPWRD",201,0)
 .....S ALPBOIEN=^TMP($J,ALPBPTN,ALPBCLIN,ALPBOCT,ALPBDRGNAME,ALPBOST,ALPBORDN)
"RTN","ALPBPWRD",202,0)
 .....; get and print this order's data...
"RTN","ALPBPWRD",203,0)
 .....M ALPBDATA=^ALPB(53.7,ALPBIEN,2,ALPBOIEN)
"RTN","ALPBPWRD",204,0)
 .....D F132^ALPBFRM1(.ALPBDATA,ALPBDAYS,ALPBMLOG,.ALPBFORM,ALPBIEN)
"RTN","ALPBPWRD",205,0)
 .....;D F132^ALPBFRM1(.ALPBDATA,ALPBDAYS,.ALPBFORM)
"RTN","ALPBPWRD",206,0)
 .....I $Y+ALPBFORM(0)=IOSL!($Y+ALPBFORM(0)>IOSL) D PAGE
"RTN","ALPBPWRD",207,0)
 .....F ALPBX=1:1:ALPBFORM(0) W !,ALPBFORM(ALPBX)
"RTN","ALPBPWRD",208,0)
 .....K ALPBDATA,ALPBFORM,ALPBOIEN,ALPBX
"RTN","ALPBPWRD",209,0)
 ....K ALPBORDN
"RTN","ALPBPWRD",210,0)
 ...K ALPBOST
"RTN","ALPBPWRD",211,0)
 ..K ALPBDRGNAME
"RTN","ALPBPWRD",212,0)
 .K ALPBOCT
"RTN","ALPBPWRD",213,0)
 ; print footer at end of this patient's record...
"RTN","ALPBPWRD",214,0)
 I $Y+10>IOSL D PAGE
"RTN","ALPBPWRD",215,0)
 ;notification message displays one line below header info if patient has no med orders when the report is generated
"RTN","ALPBPWRD",216,0)
 I ALPBNOMDS D
"RTN","ALPBPWRD",217,0)
 .W !!,"No Active Medication Orders were reported to the Contingency at the time the MAR was printed ",!!!
"RTN","ALPBPWRD",218,0)
 .;additional blank lines added to separate footer from header and allow room for notes
"RTN","ALPBPWRD",219,0)
 .I $E(IOST)="P" F  Q:$Y>=(IOSL-6)  W !
"RTN","ALPBPWRD",220,0)
 ;
"RTN","ALPBPWRD",221,0)
 D FOOT^ALPBFRMU
"RTN","ALPBPWRD",222,0)
 ;Print a blank page between patient (this was removed by PSB*3*59 - the BCMA Workgroup agreed to condense the report)
"RTN","ALPBPWRD",223,0)
 ;W @IOF 
"RTN","ALPBPWRD",224,0)
 S ALPBPG=0
"RTN","ALPBPWRD",225,0)
 K ALPBPDAT
"RTN","ALPBPWRD",226,0)
 Q
"RTN","ALPBPWRD",227,0)
 ;K ALPBIEN,ALPBPDAT KILLING ALPBIEN WILL BREAK SORT BY ROOM/BED
"RTN","ALPBPWRD",228,0)
 ;
"RTN","ALPBPWRD",229,0)
DONE ;   
"RTN","ALPBPWRD",230,0)
 K ALPBDAYS,ALPBMLOG,ALPBOTYP,ALPBPG,ALPBPTN,ALPBRDAT,ALPBWARD,^TMP($J),ALPRM,ALPRM1,ALPBD,ALPBIEN,ALPBSORT,ALPBNOMDS
"RTN","ALPBPWRD",231,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ALPBPWRD",232,0)
 Q
"RTN","ALPBPWRD",233,0)
 ;
"RTN","ALPBPWRD",234,0)
PAGE ; print page header for patient...
"RTN","ALPBPWRD",235,0)
 W @IOF
"RTN","ALPBPWRD",236,0)
 S ALPBPG=ALPBPG+1
"RTN","ALPBPWRD",237,0)
 D HDR^ALPBFRMU(.ALPBPDAT,ALPBPG,.ALPBHDR)
"RTN","ALPBPWRD",238,0)
 F ALPBX=1:1:ALPBHDR(0) W !,ALPBHDR(ALPBX)
"RTN","ALPBPWRD",239,0)
 K ALPBHDR,ALPBX
"RTN","ALPBPWRD",240,0)
 Q
"RTN","ALPBUTL")
0^6^B88759700
"RTN","ALPBUTL",1,0)
ALPBUTL ;OIFO-DALLAS MW,SED,KC-BCMA BCBU REPORT FUNCTIONS AND UTILITIES ;2/28/13 8:13am
"RTN","ALPBUTL",2,0)
 ;;3.0;BAR CODE MED ADMIN;**8,73**;Mar 2004;Build 31
"RTN","ALPBUTL",3,0)
 ;
"RTN","ALPBUTL",4,0)
 ;*73 add logic to handle Clinic Orders (CO)
"RTN","ALPBUTL",5,0)
 ;
"RTN","ALPBUTL",6,0)
DEFPRT() ; fetch and return default printer...
"RTN","ALPBUTL",7,0)
 ; returns default printer entry from Device file based on entry in
"RTN","ALPBUTL",8,0)
 ; DEFAULT MAR PRINTER field in BCMA BACKUP PARAMETERS file (53.71)
"RTN","ALPBUTL",9,0)
 N X
"RTN","ALPBUTL",10,0)
 S X=+$O(^ALPB(53.71,0))
"RTN","ALPBUTL",11,0)
 I X=0 Q ""
"RTN","ALPBUTL",12,0)
 Q $P($G(^%ZIS(1,+$P(^ALPB(53.71,X,0),"^",3),0)),U)
"RTN","ALPBUTL",13,0)
 ;
"RTN","ALPBUTL",14,0)
DEFDAYS() ; fetch and return default days for MAR printing...
"RTN","ALPBUTL",15,0)
 ; returns default number of days to print MARs based on entry in
"RTN","ALPBUTL",16,0)
 ; DEFAULT DAYS FOR MAR field in BCMA BACKUP PARAMETERS file (53.71)
"RTN","ALPBUTL",17,0)
 ; if null or undefined, returns default of 3 (days)
"RTN","ALPBUTL",18,0)
 N X
"RTN","ALPBUTL",19,0)
 S X=+$O(^ALPB(53.71,0))
"RTN","ALPBUTL",20,0)
 I X=0 Q 7
"RTN","ALPBUTL",21,0)
 Q +$P(^ALPB(53.71,X,0),"^",2)
"RTN","ALPBUTL",22,0)
 ;
"RTN","ALPBUTL",23,0)
MLRANGE(IEN) ; find first and last Med Log entries' date/time...
"RTN","ALPBUTL",24,0)
 ; IEN = patient's record number in file 53.7
"RTN","ALPBUTL",25,0)
 ; returns a delimited string = first Med Log date/time^last Med Log date/time
"RTN","ALPBUTL",26,0)
 N FIRST,LAST
"RTN","ALPBUTL",27,0)
 S FIRST=$O(^ALPB(53.7,IEN,"AMLOG",""))
"RTN","ALPBUTL",28,0)
 I FIRST="" Q "^"
"RTN","ALPBUTL",29,0)
 S FIRST=FIRST\1
"RTN","ALPBUTL",30,0)
 S LAST=$O(^ALPB(53.7,IEN,"AMLOG",""),-1)
"RTN","ALPBUTL",31,0)
 I LAST'="" S LAST=LAST\1
"RTN","ALPBUTL",32,0)
 I FIRST=LAST Q FIRST_"^"
"RTN","ALPBUTL",33,0)
 Q FIRST_"^"_LAST
"RTN","ALPBUTL",34,0)
 ;
"RTN","ALPBUTL",35,0)
PAD(STRING,SPACES) ; pad a string...
"RTN","ALPBUTL",36,0)
 ; STRING = a string passed by reference
"RTN","ALPBUTL",37,0)
 ; SPACES = number of spaces to concatenate onto STRING
"RTN","ALPBUTL",38,0)
 ; returns STRING padded with SPACES number of blank spaces
"RTN","ALPBUTL",39,0)
 N I,RESULT
"RTN","ALPBUTL",40,0)
 I $G(STRING)="" S STRING=" "
"RTN","ALPBUTL",41,0)
 I $G(SPACES)="" Q STRING
"RTN","ALPBUTL",42,0)
 S RESULT=STRING F I=$L(RESULT):1:SPACES S RESULT=RESULT_" "
"RTN","ALPBUTL",43,0)
 Q RESULT
"RTN","ALPBUTL",44,0)
 ;
"RTN","ALPBUTL",45,0)
FDAYS(START,DAYS,SPACE) ; format a sequence of DAYS beginning with START separated by SPACE...
"RTN","ALPBUTL",46,0)
 ; START = a date in FileMan internal format from which the formatted string will start
"RTN","ALPBUTL",47,0)
 ; DAYS  = the number of consecutive days to return in the formatted string
"RTN","ALPBUTL",48,0)
 ; SPACE = the number of spaces between each number in the formatted string
"RTN","ALPBUTL",49,0)
 ;         (if not passed, defaults to 4 spaces)
"RTN","ALPBUTL",50,0)
 ; returns a formatted string (example: 1    2    3)
"RTN","ALPBUTL",51,0)
 N DIM,I,J,RESULT,TODAY
"RTN","ALPBUTL",52,0)
 I $G(START)=""!($G(DAYS)="") Q ""
"RTN","ALPBUTL",53,0)
 I $G(SPACE)="" S SPACE=4
"RTN","ALPBUTL",54,0)
 S (RESULT,TODAY)=+$E(START,6,7)
"RTN","ALPBUTL",55,0)
 F I=1:1:SPACE S RESULT=RESULT_" "
"RTN","ALPBUTL",56,0)
 S DIM=$$DIM(START)
"RTN","ALPBUTL",57,0)
 F I=DAYS-1:-1:1 D
"RTN","ALPBUTL",58,0)
 .S TODAY=TODAY+1
"RTN","ALPBUTL",59,0)
 .I TODAY>DIM S TODAY=1
"RTN","ALPBUTL",60,0)
 .S RESULT=RESULT_$S(TODAY<10:"0"_TODAY,1:TODAY)
"RTN","ALPBUTL",61,0)
 .I I>1 D
"RTN","ALPBUTL",62,0)
 ..F J=1:1:SPACE S RESULT=RESULT_" "
"RTN","ALPBUTL",63,0)
 Q RESULT
"RTN","ALPBUTL",64,0)
 ;
"RTN","ALPBUTL",65,0)
FMONS(START,DAYS,SPACE) ; format a sequence of months given a START date separated by SPACE...
"RTN","ALPBUTL",66,0)
 ; START = a date in FileMan internal format the month of which will be the string starting point
"RTN","ALPBUTL",67,0)
 ; DAYS  = the number of days that will be displayed
"RTN","ALPBUTL",68,0)
 ; SPACE = the number of spaces between each month (defaults to 1 space)
"RTN","ALPBUTL",69,0)
 ; returns a string equal to the month or months depending upon the number of days passed
"RTN","ALPBUTL",70,0)
 ; for example:  if START=3021031 (Oct 31, 2002) and DAYS=3 then two month names will be
"RTN","ALPBUTL",71,0)
 ;               returned:  OCT NOV
"RTN","ALPBUTL",72,0)
 N DIM,I,J,MON,MON1,NEXTMON,RESULT,TODAY,XSPACE
"RTN","ALPBUTL",73,0)
 I $G(START)=""!($G(DAYS)="") Q ""
"RTN","ALPBUTL",74,0)
 I $G(SPACE)="" S SPACE=4
"RTN","ALPBUTL",75,0)
 S (XSPACE,XSTRIP)=""
"RTN","ALPBUTL",76,0)
 F I=1:1:SPACE+1 S XSPACE=XSPACE_"*",XSTRIP=XSTRIP_" "
"RTN","ALPBUTL",77,0)
 S DIM=$$DIM(START),TODAY=+$E(START,6,7),MON1=+$E(START,4,5)
"RTN","ALPBUTL",78,0)
 S (RESULT,MON)=$$MONN(MON1)
"RTN","ALPBUTL",79,0)
 I (TODAY+DAYS)<DIM!(TODAY+DAYS=DIM) Q RESULT
"RTN","ALPBUTL",80,0)
 F I=1:1:DAYS D
"RTN","ALPBUTL",81,0)
 .S RESULT=RESULT_XSPACE
"RTN","ALPBUTL",82,0)
 .S TODAY=TODAY+1
"RTN","ALPBUTL",83,0)
 .I TODAY<DIM!(TODAY=DIM) Q
"RTN","ALPBUTL",84,0)
 .S MON1=MON1+1
"RTN","ALPBUTL",85,0)
 .I MON1>12 S MON1=1
"RTN","ALPBUTL",86,0)
 .S MON=$$MONN(MON1),RESULT=RESULT_MON
"RTN","ALPBUTL",87,0)
 .S DIM=$$DIM($E(START,1,3)_$S(MON1<10:"0"_MON1,1:MON1)),TODAY=0
"RTN","ALPBUTL",88,0)
 F I=$L(RESULT):-1 Q:$E(RESULT,I)'="*"!(I=0)
"RTN","ALPBUTL",89,0)
 S RESULT=$E(RESULT,1,I),RESULT=$TR(RESULT,XSPACE,XSTRIP)
"RTN","ALPBUTL",90,0)
 Q RESULT
"RTN","ALPBUTL",91,0)
 ;
"RTN","ALPBUTL",92,0)
FDATES(START,DAYS,RESULTS) ;
"RTN","ALPBUTL",93,0)
 N I,X,X1,X2
"RTN","ALPBUTL",94,0)
 S RESULTS(0)=" "_$E(START,4,5)_"/"_$E(START,6,7)_" ",RESULTS(1)=START
"RTN","ALPBUTL",95,0)
 F I=1:1:DAYS-1 D
"RTN","ALPBUTL",96,0)
 .S X1=START,X2=I
"RTN","ALPBUTL",97,0)
 .D C^%DTC
"RTN","ALPBUTL",98,0)
 .S RESULTS(I+1)=X,RESULTS(0)=RESULTS(0)_" "_$E(X,4,5)_"/"_$E(X,6,7)_" "
"RTN","ALPBUTL",99,0)
 .K X,X1,X2
"RTN","ALPBUTL",100,0)
 Q
"RTN","ALPBUTL",101,0)
 ;
"RTN","ALPBUTL",102,0)
DIM(X) ; number of days in a specified month...
"RTN","ALPBUTL",103,0)
 ; X = a date in internal FileMan format (can be partial: YYYMM)
"RTN","ALPBUTL",104,0)
 ; returns a number representing the number of days in month X
"RTN","ALPBUTL",105,0)
 I $G(X)="" Q 0
"RTN","ALPBUTL",106,0)
 N DAYS,MON,YEAR
"RTN","ALPBUTL",107,0)
 S MON=+$E(X,4,5)
"RTN","ALPBUTL",108,0)
 I MON<1 Q 0
"RTN","ALPBUTL",109,0)
 S DAYS=$S(MON=1:31,MON=2:28,MON=3:31,MON=4:30,MON=5:31,MON=6:30,MON=7:31,MON=8:31,MON=9:30,MON=10:31,MON=11:30,MON=12:31,1:0)
"RTN","ALPBUTL",110,0)
 ; if passed date is in Feb, check for leap year and adjust days if needed...
"RTN","ALPBUTL",111,0)
 I MON=2 D
"RTN","ALPBUTL",112,0)
 .S YEAR=+$E(X,1,3)+1700
"RTN","ALPBUTL",113,0)
 .I $$LEAP^XLFDT2(YEAR) S DAYS=29
"RTN","ALPBUTL",114,0)
 Q DAYS
"RTN","ALPBUTL",115,0)
 ;
"RTN","ALPBUTL",116,0)
MONN(X) ; month name...
"RTN","ALPBUTL",117,0)
 ; X = month number (1-12)
"RTN","ALPBUTL",118,0)
 ; returns name of month specified in X
"RTN","ALPBUTL",119,0)
 I $G(X)="" Q ""
"RTN","ALPBUTL",120,0)
 S X=+X
"RTN","ALPBUTL",121,0)
 Q $S(X=1:"JAN",X=2:"FEB",X=3:"MAR",X=4:"APR",X=5:"MAY",X=6:"JUN",X=7:"JUL",X=8:"AUG",X=9:"SEP",X=10:"OCT",X=11:"NOV",X=12:"DEC",1:"")
"RTN","ALPBUTL",122,0)
 ;
"RTN","ALPBUTL",123,0)
FDATE(X) ; special format for a FileMan date/time...
"RTN","ALPBUTL",124,0)
 ; X = date and time (time is optional) in FileMan format
"RTN","ALPBUTL",125,0)
 ; returns the FileMan date/time in the format MM/DD/YY@HH:MM
"RTN","ALPBUTL",126,0)
 N DATE,FMDATE
"RTN","ALPBUTL",127,0)
 S DATE=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","ALPBUTL",128,0)
 S FMDATE=$$FMTE^XLFDT(X)
"RTN","ALPBUTL",129,0)
 I $P(FMDATE,"@",2)'="" S DATE=DATE_"@"_$P($P(FMDATE,"@",2),":")_":"_$P($P(FMDATE,"@",2),":",2)
"RTN","ALPBUTL",130,0)
 Q DATE
"RTN","ALPBUTL",131,0)
 ;
"RTN","ALPBUTL",132,0)
WARDLIST(DTYPE) ; list of wards on file...
"RTN","ALPBUTL",133,0)
 ; DTYPE = 'C' for vertical (columnar) list
"RTN","ALPBUTL",134,0)
 ;         'L' for horizontal list
"RTN","ALPBUTL",135,0)
 I $G(DTYPE)="" S DTYPE="L"
"RTN","ALPBUTL",136,0)
 N ALPBWARD
"RTN","ALPBUTL",137,0)
 W !,"Wards with BCMA Backup Data on this workstation:",!
"RTN","ALPBUTL",138,0)
 S ALPBWARD=""
"RTN","ALPBUTL",139,0)
 F  S ALPBWARD=$O(^ALPB(53.7,"AW",ALPBWARD)) Q:ALPBWARD=""  D
"RTN","ALPBUTL",140,0)
 .I DTYPE="L" D  Q
"RTN","ALPBUTL",141,0)
 ..I $X+$L(ALPBWARD)>IOM W !
"RTN","ALPBUTL",142,0)
 ..W ALPBWARD
"RTN","ALPBUTL",143,0)
 ..I $O(^ALPB(53.7,"AW",ALPBWARD))'="" W ", "
"RTN","ALPBUTL",144,0)
 .W !?5,ALPBWARD
"RTN","ALPBUTL",145,0)
 Q
"RTN","ALPBUTL",146,0)
 ;
"RTN","ALPBUTL",147,0)
WARDSEL(WARD,RESULTS) ; find a selected ward...
"RTN","ALPBUTL",148,0)
 ; WARD = a string representing a ward input by the user
"RTN","ALPBUTL",149,0)
 ; RESULTS = an array passed by reference in which possible matches are stored
"RTN","ALPBUTL",150,0)
 ; returns possible matches for the WARD in RESULTS
"RTN","ALPBUTL",151,0)
 N ALPBWARD,ALPBX
"RTN","ALPBUTL",152,0)
 S RESULTS(0)=0
"RTN","ALPBUTL",153,0)
 S ALPBWARD=""
"RTN","ALPBUTL",154,0)
 F  S ALPBWARD=$O(^ALPB(53.7,"AW",ALPBWARD)) Q:ALPBWARD=""  D
"RTN","ALPBUTL",155,0)
 .I ALPBWARD=WARD D  Q
"RTN","ALPBUTL",156,0)
 ..S RESULTS(0)=RESULTS(0)+1,RESULTS(RESULTS(0))=ALPBWARD
"RTN","ALPBUTL",157,0)
 .I ALPBWARD[WARD D
"RTN","ALPBUTL",158,0)
 ..S RESULTS(0)=RESULTS(0)+1,RESULTS(RESULTS(0))=ALPBWARD
"RTN","ALPBUTL",159,0)
 ; if a straight lookup failed, let's try making any alphas
"RTN","ALPBUTL",160,0)
 ; entered by the user uppercase and try it once more...
"RTN","ALPBUTL",161,0)
 I RESULTS(0)=0 D
"RTN","ALPBUTL",162,0)
 .S WARD=$$UP^XLFSTR(WARD)
"RTN","ALPBUTL",163,0)
 .S ALPBWARD=""
"RTN","ALPBUTL",164,0)
 .F  S ALPBWARD=$O(^ALPB(53.7,"AW",ALPBWARD)) Q:ALPBWARD=""  D
"RTN","ALPBUTL",165,0)
 ..I ALPBWARD=WARD D  Q
"RTN","ALPBUTL",166,0)
 ...S RESULTS(0)=RESULTS(0)+1,RESULTS(RESULTS(0))=ALPBWARD
"RTN","ALPBUTL",167,0)
 ..I ALPBWARD[WARD D
"RTN","ALPBUTL",168,0)
 ...S RESULTS(0)=RESULTS(0)+1,RESULTS(RESULTS(0))=ALPBWARD
"RTN","ALPBUTL",169,0)
 Q
"RTN","ALPBUTL",170,0)
 ;
"RTN","ALPBUTL",171,0)
OTYP(CODE) ; expand order type for printing...
"RTN","ALPBUTL",172,0)
 ; CODE = a character representing an order type
"RTN","ALPBUTL",173,0)
 ; returns expanded order type from ^DD(53.79,6,0)
"RTN","ALPBUTL",174,0)
 I $G(CODE)="" Q ""
"RTN","ALPBUTL",175,0)
 Q $S(CODE="U":"UNIT DOSE",CODE="V":"IV",CODE="P":"PENDING",1:CODE)
"RTN","ALPBUTL",176,0)
 ;
"RTN","ALPBUTL",177,0)
ORDS(IEN,DATE,RESULTS,CO,INCLIM) ; retrieve orders for a given patient... *73
"RTN","ALPBUTL",178,0)
 ; IEN  = patient's record number in file 53.7
"RTN","ALPBUTL",179,0)
 ; DATE = the date/time used to determine whether all or only current
"RTN","ALPBUTL",180,0)
 ;        orders are returned:
"RTN","ALPBUTL",181,0)
 ;        >passed as a date/time in FileMan internal format -- only orders
"RTN","ALPBUTL",182,0)
 ;          with a stop date/time equal to or greater than DATE are returned
"RTN","ALPBUTL",183,0)
 ;        >passed = "" then all orders are returned regardless of status
"RTN","ALPBUTL",184,0)
 ; returns RESULTS(order# ien) -- note:  RESULTS(0)=count of active orders
"RTN","ALPBUTL",185,0)
 ; *73 add 2 new input varaibles below
"RTN","ALPBUTL",186,0)
 ; CO     = Clinic name selected to match for return orders, if clinic
"RTN","ALPBUTL",187,0)
 ;          report requested.
"RTN","ALPBUTL",188,0)
 ; INCLIM = Include IM orders for a CO report request.  Y or N
"RTN","ALPBUTL",189,0)
 ;
"RTN","ALPBUTL",190,0)
 S CO=$G(CO),INCLIM=$G(INCLIM)   ;optional parameters
"RTN","ALPBUTL",191,0)
 I +$G(IEN)=0 S RESULTS(0)=0 Q
"RTN","ALPBUTL",192,0)
 N ALPBX,ALPBY,ORDERDAT,ORIEN,ORDERST,CLNAM
"RTN","ALPBUTL",193,0)
 S (ORDERIEN,RESULTS(0))=0
"RTN","ALPBUTL",194,0)
 F  S ORDERIEN=$O(^ALPB(53.7,IEN,2,ORDERIEN)) Q:'ORDERIEN  D
"RTN","ALPBUTL",195,0)
 .S ORDERDAT(0)=$G(^ALPB(53.7,IEN,2,ORDERIEN,0))
"RTN","ALPBUTL",196,0)
 .S ORDERDAT(1)=$G(^ALPB(53.7,IEN,2,ORDERIEN,1))
"RTN","ALPBUTL",197,0)
 .S ORDERDAT(3)=$G(^ALPB(53.7,IEN,2,ORDERIEN,3))
"RTN","ALPBUTL",198,0)
 .S ORDERDAT(4)=$G(^ALPB(53.7,IEN,2,ORDERIEN,4))
"RTN","ALPBUTL",199,0)
 .S ORDERST=$P($P(ORDERDAT(0),"^",3),"~")
"RTN","ALPBUTL",200,0)
 .;   *73 add CO logic below
"RTN","ALPBUTL",201,0)
 .S:CO]"" CLNAM=$P(ORDERDAT(0),U,5)          ;is a Clinic report
"RTN","ALPBUTL",202,0)
 .I CO]"",CLNAM]"",CO'=CLNAM K ORDERDAT Q    ;skip, not selected CLIN
"RTN","ALPBUTL",203,0)
 .I CO]"",CLNAM="",INCLIM="N" K ORDERDAT Q   ;skip IM recs
"RTN","ALPBUTL",204,0)
 .;
"RTN","ALPBUTL",205,0)
 .; is this order current?...
"RTN","ALPBUTL",206,0)
 .I $G(DATE)'=""&($P(ORDERDAT(1),"^",2)<$G(DATE)) K ORDERDAT Q
"RTN","ALPBUTL",207,0)
 .; if current, is it still active?...
"RTN","ALPBUTL",208,0)
 .I $G(DATE)'=""&(ORDERST'="CM")&(ORDERST'="ZS")&(ORDERST'="ZU") K ORDERDAT Q
"RTN","ALPBUTL",209,0)
 .S RESULTS(0)=RESULTS(0)+1
"RTN","ALPBUTL",210,0)
 .S RESULTS(ORDERIEN)=$P(ORDERDAT(0),"^")
"RTN","ALPBUTL",211,0)
 .S RESULTS("B",$P(ORDERDAT(0),"^"))=ORDERIEN
"RTN","ALPBUTL",212,0)
 .S RESULTS(ORDERIEN,1)=$S($P(ORDERDAT(3),"^")="V":"IV",$P(ORDERDAT(3),"^")="U":"UD",1:$P(ORDERDAT(3),"^"))
"RTN","ALPBUTL",213,0)
 .S RESULTS(ORDERIEN,2)=ORDERST
"RTN","ALPBUTL",214,0)
 .S RESULTS(ORDERIEN,3,0)=0
"RTN","ALPBUTL",215,0)
 .;S RESULTS(ORDERIEN,4)=$P($G(ORDERDAT(4)),"^",3)
"RTN","ALPBUTL",216,0)
 .S RESULTS(ORDERIEN,4)=$G(ORDERDAT(4))
"RTN","ALPBUTL",217,0)
 .I +$O(^ALPB(53.7,IEN,2,ORDERIEN,7,0)) D
"RTN","ALPBUTL",218,0)
 ..S ALPBX=0
"RTN","ALPBUTL",219,0)
 ..F  S ALPBX=$O(^ALPB(53.7,IEN,2,ORDERIEN,7,ALPBX)) Q:'ALPBX  D
"RTN","ALPBUTL",220,0)
 ...S ALPBY=RESULTS(ORDERIEN,3,0)+1
"RTN","ALPBUTL",221,0)
 ...S RESULTS(ORDERIEN,3,ALPBY)=$P(^ALPB(53.7,IEN,2,ORDERIEN,7,ALPBX,0),"^",2)
"RTN","ALPBUTL",222,0)
 ...S RESULTS(ORDERIEN,3,0)=ALPBY
"RTN","ALPBUTL",223,0)
 .I +$O(^ALPB(53.7,IEN,2,ORDERIEN,8,0)) D
"RTN","ALPBUTL",224,0)
 ..S ALPBX=0
"RTN","ALPBUTL",225,0)
 ..F  S ALPBX=$O(^ALPB(53.7,IEN,2,ORDERIEN,8,ALPBX)) Q:'ALPBX  D
"RTN","ALPBUTL",226,0)
 ...S ALPBY=RESULTS(ORDERIEN,3,0)+1
"RTN","ALPBUTL",227,0)
 ...S RESULTS(ORDERIEN,3,ALPBY)=$P(^ALPB(53.7,IEN,2,ORDERIEN,8,ALPBX,0),"^",2)_" (Additive)"
"RTN","ALPBUTL",228,0)
 ...S RESULTS(ORDERIEN,3,0)=ALPBY
"RTN","ALPBUTL",229,0)
 .I +$O(^ALPB(53.7,IEN,2,ORDERIEN,9,0)) D
"RTN","ALPBUTL",230,0)
 ..S ALPBX=0
"RTN","ALPBUTL",231,0)
 ..F  S ALPBX=$O(^ALPB(53.7,IEN,2,ORDERIEN,9,ALPBX)) Q:'ALPBX  D
"RTN","ALPBUTL",232,0)
 ...S ALPBY=RESULTS(ORDERIEN,3,0)+1
"RTN","ALPBUTL",233,0)
 ...S RESULTS(ORDERIEN,3,ALPBY)=$P(^ALPB(53.7,IEN,2,ORDERIEN,9,ALPBX,0),"^",2)_" (Solution)"
"RTN","ALPBUTL",234,0)
 ...S RESULTS(ORDERIEN,3,0)=ALPBY
"RTN","ALPBUTL",235,0)
 Q
"RTN","ALPBUTL",236,0)
 ;
"RTN","ALPBUTL",237,0)
DELPT(IEN) ; delete a patient's entire record...
"RTN","ALPBUTL",238,0)
 ; IEN = patient's record number in file 53.7
"RTN","ALPBUTL",239,0)
 N DA,DIK,X,Y
"RTN","ALPBUTL",240,0)
 S DA=IEN,DIK="^ALPB(53.7,"
"RTN","ALPBUTL",241,0)
 D ^DIK
"RTN","ALPBUTL",242,0)
 ; after deleting the patient, check for any error log
"RTN","ALPBUTL",243,0)
 ; entries and delete them...
"RTN","ALPBUTL",244,0)
 D CLEAN^ALPBUTL1(IEN)
"RTN","ALPBUTL",245,0)
 Q
"RTN","ALPBUTL",246,0)
 ;
"RTN","ALPBUTL",247,0)
DELORD(IEN,OIEN) ; delete an order from a patient's record...
"RTN","ALPBUTL",248,0)
 ; IEN  = patient's record number in file 53.7
"RTN","ALPBUTL",249,0)
 ; OIEN = order number's record number
"RTN","ALPBUTL",250,0)
 N DA,DIK,X,Y
"RTN","ALPBUTL",251,0)
 S DA=OIEN,DA(1)=IEN,DIK="^ALPB(53.7,"_DA(1)_",2,"
"RTN","ALPBUTL",252,0)
 D ^DIK
"RTN","ALPBUTL",253,0)
 Q
"RTN","ALPBUTL",254,0)
 ;
"RTN","ALPBUTL",255,0)
STATUS ; return last update date/time and count of any errors...
"RTN","ALPBUTL",256,0)
 N ALPBCNT,ALPBPARM
"RTN","ALPBUTL",257,0)
 S ALPBPARM=+$O(^ALPB(53.71,0))
"RTN","ALPBUTL",258,0)
 I ALPBPARM=0 W !,"NOTICE!  There is no entry in the BCMA BACKUP PARAMETERS FILE!" Q
"RTN","ALPBUTL",259,0)
 W !,"BCMA Backup System was last updated: ",$S($P($G(^ALPB(53.71,ALPBPARM,2)),"^")'="":$$FMTE^XLFDT($P(^ALPB(53.71,ALPBPARM,2),"^")),1:"UNKNOWN")
"RTN","ALPBUTL",260,0)
 S ALPBCNT=$$ERRCT^ALPBUTL2()
"RTN","ALPBUTL",261,0)
 I ALPBCNT>0 W !,"NOTICE! ",ALPBCNT_" filing error"_$S(ALPBCNT=1:" has",1:"s have")_" been logged."
"RTN","ALPBUTL",262,0)
 Q
"RTN","ALPBUTL",263,0)
 ;
"RTN","ALPBUTL",264,0)
CLINLIST(DTYPE) ; list of Clinics on file...
"RTN","ALPBUTL",265,0)
 ; DTYPE = 'C' for vertical (columnar) list
"RTN","ALPBUTL",266,0)
 ;         'L' for horizontal list
"RTN","ALPBUTL",267,0)
 I $G(DTYPE)="" S DTYPE="L"
"RTN","ALPBUTL",268,0)
 N ALPBCLIN,ALPTOTCL
"RTN","ALPBUTL",269,0)
 W !,"Clinics with BCMA Backup Data on this workstation:",!
"RTN","ALPBUTL",270,0)
 S ALPBCLIN=""
"RTN","ALPBUTL",271,0)
 F  S ALPBCLIN=$O(^ALPB(53.7,"AC",ALPBCLIN)) Q:ALPBCLIN=""  D
"RTN","ALPBUTL",272,0)
 .I DTYPE="L" D  Q
"RTN","ALPBUTL",273,0)
 ..I $X+$L(ALPBCLIN)>IOM W !
"RTN","ALPBUTL",274,0)
 ..W ALPBCLIN S ALPTOTCL=$G(ALPTOTCL)+1
"RTN","ALPBUTL",275,0)
 ..I $O(^ALPB(53.7,"AC",ALPBCLIN))'="" W ", "
"RTN","ALPBUTL",276,0)
 .W !?5,ALPBCLIN
"RTN","ALPBUTL",277,0)
 I '$D(^ALPB(53.7,"AC")) W !,"No Clinics on file",!
"RTN","ALPBUTL",278,0)
 Q
"RTN","ALPBUTL",279,0)
 ;
"RTN","ALPBUTL",280,0)
CLINSEL(CLIN,RESULTS) ; find a selected Clinic...
"RTN","ALPBUTL",281,0)
 ; CLIN    = a string representing a clinic input by the user
"RTN","ALPBUTL",282,0)
 ; RESULTS = an array passed by reference in which possible matches
"RTN","ALPBUTL",283,0)
 ;           are stored
"RTN","ALPBUTL",284,0)
 ; returns possible matches for the CLIN in RESULTS
"RTN","ALPBUTL",285,0)
 N ALPBCLIN,ALPBX
"RTN","ALPBUTL",286,0)
 S RESULTS(0)=0
"RTN","ALPBUTL",287,0)
 S ALPBCLIN=""
"RTN","ALPBUTL",288,0)
 F  S ALPBCLIN=$O(^ALPB(53.7,"AC",ALPBCLIN)) Q:ALPBCLIN=""  D
"RTN","ALPBUTL",289,0)
 .I ALPBCLIN=CLIN D  Q
"RTN","ALPBUTL",290,0)
 ..S RESULTS(0)=RESULTS(0)+1,RESULTS(RESULTS(0))=ALPBCLIN
"RTN","ALPBUTL",291,0)
 .I $E(ALPBCLIN,1,$L(CLIN))=CLIN D
"RTN","ALPBUTL",292,0)
 ..S RESULTS(0)=RESULTS(0)+1,RESULTS(RESULTS(0))=ALPBCLIN
"RTN","ALPBUTL",293,0)
 ; if a straight lookup failed, let's try making any alphas
"RTN","ALPBUTL",294,0)
 ; entered by the user uppercase and try it once more...
"RTN","ALPBUTL",295,0)
 I RESULTS(0)=0 D
"RTN","ALPBUTL",296,0)
 .S CLIN=$$UP^XLFSTR(CLIN)
"RTN","ALPBUTL",297,0)
 .S ALPBCLIN=""
"RTN","ALPBUTL",298,0)
 .F  S ALPBCLIN=$O(^ALPB(53.7,"AC",ALPBCLIN)) Q:ALPBCLIN=""  D
"RTN","ALPBUTL",299,0)
 ..I ALPBCLIN=CLIN D  Q
"RTN","ALPBUTL",300,0)
 ...S RESULTS(0)=RESULTS(0)+1,RESULTS(RESULTS(0))=ALPBCLIN
"RTN","ALPBUTL",301,0)
 ..I $E(ALPBCLIN,1,$L(CLIN))=CLIN D
"RTN","ALPBUTL",302,0)
 ...S RESULTS(0)=RESULTS(0)+1,RESULTS(RESULTS(0))=ALPBCLIN
"RTN","ALPBUTL",303,0)
 Q
"UP",53.7,53.702,-1)
53.7^2
"UP",53.7,53.702,0)
53.702
"VER")
8.0^22.0
"^DD",53.7,53.702,3.5,0)
CLINIC NAME^F^^0;5^K:$L(X)>30!($L(X)<2) X
"^DD",53.7,53.702,3.5,1,0)
^.1
"^DD",53.7,53.702,3.5,1,1,0)
53.7^AC
"^DD",53.7,53.702,3.5,1,1,1)
S ^ALPB(53.7,"AC",$E(X,1,30),DA(1),DA)=""
"^DD",53.7,53.702,3.5,1,1,2)
K ^ALPB(53.7,"AC",$E(X,1,30),DA(1),DA)
"^DD",53.7,53.702,3.5,1,1,"%D",0)
^^1^1^3130304^
"^DD",53.7,53.702,3.5,1,1,"%D",1,0)
Indexed by Clinic Name by Patient.
"^DD",53.7,53.702,3.5,1,1,"DT")
3120925
"^DD",53.7,53.702,3.5,3)
Answer must be 2-30 characters in length.
"^DD",53.7,53.702,3.5,21,0)
^^1^1^3130301^
"^DD",53.7,53.702,3.5,21,1,0)
This is the clinic name where the medication order was placed.
"^DD",53.7,53.702,3.5,"DT")
3130301
**END**
**END**
