Released PRC*5.1*121 SEQ #114
Extracted from mail message
**KIDS**:PRC*5.1*121^

**INSTALL NAME**
PRC*5.1*121
"BLD",5785,0)
PRC*5.1*121^IFCAP^0^3080908^y
"BLD",5785,1,0)
^^5^5^3080903^^
"BLD",5785,1,1,0)
1. NIF Filer Error Messages - change to send to Mail Group
"BLD",5785,1,2,0)
 
"BLD",5785,1,3,0)
2. Receiving error when using Logistics GUI Tool 
"BLD",5785,1,4,0)
 
"BLD",5785,1,5,0)
3. <UNDEFINED>AAC+151^PRCHAAC
"BLD",5785,4,0)
^9.64PA^^
"BLD",5785,6.3)
2
"BLD",5785,"ABPKG")
n
"BLD",5785,"KRN",0)
^9.67PA^8989.52^19
"BLD",5785,"KRN",.4,0)
.4
"BLD",5785,"KRN",.401,0)
.401
"BLD",5785,"KRN",.402,0)
.402
"BLD",5785,"KRN",.403,0)
.403
"BLD",5785,"KRN",.5,0)
.5
"BLD",5785,"KRN",.84,0)
.84
"BLD",5785,"KRN",3.6,0)
3.6
"BLD",5785,"KRN",3.8,0)
3.8
"BLD",5785,"KRN",9.2,0)
9.2
"BLD",5785,"KRN",9.8,0)
9.8
"BLD",5785,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",5785,"KRN",9.8,"NM",1,0)
PRCHITM^^0^B51005077
"BLD",5785,"KRN",9.8,"NM",2,0)
PRCHL4^^0^B45405594
"BLD",5785,"KRN",9.8,"NM",3,0)
PRCHAAC^^0^B50429384
"BLD",5785,"KRN",9.8,"NM","B","PRCHAAC",3)

"BLD",5785,"KRN",9.8,"NM","B","PRCHITM",1)

"BLD",5785,"KRN",9.8,"NM","B","PRCHL4",2)

"BLD",5785,"KRN",19,0)
19
"BLD",5785,"KRN",19,"NM",0)
^9.68A^^
"BLD",5785,"KRN",19.1,0)
19.1
"BLD",5785,"KRN",101,0)
101
"BLD",5785,"KRN",409.61,0)
409.61
"BLD",5785,"KRN",771,0)
771
"BLD",5785,"KRN",870,0)
870
"BLD",5785,"KRN",8989.51,0)
8989.51
"BLD",5785,"KRN",8989.52,0)
8989.52
"BLD",5785,"KRN",8994,0)
8994
"BLD",5785,"KRN","B",.4,.4)

"BLD",5785,"KRN","B",.401,.401)

"BLD",5785,"KRN","B",.402,.402)

"BLD",5785,"KRN","B",.403,.403)

"BLD",5785,"KRN","B",.5,.5)

"BLD",5785,"KRN","B",.84,.84)

"BLD",5785,"KRN","B",3.6,3.6)

"BLD",5785,"KRN","B",3.8,3.8)

"BLD",5785,"KRN","B",9.2,9.2)

"BLD",5785,"KRN","B",9.8,9.8)

"BLD",5785,"KRN","B",19,19)

"BLD",5785,"KRN","B",19.1,19.1)

"BLD",5785,"KRN","B",101,101)

"BLD",5785,"KRN","B",409.61,409.61)

"BLD",5785,"KRN","B",771,771)

"BLD",5785,"KRN","B",870,870)

"BLD",5785,"KRN","B",8989.51,8989.51)

"BLD",5785,"KRN","B",8989.52,8989.52)

"BLD",5785,"KRN","B",8994,8994)

"BLD",5785,"QUES",0)
^9.62^^
"BLD",5785,"REQB",0)
^9.611^3^3
"BLD",5785,"REQB",1,0)
PRC*5.1*63^2
"BLD",5785,"REQB",2,0)
PRC*5.1*103^2
"BLD",5785,"REQB",3,0)
PRC*5.1*79^2
"BLD",5785,"REQB","B","PRC*5.1*103",2)

"BLD",5785,"REQB","B","PRC*5.1*63",1)

"BLD",5785,"REQB","B","PRC*5.1*79",3)

"MBREQ")
0
"PKG",455,-1)
1^1
"PKG",455,0)
IFCAP^PRC^IFCAP System Files
"PKG",455,20,0)
^9.402P^^
"PKG",455,22,0)
^9.49I^1^1
"PKG",455,22,1,0)
5.1^3001012^3001019^68
"PKG",455,22,1,"PAH",1,0)
121^3080908
"PKG",455,22,1,"PAH",1,1,0)
^^5^5^3080908
"PKG",455,22,1,"PAH",1,1,1,0)
1. NIF Filer Error Messages - change to send to Mail Group
"PKG",455,22,1,"PAH",1,1,2,0)
 
"PKG",455,22,1,"PAH",1,1,3,0)
2. Receiving error when using Logistics GUI Tool 
"PKG",455,22,1,"PAH",1,1,4,0)
 
"PKG",455,22,1,"PAH",1,1,5,0)
3. <UNDEFINED>AAC+151^PRCHAAC
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","PRCHAAC")
0^3^B50429384^B50165629
"RTN","PRCHAAC",1,0)
PRCHAAC ;WIFO/CR-CREATE HL7 IFCAP MESSAGE FOR AUSTIN AUTOMATION CENTER ;2/22/05 10:50 AM
"RTN","PRCHAAC",2,0)
 ;;5.1;IFCAP;**79,121**;Oct 20, 2000;Build 2
"RTN","PRCHAAC",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCHAAC",4,0)
 ; This routine will gather FPDS data for the new report requested
"RTN","PRCHAAC",5,0)
 ; by the Austin Automation Center (AAC), create an HL7 message, and send
"RTN","PRCHAAC",6,0)
 ; it to the Austin server via the VistA HL7 package.
"RTN","PRCHAAC",7,0)
 ;
"RTN","PRCHAAC",8,0)
AAC ; Start FPDS report here: Options for Detailed PC orders, Delivery
"RTN","PRCHAAC",9,0)
 ; orders, and regular purchase orders created by a Purchasing Agent.
"RTN","PRCHAAC",10,0)
 ; The variable PRCHPO is defined by the calling routines.
"RTN","PRCHAAC",11,0)
 ;
"RTN","PRCHAAC",12,0)
 ; The following segments will be used in the outgoing HL7 message:
"RTN","PRCHAAC",13,0)
 ; MSH,MFI,MFE,CDM,PRC,ZPO.
"RTN","PRCHAAC",14,0)
 ; Message Type: MFN  Event Type: M01.
"RTN","PRCHAAC",15,0)
 ; The expected ACK from the AAC will consist of the following segments:
"RTN","PRCHAAC",16,0)
 ; MSH,MSA,MFI,MFA.
"RTN","PRCHAAC",17,0)
 ; Message Type: MFK  Event Type: M01.
"RTN","PRCHAAC",18,0)
 ;
"RTN","PRCHAAC",19,0)
 ; Get procurement detail for the purchase order.
"RTN","PRCHAAC",20,0)
 N PRCAAD,PRCAMT,PRCAT,PRCATP,PRCBT,PRCBZ,PRCCB,PRCCH,PRCCV,PRCDB,PRCDD,PRCDES,PRCDS,PRCDUZ,PRCEC,PRCECC,PRCEPA,PRCEPAC,PRCLEN,PRCMOP,PRCRN,PRCRNC,PRCSW,PRCVEN
"RTN","PRCHAAC",21,0)
 N PRCAID,PRCAM,PRCCAD,PRCCN,PRCPF,PRCH2237,PRCIDV,PRCPIID,PRCFSC,PRCFSCI,PRCPER,PRCPP,PRCTC,PRCCFG,PRCGFE,PRCOD,PRCOFC,PRCSPEC,PRCPT,PRCROOT
"RTN","PRCHAAC",22,0)
 N PRCEP,PRCEPC,PRCFAC,PRCFOC,PRCIEN,PRCLID,PRCMN,PRCMY,PRCNOF,PRCPAS,PRCPBC,PRCPD,PRCRM,PRCRMC,PRCRT,PRCSP,PRCSPC,PRCTSA,PRCTSAC,PRCUCD,PRCUV
"RTN","PRCHAAC",23,0)
 ;
"RTN","PRCHAAC",24,0)
 S U="^",PRCROOT=$P($G(^PRC(442,PRCHPO,0)),U,1),PRCROOT=$P(PRCROOT,"-")_$P(PRCROOT,"-",2)
"RTN","PRCHAAC",25,0)
 ; Check PO for FPDS data 
"RTN","PRCHAAC",26,0)
 I '$D(^PRC(442,PRCHPO,25))!('$D(^PRC(442,PRCHPO,9,1,0))) D EN^DDIOL("This PO is not required for FPDS transmission.") Q
"RTN","PRCHAAC",27,0)
 ;
"RTN","PRCHAAC",28,0)
 S PRCMOP=$P(^PRC(442,PRCHPO,0),U,2)
"RTN","PRCHAAC",29,0)
 S PRCMOP=$S(PRCMOP=25:"Y",1:"N")        ; if a PC order, flag it with Y
"RTN","PRCHAAC",30,0)
 ; Vendor pointer and name             
"RTN","PRCHAAC",31,0)
 S PRCPT=$P(^PRC(442,PRCHPO,1),U,1),PRCVEN=$P(^PRC(440,PRCPT,0),U,1)
"RTN","PRCHAAC",32,0)
 ; If the vendor has '&' in its name, replace it with 'AND'
"RTN","PRCHAAC",33,0)
 I PRCVEN["&" D
"RTN","PRCHAAC",34,0)
 . S PRCSPEC("&")="AND"
"RTN","PRCHAAC",35,0)
 . S PRCVEN=$$REPLACE^XLFSTR(PRCVEN,.PRCSPEC)
"RTN","PRCHAAC",36,0)
 ;
"RTN","PRCHAAC",37,0)
 S PRCDB=$P($G(^PRC(440,PRCPT,7)),U,12)  ; DUN & BRADSTREET #
"RTN","PRCHAAC",38,0)
 S PRCBT=$P(^PRC(440,PRCPT,2),U,3)       ; business type (size)
"RTN","PRCHAAC",39,0)
 ; Utimate Contract Value, Current Contract Value, and Dollars Obligated
"RTN","PRCHAAC",40,0)
 ; will equal the total amount of PO below.
"RTN","PRCHAAC",41,0)
 S PRCAMT=$P(^PRC(442,PRCHPO,0),U,15)    ; total amount of PO
"RTN","PRCHAAC",42,0)
 I $G(PRCAMT)=0 D EN^DDIOL("A PO worth $0 is not required for FPDS transmission.") Q
"RTN","PRCHAAC",43,0)
 ; As requested by the AAC rep, get the line item with the larget $$ and
"RTN","PRCHAAC",44,0)
 ; report its FSC, Contract # if there is one, and the first 50 chars of
"RTN","PRCHAAC",45,0)
 ; its description. Report only the TOTAL AMOUNT of PO, not the largest
"RTN","PRCHAAC",46,0)
 ; line item's amount.  
"RTN","PRCHAAC",47,0)
 ; 
"RTN","PRCHAAC",48,0)
 S PRCLID=$$LIDT^PRCHAAC3(PRCHPO)        ; get line item detail
"RTN","PRCHAAC",49,0)
 S PRCLEN=$P(PRCLID,U,3)                 ; line item description
"RTN","PRCHAAC",50,0)
 ; Strip any space in front of the line item description
"RTN","PRCHAAC",51,0)
 S PRCDES=$$TRIM^XLFSTR(PRCLEN,"L"," ")
"RTN","PRCHAAC",52,0)
 ; Referenced Proc. Identifier (PIID) = contract number
"RTN","PRCHAAC",53,0)
 S PRCCN=$P($G(PRCLID),U,5)              ; contract number if available
"RTN","PRCHAAC",54,0)
 S PRCFSCI=$P($G(PRCLID),U,6)            ; internal FSC code or PSC code
"RTN","PRCHAAC",55,0)
 S:$G(PRCFSCI)'="" PRCFSC=$P(^PRC(441.2,PRCFSCI,0),U,1)  ; external FSC value
"RTN","PRCHAAC",56,0)
 ;
"RTN","PRCHAAC",57,0)
 ; Get the purchase order's date. This is the 'effective start date.' 
"RTN","PRCHAAC",58,0)
 I $D(^PRC(442,PRCHPO,1)) D                 ; all purchase orders
"RTN","PRCHAAC",59,0)
 . S PRCOD=$P(^PRC(442,PRCHPO,1),U,15)      ; purchase order date
"RTN","PRCHAAC",60,0)
 . S PRCOD=$$FMTHL7^XLFDT(PRCOD)            ; date in HL7 format
"RTN","PRCHAAC",61,0)
 ;  
"RTN","PRCHAAC",62,0)
 ; Date signed: if the PO is a Detailed PC order, or a delivery order:
"RTN","PRCHAAC",63,0)
 I $P(^PRC(442,PRCHPO,23),U,11)'="" D
"RTN","PRCHAAC",64,0)
 . S PRCH2237=$P(^PRC(442,PRCHPO,13,0),U,3)
"RTN","PRCHAAC",65,0)
 . S PRCDS=$P($P(^PRC(442,PRCHPO,13,PRCH2237,0),U,4),".",1)
"RTN","PRCHAAC",66,0)
 . S PRCDS=$$FMTHL7^XLFDT(PRCDS)       ; date signed (HL7 format)
"RTN","PRCHAAC",67,0)
 ;
"RTN","PRCHAAC",68,0)
 ; Date signed: if the Detailed PC order is from a Purchasing Agent:
"RTN","PRCHAAC",69,0)
 I $P(^PRC(442,PRCHPO,0),U,2)=25,$P(^PRC(442,PRCHPO,23),U,11)="" D
"RTN","PRCHAAC",70,0)
 . S PRCDS=$P($P(^PRC(442,PRCHPO,12),U,3),".",1) ; validation date/time
"RTN","PRCHAAC",71,0)
 . S PRCDS=$$FMTHL7^XLFDT(PRCDS)        ; date signed (HL7 format)
"RTN","PRCHAAC",72,0)
 ;
"RTN","PRCHAAC",73,0)
 ; Date signed: for any other PO:
"RTN","PRCHAAC",74,0)
 I $D(^PRC(442,PRCHPO,10)) D
"RTN","PRCHAAC",75,0)
 . S PRCDS=$P($P(^PRC(442,PRCHPO,10,1,0),U,6),".",1)  ; date signed
"RTN","PRCHAAC",76,0)
 . S PRCDS=$$FMTHL7^XLFDT(PRCDS)            ; date signed (HL7 format)
"RTN","PRCHAAC",77,0)
 ;
"RTN","PRCHAAC",78,0)
 ; The delivery date is stored at the same node for all orders. This date
"RTN","PRCHAAC",79,0)
 ; is the same as 'effective end date'.
"RTN","PRCHAAC",80,0)
 S PRCDD=$P(^PRC(442,PRCHPO,0),U,10)
"RTN","PRCHAAC",81,0)
 S PRCDD=$$FMTHL7^XLFDT(PRCDD)           ; convert to HL7 format
"RTN","PRCHAAC",82,0)
 ;
"RTN","PRCHAAC",83,0)
 S PRCPD=$G(^PRC(442,PRCHPO,25))         ; po details new FPDS data node
"RTN","PRCHAAC",84,0)
 S PRCEC=$P($G(PRCPD),U,12)              ; extent competed pointer
"RTN","PRCHAAC",85,0)
 S:$G(PRCEC)'="" PRCECC=$P(^PRCD(420.53,+PRCEC,0),U,1) ; extent competed code
"RTN","PRCHAAC",86,0)
 S PRCRN=$P($G(PRCPD),U,1)               ; reason not competed pointer
"RTN","PRCHAAC",87,0)
 S:$G(PRCRN)'="" PRCRNC=$P(^PRCD(420.51,+PRCRN,0),U,1) ; reason not competed code
"RTN","PRCHAAC",88,0)
 S PRCEPA=$P($G(PRCPD),U,10)            ; EPA designated product pointer
"RTN","PRCHAAC",89,0)
 S PRCEPAC=$P($G(^PRCD(420.55,+PRCEPA,0)),U,1) ; EPA code
"RTN","PRCHAAC",90,0)
 S PRCPP=$P(PRCPD,U,15)                 ; place of perf. this station?
"RTN","PRCHAAC",91,0)
 S PRCPF=$P(PRCPD,U,16)                 ; place of performance
"RTN","PRCHAAC",92,0)
 S PRCCB=$P(PRCPD,U,11)                 ; contract bundling
"RTN","PRCHAAC",93,0)
 S PRCDUZ=$P(^PRC(442,PRCHPO,1),U,10)   ; pointer PA/PPM/Authorized Buyer
"RTN","PRCHAAC",94,0)
 ; Contracting officer's name in format 'last_name^first_name'
"RTN","PRCHAAC",95,0)
 S PRCPER=PRCDUZ_U_$P($P(^VA(200,PRCDUZ,0),U,1),",",1)_U_$P($P(^VA(200,PRCDUZ,0),U,1),",",2)
"RTN","PRCHAAC",96,0)
 ;
"RTN","PRCHAAC",97,0)
 ; By agreement with the requestor, the following will be hard-coded
"RTN","PRCHAAC",98,0)
 ; values and will not be stored in IFCAP:
"RTN","PRCHAAC",99,0)
 ; GFE (Government Furnished Eqmt) = 'N'
"RTN","PRCHAAC",100,0)
 S PRCGFE="N"
"RTN","PRCHAAC",101,0)
 ; Type of Contract = 'J'
"RTN","PRCHAAC",102,0)
 S PRCTC="J"
"RTN","PRCHAAC",103,0)
 ; Contract Funded by Foreign Gov. = 'N'
"RTN","PRCHAAC",104,0)
 S PRCCFG="N"
"RTN","PRCHAAC",105,0)
 ; Business Size = 'Small', 'Large', or 'Other'
"RTN","PRCHAAC",106,0)
 S PRCBZ=$S(PRCBT=1:"SMALL",PRCBT=2:"LARGE",1:"OTHER")
"RTN","PRCHAAC",107,0)
 ; Synopsis Waiver = 'N'
"RTN","PRCHAAC",108,0)
 S PRCSW="N"
"RTN","PRCHAAC",109,0)
 ; Agency Identifier = 3600
"RTN","PRCHAAC",110,0)
 S PRCAID=3600
"RTN","PRCHAAC",111,0)
 ; Contracting Agency Code = 3600
"RTN","PRCHAAC",112,0)
 S PRCCAD=3600
"RTN","PRCHAAC",113,0)
 ; Contracting Office Code = Station# preceeded by'00'
"RTN","PRCHAAC",114,0)
 S PRCOFC="00"_$E(PRCROOT,1,3)
"RTN","PRCHAAC",115,0)
 ; Fee paid for use of Indefinite Delivery Vehicle (IDV) = $0
"RTN","PRCHAAC",116,0)
 S PRCIDV=0
"RTN","PRCHAAC",117,0)
 ; Procurement identifier
"RTN","PRCHAAC",118,0)
 S PRCPIID="V"_$E(PRCROOT,1,3)       ; always "V"+Station Number
"RTN","PRCHAAC",119,0)
 ; End of hard-coded values. The rest of values come from the PO
"RTN","PRCHAAC",120,0)
 ; 
"RTN","PRCHAAC",121,0)
 ; By the HL7 Standard, the following will be defined:
"RTN","PRCHAAC",122,0)
 ; Primary Key Value for segs MFE, CDM, and PRC: 'V'_Station#_PO Number.
"RTN","PRCHAAC",123,0)
 ; Charge Description Short, CDM seg: 'PROCUREMENT DETAIL FROM IFCAP'.
"RTN","PRCHAAC",124,0)
 ; 
"RTN","PRCHAAC",125,0)
 S PRCAAD=$P(PRCPD,U,4)                    ; alternative advertising
"RTN","PRCHAAC",126,0)
 S PRCATP=$P(^PRC(442,PRCHPO,1),U,7)       ; pointer for award type
"RTN","PRCHAAC",127,0)
 S PRCAT=$P($G(^PRCD(420.8,+PRCATP,0)),U,1)
"RTN","PRCHAAC",128,0)
 I "467B"[(PRCAT) S PRCAT="C"              ; delivery orders (contracts)
"RTN","PRCHAAC",129,0)
 I "25"[(PRCAT) S PRCAT="B"                ; open market orders
"RTN","PRCHAAC",130,0)
 ;
"RTN","PRCHAAC",131,0)
 ; Get information for the record type
"RTN","PRCHAAC",132,0)
 S PRCRT=+$P(^PRC(442,PRCHPO,7),U,2)        ; supply status order
"RTN","PRCHAAC",133,0)
 I PRCRT<20 D EN^DDIOL("This PO does not qualify for FPDS transmission") Q
"RTN","PRCHAAC",134,0)
 S PRCIEN=0 F  S PRCIEN=$O(^PRCD(442.3,PRCIEN)) Q:'PRCIEN  D
"RTN","PRCHAAC",135,0)
 . I $P(^PRCD(442.3,PRCIEN,0),U,2)=PRCRT D
"RTN","PRCHAAC",136,0)
 .. I $P(^PRCD(442.3,PRCIEN,0),U,1)'["Amended" S PRCRT="A" ; award
"RTN","PRCHAAC",137,0)
 .. I $P(^PRCD(442.3,PRCIEN,0),U,1)["Amended" S PRCRT="M" ; modification
"RTN","PRCHAAC",138,0)
 .. I $P(^PRCD(442.3,PRCIEN,0),U,1)["Cancelled" S PRCRT="D" ; deletion (cancellation)
"RTN","PRCHAAC",139,0)
 S PRCSP=$P(PRCPD,U,5)                  ; solicitation procedure pointer
"RTN","PRCHAAC",140,0)
 S PRCSPC=$P($G(^PRCD(420.52,+PRCSP,0)),U,1) ; solicitation proc. code
"RTN","PRCHAAC",141,0)
 S PRCEP=$P(PRCPD,U,6)               ; evaluated preference pointer
"RTN","PRCHAAC",142,0)
 S PRCEPC=$P($G(^PRCD(420.54,+PRCEP,0)),U,1) ; evaluated pref. code
"RTN","PRCHAAC",143,0)
 S PRCFAC=$P(PRCPD,U,7)              ; funding agency code
"RTN","PRCHAAC",144,0)
 S PRCFOC=$P(PRCPD,U,8)              ; funding agency office code
"RTN","PRCHAAC",145,0)
 S PRCMY=$P(PRCPD,U,9)               ; multiyear contract
"RTN","PRCHAAC",146,0)
 S PRCPAS=$P(PRCPD,U,3)              ; pre award synopsis
"RTN","PRCHAAC",147,0)
 S PRCNOF=$P(PRCPD,U,2)              ; number of offers
"RTN","PRCHAAC",148,0)
 S PRCUV=PRCAMT                      ; ultimate contract value
"RTN","PRCHAAC",149,0)
 S PRCCV=PRCAMT                      ; current contract value
"RTN","PRCHAAC",150,0)
 S PRCTSA=$P(^PRC(442,PRCHPO,9,1,0),U,5) ; type set aside = pref. program
"RTN","PRCHAAC",151,0)
 S PRCTSAC=$P(^PRCD(420.6,+PRCTSA,0),U,1) ; type set aside code
"RTN","PRCHAAC",152,0)
 S PRCPBC=$P(PRCPD,U,13)             ; perf. based service contract
"RTN","PRCHAAC",153,0)
 S PRCCH=$P(PRCPD,U,14)              ; Clinger Cohen Act
"RTN","PRCHAAC",154,0)
 S PRCUCD=PRCDD                      ; ultimate completion date
"RTN","PRCHAAC",155,0)
 ; See if we have an amended order - authority = reason for amendment
"RTN","PRCHAAC",156,0)
 I $D(^PRC(442,PRCHPO,6,0)) S PRCAM=1 D
"RTN","PRCHAAC",157,0)
 . S PRCMN=$P(^PRC(442,PRCHPO,6,0),U,3) ; last amendment = modification #
"RTN","PRCHAAC",158,0)
 . S PRCRM=$P(^PRC(442,PRCHPO,6,+PRCMN,0),U,4) ; reason for mod. pointer
"RTN","PRCHAAC",159,0)
 . I 'PRCRM S PRCRMC="" Q
"RTN","PRCHAAC",160,0)
 . S PRCRMC=$P(^PRCD(442.2,+PRCRM,0),U,1) ; reason mod. code desc.
"RTN","PRCHAAC",161,0)
 . S PRCRMC=$S(PRCRMC="A":"D",PRCRMC="B":"M",PRCRMC="C":"B",PRCRMC="D":"D",PRCRMC="E":"N",1:"")
"RTN","PRCHAAC",162,0)
 G ^PRCHAAC1
"RTN","PRCHITM")
0^1^B51005077^B50914708
"RTN","PRCHITM",1,0)
PRCHITM ;WOIFO/LKG-ITEM UPDATE FROM NIF ;11/15/04  13:02
"RTN","PRCHITM",2,0)
V ;;5.1;IFCAP;**63,121**;Oct 20, 2000;Build 2
"RTN","PRCHITM",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCHITM",4,0)
 Q
"RTN","PRCHITM",5,0)
EN ;Entry for server invoked filer
"RTN","PRCHITM",6,0)
 S PRCERRC=0
"RTN","PRCHITM",7,0)
 ; loading ^XTMP with 888 transaction from MailMan message
"RTN","PRCHITM",8,0)
 F  X XMREC Q:XMER<0!($E(XMRG,1,4)="ISA^")
"RTN","PRCHITM",9,0)
 I XMER<0 G EXIT
"RTN","PRCHITM",10,0)
 S PRCTXN=$P(XMRG,U,14)
"RTN","PRCHITM",11,0)
 S PRCHNODE="PRCHITM;"_PRCTXN K ^XTMP(PRCHNODE)
"RTN","PRCHITM",12,0)
 ; set up ^XTMP header node including automated purge date
"RTN","PRCHITM",13,0)
 S DT=$$DT^XLFDT,X1=DT,X2=10 D C^%DTC S ^XTMP(PRCHNODE,0)=X_"^"_DT_"^"_"NIF ITEM UPDATE"
"RTN","PRCHITM",14,0)
 S PRCSUB=1,^XTMP(PRCHNODE,1,PRCSUB)=XMRG
"RTN","PRCHITM",15,0)
 F  X XMREC Q:XMER<0!($E(XMRG,1,4)="IEA^")  D
"RTN","PRCHITM",16,0)
 . S PRCSUB=PRCSUB+1,^XTMP(PRCHNODE,1,PRCSUB)=XMRG
"RTN","PRCHITM",17,0)
 I XMER<0 D ERR("IEA segment is missing.") G EXIT
"RTN","PRCHITM",18,0)
 S PRCSUB=PRCSUB+1,^XTMP(PRCHNODE,1,PRCSUB)=XMRG
"RTN","PRCHITM",19,0)
 ; processing data
"RTN","PRCHITM",20,0)
RESTART ;Restart filer with data from ^XTMP global
"RTN","PRCHITM",21,0)
 S PRCX=$G(^XTMP(PRCHNODE,1,1)) I $P(PRCX,U)'="ISA" D ERR("ISA segment is missing.") G EXIT
"RTN","PRCHITM",22,0)
 S PRCY=$P(PRCX,U,7) I $TR(PRCY," ")'="36001200NIF" D ERR("Interchange Sender ID '"_PRCY_"' is invalid.") G EXIT
"RTN","PRCHITM",23,0)
 S PRCY=$P(PRCX,U,9) I $TR(PRCY," ")'="IFCAPNIF" D ERR("Interchange Receiver ID '"_PRCY_"' is invalid.") G EXIT
"RTN","PRCHITM",24,0)
 S PRCX=$G(^XTMP(PRCHNODE,1,2)) I $P(PRCX,U)'="ST" D ERR("ST segment is missing.") G EXIT
"RTN","PRCHITM",25,0)
 I $P(PRCX,U,2)'="888" D ERR("Transaction is not the 888.") G EXIT
"RTN","PRCHITM",26,0)
 S PRCX=$G(^XTMP(PRCHNODE,1,3)) I $P(PRCX,U)'="N1" D ERR("N1 segment is missing.") G EXIT
"RTN","PRCHITM",27,0)
 I $P(PRCX,U,3)'="NIF" D ERR("Source is not the National Item File database.") G EXIT
"RTN","PRCHITM",28,0)
 S Y=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99) I $P(PRCX,U,5)'=Y D ERR("Intended recipient station is "_$P(PRCX,U,5)_", not "_Y_".") G EXIT
"RTN","PRCHITM",29,0)
 I $P(PRCX,U,7)'="KA" D ERR("Intended recipient application is not IFCAP's ITEM MASTER file.") G EXIT
"RTN","PRCHITM",30,0)
 S PRCSUB=6 I $P($G(^XTMP(PRCHNODE,1,PRCSUB)),U)'="G39" D ERR("Item characteristics node 'G39' is missing.") G EXIT
"RTN","PRCHITM",31,0)
PROCITM ;Process items
"RTN","PRCHITM",32,0)
 S PRCX=$G(^XTMP(PRCHNODE,1,PRCSUB))
"RTN","PRCHITM",33,0)
 I $P(PRCX,U,24)'="ZZ" D ERR("The G39 segment for NIF Item #"_$P(PRCX,U,25)_" is defective.") G EXIT
"RTN","PRCHITM",34,0)
 S PRCIEN=$P(PRCX,U,4),PRCNIF=$P(PRCX,U,25)
"RTN","PRCHITM",35,0)
 I PRCNIF?1.N D
"RTN","PRCHITM",36,0)
 . I PRCIEN?1.N D
"RTN","PRCHITM",37,0)
 . . ; updating IMF entry specified by IMF Number in G39 segment
"RTN","PRCHITM",38,0)
 . . I '$$FIND1^DIC(441,"","XQ","`"_PRCIEN,"","","PRCE") D ERR("Item Master Number "_PRCIEN_" does not exist.") Q
"RTN","PRCHITM",39,0)
 . . K PRCE I $$GET1^DIQ(441,PRCIEN_",",16,"I","","PRCE") D ERR("Item Master Number "_PRCIEN_" is inactive, so it will not be updated.") Q
"RTN","PRCHITM",40,0)
 . . S PRCLOCK=0 F PRCI=1:1:20 L +^PRC(441,PRCIEN):30 I $T S PRCLOCK=1 Q
"RTN","PRCHITM",41,0)
 . . I 'PRCLOCK D ERR("Filer was unable to lock Item Master Number "_PRCIEN_"/NIF Item #"_PRCNIF_".") Q
"RTN","PRCHITM",42,0)
 . . ; filing NIF Item #
"RTN","PRCHITM",43,0)
 . . K PRCRR,PRCE S PRCRR(441,PRCIEN_",",51)=PRCNIF D FILE^DIE("E","PRCRR","PRCE")
"RTN","PRCHITM",44,0)
 . . I $D(PRCE("DIERR")) S PRCY=0 F  S PRCY=$O(PRCE("DIERR",1,"TEXT",PRCY)) Q:PRCY'>0  D ERR("Item Master Number "_PRCIEN_": "_PRCE("DIERR",1,"TEXT",PRCY))
"RTN","PRCHITM",45,0)
 . . K PRCRR,PRCE
"RTN","PRCHITM",46,0)
 . . S PRCSUB=$O(^XTMP(PRCHNODE,1,PRCSUB))
"RTN","PRCHITM",47,0)
 . . I PRCSUB="" D ERR("No descriptions exist for NIF Item Number "_PRCNIF_".") L -^PRC(441,PRCIEN) Q
"RTN","PRCHITM",48,0)
 . . D DESC(PRCIEN,1) L -^PRC(441,PRCIEN)
"RTN","PRCHITM",49,0)
 . . I $O(^PRCP(445,"AH",PRCIEN,""))]"" D BLDSEG^PRCPHLFM(3,PRCIEN,0) ;update supply stations
"RTN","PRCHITM",50,0)
 . I PRCIEN'?1.N D
"RTN","PRCHITM",51,0)
 . . ; updating all IMF entries with specified NIF Item Number
"RTN","PRCHITM",52,0)
 . . K PRCE,PRCRR
"RTN","PRCHITM",53,0)
 . . D FIND^DIC(441,"","@","XQ",PRCNIF,"","I","","","PRCRR","PRCE")
"RTN","PRCHITM",54,0)
 . . I '$D(PRCRR("DILIST",2)) D ERR("No entry was found with NIF Item #"_PRCNIF_".") Q
"RTN","PRCHITM",55,0)
 . . S PRCSUB=$O(^XTMP(PRCHNODE,1,PRCSUB)),PRCZ=PRCSUB
"RTN","PRCHITM",56,0)
 . . I PRCSUB="" D ERR("No descriptions exist for NIF Item Number "_PRCNIF_".") Q
"RTN","PRCHITM",57,0)
 . . K PRCL M PRCL=PRCRR("DILIST",2) ; save list of iens
"RTN","PRCHITM",58,0)
 . . S PRCCTR=0 F  S PRCCTR=$O(PRCL(PRCCTR)) Q:PRCCTR=""  D
"RTN","PRCHITM",59,0)
 . . . S PRCIEN=PRCL(PRCCTR)
"RTN","PRCHITM",60,0)
 . . . K PRCE I $$GET1^DIQ(441,PRCIEN_",",16,"I","","PRCE") D ERR("Item Master Number "_PRCIEN_" is inactive, so it will not be updated.") Q
"RTN","PRCHITM",61,0)
 . . . S PRCLOCK=0 F PRCI=1:1:20 L +^PRC(441,PRCIEN):30 I $T S PRCLOCK=1 Q
"RTN","PRCHITM",62,0)
 . . . I 'PRCLOCK D ERR("Filer was unable to lock Item Master Number "_PRCIEN_"/NIF Item #"_PRCNIF_".") Q
"RTN","PRCHITM",63,0)
 . . . S PRCSUB=PRCZ D DESC(PRCIEN,0) L -^PRC(441,PRCIEN)
"RTN","PRCHITM",64,0)
 . . . I $O(^PRCP(445,"AH",PRCIEN,""))]"" D BLDSEG^PRCPHLFM(3,PRCIEN,0) ;update supply stations
"RTN","PRCHITM",65,0)
 . . K PRCRR,PRCE,PRCL,PRCZ
"RTN","PRCHITM",66,0)
 I PRCNIF'?1.N D ERR("NIF Item Number is missing for Item Master Number "_PRCIEN_".")
"RTN","PRCHITM",67,0)
NEXT F  S PRCSUB=$O(^XTMP(PRCHNODE,1,PRCSUB)) Q:PRCSUB=""  S PRCX=$G(^(PRCSUB)) Q:"^G39^SE^"[("^"_$P(PRCX,U)_"^")
"RTN","PRCHITM",68,0)
 G PROCITM:$P(PRCX,U)="G39"
"RTN","PRCHITM",69,0)
EXIT I $D(PRCHNODE) D
"RTN","PRCHITM",70,0)
 . ; send message if errors
"RTN","PRCHITM",71,0)
 . I $D(^XTMP(PRCHNODE,"ERR")) D
"RTN","PRCHITM",72,0)
 . . N XMDUZ,XMMG,XMSUB,XMTEXT,XMY,XMZ
"RTN","PRCHITM",73,0)
 . . S XMSUB="Item Filing Errors for Interchange Control #"_PRCTXN
"RTN","PRCHITM",74,0)
 . . S XMDUZ="Master Item File Updater",XMTEXT="^XTMP(PRCHNODE,""ERR"","
"RTN","PRCHITM",75,0)
 . . S XMY("G.ISM")="",XMY("VHA NIF Maintenance Office@va.gov")=""
"RTN","PRCHITM",76,0)
 . . D ^XMD
"RTN","PRCHITM",77,0)
 . ; if no errors delete ^XTMP nodes when done
"RTN","PRCHITM",78,0)
 . I '$D(^XTMP(PRCHNODE,"ERR")) K ^XTMP(PRCHNODE)
"RTN","PRCHITM",79,0)
 K PRCCTR,PRCE,PRCERRC,PRCI,PRCIEN,PRCL,PRCLOCK,PRCNIF,PRCHNODE,PRCRR,PRCSUB,PRCTXN,PRCX,PRCY,PRCZ,XMPOS,X,X1,X2,XMER,XMREC,XMRG,Y
"RTN","PRCHITM",80,0)
 ; delete MailMan message from server basket
"RTN","PRCHITM",81,0)
 I $D(XMZ) S XMSER="S."_XQSOP D REMSBMSG^XMA1C
"RTN","PRCHITM",82,0)
 Q
"RTN","PRCHITM",83,0)
DESC(PRCDA,PRCFLG) ;File Short and Extended Descriptions
"RTN","PRCHITM",84,0)
 N PRCDES
"RTN","PRCHITM",85,0)
 S PRCX=$G(^XTMP(PRCHNODE,1,PRCSUB))
"RTN","PRCHITM",86,0)
 I $P(PRCX,U)'="G69" D ERR("No descriptions exist for NIF Item Number "_PRCNIF_".") Q
"RTN","PRCHITM",87,0)
 S X=$P(PRCX,U,2) X ^%ZOSF("UPPERCASE") S PRCDES=Y
"RTN","PRCHITM",88,0)
 I PRCDES'="" D
"RTN","PRCHITM",89,0)
 . ; file NIF version of short description, but first save off
"RTN","PRCHITM",90,0)
 . I PRCFLG,$L($P($G(^PRC(441,PRCDA,9)),"^"))=0 D  I $D(PRCE("DIERR")) K PRCE,PRCRR Q
"RTN","PRCHITM",91,0)
 . . N PRCDESO S PRCDESO=$P($G(^PRC(441,PRCDA,0)),"^",2)
"RTN","PRCHITM",92,0)
 . . K PRCRR,PRCE S PRCRR(441,PRCDA_",",52)=PRCDESO
"RTN","PRCHITM",93,0)
 . . D FILE^DIE("E","PRCRR","PRCE")
"RTN","PRCHITM",94,0)
 . . I $D(PRCE("DIERR")) S PRCY=0 F  S PRCY=$O(PRCE("DIERR",1,"TEXT",PRCY)) Q:PRCY'>0  D ERR("Item Master Number "_PRCDA_": "_PRCE("DIERR",1,"TEXT",PRCY))
"RTN","PRCHITM",95,0)
 . . I $D(PRCE("DIERR")) K PRCRR Q
"RTN","PRCHITM",96,0)
 . . K PRCRR,PRCERR S PRCDESO=$E(PRCDESO,1,36)
"RTN","PRCHITM",97,0)
 . . I '$$FIND1^DIC(441.05,","_PRCDA_",","X",PRCDESO,"","","PRCE") D
"RTN","PRCHITM",98,0)
 . . . S PRCRR(441.05,"+1,"_PRCDA_",",.01)=PRCDESO D UPDATE^DIE("E","PRCRR","","PRCERR")
"RTN","PRCHITM",99,0)
 . . . I $D(PRCERR("DIERR")) S PRCY=0 F  S PRCY=$O(PRCERR("DIERR",1,"TEXT",PRCY)) Q:PRCY'>0  D ERR("Item Master Number "_PRCDA_": "_PRCERR("DIERR",1,"TEXT",PRCY))
"RTN","PRCHITM",100,0)
 . . . K PRCRR,PRCERR
"RTN","PRCHITM",101,0)
 . K PRCRR,PRCE S PRCRR(441,PRCDA_",",.05)=PRCDES D FILE^DIE("E","PRCRR","PRCE")
"RTN","PRCHITM",102,0)
 . I $D(PRCE("DIERR")) S PRCY=0 F  S PRCY=$O(PRCE("DIERR",1,"TEXT",PRCY)) Q:PRCY'>0  D ERR("Item Master Number "_PRCDA_": "_PRCE("DIERR",1,"TEXT",PRCY))
"RTN","PRCHITM",103,0)
 . K PRCRR,PRCE
"RTN","PRCHITM",104,0)
 ; save off prior description during first NIF import
"RTN","PRCHITM",105,0)
 ; if save fails, don't overwrite existing description with NIF extended description
"RTN","PRCHITM",106,0)
 I PRCFLG,$P($G(^PRC(441,PRCDA,8,0)),U,4)'>0 D  I $D(PRCE("DIERR")) K PRCE Q
"RTN","PRCHITM",107,0)
 . K PRCE D WP^DIE(441,PRCDA_",",50,"","^PRC(441,PRCDA,1)","PRCE")
"RTN","PRCHITM",108,0)
 . I $D(PRCE("DIERR")) S PRCY=0 F  S PRCY=$O(PRCE("DIERR",1,"TEXT",PRCY)) Q:PRCY'>0  D ERR("Item Master Number "_PRCDA_": "_PRCE("DIERR",1,"TEXT",PRCY))
"RTN","PRCHITM",109,0)
 ; extract extended description
"RTN","PRCHITM",110,0)
 S PRCI=0 K PRCY
"RTN","PRCHITM",111,0)
 F  S PRCSUB=$O(^XTMP(PRCHNODE,1,PRCSUB)) Q:PRCSUB=""  S PRCX=$G(^XTMP(PRCHNODE,1,PRCSUB)) Q:$P(PRCX,U)'="G69"  D
"RTN","PRCHITM",112,0)
 . S PRCI=PRCI+1,PRCY(PRCI)=$P($G(^XTMP(PRCHNODE,1,PRCSUB)),U,2)
"RTN","PRCHITM",113,0)
 I PRCI'>0 D ERR("No extended description exists for NIF Item Number "_PRCNIF_".")
"RTN","PRCHITM",114,0)
 I PRCI D
"RTN","PRCHITM",115,0)
 . ; file NIF extended description in description field
"RTN","PRCHITM",116,0)
 . K PRCE D WP^DIE(441,PRCDA_",",.1,"","PRCY","PRCE")
"RTN","PRCHITM",117,0)
 . K PRCY
"RTN","PRCHITM",118,0)
 . I $D(PRCE("DIERR")) S PRCY=0 F  S PRCY=$O(PRCE("DIERR",1,"TEXT",PRCY)) Q:PRCY'>0  D ERR("Item Master Number "_PRCDA_": "_PRCE("DIERR",1,"TEXT",PRCY))
"RTN","PRCHITM",119,0)
 . K PRCE
"RTN","PRCHITM",120,0)
 S PRCSUB=$O(^XTMP(PRCHNODE,1,PRCSUB),-1)
"RTN","PRCHITM",121,0)
 Q
"RTN","PRCHITM",122,0)
ERR(PRCMSG) ;Error processing
"RTN","PRCHITM",123,0)
 S PRCERRC=PRCERRC+1 S ^XTMP(PRCHNODE,"ERR",PRCERRC)=PRCMSG
"RTN","PRCHITM",124,0)
 Q
"RTN","PRCHL4")
0^2^B45405594^B44518310
"RTN","PRCHL4",1,0)
PRCHL4 ;VACO/HNC/VAC - REMOTE PROCEDURE, LIST LOGISTICS DATA FILE 442 ; 4/17/07 3:47pm
"RTN","PRCHL4",2,0)
 ;;5.1;IFCAP;**103,121**;Oct 20, 2000;Build 2
"RTN","PRCHL4",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified
"RTN","PRCHL4",4,0)
 ;DBIA# 4345 giving permission to reference Prosthetics data
"RTN","PRCHL4",5,0)
 ;hnc - Aug 21, 2006 add item detail to main grid
"RTN","PRCHL4",6,0)
 ;VAC - Set limit on 80 po line items
"RTN","PRCHL4",7,0)
 ;
"RTN","PRCHL4",8,0)
 ;RESULTS passed to broker in ^TMP($J,
"RTN","PRCHL4",9,0)
 ;delimited by ^
"RTN","PRCHL4",10,0)
 ;piece 1 = .1 date; display 2
"RTN","PRCHL4",11,0)
 ;piece 2 = 91 cost; display 5
"RTN","PRCHL4",12,0)
 ;piece 3 = 19 agent assigned PO; display 9
"RTN","PRCHL4",13,0)
 ;piece 4 = primary 2237; display 15
"RTN","PRCHL4",14,0)
 ;piece 5 = 93 liq amount; display 17
"RTN","PRCHL4",15,0)
 ;piece 6 = FOB; display 13
"RTN","PRCHL4",16,0)
 ;piece 7 = 1.4 Appropriation; display 14
"RTN","PRCHL4",17,0)
 ;piece 8 = 2 cost center; display 8
"RTN","PRCHL4",18,0)
 ;piece 9 = 5 vendor; display 12
"RTN","PRCHL4",19,0)
 ;piece 10 = 15 number of line items on po; display 11 
"RTN","PRCHL4",20,0)
 ;piece 11 = station, derived from PO Number; display 1
"RTN","PRCHL4",21,0)
 ;piece 12 = 6.4 IEN 442; display 18
"RTN","PRCHL4",22,0)
 ;piece 13 = .02 method; display 4
"RTN","PRCHL4",23,0)
 ;piece 14 = .01 purchase order number; display 3
"RTN","PRCHL4",24,0)
 ;piece 15 = .5 Status; display 6
"RTN","PRCHL4",25,0)
 ;piece 16 = 1 FCP; display 7
"RTN","PRCHL4",26,0)
 ;piece 17 =5.4 Ship To; display 10
"RTN","PRCHL4",27,0)
 ;piece 18 =61 purchase card holder; display 16
"RTN","PRCHL4",28,0)
 ;piece 19 = Optional Flex Field
"RTN","PRCHL4",29,0)
 ;piece 20 = Optional Flex Field
"RTN","PRCHL4",30,0)
 ;piece 21 = Optional Flex Field
"RTN","PRCHL4",31,0)
EN(RESULT,DATE1,DATE2,FLEXF,FLEX2,FLEX3) ;broker entry point
"RTN","PRCHL4",32,0)
 ;
"RTN","PRCHL4",33,0)
 K ^TMP($J)
"RTN","PRCHL4",34,0)
 I '$D(DATE1)!('$D(DATE2)) G EXIT
"RTN","PRCHL4",35,0)
 S DATE=DATE1-1
"RTN","PRCHL4",36,0)
 F  S DATE=$O(^PRC(442,"AB",DATE)) Q:(DATE="")!($P(DATE,".",1)>DATE2)  D
"RTN","PRCHL4",37,0)
 .S RMPRB=0
"RTN","PRCHL4",38,0)
 .F  S RMPRB=$O(^PRC(442,"AB",DATE,RMPRB)) Q:RMPRB=""  D
"RTN","PRCHL4",39,0)
 ..D DATA
"RTN","PRCHL4",40,0)
 S RESULT=$NA(^TMP($J))
"RTN","PRCHL4",41,0)
 K DATE,DFN,HDES,LINE,PHCPCS,RMPRB,RMPRFLD,TYPE,PRCHLB
"RTN","PRCHL4",42,0)
 Q
"RTN","PRCHL4",43,0)
 ;
"RTN","PRCHL4",44,0)
DATA ;
"RTN","PRCHL4",45,0)
 S PRCHLB=RMPRB
"RTN","PRCHL4",46,0)
 I (FLEXF'="")&(FLEXF'="ITM") S RMPRFLD=".1;91;19;.5;2;20;15;.02;.01;7.2;93;1.4;6.4;5.4;1;61;5;.07;"_FLEXF
"RTN","PRCHL4",47,0)
 I (FLEXF="")!(FLEXF="ITM") S RMPRFLD=".1;91;19;.5;2;20;15;.02;.01;7.2;93;1.4;6.4;5.4;1;61;5;.07"
"RTN","PRCHL4",48,0)
 I (FLEX2'="")&(FLEX2'="ITM") S RMPRFLD=RMPRFLD_";"_FLEX2
"RTN","PRCHL4",49,0)
 I (FLEX3'="")&(FLEX3'="ITM") S RMPRFLD=RMPRFLD_";"_FLEX3
"RTN","PRCHL4",50,0)
 D GETS^DIQ(442,PRCHLB,RMPRFLD,"","RMXM")
"RTN","PRCHL4",51,0)
 ;flat data
"RTN","PRCHL4",52,0)
 S $P(^TMP($J,PRCHLB),U,1)=$G(RMXM(442,PRCHLB_",",.1))
"RTN","PRCHL4",53,0)
 S $P(^TMP($J,PRCHLB),U,2)=$G(RMXM(442,PRCHLB_",",91))
"RTN","PRCHL4",54,0)
 S $P(^TMP($J,PRCHLB),U,3)=$G(RMXM(442,PRCHLB_",",19))
"RTN","PRCHL4",55,0)
 S $P(^TMP($J,PRCHLB),U,4)=$G(RMXM(442,PRCHLB_",",.07))
"RTN","PRCHL4",56,0)
 S $P(^TMP($J,PRCHLB),U,5)=$G(RMXM(442,PRCHLB_",",93))
"RTN","PRCHL4",57,0)
 S $P(^TMP($J,PRCHLB),U,6)=PRCHLB
"RTN","PRCHL4",58,0)
 S $P(^TMP($J,PRCHLB),U,7)=$G(RMXM(442,PRCHLB_",",1.4))
"RTN","PRCHL4",59,0)
 S $P(^TMP($J,PRCHLB),U,8)=$G(RMXM(442,PRCHLB_",",2))
"RTN","PRCHL4",60,0)
 S $P(^TMP($J,PRCHLB),U,9)=$G(RMXM(442,PRCHLB_",",5))
"RTN","PRCHL4",61,0)
 S $P(^TMP($J,PRCHLB),U,10)=$G(RMXM(442,PRCHLB_",",15))
"RTN","PRCHL4",62,0)
 S $P(^TMP($J,PRCHLB),U,11)=$P($G(RMXM(442,PRCHLB_",",.01)),"-",1)
"RTN","PRCHL4",63,0)
 S $P(^TMP($J,PRCHLB),U,12)=$G(RMXM(442,PRCHLB_",",6.4))
"RTN","PRCHL4",64,0)
 S $P(^TMP($J,PRCHLB),U,13)=$G(RMXM(442,PRCHLB_",",.02))
"RTN","PRCHL4",65,0)
 S $P(^TMP($J,PRCHLB),U,14)=$G(RMXM(442,PRCHLB_",",.01))
"RTN","PRCHL4",66,0)
 S $P(^TMP($J,PRCHLB),U,15)=$G(RMXM(442,PRCHLB_",",.5))
"RTN","PRCHL4",67,0)
 S $P(^TMP($J,PRCHLB),U,16)=$G(RMXM(442,PRCHLB_",",1))
"RTN","PRCHL4",68,0)
 S $P(^TMP($J,PRCHLB),U,17)=$G(RMXM(442,PRCHLB_",",5.4))
"RTN","PRCHL4",69,0)
 S $P(^TMP($J,PRCHLB),U,18)=$G(RMXM(442,PRCHLB_",",61))
"RTN","PRCHL4",70,0)
 ;
"RTN","PRCHL4",71,0)
 I FLEXF'="" S $P(^TMP($J,PRCHLB),U,19)=$G(RMXM(442,PRCHLB_",",FLEXF))
"RTN","PRCHL4",72,0)
 I FLEXF="" S $P(^TMP($J,PRCHLB),U,19)=""
"RTN","PRCHL4",73,0)
 I FLEX2'="" S $P(^TMP($J,PRCHLB),U,20)=$G(RMXM(442,PRCHLB_",",FLEX2))
"RTN","PRCHL4",74,0)
 I FLEX2="" S $P(^TMP($J,PRCHLB),U,20)=""
"RTN","PRCHL4",75,0)
 I FLEX3'="" S $P(^TMP($J,PRCHLB),U,21)=$G(RMXM(442,PRCHLB_",",FLEX3))
"RTN","PRCHL4",76,0)
 I FLEX3="" S $P(^TMP($J,PRCHLB),U,21)=""
"RTN","PRCHL4",77,0)
 ;
"RTN","PRCHL4",78,0)
 I (FLEXF="ITM")!(FLEX2="ITM")!(FLEX3="ITM") D ITMDET
"RTN","PRCHL4",79,0)
 K RMXM,PRCHLB
"RTN","PRCHL4",80,0)
 Q
"RTN","PRCHL4",81,0)
ITMDET ;item detail
"RTN","PRCHL4",82,0)
 I PRCHLB="" Q
"RTN","PRCHL4",83,0)
 S CNT=0
"RTN","PRCHL4",84,0)
 ;First check number of line items on PO, stop if more than 80
"RTN","PRCHL4",85,0)
 I $P(^TMP($J,PRCHLB),U,10)>80 S $P(^TMP($J,PRCHLB,1),U,10)="<** More than 80 Line Items **>" Q
"RTN","PRCHL4",86,0)
 D GETS^DIQ(442,PRCHLB,".01","EN","ITM")
"RTN","PRCHL4",87,0)
 S PRCHPO=$G(ITM("442",PRCHLB_",",".01","E"))
"RTN","PRCHL4",88,0)
 S PRCHIEN=""
"RTN","PRCHL4",89,0)
 I PRCHPO'="" S PRCHIEN=$O(^RMPR(664,"G",$P(PRCHPO,"-",2),PRCHIEN))
"RTN","PRCHL4",90,0)
 I PRCHIEN'="" D GETS^DIQ(664,PRCHIEN,"2*;11;12","EN","PITMSTR")
"RTN","PRCHL4",91,0)
 I $D(PITMSTR) D
"RTN","PRCHL4",92,0)
 .;Prosthetic item
"RTN","PRCHL4",93,0)
 .S PRCHB="" F  S PRCHB=$O(PITMSTR(664.02,PRCHB)) Q:'PRCHB  D
"RTN","PRCHL4",94,0)
 .  .S QTY=$G(PITMSTR(664.02,PRCHB,3,"E"))
"RTN","PRCHL4",95,0)
 .  .S UOP=$G(PITMSTR(664.02,PRCHB,4,"E"))
"RTN","PRCHL4",96,0)
 .  .S CBOA=$G(PITMSTR(664.02,PRCHB,13,"E"))
"RTN","PRCHL4",97,0)
 .  .S ITMD=$G(PITMSTR(664.02,PRCHB,1,"E"))
"RTN","PRCHL4",98,0)
 .  .S AUC=$G(PITMSTR(664.02,PRCHB,6,"E"))
"RTN","PRCHL4",99,0)
 .  .I AUC="" S AUC=$G(PITMSTR(664.02,PRCHB,2,"E"))
"RTN","PRCHL4",100,0)
 .  .S HCPCS=$G(PITMSTR(664.02,PRCHB,16,"E"))
"RTN","PRCHL4",101,0)
 .  .S VSN=$G(PITMSTR(664.02,PRCHB,15.4,"E"))
"RTN","PRCHL4",102,0)
 .  .S TCST=QTY*AUC
"RTN","PRCHL4",103,0)
 .  .S CNT=CNT+1
"RTN","PRCHL4",104,0)
 .  .S $P(^TMP($J,PRCHLB,CNT),U,1)=$G(RMXM(442,PRCHLB_",",.1))
"RTN","PRCHL4",105,0)
 .  .S $P(^TMP($J,PRCHLB,CNT),U,2)=TCST
"RTN","PRCHL4",106,0)
 .  .S $P(^TMP($J,PRCHLB,CNT),U,8)=CBOA
"RTN","PRCHL4",107,0)
 .  .S $P(^TMP($J,PRCHLB,CNT),U,7)=VSN
"RTN","PRCHL4",108,0)
 .  .S $P(^TMP($J,PRCHLB,CNT),U,11)=$P($G(RMXM(442,PRCHLB_",",.01)),"-",1)
"RTN","PRCHL4",109,0)
 .  .I HCPCS'="" S $P(^TMP($J,PRCHLB,CNT),U,13)="HCPCS: "_HCPCS
"RTN","PRCHL4",110,0)
 .  .S $P(^TMP($J,PRCHLB,CNT),U,14)=$G(RMXM(442,PRCHLB_",",.01))_"-P "_CNT
"RTN","PRCHL4",111,0)
 .  .I FLEXF="ITM" S $P(^TMP($J,PRCHLB,CNT),U,19)=$TR(ITMD,","," ")
"RTN","PRCHL4",112,0)
 .  .I FLEX2="ITM" S $P(^TMP($J,PRCHLB,CNT),U,20)=$TR(ITMD,","," ")
"RTN","PRCHL4",113,0)
 .  .I FLEX3="ITM" S $P(^TMP($J,PRCHLB,CNT),U,21)=$TR(ITMD,","," ")
"RTN","PRCHL4",114,0)
 .;prosthetic shipping
"RTN","PRCHL4",115,0)
 . S SHIP="",SHIPF=""
"RTN","PRCHL4",116,0)
 . S SHIP=$G(PITMSTR(664,PRCHIEN_",",11,"E"))
"RTN","PRCHL4",117,0)
 . S SHIPF=$G(PITMSTR(664,PRCHIEN_",",12,"E"))
"RTN","PRCHL4",118,0)
 . I SHIPF'="" S SHIP=SHIPF
"RTN","PRCHL4",119,0)
 . I SHIP'="" D
"RTN","PRCHL4",120,0)
 .  .S CNT=CNT+1
"RTN","PRCHL4",121,0)
 .  .S $P(^TMP($J,PRCHLB,CNT),U,2)=SHIP
"RTN","PRCHL4",122,0)
 .  .S $P(^TMP($J,PRCHLB,CNT),U,1)=$G(RMXM(442,PRCHLB_",",.1))
"RTN","PRCHL4",123,0)
 .  .S $P(^TMP($J,PRCHLB,CNT),U,11)=$P($G(RMXM(442,PRCHLB_",",.01)),"-",1)
"RTN","PRCHL4",124,0)
 .  .S $P(^TMP($J,PRCHLB,CNT),U,14)=$G(RMXM(442,PRCHLB_",",.01))_"-P "_CNT
"RTN","PRCHL4",125,0)
 .  .I FLEXF="ITM" S $P(^TMP($J,PRCHLB,CNT),U,19)="Shipping"
"RTN","PRCHL4",126,0)
 .  .I FLEX2="ITM" S $P(^TMP($J,PRCHLB,CNT),U,20)="Shipping"
"RTN","PRCHL4",127,0)
 .  .I FLEX3="ITM" S $P(^TMP($J,PRCHLB,CNT),U,21)="Shipping"
"RTN","PRCHL4",128,0)
 .;IFCAP item
"RTN","PRCHL4",129,0)
 S B=0 F  S B=$O(^PRC(442,PRCHLB,2,B)) Q:'B  D
"RTN","PRCHL4",130,0)
 . S PRCR=$G(^PRC(442,PRCHLB,2,B,0)),PRCR2=$G(^PRC(442,PRCHLB,2,B,2))
"RTN","PRCHL4",131,0)
 . S IFITM=$P(PRCR,U,5)
"RTN","PRCHL4",132,0)
 . D GETS^DIQ(441,IFITM,".01;.05;51","E","ITMSTR")
"RTN","PRCHL4",133,0)
 . S ITMD=$G(ITMSTR(441,IFITM_",",.05,"E"))
"RTN","PRCHL4",134,0)
 . S IFITM1=$G(ITMSTR(441,IFITM_",",.01,"E"))
"RTN","PRCHL4",135,0)
 . S NIF=$G(ITMSTR(441,IFITM_",",51,"E"))
"RTN","PRCHL4",136,0)
 . S LICNT=$P(B,",",1)
"RTN","PRCHL4",137,0)
 . S QTY=$P(PRCR,U,2)
"RTN","PRCHL4",138,0)
 . S UOP="" S:$P(PRCR,U,3)'="" UOP=$P($G(^PRCD(420.5,$P(PRCR,U,3),0)),U)
"RTN","PRCHL4",139,0)
 . S BOC=$P(PRCR,U,4)
"RTN","PRCHL4",140,0)
 . S CBOA=$P(PRCR2,U,2)
"RTN","PRCHL4",141,0)
 . S AUC=$TR($P(PRCR,U,9),"$","")
"RTN","PRCHL4",142,0)
 . S FSC=$P(PRCR2,U,3)
"RTN","PRCHL4",143,0)
 . S VSN=$P(PRCR,U,6)
"RTN","PRCHL4",144,0)
 . S UCF=$P(PRCR,U,17)
"RTN","PRCHL4",145,0)
 . S TCST=$P(PRCR2,U)
"RTN","PRCHL4",146,0)
 . S ITMDD=$G(^PRC(442,PRCHLB,2,B,1,1,0))
"RTN","PRCHL4",147,0)
 . I ITMD'="" S ITMD=ITMD_" "
"RTN","PRCHL4",148,0)
 . S ITMD=ITMD_"1st Line: "_ITMDD
"RTN","PRCHL4",149,0)
 . K ITMDD
"RTN","PRCHL4",150,0)
 . S CNT=CNT+1
"RTN","PRCHL4",151,0)
 . ;S ^TMP($J,PRCHLB,CNT)="I "_LICNT_U_IFITM1_U_QTY_U_UOP_U_BOC_U_CBOA_U_AUC_U_FSC_U_VSN_U_UCF_U_TCST_U_NIF_U_ITMD
"RTN","PRCHL4",152,0)
 .S $P(^TMP($J,PRCHLB,CNT),U,2)=TCST
"RTN","PRCHL4",153,0)
 .I FLEXF="ITM" S $P(^TMP($J,PRCHLB,CNT),U,19)=$TR(ITMD,","," ")
"RTN","PRCHL4",154,0)
 .I FLEX2="ITM" S $P(^TMP($J,PRCHLB,CNT),U,20)=$TR(ITMD,","," ")
"RTN","PRCHL4",155,0)
 .I FLEX3="ITM" S $P(^TMP($J,PRCHLB,CNT),U,21)=$TR(ITMD,","," ")
"RTN","PRCHL4",156,0)
 .S $P(^TMP($J,PRCHLB,CNT),U,1)=$G(RMXM(442,PRCHLB_",",.1))
"RTN","PRCHL4",157,0)
 .S $P(^TMP($J,PRCHLB,CNT),U,8)=BOC
"RTN","PRCHL4",158,0)
 .S $P(^TMP($J,PRCHLB,CNT),U,9)=VSN
"RTN","PRCHL4",159,0)
 .S $P(^TMP($J,PRCHLB,CNT),U,11)=$P($G(RMXM(442,PRCHLB_",",.01)),"-",1)
"RTN","PRCHL4",160,0)
 .I NIF'="" S IFITM1=IFITM1_" NIF: "_NIF
"RTN","PRCHL4",161,0)
 .I IFITM1'="" S $P(^TMP($J,PRCHLB,CNT),U,13)="Item Master: "_IFITM1
"RTN","PRCHL4",162,0)
 .S $P(^TMP($J,PRCHLB,CNT),U,14)=$G(RMXM(442,PRCHLB_",",.01))_"-I "_LICNT
"RTN","PRCHL4",163,0)
 K PRCR,PRCR2,PRCHLB,CNT,ITM,ITMSTR,IFITM,ITMD,IFITM1,LICNT,QTY,UOP,BOC,CBOA,AUC,FSC,VSN,UCF,TCST,NIF,B,PRCHPO,PITMSTR,PRCHB,PRCHIEN,HCPCS,SHIP,SHIPF
"RTN","PRCHL4",164,0)
 Q
"RTN","PRCHL4",165,0)
EXIT ;
"RTN","PRCHL4",166,0)
 Q
"RTN","PRCHL4",167,0)
 ;END
"VER")
8.0^22.0
"BLD",5785,6)
^114
**END**
**END**
