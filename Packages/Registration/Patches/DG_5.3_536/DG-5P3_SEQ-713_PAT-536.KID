Released DG*5.3*536 SEQ #713
Extracted from mail message
**KIDS**:DG*5.3*536^

**INSTALL NAME**
DG*5.3*536
"BLD",7589,0)
DG*5.3*536^REGISTRATION^0^3090212^y
"BLD",7589,4,0)
^9.64PA^^
"BLD",7589,6)
7^
"BLD",7589,6.3)
3
"BLD",7589,"KRN",0)
^9.67PA^8989.52^19
"BLD",7589,"KRN",.4,0)
.4
"BLD",7589,"KRN",.401,0)
.401
"BLD",7589,"KRN",.402,0)
.402
"BLD",7589,"KRN",.403,0)
.403
"BLD",7589,"KRN",.5,0)
.5
"BLD",7589,"KRN",.84,0)
.84
"BLD",7589,"KRN",3.6,0)
3.6
"BLD",7589,"KRN",3.8,0)
3.8
"BLD",7589,"KRN",9.2,0)
9.2
"BLD",7589,"KRN",9.8,0)
9.8
"BLD",7589,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",7589,"KRN",9.8,"NM",1,0)
DGENU^^0^B42315700
"BLD",7589,"KRN",9.8,"NM",2,0)
DGMTHL^^0^B5909603
"BLD",7589,"KRN",9.8,"NM",3,0)
DGMTHL1^^0^B63428065
"BLD",7589,"KRN",9.8,"NM","B","DGENU",1)

"BLD",7589,"KRN",9.8,"NM","B","DGMTHL",2)

"BLD",7589,"KRN",9.8,"NM","B","DGMTHL1",3)

"BLD",7589,"KRN",19,0)
19
"BLD",7589,"KRN",19.1,0)
19.1
"BLD",7589,"KRN",101,0)
101
"BLD",7589,"KRN",409.61,0)
409.61
"BLD",7589,"KRN",771,0)
771
"BLD",7589,"KRN",870,0)
870
"BLD",7589,"KRN",8989.51,0)
8989.51
"BLD",7589,"KRN",8989.52,0)
8989.52
"BLD",7589,"KRN",8994,0)
8994
"BLD",7589,"KRN","B",.4,.4)

"BLD",7589,"KRN","B",.401,.401)

"BLD",7589,"KRN","B",.402,.402)

"BLD",7589,"KRN","B",.403,.403)

"BLD",7589,"KRN","B",.5,.5)

"BLD",7589,"KRN","B",.84,.84)

"BLD",7589,"KRN","B",3.6,3.6)

"BLD",7589,"KRN","B",3.8,3.8)

"BLD",7589,"KRN","B",9.2,9.2)

"BLD",7589,"KRN","B",9.8,9.8)

"BLD",7589,"KRN","B",19,19)

"BLD",7589,"KRN","B",19.1,19.1)

"BLD",7589,"KRN","B",101,101)

"BLD",7589,"KRN","B",409.61,409.61)

"BLD",7589,"KRN","B",771,771)

"BLD",7589,"KRN","B",870,870)

"BLD",7589,"KRN","B",8989.51,8989.51)

"BLD",7589,"KRN","B",8989.52,8989.52)

"BLD",7589,"KRN","B",8994,8994)

"BLD",7589,"QUES",0)
^9.62^^
"BLD",7589,"REQB",0)
^9.611^3^2
"BLD",7589,"REQB",2,0)
DG*5.3*467^2
"BLD",7589,"REQB",3,0)
DG*5.3*688^2
"BLD",7589,"REQB","B","DG*5.3*467",2)

"BLD",7589,"REQB","B","DG*5.3*688",3)

"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
536^3090212^539
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","DGENU")
0^1^B42315700^B39450626
"RTN","DGENU",1,0)
DGENU ;ALB/CJM,ISA/KWP,Zoltan,LBD,EG,CKN,ERC,TMK - Enrollment Utilities; 04/24/2006 9:20 AM
"RTN","DGENU",2,0)
 ;;5.3;Registration;**121,122,147,232,314,564,624,672,659,653,688,536**;Aug 13,1993;Build 3
"RTN","DGENU",3,0)
 ;
"RTN","DGENU",4,0)
DISPLAY(DFN) ;
"RTN","DGENU",5,0)
 ;Description: Display status message, current enrollment and
"RTN","DGENU",6,0)
 ;     preferred facility information
"RTN","DGENU",7,0)
 ;Input:
"RTN","DGENU",8,0)
 ;  DFN - Patient IEN
"RTN","DGENU",9,0)
 ;  Output:     none
"RTN","DGENU",10,0)
 ;
"RTN","DGENU",11,0)
 N STATUS
"RTN","DGENU",12,0)
 S STATUS=$$STATUS^DGENA(DFN)
"RTN","DGENU",13,0)
 I 'STATUS W !!,"Patient is NOT enrolled in the VA Patient Enrollment System..."
"RTN","DGENU",14,0)
 E  I STATUS=2 D
"RTN","DGENU",15,0)
 .W !!,"Patient is enrolled in the VA Patient Enrollment System..."
"RTN","DGENU",16,0)
 ; Purple Heart added status 21
"RTN","DGENU",17,0)
 E  I (STATUS=9)!(STATUS=1)!(STATUS=15)!(STATUS=16)!(STATUS=17)!(STATUS=18)!(STATUS=21) D
"RTN","DGENU",18,0)
 .W !!,"Application is pending for enrollment in the VA Patient Enrollment System..."
"RTN","DGENU",19,0)
 E  D
"RTN","DGENU",20,0)
 .W !!,"Patient is NOT enrolled in the VA Patient Enrollment System..."
"RTN","DGENU",21,0)
 D CUR(DFN)
"RTN","DGENU",22,0)
 Q
"RTN","DGENU",23,0)
 ;
"RTN","DGENU",24,0)
CUR(DFN) ;
"RTN","DGENU",25,0)
 ;Description - displays current enrollment, category, enrollment group threshold, and preferred facility
"RTN","DGENU",26,0)
 ;
"RTN","DGENU",27,0)
 N FACNAME,PREFAC,DGEGT,DGEGTIEN,DGENCAT,DGENR,IORVON,IORVOFF
"RTN","DGENU",28,0)
 I $$GET^DGENA($$FINDCUR^DGENA(DFN),.DGENR)
"RTN","DGENU",29,0)
 ;Get enrollment category
"RTN","DGENU",30,0)
 S DGENCAT=$$CATEGORY^DGENA4(DFN)
"RTN","DGENU",31,0)
 ;Display Category in reverse video
"RTN","DGENU",32,0)
 D REV
"RTN","DGENU",33,0)
 ;Get enrollment group threshold
"RTN","DGENU",34,0)
 S DGEGTIEN=$$FINDCUR^DGENEGT
"RTN","DGENU",35,0)
 S DGEGT=$$GET^DGENEGT(DGEGTIEN,.DGEGT)
"RTN","DGENU",36,0)
 ;Preferred facility
"RTN","DGENU",37,0)
 S PREFAC=$$PREF^DGENPTA(DFN,.FACNAME)
"RTN","DGENU",38,0)
 W !?3,"Enrollment Date",?35,": ",$S('$G(DGENR("DATE")):"-none-",1:$$EXT^DGENU("DATE",DGENR("DATE")))
"RTN","DGENU",39,0)
 W !?3,"Enrollment Application Date",?35,": ",$S('$G(DGENR("APP")):"-none-",1:$$EXT^DGENU("DATE",DGENR("APP")))
"RTN","DGENU",40,0)
 W !?3,IORVON,"Enrollment Category             : ",$S($G(DGENCAT)="":"-none-",1:$$EXTERNAL^DILFD(27.15,.02,"",DGENCAT)),IORVOFF
"RTN","DGENU",41,0)
 W !?3,"Enrollment Status",?35,": ",$S($G(DGENR("STATUS"))="":"-none-",1:$$EXT^DGENU("STATUS",DGENR("STATUS")))
"RTN","DGENU",42,0)
 W !?3,"Enrollment Priority",?35,": ",$S($G(DGENR("PRIORITY"))="":"-none-",1:DGENR("PRIORITY")),$S($G(DGENR("SUBGRP"))="":"",1:$$EXT("SUBGRP",DGENR("SUBGRP")))
"RTN","DGENU",43,0)
 W !?3,"Preferred Facility",?35,": ",$S($G(FACNAME)'="":FACNAME,1:"-none-")
"RTN","DGENU",44,0)
 W !?3,"Enrollment Group Threshold",?35,": ",$S($G(DGEGT("PRIORITY"))="":"-none-",1:$$EXTERNAL^DILFD(27.16,.02,"",$G(DGEGT("PRIORITY")))),$S($G(DGEGT("SUBGRP"))="":"",1:$$EXTERNAL^DILFD(27.16,.03,"",$G(DGEGT("SUBGRP"))))
"RTN","DGENU",45,0)
 W !
"RTN","DGENU",46,0)
 Q
"RTN","DGENU",47,0)
REV ;Get variables to display text in reverse video
"RTN","DGENU",48,0)
 N X
"RTN","DGENU",49,0)
 S X="IORVON;IORVOFF"
"RTN","DGENU",50,0)
 D ENDR^%ZISS
"RTN","DGENU",51,0)
 Q
"RTN","DGENU",52,0)
PATID(DFN) ;
"RTN","DGENU",53,0)
 ;Description - Called by FileMan as an identifier for the Patient file.
"RTN","DGENU",54,0)
 ;Displays current enrollment status, priority, and preferred facility.
"RTN","DGENU",55,0)
 ;
"RTN","DGENU",56,0)
 ;Input:
"RTN","DGENU",57,0)
 ;  DFN - ien to Patient file
"RTN","DGENU",58,0)
 ;
"RTN","DGENU",59,0)
 N PREFAC,DGENR,OUTPUT
"RTN","DGENU",60,0)
 I '$$GET^DGENA($$FINDCUR^DGENA(DFN),.DGENR) D
"RTN","DGENU",61,0)
 .S OUTPUT="NO ENROLLMENT APPLICATION ON FILE "
"RTN","DGENU",62,0)
 E  D
"RTN","DGENU",63,0)
 .S OUTPUT=$E("PRIORITY:"_DGENR("PRIORITY")_"   ",1,12)_$E("STATUS:"_$$EXT^DGENU("STATUS",DGENR("STATUS"))_"         ",1,26)
"RTN","DGENU",64,0)
 S PREFAC=$$PREF^DGENPTA(DFN)
"RTN","DGENU",65,0)
 S:PREFAC OUTPUT=OUTPUT_"PREFERRED FACILITY:"_$P($G(^DIC(4,PREFAC,99)),"^")
"RTN","DGENU",66,0)
 I $G(IOM) I ($X#$G(IOM))<6 D
"RTN","DGENU",67,0)
 .D EN^DDIOL(OUTPUT,,"?($X+(10-($X#IOM)))")
"RTN","DGENU",68,0)
 E  D
"RTN","DGENU",69,0)
 .D EN^DDIOL(OUTPUT,,"!?10")
"RTN","DGENU",70,0)
 Q
"RTN","DGENU",71,0)
 ;
"RTN","DGENU",72,0)
EXT(SUB,VAL) ;
"RTN","DGENU",73,0)
 ;Description: Given the subscript used in the PATIENT ENROLLMENT array,
"RTN","DGENU",74,0)
 ;     and a field value, returns the external representation of the
"RTN","DGENU",75,0)
 ;     value, as defined in the fields output transform of the PATIENT
"RTN","DGENU",76,0)
 ;     ENROLLMENT file.
"RTN","DGENU",77,0)
 ;Input: 
"RTN","DGENU",78,0)
 ;  SUB - subscript in the array defined by the PATIENT ENROLLMENT object
"RTN","DGENU",79,0)
 ;  VAL - value of the PATIENT ENROLLMENT object attribute named by SUB
"RTN","DGENU",80,0)
 ;Output:
"RTN","DGENU",81,0)
 ;  Function Value - returns the external value of the attribute as
"RTN","DGENU",82,0)
 ;     defined by the PATIENT ENROLLMENT file
"RTN","DGENU",83,0)
 ;
"RTN","DGENU",84,0)
 Q:(($G(SUB)="")!($G(VAL)="")) ""
"RTN","DGENU",85,0)
 ;
"RTN","DGENU",86,0)
 N FLD
"RTN","DGENU",87,0)
 S FLD=$$FIELD(SUB)
"RTN","DGENU",88,0)
 ;
"RTN","DGENU",89,0)
 Q:(FLD="") ""
"RTN","DGENU",90,0)
 Q $$EXTERNAL^DILFD(27.11,FLD,"F",VAL)
"RTN","DGENU",91,0)
 ;
"RTN","DGENU",92,0)
FIELD(SUB) ;
"RTN","DGENU",93,0)
 ;Description: given a subscript in the enrollment array, returns the
"RTN","DGENU",94,0)
 ;     corresponding field number
"RTN","DGENU",95,0)
 N FLD S FLD=""
"RTN","DGENU",96,0)
 D  ;drops out of block once SUB is determined
"RTN","DGENU",97,0)
 .I SUB="APP" S FLD=.01 Q
"RTN","DGENU",98,0)
 .I SUB="DATE" S FLD=.1 Q
"RTN","DGENU",99,0)
 .I SUB="END" S FLD=.11 Q
"RTN","DGENU",100,0)
 .I SUB="DFN" S FLD=.02 Q
"RTN","DGENU",101,0)
 .I SUB="SOURCE" S FLD=.03 Q
"RTN","DGENU",102,0)
 .I SUB="STATUS" S FLD=.04 Q
"RTN","DGENU",103,0)
 .I SUB="REASON" S FLD=.05 Q
"RTN","DGENU",104,0)
 .I SUB="REMARKS" S FLD=25 Q
"RTN","DGENU",105,0)
 .I SUB="FACREC" S FLD=.06 Q
"RTN","DGENU",106,0)
 .I SUB="PRIORITY" S FLD=.07 Q
"RTN","DGENU",107,0)
 .I SUB="EFFDATE" S FLD=.08 Q
"RTN","DGENU",108,0)
 .I SUB="PRIORREC" S FLD=.09 Q
"RTN","DGENU",109,0)
 .I SUB="SUBGRP" S FLD=.12 Q
"RTN","DGENU",110,0)
 .I SUB="CODE" S FLD=50.01 Q
"RTN","DGENU",111,0)
 .I SUB="SC" S FLD=50.02 Q
"RTN","DGENU",112,0)
 .I SUB="SCPER" S FLD=50.03 Q
"RTN","DGENU",113,0)
 .I SUB="POW" S FLD=50.04 Q
"RTN","DGENU",114,0)
 .I SUB="A&A" S FLD=50.05 Q
"RTN","DGENU",115,0)
 .I SUB="HB" S FLD=50.06 Q
"RTN","DGENU",116,0)
 .I SUB="VAPEN" S FLD=50.07 Q
"RTN","DGENU",117,0)
 .I SUB="VACKAMT" S FLD=50.08 Q
"RTN","DGENU",118,0)
 .I SUB="DISRET" S FLD=50.09 Q
"RTN","DGENU",119,0)
 .I SUB="DISLOD" S FLD=50.2 Q  ;field added with DG*5.3*672
"RTN","DGENU",120,0)
 .I SUB="MEDICAID" S FLD=50.1 Q
"RTN","DGENU",121,0)
 .I SUB="AO" S FLD=50.11 Q
"RTN","DGENU",122,0)
 .I SUB="AOEXPLOC" S FLD=50.22 Q  ;field added with DG*5.3*688
"RTN","DGENU",123,0)
 .I SUB="IR" S FLD=50.12 Q
"RTN","DGENU",124,0)
 .I SUB="EC" S FLD=50.13 Q    ;name now SW Asia Con, was Env Con DG*5.3*688
"RTN","DGENU",125,0)
 .I SUB="MTSTA" S FLD=50.14 Q
"RTN","DGENU",126,0)
 .I SUB="VCD" S FLD=50.15 Q
"RTN","DGENU",127,0)
 .I SUB="PH" S FLD=50.16 Q
"RTN","DGENU",128,0)
 .I SUB="UNEMPLOY" S FLD=50.17 Q
"RTN","DGENU",129,0)
 .I SUB="CVELEDT" S FLD=50.18 Q
"RTN","DGENU",130,0)
 .I SUB="SHAD" S FLD=50.19 Q  ;field added with DG*5.3*653
"RTN","DGENU",131,0)
 .I SUB="DATETIME" S FLD=75.01 Q
"RTN","DGENU",132,0)
 .I SUB="USER" S FLD=75.02 Q
"RTN","DGENU",133,0)
 .I SUB="RADEXPM" S FLD=76 Q
"RTN","DGENU",134,0)
 Q FLD
"RTN","DGENU",135,0)
 ;
"RTN","DGENU",136,0)
PROMPT(FILE,FIELD,DEFAULT,RESPONSE,REQUIRE,PRMPTNM) ;
"RTN","DGENU",137,0)
 ;Description: requests user to enter a single field value.
"RTN","DGENU",138,0)
 ;Input:
"RTN","DGENU",139,0)
 ;  FILE - the file #
"RTN","DGENU",140,0)
 ;  FIELD - the field #
"RTN","DGENU",141,0)
 ;  DEFAULT - default value, internal form
"RTN","DGENU",142,0)
 ;  REQUIRE - a flag, (+value)'=0 means to require a value to be
"RTN","DGENU",143,0)
 ;            entered and to return failure otherwise (optional)
"RTN","DGENU",144,0)
 ;  PRMPTNM - Optional
"RTN","DGENU",145,0)
 ;             0 - display field LABEL
"RTN","DGENU",146,0)
 ;             1 - Prompt field TITLE
"RTN","DGENU",147,0)
 ;Output:
"RTN","DGENU",148,0)
 ;  Function Value - 0 on failure, 1 on success
"RTN","DGENU",149,0)
 ;  RESPONSE - value entered by user, pass by reference
"RTN","DGENU",150,0)
 ;
"RTN","DGENU",151,0)
 Q:(('$G(FILE))!('$G(FIELD))) 0
"RTN","DGENU",152,0)
 S REQUIRE=$G(REQUIRE)
"RTN","DGENU",153,0)
 S PRMPTNM=$G(PRMPTNM)
"RTN","DGENU",154,0)
 N DIR,DA,QUIT,AGAIN
"RTN","DGENU",155,0)
 ;
"RTN","DGENU",156,0)
 S DIR(0)=FILE_","_FIELD_$S($G(REQUIRE):"",1:"O")_"AO"
"RTN","DGENU",157,0)
 I $G(DEFAULT)'="" DO
"RTN","DGENU",158,0)
 . S:+$G(PRMPTNM)=0 DIR("A")=$$GET1^DID(FILE,FIELD,"","LABEL")_": "_$$EXTERNAL^DILFD(FILE,FIELD,"F",DEFAULT)_"// "
"RTN","DGENU",159,0)
 . S:+$G(PRMPTNM)>0 DIR("A")=$$GET1^DID(FILE,FIELD,"","TITLE")_": "_$$EXTERNAL^DILFD(FILE,FIELD,"F",DEFAULT)_"// "
"RTN","DGENU",160,0)
 S QUIT=0
"RTN","DGENU",161,0)
 F  D  Q:QUIT
"RTN","DGENU",162,0)
 . D ^DIR
"RTN","DGENU",163,0)
 . I $D(DTOUT)!$D(DUOUT) S QUIT=1 Q
"RTN","DGENU",164,0)
 . I X="@" D  Q:AGAIN
"RTN","DGENU",165,0)
 . . S AGAIN=0
"RTN","DGENU",166,0)
 . . I 'REQUIRE,"Yy"'[$E($$YN^DGENCD1("  Are you sure")_"X") S AGAIN=1 Q
"RTN","DGENU",167,0)
 . . S RESPONSE="" ; This might trigger the "required" message below.
"RTN","DGENU",168,0)
 . E  I X="" S RESPONSE=$G(DEFAULT)
"RTN","DGENU",169,0)
 . E  S RESPONSE=$P(Y,"^")
"RTN","DGENU",170,0)
 . ;
"RTN","DGENU",171,0)
 . ; quit this loop if the user entered value OR value not required
"RTN","DGENU",172,0)
 . I RESPONSE'="" S QUIT=1 Q
"RTN","DGENU",173,0)
 . I 'REQUIRE S QUIT=1 Q
"RTN","DGENU",174,0)
 . W !,"This is a required response. Enter '^' to exit"
"RTN","DGENU",175,0)
 I $D(DTOUT)!$D(DUOUT) Q 0
"RTN","DGENU",176,0)
 Q 1
"RTN","DGENU",177,0)
 ;
"RTN","DGENU",178,0)
INST(VADUZ,VACHK) ;
"RTN","DGENU",179,0)
 ; Description: Determine the institution affiliation associated with a
"RTN","DGENU",180,0)
 ;              user.
"RTN","DGENU",181,0)
 ;
"RTN","DGENU",182,0)
 ;  Input:
"RTN","DGENU",183,0)
 ;     VADUZ =  array if passed by reference:
"RTN","DGENU",184,0)
 ;           VADUZ = DUZ
"RTN","DGENU",185,0)
 ;           VADUZ(2) =  
"RTN","DGENU",186,0)
 ;              o  if this value is null: DUZ(2) (institution affiliated
"RTN","DGENU",187,0)
 ;                    with user, prompted at Kernel sign-on)
"RTN","DGENU",188,0)
 ;              o  if value is not null: site to check as valid for the
"RTN","DGENU",189,0)
 ;                    user (Pointer to INSTITUTION (#4) file)
"RTN","DGENU",190,0)
 ; Output:
"RTN","DGENU",191,0)
 ;   Function Value - Returns pointer to the INSTITUTION (#4) file
"RTN","DGENU",192,0)
 ;    entry that is associated with the user, otherwise the pointer
"RTN","DGENU",193,0)
 ;    to the INSTITUTION (#4) file entry of the primary VA Medical
"RTN","DGENU",194,0)
 ;    Center division is returned.
"RTN","DGENU",195,0)
 ;
"RTN","DGENU",196,0)
 ;    VACHK = passed by reference, returned as:
"RTN","DGENU",197,0)
 ;         null if the value in VADUZ(2) is null
"RTN","DGENU",198,0)
 ;            0 if the value in VADUZ(2) is not null and is not a valid
"RTN","DGENU",199,0)
 ;              site for the user
"RTN","DGENU",200,0)
 ;            1 if the value in VADUZ(2) is not null and is a valid site
"RTN","DGENU",201,0)
 ;              for the user
"RTN","DGENU",202,0)
 ;
"RTN","DGENU",203,0)
 S VACHK=$S($G(VADUZ(2))="":"",1:0)
"RTN","DGENU",204,0)
 I $G(VADUZ(2)) D
"RTN","DGENU",205,0)
 . N X,ZZ
"RTN","DGENU",206,0)
 . Q:'$G(VADUZ)
"RTN","DGENU",207,0)
 . S X=$$DIV4^XUSER(.ZZ,VADUZ)
"RTN","DGENU",208,0)
 . I X,$D(ZZ(VADUZ(2))) S VACHK=1
"RTN","DGENU",209,0)
 I '$G(VADUZ(2)) S VADUZ(2)=$G(DUZ(2))
"RTN","DGENU",210,0)
 Q $S($G(VADUZ(2)):VADUZ(2),1:$P($$SITE^VASITE(),"^"))
"RTN","DGENU",211,0)
 ;
"RTN","DGENU",212,0)
GETINST(DGPREFAC,DGINST) ;Get Institution file data
"RTN","DGENU",213,0)
 ; Input  -- DGPREFAC Institution file IEN
"RTN","DGENU",214,0)
 ; Output -- 1=Successful and 0=Failure
"RTN","DGENU",215,0)
 ;           DGINST - Institution file Array
"RTN","DGENU",216,0)
 N DGINST0,DGINST99,DGOKF
"RTN","DGENU",217,0)
 S DGINST0=$G(^DIC(4,DGPREFAC,0)) G GETQ:DGINST0=""
"RTN","DGENU",218,0)
 S DGINST("NAME")=$P(DGINST0,U)
"RTN","DGENU",219,0)
 S DGINST99=$G(^DIC(4,DGPREFAC,99))
"RTN","DGENU",220,0)
 S DGINST("STANUM")=$P(DGINST99,U)
"RTN","DGENU",221,0)
 S DGOKF=1
"RTN","DGENU",222,0)
GETQ Q +$G(DGOKF)
"RTN","DGMTHL")
0^2^B5909603^B4967483
"RTN","DGMTHL",1,0)
DGMTHL ;ALB/CJM,SCG,TMK - Hardship Determinations - List Manager Screen; 1/02/2002
"RTN","DGMTHL",2,0)
 ;;5.3;Registration;**182,344,435,467,536**;08/13/93;Build 3
"RTN","DGMTHL",3,0)
 ;
"RTN","DGMTHL",4,0)
HARDSHIP ;Entry point for hardships
"RTN","DGMTHL",5,0)
 ; Input  -- None
"RTN","DGMTHL",6,0)
 ; Output -- None
"RTN","DGMTHL",7,0)
 N DFN,DGSITE,MTIEN,SGHRD,DGOK,DGDUZ
"RTN","DGMTHL",8,0)
 ;
"RTN","DGMTHL",9,0)
 ;Get Patient file (#2) IEN - DFN
"RTN","DGMTHL",10,0)
 D GETPAT^DGRPTU(,,.DFN,) G ENQ:DFN<0
"RTN","DGMTHL",11,0)
 N DGMDOD S DGMDOD=""
"RTN","DGMTHL",12,0)
 I $P($G(^DPT(DFN,.35)),U)'="" S DGMDOD=$P(^DPT(DFN,.35),U)
"RTN","DGMTHL",13,0)
 I $G(DGMDOD) W !,"Patient died on: ",$$FMTE^XLFDT(DGMDOD,"1D") Q
"RTN","DGMTHL",14,0)
 ;
"RTN","DGMTHL",15,0)
 S (MTIEN,SGHRD,DGSITE)="",DGOK=0
"RTN","DGMTHL",16,0)
 S MTIEN=$$FIND^DGMTH(DFN,DT)
"RTN","DGMTHL",17,0)
 S:MTIEN SGHRD=$P($G(^DGMT(408.31,MTIEN,2)),U,4)
"RTN","DGMTHL",18,0)
 I SGHRD'="" D
"RTN","DGMTHL",19,0)
 . S DGDUZ=$G(DUZ),DGDUZ(2)=$$CONVERT^DGENUPL1(SGHRD,"INSTITUTION")
"RTN","DGMTHL",20,0)
 . S DGOK="",DGSITE=$$INST^DGENU(.DGDUZ,.DGOK)
"RTN","DGMTHL",21,0)
 ;
"RTN","DGMTHL",22,0)
 I SGHRD,$S(DGSITE=+$G(DUZ(2)):0,1:'DGOK) D  Q
"RTN","DGMTHL",23,0)
 .W !!?10,"A Hardship has been granted for ",$P(^DPT(DFN,0),U),"."
"RTN","DGMTHL",24,0)
 .W !?10,"Only the site granting the Hardship may edit it."
"RTN","DGMTHL",25,0)
 .W !?10,"Please, contact ",$P($G(^DIC(4,+$$CONVERT^DGENUPL1(SGHRD,"INSTITUTION"),0)),U)," to edit the record.",!
"RTN","DGMTHL",26,0)
 .N DIR S DIR(0)="FAO",DIR("A")="Enter <RETURN> to continue." D ^DIR
"RTN","DGMTHL",27,0)
 ;
"RTN","DGMTHL",28,0)
 ;Load patient enrollment screen
"RTN","DGMTHL",29,0)
 D EN(DFN)
"RTN","DGMTHL",30,0)
ENQ Q
"RTN","DGMTHL",31,0)
 ;
"RTN","DGMTHL",32,0)
EN(DFN) ;Entry point for the DGMT HARDSHIP List Template
"RTN","DGMTHL",33,0)
 ; Input  -- DFN      Patient IEN
"RTN","DGMTHL",34,0)
 ; Output -- None
"RTN","DGMTHL",35,0)
 ;
"RTN","DGMTHL",36,0)
 Q:'$G(DFN)
"RTN","DGMTHL",37,0)
 N HARDSHIP
"RTN","DGMTHL",38,0)
 D WAIT^DICD
"RTN","DGMTHL",39,0)
 D EN^VALM("DGMTH HARDSHIP")
"RTN","DGMTHL",40,0)
 Q
"RTN","DGMTHL",41,0)
 ;
"RTN","DGMTHL",42,0)
INIT ;Init variables and list array
"RTN","DGMTHL",43,0)
 N MTIEN
"RTN","DGMTHL",44,0)
 S MTIEN=$$FIND^DGMTH(DFN,DT)
"RTN","DGMTHL",45,0)
 I $$GET^DGMTH(MTIEN,.HARDSHIP) ;setup hardship array
"RTN","DGMTHL",46,0)
 D CLEAN^VALM10
"RTN","DGMTHL",47,0)
 S VALMCNT=0
"RTN","DGMTHL",48,0)
 D EN^DGMTHL1("DGMTH HARDSHIP",.HARDSHIP,.VALMCNT)
"RTN","DGMTHL",49,0)
 Q
"RTN","DGMTHL",50,0)
 ;
"RTN","DGMTHL",51,0)
HELP ;Help code
"RTN","DGMTHL",52,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","DGMTHL",53,0)
 Q
"RTN","DGMTHL",54,0)
 ;
"RTN","DGMTHL",55,0)
EXIT ;Exit code
"RTN","DGMTHL",56,0)
 D CLEAN^VALM10
"RTN","DGMTHL",57,0)
 D CLEAR^VALM1
"RTN","DGMTHL",58,0)
 Q
"RTN","DGMTHL",59,0)
 ;
"RTN","DGMTHL",60,0)
EXPND ;Expand code
"RTN","DGMTHL",61,0)
 Q
"RTN","DGMTHL",62,0)
 ;
"RTN","DGMTHL",63,0)
HDR ;Header code
"RTN","DGMTHL",64,0)
 N X,VA,VAERR
"RTN","DGMTHL",65,0)
 D PID^VADPT
"RTN","DGMTHL",66,0)
 S VALMHDR(1)=$E("Patient: "_$P($G(^DPT(DFN,0)),U),1,30)_" ("_VA("BID")_")"
"RTN","DGMTHL",67,0)
 S X=$S('$D(^DPT(DFN,"TYPE")):"PATIENT TYPE UNKNOWN",$D(^DG(391,+^("TYPE"),0)):$P(^(0),U,1),1:"PATIENT TYPE UNKNOWN")
"RTN","DGMTHL",68,0)
 S VALMHDR(1)=$$SETSTR^VALM1(X,VALMHDR(1),60,80)
"RTN","DGMTHL",69,0)
 Q
"RTN","DGMTHL1")
0^3^B63428065^B62669929
"RTN","DGMTHL1",1,0)
DGMTHL1 ;ALB/CJM/TDM - Hardship Determinations - Build List Area;13 JUN 1997 08:00 am ; 8/29/02 4:50pm
"RTN","DGMTHL1",2,0)
 ;;5.3;Registration;**182,456,536**;08/13/93;Build 3
"RTN","DGMTHL1",3,0)
 ;
"RTN","DGMTHL1",4,0)
EN(DGARY,HARDSHIP,DGCNT) ;Entry point to build list area
"RTN","DGMTHL1",5,0)
 ; Input;
"RTN","DGMTHL1",6,0)
 ;   DGARY    Global array subscript
"RTN","DGMTHL1",7,0)
 ;   HARDSHIP - hardship array (pass by reference)
"RTN","DGMTHL1",8,0)
 ; Output -- DGCNT    Number of lines in the list
"RTN","DGMTHL1",9,0)
 ;
"RTN","DGMTHL1",10,0)
 N DGLINE
"RTN","DGMTHL1",11,0)
 S DGLINE=1,DGCNT=0
"RTN","DGMTHL1",12,0)
 D SET(DGARY,.HARDSHIP,.DGLINE,.DGCNT)
"RTN","DGMTHL1",13,0)
 Q
"RTN","DGMTHL1",14,0)
 ;
"RTN","DGMTHL1",15,0)
SET(DGARY,HARDSHIP,DGLINE,DGCNT) ;
"RTN","DGMTHL1",16,0)
 ;Description: Writes hardship
"RTN","DGMTHL1",17,0)
 ; Input  -- DGARY    Global array subscript
"RTN","DGMTHL1",18,0)
 ;           HARDSHIP    Hardship array
"RTN","DGMTHL1",19,0)
 ;           DGLINE   Line number
"RTN","DGMTHL1",20,0)
 ; Output -- DGCNT    Number of lines in the list
"RTN","DGMTHL1",21,0)
 N DGSTART,LINE
"RTN","DGMTHL1",22,0)
 ;
"RTN","DGMTHL1",23,0)
 S DGSTART=DGLINE ; starting line number
"RTN","DGMTHL1",24,0)
 D SET^DGENL1(DGARY,DGLINE,"Hardship",21,IORVON,IORVOFF,,,,.DGCNT)
"RTN","DGMTHL1",25,0)
 S DGLINE=DGLINE+1
"RTN","DGMTHL1",26,0)
 D SET^DGENL1(DGARY,DGLINE,$J("Current Means Test Status:   ",31)_$$EXT^DGMTH("CURRENT STATUS",HARDSHIP("CURRENT STATUS")),1,,,,,,.DGCNT)
"RTN","DGMTHL1",27,0)
 S DGLINE=DGLINE+1
"RTN","DGMTHL1",28,0)
 D SET^DGENL1(DGARY,DGLINE,$J("Income Year:   ",31)_$S(HARDSHIP("YEAR"):$$EXT^DGMTH("YEAR",HARDSHIP("YEAR")),1:""),1,,,,,,.DGCNT)
"RTN","DGMTHL1",29,0)
 S DGLINE=DGLINE+1
"RTN","DGMTHL1",30,0)
 D SET^DGENL1(DGARY,DGLINE,$J("Means Test Date:   ",31)_$$EXT^DGMTH("TEST DATE",HARDSHIP("TEST DATE")),1,,,,,,.DGCNT)
"RTN","DGMTHL1",31,0)
 S DGLINE=DGLINE+1
"RTN","DGMTHL1",32,0)
 I (HARDSHIP("AGREE")'="") D SET^DGENL1(DGARY,DGLINE,$J("Agreed To Pay Deductible:   ",31)_$$EXT^DGMTH("AGREE",HARDSHIP("AGREE")),1,,,,,,.DGCNT) S DGLINE=DGLINE+1
"RTN","DGMTHL1",33,0)
 ;
"RTN","DGMTHL1",34,0)
 S DGLINE=DGLINE+1
"RTN","DGMTHL1",35,0)
 D SET^DGENL1(DGARY,DGLINE,$J("Hardship?:   ",31)_$$EXT^DGMTH("HARDSHIP?",HARDSHIP("HARDSHIP?")),1,,,,,,.DGCNT)
"RTN","DGMTHL1",36,0)
 S DGLINE=DGLINE+1
"RTN","DGMTHL1",37,0)
 D SET^DGENL1(DGARY,DGLINE,$J("Hardship Effective Date:   ",31)_$$EXT^DGMTH("EFFECTIVE",HARDSHIP("EFFECTIVE")),1,,,,,,.DGCNT)
"RTN","DGMTHL1",38,0)
 S DGLINE=DGLINE+1
"RTN","DGMTHL1",39,0)
 D SET^DGENL1(DGARY,DGLINE,$J("Review Date:   ",31)_$$EXT^DGMTH("REVIEW",HARDSHIP("REVIEW")),1,,,,,,.DGCNT)
"RTN","DGMTHL1",40,0)
 S DGLINE=DGLINE+1
"RTN","DGMTHL1",41,0)
 D SET^DGENL1(DGARY,DGLINE,$J("Site Granting Hardship:   ",31)_$$EXT^DGMTH("SITE",HARDSHIP("SITE")),1,,,,,,.DGCNT)
"RTN","DGMTHL1",42,0)
 S DGLINE=DGLINE+1
"RTN","DGMTHL1",43,0)
 D SET^DGENL1(DGARY,DGLINE,$J("Approved By:   ",31)_$$EXT^DGMTH("BY",HARDSHIP("BY")),1,,,,,,.DGCNT)
"RTN","DGMTHL1",44,0)
 S DGLINE=DGLINE+1
"RTN","DGMTHL1",45,0)
 D SET^DGENL1(DGARY,DGLINE,$J("Hardship Reason:   ",31)_$$EXT^DGMTH("REASON",HARDSHIP("REASON")),1,,,,,,.DGCNT)
"RTN","DGMTHL1",46,0)
 S DGLINE=DGLINE+2
"RTN","DGMTHL1",47,0)
 ;
"RTN","DGMTHL1",48,0)
 D SET^DGENL1(DGARY,DGLINE,$J("Date Category Last Changed:   ",31)_$$EXT^DGMTH("DT/TM CTGRY CHNGD",HARDSHIP("DT/TM CTGRY CHNGD")),1,,,,,,.DGCNT)
"RTN","DGMTHL1",49,0)
 S DGLINE=DGLINE+1
"RTN","DGMTHL1",50,0)
 D SET^DGENL1(DGARY,DGLINE,$J("Category Last Changed By:   ",31)_$$EXT^DGMTH("CTGRY CHNGD BY",HARDSHIP("CTGRY CHNGD BY")),1,,,,,,.DGCNT)
"RTN","DGMTHL1",51,0)
 S DGLINE=DGLINE+1
"RTN","DGMTHL1",52,0)
 I $D(^DGMT(408.31,HARDSHIP("MTIEN"),"C")) D
"RTN","DGMTHL1",53,0)
 .N LINE
"RTN","DGMTHL1",54,0)
 .D SET^DGENL1(DGARY,DGLINE,"COMMENTS:",1,$G(IOINHI),$G(IOINORM),,,,.DGCNT)
"RTN","DGMTHL1",55,0)
 .S DGLINE=DGLINE+1
"RTN","DGMTHL1",56,0)
 .S LINE=0
"RTN","DGMTHL1",57,0)
 .F  S LINE=$O(^DGMT(408.31,HARDSHIP("MTIEN"),"C",LINE)) Q:'LINE  D
"RTN","DGMTHL1",58,0)
 ..D SET^DGENL1(DGARY,DGLINE,$G(^DGMT(408.31,HARDSHIP("MTIEN"),"C",LINE,0)),1,,,,,,.DGCNT)
"RTN","DGMTHL1",59,0)
 ..S DGLINE=DGLINE+1
"RTN","DGMTHL1",60,0)
 Q
"RTN","DGMTHL1",61,0)
 ;
"RTN","DGMTHL1",62,0)
CHKADD(HARDSHIP) ;
"RTN","DGMTHL1",63,0)
 ;Determines whether granting a hardship is appropriate
"RTN","DGMTHL1",64,0)
 ;Input:
"RTN","DGMTHL1",65,0)
 ;  HARDSHIP - hardship array (pass by reference)
"RTN","DGMTHL1",66,0)
 ;Output:
"RTN","DGMTHL1",67,0)
 ;  Function Value - 1 if the hardship can be granted, 0 otherwise   
"RTN","DGMTHL1",68,0)
 ;
"RTN","DGMTHL1",69,0)
 N CODE
"RTN","DGMTHL1",70,0)
 S CODE=""
"RTN","DGMTHL1",71,0)
 S CODE=$$GETCODE^DGMTH(HARDSHIP("CURRENT STATUS"))
"RTN","DGMTHL1",72,0)
 I CODE'="C",CODE'="P",CODE'="G" Q 0
"RTN","DGMTHL1",73,0)
 Q 1
"RTN","DGMTHL1",74,0)
 ;
"RTN","DGMTHL1",75,0)
ADD(HARDSHIP) ;
"RTN","DGMTHL1",76,0)
 ;Add hardship protocol.
"RTN","DGMTHL1",77,0)
 ;
"RTN","DGMTHL1",78,0)
 ;Input:
"RTN","DGMTHL1",79,0)
 ;  HARDSHIP - hardship array, pass by reference
"RTN","DGMTHL1",80,0)
 ;Output:
"RTN","DGMTHL1",81,0)
 ;  HARDSHIP - hardship array (pass by reference)
"RTN","DGMTHL1",82,0)
 ;
"RTN","DGMTHL1",83,0)
 N CODE,ERROR
"RTN","DGMTHL1",84,0)
 I $G(DUZ)'>1 W !,"YOUR DUZ IS NOT DEFINED!" D PAUSE^VALM1 S VALMBCK="R" Q
"RTN","DGMTHL1",85,0)
 S CODE=""
"RTN","DGMTHL1",86,0)
 S CODE=$$GETCODE^DGMTH(HARDSHIP("CURRENT STATUS"))
"RTN","DGMTHL1",87,0)
 I CODE'="C",CODE'="P",CODE'="G" W !,"PATIENT NOT CURRENTLY RESPONSIBLE FOR COPAYMENT CHARGES!" D PAUSE^VALM1 Q
"RTN","DGMTHL1",88,0)
 S HARDSHIP("EFFECTIVE")=DT
"RTN","DGMTHL1",89,0)
 S HARDSHIP("SITE")=$$GETSITE^DGMTU4(.DUZ)
"RTN","DGMTHL1",90,0)
 I HARDSHIP("TEST STATUS")="" S HARDSHIP("TEST STATUS")=HARDSHIP("CURRENT STATUS")
"RTN","DGMTHL1",91,0)
 ;S HARDSHIP("CURRENT STATUS")=$$GETSTAT^DGMTH("A",1)
"RTN","DGMTHL1",92,0)
 S HARDSHIP("BY")=DUZ
"RTN","DGMTHL1",93,0)
 S HARDSHIP("CTGRY CHNGD BY")=DUZ
"RTN","DGMTHL1",94,0)
 S HARDSHIP("DT/TM CTGRY CHNGD")=$$NOW^XLFDT
"RTN","DGMTHL1",95,0)
 S HARDSHIP("HARDSHIP?")=1
"RTN","DGMTHL1",96,0)
 D
"RTN","DGMTHL1",97,0)
 .I '$$GETSTAT(.HARDSHIP) Q
"RTN","DGMTHL1",98,0)
 .I '$$GETEFF(.HARDSHIP) Q
"RTN","DGMTHL1",99,0)
 .I '$$GETREV(.HARDSHIP) Q
"RTN","DGMTHL1",100,0)
 .I '$$GETREAS(.HARDSHIP) Q
"RTN","DGMTHL1",101,0)
 .D PRIOR(.HARDSHIP)
"RTN","DGMTHL1",102,0)
 .I $$STORE^DGMTH(.HARDSHIP,.ERROR) D
"RTN","DGMTHL1",103,0)
 ..N EVENTS
"RTN","DGMTHL1",104,0)
 ..S EVENTS("IVM")=1
"RTN","DGMTHL1",105,0)
 ..I $$LOG^IVMPLOG(HARDSHIP("DFN"),HARDSHIP("YEAR"),.EVENTS)
"RTN","DGMTHL1",106,0)
 .E  W !,$G(ERROR) D PAUSE^VALM1
"RTN","DGMTHL1",107,0)
 .D AFTER(.HARDSHIP)
"RTN","DGMTHL1",108,0)
 D INIT^DGMTHL
"RTN","DGMTHL1",109,0)
 S VALMBCK="R"
"RTN","DGMTHL1",110,0)
 Q
"RTN","DGMTHL1",111,0)
 ;
"RTN","DGMTHL1",112,0)
EDIT(HARDSHIP) ;
"RTN","DGMTHL1",113,0)
 ;Add hardship protocol.
"RTN","DGMTHL1",114,0)
 ;
"RTN","DGMTHL1",115,0)
 ;Input:
"RTN","DGMTHL1",116,0)
 ;  HARDSHIP - hardship array, pass by reference
"RTN","DGMTHL1",117,0)
 ;Output:
"RTN","DGMTHL1",118,0)
 ;  HARDSHIP - hardship array (pass by reference)
"RTN","DGMTHL1",119,0)
 ;
"RTN","DGMTHL1",120,0)
 N ERROR
"RTN","DGMTHL1",121,0)
 D
"RTN","DGMTHL1",122,0)
 .I '$$GETSTAT(.HARDSHIP,1) Q
"RTN","DGMTHL1",123,0)
 .I '$$GETEFF(.HARDSHIP) Q
"RTN","DGMTHL1",124,0)
 .I '$$GETREV(.HARDSHIP) Q
"RTN","DGMTHL1",125,0)
 .I '$$GETREAS(.HARDSHIP) Q
"RTN","DGMTHL1",126,0)
 .D PRIOR(.HARDSHIP)
"RTN","DGMTHL1",127,0)
 .I $$STORE^DGMTH(.HARDSHIP,.ERROR) D
"RTN","DGMTHL1",128,0)
 ..N EVENTS
"RTN","DGMTHL1",129,0)
 ..S EVENTS("IVM")=1
"RTN","DGMTHL1",130,0)
 ..I $$LOG^IVMPLOG(HARDSHIP("DFN"),HARDSHIP("YEAR"),.EVENTS)
"RTN","DGMTHL1",131,0)
 .E  W !,$G(ERROR) D PAUSE^VALM1
"RTN","DGMTHL1",132,0)
 .D AFTER(.HARDSHIP)
"RTN","DGMTHL1",133,0)
 D INIT^DGMTHL
"RTN","DGMTHL1",134,0)
 S VALMBCK="R"
"RTN","DGMTHL1",135,0)
 Q
"RTN","DGMTHL1",136,0)
 ;
"RTN","DGMTHL1",137,0)
CHKDEL(HARDSHIP) ;
"RTN","DGMTHL1",138,0)
 ;Checks whether the hardship can be deleted.
"RTN","DGMTHL1",139,0)
 ;Input:
"RTN","DGMTHL1",140,0)
 ;  HARDSHIP - hardship array (pass by reference)
"RTN","DGMTHL1",141,0)
 I (HARDSHIP("HARDSHIP?")="1"),(HARDSHIP("BY")!((+HARDSHIP("SITE")=+$$GETSITE^DGMTU4($G(DUZ))))) Q 1
"RTN","DGMTHL1",142,0)
 Q 0
"RTN","DGMTHL1",143,0)
DELETE(HARDSHIP) ;
"RTN","DGMTHL1",144,0)
 ;Deletes the hardship.
"RTN","DGMTHL1",145,0)
 ;
"RTN","DGMTHL1",146,0)
 ;Input:
"RTN","DGMTHL1",147,0)
 ;  HARDSHIP - hardship array (pass by reference)
"RTN","DGMTHL1",148,0)
 ;
"RTN","DGMTHL1",149,0)
 N ERROR
"RTN","DGMTHL1",150,0)
 I $$RUSURE,'$$DELETE^DGMTH(.HARDSHIP,1,.ERROR) W !,"AN ERROR OCCURRED - "_$G(ERROR) D PAUSE^VALM1
"RTN","DGMTHL1",151,0)
 D INIT^DGMTHL
"RTN","DGMTHL1",152,0)
 S VALMBCK="R"
"RTN","DGMTHL1",153,0)
 Q
"RTN","DGMTHL1",154,0)
 ;
"RTN","DGMTHL1",155,0)
GETSTAT(HARDSHIP,EDITFLG) ;
"RTN","DGMTHL1",156,0)
 ;Asks the user to enter the means test status.
"RTN","DGMTHL1",157,0)
 ;
"RTN","DGMTHL1",158,0)
 ;Input:
"RTN","DGMTHL1",159,0)
 ;  HARDSHIP - hardship array (pass by reference)
"RTN","DGMTHL1",160,0)
 ;  EDITFLG  - Edit Flag: 1=Edit
"RTN","DGMTHL1",161,0)
 ;Output:
"RTN","DGMTHL1",162,0)
 ;  HARDSHIP("CURRENT STATUS")
"RTN","DGMTHL1",163,0)
 ;
"RTN","DGMTHL1",164,0)
 N DIR,FLTRSTAT
"RTN","DGMTHL1",165,0)
 S FLTRSTAT=$$GETCODE^DGMTH($S($G(EDITFLG):HARDSHIP("TEST STATUS"),1:HARDSHIP("CURRENT STATUS")))
"RTN","DGMTHL1",166,0)
 S DIR(0)="Pr^408.32:EMZ"
"RTN","DGMTHL1",167,0)
 S DIR("S")="I $P(^(0),U,19)=1"
"RTN","DGMTHL1",168,0)
 I "CP"[FLTRSTAT S DIR("S")=DIR("S")_",""AG""[$P(^(0),U,2)"
"RTN","DGMTHL1",169,0)
 I FLTRSTAT="G" S DIR("S")=DIR("S")_",""A""[$P(^(0),U,2)"
"RTN","DGMTHL1",170,0)
 S DIR("A")="Means Test Status"
"RTN","DGMTHL1",171,0)
 S DIR("B")=$$EXT^DGMTH("CURRENT STATUS",HARDSHIP("CURRENT STATUS"))
"RTN","DGMTHL1",172,0)
 D FULL^VALM1
"RTN","DGMTHL1",173,0)
 D ^DIR
"RTN","DGMTHL1",174,0)
 I $D(DIRUT) Q 0
"RTN","DGMTHL1",175,0)
 I Y<1 Q 0
"RTN","DGMTHL1",176,0)
 S HARDSHIP("CURRENT STATUS")=+Y
"RTN","DGMTHL1",177,0)
 ; Don't reset agreed to pay if mt copay req/GMT copay req/pend adj
"RTN","DGMTHL1",178,0)
 S:"^C^G^P^"'[(U_$P($G(^DG(408.32,+Y,0)),U,2)_U) HARDSHIP("AGREE")=""
"RTN","DGMTHL1",179,0)
 S VALMBCK="R"
"RTN","DGMTHL1",180,0)
 Q 1
"RTN","DGMTHL1",181,0)
 ;
"RTN","DGMTHL1",182,0)
GETEFF(HARDSHIP) ;
"RTN","DGMTHL1",183,0)
 ;Asks the user to enter the effective date.  Returns 1 on success, 0 on failure
"RTN","DGMTHL1",184,0)
 ;
"RTN","DGMTHL1",185,0)
 ;Input:
"RTN","DGMTHL1",186,0)
 ;  HARDSHIP - hardship array (pass by reference)
"RTN","DGMTHL1",187,0)
 ;Output:
"RTN","DGMTHL1",188,0)
 ;  HARDSHIP("EFFECTIVE")
"RTN","DGMTHL1",189,0)
 ;
"RTN","DGMTHL1",190,0)
 N DIR
"RTN","DGMTHL1",191,0)
 S DIR(0)="D^"_HARDSHIP("TEST DATE")_":"_DT_":EX"
"RTN","DGMTHL1",192,0)
 S DIR("A")="Hardship Effective Date"
"RTN","DGMTHL1",193,0)
 S DIR("B")=$$FMTE^XLFDT($S(HARDSHIP("EFFECTIVE"):HARDSHIP("EFFECTIVE"),1:HARDSHIP("TEST DATE")),"1D")
"RTN","DGMTHL1",194,0)
 D ^DIR
"RTN","DGMTHL1",195,0)
 I $D(DIRUT) Q 0
"RTN","DGMTHL1",196,0)
 I Y<1 Q 0
"RTN","DGMTHL1",197,0)
 S HARDSHIP("EFFECTIVE")=Y
"RTN","DGMTHL1",198,0)
 Q 1
"RTN","DGMTHL1",199,0)
GETREV(HARDSHIP) ;
"RTN","DGMTHL1",200,0)
 ;Asks the user to enter the review date.  Returns 1 on success, 0 on failure
"RTN","DGMTHL1",201,0)
 ;
"RTN","DGMTHL1",202,0)
 ;Input:
"RTN","DGMTHL1",203,0)
 ;  HARDSHIP - hardship array (pass by reference)
"RTN","DGMTHL1",204,0)
 ;Output:
"RTN","DGMTHL1",205,0)
 ;  HARDSHIP("REVIEW")
"RTN","DGMTHL1",206,0)
 ;
"RTN","DGMTHL1",207,0)
 N RET,STOP,X,Y
"RTN","DGMTHL1",208,0)
 S (STOP,RET)=0
"RTN","DGMTHL1",209,0)
 S DIR(0)="DO^::EX"
"RTN","DGMTHL1",210,0)
 S DIR("A")="Hardship Review Date"
"RTN","DGMTHL1",211,0)
 I HARDSHIP("REVIEW") S DIR("B")=$$FMTE^XLFDT(HARDSHIP("REVIEW"),"1D")
"RTN","DGMTHL1",212,0)
 S DIR("?")="Enter a future date if you wish to conduct a review."
"RTN","DGMTHL1",213,0)
 F  D  Q:STOP
"RTN","DGMTHL1",214,0)
 .N DIR
"RTN","DGMTHL1",215,0)
 .S DIR(0)="DO^::EX"
"RTN","DGMTHL1",216,0)
 .S DIR("A")="Hardship Review Date"
"RTN","DGMTHL1",217,0)
 .I HARDSHIP("REVIEW") S DIR("B")=$$FMTE^XLFDT(HARDSHIP("REVIEW"),"1D")
"RTN","DGMTHL1",218,0)
 .S DIR("?")="Enter a future date if you wish to conduct a review."
"RTN","DGMTHL1",219,0)
 .D ^DIR
"RTN","DGMTHL1",220,0)
 .I $D(DTOUT)!$D(DUOUT)!$D(DIROUT) S STOP=1,RET=0 Q
"RTN","DGMTHL1",221,0)
 .I X="@" S Y="",STOP=1,RET=1 Q
"RTN","DGMTHL1",222,0)
 .I Y=-1 S STOP=1,RET=0 Q
"RTN","DGMTHL1",223,0)
 .I Y<DT W !,DIR("?") Q
"RTN","DGMTHL1",224,0)
 .S (STOP,RET)=1
"RTN","DGMTHL1",225,0)
 S:RET HARDSHIP("REVIEW")=Y
"RTN","DGMTHL1",226,0)
 Q RET
"RTN","DGMTHL1",227,0)
 ;
"RTN","DGMTHL1",228,0)
GETREAS(HARDSHIP) ;
"RTN","DGMTHL1",229,0)
 ;Asks the user to enter the hardship reason.
"RTN","DGMTHL1",230,0)
 ;
"RTN","DGMTHL1",231,0)
 ;Input:
"RTN","DGMTHL1",232,0)
 ;  HARDSHIP - hardship array (pass by reference)
"RTN","DGMTHL1",233,0)
 ;Output
"RTN","DGMTHL1",234,0)
 ;  HARDSHIP("REASON")
"RTN","DGMTHL1",235,0)
 ;
"RTN","DGMTHL1",236,0)
 N DIR
"RTN","DGMTHL1",237,0)
 S DIR(0)="FO^3:80"
"RTN","DGMTHL1",238,0)
 S DIR("A")="Hardship Reason"
"RTN","DGMTHL1",239,0)
 S DIR("B")=$G(HARDSHIP("REASON")) K:DIR("B")="" DIR("B")
"RTN","DGMTHL1",240,0)
 D ^DIR
"RTN","DGMTHL1",241,0)
 I $D(DTOUT)!$D(DUOUT) Q 0
"RTN","DGMTHL1",242,0)
 S HARDSHIP("REASON")=Y
"RTN","DGMTHL1",243,0)
 Q 1
"RTN","DGMTHL1",244,0)
 ;
"RTN","DGMTHL1",245,0)
PRIOR(HARDSHIP) ;set up for means test event driver
"RTN","DGMTHL1",246,0)
 S DFN=HARDSHIP("DFN")
"RTN","DGMTHL1",247,0)
 S DGMTI=HARDSHIP("MTIEN")
"RTN","DGMTHL1",248,0)
 S DGMTS=HARDSHIP("CURRENT STATUS")
"RTN","DGMTHL1",249,0)
 S DGMTACT="CAT"
"RTN","DGMTHL1",250,0)
 S DGMTYPT=1
"RTN","DGMTHL1",251,0)
 D PRIOR^DGMTEVT
"RTN","DGMTHL1",252,0)
 Q
"RTN","DGMTHL1",253,0)
AFTER(HARDSHIP) ;calls means test event driver
"RTN","DGMTHL1",254,0)
 D AFTER^DGMTEVT
"RTN","DGMTHL1",255,0)
 S DGMTINF=0
"RTN","DGMTHL1",256,0)
 D EN^DGMTEVT
"RTN","DGMTHL1",257,0)
 K DGMTA,DGMTACT,DGMTDT,DGMTI,DGMTINF,DGMTP,DGMTS,DGMTYPT,I,J,Y
"RTN","DGMTHL1",258,0)
 Q
"RTN","DGMTHL1",259,0)
COMMENTS(HARDSHIP) ;
"RTN","DGMTHL1",260,0)
 ;Edit Comments protocol.
"RTN","DGMTHL1",261,0)
 ;
"RTN","DGMTHL1",262,0)
 ;Input:
"RTN","DGMTHL1",263,0)
 ;  HARDSHIP - hardship array, pass by reference
"RTN","DGMTHL1",264,0)
 ;Output:
"RTN","DGMTHL1",265,0)
 ;  none
"RTN","DGMTHL1",266,0)
 ;
"RTN","DGMTHL1",267,0)
 N DA,DIE,DR
"RTN","DGMTHL1",268,0)
 I $G(DUZ)'>1 W !,"YOUR DUZ IS NOT DEFINED!" D PAUSE^VALM1 S VALMBCK="R" Q
"RTN","DGMTHL1",269,0)
 D FULL^VALM1
"RTN","DGMTHL1",270,0)
 I $G(HARDSHIP("MTIEN")) S DR="50",DA=HARDSHIP("MTIEN"),DIE=408.31 D ^DIE
"RTN","DGMTHL1",271,0)
 D INIT^DGMTHL
"RTN","DGMTHL1",272,0)
 I VALMCNT<15 S VALMBG=1
"RTN","DGMTHL1",273,0)
 S VALMBCK="R"
"RTN","DGMTHL1",274,0)
 Q
"RTN","DGMTHL1",275,0)
 ;
"RTN","DGMTHL1",276,0)
RUSURE() ;
"RTN","DGMTHL1",277,0)
 ;Description: Asks user 'Are you sure?'
"RTN","DGMTHL1",278,0)
 ;Input: none
"RTN","DGMTHL1",279,0)
 ;Output: Function Value returns 0 or 1
"RTN","DGMTHL1",280,0)
 ;
"RTN","DGMTHL1",281,0)
 N DIR
"RTN","DGMTHL1",282,0)
 S DIR(0)="Y"
"RTN","DGMTHL1",283,0)
 S DIR("A")="Are you sure that the hardship should be deleted"
"RTN","DGMTHL1",284,0)
 S DIR("B")="NO"
"RTN","DGMTHL1",285,0)
 D ^DIR
"RTN","DGMTHL1",286,0)
 Q:$D(DIRUT) 0
"RTN","DGMTHL1",287,0)
 Q Y
"VER")
8.0^22.0
"BLD",7589,6)
^713
**END**
**END**
