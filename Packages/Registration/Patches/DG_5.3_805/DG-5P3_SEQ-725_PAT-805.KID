Released DG*5.3*805 SEQ #725
Extracted from mail message
**KIDS**:DG*5.3*805^

**INSTALL NAME**
DG*5.3*805
"BLD",7782,0)
DG*5.3*805^REGISTRATION^0^3090619^y
"BLD",7782,4,0)
^9.64PA^^
"BLD",7782,6.3)
4
"BLD",7782,"ABPKG")
n
"BLD",7782,"KRN",0)
^9.67PA^779.2^20
"BLD",7782,"KRN",.4,0)
.4
"BLD",7782,"KRN",.401,0)
.401
"BLD",7782,"KRN",.402,0)
.402
"BLD",7782,"KRN",.403,0)
.403
"BLD",7782,"KRN",.5,0)
.5
"BLD",7782,"KRN",.84,0)
.84
"BLD",7782,"KRN",3.6,0)
3.6
"BLD",7782,"KRN",3.8,0)
3.8
"BLD",7782,"KRN",9.2,0)
9.2
"BLD",7782,"KRN",9.8,0)
9.8
"BLD",7782,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",7782,"KRN",9.8,"NM",1,0)
DGRPEIS1^^0^B29345023
"BLD",7782,"KRN",9.8,"NM",2,0)
DGMTU2^^0^B45258364
"BLD",7782,"KRN",9.8,"NM","B","DGMTU2",2)

"BLD",7782,"KRN",9.8,"NM","B","DGRPEIS1",1)

"BLD",7782,"KRN",19,0)
19
"BLD",7782,"KRN",19.1,0)
19.1
"BLD",7782,"KRN",101,0)
101
"BLD",7782,"KRN",409.61,0)
409.61
"BLD",7782,"KRN",771,0)
771
"BLD",7782,"KRN",779.2,0)
779.2
"BLD",7782,"KRN",870,0)
870
"BLD",7782,"KRN",8989.51,0)
8989.51
"BLD",7782,"KRN",8989.52,0)
8989.52
"BLD",7782,"KRN",8994,0)
8994
"BLD",7782,"KRN","B",.4,.4)

"BLD",7782,"KRN","B",.401,.401)

"BLD",7782,"KRN","B",.402,.402)

"BLD",7782,"KRN","B",.403,.403)

"BLD",7782,"KRN","B",.5,.5)

"BLD",7782,"KRN","B",.84,.84)

"BLD",7782,"KRN","B",3.6,3.6)

"BLD",7782,"KRN","B",3.8,3.8)

"BLD",7782,"KRN","B",9.2,9.2)

"BLD",7782,"KRN","B",9.8,9.8)

"BLD",7782,"KRN","B",19,19)

"BLD",7782,"KRN","B",19.1,19.1)

"BLD",7782,"KRN","B",101,101)

"BLD",7782,"KRN","B",409.61,409.61)

"BLD",7782,"KRN","B",771,771)

"BLD",7782,"KRN","B",779.2,779.2)

"BLD",7782,"KRN","B",870,870)

"BLD",7782,"KRN","B",8989.51,8989.51)

"BLD",7782,"KRN","B",8989.52,8989.52)

"BLD",7782,"KRN","B",8994,8994)

"BLD",7782,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",7782,"QUES",0)
^9.62^^
"BLD",7782,"REQB",0)
^9.611^1^1
"BLD",7782,"REQB",1,0)
DG*5.3*688^2
"BLD",7782,"REQB","B","DG*5.3*688",1)

"MBREQ")
0
"PKG",47,-1)
1^1
"PKG",47,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",47,20,0)
^9.402P^^
"PKG",47,22,0)
^9.49I^1^1
"PKG",47,22,1,0)
5.3^2930813^2960613
"PKG",47,22,1,"PAH",1,0)
805^3090619
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","DGMTU2")
0^2^B45258364^B46628572
"RTN","DGMTU2",1,0)
DGMTU2 ;ALB/RMO - Income Utilities ; 6/18/09 6:48pm
"RTN","DGMTU2",2,0)
 ;;5.3;Registration;**33,688,805**;Aug 13, 1993;Build 4
"RTN","DGMTU2",3,0)
 ;
"RTN","DGMTU2",4,0)
GETIENS(DFN,DGPRI,DGDT) ;Look-up individual annual income and income relation
"RTN","DGMTU2",5,0)
 ;                 Input  -- DFN    Patient file IEN
"RTN","DGMTU2",6,0)
 ;                           DGPRI  Patient Relation IEN
"RTN","DGMTU2",7,0)
 ;                           DGDT   Date/Time
"RTN","DGMTU2",8,0)
 ;                 Output -- DGINI  Individual Annual Income IEN
"RTN","DGMTU2",9,0)
 ;                           DGIRI  Income Relation IEN
"RTN","DGMTU2",10,0)
 ;                           DGERR  1=ERROR and 0=NO ERROR
"RTN","DGMTU2",11,0)
 S DGERR=0
"RTN","DGMTU2",12,0)
 S DGINI=$$GETIN(DFN,DGPRI,DGDT) S:DGINI<0 DGERR=1
"RTN","DGMTU2",13,0)
 I 'DGERR S DGIRI=$$GETIR(DFN,DGINI) S:DGIRI<0 DGERR=1
"RTN","DGMTU2",14,0)
 Q
"RTN","DGMTU2",15,0)
 ;
"RTN","DGMTU2",16,0)
GETIN(DFN,DGPRI,DGDT) ;Look-up individual annual income
"RTN","DGMTU2",17,0)
 ;                Add a new entry if one is not found
"RTN","DGMTU2",18,0)
 ;                 Input  -- DFN    Patient file IEN
"RTN","DGMTU2",19,0)
 ;                           DGPRI  Patient Relation IEN
"RTN","DGMTU2",20,0)
 ;                           DGDT   Date/Time
"RTN","DGMTU2",21,0)
 ;                 Output -- Individual Annual Income IEN 
"RTN","DGMTU2",22,0)
 N DGINI,DGLY
"RTN","DGMTU2",23,0)
 S DGLY=$$LYR^DGMTSCU1(DGDT)
"RTN","DGMTU2",24,0)
 S DGINI=+$$IAI^DGMTU3(DGPRI,DGLY)
"RTN","DGMTU2",25,0)
 I '$D(^DGMT(408.21,DGINI,0)) S DGINI=$$ADDIN(DFN,DGPRI,DGLY)
"RTN","DGMTU2",26,0)
GETINQ Q $S(DGINI>0:DGINI,1:-1)
"RTN","DGMTU2",27,0)
 ;
"RTN","DGMTU2",28,0)
ADDIN(DFN,DGPRI,DGLY) ;Add a new individual annual income entry
"RTN","DGMTU2",29,0)
 ;                 Input  -- DFN    Patient file IEN
"RTN","DGMTU2",30,0)
 ;                           DGPRI  Patient Relation IEN
"RTN","DGMTU2",31,0)
 ;                           DGLY   Last Year
"RTN","DGMTU2",32,0)
 ;                 Output -- New Individual Annual Income IEN 
"RTN","DGMTU2",33,0)
 N DA,DD,DGINI,DGNOW,DIC,DIK,DINUM,DLAYGO,DO,X,Y,%
"RTN","DGMTU2",34,0)
 D NOW^%DTC S DGNOW=%
"RTN","DGMTU2",35,0)
 S X=DGLY,(DIC,DIK)="^DGMT(408.21,",DIC(0)="L",DLAYGO=408.21
"RTN","DGMTU2",36,0)
 S DIC("DR")=".02////"_DGPRI_";101////"_DUZ_";102////"_DGNOW
"RTN","DGMTU2",37,0)
 D FILE^DICN S DGINI=+Y
"RTN","DGMTU2",38,0)
ADDINQ Q $S(DGINI>0:DGINI,1:-1)
"RTN","DGMTU2",39,0)
 ;
"RTN","DGMTU2",40,0)
GETIR(DFN,DGINI) ;Look-up income relation
"RTN","DGMTU2",41,0)
 ;                Add a new entry if one is not found
"RTN","DGMTU2",42,0)
 ;                 Input  -- DFN    Patient file IEN
"RTN","DGMTU2",43,0)
 ;                           DGINI  Individual Annual Income IEN
"RTN","DGMTU2",44,0)
 ;                 Output -- Income Relation IEN
"RTN","DGMTU2",45,0)
 N DGIRI
"RTN","DGMTU2",46,0)
 S DGIRI=+$O(^DGMT(408.22,"AIND",DGINI,0))
"RTN","DGMTU2",47,0)
 I '$D(^DGMT(408.22,DGIRI,0)) S DGIRI=$$ADDIR(DFN,DGINI)
"RTN","DGMTU2",48,0)
GETIRQ Q $S(DGIRI>0:DGIRI,1:-1)
"RTN","DGMTU2",49,0)
 ;
"RTN","DGMTU2",50,0)
ADDIR(DFN,DGINI) ;Add a new income relation entry
"RTN","DGMTU2",51,0)
 ;                 Input  -- DFN    Patient file IEN
"RTN","DGMTU2",52,0)
 ;                           DGINI  Individual Annual Income IEN
"RTN","DGMTU2",53,0)
 ;                 Output -- New Income Relation IEN
"RTN","DGMTU2",54,0)
 N DA,DD,DGIRI,DIC,DIK,DINUM,DLAYGO,DO,X,Y
"RTN","DGMTU2",55,0)
 S X=DFN,(DIC,DIK)="^DGMT(408.22,",DIC(0)="L",DLAYGO=408.22
"RTN","DGMTU2",56,0)
 S DIC("DR")=".02////"_DGINI
"RTN","DGMTU2",57,0)
 D FILE^DICN S DGIRI=+Y
"RTN","DGMTU2",58,0)
ADDIRQ Q $S(DGIRI>0:DGIRI,1:-1)
"RTN","DGMTU2",59,0)
 ;
"RTN","DGMTU2",60,0)
 ; GTS - DG*5.3*688
"RTN","DGMTU2",61,0)
VRCHKUP(DGMTYPT,TYPE,DGOLDDT,DGNWDT) ;Check the version and convert IAI records, as needed
"RTN","DGMTU2",62,0)
 ; Input  -- DGMTYPT  : Type of test being processed
"RTN","DGMTU2",63,0)
 ;           TYPE     : Optional - used when called from COPYRX^DGMTR1
"RTN","DGMTU2",64,0)
 ;                                  to indicate existing MT or LTC
"RTN","DGMTU2",65,0)
 ;           DGOLDDT  : Optional - Date of Test for Old MT/CP test
"RTN","DGMTU2",66,0)
 ;           DGNWDT   : Optional - Date of Test for New MT/CP test
"RTN","DGMTU2",67,0)
 ; Output -- CONVRTD  : 1 - IAI Records converted
"RTN","DGMTU2",68,0)
 ;                    : 0 - IAI Records not converted
"RTN","DGMTU2",69,0)
 ;
"RTN","DGMTU2",70,0)
 N CONVRTD,DGMTLST,DGOTHIEN,DGSAMEYR,DGDEC31D,DGERR,DGMTRT,DGMTRT2
"RTN","DGMTU2",71,0)
 S CONVRTD=0
"RTN","DGMTU2",72,0)
 S DGSAMEYR=0
"RTN","DGMTU2",73,0)
 ;
"RTN","DGMTU2",74,0)
 I +$G(DGOLDDT)=0 S DGOLDDT=DT ;When DGOLDDT is not defined, default today's date
"RTN","DGMTU2",75,0)
 I +$G(DGNWDT)'=0 S:($E(DGOLDDT,1,3)=$E(DGNWDT,1,3)) DGSAMEYR=1 ;If have New and Old test dates, check for same yr
"RTN","DGMTU2",76,0)
 S DGDEC31D=$E(DGOLDDT,1,3)_"1231" ;Set search date of Dec 31 of Old Test year
"RTN","DGMTU2",77,0)
 ;
"RTN","DGMTU2",78,0)
 ; Check type of test being added or edited and then check for another test in the current year
"RTN","DGMTU2",79,0)
 ; If Same year, get new test
"RTN","DGMTU2",80,0)
 I DGSAMEYR DO
"RTN","DGMTU2",81,0)
 .; NOTE: MT can not be created from a LTC CP Exempt test
"RTN","DGMTU2",82,0)
 .I DGMTYPT=1 DO
"RTN","DGMTU2",83,0)
 . . S DGMTLST=$$LST^DGMTU(DFN,DGNWDT,2) ;Find existing CP test - MT required
"RTN","DGMTU2",84,0)
 . . S:($E($P(DGMTLST,"^",2),1,3)'=$E(DGOLDDT,1,3)) DGMTLST=$$LSTNP^DGMTU21(DFN,DGNWDT,2) ; Last primary test is previous YR
"RTN","DGMTU2",85,0)
 . ; When updating CP test find either MT or LTC CP Exemption test
"RTN","DGMTU2",86,0)
 .I DGMTYPT=2 DO
"RTN","DGMTU2",87,0)
 . . IF '$D(TYPE) S DGMTLST=$$LST^DGMTU(DFN,DGNWDT,1) ;Find existing MT test - CP required
"RTN","DGMTU2",88,0)
 . . IF $D(TYPE) S DGMTLST=$$LST^DGMTU(DFN,DGNWDT,TYPE) ;Find existing MT or LTC - CP Exempt
"RTN","DGMTU2",89,0)
 .I DGMTYPT=4 DO
"RTN","DGMTU2",90,0)
 . . IF '$D(TYPE) S DGMTLST=$$LST^DGMTU(DFN,DGNWDT,1) ;Find existing MT test - CP required
"RTN","DGMTU2",91,0)
 . . IF $D(TYPE) S DGMTLST=$$LST^DGMTU(DFN,DGNWDT,TYPE) ;Find existing MT - CP req.
"RTN","DGMTU2",92,0)
 . . ; If Last primary test is previous YR, look for last [may not be primary] (to check current year)
"RTN","DGMTU2",93,0)
 . . I $E($P(DGMTLST,"^",2),1,3)'=$E(DGOLDDT,1,3) DO
"RTN","DGMTU2",94,0)
 . . . S:'$D(TYPE) DGMTLST=$$LSTNP^DGMTU21(DFN,DGNWDT,1)
"RTN","DGMTU2",95,0)
 . . . S:$D(TYPE) DGMTLST=$$LSTNP^DGMTU21(DFN,DGNWDT,TYPE)
"RTN","DGMTU2",96,0)
 ;If not same year, search for new test in old test year
"RTN","DGMTU2",97,0)
 I 'DGSAMEYR DO
"RTN","DGMTU2",98,0)
 .; NOTE: MT can not be created from a LTC CP Exempt test
"RTN","DGMTU2",99,0)
 .I DGMTYPT=1 DO
"RTN","DGMTU2",100,0)
 . . S DGMTLST=$$LST^DGMTU(DFN,DGDEC31D,2) ;Find existing CP test - MT required
"RTN","DGMTU2",101,0)
 .; When updating CP test find either MT or LTC CP Exemption test
"RTN","DGMTU2",102,0)
 .I DGMTYPT=2 DO
"RTN","DGMTU2",103,0)
 . . IF '$D(TYPE) S DGMTLST=$$LST^DGMTU(DFN,DGDEC31D,1) ;Find existing MT test - CP required
"RTN","DGMTU2",104,0)
 . . IF $D(TYPE) S DGMTLST=$$LST^DGMTU(DFN,DGDEC31D,TYPE) ;Find existing MT or LTC - CP Exempt
"RTN","DGMTU2",105,0)
 .I DGMTYPT=4 DO
"RTN","DGMTU2",106,0)
 . . IF '$D(TYPE) S DGMTLST=$$LST^DGMTU(DFN,DGDEC31D,1) ;Find existing MT test - CP required
"RTN","DGMTU2",107,0)
 . . IF $D(TYPE) S DGMTLST=$$LST^DGMTU(DFN,DGDEC31D,TYPE) ;Find existing MT test - CP req.
"RTN","DGMTU2",108,0)
 . . ; If Last primary test is previous YR, look for last [may not be primary] (to check current year)
"RTN","DGMTU2",109,0)
 . . I $E($P(DGMTLST,"^",2),1,3)'=$E(DGOLDDT,1,3) DO
"RTN","DGMTU2",110,0)
 . . . S:'$D(TYPE) DGMTLST=$$LSTNP^DGMTU21(DFN,DGDEC31D,1)
"RTN","DGMTU2",111,0)
 . . . S:$D(TYPE) DGMTLST=$$LSTNP^DGMTU21(DFN,DGDEC31D,TYPE)
"RTN","DGMTU2",112,0)
 ;
"RTN","DGMTU2",113,0)
 ; LTC4 test does not require a record in 408.31, 408.21 records can exist without MT/CP records
"RTN","DGMTU2",114,0)
 ; If 408.31 entry is not found and LTC4 is being added
"RTN","DGMTU2",115,0)
 I (+$G(DGMTLST)'>0),(+DGMTYPT=4) DO
"RTN","DGMTU2",116,0)
 . N DGINC2,DGREL2,DGINR2,DGDEP2
"RTN","DGMTU2",117,0)
 . M:$D(DGINC) DGINC2=DGINC
"RTN","DGMTU2",118,0)
 . M:$D(DGREL) DGREL2=DGREL
"RTN","DGMTU2",119,0)
 . M:$D(DGINR) DGINR2=DGINR
"RTN","DGMTU2",120,0)
 . M:$D(DGDEP) DGDEP2=DGDEP
"RTN","DGMTU2",121,0)
 . ; Search IAI records in 408.21; If found convert to 1, as necessary
"RTN","DGMTU2",122,0)
 . D ALL^DGMTU21(DFN,"VSD",DT,"IPR")
"RTN","DGMTU2",123,0)
 . I $D(DGINC) DO
"RTN","DGMTU2",124,0)
 . . N OTHRTST
"RTN","DGMTU2",125,0)
 . . D ISCNVRT^DGMTUTL(.DGINC)
"RTN","DGMTU2",126,0)
 . . S OTHRTST=$$UPDTTSTS^DGMTU21(DFN,$E($P(DGMTLST,"^",2),1,3))
"RTN","DGMTU2",127,0)
 . . S CONVRTD=1
"RTN","DGMTU2",128,0)
 . ; Restore DGINC, DGREL, DGINR, and DGDEP
"RTN","DGMTU2",129,0)
 . K DGINC,DGREL,DGINR,DGDEP
"RTN","DGMTU2",130,0)
 . M:$D(DGINC2) DGINC=DGINC2
"RTN","DGMTU2",131,0)
 . M:$D(DGREL2) DGREL=DGREL2
"RTN","DGMTU2",132,0)
 . M:$D(DGINR2) DGINR=DGINR2
"RTN","DGMTU2",133,0)
 . M:$D(DGDEP2) DGDEP=DGDEP2
"RTN","DGMTU2",134,0)
 ;
"RTN","DGMTU2",135,0)
 ; If another test is found
"RTN","DGMTU2",136,0)
 I $D(DGMTLST),(+DGMTLST>0) DO
"RTN","DGMTU2",137,0)
 . ; if the year of the test that have = year of test with IAI records to analyze
"RTN","DGMTU2",138,0)
 . I ($E($P(DGMTLST,"^",2),1,3)=$E(DGOLDDT,1,3)) DO
"RTN","DGMTU2",139,0)
 . . S DGOTHIEN=+DGMTLST
"RTN","DGMTU2",140,0)
 . . ;
"RTN","DGMTU2",141,0)
 . . ; If the other test was not entered in Version 1 format
"RTN","DGMTU2",142,0)
 . . I +$P($G(^DGMT(408.31,DGOTHIEN,2)),"^",11)'=1 DO
"RTN","DGMTU2",143,0)
 . . . ; Save values of DGINC, DGREL, DGINR, and DGDEP
"RTN","DGMTU2",144,0)
 . . . N DGINC2,DGREL2,DGINR2,DGDEP2
"RTN","DGMTU2",145,0)
 . . . M:$D(DGINC) DGINC2=DGINC
"RTN","DGMTU2",146,0)
 . . . M:$D(DGREL) DGREL2=DGREL
"RTN","DGMTU2",147,0)
 . . . M:$D(DGINR) DGINR2=DGINR
"RTN","DGMTU2",148,0)
 . . . M:$D(DGDEP) DGDEP2=DGDEP
"RTN","DGMTU2",149,0)
 . . . ;
"RTN","DGMTU2",150,0)
 . . . ; Get IAI records from 408.21 and convert them from version 0 to 1
"RTN","DGMTU2",151,0)
 . . . D:(+$P(DGMTLST,"^",2)>0) ALL^DGMTU21(DFN,"VSD",+$P(DGMTLST,"^",2),"IPR")
"RTN","DGMTU2",152,0)
 . . . D:(+$P(DGMTLST,"^",2)'>0) ALL^DGMTU21(DFN,"VSD",DT,"IPR")
"RTN","DGMTU2",153,0)
 . . . D ISCNVRT^DGMTUTL(.DGINC)
"RTN","DGMTU2",154,0)
 . . . ;
"RTN","DGMTU2",155,0)
 . . . ; Update 2.11 in all (1, 2 and 4 type) 408.31 records for DFN and IY
"RTN","DGMTU2",156,0)
 . . . N OTHRTST
"RTN","DGMTU2",157,0)
 . . . S OTHRTST=$$UPDTTSTS^DGMTU21(DFN,$E($P(DGMTLST,"^",2),1,3))
"RTN","DGMTU2",158,0)
 . . . ;
"RTN","DGMTU2",159,0)
 . . . ; Restore DGINC, DGREL, DGINR, and DGDEP
"RTN","DGMTU2",160,0)
 . . . K DGINC,DGREL,DGINR,DGDEP
"RTN","DGMTU2",161,0)
 . . . M:$D(DGINC2) DGINC=DGINC2
"RTN","DGMTU2",162,0)
 . . . M:$D(DGREL2) DGREL=DGREL2
"RTN","DGMTU2",163,0)
 . . . M:$D(DGINR2) DGINR=DGINR2
"RTN","DGMTU2",164,0)
 . . . M:$D(DGDEP2) DGDEP=DGDEP2
"RTN","DGMTU2",165,0)
 . . . S CONVRTD=1
"RTN","DGMTU2",166,0)
VRCHKQ Q CONVRTD
"RTN","DGRPEIS1")
0^1^B29345023^B27428084
"RTN","DGRPEIS1",1,0)
DGRPEIS1 ;ALB/MIR - CALLS TO ADD NEW PATIENT RELATIONS AND INCOME PERSONS ; 6/19/09 11:33am
"RTN","DGRPEIS1",2,0)
 ;;5.3;Registration;**10,45,108,624,688,805**;Aug 13, 1993;Build 4
"RTN","DGRPEIS1",3,0)
 ;Adds entries to FILES #408.12 & 408.13
"RTN","DGRPEIS1",4,0)
 ;
"RTN","DGRPEIS1",5,0)
NEW ;check if data in FILE #408.12
"RTN","DGRPEIS1",6,0)
 ;out - DGPRI=IFN of #408.12
"RTN","DGRPEIS1",7,0)
 ;      DGFL [-1='^'/-2=time-out]
"RTN","DGRPEIS1",8,0)
 N DGRPDOB,DGRP0ND
"RTN","DGRPEIS1",9,0)
 I '$D(DGTSTDT) N DGTSTDT S DGTSTDT=$S($D(DGMTDT):DGMTDT,1:DT)
"RTN","DGRPEIS1",10,0)
 S DGPRI=$O(^DGPR(408.12,"C",DFN_";DPT(",0)),DGFL=$G(DGFL)
"RTN","DGRPEIS1",11,0)
 I '$D(^DGPR(408.12,+DGPRI,0)) S DGRP0ND=DFN_"^"_1_"^"_DFN_";DPT(",DGRPDOB=$P($G(^DPT(+DFN,0)),"^",3) D NEWPR
"RTN","DGRPEIS1",12,0)
 S DGIRI=$O(^DGMT(408.22,"B",DFN,0))
"RTN","DGRPEIS1",13,0)
 I '$D(^DGMT(408.22,+DGIRI,0)) D GETIENS^DGMTU2(DFN,+DGPRI,DGTSTDT)
"RTN","DGRPEIS1",14,0)
 Q
"RTN","DGRPEIS1",15,0)
NEWIP ;Add relation to #408.13 file
"RTN","DGRPEIS1",16,0)
 ; In - DFN=IEN of File #2
"RTN","DGRPEIS1",17,0)
 ;      DGRP0ND=0 node of 408.13
"RTN","DGRPEIS1",18,0)
 ;      DGDEP=Optional count of children dependents associated with patient
"RTN","DGRPEIS1",19,0)
 ;Out - DGIPI=408.13 IEN
"RTN","DGRPEIS1",20,0)
 K DINUM N DGRPDOB,DGSEX,I,X
"RTN","DGRPEIS1",21,0)
 S:('$D(DGDEP)) DGDEP=""
"RTN","DGRPEIS1",22,0)
 S DGRPDOB=$P(DGRP0ND,"^",3),DGSEX=$P(DGRP0ND,"^",2)
"RTN","DGRPEIS1",23,0)
 N CNT,I S CNT=0
"RTN","DGRPEIS1",24,0)
 F I=2,3,9 D
"RTN","DGRPEIS1",25,0)
 .S CNT=CNT+1,$P(DIC("DR"),";",CNT)=".0"_I_"////"_$P(DGRP0ND,U,I)
"RTN","DGRPEIS1",26,0)
 F I=10,11 D
"RTN","DGRPEIS1",27,0)
 .S CNT=CNT+1,$P(DIC("DR"),";",CNT)="."_I_"////"_$P(DGRP0ND,U,I)
"RTN","DGRPEIS1",28,0)
 F I=1:1:8 S DIC("DR")=DIC("DR")_";1."_I_"////"_$P(DGRP1ND,U,I)
"RTN","DGRPEIS1",29,0)
 S (DIK,DIC)="^DGPR(408.13,",DIC(0)="L",DLAYGO=408.13,X=$P(DGRP0ND,"^",1) K DD,DO D FILE^DICN S (DGIPI,DA)=+Y K DLAYGO
"RTN","DGRPEIS1",30,0)
 S Y=DGIPI,DGRP0ND=DFN_"^"_$S(SPOUSE:2,1:"")_"^"_+Y_";DGPR(408.13,"
"RTN","DGRPEIS1",31,0)
 ;FALLS THRU!
"RTN","DGRPEIS1",32,0)
NEWPR ;Add entry to file #408.12
"RTN","DGRPEIS1",33,0)
 ;In - DGRP0ND=0 node of 408.12
"RTN","DGRPEIS1",34,0)
 ;     DGRPDOB=DOB of relation
"RTN","DGRPEIS1",35,0)
 ;Out - DGPRI=IFN of new 408.12 entry
"RTN","DGRPEIS1",36,0)
 K DINUM N DOB,X
"RTN","DGRPEIS1",37,0)
 I '$D(DGTSTDT) N DGTSTDT S DGTSTDT=$S($D(DGMTDT):DGMTDT,1:DT)
"RTN","DGRPEIS1",38,0)
 S DOB=$G(DGRPDOB) I 'DOB S DOB=$E(DGTSTDT,1,3)-1_"0101" ; use dob for effective date...default = Jan 1 of prior year
"RTN","DGRPEIS1",39,0)
DIC ;* GTS - DG*6.3*688 restructured the IF code and DIC("S") that follows
"RTN","DGRPEIS1",40,0)
 N DGDEPCNT
"RTN","DGRPEIS1",41,0)
 S DGDEPCNT=$$CNTDEPS^DGMTU11(DFN)
"RTN","DGRPEIS1",42,0)
 I $P(DGRP0ND,"^",2)']"" DO
"RTN","DGRPEIS1",43,0)
 .S DIC="^DG(408.11,"
"RTN","DGRPEIS1",44,0)
 .S DIC(0)="AEQMZ"
"RTN","DGRPEIS1",45,0)
 .S DIC("A")="RELATIONSHIP: "
"RTN","DGRPEIS1",46,0)
 .S DIC("S")="I Y>2,""E""_DGSEX[$P(^(0),""^"",3),$S((DGTYPE=""D"")&(+DGDEPCNT<19):1,(DGTYPE=""D"")&(+DGDEPCNT>18)&(Y>6):1,(DGTYPE=""C"")&(Y<7):1,1:0)"
"RTN","DGRPEIS1",47,0)
 I $P(DGRP0ND,"^",2)']"" D ^DIC I '$D(DTOUT),(Y'>0) W *7,"   Required!!" G DIC
"RTN","DGRPEIS1",48,0)
 I $D(DTOUT) K DTOUT S DGFL=-2 G NEWPRQ
"RTN","DGRPEIS1",49,0)
 I $P(DGRP0ND,"^",2)']"" S $P(DGRP0ND,"^",2)=+Y
"RTN","DGRPEIS1",50,0)
 D ACT^DGRPEIS2 I DGFL<0 D  G NEWPRQ
"RTN","DGRPEIS1",51,0)
 .W !?3,*7,"Entry incomplete...deleted",!
"RTN","DGRPEIS1",52,0)
 .Q:'$G(DA)!($G(DIK)'="^DGPR(408.13,")  ;defined for deps in newip
"RTN","DGRPEIS1",53,0)
 .D ^DIK
"RTN","DGRPEIS1",54,0)
 S DIC("DR")=".02////"_$P(DGRP0ND,U,2)
"RTN","DGRPEIS1",55,0)
 N VAR S VAR=$P(DGRP0ND,U,3)
"RTN","DGRPEIS1",56,0)
 S DIC("DR")=DIC("DR")_";.03////^S X=VAR"
"RTN","DGRPEIS1",57,0)
 S (DIK,DIC)="^DGPR(408.12,",DIC(0)="L",DLAYGO=408.12,X=+DGRP0ND K DD,DO D FILE^DICN S DGPRI=+Y K DLAYGO D
"RTN","DGRPEIS1",58,0)
 .N DD,D0,DA,DLAYGO,DIC,X
"RTN","DGRPEIS1",59,0)
 .S DA(1)=DGPRI,DIC(0)="L",DIC="^DGPR(408.12,"_DA(1)_",""E"","
"RTN","DGRPEIS1",60,0)
 .S DLAYGO=408.1275,DIC("DR")=".02////1",X=DGACT
"RTN","DGRPEIS1",61,0)
 .D FILE^DICN
"RTN","DGRPEIS1",62,0)
 D RESET^DGMTU11(DFN)
"RTN","DGRPEIS1",63,0)
 S Y=DGPRI
"RTN","DGRPEIS1",64,0)
NEWPRQ K DGACT,DGSEX,DGRPDOB,DA,DIC,DIK,DIRUT,DTOUT,DUOUT,X,Y
"RTN","DGRPEIS1",65,0)
 Q
"RTN","DGRPEIS1",66,0)
SETUP ; called from SPINACT / sets vars for ASOF tag
"RTN","DGRPEIS1",67,0)
 N FNAME S FNAME=$P($$NAME^DGMTU1(+X),",",2)
"RTN","DGRPEIS1",68,0)
 S ACT=$O(^DGPR(408.12,+X,"E","AID","")),ACT=$O(^(+ACT,0)),ACT=$G(^DGPR(408.12,+X,"E",+ACT,0))
"RTN","DGRPEIS1",69,0)
 I $P(ACT,"^",2)']"" Q  ; never active
"RTN","DGRPEIS1",70,0)
 I '$P(ACT,U,2) D  Q
"RTN","DGRPEIS1",71,0)
 .W !,"Dependent has been inactivated as of "
"RTN","DGRPEIS1",72,0)
 .S Y=+ACT
"RTN","DGRPEIS1",73,0)
 .D DD^%DT W Y H 3
"RTN","DGRPEIS1",74,0)
 S IEN=+X
"RTN","DGRPEIS1",75,0)
ASOF ;ask as of date
"RTN","DGRPEIS1",76,0)
 N LYR,SPOUSE,DGXDT
"RTN","DGRPEIS1",77,0)
 I '$D(DGTSTDT) N DGTSTDT S DGTSTDT=$S($D(DGMTDT):DGMTDT,1:DT)
"RTN","DGRPEIS1",78,0)
 S SPOUSE=$S($P($G(^DGPR(408.12,+IEN,0)),"^",2)=2:1,1:0)
"RTN","DGRPEIS1",79,0)
 S LYR=$E($$LYR^DGMTSCU1(DGTSTDT),1,3)_1231
"RTN","DGRPEIS1",80,0)
 ;I 'SPOUSE S LYR=$E($$LYR^DGMTSCU1(LYR),1,3)_1231
"RTN","DGRPEIS1",81,0)
 K DIR S DIR(0)="D^"_+ACT_":"_LYR_":AEP",DIR("A")="Date "_FNAME_" no longer a dependent"
"RTN","DGRPEIS1",82,0)
 S DIR("?",1)="Enter the date this person was no longer a dependent of the veteran.",DIR("?",2)="This could include a date of death or the date a child turned 18 for"
"RTN","DGRPEIS1",83,0)
 S DIR("?",3)="children.  For a spouse, this would be the date of divorce or date ",DIR("?",4)="of death of the spouse.  Date must be after the person became a"
"RTN","DGRPEIS1",84,0)
 S DIR("?",5)="dependent, but prior to 12/31/"_($E(LYR,1,3)+1700)_"."
"RTN","DGRPEIS1",85,0)
 I 'SPOUSE S DIR("?",6)=" ",DIR("?",7)="A person should only be inactivated if the individual was not a",DIR("?",8)="dependent at any time during the prior calendar year."
"RTN","DGRPEIS1",86,0)
 S DIR("?")=" "
"RTN","DGRPEIS1",87,0)
 I SPOUSE S DIR("?",6)=" ",DIR("?",7)="A spouse should be inactivated if the spouse and veteran were not",DIR("?",8)="married as of 12/31/"_($E(LYR,1,3)+1700)_"."
"RTN","DGRPEIS1",88,0)
 D ^DIR K DIR
"RTN","DGRPEIS1",89,0)
 I $D(DTOUT)!$D(DUOUT) S DGFL=$S($D(DTOUT):-2,1:-1) Q
"RTN","DGRPEIS1",90,0)
 S DGXDT=Y
"RTN","DGRPEIS1",91,0)
 I $E(Y,1,3)=$E(LYR,1,3) D  Q:'$G(Y)
"RTN","DGRPEIS1",92,0)
 .N DIR,DIRUT,DIROUT,DTOUT,DUOUT
"RTN","DGRPEIS1",93,0)
 .W !!,"Warning: Data will be used if dependent was active at least one day in a"
"RTN","DGRPEIS1",94,0)
 .W !,"year.  Data will not be used if inactivation is prior to 1/1/"_($E(LYR,1,3)+1700)_" or it"
"RTN","DGRPEIS1",95,0)
 .W !,"is equal to the activation date."
"RTN","DGRPEIS1",96,0)
 .S DIR(0)="Y",DIR("B")="NO",DIR("A")="Do you wish to inactivate this dependent on the selected date?"
"RTN","DGRPEIS1",97,0)
 .D ^DIR
"RTN","DGRPEIS1",98,0)
 S DA(1)=IEN,DIC="^DGPR(408.12,"_DA(1)_",""E"",",X=DGXDT,DIC(0)="L",DLAYGO=408.1275 D ^DIC S DIE=DIC,DA=+Y,DR=".02////0" D ^DIE
"RTN","DGRPEIS1",99,0)
 D RESET^DGMTU11(DFN)
"RTN","DGRPEIS1",100,0)
ASOFQ K DA,DIC,DIE,DIR,DIRUT,DLAYGO,DR,DTOUT,DUOUT,X,Y
"RTN","DGRPEIS1",101,0)
 Q
"VER")
8.0^22.0
"BLD",7782,6)
^725
**END**
**END**
