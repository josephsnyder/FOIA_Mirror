EMERGENCY Released DG*5.3*808 SEQ #706
Extracted from mail message
**KIDS**:DG*5.3*808^

**INSTALL NAME**
DG*5.3*808
"BLD",7183,0)
DG*5.3*808^REGISTRATION^0^3090410^y
"BLD",7183,4,0)
^9.64PA^^
"BLD",7183,6.3)
4
"BLD",7183,"KRN",0)
^9.67PA^8989.52^19
"BLD",7183,"KRN",.4,0)
.4
"BLD",7183,"KRN",.401,0)
.401
"BLD",7183,"KRN",.402,0)
.402
"BLD",7183,"KRN",.403,0)
.403
"BLD",7183,"KRN",.5,0)
.5
"BLD",7183,"KRN",.84,0)
.84
"BLD",7183,"KRN",3.6,0)
3.6
"BLD",7183,"KRN",3.8,0)
3.8
"BLD",7183,"KRN",9.2,0)
9.2
"BLD",7183,"KRN",9.8,0)
9.8
"BLD",7183,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",7183,"KRN",9.8,"NM",1,0)
DGRPE1^^0^B9500798
"BLD",7183,"KRN",9.8,"NM",2,0)
DGADDUTL^^0^B56653572
"BLD",7183,"KRN",9.8,"NM",3,0)
DGREGAED^^0^B40377250
"BLD",7183,"KRN",9.8,"NM",4,0)
DGENA3^^0^B47876247
"BLD",7183,"KRN",9.8,"NM","B","DGADDUTL",2)

"BLD",7183,"KRN",9.8,"NM","B","DGENA3",4)

"BLD",7183,"KRN",9.8,"NM","B","DGREGAED",3)

"BLD",7183,"KRN",9.8,"NM","B","DGRPE1",1)

"BLD",7183,"KRN",19,0)
19
"BLD",7183,"KRN",19.1,0)
19.1
"BLD",7183,"KRN",101,0)
101
"BLD",7183,"KRN",409.61,0)
409.61
"BLD",7183,"KRN",771,0)
771
"BLD",7183,"KRN",870,0)
870
"BLD",7183,"KRN",8989.51,0)
8989.51
"BLD",7183,"KRN",8989.52,0)
8989.52
"BLD",7183,"KRN",8994,0)
8994
"BLD",7183,"KRN","B",.4,.4)

"BLD",7183,"KRN","B",.401,.401)

"BLD",7183,"KRN","B",.402,.402)

"BLD",7183,"KRN","B",.403,.403)

"BLD",7183,"KRN","B",.5,.5)

"BLD",7183,"KRN","B",.84,.84)

"BLD",7183,"KRN","B",3.6,3.6)

"BLD",7183,"KRN","B",3.8,3.8)

"BLD",7183,"KRN","B",9.2,9.2)

"BLD",7183,"KRN","B",9.8,9.8)

"BLD",7183,"KRN","B",19,19)

"BLD",7183,"KRN","B",19.1,19.1)

"BLD",7183,"KRN","B",101,101)

"BLD",7183,"KRN","B",409.61,409.61)

"BLD",7183,"KRN","B",771,771)

"BLD",7183,"KRN","B",870,870)

"BLD",7183,"KRN","B",8989.51,8989.51)

"BLD",7183,"KRN","B",8989.52,8989.52)

"BLD",7183,"KRN","B",8994,8994)

"BLD",7183,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",7183,"QUES",0)
^9.62^^
"BLD",7183,"REQB",0)
^9.611^2^2
"BLD",7183,"REQB",1,0)
DG*5.3*688^2
"BLD",7183,"REQB",2,0)
DG*5.3*451^2
"BLD",7183,"REQB","B","DG*5.3*451",2)

"BLD",7183,"REQB","B","DG*5.3*688",1)

"MBREQ")
0
"PKG",47,-1)
1^1
"PKG",47,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",47,20,0)
^9.402P^^
"PKG",47,22,0)
^9.49I^1^1
"PKG",47,22,1,0)
5.3^2930813^2960613
"PKG",47,22,1,"PAH",1,0)
808^3090410
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","DGADDUTL")
0^2^B56653572^B56565800
"RTN","DGADDUTL",1,0)
DGADDUTL ;ALB/PHH,EG,BAJ,ERC,CKN,TDM-PATIENT ADDRESS ; 4/2/09 2:29pm
"RTN","DGADDUTL",2,0)
 ;;5.3;Registration;**658,695,730,688,808**;Aug 13, 1993;Build 4
"RTN","DGADDUTL",3,0)
 Q
"RTN","DGADDUTL",4,0)
ADDR ; validate/edit Patient address (entry for DG ADDRESS UPDATE option)
"RTN","DGADDUTL",5,0)
 N %,QUIT,DIC,Y,DFN,USERSEL
"RTN","DGADDUTL",6,0)
ADDRLOOP ;
"RTN","DGADDUTL",7,0)
 W !!
"RTN","DGADDUTL",8,0)
 K DIC,Y,DFN,USERSEL
"RTN","DGADDUTL",9,0)
 S DIC="^DPT(",DIC(0)="AEMZQ",DIC("A")="Veteran Name/SSN: " D ^DIC
"RTN","DGADDUTL",10,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","DGADDUTL",11,0)
 Q:Y'>0
"RTN","DGADDUTL",12,0)
 ;
"RTN","DGADDUTL",13,0)
 S DFN=+Y,QUIT=0
"RTN","DGADDUTL",14,0)
 L +^DPT(DFN):3 E  W !!,"Patient is being edited. Try again later."  G ADDR
"RTN","DGADDUTL",15,0)
 F  D  Q:QUIT
"RTN","DGADDUTL",16,0)
 .W !!,"Do you want to update the (P)ermanent Address, (T)emporary Address, or (B)oth? "
"RTN","DGADDUTL",17,0)
 .R USERSEL:300
"RTN","DGADDUTL",18,0)
 .I '$T S USERSEL="^"
"RTN","DGADDUTL",19,0)
 .I USERSEL["^"!(USERSEL="") S QUIT=1 Q
"RTN","DGADDUTL",20,0)
 .S USERSEL=$TR(USERSEL,"ptb","PTB")
"RTN","DGADDUTL",21,0)
 .I USERSEL'="P",USERSEL'="T",USERSEL'="B" D  Q
"RTN","DGADDUTL",22,0)
 ..W !,"Invalid selection!"
"RTN","DGADDUTL",23,0)
 .I USERSEL="P"!(USERSEL="B") W ! D UPDATE(DFN,"PERM")
"RTN","DGADDUTL",24,0)
 .I USERSEL="T"!(USERSEL="B") D UPDATE(DFN,"TEMP")
"RTN","DGADDUTL",25,0)
 .S QUIT=1
"RTN","DGADDUTL",26,0)
 L -^DPT(DFN)
"RTN","DGADDUTL",27,0)
 G ADDRLOOP
"RTN","DGADDUTL",28,0)
ADD(DFN) ; validate/edit Patient address (entry point for routine DGREG)
"RTN","DGADDUTL",29,0)
 ;         Input  -- DFN
"RTN","DGADDUTL",30,0)
 ;
"RTN","DGADDUTL",31,0)
 N RETVAL,ADDYN
"RTN","DGADDUTL",32,0)
 S (RETVAL,ADDYN)=0
"RTN","DGADDUTL",33,0)
 F  D  Q:ADDYN
"RTN","DGADDUTL",34,0)
 .S ADDYN=$$ADDYN("Do you want to validate/edit the Patient's Address")
"RTN","DGADDUTL",35,0)
 .S RETVAL=ADDYN
"RTN","DGADDUTL",36,0)
 .I ADDYN'=1,ADDYN'=2 S (ADDYN,RETVAL)=0
"RTN","DGADDUTL",37,0)
 .I 'ADDYN W !?5,"Enter 'YES' to validate/edit Patient's Address or 'NO' to continue."
"RTN","DGADDUTL",38,0)
 I ADDYN=1,$G(DFN)'="",$D(^DPT(DFN,0)) D
"RTN","DGADDUTL",39,0)
 .D UPDATE(DFN,"PERM")
"RTN","DGADDUTL",40,0)
 .S RETVAL=1
"RTN","DGADDUTL",41,0)
 Q RETVAL
"RTN","DGADDUTL",42,0)
ADDYN(PROMPT) ; Yes/No Prompt to Edit/Validate Address
"RTN","DGADDUTL",43,0)
 ;         Input  -- None
"RTN","DGADDUTL",44,0)
 ;         Output --  1 = YES
"RTN","DGADDUTL",45,0)
 ;                    2 = NO
"RTN","DGADDUTL",46,0)
 ;                   -1 = Aborted
"RTN","DGADDUTL",47,0)
 ;
"RTN","DGADDUTL",48,0)
 N %
"RTN","DGADDUTL",49,0)
 W !,PROMPT
"RTN","DGADDUTL",50,0)
 D YN^DICN
"RTN","DGADDUTL",51,0)
 Q %
"RTN","DGADDUTL",52,0)
UPDATE(DFN,TYPE) ; Update the Address
"RTN","DGADDUTL",53,0)
 ;         Input  -- TYPE = "PERM" for Permanent Address
"RTN","DGADDUTL",54,0)
 ;                        = "TEMP" for Temporary Address
"RTN","DGADDUTL",55,0)
 ;         Output -- None
"RTN","DGADDUTL",56,0)
 ;         
"RTN","DGADDUTL",57,0)
 I TYPE'="PERM",TYPE'="TEMP" Q
"RTN","DGADDUTL",58,0)
 I TYPE="PERM" D
"RTN","DGADDUTL",59,0)
 .W !
"RTN","DGADDUTL",60,0)
 .N FLG S (FLG(1),FLG(2))=1
"RTN","DGADDUTL",61,0)
 .D ADDRED(DFN,.FLG)
"RTN","DGADDUTL",62,0)
 ;
"RTN","DGADDUTL",63,0)
 I TYPE="TEMP" D
"RTN","DGADDUTL",64,0)
 .D EDITTADR(DFN)
"RTN","DGADDUTL",65,0)
 Q
"RTN","DGADDUTL",66,0)
UPDDTTM(DFN,TYPE) ; Update the PATIENT file #2 with the current date and time
"RTN","DGADDUTL",67,0)
 ;
"RTN","DGADDUTL",68,0)
 D UPDDTTM^DGADDUT2(DFN,TYPE)
"RTN","DGADDUTL",69,0)
 Q
"RTN","DGADDUTL",70,0)
ADDRED(DFN,FLG) ; Address Edit (Code copied from DGREGAED and modified)
"RTN","DGADDUTL",71,0)
 ;Input:
"RTN","DGADDUTL",72,0)
 ;  DFN (required) - Internal Entry # of Patient File (#2)
"RTN","DGADDUTL",73,0)
 ;  FLG (optional) - Flags of 1 or 0; if null, 0 is assumed. Details:
"RTN","DGADDUTL",74,0)
 ;    FLG(1) - if 1, let user edit phone numbers (field #.131 and #.132)
"RTN","DGADDUTL",75,0)
 ;    FLG(2) - if 1, display before & after address for user confirmation
"RTN","DGADDUTL",76,0)
 N SRC,%,DGINPUT,I,X,Y
"RTN","DGADDUTL",77,0)
 S SRC="ADDUTL"
"RTN","DGADDUTL",78,0)
 D EN^DGREGAED(DFN,.FLG,SRC)
"RTN","DGADDUTL",79,0)
 ;
"RTN","DGADDUTL",80,0)
 ; Update the Date/Time Stamp
"RTN","DGADDUTL",81,0)
 D UPDDTTM(DFN,TYPE)
"RTN","DGADDUTL",82,0)
 Q
"RTN","DGADDUTL",83,0)
GETPRIOR(DFN,DGPRIOR) ; Get prior address fields.
"RTN","DGADDUTL",84,0)
 N DGCURR,DGN,DGARRY,DGCIEN,DGST,DGCNTY
"RTN","DGADDUTL",85,0)
 D GETS^DIQ(2,DFN_",",".111;.112;.113;.114;.115;.117;.1112;.131;.132;.121;.118;.119;.12;.122;.1171:.1173","I","DGCURR")
"RTN","DGADDUTL",86,0)
 F DGN=.111,.112,.113,.114,.115,.117,.1112,.131,.132,.121,.118,.119,.12,.122,.1171,.1172,.1173 D
"RTN","DGADDUTL",87,0)
 . S DGARRY("OLD",DGN)=$G(DGCURR(2,DFN_",",DGN,"I"))
"RTN","DGADDUTL",88,0)
 M DGPRIOR=DGARRY("OLD")
"RTN","DGADDUTL",89,0)
 Q
"RTN","DGADDUTL",90,0)
GETUPDTS(DFN,DGINPUT) ; Get current address fields.
"RTN","DGADDUTL",91,0)
 N DGCURR,DGN,DGARRY
"RTN","DGADDUTL",92,0)
 D GETS^DIQ(2,DFN_",",".118;.119;.12;.122","I","DGCURR")
"RTN","DGADDUTL",93,0)
 F DGN=.118,.119,.12,.122 D
"RTN","DGADDUTL",94,0)
 . S DGARRY("NEW",DGN)=$G(DGCURR(2,DFN_",",DGN,"I"))
"RTN","DGADDUTL",95,0)
 M DGINPUT=DGARRY("NEW")
"RTN","DGADDUTL",96,0)
 Q
"RTN","DGADDUTL",97,0)
FILEYN(DGOLD,DGNEW) ; Determine whether or not to file to #301.7
"RTN","DGADDUTL",98,0)
 N RETVAL
"RTN","DGADDUTL",99,0)
 S RETVAL=0
"RTN","DGADDUTL",100,0)
 D
"RTN","DGADDUTL",101,0)
 .I DGOLD(.111)'=$G(DGNEW(.111)) S RETVAL=1 Q
"RTN","DGADDUTL",102,0)
 .I DGOLD(.112)'=$G(DGNEW(.112)) S RETVAL=1 Q
"RTN","DGADDUTL",103,0)
 .I DGOLD(.113)'=$G(DGNEW(.113)) S RETVAL=1 Q
"RTN","DGADDUTL",104,0)
 .I DGOLD(.114)'=$G(DGNEW(.114)) S RETVAL=1 Q
"RTN","DGADDUTL",105,0)
 .I DGOLD(.115)'=$P($G(DGNEW(.115)),"^",2) S RETVAL=1 Q
"RTN","DGADDUTL",106,0)
 .I DGOLD(.1112)'=$G(DGNEW(.1112)) S RETVAL=1 Q
"RTN","DGADDUTL",107,0)
 .I DGOLD(.117)'=$P($G(DGNEW(.117)),"^",2) S RETVAL=1 Q
"RTN","DGADDUTL",108,0)
 .I DGOLD(.131)'=$G(DGNEW(.131)) S RETVAL=1 Q
"RTN","DGADDUTL",109,0)
 .I DGOLD(.1171)'=$G(DGNEW(.1171)) S RETVAL=1 Q
"RTN","DGADDUTL",110,0)
 .I DGOLD(.1172)'=$G(DGNEW(.1172)) S RETVAL=1 Q
"RTN","DGADDUTL",111,0)
 .I DGOLD(.1173)'=$P($G(DGNEW(.1173)),"^",2) S RETVAL=1 Q
"RTN","DGADDUTL",112,0)
 .I DGOLD(.121)'=$G(DGNEW(.121)) S RETVAL=1 Q
"RTN","DGADDUTL",113,0)
 Q RETVAL
"RTN","DGADDUTL",114,0)
FOREIGN(DFN,CIEN,FILE,FIELD,COUNTRY) ;
"RTN","DGADDUTL",115,0)
 ; ** NOTE we have to default the value for "US" into the prompt if it is blank
"RTN","DGADDUTL",116,0)
 N FORGN,DA,DIR,DTOUT,DUOUT,DIROUT,DONE,INDX
"RTN","DGADDUTL",117,0)
 S:'$G(FILE) FILE=2  I '$G(FIELD) S FIELD=.1173
"RTN","DGADDUTL",118,0)
 S DIR(0)=FILE_","_FIELD,DA=DFN,DONE=0
"RTN","DGADDUTL",119,0)
 S DIR("B")=$E($$CNTRYI^DGADDUTL(CIEN),1,19) I DIR("B")=-1 S DIR("B")="UNKNOWN COUNTRY"
"RTN","DGADDUTL",120,0)
 F  D  Q:DONE
"RTN","DGADDUTL",121,0)
 . D ^DIR
"RTN","DGADDUTL",122,0)
 . I $D(DTOUT) S DONE=1,FORGN=-1 Q
"RTN","DGADDUTL",123,0)
 . I $D(DUOUT)!$D(DIROUT) W !,"EXIT NOT ALLOWED" Q
"RTN","DGADDUTL",124,0)
 . I $D(DIRUT) W !,"This is a required response." Q
"RTN","DGADDUTL",125,0)
 . S COUNTRY=$P($G(Y),"^",2),FORGN=$$FORIEN($P($G(Y),"^")),DONE=1
"RTN","DGADDUTL",126,0)
 Q FORGN
"RTN","DGADDUTL",127,0)
UPDADDLG(DFN,DGPRIOR,DGINPUT) ; Update the IVM ADDRESS CHANGE LOG file #301.7
"RTN","DGADDUTL",128,0)
 ;
"RTN","DGADDUTL",129,0)
 D UPDADDLG^DGADDUT2(DFN,.DGPRIOR,.DGINPUT)
"RTN","DGADDUTL",130,0)
 Q
"RTN","DGADDUTL",131,0)
EDITTADR(DFN) ; Edit Temporary Address
"RTN","DGADDUTL",132,0)
 N DGPRIOR,DGCH,DGRPAN,DGDR,DGRPS
"RTN","DGADDUTL",133,0)
 I $G(DFN)="" Q
"RTN","DGADDUTL",134,0)
 ;I ($G(DFN)'?.N) Q
"RTN","DGADDUTL",135,0)
 ;
"RTN","DGADDUTL",136,0)
 ; Get the current Temporary Address and display it
"RTN","DGADDUTL",137,0)
 D GETTADR(DFN,.DGPRIOR)
"RTN","DGADDUTL",138,0)
 D DISPTADR(DFN,.DGPRIOR)
"RTN","DGADDUTL",139,0)
 W !!
"RTN","DGADDUTL",140,0)
 ;
"RTN","DGADDUTL",141,0)
 S DGCH=5,DGRPAN="1,2,3,4,5,",DGDR="",DGRPS=1
"RTN","DGADDUTL",142,0)
 D CHOICE^DGRPP
"RTN","DGADDUTL",143,0)
 D ^DGRPE
"RTN","DGADDUTL",144,0)
 ; Update the Date/Time Stamp
"RTN","DGADDUTL",145,0)
 D UPDDTTM(DFN,TYPE)
"RTN","DGADDUTL",146,0)
 Q
"RTN","DGADDUTL",147,0)
GETTADR(DFN,DGPRIOR) ; Get prior temporary address fields.
"RTN","DGADDUTL",148,0)
 N DGCURR,DGN,DGARRY,DGCIEN,DGST,DGCNTY
"RTN","DGADDUTL",149,0)
 D GETS^DIQ(2,DFN_",",".1211;.1212;.1213;.1214;.1215;.1216;.1217;.1218;.12105;.1219;.12111;.12112;.12113;.12114;.1221:.1223","I","DGCURR")
"RTN","DGADDUTL",150,0)
 F DGN=.1211,.1212,.1213,.1214,.1215,.1216,.1217,.1218,.12105,.1219,.12111,.12112,.12113,.12114,.1221,.1222,.1223 D
"RTN","DGADDUTL",151,0)
 .S DGARRY("OLD",DGN)=$G(DGCURR(2,DFN_",",DGN,"I"))
"RTN","DGADDUTL",152,0)
 M DGPRIOR=DGARRY("OLD")
"RTN","DGADDUTL",153,0)
 Q
"RTN","DGADDUTL",154,0)
DISPTADR(DFN,DGARRY) ; Display Temporary Address
"RTN","DGADDUTL",155,0)
 N DGADRACT,DGADR1,DGADR2,DGADR3,DGCITY,DGSTATE,DGZIP
"RTN","DGADDUTL",156,0)
 N DGCOUNTY,DGPHONE,DGFROMDT,DGTODT,DGPROV,DGPCODE,DGCNTRY,DGFORN
"RTN","DGADDUTL",157,0)
 ;
"RTN","DGADDUTL",158,0)
 S DGADRACT=$G(DGARRY(.12105))
"RTN","DGADDUTL",159,0)
 S DGADR1=$G(DGARRY(.1211))
"RTN","DGADDUTL",160,0)
 S DGADR2=$G(DGARRY(.1212))
"RTN","DGADDUTL",161,0)
 S DGADR3=$G(DGARRY(.1213))
"RTN","DGADDUTL",162,0)
 S DGCITY=$G(DGARRY(.1214))
"RTN","DGADDUTL",163,0)
 S DGSTATE=$G(DGARRY(.1215))
"RTN","DGADDUTL",164,0)
 S DGZIP=$G(DGARRY(.1216))
"RTN","DGADDUTL",165,0)
 S DGCOUNTY=$G(DGARRY(.12111))
"RTN","DGADDUTL",166,0)
 I DGCOUNTY'="",DGSTATE'="",$D(^DIC(5,DGSTATE,1,DGCOUNTY,0)) D
"RTN","DGADDUTL",167,0)
 .S DGCOUNTY=$P(^DIC(5,DGSTATE,1,DGCOUNTY,0),"^")_" ("_$P(^DIC(5,DGSTATE,1,DGCOUNTY,0),"^",4)_")"
"RTN","DGADDUTL",168,0)
 I DGADRACT'="Y" S DGCOUNTY="NOT APPLICABLE"
"RTN","DGADDUTL",169,0)
 I DGSTATE'="",$D(^DIC(5,DGSTATE,0)) S DGSTATE=$P(^DIC(5,DGSTATE,0),"^",2)
"RTN","DGADDUTL",170,0)
 S DGPROV=$G(DGARRY(.1221))
"RTN","DGADDUTL",171,0)
 S DGPCODE=$G(DGARRY(.1222))
"RTN","DGADDUTL",172,0)
 S DGCNTRY=$G(DGARRY(.1223))
"RTN","DGADDUTL",173,0)
 S DGFORN=$$FORIEN(DGCNTRY)
"RTN","DGADDUTL",174,0)
 I DGCNTRY]"" S DGCNTRY=$$CNTRYI(DGCNTRY)
"RTN","DGADDUTL",175,0)
 S DGPHONE=$G(DGARRY(.1219))
"RTN","DGADDUTL",176,0)
 S DGFROMDT=$$FMTE^XLFDT($G(DGARRY(.1217)))
"RTN","DGADDUTL",177,0)
 S DGTODT=$$FMTE^XLFDT($G(DGARRY(.1218)))
"RTN","DGADDUTL",178,0)
 ;
"RTN","DGADDUTL",179,0)
 W !!,"Temporary Address: "
"RTN","DGADDUTL",180,0)
 I DGADRACT="Y" D
"RTN","DGADDUTL",181,0)
 .W:DGADR1'="" !?9,DGADR1
"RTN","DGADDUTL",182,0)
 .W:DGADR2'="" !?9,DGADR2
"RTN","DGADDUTL",183,0)
 .W:DGADR3'="" !?9,DGADR3
"RTN","DGADDUTL",184,0)
 .I DGFORN=0 D
"RTN","DGADDUTL",185,0)
 ..W !?9,$S(DGCITY'="":DGCITY,1:"")_$S(DGCITY'="":",",1:" ")_$S(DGSTATE'="":DGSTATE,1:"")_" "_$S(DGZIP'="":DGZIP,1:"")
"RTN","DGADDUTL",186,0)
 .I DGFORN W !?9,$S(DGPCODE'="":DGPCODE,1:"")_" "_$S(DGCITY'="":DGCITY,1:"")_$S(DGCITY'="":",",1:" ")_$S(DGPROV'="":DGPROV,1:"")
"RTN","DGADDUTL",187,0)
 .W !?9,$S(DGCITY'="":DGCITY,1:"")_","_$S(DGSTATE'="":DGSTATE,1:"")_" "_$S(DGZIP'="":DGZIP,1:"")
"RTN","DGADDUTL",188,0)
 .W !," County: "_DGCOUNTY
"RTN","DGADDUTL",189,0)
 .W !,"  Phone: "_DGPHONE
"RTN","DGADDUTL",190,0)
 .W !,"From/To: "_$P(DGFROMDT,",")_","_$P(DGFROMDT,", ",2)_"-"_$P(DGTODT,",")_","_$P(DGTODT,", ",2)
"RTN","DGADDUTL",191,0)
 ;
"RTN","DGADDUTL",192,0)
 I $G(DGARRY(.12105))="N" D
"RTN","DGADDUTL",193,0)
 .W:$G(DGARRY(.1211))="" !?9,"NO TEMPORARY ADDRESS"
"RTN","DGADDUTL",194,0)
 .W:$G(DGARRY(.1212))="" !?9,""
"RTN","DGADDUTL",195,0)
 .W !," County: NOT APPLICABLE"
"RTN","DGADDUTL",196,0)
 .W !,"  Phone: NOT APPLICABLE"
"RTN","DGADDUTL",197,0)
 .W !,"From/To: NOT APPLICABLE"
"RTN","DGADDUTL",198,0)
 Q
"RTN","DGADDUTL",199,0)
COUNTRY(DGC) ;
"RTN","DGADDUTL",200,0)
 ;where DGC is the external value of the country
"RTN","DGADDUTL",201,0)
 ;return value is in upper case display mode
"RTN","DGADDUTL",202,0)
 ;if DGC is invalid, return -1
"RTN","DGADDUTL",203,0)
 N DGCC,DGIEN
"RTN","DGADDUTL",204,0)
 ; if input is NULL change to US
"RTN","DGADDUTL",205,0)
 I $G(DGC)="" S DGC="USA"
"RTN","DGADDUTL",206,0)
 ; Get IEN from B index, error if not found
"RTN","DGADDUTL",207,0)
 S DGIEN=$O(^HL(779.004,"B",DGC,"")) Q:DGIEN']"" -1
"RTN","DGADDUTL",208,0)
 ; xlate IEN to POSTAL NAME
"RTN","DGADDUTL",209,0)
 S DGCC=$P(^HL(779.004,DGIEN,"SDS"),U,3)
"RTN","DGADDUTL",210,0)
 ; if POSTAL NAME = "<NULL>" return DESCRIPTION
"RTN","DGADDUTL",211,0)
 I DGCC="<NULL>" D
"RTN","DGADDUTL",212,0)
 . S DGCC=$$UPPER^DGUTL($P(^HL(779.004,DGIEN,0),U,2))
"RTN","DGADDUTL",213,0)
 Q DGCC
"RTN","DGADDUTL",214,0)
FOR(DGC) ;returns a 1 if address is foreign, a 0 if domestic, -1 if DGC is not valid
"RTN","DGADDUTL",215,0)
 ; DGC is the external value of the country (.01 field of file 779.004)
"RTN","DGADDUTL",216,0)
 N DGFOR
"RTN","DGADDUTL",217,0)
 S DGFOR=0
"RTN","DGADDUTL",218,0)
 I $G(DGC)="" Q DGFOR
"RTN","DGADDUTL",219,0)
 I '$D(^HL(779.004,"B",DGC)) Q -1
"RTN","DGADDUTL",220,0)
 I DGC'="USA" S DGFOR=1
"RTN","DGADDUTL",221,0)
 Q DGFOR
"RTN","DGADDUTL",222,0)
CNTRYI(DGIEN) ;where DGC is the internal value of the country
"RTN","DGADDUTL",223,0)
 ;return DGC as the display value for the country
"RTN","DGADDUTL",224,0)
 ;if the input value is not a valid IEN, return -1
"RTN","DGADDUTL",225,0)
 ;if the input value is null, return null
"RTN","DGADDUTL",226,0)
 N DGCC
"RTN","DGADDUTL",227,0)
 I $G(DGIEN)="" Q ""
"RTN","DGADDUTL",228,0)
 I '$D(^HL(779.004,DGIEN,0)) Q -1
"RTN","DGADDUTL",229,0)
 ; xlate IEN to POSTAL NAME
"RTN","DGADDUTL",230,0)
 S DGCC=$P(^HL(779.004,DGIEN,"SDS"),U,3)
"RTN","DGADDUTL",231,0)
 ; if POSTAL NAME = "<NULL>" return DESCRIPTION
"RTN","DGADDUTL",232,0)
 I DGCC="<NULL>" D
"RTN","DGADDUTL",233,0)
 . S DGCC=$$UPPER^DGUTL($P(^HL(779.004,DGIEN,0),U,2))
"RTN","DGADDUTL",234,0)
 Q DGCC
"RTN","DGADDUTL",235,0)
FORIEN(DGC) ;returns a 1 if address is foreign, a 0 if domestic, -1 if DGC is invalid
"RTN","DGADDUTL",236,0)
 ;DGC is the IEN of the country file (#779.004)
"RTN","DGADDUTL",237,0)
 N DGFOR
"RTN","DGADDUTL",238,0)
 S DGFOR=0
"RTN","DGADDUTL",239,0)
 I $G(DGC)="" Q DGFOR
"RTN","DGADDUTL",240,0)
 I DGC'?1.3N Q -1
"RTN","DGADDUTL",241,0)
 I '$D(^HL(779.004,DGC,0)) Q -1
"RTN","DGADDUTL",242,0)
 I DGC]"",(DGC'=$O(^HL(779.004,"B","USA",""))) S DGFOR=1
"RTN","DGADDUTL",243,0)
 Q DGFOR
"RTN","DGENA3")
0^4^B47876247^B47246291
"RTN","DGENA3",1,0)
DGENA3 ;ALB/CJM,ISA/KWP,RTK,TDM,LBD,PHH,PJR,TDM - Enrollment API - Consistency check 05/05/99 ; 4/10/09 1:27pm
"RTN","DGENA3",2,0)
 ;;5.3;Registration;**232,306,327,367,417,454,456,491,514,451,808**;Aug 13,1993;Build 4
"RTN","DGENA3",3,0)
 ;CHECKand TESTVAL moved from DGENA1
"RTN","DGENA3",4,0)
CHECK(DGENR,DGPAT,ERRMSG) ;
"RTN","DGENA3",5,0)
 ;Phase II consistency checks do not include INACTIVE(3),REJECTED(4),SUSPENDED(5),EXPIRED(8),PENDING(9) enrollment statuses.  References to these statuses have been removed.
"RTN","DGENA3",6,0)
 ;Description: Does validation checks on the enrollment contained in the
"RTN","DGENA3",7,0)
 ;     DGENR array.
"RTN","DGENA3",8,0)
 ;Input:
"RTN","DGENA3",9,0)
 ;  DGENR - this local array contains an enrollment and should be passed
"RTN","DGENA3",10,0)
 ;      by reference
"RTN","DGENA3",11,0)
 ;  DGPAT - this local array contains the patient object, it is optional
"RTN","DGENA3",12,0)
 ;          If not passed,the database is referenced. (pass by reference)
"RTN","DGENA3",13,0)
 ;Output:
"RTN","DGENA3",14,0)
 ;  Function Value - returns 1 if all validation checks passed, 0
"RTN","DGENA3",15,0)
 ;     otherwise
"RTN","DGENA3",16,0)
 ;  ERRMSG - if the consistency checks fail, an error msg is returned (pass by reference)
"RTN","DGENA3",17,0)
 N VALID,DGELGSUB,SUB,PRIGRP
"RTN","DGENA3",18,0)
 S VALID=0
"RTN","DGENA3",19,0)
 S ERRMSG=""
"RTN","DGENA3",20,0)
 D  ;drops out of block if invalid condition found
"RTN","DGENA3",21,0)
 .I '$G(DGENR("DFN")) S ERRMSG="PATIENT NOT FOUND IN DATABASE" Q
"RTN","DGENA3",22,0)
 .I '$D(^DPT(DGENR("DFN"),0)) S ERRMSG="PATIENT NOT FOUND IN DATABASE" Q
"RTN","DGENA3",23,0)
 .;if it points to a prior record, the DFN must match
"RTN","DGENA3",24,0)
 .I DGENR("PRIORREC") D  Q:(ERRMSG'="")
"RTN","DGENA3",25,0)
 ..N DFN
"RTN","DGENA3",26,0)
 ..S DFN=$P($G(^DGEN(27.11,DGENR("PRIORREC"),0)),"^",2)
"RTN","DGENA3",27,0)
 ..I DFN,DFN'=DGENR("DFN") S ERRMSG="PATIENT'S PRIOR ENROLLMENT BELONGS TO ANOTHER PATIENT"
"RTN","DGENA3",28,0)
 .;check for required fields
"RTN","DGENA3",29,0)
 .F SUB="APP","SOURCE","STATUS","EFFDATE" I $G(DGENR(SUB))="" S ERRMSG="ENROLLMENT FIELD "_$$GET1^DID(27.11,$$FIELD^DGENU(SUB),"","LABEL")_" IS MISSING" Q
"RTN","DGENA3",30,0)
 .Q:(ERRMSG'="")
"RTN","DGENA3",31,0)
 .;if the enrollment priority is present, it must be correct
"RTN","DGENA3",32,0)
 .M DGELGSUB=DGENR("ELIG")
"RTN","DGENA3",33,0)
 .;Phase II if the enrollment priority is present it must be correct based on the eligibility factors (SRS 6.5.1.2 d)
"RTN","DGENA3",34,0)
 .;  ** temporarily commented out for HVE Phase II and III **
"RTN","DGENA3",35,0)
 .;I DGENR("PRIORITY") D  Q:(ERRMSG'="")
"RTN","DGENA3",36,0)
 .;.S PRIGRP=$$PRI^DGENELA4(DGENR("ELIG","CODE"),.DGELGSUB,DGENR("DATE"),$G(DGENR("APP")))
"RTN","DGENA3",37,0)
 .;.;check priority
"RTN","DGENA3",38,0)
 .;.I DGENR("STATUS")=6 Q     ; do not check priority for deceased
"RTN","DGENA3",39,0)
 .;.I DGENR("PRIORITY")'=$P(PRIGRP,"^") D  Q
"RTN","DGENA3",40,0)
 .;..I $G(DGCDIS("VCD"))'="" Q
"RTN","DGENA3",41,0)
 .;..S ERRMSG="ENROLLMENT PRIORITY IS INCONSISTENT WITH ELIGIBILITY DATA - PRIORITY SHOULD BE "_$P(PRIGRP,"^")_$$EXTERNAL^DILFD(27.11,.12,"F",$P(PRIGRP,"^",2))
"RTN","DGENA3",42,0)
 .;.;check subgroup if priority = 7 or 8
"RTN","DGENA3",43,0)
 .;.Q:DGENR("PRIORITY")<7
"RTN","DGENA3",44,0)
 .;.; sub-priority "e" can be overridden with "a" at HEC
"RTN","DGENA3",45,0)
 .;.I "^1^1^5^5^1^"[("^"_DGENR("SUBGRP")_"^"_$P(PRIGRP,"^",2)_"^") Q
"RTN","DGENA3",46,0)
 .;.; sub-priority "g" can be overridden with "c" at HEC
"RTN","DGENA3",47,0)
 .;.I "^3^3^7^7^3^"[("^"_DGENR("SUBGRP")_"^"_$P(PRIGRP,"^",2)_"^") Q
"RTN","DGENA3",48,0)
 .;.S ERRMSG="ENROLLMENT PRIORITY IS INCONSISTENT WITH ELIGIBILITY DATA - PRIORITY SHOULD BE "_$P(PRIGRP,"^")_$$EXTERNAL^DILFD(27.11,.12,"F",$P(PRIGRP,"^",2))
"RTN","DGENA3",49,0)
 .; end of temporary comments
"RTN","DGENA3",50,0)
 .;
"RTN","DGENA3",51,0)
 .;Phase II require priority if status is VERIFIED(2),REJECTED-INITIAL APP(14),REJECTED-FISCAL YEAR(11),REJECTED-MIDCYCLE(12),REJECTED-STOP ENROLL(13),REJECTED BELOW EGT THRESHOLD(SRS 6.5.1.2 b)
"RTN","DGENA3",52,0)
 .I (DGENR("STATUS")=2)!(DGENR("STATUS")=14)!(DGENR("STATUS")=11)!(DGENR("STATUS")=12)!(DGENR("STATUS")=13)!(DGENR("STATUS")=22),DGENR("PRIORITY")="" D  Q
"RTN","DGENA3",53,0)
 ..S ERRMSG="ENROLLMENT PRIORITY IS REQUIRED WITH ENROLLMENT STATUSES: VERIFIED,REJECTED-INITIAL APPLICATION BY VAMC,REJECTED-FISCAL YEAR,REJECTED-MID-CYCLE,REJECTED-STOP NEW ENROLLMENTS,REJECTED-BELOW EGT"
"RTN","DGENA3",54,0)
 .;Phase II require enrollment date when status is verified(2)(SRS 6.5.1.2 d)
"RTN","DGENA3",55,0)
 .I DGENR("STATUS")=2,DGENR("DATE")="" S ERRMSG="ENROLLMENT DATE IS REQUIRED WHEN STATUS IS VERIFIED" Q
"RTN","DGENA3",56,0)
 .;Phase II if enrollment date present with statuses other than verified then veteran must be previously VERIFIED(2) and enrolled (SRS 6.5.1.2 d)
"RTN","DGENA3",57,0)
 .N CURIEN S CURIEN=$$FINDCUR^DGENA(DGENR("DFN"))
"RTN","DGENA3",58,0)
 .I DGENR("DATE"),DGENR("DATE")'="@",DGENR("STATUS")'=2,'CURIEN S ERRMSG="ENROLLMENT DATE IS PRESENT WITH STATUS OTHER THAN VERIFIED AND THE VETERAN WAS NOT PREVIOUSLY ENROLLED." Q
"RTN","DGENA3",59,0)
 .I DGENR("DATE"),DGENR("DATE")'="@",DGENR("STATUS")'=2,CURIEN,$P($G(^DGEN(27.11,CURIEN,0)),"^",4)'=2 S ERRMSG="ENROLLMENT DATE IS PRESENT WITH STATUS OTHER THAN VERIFIED WAS PREVIOUSLY ENROLLED BUT THE PREVIOUS STATUS WAS NOT VERIFIED." Q
"RTN","DGENA3",60,0)
 .;if status is not CANCELED/DECLINED, the REASON field should be ""
"RTN","DGENA3",61,0)
 .I (DGENR("STATUS")'=7),DGENR("REASON") S ERRMSG="ENROLLMENT STATUS OF OTHER THAN CANCELED/DECLINED IS INCONSISTENT WITH REASON CANCELED/DECLINED" Q
"RTN","DGENA3",62,0)
 .;if not an eligible vet, enrollment must not have status of VERIFIED, or UNVERIFIED
"RTN","DGENA3",63,0)
 .;if status is CANCELED/DECLINED, then reason is required
"RTN","DGENA3",64,0)
 .I (DGENR("STATUS")=7),'DGENR("REASON") S ERRMSG="STATUS OF CANCELED/DECLINED REQUIRES REASON" Q
"RTN","DGENA3",65,0)
 .;if status is DECEASED and Date of Death is missing, send bulletin
"RTN","DGENA3",66,0)
 .; This bulletin has been disabled.  DG*5.3*808
"RTN","DGENA3",67,0)
 .;I DGENR("STATUS")=6 D
"RTN","DGENA3",68,0)
 .;.I $D(DGPAT),'DGPAT("DEATH") D BULLETIN
"RTN","DGENA3",69,0)
 .;.I '$D(DGPAT),'$$DEATH^DGENPTA(DGENR("DFN")) D BULLETIN
"RTN","DGENA3",70,0)
 .Q:(ERRMSG'="")
"RTN","DGENA3",71,0)
 .;certain statuses not allowed for a dead patient
"RTN","DGENA3",72,0)
 .I $D(DGPAT),DGPAT("DEATH"),(DGENR("STATUS")=1)!(DGENR("STATUS")=2) S ERRMSG="ENROLLMENT STATUS OF VERIFIED OR UNVERIFIED NOT ALLOWED FOR A DECEASED PATIENT" Q
"RTN","DGENA3",73,0)
 .I '$D(DGPAT),$$DEATH^DGENPTA(DGENR("DFN")),(DGENR("STATUS")=1)!(DGENR("STATUS")=2) S ERRMSG="ENROLLMENT STATUS OF VERIFIED OR UNVERIFIED NOT ALLOWED FOR A DECEASED PATIENT" Q
"RTN","DGENA3",74,0)
 .;all the field values must be valid
"RTN","DGENA3",75,0)
 .S SUB="" F  S SUB=$O(DGENR(SUB)) Q:((ERRMSG'="")!(SUB=""))  D
"RTN","DGENA3",76,0)
 ..I SUB'="ELIG",(SUB'="DATE"),(SUB'="FACREC") I '$$TESTVAL(SUB,DGENR(SUB)) S ERRMSG="ENROLLMENT FIELD "_$$GET1^DID(27.11,$$FIELD^DGENU(SUB),"","LABEL")_" IS NOT VALID"
"RTN","DGENA3",77,0)
 .Q:(ERRMSG'="")
"RTN","DGENA3",78,0)
 .S SUB="" F  S SUB=$O(DGENR("ELIG",SUB)) Q:((ERRMSG'="")!(SUB=""))  D
"RTN","DGENA3",79,0)
 ..I '$$TESTVAL(SUB,DGENR("ELIG",SUB)) S ERRMSG="ENROLLMENT FIELD  "_$$GET1^DID(27.11,$$FIELD^DGENU(SUB),"","LABEL")_" IS NOT VALID"
"RTN","DGENA3",80,0)
 .;if this point is reached it's valid
"RTN","DGENA3",81,0)
 .S VALID=1
"RTN","DGENA3",82,0)
 Q VALID
"RTN","DGENA3",83,0)
TESTVAL(SUB,VAL) ;
"RTN","DGENA3",84,0)
 ;Description: returns 1 if VAL is a valid value for subscript SUB
"RTN","DGENA3",85,0)
 N DISPLAY,FIELD,RESULT,VALID
"RTN","DGENA3",86,0)
 S VALID=1
"RTN","DGENA3",87,0)
 I (VAL'="") D
"RTN","DGENA3",88,0)
 .S FIELD=$$FIELD^DGENU(SUB)
"RTN","DGENA3",89,0)
 .;if there is no external value then it is not valid
"RTN","DGENA3",90,0)
 .S DISPLAY=$$EXTERNAL^DILFD(27.11,FIELD,"F",VAL)
"RTN","DGENA3",91,0)
 .I (DISPLAY="") S VALID=0 Q
"RTN","DGENA3",92,0)
 .I $$GET1^DID(27.11,FIELD,"","TYPE")'="POINTER" D
"RTN","DGENA3",93,0)
 ..D CHK^DIE(27.11,FIELD,,VAL,.RESULT) I RESULT="^" S VALID=0 Q
"RTN","DGENA3",94,0)
 Q VALID
"RTN","DGENA3",95,0)
BULLETIN ; Status vs. Date of Death Data Discrepancy Bulletin
"RTN","DGENA3",96,0)
 ; This bulletin has been disabled.  DG*5.3*808
"RTN","DGENA3",97,0)
 Q
"RTN","DGENA3",98,0)
 N DGBULL,DGLINE,DGMGRP,DGNAME,DIFROM,VA,VAERR,XMTEXT,XMSUB,XMDUZ
"RTN","DGENA3",99,0)
 S DGMGRP=$O(^XMB(3.8,"B","DGEN ELIGIBILITY ALERT",""))
"RTN","DGENA3",100,0)
 Q:'DGMGRP
"RTN","DGENA3",101,0)
 D XMY^DGMTUTL(DGMGRP,0,1)
"RTN","DGENA3",102,0)
 S DGNAME=$P($G(^DPT(DFN,0)),"^"),DGSSN=$P($G(^DPT(DFN,0)),"^",9)
"RTN","DGENA3",103,0)
 S XMTEXT="DGBULL("
"RTN","DGENA3",104,0)
 S XMSUB="STATUS VS. DATE OF DEATH DATA DISCREPANCY"
"RTN","DGENA3",105,0)
 S DGLINE=0
"RTN","DGENA3",106,0)
 D LINE^DGEN("Patient: "_DGNAME,.DGLINE)
"RTN","DGENA3",107,0)
 D LINE^DGEN("SSN: "_DGSSN,.DGLINE)
"RTN","DGENA3",108,0)
 D LINE^DGEN("",.DGLINE)
"RTN","DGENA3",109,0)
 D LINE^DGEN("This Veteran's Enrollment Status is Deceased,",.DGLINE)
"RTN","DGENA3",110,0)
 D LINE^DGEN("however, there is no Date of Death on file for VistA.",.DGLINE)
"RTN","DGENA3",111,0)
 D LINE^DGEN("Actions you should take:",.DGLINE)
"RTN","DGENA3",112,0)
 D LINE^DGEN("",.DGLINE)
"RTN","DGENA3",113,0)
 D LINE^DGEN("- Add Date of Death Information in VistA, or",.DGLINE)
"RTN","DGENA3",114,0)
 D LINE^DGEN("",.DGLINE)
"RTN","DGENA3",115,0)
 D LINE^DGEN("- Contact the HEC to remove an erroneous Date of Death.",.DGLINE)
"RTN","DGENA3",116,0)
 D ^XMD
"RTN","DGENA3",117,0)
 Q
"RTN","DGREGAED")
0^3^B40377250^B40294783
"RTN","DGREGAED",1,0)
DGREGAED ;ALB/DW/PHH,BAJ,TDM - Address Edit API; 01/03/2006 ; 4/2/09 2:29pm
"RTN","DGREGAED",2,0)
 ;;5.3;Registration;**522,560,658,730,688,808**;Aug 13, 1993;Build 4
"RTN","DGREGAED",3,0)
 ;;
"RTN","DGREGAED",4,0)
 ;; **688** Modifications for Country and Foreign address
"RTN","DGREGAED",5,0)
 ;
"RTN","DGREGAED",6,0)
EN(DFN,FLG,SRC) ;Entry point
"RTN","DGREGAED",7,0)
 ;Input: 
"RTN","DGREGAED",8,0)
 ;  DFN (required) - Internal Entry # of Patient File (#2)
"RTN","DGREGAED",9,0)
 ;  FLG (optional) - Flags of 1 or 0; if null, 0 is assumed. Details:
"RTN","DGREGAED",10,0)
 ;    FLG(1) - if 1 let user edit phone numbers (field #.131 and #.132)
"RTN","DGREGAED",11,0)
 ;    FLG(2) - if 1 display before & after address for user confirmation
"RTN","DGREGAED",12,0)
 K EASZIPLK
"RTN","DGREGAED",13,0)
 N DGINPUT,DGCMP,ICNTRY,CNTRY,FORGN,PSTR,OLDC
"RTN","DGREGAED",14,0)
 N I,X,Y
"RTN","DGREGAED",15,0)
 I $G(DFN)="" Q
"RTN","DGREGAED",16,0)
 ;I ($G(DFN)'?.N) Q
"RTN","DGREGAED",17,0)
 S FLG(1)=$G(FLG(1)),FLG(2)=$G(FLG(2))
"RTN","DGREGAED",18,0)
 D GETOLD(.DGCMP,DFN)
"RTN","DGREGAED",19,0)
 S CNTRY="",ICNTRY=$P($G(^DPT(DFN,.11)),"^",10) I ICNTRY="" S ICNTRY=1  ;default country is USA if NULL
"RTN","DGREGAED",20,0)
 S OLDC=DGCMP("OLD",.1173),FORGN=$$FOREIGN^DGADDUTL(DFN,ICNTRY,2,.1173,.CNTRY) I FORGN=-1 Q
"RTN","DGREGAED",21,0)
 S FSTR=$$INPT1(DFN,FORGN,.PSTR)       ;set up field string of address prompts
"RTN","DGREGAED",22,0)
 S DGINPUT=1 D INPUT(.DGINPUT,DFN,FSTR,CNTRY) I $G(DGINPUT)=-1 Q
"RTN","DGREGAED",23,0)
 I $G(FLG(2))=1 D COMPARE(.DGINPUT,.DGCMP,.FLG)
"RTN","DGREGAED",24,0)
 I '$$CONFIRM() W !,"Change aborted." D EOP Q
"RTN","DGREGAED",25,0)
 N DGPRIOR
"RTN","DGREGAED",26,0)
 D GETPRIOR^DGADDUTL(DFN,.DGPRIOR)
"RTN","DGREGAED",27,0)
 D SAVE(.DGINPUT,DFN,FSTR,FORGN) I $G(SRC)="",+$G(DGNEW) Q
"RTN","DGREGAED",28,0)
 Q:'$$FILEYN^DGADDUTL(.DGPRIOR,.DGINPUT)
"RTN","DGREGAED",29,0)
 D GETUPDTS^DGADDUTL(DFN,.DGINPUT)
"RTN","DGREGAED",30,0)
 D UPDADDLG^DGADDUTL(DFN,.DGPRIOR,.DGINPUT)
"RTN","DGREGAED",31,0)
 Q
"RTN","DGREGAED",32,0)
INPUT(DGINPUT,DFN,FSTR,CNTRY) ;Let user input address changes
"RTN","DGREGAED",33,0)
 ;Output: DGINPUT(field#)=external^internal(if any)
"RTN","DGREGAED",34,0)
 N DIR,X,Y,DA,DGR,DTOUT,DUOUT,DIROUT,DGN,L
"RTN","DGREGAED",35,0)
 F L=1:1:$L(FSTR,",") S DGN=$P(FSTR,",",L),DGINPUT(DGN)="" Q:DGINPUT=-1  D
"RTN","DGREGAED",36,0)
 . I $$SKIP(DGN,.DGINPUT,.FLG) Q
"RTN","DGREGAED",37,0)
 . I DGN=.1112 D ZIPINP(.DGINPUT,DFN) Q
"RTN","DGREGAED",38,0)
 . I '$$READ(DFN,DGN,.Y) S DGINPUT=-1 Q
"RTN","DGREGAED",39,0)
 . I DGN=.121 S Y=$G(Y) D  Q
"RTN","DGREGAED",40,0)
 .. I Y="",DGINPUT(DGN)="" Q
"RTN","DGREGAED",41,0)
 .. I $P(Y,U)=$$GET1^DIQ(2,DFN_",",DGN,"I") S DGINPUT(DGN)=$$GET1^DIQ(2,DFN_",",DGN)_U_$P(Y,U) Q
"RTN","DGREGAED",42,0)
 .. S DGINPUT(DGN)=$P(Y(0),U)_U_Y
"RTN","DGREGAED",43,0)
 . S DGINPUT(DGN)=$G(Y)
"RTN","DGREGAED",44,0)
 I DGINPUT'=-1 S DGINPUT(.1173)=CNTRY_"^"_$O(^HL(779.004,"B",CNTRY,""))
"RTN","DGREGAED",45,0)
 Q
"RTN","DGREGAED",46,0)
GETOLD(DGCMP,DFN) ;populate array with existing address info
"RTN","DGREGAED",47,0)
 N CCIEN,DGCURR,CFORGN,CFSTR,L,T,DGCIEN,DGST,DGCNTY,COUNTRY
"RTN","DGREGAED",48,0)
 S CFORGN=0
"RTN","DGREGAED",49,0)
 ; get current country
"RTN","DGREGAED",50,0)
 ; If current country is NULL it is old data
"RTN","DGREGAED",51,0)
 ; Leave it NULL here because this is not an edit funtion
"RTN","DGREGAED",52,0)
 S CCIEN=$$GET1^DIQ(2,DFN_",","COUNTRY","I")
"RTN","DGREGAED",53,0)
 ;I CCIEN="" S CCIEN=$O(^HL(779.004,"D","UNITED STATES",""))
"RTN","DGREGAED",54,0)
 S CFORGN=$$FORIEN^DGADDUTL(CCIEN)
"RTN","DGREGAED",55,0)
 ;get current address fields and xlate to ^DIQ format
"RTN","DGREGAED",56,0)
 S CFSTR=$$INPT1(DFN,CFORGN),CFSTR=$TR(CFSTR,",",";")
"RTN","DGREGAED",57,0)
 ; Domestic data needs some extra fields
"RTN","DGREGAED",58,0)
 I 'CFORGN S CFSTR=CFSTR_";.114;.115;.117"
"RTN","DGREGAED",59,0)
 D GETS^DIQ(2,DFN_",",CFSTR,"EI","DGCURR")
"RTN","DGREGAED",60,0)
 F L=1:1:$L(CFSTR,";") S T=$P(CFSTR,";",L),DGCMP("OLD",T)=$G(DGCURR(2,DFN_",",T,"E"))
"RTN","DGREGAED",61,0)
 S COUNTRY=$$CNTRYI^DGADDUTL(CCIEN) I COUNTRY=-1 S COUNTRY="UNKNOWN COUNTRY"
"RTN","DGREGAED",62,0)
 S DGCMP("OLD",.1173)=COUNTRY_"^"_CCIEN
"RTN","DGREGAED",63,0)
 I 'CFORGN D
"RTN","DGREGAED",64,0)
 . S DGCIEN=$G(DGCURR(2,DFN_",",.117,"I"))
"RTN","DGREGAED",65,0)
 . S DGST=$G(DGCURR(2,DFN_",",.115,"I"))
"RTN","DGREGAED",66,0)
 . S DGCNTY=$$CNTY^DGREGAZL(DGST,DGCIEN)
"RTN","DGREGAED",67,0)
 . I DGCNTY=-1 S DGCNTY=""
"RTN","DGREGAED",68,0)
 . S DGCMP("OLD",.117)=$P(DGCNTY,U)_" "_$P(DGCNTY,U,3)
"RTN","DGREGAED",69,0)
 Q
"RTN","DGREGAED",70,0)
 ;
"RTN","DGREGAED",71,0)
COMPARE(DGINPUT,DGCMP,FLG) ;Display before & after address fields.
"RTN","DGREGAED",72,0)
 N DGM
"RTN","DGREGAED",73,0)
 M DGCMP("NEW")=DGINPUT
"RTN","DGREGAED",74,0)
 F DGM="OLD","NEW" D
"RTN","DGREGAED",75,0)
 . I DGCMP(DGM,.1173)]"",$$FORIEN^DGADDUTL($P(DGCMP(DGM,.1173),U,2)) D DISPFGN(.DGCMP,DGM,.FLG) Q
"RTN","DGREGAED",76,0)
 . I DGM="NEW" D
"RTN","DGREGAED",77,0)
 . . S DGCNTY=$P($G(DGCMP("NEW",.117)),U)_" "_$P($G(DGCMP("NEW",.117)),U,3)
"RTN","DGREGAED",78,0)
 . . S DGCMP("NEW",.117)=DGCNTY
"RTN","DGREGAED",79,0)
 . . I ($L(DGCMP("NEW",.1112))>5)&($P(DGCMP("NEW",.1112),"-",2)="") S DGCMP("NEW",.1112)=$E(DGCMP("NEW",.1112),1,5)_"-"_$E(DGCMP("NEW",.1112),6,9)
"RTN","DGREGAED",80,0)
 . D DISPUS(.DGCMP,DGM,.FLG)
"RTN","DGREGAED",81,0)
 Q
"RTN","DGREGAED",82,0)
 ;
"RTN","DGREGAED",83,0)
DISPUS(DGCMP,DGM,FLG) ;tag to display US data
"RTN","DGREGAED",84,0)
 N DGCNTRY
"RTN","DGREGAED",85,0)
 W !,?2,"[",DGM," ADDRESS]"
"RTN","DGREGAED",86,0)
 W ?16,$P($G(DGCMP(DGM,.111)),U)
"RTN","DGREGAED",87,0)
 I $P($G(DGCMP(DGM,.112)),U)'="" W !,?16,$P($G(DGCMP(DGM,.112)),U)
"RTN","DGREGAED",88,0)
 I $P($G(DGCMP(DGM,.113)),U)'="" W !,?16,$P($G(DGCMP(DGM,.113)),U)
"RTN","DGREGAED",89,0)
 W !,?16,$P($G(DGCMP(DGM,.114)),U)
"RTN","DGREGAED",90,0)
 W:($P($G(DGCMP(DGM,.114)),U)'="")!($P($G(DGCMP(DGM,.115)),U)'="") ","
"RTN","DGREGAED",91,0)
 W $P($G(DGCMP(DGM,.115)),U)
"RTN","DGREGAED",92,0)
 W " ",$G(DGCMP(DGM,.1112))
"RTN","DGREGAED",93,0)
 S DGCNTRY=$$CNTRYI^DGADDUTL($P($G(DGCMP(DGM,.1173)),U,2))
"RTN","DGREGAED",94,0)
 I DGCNTRY]"",(DGCNTRY'=-1) W !?16,DGCNTRY
"RTN","DGREGAED",95,0)
 I $P($G(DGCMP(DGM,.117)),U)'="" W !,?6,"  County: ",$P($G(DGCMP(DGM,.117)),U)
"RTN","DGREGAED",96,0)
 I $G(FLG(1))=1 D
"RTN","DGREGAED",97,0)
 . W !,?6,"   Phone: ",?16,$P($G(DGCMP(DGM,.131)),U)
"RTN","DGREGAED",98,0)
 . W !,?6,"  Office: ",?16,$P($G(DGCMP(DGM,.132)),U)
"RTN","DGREGAED",99,0)
 W !,?6,"Bad Addr: ",?16,$P($G(DGCMP(DGM,.121)),U)
"RTN","DGREGAED",100,0)
 W !
"RTN","DGREGAED",101,0)
 Q
"RTN","DGREGAED",102,0)
 ;
"RTN","DGREGAED",103,0)
DISPFGN(DGCMP,DGM,FLG) ;tag to display Foreign data
"RTN","DGREGAED",104,0)
 N DGCNTRY
"RTN","DGREGAED",105,0)
 W !,?2,"[",DGM," ADDRESS]"
"RTN","DGREGAED",106,0)
 W ?16,$P($G(DGCMP(DGM,.111)),U)
"RTN","DGREGAED",107,0)
 I $P($G(DGCMP(DGM,.112)),U)'="" W !,?16,$P($G(DGCMP(DGM,.112)),U)
"RTN","DGREGAED",108,0)
 I $P($G(DGCMP(DGM,.113)),U)'="" W !,?16,$P($G(DGCMP(DGM,.113)),U)
"RTN","DGREGAED",109,0)
 W !,?16,$P($G(DGCMP(DGM,.1172)),U)_" "_$P($G(DGCMP(DGM,.114)),U)_" "_$P($G(DGCMP(DGM,.1171)),U)
"RTN","DGREGAED",110,0)
 S DGCNTRY=$$CNTRYI^DGADDUTL($P($G(DGCMP(DGM,.1173)),U,2))
"RTN","DGREGAED",111,0)
 S DGCNTRY=$S(DGCNTRY="":"UNSPECIFIED COUNTRY",DGCNTRY=-1:"UNKNOWN COUNTRY",1:DGCNTRY)
"RTN","DGREGAED",112,0)
 I DGCNTRY]"" W !?16,DGCNTRY
"RTN","DGREGAED",113,0)
 I $G(FLG(1))=1 D
"RTN","DGREGAED",114,0)
 . W !,?6,"   Phone: ",?16,$P($G(DGCMP(DGM,.131)),U)
"RTN","DGREGAED",115,0)
 . W !,?6,"  Office: ",?16,$P($G(DGCMP(DGM,.132)),U)
"RTN","DGREGAED",116,0)
 W !,?6,"Bad Addr: ",?16,$P($G(DGCMP(DGM,.121)),U)
"RTN","DGREGAED",117,0)
 W !
"RTN","DGREGAED",118,0)
 Q
"RTN","DGREGAED",119,0)
 ;
"RTN","DGREGAED",120,0)
CONFIRM() ;Confirm if user wants to save the change
"RTN","DGREGAED",121,0)
 N DIR,X,Y,DTOUT,DUOUT,DIROUT
"RTN","DGREGAED",122,0)
 S DIR(0)="Y"
"RTN","DGREGAED",123,0)
 S DIR("A")="Are you sure that you want to save the above changes"
"RTN","DGREGAED",124,0)
 S DIR("?")="Please answer Y for YES or N for NO."
"RTN","DGREGAED",125,0)
 D ^DIR
"RTN","DGREGAED",126,0)
 I $D(DTOUT)!($G(Y)=0) Q 0
"RTN","DGREGAED",127,0)
 I $D(DUOUT)!$D(DIROUT) Q 0
"RTN","DGREGAED",128,0)
 Q 1
"RTN","DGREGAED",129,0)
SAVE(DGINPUT,DFN,FSTR,FORGN) ;Save changes
"RTN","DGREGAED",130,0)
 N DGN,DGER,DGM,L
"RTN","DGREGAED",131,0)
 S DGER=0
"RTN","DGREGAED",132,0)
 ; need to get the country code into the DGINPUT array
"RTN","DGREGAED",133,0)
 ; if it's a domestic address, we have to add in CITY,STATE & COUNTY
"RTN","DGREGAED",134,0)
 S FSTR=FSTR_$S('FORGN:",.114,.115,.117,.1173",1:",.1173")
"RTN","DGREGAED",135,0)
 F L=1:1:$L(FSTR,",") S DGN=$P(FSTR,",",L) D
"RTN","DGREGAED",136,0)
 . I ($G(FLG(1))'=1)&((DGN=.131)!(DGN=.132)) Q
"RTN","DGREGAED",137,0)
 . N DGCODE,DGNAME,FDA,MSG
"RTN","DGREGAED",138,0)
 . S DGCODE=$P($G(DGINPUT(DGN)),U,2)
"RTN","DGREGAED",139,0)
 . S DGNAME=$P($G(DGINPUT(DGN)),U)
"RTN","DGREGAED",140,0)
 . S FDA(2,DFN_",",DGN)=$S(DGCODE:DGCODE,1:DGNAME)
"RTN","DGREGAED",141,0)
 . D FILE^DIE($S(DGCODE:"",1:"E"),"FDA","MSG")
"RTN","DGREGAED",142,0)
 . I $D(MSG) D
"RTN","DGREGAED",143,0)
 .. S DGM="",DGER=1
"RTN","DGREGAED",144,0)
 .. W !,"Please review the saved changes!!",!
"RTN","DGREGAED",145,0)
 .. F  S DGM=$O(MSG("DIERR",1,"TEXT",DGM)) Q:DGM=""  D
"RTN","DGREGAED",146,0)
 ... W $G(MSG("DIERR",1,"TEXT",DGM))
"RTN","DGREGAED",147,0)
 I $G(DGER)=0 W !,"Change saved."
"RTN","DGREGAED",148,0)
 D EOP
"RTN","DGREGAED",149,0)
 Q
"RTN","DGREGAED",150,0)
READ(DFN,DGN,Y) ;Read input, return success
"RTN","DGREGAED",151,0)
 N SUCCESS,DIR,DA,DTOUT,DUOUT,DIROUT,L,POP
"RTN","DGREGAED",152,0)
 S SUCCESS=1,POP=0
"RTN","DGREGAED",153,0)
 F L=0:0 D  Q:POP
"RTN","DGREGAED",154,0)
 . S DIR(0)=2_","_DGN
"RTN","DGREGAED",155,0)
 . S DA=DFN
"RTN","DGREGAED",156,0)
 . D ^DIR
"RTN","DGREGAED",157,0)
 . I $D(DTOUT) S POP=1,SUCCESS=0 Q
"RTN","DGREGAED",158,0)
 . I $D(DUOUT)!$D(DIROUT) D UPCT Q
"RTN","DGREGAED",159,0)
 . S POP=1
"RTN","DGREGAED",160,0)
 Q SUCCESS
"RTN","DGREGAED",161,0)
INPT1(DFN,FORGN,PSTR) ; first address input prompts
"RTN","DGREGAED",162,0)
 N FSTR
"RTN","DGREGAED",163,0)
 ; PSTR is the full set of fields domestic & foreign combined
"RTN","DGREGAED",164,0)
 ; FSTR is the set of fields depending on Country code
"RTN","DGREGAED",165,0)
 S PSTR=".111,.112,.113,.114,.115,.117,.1112,.1171,.1172,.1173,.131,.132,.121"
"RTN","DGREGAED",166,0)
 S FSTR=".111,.112,.113,.1112,.131,.132,.121"
"RTN","DGREGAED",167,0)
 I FORGN S FSTR=".111,.112,.113,.114,.1171,.1172,.131,.132,.121"
"RTN","DGREGAED",168,0)
 Q FSTR
"RTN","DGREGAED",169,0)
ZIPINP(DGINPUT,DFN) ; get ZIP+4 input
"RTN","DGREGAED",170,0)
 N DGR
"RTN","DGREGAED",171,0)
 D EN^DGREGAZL(.DGR,DFN)
"RTN","DGREGAED",172,0)
 I $G(DGR)=-1 Q
"RTN","DGREGAED",173,0)
 M DGINPUT=DGR
"RTN","DGREGAED",174,0)
 Q
"RTN","DGREGAED",175,0)
SKIP(DGN,DGINPUT,FLG) ; determine whether or not to skip this step
"RTN","DGREGAED",176,0)
 N SKIP
"RTN","DGREGAED",177,0)
 S SKIP=0
"RTN","DGREGAED",178,0)
 I ($G(DGINPUT(.111))="")&((DGN=.112)!(DGN=.113)) S SKIP=1
"RTN","DGREGAED",179,0)
 I ($G(DGINPUT(.112))="")&(DGN=.113) S SKIP=1
"RTN","DGREGAED",180,0)
 I ($G(FLG(1))'=1)&((DGN=.131)!(DGN=.132)) S SKIP=1
"RTN","DGREGAED",181,0)
 Q SKIP
"RTN","DGREGAED",182,0)
EOP ;End of page prompt
"RTN","DGREGAED",183,0)
 N DIR,DTOUT,DUOUT,DIROUT,X,Y
"RTN","DGREGAED",184,0)
 S DIR(0)="E"
"RTN","DGREGAED",185,0)
 S DIR("A")="Press ENTER to continue"
"RTN","DGREGAED",186,0)
 D ^DIR
"RTN","DGREGAED",187,0)
 Q
"RTN","DGREGAED",188,0)
UPCT ;Indicate "^" or "^^" are unacceptable inputs.
"RTN","DGREGAED",189,0)
 W !,"EXIT NOT ALLOWED ??"
"RTN","DGREGAED",190,0)
 Q
"RTN","DGRPE1")
0^1^B9500798^B9042647
"RTN","DGRPE1",1,0)
DGRPE1 ;ALB/MRL,RTK,BRM,RGL,ERC,TDM - REGISTRATIONS EDITS (CONTINUED) ; 4/2/09 11:26am
"RTN","DGRPE1",2,0)
 ;;5.3;Registration;**114,327,451,631,688,808**;Aug 13, 1993;Build 4
"RTN","DGRPE1",3,0)
 ;
"RTN","DGRPE1",4,0)
 ;***CONTAINS ISM SPECIFIC CODE TO AVOID STORE ERRORS WITH ELIG.***
"RTN","DGRPE1",5,0)
 ;
"RTN","DGRPE1",6,0)
 I DGRPS'=7 F I=1:1 S J=$P(DGDR,",",I) Q:J=""  F J1=J,J*1000 Q:'$T(@J1)  S DGDRD=$P($T(@J1),";;",2) D S
"RTN","DGRPE1",7,0)
 I DGRPS=7 S DR="[DG LOAD EDIT SCREEN 7]"
"RTN","DGRPE1",8,0)
 ;S DR(2,2.0361)=".01"
"RTN","DGRPE1",9,0)
 D ^DIE K DIE,DR,DGCT,DGDR,DGDRD,DGDRS,I,J,J1
"RTN","DGRPE1",10,0)
 ;update/set ELIGIBILITY VERIF. SOURCE field (327/Ineligible Project)
"RTN","DGRPE1",11,0)
 I $D(^DPT(DFN,.361)) S DGELG=^DPT(DFN,.361) D
"RTN","DGRPE1",12,0)
 .N DGXEL
"RTN","DGRPE1",13,0)
 .S DGXEL=$P(DGELG,U,5),DATA(.3613)="V"
"RTN","DGRPE1",14,0)
 .I $S($G(DGXEL)["CEV":1,$G(DGXEL)["VBA":1,$G(DGXEL)["VIVA":1,1:0),$P(DGELG,U,6)=.5 S DATA(.3613)="H"
"RTN","DGRPE1",15,0)
 .I '$$UPD^DGENDBS(2,DFN,.DATA)
"RTN","DGRPE1",16,0)
 Q
"RTN","DGRPE1",17,0)
S I $L(@DGDRS)+$L(DGDRD)<241 S @DGDRS=@DGDRS_DGDRD Q
"RTN","DGRPE1",18,0)
 S DGCT=DGCT+1,DGDRS="DR(1,2,"_DGCT_")",@DGDRS=DGDRD Q
"RTN","DGRPE1",19,0)
701 ;;391;D SC7^DGRPV;1901;.301;S:X'="Y" Y=.313;.302;.313;.312;
"RTN","DGRPE1",20,0)
702 ;;.361;D AAC1^DGLOCK2 S:DGAAC(1)']"" Y=361;.309;361;.323;D ^DGYZODS;S:'DGODS Y=.36265;11500.02;11500.03;.36265;S:X='"Y" Y="@72";.3626;@72;
"RTN","DGRPE1",21,0)
703 ;;.3731;
"RTN","DGRPE1",22,0)
1001 ;;.152;S:X="" Y="@101";.1651;.1653;.1654;.307;.1656;@101;
"RTN","DGRPE1",23,0)
1002 ;;.153;S:X="" Y="@102";.1657:.1659;.16;@102;
"RTN","DGRPE1",24,0)
1101 ;;.3611;.3612;.3614;.3615;
"RTN","DGRPE1",25,0)
1102 ;;.306;
"RTN","DGRPE1",26,0)
1103 ;;.322;
"RTN","DGRPE1",27,0)
1104 ;;D VETTYPE^DGRPE1;D MSG^DGRPE1 S Y=0;@114;K DGRDCHG;D DR^DGRPE1;.302;.3721;D EFF^DGRPE1;D:$G(DGRDCHG) BULL^DGRPE1;K DGRDCHG
"RTN","DGRPE1",28,0)
MSG W !,"Patient is not a veteran.  Can't enter rated disabilities",! Q
"RTN","DGRPE1",29,0)
 ;
"RTN","DGRPE1",30,0)
BULL ; Rated Disabilities update bulletin
"RTN","DGRPE1",31,0)
 ;
"RTN","DGRPE1",32,0)
 Q        ; This bulletin has been disabled.  DG*5.3*808
"RTN","DGRPE1",33,0)
 ;
"RTN","DGRPE1",34,0)
 N DGBULL,DGLINE,DGMGRP,DGNAME,DIFROM,VA,VAERR,XMTEXT,XMSUB,XMDUZ
"RTN","DGRPE1",35,0)
 S DGMGRP=$O(^XMB(3.8,"B","DGEN ELIGIBILITY ALERT",""))
"RTN","DGRPE1",36,0)
 Q:'DGMGRP
"RTN","DGRPE1",37,0)
 D XMY^DGMTUTL(DGMGRP,0,1)
"RTN","DGRPE1",38,0)
 S DGNAME=$P($G(^DPT(DFN,0)),"^"),DGSSN=$P($G(^DPT(DFN,0)),"^",9)
"RTN","DGRPE1",39,0)
 S XMTEXT="DGBULL("
"RTN","DGRPE1",40,0)
 S XMSUB="RATED DISABILITY UPDATED"
"RTN","DGRPE1",41,0)
 S DGLINE=0
"RTN","DGRPE1",42,0)
 D LINE^DGEN("Patient: "_DGNAME,.DGLINE)
"RTN","DGRPE1",43,0)
 D LINE^DGEN("SSN: "_DGSSN,.DGLINE)
"RTN","DGRPE1",44,0)
 D LINE^DGEN("",.DGLINE)
"RTN","DGRPE1",45,0)
 D LINE^DGEN("Send updates to SC Disabilities to HEC via fax or HECAlert",.DGLINE)
"RTN","DGRPE1",46,0)
 D LINE^DGEN("Outlook mail group so that they can be entered into VHA's",.DGLINE)
"RTN","DGRPE1",47,0)
 D LINE^DGEN("Authoritative Database.  SC Disability information entered directly",.DGLINE)
"RTN","DGRPE1",48,0)
 D LINE^DGEN("into VistA may be overlaid.",.DGLINE)
"RTN","DGRPE1",49,0)
 D ^XMD
"RTN","DGRPE1",50,0)
 Q
"RTN","DGRPE1",51,0)
DR ;
"RTN","DGRPE1",52,0)
 K DGSCPC
"RTN","DGRPE1",53,0)
 S DGSCPC=$P($G(^DPT(DFN,.3)),U,2)
"RTN","DGRPE1",54,0)
 S DR(2,2.04)=".01;2;3"
"RTN","DGRPE1",55,0)
 Q
"RTN","DGRPE1",56,0)
EFF ;
"RTN","DGRPE1",57,0)
 I $G(DGSCPC)=$P($G(^DPT(DFN,.3)),U,2) Q
"RTN","DGRPE1",58,0)
 S DGFDA(2,DFN_",",.3014)="@"
"RTN","DGRPE1",59,0)
 D FILE^DIE("","DGFDA","DGERR")
"RTN","DGRPE1",60,0)
 K DGFDA,DGSCPC
"RTN","DGRPE1",61,0)
 Q
"RTN","DGRPE1",62,0)
VETTYPE ;
"RTN","DGRPE1",63,0)
 S:$S('$D(^DPT(DFN,"VET")):0,^("VET")="Y":1,1:0) Y="@114" Q
"RTN","DGRPE1",64,0)
 S:'$S('$D(^("TYPE")):1,'$D(^DG(391,+^("TYPE"),0)):1,$P(^(0),"^",2):0,1:1) Y="@114"
"RTN","DGRPE1",65,0)
 Q
"VER")
8.0^22.0
"BLD",7183,6)
^706
**END**
**END**
