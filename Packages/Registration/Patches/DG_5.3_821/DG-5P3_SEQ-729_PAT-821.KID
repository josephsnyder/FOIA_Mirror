Released DG*5.3*821 SEQ #729
Extracted from mail message
**KIDS**:DG*5.3*821^

**INSTALL NAME**
DG*5.3*821
"BLD",2766,0)
DG*5.3*821^REGISTRATION^0^3100714^y
"BLD",2766,1,0)
^^4^4^3100422^
"BLD",2766,1,1,0)
 
"BLD",2766,1,2,0)
MPI SUPPORT FOR JOINT VA/DOD MEDICAL CENTER  
"BLD",2766,1,3,0)
Refer to patch DG*5.3*821 in the FORUM Patch Module for a complete
"BLD",2766,1,4,0)
description.
"BLD",2766,4,0)
^9.64PA^391.91^1
"BLD",2766,4,391.91,0)
391.91
"BLD",2766,4,391.91,2,0)
^9.641^391.9101^1
"BLD",2766,4,391.91,2,391.9101,0)
SOURCE ID  (sub-file)
"BLD",2766,4,391.91,2,391.9101,1,0)
^9.6411^^0
"BLD",2766,4,391.91,222)
y^y^p^^^^n^^n
"BLD",2766,4,391.91,224)

"BLD",2766,4,"APDD",391.91,391.9101)

"BLD",2766,4,"B",391.91,391.91)

"BLD",2766,6.3)
7
"BLD",2766,"ABNS",0)
^9.66A^^
"BLD",2766,"ABPKG")
^^
"BLD",2766,"KRN",0)
^9.67PA^779.2^20
"BLD",2766,"KRN",.4,0)
.4
"BLD",2766,"KRN",.401,0)
.401
"BLD",2766,"KRN",.402,0)
.402
"BLD",2766,"KRN",.403,0)
.403
"BLD",2766,"KRN",.5,0)
.5
"BLD",2766,"KRN",.84,0)
.84
"BLD",2766,"KRN",3.6,0)
3.6
"BLD",2766,"KRN",3.8,0)
3.8
"BLD",2766,"KRN",9.2,0)
9.2
"BLD",2766,"KRN",9.8,0)
9.8
"BLD",2766,"KRN",9.8,"NM",0)
^9.68A^8^8
"BLD",2766,"KRN",9.8,"NM",1,0)
VAFCTFU^^0^B52095428
"BLD",2766,"KRN",9.8,"NM",2,0)
VAFCTFIN^^0^B33860243
"BLD",2766,"KRN",9.8,"NM",3,0)
VAFCOFIN^^0^B25196556
"BLD",2766,"KRN",9.8,"NM",4,0)
VAFCOTFU^^0^B44458829
"BLD",2766,"KRN",9.8,"NM",5,0)
VAFCTFU2^^0^B41375332
"BLD",2766,"KRN",9.8,"NM",6,0)
DGDATA^^1^
"BLD",2766,"KRN",9.8,"NM",7,0)
DGDATA01^^1^
"BLD",2766,"KRN",9.8,"NM",8,0)
DGDATA02^^1^
"BLD",2766,"KRN",9.8,"NM","B","DGDATA",6)

"BLD",2766,"KRN",9.8,"NM","B","DGDATA01",7)

"BLD",2766,"KRN",9.8,"NM","B","DGDATA02",8)

"BLD",2766,"KRN",9.8,"NM","B","VAFCOFIN",3)

"BLD",2766,"KRN",9.8,"NM","B","VAFCOTFU",4)

"BLD",2766,"KRN",9.8,"NM","B","VAFCTFIN",2)

"BLD",2766,"KRN",9.8,"NM","B","VAFCTFU",1)

"BLD",2766,"KRN",9.8,"NM","B","VAFCTFU2",5)

"BLD",2766,"KRN",19,0)
19
"BLD",2766,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",2766,"KRN",19,"NM",1,0)
DG DATA SERVER^^1^
"BLD",2766,"KRN",19,"NM","B","DG DATA SERVER",1)

"BLD",2766,"KRN",19.1,0)
19.1
"BLD",2766,"KRN",101,0)
101
"BLD",2766,"KRN",409.61,0)
409.61
"BLD",2766,"KRN",771,0)
771
"BLD",2766,"KRN",771,"NM",0)
^9.68A^^
"BLD",2766,"KRN",779.2,0)
779.2
"BLD",2766,"KRN",870,0)
870
"BLD",2766,"KRN",8989.51,0)
8989.51
"BLD",2766,"KRN",8989.52,0)
8989.52
"BLD",2766,"KRN",8994,0)
8994
"BLD",2766,"KRN",8994,"NM",0)
^9.68A^2^2
"BLD",2766,"KRN",8994,"NM",1,0)
VAFC LOCAL GETCORRESPONDINGIDS^^0
"BLD",2766,"KRN",8994,"NM",2,0)
VAFC NEW NC TREATING FACILITY^^0
"BLD",2766,"KRN",8994,"NM","B","VAFC LOCAL GETCORRESPONDINGIDS",1)

"BLD",2766,"KRN",8994,"NM","B","VAFC NEW NC TREATING FACILITY",2)

"BLD",2766,"KRN","B",.4,.4)

"BLD",2766,"KRN","B",.401,.401)

"BLD",2766,"KRN","B",.402,.402)

"BLD",2766,"KRN","B",.403,.403)

"BLD",2766,"KRN","B",.5,.5)

"BLD",2766,"KRN","B",.84,.84)

"BLD",2766,"KRN","B",3.6,3.6)

"BLD",2766,"KRN","B",3.8,3.8)

"BLD",2766,"KRN","B",9.2,9.2)

"BLD",2766,"KRN","B",9.8,9.8)

"BLD",2766,"KRN","B",19,19)

"BLD",2766,"KRN","B",19.1,19.1)

"BLD",2766,"KRN","B",101,101)

"BLD",2766,"KRN","B",409.61,409.61)

"BLD",2766,"KRN","B",771,771)

"BLD",2766,"KRN","B",779.2,779.2)

"BLD",2766,"KRN","B",870,870)

"BLD",2766,"KRN","B",8989.51,8989.51)

"BLD",2766,"KRN","B",8989.52,8989.52)

"BLD",2766,"KRN","B",8994,8994)

"BLD",2766,"QUES",0)
^9.62^^
"BLD",2766,"REQB",0)
^9.611^1^1
"BLD",2766,"REQB",1,0)
DG*5.3*800^2
"BLD",2766,"REQB","B","DG*5.3*800",1)

"FIA",391.91)
TREATING FACILITY LIST
"FIA",391.91,0)
^DGCN(391.91,
"FIA",391.91,0,0)
391.91IP
"FIA",391.91,0,1)
y^y^p^^^^n^^n
"FIA",391.91,0,10)

"FIA",391.91,0,11)

"FIA",391.91,0,"RLRO")

"FIA",391.91,0,"VR")
5.3^DG
"FIA",391.91,391.91)
1
"FIA",391.91,391.91,20)

"FIA",391.91,391.9101)
0
"IX",391.91,391.91,"ASCR",0)
391.91^ASCR^X-REF on SOURCE ID and STATION NUMBER of SOURCE ID^MU^^F^IR^W^391.9101^^^^^A
"IX",391.91,391.91,"ASCR",.1,0)
^^2^2^3100108^
"IX",391.91,391.91,"ASCR",.1,1,0)
The ASCR cross-reference will be used to determine the INSTITUTION 
"IX",391.91,391.91,"ASCR",.1,2,0)
associated with the SOURCE ID.
"IX",391.91,391.91,"ASCR",1)
S ^DGCN(391.91,"ASCR",X(1),X(2),DA(1))=""
"IX",391.91,391.91,"ASCR",2)
K ^DGCN(391.91,"ASCR",X(1),X(2),DA(1))
"IX",391.91,391.91,"ASCR",2.5)
K ^DGCN(391.91,"ASCR")
"IX",391.91,391.91,"ASCR",11.1,0)
^.114IA^2^2
"IX",391.91,391.91,"ASCR",11.1,1,0)
1^F^391.9101^.01^^1^F
"IX",391.91,391.91,"ASCR",11.1,2,0)
2^C^^^^2^F
"IX",391.91,391.91,"ASCR",11.1,2,1.5)
S X=$P(^DGCN(391.91,DA(1),0),"^",2)
"KRN",19,7250,-1)
1^1
"KRN",19,7250,0)
DG DATA SERVER
"KRN",8994,276,-1)
0^1
"KRN",8994,276,0)
VAFC LOCAL GETCORRESPONDINGIDS^TFL^VAFCTFU2^3^P^^^1^1
"KRN",8994,276,1,0)
^8994.01^3^3^3100414^^^
"KRN",8994,276,1,1,0)
Given a patient DFN, ICN, or EDIPI, this Remote Procedure Call returns a 
"KRN",8994,276,1,2,0)
list of Treating Facilities, including SOURCE ID, station number, and 
"KRN",8994,276,1,3,0)
IDENTIFIER STATUS.
"KRN",8994,276,2,0)
^8994.02A^2^1
"KRN",8994,276,2,2,0)
Patient Identifier^3^255^1^1
"KRN",8994,276,2,2,1,0)
^^11^11^3100107^
"KRN",8994,276,2,2,1,1,0)
The patient identifier will either be the PATIENT file (#2) IEN (aka 
"KRN",8994,276,2,2,1,2,0)
DFN), Integration Control Number (aka ICN) or the DOD Identifier (aka 
"KRN",8994,276,2,2,1,3,0)
EDIPI).  Following this format:
"KRN",8994,276,2,2,1,4,0)
 
"KRN",8994,276,2,2,1,5,0)
Id^IdType^AssigningAuthority^AssigningFacility
"KRN",8994,276,2,2,1,6,0)
 
"KRN",8994,276,2,2,1,7,0)
Examples:
"KRN",8994,276,2,2,1,8,0)
 
"KRN",8994,276,2,2,1,9,0)
ICN example:   1008520438V882204^NI^USVHA^200M
"KRN",8994,276,2,2,1,10,0)
DFN example:   100000511^PI^USVHA^500
"KRN",8994,276,2,2,1,11,0)
EDIPI example: 852043888^NI^USDOD^200DOD
"KRN",8994,276,2,"B","Patient Identifier",2)

"KRN",8994,276,2,"PARAMSEQ",1,2)

"KRN",8994,276,3,0)
^^11^11^3100107^
"KRN",8994,276,3,1,0)
This will return a list of treating facilities in the following format:
"KRN",8994,276,3,2,0)
 
"KRN",8994,276,3,3,0)
ID^IDTYPE^AssigningAuthority^AssigningFacility^IDStatus
"KRN",8994,276,3,4,0)
 
"KRN",8994,276,3,5,0)
Examples:
"KRN",8994,276,3,6,0)
 
"KRN",8994,276,3,7,0)
RETURN(1)="27^PI^USVHA^500^H"
"KRN",8994,276,3,8,0)
RETURN(2)="7169806^PI^USVHA^500^A"
"KRN",8994,276,3,9,0)
RETURN(3)="^PI^USVHA^200PS"
"KRN",8994,276,3,10,0)
RETURN(4)="1^NI^USDOD^200DOD^A"
"KRN",8994,276,3,11,0)
RETURN(5)="2^NI^USDOD^200DOD^H"
"KRN",8994,278,-1)
0^2
"KRN",8994,278,0)
VAFC NEW NC TREATING FACILITY^NEWTF^VAFCTFU2^2^P^0^^^1
"KRN",8994,278,1,0)
^^7^7^3100414^
"KRN",8994,278,1,1,0)
This Remote Procedure Call will be used by the North Chicago Common 
"KRN",8994,278,1,2,0)
Registration User Interface (UI).  Given a patient DFN and DOD EDIPI, the 
"KRN",8994,278,1,3,0)
RPC adds an active Department of Defense correlation to the VistA 
"KRN",8994,278,1,4,0)
TREATING FACILITY LIST (#391.91) file if it does not exist.  It returns a 
"KRN",8994,278,1,5,0)
list of Treating Facilities, including Source Identifier, Identifier 
"KRN",8994,278,1,6,0)
Type, Assigning Authority, Assigning Facility, Identifier Status, and an 
"KRN",8994,278,1,7,0)
indicator if the entry was entered into File 391.91.
"KRN",8994,278,2,0)
^8994.02A^2^2
"KRN",8994,278,2,1,0)
Vista Patient Identifier^1^255^1^1
"KRN",8994,278,2,1,1,0)
^^3^3^3100415^
"KRN",8994,278,2,1,1,1,0)
Vista Patient Identifier will be the PATIENT (#2) file IEN (aka DFN).
"KRN",8994,278,2,1,1,2,0)
 
"KRN",8994,278,2,1,1,3,0)
Example: DFN="7168937"
"KRN",8994,278,2,2,0)
DOD Identifier^1^255^1^2
"KRN",8994,278,2,2,1,0)
^^5^5^3100415^
"KRN",8994,278,2,2,1,1,0)
The DOD Identifier will be EDIPI data with the following format:
"KRN",8994,278,2,2,1,2,0)
 
"KRN",8994,278,2,2,1,3,0)
 Id^IdType^AssigningAuthority^AssigningFacility
"KRN",8994,278,2,2,1,4,0)
 
"KRN",8994,278,2,2,1,5,0)
 Example: EDIPI="852043888^NI^USDOD^200DOD"
"KRN",8994,278,2,"B","DOD Identifier",2)

"KRN",8994,278,2,"B","Vista Patient Identifier",1)

"KRN",8994,278,2,"PARAMSEQ",1,1)

"KRN",8994,278,2,"PARAMSEQ",2,2)

"KRN",8994,278,3,0)
^^12^12^3100415^
"KRN",8994,278,3,1,0)
This will return a list of treating facilities in the following format:
"KRN",8994,278,3,2,0)
  
"KRN",8994,278,3,3,0)
 Id^IdType^AssigningAuthority^AssigningFacility^IdStatus[^NEW]
"KRN",8994,278,3,4,0)
  
"KRN",8994,278,3,5,0)
 Examples:
"KRN",8994,278,3,6,0)
  
"KRN",8994,278,3,7,0)
 RESULT(1)="7168937^PI^USVHA^500^A"
"KRN",8994,278,3,8,0)
 RESULT(2)="1^NI^USDOD^200DOD^A^NEW"
"KRN",8994,278,3,9,0)
 
"KRN",8994,278,3,10,0)
 Note: If there is data in the 6th piece of the RESULT(<number>), with
"KRN",8994,278,3,11,0)
       data value as "NEW", then it means that the entry was newly created
"KRN",8994,278,3,12,0)
       in the TREATING FACILITY LIST (#391.91) file by this RPC call.
"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813^2970721^12541
"PKG",5,22,1,"PAH",1,0)
821^3100714
"PKG",5,22,1,"PAH",1,1,0)
^^4^4^3100714
"PKG",5,22,1,"PAH",1,1,1,0)
 
"PKG",5,22,1,"PAH",1,1,2,0)
MPI SUPPORT FOR JOINT VA/DOD MEDICAL CENTER  
"PKG",5,22,1,"PAH",1,1,3,0)
Refer to patch DG*5.3*821 in the FORUM Patch Module for a complete
"PKG",5,22,1,"PAH",1,1,4,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","DGDATA")
1^6^^n/a
"RTN","DGDATA01")
1^7^^n/a
"RTN","DGDATA02")
1^8^^n/a
"RTN","VAFCOFIN")
0^3^B25196556^n/a
"RTN","VAFCOFIN",1,0)
VAFCOFIN ;BIR/DR-TREATING FACILTIY MFU PROCESSING ROUTINE ; 2/1/10 12:46pm
"RTN","VAFCOFIN",2,0)
 ;;5.3;Registration;**821**;Aug 13, 1993;Build 7
"RTN","VAFCOFIN",3,0)
 ;Reference to EXC, START, and STOP^RGHLLOG supported by IA #2796
"RTN","VAFCOFIN",4,0)
 ;
"RTN","VAFCOFIN",5,0)
 ;***NOTE***
"RTN","VAFCOFIN",6,0)
 ;This routine is copy of original VAFCTFIN before DG*5.3*821
"RTN","VAFCOFIN",7,0)
 ;It is modified so VistA can process MFN~M05 in old format until
"RTN","VAFCOFIN",8,0)
 ;MPI starts sending new format.
"RTN","VAFCOFIN",9,0)
 ;
"RTN","VAFCOFIN",10,0)
IN ;This entry point is used to process the Treating Facility Master File Update Message.
"RTN","VAFCOFIN",11,0)
 ;It is called by the VAFC MFN-M05 CLIENT processing routine when a MFN
"RTN","VAFCOFIN",12,0)
 ;message is received.
"RTN","VAFCOFIN",13,0)
 ;There are no inputs or outputs
"RTN","VAFCOFIN",14,0)
 ;
"RTN","VAFCOFIN",15,0)
 I HL("MTN")="MFK" D RSP Q
"RTN","VAFCOFIN",16,0)
 N VAFC,STATN,VAFCI,MSG,SG,VAFCARR,PDFN,INST,MFUPT,PDLT,TFIEN
"RTN","VAFCOFIN",17,0)
 N ICN,MFI,MFE,MFA,HLCOMP,CNT,X,VAFCERR,VAFCX
"RTN","VAFCOFIN",18,0)
 ;quit if Master Patient Index (MPI) is not installed
"RTN","VAFCOFIN",19,0)
 S X="MPIF001" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCOFIN",20,0)
 S X="MPIFQ0" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCOFIN",21,0)
 S X="RGRSBUL1" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCOFIN",22,0)
 S X="RGRSBULL" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCOFIN",23,0)
INIT ;Process in the Treating Facility MFN msg
"RTN","VAFCOFIN",24,0)
 F VAFCI=1:1 X HLNEXT Q:HLQUIT'>0  S (MSG,VAFC(VAFCI))=HLNODE,SG=$E(HLNODE,1,3) D:SG?2A1(1A,1N) PICK
"RTN","VAFCOFIN",25,0)
 ;reconcil the inbound TF list from the MPI to the local TF list
"RTN","VAFCOFIN",26,0)
 D RECONCIL
"RTN","VAFCOFIN",27,0)
 ;create response message
"RTN","VAFCOFIN",28,0)
 S CNT=1
"RTN","VAFCOFIN",29,0)
 S HLA("HLA",1)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_HL("FS") S CNT=CNT+1
"RTN","VAFCOFIN",30,0)
 S HLA("HLA",CNT)=MFI S CNT=CNT+1
"RTN","VAFCOFIN",31,0)
 S VAFCX=0 F  S VAFCX=$O(MFE(VAFCX)) Q:'VAFCX  S HLA("HLA",CNT)=MFE(VAFCX),CNT=CNT+1,HLA("HLA",CNT)=MFA(VAFCX),CNT=CNT+1
"RTN","VAFCOFIN",32,0)
 ;generate an application level ack (MFK) identifying the status of the adds/edits/deletes of TF's passed in
"RTN","VAFCOFIN",33,0)
 D ROUTE
"RTN","VAFCOFIN",34,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.VAFCERR,"",.HLP)
"RTN","VAFCOFIN",35,0)
 Q
"RTN","VAFCOFIN",36,0)
PICK ;check routine for segment entry point
"RTN","VAFCOFIN",37,0)
 I $T(@SG)]"" D @SG
"RTN","VAFCOFIN",38,0)
 I $T(@SG)="" Q
"RTN","VAFCOFIN",39,0)
 Q
"RTN","VAFCOFIN",40,0)
MSH ;;MSH
"RTN","VAFCOFIN",41,0)
 ;process the MSH segment
"RTN","VAFCOFIN",42,0)
 S (HLFS,HL("FS"))=$E(MSG,4),(HLECH,HL("ECH"))=$E(MSG,5,8)
"RTN","VAFCOFIN",43,0)
 S HLCOMP=$E(HL("ECH"),1)
"RTN","VAFCOFIN",44,0)
 S VAFCARR("SENDING SITE")=$P(MSG,HL("FS"),4)
"RTN","VAFCOFIN",45,0)
 Q
"RTN","VAFCOFIN",46,0)
EVN ;;EVN
"RTN","VAFCOFIN",47,0)
 ;process the EVN segment
"RTN","VAFCOFIN",48,0)
 S STATN=+$$SITE^VASITE()_"^"_$$FMDATE^HLFNC($P(MSG,HL("FS"),3))
"RTN","VAFCOFIN",49,0)
 Q
"RTN","VAFCOFIN",50,0)
PID ;;PID
"RTN","VAFCOFIN",51,0)
 ;process the PID segment
"RTN","VAFCOFIN",52,0)
 S PDFN=+$P(MSG,HL("FS"),4)
"RTN","VAFCOFIN",53,0)
 Q
"RTN","VAFCOFIN",54,0)
MFI ;;MFI
"RTN","VAFCOFIN",55,0)
 ;process the MFI segment
"RTN","VAFCOFIN",56,0)
 S MFI=MSG
"RTN","VAFCOFIN",57,0)
 S MFUPT=$P(MSG,HL("FS"),4)
"RTN","VAFCOFIN",58,0)
 S VAFCARR("CMOR")=$P($P(MSG,HL("FS"),8),$E(HL("ECH"),1))
"RTN","VAFCOFIN",59,0)
 Q
"RTN","VAFCOFIN",60,0)
MFE ;;MFE
"RTN","VAFCOFIN",61,0)
 ;process the MFE segment
"RTN","VAFCOFIN",62,0)
 N HLCOMP,NXTSGMT,TYPE
"RTN","VAFCOFIN",63,0)
 S HLCOMP=$E(HL("ECH"),1)
"RTN","VAFCOFIN",64,0)
 S PDLT=$$FMDATE^HLFNC($P(MSG,HL("FS"),4))
"RTN","VAFCOFIN",65,0)
 S ICN=$P($P(MSG,HL("FS"),5),HLCOMP,4)
"RTN","VAFCOFIN",66,0)
 S INST=$P($P(MSG,HL("FS"),5),HLCOMP)
"RTN","VAFCOFIN",67,0)
 S TYPE=$P(MSG,HL("FS"),2)
"RTN","VAFCOFIN",68,0)
 S MFE(INST)=MSG
"RTN","VAFCOFIN",69,0)
 S MFI(ICN,INST)=PDLT_"^^"_TYPE
"RTN","VAFCOFIN",70,0)
 Q
"RTN","VAFCOFIN",71,0)
ZET ;;ZET
"RTN","VAFCOFIN",72,0)
 ;process Patient's Date Last Treated Event Type, ZET segment
"RTN","VAFCOFIN",73,0)
 N PDLTET,IPP
"RTN","VAFCOFIN",74,0)
 S PDLTET=$P(MSG,HL("FS"),2)
"RTN","VAFCOFIN",75,0)
 S $P(MFI(ICN,INST),"^",2)=PDLTET
"RTN","VAFCOFIN",76,0)
 ;DG*5.3*800 - Process In-Person Proofed
"RTN","VAFCOFIN",77,0)
 S IPP=$P(MSG,HL("FS"),3) ;In-Person Proofed
"RTN","VAFCOFIN",78,0)
 S $P(MFI(ICN,INST),"^",6)=IPP
"RTN","VAFCOFIN",79,0)
 Q
"RTN","VAFCOFIN",80,0)
RSP ;response process logic entry point
"RTN","VAFCOFIN",81,0)
 Q
"RTN","VAFCOFIN",82,0)
ROUTE ;routing logic entry point
"RTN","VAFCOFIN",83,0)
 N MPI
"RTN","VAFCOFIN",84,0)
 S MPI=$$MPILINK^MPIFAPI() D
"RTN","VAFCOFIN",85,0)
 .I $P($G(MPI),U)'=-1 S HLL("LINKS",1)="VAFC MFN-M05 CLIENT"_"^"_MPI
"RTN","VAFCOFIN",86,0)
 .I $P($G(MPI),U)=-1 D
"RTN","VAFCOFIN",87,0)
 .. N RGLOG D START^RGHLLOG(HLMTIEN,"","")
"RTN","VAFCOFIN",88,0)
 .. D EXC^RGHLLOG(224,"No MPI link identified in CIRN SITE PARAMETER file (#991.8)",$G(PDFN))
"RTN","VAFCOFIN",89,0)
 .. D STOP^RGHLLOG(0)
"RTN","VAFCOFIN",90,0)
 Q
"RTN","VAFCOFIN",91,0)
TEST ;
"RTN","VAFCOFIN",92,0)
 W $$REPROC^HLUTIL(39266,"D IN^VAFCTFIN")
"RTN","VAFCOFIN",93,0)
 Q
"RTN","VAFCOFIN",94,0)
RECONCIL ;
"RTN","VAFCOFIN",95,0)
 N DFN,MFIC,VAFCX,VAFCY,TFL,CNFLT,LOCCMOR,VAFCTYPE
"RTN","VAFCOFIN",96,0)
 S CNFLT=0
"RTN","VAFCOFIN",97,0)
 S DFN=$$GETDFN^MPIF001(ICN)
"RTN","VAFCOFIN",98,0)
 I DFN'>0 S CNFLT=1_"^"_$P($G(DFN),"^",2)
"RTN","VAFCOFIN",99,0)
 I MFUPT="REP" I +CNFLT=0 D TFL^VAFCTFU1(.TFL,DFN) S VAFCX=0 F  S VAFCX=$O(TFL(VAFCX)) Q:'VAFCX  D
"RTN","VAFCOFIN",100,0)
 . S MFIC($P(TFL(VAFCX),"^"))=TFL(VAFCX) I '$D(MFI(ICN,$P(TFL(VAFCX),"^"))) D DEL(ICN,$P(TFL(VAFCX),"^"))
"RTN","VAFCOFIN",101,0)
 ;VAFCX=ICN and VAFCY=INSTITUTION
"RTN","VAFCOFIN",102,0)
 S VAFCX=0 F  S VAFCX=$O(MFI(VAFCX)) Q:'VAFCX  D
"RTN","VAFCOFIN",103,0)
 . S VAFCY=0 F  S VAFCY=$O(MFI(VAFCX,VAFCY)) Q:'VAFCY  D
"RTN","VAFCOFIN",104,0)
 ..S VAFCTYPE=$P(MFI(VAFCX,VAFCY),"^",3)
"RTN","VAFCOFIN",105,0)
 ..I +CNFLT=1 S MFA(VAFCY)="MFA"_HL("FS")_VAFCTYPE_HL("FS")_VAFCY_HL("FS")_$$HLDATE^HLFNC($$NOW^XLFDT)_HL("FS")_"U"_HLCOMP_$S(VAFCTYPE="MDL":"Delete of ",1:"Update of ")_VAFCY_" Failed at "_$P($$SITE^VASITE,"^",3)_" due to "_$P(CNFLT,"^",2)
"RTN","VAFCOFIN",106,0)
 ..I +CNFLT=0 I VAFCTYPE="MAD"!(VAFCTYPE="MUP") D ADDUPD(DFN,VAFCY,$P(MFI(VAFCX,VAFCY),"^"),$P(MFI(VAFCX,VAFCY),"^",2),$P(MFI(VAFCX,VAFCY),"^",6))
"RTN","VAFCOFIN",107,0)
 ..I +CNFLT=0 I VAFCTYPE="MDL" D DEL(ICN,VAFCY)
"RTN","VAFCOFIN",108,0)
 Q
"RTN","VAFCOFIN",109,0)
ADDUPD(DFN,INST,PDLT,PDLRTET,IPP) ;add or update TF entry
"RTN","VAFCOFIN",110,0)
 N ERROR,STA
"RTN","VAFCOFIN",111,0)
 S STA=INST
"RTN","VAFCOFIN",112,0)
 S INST=$$LKUP^XUAF4(INST)
"RTN","VAFCOFIN",113,0)
 D FILE^VAFCOTFU(DFN,INST_"^"_$G(PDLT)_"^"_$G(PDLRTET),1,1,.ERROR,$G(IPP))
"RTN","VAFCOFIN",114,0)
 S MFA(STA)="MFA"_HL("FS")_"MUP"_HL("FS")_STA_HL("FS")_$$HLDATE^HLFNC($$NOW^XLFDT)_HL("FS")
"RTN","VAFCOFIN",115,0)
 I '$D(ERROR(STA)) S MFA(STA)=MFA(STA)_"S"
"RTN","VAFCOFIN",116,0)
 I $D(ERROR(STA)) S MFA(STA)=MFA(STA)_"U"_HLCOMP_ERROR(STA)_HL("FS")
"RTN","VAFCOFIN",117,0)
 Q
"RTN","VAFCOFIN",118,0)
DEL(ICN,INST) ;delete a TF entry
"RTN","VAFCOFIN",119,0)
 N ERROR,STA
"RTN","VAFCOFIN",120,0)
 S STA=INST
"RTN","VAFCOFIN",121,0)
 S INST=$$LKUP^XUAF4(INST)
"RTN","VAFCOFIN",122,0)
 S ERROR=$$DELETETF^VAFCOTFU(ICN,INST)
"RTN","VAFCOFIN",123,0)
 S MFA(STA)="MFA"_HL("FS")_"MDL"_HL("FS")_STA_HL("FS")_$$HLDATE^HLFNC($$NOW^XLFDT)_HL("FS")
"RTN","VAFCOFIN",124,0)
 I +ERROR'=1 S MFA(STA)=MFA(STA)_"S"
"RTN","VAFCOFIN",125,0)
 I +ERROR=1 S MFA(STA)=MFA(STA)_"U"_HLCOMP_"Delete Failed: "_$P(ERROR,"^",2)
"RTN","VAFCOFIN",126,0)
 Q
"RTN","VAFCOTFU")
0^4^B44458829^n/a
"RTN","VAFCOTFU",1,0)
VAFCOTFU ;ALB/JLU-UTILITIES FOR THE TREATING FACILITY FILE 391.91 ; 2/1/10 12:47pm
"RTN","VAFCOTFU",2,0)
 ;;5.3;Registration;**821**;Aug 13, 1993;Build 7
"RTN","VAFCOTFU",3,0)
 ;
"RTN","VAFCOTFU",4,0)
 ;Reference to EXC^RGHLLOG and STOP^RGHLLOG supported by IA #2796
"RTN","VAFCOTFU",5,0)
 ;Reference to $$UPDATE^ MPIFAPI supported by IA #2706
"RTN","VAFCOTFU",6,0)
 ;
"RTN","VAFCOTFU",7,0)
 ;CHKSUB & GETSCN line tags removed, patch DG*5.3*697
"RTN","VAFCOTFU",8,0)
 ;Subscriptions are no longer used and errors are being
"RTN","VAFCOTFU",9,0)
 ;generated when attempting to add a subscription.
"RTN","VAFCOTFU",10,0)
 ;
"RTN","VAFCOTFU",11,0)
 ;***NOTE***
"RTN","VAFCOTFU",12,0)
 ;This routine is copied from original VAFCTFU routine before
"RTN","VAFCOTFU",13,0)
 ;DG*5.3*821. It is modified so old format of MFN~M05 is processed
"RTN","VAFCOTFU",14,0)
 ;until MPI starts sending new format.
"RTN","VAFCOTFU",15,0)
FILETF(PAT,INST) ;programmer entry point.
"RTN","VAFCOTFU",16,0)
 ;INPUT   PAT - This is the patient's ICN
"RTN","VAFCOTFU",17,0)
 ;       INST - This is the IEN of the institution or Treating Facility
"RTN","VAFCOTFU",18,0)
 ;it also contains the date of treatment in FM format.  It is to be
"RTN","VAFCOTFU",19,0)
 ;stored in an array structure to allow for multiple treating
"RTN","VAFCOTFU",20,0)
 ;facilities.
"RTN","VAFCOTFU",21,0)
 ;  EX.   X(1)=500^2960101
"RTN","VAFCOTFU",22,0)
 ;        x(2)=425^2960202
"RTN","VAFCOTFU",23,0)
 ;
"RTN","VAFCOTFU",24,0)
 ;OUTPUT  0 (ZERO) If no errors
"RTN","VAFCOTFU",25,0)
 ;        1^error description if there was an error.
"RTN","VAFCOTFU",26,0)
 ;
"RTN","VAFCOTFU",27,0)
 N PDFN,LP,VAFCER,X
"RTN","VAFCOTFU",28,0)
 S VAFCER=0
"RTN","VAFCOTFU",29,0)
 I '$G(PAT)!('$D(INST)) S VAFCER="1^Parameter missing." G FILETFQ
"RTN","VAFCOTFU",30,0)
 I $D(@INST)<10 S VAFCER="1^Institution array not populated." G FILETFQ
"RTN","VAFCOTFU",31,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T G FILETFQ
"RTN","VAFCOTFU",32,0)
 S PDFN=$$GETDFN^MPIF001(PAT)
"RTN","VAFCOTFU",33,0)
 I PDFN<0 S VAFCER="1^No patient DFN." G FILETFQ
"RTN","VAFCOTFU",34,0)
 N FSTRG
"RTN","VAFCOTFU",35,0)
 F LP=0:0 S LP=$O(@INST@(LP)) Q:'LP  D FILE(PDFN,@INST@(LP))
"RTN","VAFCOTFU",36,0)
 ;
"RTN","VAFCOTFU",37,0)
FILETFQ Q VAFCER
"RTN","VAFCOTFU",38,0)
 ;
"RTN","VAFCOTFU",39,0)
 ; both the SET & QUERYTF subroutines have been moved to VAFCTFU1 as
"RTN","VAFCOTFU",40,0)
 ; the result of DG*5.3*261  *261 gjc@120899
"RTN","VAFCOTFU",41,0)
 ;
"RTN","VAFCOTFU",42,0)
FILE(PDFN,FSTRG,TICN,VAFCSLT,ERROR,IPP) ;this module files the individual entry
"RTN","VAFCOTFU",43,0)
 ;PDFN is the patient's DFN
"RTN","VAFCOTFU",44,0)
 ;FSTRG = institution or treating facility^Date of treatment^Event reason
"RTN","VAFCOTFU",45,0)
 ;TICN - if 1 suppress add entries to ADT HL7 PIVOT (#391.71) file
"RTN","VAFCOTFU",46,0)
 ;VAFCSLT - (optional) if 1 suppress exception logging and return error in the ERROR array
"RTN","VAFCOTFU",47,0)
 ;ERROR - (optional) 
"RTN","VAFCOTFU",48,0)
 ;Ex  500^2960202^A1
"RTN","VAFCOTFU",49,0)
 ;
"RTN","VAFCOTFU",50,0)
 N X,Y
"RTN","VAFCOTFU",51,0)
 I $G(VAFCSLT)="" S VAFCSLT=0
"RTN","VAFCOTFU",52,0)
 S X="MPIF001" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCOTFU",53,0)
 S X="MPIFQ0" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCOTFU",54,0)
 N TFIEN,PDLT,FAC,EVNTR,VAFCER,CMOR,ICN,STA,ECNT
"RTN","VAFCOTFU",55,0)
 S ECNT=1
"RTN","VAFCOTFU",56,0)
 S FAC=$P(FSTRG,U,1),PDLT=$P(FSTRG,U,2),EVNTR=$P(FSTRG,U,3)
"RTN","VAFCOTFU",57,0)
 S STA=$$STA^XUAF4(FAC)
"RTN","VAFCOTFU",58,0)
 ;
"RTN","VAFCOTFU",59,0)
 I '$$FIND1^DIC(4,"","MX","`"_FAC) D  Q
"RTN","VAFCOTFU",60,0)
 . I 'VAFCSLT D EXC^RGHLLOG(212,"Msg#"_$G(HL("MID"))_" unknown Institution IEN "_FAC_" passed into TF update.",PDFN) D STOP^RGHLLOG(1) Q
"RTN","VAFCOTFU",61,0)
 . I VAFCSLT S ERROR(STA)="Update of "_STA_" Failed at "_$P($$SITE^VASITE,"^",3)_" due to unknown Institution IEN "_FAC_" passed into TF update."
"RTN","VAFCOTFU",62,0)
 I PDLT'="" K %DT S %DT="T" S X=PDLT D ^%DT K %DT I Y<0 S VAFCER="1^Not a FM date." D  Q
"RTN","VAFCOTFU",63,0)
 .I 'VAFCSLT D EXC^RGHLLOG(212,"TF updated in msg#"_$G(HL("MID"))_" for Institution IEN "_FAC_" but with invalid date "_PDLT_" for DFN "_PDFN,PDFN)
"RTN","VAFCOTFU",64,0)
 .I VAFCSLT S ERROR(STA)="Update of "_STA_" Failed at "_$P($$SITE^VASITE,"^",3)_" due to invalid date "_PDLT_" for DFN "_PDFN
"RTN","VAFCOTFU",65,0)
 ;removed code for adding local ICN's
"RTN","VAFCOTFU",66,0)
 S ICN=+$$MPINODE^MPIFAPI(PDFN)
"RTN","VAFCOTFU",67,0)
 S TFIEN=$O(^DGCN(391.91,"APAT",PDFN,FAC,0)) D
"RTN","VAFCOTFU",68,0)
 .;TFIEN is used in other places so quit after adding new entry
"RTN","VAFCOTFU",69,0)
 .I 'TFIEN D FILENEW(PDFN,FAC,PDLT,EVNTR,VAFCSLT,.ERROR,$G(IPP)) Q
"RTN","VAFCOTFU",70,0)
 .I TFIEN D FILEDIT(TFIEN,PDLT,PDFN,FAC,EVNTR,VAFCSLT,.ERROR,$G(IPP))
"RTN","VAFCOTFU",71,0)
 ;look to see if CMOR is in TF list if not add
"RTN","VAFCOTFU",72,0)
 S CMOR=$$GETVCCI^MPIF001(PDFN)
"RTN","VAFCOTFU",73,0)
 S CMOR=$$LKUP^XUAF4(CMOR) ; **520 REMOVED +
"RTN","VAFCOTFU",74,0)
 ;check to see if CMOR exist if not add it
"RTN","VAFCOTFU",75,0)
 I +$G(CMOR)>0 D:'$D(^DGCN(391.91,"APAT",PDFN,CMOR)) FILENEW^VAFCTFU(PDFN,CMOR)
"RTN","VAFCOTFU",76,0)
 ;create the entry in the pivot to broadcast the MFU.
"RTN","VAFCOTFU",77,0)
 ; Note: we will not broadcast to the MFU if the TFL record
"RTN","VAFCOTFU",78,0)
 ; has an event reason. See comments in FILEDIT. *261 gjc@120199
"RTN","VAFCOTFU",79,0)
 I $G(TICN)'=1,$P($$SEND^VAFHUTL,"^",2)>0 D SETSND(PDFN)
"RTN","VAFCOTFU",80,0)
FILEQ Q
"RTN","VAFCOTFU",81,0)
 ;
"RTN","VAFCOTFU",82,0)
FILENEW(PDFN,FAC,PDLT,EVNTR,VAFCSLT,ERROR,IPP) ;
"RTN","VAFCOTFU",83,0)
 N DGSENFLG ;**240 added y
"RTN","VAFCOTFU",84,0)
 K DD,DO,DIC,DA,RESULT
"RTN","VAFCOTFU",85,0)
 S DGSENFLG=""
"RTN","VAFCOTFU",86,0)
 N FDA,FDAIEN,ERR S ERR=""
"RTN","VAFCOTFU",87,0)
 I $G(EVNTR)'="" D CHK^DIE(391.91,.07,"",EVNTR,.RESULT) I +RESULT>0 S EVNTR=RESULT
"RTN","VAFCOTFU",88,0)
 S FDA(1,391.91,"+1,",.01)=PDFN
"RTN","VAFCOTFU",89,0)
 S FDA(1,391.91,"+1,",.02)=FAC
"RTN","VAFCOTFU",90,0)
 S FDA(1,391.91,"+1,",.03)=$G(PDLT)
"RTN","VAFCOTFU",91,0)
 S FDA(1,391.91,"+1,",.07)=$G(EVNTR)
"RTN","VAFCOTFU",92,0)
 S FDA(1,391.91,"+1,",.08)=$G(IPP)
"RTN","VAFCOTFU",93,0)
 L +^DGCN(391.91,0):30
"RTN","VAFCOTFU",94,0)
 I '$D(^DGCN(391.91,"APAT",PDFN,FAC)) D UPDATE^DIE("","FDA(1)","FDAIEN","ERR") I $D(ERR("DIERR",1)) S ERROR(STA)="Add of "_STA_" Failed at "_$P($$SITE^VASITE,"^",3)_" due to "_$G(ERR("DIERR",1,"TEXT",1))
"RTN","VAFCOTFU",95,0)
 ;removed code to add a subscription
"RTN","VAFCOTFU",96,0)
 L -^DGCN(391.91,0)
"RTN","VAFCOTFU",97,0)
 K DIC,DD,DO,DA
"RTN","VAFCOTFU",98,0)
 Q
"RTN","VAFCOTFU",99,0)
 ;
"RTN","VAFCOTFU",100,0)
SETSND(PDFN) ;sets the pivot file entry to send MFU
"RTN","VAFCOTFU",101,0)
 ;
"RTN","VAFCOTFU",102,0)
 N ANS,X
"RTN","VAFCOTFU",103,0)
 S X="MPIF001" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCOTFU",104,0)
 ; check if other facilities other than CMOR in TF list
"RTN","VAFCOTFU",105,0)
 N SIT,CMOR,STOP
"RTN","VAFCOTFU",106,0)
 S CMOR=$$GETVCCI^MPIF001(PDFN)
"RTN","VAFCOTFU",107,0)
 S CMOR=$$LKUP^XUAF4(CMOR) ; **520 REMOVED +
"RTN","VAFCOTFU",108,0)
 I CMOR=$P($$SITE^VASITE,"^") D
"RTN","VAFCOTFU",109,0)
 .S SIT=0
"RTN","VAFCOTFU",110,0)
 .S SIT=$O(^DGCN(391.91,"APAT",PDFN,SIT))
"RTN","VAFCOTFU",111,0)
 .I SIT=CMOR S SIT=$O(^DGCN(391.91,"APAT",PDFN,SIT)) I SIT="" S STOP=""
"RTN","VAFCOTFU",112,0)
 I $D(STOP) QUIT
"RTN","VAFCOTFU",113,0)
 S ANS=$$PIVNW^VAFHPIVT(PDFN,DT,5,PDFN_";DPT(")
"RTN","VAFCOTFU",114,0)
 I 'ANS QUIT
"RTN","VAFCOTFU",115,0)
 D XMITFLAG^VAFCDD01(0,+ANS,0)
"RTN","VAFCOTFU",116,0)
SETSNDQ Q
"RTN","VAFCOTFU",117,0)
 ;
"RTN","VAFCOTFU",118,0)
FILEDIT(TFIEN,PDLT,PDFN,FAC,EVNTR,VAFCSLT,ERROR,IPP) ;
"RTN","VAFCOTFU",119,0)
 N DGSENFLG,FDA,FDAIEN,ERR,RESULT S DGSENFLG="",ERR=""
"RTN","VAFCOTFU",120,0)
 I $G(PDLT)'=""!($G(IPP)'="") D
"RTN","VAFCOTFU",121,0)
 .S TFIEN(0)=$G(^DGCN(391.91,TFIEN,0))
"RTN","VAFCOTFU",122,0)
 .I $G(EVNTR)'="" D CHK^DIE(391.91,.07,"",EVNTR,.RESULT) I +RESULT>0 S EVNTR=RESULT
"RTN","VAFCOTFU",123,0)
 .I $G(PDLT)'="" S FDA(1,391.91,+TFIEN_",",.03)=$G(PDLT)
"RTN","VAFCOTFU",124,0)
 .S FDA(1,391.91,+TFIEN_",",.07)=$G(EVNTR)
"RTN","VAFCOTFU",125,0)
 .I $G(IPP)'="" S FDA(1,391.91,+TFIEN_",",.08)=$G(IPP)
"RTN","VAFCOTFU",126,0)
 .D FILE^DIE("K","FDA(1)","ERR") I VAFCSLT I $D(ERR("DIERR",1)) S ERROR(STA)="Edit of "_STA_" Failed at "_$P($$SITE^VASITE,"^",3)_" due to "_$G(ERR("DIERR",1,"TEXT",1))
"RTN","VAFCOTFU",127,0)
 ;remove code to add a subscription
"RTN","VAFCOTFU",128,0)
 Q
"RTN","VAFCOTFU",129,0)
 ;
"RTN","VAFCOTFU",130,0)
DELETETF(PAT,INST) ;deletion entry point
"RTN","VAFCOTFU",131,0)
 ;This entry point is used to delete a single Treating Facility from
"RTN","VAFCOTFU",132,0)
 ;the Treating Facility list.
"RTN","VAFCOTFU",133,0)
 ;INPUT  PAT - the ICN of the patient.
"RTN","VAFCOTFU",134,0)
 ;       INST - the IEN of the institution to be deleted.
"RTN","VAFCOTFU",135,0)
 ;
"RTN","VAFCOTFU",136,0)
 ;OUTPUT  0 (zero) - If no errors
"RTN","VAFCOTFU",137,0)
 ;        1^error description if there was a problem
"RTN","VAFCOTFU",138,0)
 ;
"RTN","VAFCOTFU",139,0)
 N VAFCER,PDFN,TFIEN,X,VAFCSCN,LINK,VAFCLLN,IEN
"RTN","VAFCOTFU",140,0)
 S VAFCER=0
"RTN","VAFCOTFU",141,0)
 I '$G(PAT)!('$G(INST)) S VAFCER="1^Parameter missing." S ERROR(INST)="212"_"^"_$G(HL("MID"))_"^"_"Delete Failed: "_$P(VAFCER,"^") G DELTFQ
"RTN","VAFCOTFU",142,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T G FILETFQ
"RTN","VAFCOTFU",143,0)
 S PDFN=$$GETDFN^MPIF001(+PAT)
"RTN","VAFCOTFU",144,0)
 I PDFN<0 S VAFCER="1^No patient DFN." G FILETFQ
"RTN","VAFCOTFU",145,0)
 I '$$FIND1^DIC(4,"","MX","`"_INST) S VAFCER="1^Not an Institution IEN." G DELTFQ
"RTN","VAFCOTFU",146,0)
 S TFIEN=$O(^DGCN(391.91,"APAT",PDFN,INST,0))
"RTN","VAFCOTFU",147,0)
 I 'TFIEN S VAFCER="1^Could not find Treating Facility." G DELTFQ
"RTN","VAFCOTFU",148,0)
 D DELETE(TFIEN)
"RTN","VAFCOTFU",149,0)
 S TFIEN=$O(^DGCN(391.91,"APAT",PDFN,INST,0))
"RTN","VAFCOTFU",150,0)
 I TFIEN S VAFCER="1^DIK failed to delete entry" G DELTFQ
"RTN","VAFCOTFU",151,0)
 ;terminate the subscription if there is one
"RTN","VAFCOTFU",152,0)
 S VAFCSCN=+$P($$MPINODE^MPIFAPI(PDFN),"^",5) I +$G(VAFCSCN)>0 D
"RTN","VAFCOTFU",153,0)
 .;get logical link
"RTN","VAFCOTFU",154,0)
 . D LINK^HLUTIL3(INST,.LINK) S VAFCLLN=$O(LINK(0)) I +$G(VAFCLLN)>0 S VAFCLLN=LINK(VAFCLLN) D UPD^HLSUB(VAFCSCN,VAFCLLN,0,,$$NOW^XLFDT,,.HLER)
"RTN","VAFCOTFU",155,0)
 D RETPDR^VAFCEHU2(PDFN,INST) ;**474 retire pdr when deleting tf
"RTN","VAFCOTFU",156,0)
DELTFQ Q VAFCER
"RTN","VAFCOTFU",157,0)
 ;
"RTN","VAFCOTFU",158,0)
DELETE(TFIEN) ;the actual deletion code
"RTN","VAFCOTFU",159,0)
 ;
"RTN","VAFCOTFU",160,0)
 K DIK,DA
"RTN","VAFCOTFU",161,0)
 S DIK="^DGCN(391.91,"
"RTN","VAFCOTFU",162,0)
 S DA=TFIEN
"RTN","VAFCOTFU",163,0)
 D ^DIK K DIK,DA
"RTN","VAFCOTFU",164,0)
 Q
"RTN","VAFCOTFU",165,0)
 ;
"RTN","VAFCOTFU",166,0)
DELALLTF(PAT) ;Entry point to delete all Treating Facilities for a single
"RTN","VAFCOTFU",167,0)
 ;patient.
"RTN","VAFCOTFU",168,0)
 ;INPUT  PAT - The patient's ICN
"RTN","VAFCOTFU",169,0)
 ;OUTPUT 0 (zero) - If no errors
"RTN","VAFCOTFU",170,0)
 ;       1^error description if an error
"RTN","VAFCOTFU",171,0)
 ;
"RTN","VAFCOTFU",172,0)
 N VAFCER,PDFN,LP,TFIEN,X
"RTN","VAFCOTFU",173,0)
 S VAFCER=0
"RTN","VAFCOTFU",174,0)
 I '$G(PAT) Q "1^Parameter missing."
"RTN","VAFCOTFU",175,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T Q 0
"RTN","VAFCOTFU",176,0)
 S PDFN=$$GETDFN^MPIF001(PAT)
"RTN","VAFCOTFU",177,0)
 I PDFN<0 Q "1^No patient DFN."
"RTN","VAFCOTFU",178,0)
 F LP=0:0 S LP=$O(^DGCN(391.91,"APAT",PDFN,LP)) Q:LP'>0  D
"RTN","VAFCOTFU",179,0)
 . S TFIEN=0
"RTN","VAFCOTFU",180,0)
 . F  S TFIEN=$O(^DGCN(391.91,"APAT",PDFN,LP,TFIEN)) Q:TFIEN'>0  D DELETE(TFIEN)
"RTN","VAFCOTFU",181,0)
 ;
"RTN","VAFCOTFU",182,0)
 Q VAFCER
"RTN","VAFCOTFU",183,0)
 ;
"RTN","VAFCTFIN")
0^2^B33860243^B24080050
"RTN","VAFCTFIN",1,0)
VAFCTFIN ;BIR/DR-TREATING FACILTIY MFU PROCESSING ROUTINE ; 1/21/10 4:26pm
"RTN","VAFCTFIN",2,0)
 ;;5.3;Registration;**428,474,520,639,707,800,821**;Aug 13, 1993;Build 7
"RTN","VAFCTFIN",3,0)
 ;Reference to EXC, START, and STOP^RGHLLOG supported by IA #2796
"RTN","VAFCTFIN",4,0)
 ;
"RTN","VAFCTFIN",5,0)
IN ;This entry point is used to process the Treating Facility Master File Update Message.
"RTN","VAFCTFIN",6,0)
 ;It is called by the VAFC MFN-M05 CLIENT processing routine when a MFN
"RTN","VAFCTFIN",7,0)
 ;message is received.
"RTN","VAFCTFIN",8,0)
 ;There are no inputs or outputs
"RTN","VAFCTFIN",9,0)
 ;
"RTN","VAFCTFIN",10,0)
 ;Initial check whether incoming MFN message is old format or new. If it is old format, go to old routine (VAFCOFIN) to process.  **821
"RTN","VAFCTFIN",11,0)
 I HL("MTN")="MFK" D RSP Q
"RTN","VAFCTFIN",12,0)
 N VAFC,SG,MSG
"RTN","VAFCTFIN",13,0)
 F VAFCI=1:1 X HLNEXT Q:HLQUIT'>0  I $E(HLNODE,1,3)="MFE" S MSG=HLNODE
"RTN","VAFCTFIN",14,0)
 I $P($G(MSG),"^",3)'["-" D IN^VAFCOFIN Q
"RTN","VAFCTFIN",15,0)
 K VAFCI,HLNODE,SG,HLQUIT,HLDONE,MSG
"RTN","VAFCTFIN",16,0)
 S HLQUIT=0
"RTN","VAFCTFIN",17,0)
 ;
"RTN","VAFCTFIN",18,0)
 N VAFC,STATN,VAFCI,MSG,SG,VAFCARR,PDFN,INST,MFUPT,PDLT,TFIEN
"RTN","VAFCTFIN",19,0)
 N ICN,MFI,MFE,MFA,HLCOMP,CNT,X,VAFCERR,VAFCX
"RTN","VAFCTFIN",20,0)
 ;quit if Master Patient Index (MPI) is not installed
"RTN","VAFCTFIN",21,0)
 S X="MPIF001" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFIN",22,0)
 S X="MPIFQ0" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFIN",23,0)
 S X="RGRSBUL1" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFIN",24,0)
 S X="RGRSBULL" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFIN",25,0)
INIT ;Process in the Treating Facility MFN msg
"RTN","VAFCTFIN",26,0)
 F VAFCI=1:1 X HLNEXT Q:HLQUIT'>0  S (MSG,VAFC(VAFCI))=HLNODE,SG=$E(HLNODE,1,3) D:SG?2A1(1A,1N) PICK
"RTN","VAFCTFIN",27,0)
 ;reconcil the inbound TF list from the MPI to the local TF list
"RTN","VAFCTFIN",28,0)
 D RECONCIL
"RTN","VAFCTFIN",29,0)
 ;create response message
"RTN","VAFCTFIN",30,0)
 S CNT=1
"RTN","VAFCTFIN",31,0)
 S HLA("HLA",1)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_HL("FS") S CNT=CNT+1
"RTN","VAFCTFIN",32,0)
 S HLA("HLA",CNT)=MFI S CNT=CNT+1
"RTN","VAFCTFIN",33,0)
 ;S VAFCX=0 F  S VAFCX=$O(MFE(VAFCX)) Q:'VAFCX  S HLA("HLA",CNT)=MFE(VAFCX),CNT=CNT+1,HLA("HLA",CNT)=MFA(VAFCX),CNT=CNT+1
"RTN","VAFCTFIN",34,0)
 S VAFCX=0 F  S VAFCX=$O(MFE(VAFCX)) Q:'VAFCX  D
"RTN","VAFCTFIN",35,0)
 . S VAFCN=0 F  S VAFCN=$O(MFE(VAFCX,VAFCN)) Q:'VAFCN  D
"RTN","VAFCTFIN",36,0)
 .. S HLA("HLA",CNT)=MFE(VAFCX,VAFCN),CNT=CNT+1,HLA("HLA",CNT)=MFA(VAFCX,VAFCN),CNT=CNT+1
"RTN","VAFCTFIN",37,0)
 ;generate an application level ack (MFK) identifying the status of the adds/edits/deletes of TF's passed in
"RTN","VAFCTFIN",38,0)
 D ROUTE
"RTN","VAFCTFIN",39,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.VAFCERR,"",.HLP)
"RTN","VAFCTFIN",40,0)
 Q
"RTN","VAFCTFIN",41,0)
PICK ;check routine for segment entry point
"RTN","VAFCTFIN",42,0)
 I $T(@SG)]"" D @SG
"RTN","VAFCTFIN",43,0)
 I $T(@SG)="" Q
"RTN","VAFCTFIN",44,0)
 Q
"RTN","VAFCTFIN",45,0)
MSH ;;MSH
"RTN","VAFCTFIN",46,0)
 ;process the MSH segment
"RTN","VAFCTFIN",47,0)
 S (HLFS,HL("FS"))=$E(MSG,4),(HLECH,HL("ECH"))=$E(MSG,5,8)
"RTN","VAFCTFIN",48,0)
 S HLCOMP=$E(HL("ECH"),1)
"RTN","VAFCTFIN",49,0)
 S VAFCARR("SENDING SITE")=$P(MSG,HL("FS"),4)
"RTN","VAFCTFIN",50,0)
 Q
"RTN","VAFCTFIN",51,0)
EVN ;;EVN
"RTN","VAFCTFIN",52,0)
 ;process the EVN segment
"RTN","VAFCTFIN",53,0)
 S STATN=+$$SITE^VASITE()_"^"_$$FMDATE^HLFNC($P(MSG,HL("FS"),3))
"RTN","VAFCTFIN",54,0)
 Q
"RTN","VAFCTFIN",55,0)
PID ;;PID
"RTN","VAFCTFIN",56,0)
 ;process the PID segment
"RTN","VAFCTFIN",57,0)
 S PDFN=+$P(MSG,HL("FS"),4)
"RTN","VAFCTFIN",58,0)
 Q
"RTN","VAFCTFIN",59,0)
MFI ;;MFI
"RTN","VAFCTFIN",60,0)
 ;process the MFI segment
"RTN","VAFCTFIN",61,0)
 S MFI=MSG
"RTN","VAFCTFIN",62,0)
 S MFUPT=$P(MSG,HL("FS"),4)
"RTN","VAFCTFIN",63,0)
 S VAFCARR("CMOR")=$P($P(MSG,HL("FS"),8),$E(HL("ECH"),1))
"RTN","VAFCTFIN",64,0)
 Q
"RTN","VAFCTFIN",65,0)
MFE ;;MFE
"RTN","VAFCTFIN",66,0)
 ;process the MFE segment
"RTN","VAFCTFIN",67,0)
 N HLCOMP,NXTSGMT,TYPE,REP,MFE4,DFNATST,IDENSTAT
"RTN","VAFCTFIN",68,0)
 S HLCOMP=$E(HL("ECH"),1),REP=$E(HL("ECH"),2)
"RTN","VAFCTFIN",69,0)
 S PDLT=$$FMDATE^HLFNC($P(MSG,HL("FS"),4))
"RTN","VAFCTFIN",70,0)
 ;S ICN=$P($P(MSG,HL("FS"),5),HLCOMP,4)
"RTN","VAFCTFIN",71,0)
 ;S INST=$P($P(MSG,HL("FS"),5),HLCOMP)
"RTN","VAFCTFIN",72,0)
 S TYPE=$P(MSG,HL("FS"),2)
"RTN","VAFCTFIN",73,0)
 S MFE4=$P(MSG,HL("FS"),5) ;SEQ 4
"RTN","VAFCTFIN",74,0)
 S ICN=$P($P(MFE4,REP),HLCOMP)
"RTN","VAFCTFIN",75,0)
 S INST=$P($P(MSG,HL("FS"),3),"-")
"RTN","VAFCTFIN",76,0)
 S ZCNT=$P($P(MSG,HL("FS"),3),"-",2)
"RTN","VAFCTFIN",77,0)
 S DFNATST=$P($P(MFE4,REP,2),HLCOMP)
"RTN","VAFCTFIN",78,0)
 S IDENSTAT=$S(TYPE="MDC":"H",1:"A")
"RTN","VAFCTFIN",79,0)
 S MFE(INST,ZCNT)=MSG
"RTN","VAFCTFIN",80,0)
 S MFI(ICN,INST,ZCNT)=PDLT_"^^"_TYPE_"^^^^"_DFNATST_"^"_IDENSTAT
"RTN","VAFCTFIN",81,0)
 Q
"RTN","VAFCTFIN",82,0)
ZET ;;ZET
"RTN","VAFCTFIN",83,0)
 ;process Patient's Date Last Treated Event Type, ZET segment
"RTN","VAFCTFIN",84,0)
 N PDLTET,IPP
"RTN","VAFCTFIN",85,0)
 S PDLTET=$P(MSG,HL("FS"),2)
"RTN","VAFCTFIN",86,0)
 S $P(MFI(ICN,INST,ZCNT),"^",2)=PDLTET
"RTN","VAFCTFIN",87,0)
 ;DG*5.3*800 - Process In-Person Proofed
"RTN","VAFCTFIN",88,0)
 S IPP=$P(MSG,HL("FS"),3) ;In-Person Proofed
"RTN","VAFCTFIN",89,0)
 S $P(MFI(ICN,INST,ZCNT),"^",6)=IPP
"RTN","VAFCTFIN",90,0)
 Q
"RTN","VAFCTFIN",91,0)
RSP ;response process logic entry point
"RTN","VAFCTFIN",92,0)
 Q
"RTN","VAFCTFIN",93,0)
ROUTE ;routing logic entry point
"RTN","VAFCTFIN",94,0)
 N MPI
"RTN","VAFCTFIN",95,0)
 S MPI=$$MPILINK^MPIFAPI() D
"RTN","VAFCTFIN",96,0)
 .I $P($G(MPI),U)'=-1 S HLL("LINKS",1)="VAFC MFN-M05 CLIENT"_"^"_MPI
"RTN","VAFCTFIN",97,0)
 .I $P($G(MPI),U)=-1 D
"RTN","VAFCTFIN",98,0)
 .. N RGLOG D START^RGHLLOG(HLMTIEN,"","")
"RTN","VAFCTFIN",99,0)
 .. D EXC^RGHLLOG(224,"No MPI link identified in CIRN SITE PARAMETER file (#991.8)",$G(PDFN))
"RTN","VAFCTFIN",100,0)
 .. D STOP^RGHLLOG(0)
"RTN","VAFCTFIN",101,0)
 Q
"RTN","VAFCTFIN",102,0)
TEST ;
"RTN","VAFCTFIN",103,0)
 W $$REPROC^HLUTIL(39266,"D IN^VAFCTFIN")
"RTN","VAFCTFIN",104,0)
 Q
"RTN","VAFCTFIN",105,0)
RECONCIL ;
"RTN","VAFCTFIN",106,0)
 N DFN,MFIC,VAFCX,VAFCY,TFL,CNFLT,LOCCMOR,VAFCTYPE,VAFCN,IDSTAT,SID
"RTN","VAFCTFIN",107,0)
 S CNFLT=0
"RTN","VAFCTFIN",108,0)
 S DFN=$$GETDFN^MPIF001(ICN)
"RTN","VAFCTFIN",109,0)
 I DFN'>0 S CNFLT=1_"^"_$P($G(DFN),"^",2)
"RTN","VAFCTFIN",110,0)
 I MFUPT="REP" I +CNFLT=0 D TFL^VAFCTFU1(.TFL,DFN) S VAFCX=0 F  S VAFCX=$O(TFL(VAFCX)) Q:'VAFCX  D
"RTN","VAFCTFIN",111,0)
 . S MFIC($P(TFL(VAFCX),"^"))=TFL(VAFCX) I '$D(MFI(ICN,$P(TFL(VAFCX),"^"))) D DEL(ICN,$P(TFL(VAFCX),"^"))
"RTN","VAFCTFIN",112,0)
 ;VAFCX=ICN and VAFCY=INSTITUTION
"RTN","VAFCTFIN",113,0)
 S VAFCX=0 F  S VAFCX=$O(MFI(VAFCX)) Q:'VAFCX  D
"RTN","VAFCTFIN",114,0)
 . S VAFCY=0 F  S VAFCY=$O(MFI(VAFCX,VAFCY)) Q:'VAFCY  D
"RTN","VAFCTFIN",115,0)
 .. S VAFCN=0 F  S VAFCN=$O(MFI(VAFCX,VAFCY,VAFCN)) Q:'VAFCN  D
"RTN","VAFCTFIN",116,0)
 ... S VAFCTYPE=$P(MFI(VAFCX,VAFCY,VAFCN),"^",3)
"RTN","VAFCTFIN",117,0)
 ... S SID=$P(MFI(VAFCX,VAFCY,VAFCN),"^",7)
"RTN","VAFCTFIN",118,0)
 ... S IDSTAT=$P(MFI(VAFCX,VAFCY,VAFCN),"^",8)
"RTN","VAFCTFIN",119,0)
 ... I +CNFLT=1 D
"RTN","VAFCTFIN",120,0)
 ....S MFA(VAFCY,VAFCN)="MFA"_HL("FS")_VAFCTYPE_HL("FS")_VAFCY_"-"_VAFCN_HL("FS")_$$HLDATE^HLFNC($$NOW^XLFDT)_HL("FS")_"U"_HLCOMP_$S(VAFCTYPE="MDL":"Delete of ",1:"Update of ")
"RTN","VAFCTFIN",121,0)
 ....S MFA(VAFCY,VAFCN)=$G(MFA(VAFCY,VAFCN))_VAFCY_" Failed at "_$P($$SITE^VASITE,"^",3)_" due to "_$P(CNFLT,"^",2)
"RTN","VAFCTFIN",122,0)
 ... I +CNFLT=0 I VAFCTYPE="MAD"!(VAFCTYPE="MUP")!(VAFCTYPE="MDC") D ADDUPD(DFN,VAFCY,$P(MFI(VAFCX,VAFCY,VAFCN),"^"),$P(MFI(VAFCX,VAFCY,VAFCN),"^",2),$P(MFI(VAFCX,VAFCY,VAFCN),"^",6),$G(SID),$G(IDSTAT),VAFCN,VAFCTYPE)
"RTN","VAFCTFIN",123,0)
 ... I +CNFLT=0 I VAFCTYPE="MDL" D DEL(ICN,VAFCY,VAFCN)
"RTN","VAFCTFIN",124,0)
 Q
"RTN","VAFCTFIN",125,0)
ADDUPD(DFN,INST,PDLT,PDLRTET,IPP,DFNATST,IDENSTAT,ZCNT,VAFCTYPE) ;add or update TF entry
"RTN","VAFCTFIN",126,0)
 N ERROR,STA
"RTN","VAFCTFIN",127,0)
 S STA=INST
"RTN","VAFCTFIN",128,0)
 S INST=$$LKUP^XUAF4(INST)
"RTN","VAFCTFIN",129,0)
 I INST=0 S ERROR(STA)="Update of "_STA_" Failed at "_$P($$SITE^VASITE,"^",3)_" due to unknown Institution IEN "_INST_" passed into TF update."
"RTN","VAFCTFIN",130,0)
 I '$D(ERROR(STA)) D FILE^VAFCTFU(DFN,INST_"^"_$G(PDLT)_"^"_$G(PDLRTET),1,1,.ERROR,$G(IPP),DFNATST,IDENSTAT)
"RTN","VAFCTFIN",131,0)
 S MFA(STA,ZCNT)="MFA"_HL("FS")_VAFCTYPE_HL("FS")_STA_"-"_ZCNT_HL("FS")_$$HLDATE^HLFNC($$NOW^XLFDT)_HL("FS")
"RTN","VAFCTFIN",132,0)
 I '$D(ERROR(STA)) S MFA(STA,ZCNT)=MFA(STA,ZCNT)_"S"
"RTN","VAFCTFIN",133,0)
 I $D(ERROR(STA)) S MFA(STA,ZCNT)=MFA(STA,ZCNT)_"U"_HLCOMP_ERROR(STA)_HL("FS")
"RTN","VAFCTFIN",134,0)
 Q
"RTN","VAFCTFIN",135,0)
DEL(ICN,INST) ;delete a TF entry
"RTN","VAFCTFIN",136,0)
 N ERROR,STA
"RTN","VAFCTFIN",137,0)
 S STA=INST
"RTN","VAFCTFIN",138,0)
 S INST=$$LKUP^XUAF4(INST)
"RTN","VAFCTFIN",139,0)
 S ERROR=$$DELETETF^VAFCTFU(ICN,INST)
"RTN","VAFCTFIN",140,0)
 ;**821 - No need to send MFA for entries that are deleted locally
"RTN","VAFCTFIN",141,0)
 ;S MFA(STA,ZCNT)="MFA"_HL("FS")_"MDL"_HL("FS")_STA_"-"_ZCNT_HL("FS")_$$HLDATE^HLFNC($$NOW^XLFDT)_HL("FS")
"RTN","VAFCTFIN",142,0)
 ;I +ERROR'=1 S MFA(STA,ZCNT)=MFA(STA,ZCNT)_"S"
"RTN","VAFCTFIN",143,0)
 ;I +ERROR=1 S MFA(STA,ZCNT)=MFA(STA,ZCNT)_"U"_HLCOMP_"Delete Failed: "_$P(ERROR,"^",2)
"RTN","VAFCTFIN",144,0)
 Q
"RTN","VAFCTFU")
0^1^B52095428^B43187604
"RTN","VAFCTFU",1,0)
VAFCTFU ;ALB/JLU-UTILITIES FOR THE TREATING FACILITY FILE 391.91 ; 1/15/10 5:00pm
"RTN","VAFCTFU",2,0)
 ;;5.3;Registration;**149,240,261,255,316,392,440,428,474,520,697,800,821**;Aug 13, 1993;Build 7
"RTN","VAFCTFU",3,0)
 ;
"RTN","VAFCTFU",4,0)
 ;Reference to EXC^RGHLLOG and STOP^RGHLLOG supported by IA #2796
"RTN","VAFCTFU",5,0)
 ;Reference to $$UPDATE^ MPIFAPI supported by IA #2706
"RTN","VAFCTFU",6,0)
 ;
"RTN","VAFCTFU",7,0)
 ;CHKSUB & GETSCN line tags removed, patch DG*5.3*697
"RTN","VAFCTFU",8,0)
 ;Subscriptions are no longer used and errors are being
"RTN","VAFCTFU",9,0)
 ;generated when attempting to add a subscription.
"RTN","VAFCTFU",10,0)
 ;
"RTN","VAFCTFU",11,0)
FILETF(PAT,INST) ;programmer entry point.
"RTN","VAFCTFU",12,0)
 ;INPUT   PAT - This is the patient's ICN
"RTN","VAFCTFU",13,0)
 ;       INST - This is the IEN of the institution or Treating Facility
"RTN","VAFCTFU",14,0)
 ;it also contains the date of treatment in FM format.  It is to be
"RTN","VAFCTFU",15,0)
 ;stored in an array structure to allow for multiple treating
"RTN","VAFCTFU",16,0)
 ;facilities.
"RTN","VAFCTFU",17,0)
 ;  EX.   X(1)=500^2960101
"RTN","VAFCTFU",18,0)
 ;        x(2)=425^2960202
"RTN","VAFCTFU",19,0)
 ;
"RTN","VAFCTFU",20,0)
 ;OUTPUT  0 (ZERO) If no errors
"RTN","VAFCTFU",21,0)
 ;        1^error description if there was an error.
"RTN","VAFCTFU",22,0)
 ;
"RTN","VAFCTFU",23,0)
 N PDFN,LP,VAFCER,X
"RTN","VAFCTFU",24,0)
 S VAFCER=0
"RTN","VAFCTFU",25,0)
 I '$G(PAT)!('$D(INST)) S VAFCER="1^Parameter missing." G FILETFQ
"RTN","VAFCTFU",26,0)
 I $D(@INST)<10 S VAFCER="1^Institution array not populated." G FILETFQ
"RTN","VAFCTFU",27,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T G FILETFQ
"RTN","VAFCTFU",28,0)
 S PDFN=$$GETDFN^MPIF001(PAT)
"RTN","VAFCTFU",29,0)
 I PDFN<0 S VAFCER="1^No patient DFN." G FILETFQ
"RTN","VAFCTFU",30,0)
 N FSTRG
"RTN","VAFCTFU",31,0)
 F LP=0:0 S LP=$O(@INST@(LP)) Q:'LP  D FILE(PDFN,@INST@(LP))
"RTN","VAFCTFU",32,0)
 ;
"RTN","VAFCTFU",33,0)
FILETFQ Q VAFCER
"RTN","VAFCTFU",34,0)
 ;
"RTN","VAFCTFU",35,0)
 ; both the SET & QUERYTF subroutines have been moved to VAFCTFU1 as
"RTN","VAFCTFU",36,0)
 ; the result of DG*5.3*261  *261 gjc@120899
"RTN","VAFCTFU",37,0)
 ;
"RTN","VAFCTFU",38,0)
FILE(PDFN,FSTRG,TICN,VAFCSLT,ERROR,IPP,SOURCEID,IDENSTAT) ;this module files the individual entry
"RTN","VAFCTFU",39,0)
 ;PDFN is the patient's DFN
"RTN","VAFCTFU",40,0)
 ;FSTRG = institution or treating facility^Date of treatment^Event reason
"RTN","VAFCTFU",41,0)
 ;TICN - if 1 suppress add entries to ADT HL7 PIVOT (#391.71) file
"RTN","VAFCTFU",42,0)
 ;VAFCSLT - (optional) if 1 suppress exception logging and return error in the ERROR array
"RTN","VAFCTFU",43,0)
 ;ERROR - (optional) 
"RTN","VAFCTFU",44,0)
 ;Ex  500^2960202^A1
"RTN","VAFCTFU",45,0)
 ;
"RTN","VAFCTFU",46,0)
 N X,Y
"RTN","VAFCTFU",47,0)
 I $G(VAFCSLT)="" S VAFCSLT=0
"RTN","VAFCTFU",48,0)
 S X="MPIF001" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFU",49,0)
 S X="MPIFQ0" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFU",50,0)
 N TFIEN,PDLT,FAC,EVNTR,VAFCER,CMOR,ICN,STA,ECNT
"RTN","VAFCTFU",51,0)
 S ECNT=1
"RTN","VAFCTFU",52,0)
 S FAC=$P(FSTRG,U,1),PDLT=$P(FSTRG,U,2),EVNTR=$P(FSTRG,U,3)
"RTN","VAFCTFU",53,0)
 S STA=$$STA^XUAF4(FAC)
"RTN","VAFCTFU",54,0)
 ;
"RTN","VAFCTFU",55,0)
 I '$$FIND1^DIC(4,"","MX","`"_FAC) D  Q
"RTN","VAFCTFU",56,0)
 . I 'VAFCSLT D EXC^RGHLLOG(212,"Msg#"_$G(HL("MID"))_" unknown Institution IEN "_FAC_" passed into TF update.",PDFN) D STOP^RGHLLOG(1) Q
"RTN","VAFCTFU",57,0)
 . I VAFCSLT S ERROR(STA)="Update of "_STA_" Failed at "_$P($$SITE^VASITE,"^",3)_" due to unknown Institution IEN "_FAC_" passed into TF update."
"RTN","VAFCTFU",58,0)
 I PDLT'="" K %DT S %DT="T" S X=PDLT D ^%DT K %DT I Y<0 S VAFCER="1^Not a FM date." D  Q
"RTN","VAFCTFU",59,0)
 .I 'VAFCSLT D EXC^RGHLLOG(212,"TF updated in msg#"_$G(HL("MID"))_" for Institution IEN "_FAC_" but with invalid date "_PDLT_" for DFN "_PDFN,PDFN)
"RTN","VAFCTFU",60,0)
 .I VAFCSLT S ERROR(STA)="Update of "_STA_" Failed at "_$P($$SITE^VASITE,"^",3)_" due to invalid date "_PDLT_" for DFN "_PDFN
"RTN","VAFCTFU",61,0)
 ;removed code for adding local ICN's
"RTN","VAFCTFU",62,0)
 S ICN=+$$MPINODE^MPIFAPI(PDFN)
"RTN","VAFCTFU",63,0)
 S TFIEN=$O(^DGCN(391.91,"APAT",PDFN,FAC,0)) D
"RTN","VAFCTFU",64,0)
 .;TFIEN is used in other places so quit after adding new entry
"RTN","VAFCTFU",65,0)
 .I 'TFIEN D FILENEW(PDFN,FAC,PDLT,EVNTR,VAFCSLT,.ERROR,$G(IPP),$G(SOURCEID),$G(IDENSTAT)) Q
"RTN","VAFCTFU",66,0)
 .I TFIEN D FILEDIT(TFIEN,PDLT,PDFN,FAC,EVNTR,VAFCSLT,.ERROR,$G(IPP),$G(SOURCEID),$G(IDENSTAT))
"RTN","VAFCTFU",67,0)
 ;look to see if CMOR is in TF list if not add
"RTN","VAFCTFU",68,0)
 S CMOR=$$GETVCCI^MPIF001(PDFN)
"RTN","VAFCTFU",69,0)
 S CMOR=$$LKUP^XUAF4(CMOR) ; **520 REMOVED +
"RTN","VAFCTFU",70,0)
 ;check to see if CMOR exist if not add it
"RTN","VAFCTFU",71,0)
 I +$G(CMOR)>0 D:'$D(^DGCN(391.91,"APAT",PDFN,CMOR)) FILENEW^VAFCTFU(PDFN,CMOR)
"RTN","VAFCTFU",72,0)
 ;create the entry in the pivot to broadcast the MFU.
"RTN","VAFCTFU",73,0)
 ; Note: we will not broadcast to the MFU if the TFL record
"RTN","VAFCTFU",74,0)
 ; has an event reason. See comments in FILEDIT. *261 gjc@120199
"RTN","VAFCTFU",75,0)
 I $G(TICN)'=1,$P($$SEND^VAFHUTL,"^",2)>0 D SETSND(PDFN)
"RTN","VAFCTFU",76,0)
FILEQ Q
"RTN","VAFCTFU",77,0)
 ;
"RTN","VAFCTFU",78,0)
FILENEW(PDFN,FAC,PDLT,EVNTR,VAFCSLT,ERROR,IPP,SOURCEID,IDENSTAT) ;
"RTN","VAFCTFU",79,0)
 N DGSENFLG ;**240 added y
"RTN","VAFCTFU",80,0)
 K DD,DO,DIC,DA,RESULT
"RTN","VAFCTFU",81,0)
 S DGSENFLG=""
"RTN","VAFCTFU",82,0)
 N FDA,FDAIEN,ERR S ERR=""
"RTN","VAFCTFU",83,0)
 I $G(EVNTR)'="" D CHK^DIE(391.91,.07,"",EVNTR,.RESULT) I +RESULT>0 S EVNTR=RESULT
"RTN","VAFCTFU",84,0)
 S FDA(1,391.91,"+1,",.01)=PDFN
"RTN","VAFCTFU",85,0)
 S FDA(1,391.91,"+1,",.02)=FAC
"RTN","VAFCTFU",86,0)
 S FDA(1,391.91,"+1,",.03)=$G(PDLT)
"RTN","VAFCTFU",87,0)
 S FDA(1,391.91,"+1,",.07)=$G(EVNTR)
"RTN","VAFCTFU",88,0)
 S FDA(1,391.91,"+1,",.08)=$G(IPP)
"RTN","VAFCTFU",89,0)
 L +^DGCN(391.91,0):30
"RTN","VAFCTFU",90,0)
 I '$D(^DGCN(391.91,"APAT",PDFN,FAC)) D UPDATE^DIE("","FDA(1)","FDAIEN","ERR") I $D(ERR("DIERR",1)) S ERROR(STA)="Add of "_STA_" Failed at "_$P($$SITE^VASITE,"^",3)_" due to "_$G(ERR("DIERR",1,"TEXT",1))
"RTN","VAFCTFU",91,0)
 I $G(SOURCEID)'="",$G(FDAIEN(1))'="" D UPDSID(PDFN,FAC,SOURCEID,IDENSTAT,FDAIEN(1))  ;Update SourceID multiple
"RTN","VAFCTFU",92,0)
 ;removed code to add a subscription
"RTN","VAFCTFU",93,0)
 L -^DGCN(391.91,0)
"RTN","VAFCTFU",94,0)
 K DIC,DD,DO,DA
"RTN","VAFCTFU",95,0)
 Q
"RTN","VAFCTFU",96,0)
 ;
"RTN","VAFCTFU",97,0)
UPDSID(PDFN,FAC,SID,IDSTAT,TFIEN) ;Update sourceid multiple
"RTN","VAFCTFU",98,0)
 N FDA,DGENDA,FILE,IENS
"RTN","VAFCTFU",99,0)
 S FILE=391.9101
"RTN","VAFCTFU",100,0)
 I $D(^DGCN(391.91,TFIEN,1,"B",SID)) D  Q  ;Update existing sub record
"RTN","VAFCTFU",101,0)
 . S DGENDA=$O(^DGCN(391.91,TFIEN,1,"B",SID,0))
"RTN","VAFCTFU",102,0)
 . S DGENDA(1)=TFIEN,IENS=$$IENS^DILF(.DGENDA)
"RTN","VAFCTFU",103,0)
 . S FDA(FILE,IENS,.01)=SID,FDA(FILE,IENS,1)=IDSTAT
"RTN","VAFCTFU",104,0)
 . D FILE^DIE("K","FDA","ERRORS(1)")
"RTN","VAFCTFU",105,0)
 ;add new sub record
"RTN","VAFCTFU",106,0)
 S DGENDA="+1",DGENDA(1)=TFIEN,IENS=$$IENS^DILF(.DGENDA)
"RTN","VAFCTFU",107,0)
 S FDA(FILE,IENS,.01)=SID,FDA(FILE,IENS,1)=IDSTAT
"RTN","VAFCTFU",108,0)
 D UPDATE^DIE("","FDA","IENA","ERRORS(1)")
"RTN","VAFCTFU",109,0)
 Q
"RTN","VAFCTFU",110,0)
SETSND(PDFN) ;sets the pivot file entry to send MFU
"RTN","VAFCTFU",111,0)
 ;
"RTN","VAFCTFU",112,0)
 N ANS,X
"RTN","VAFCTFU",113,0)
 S X="MPIF001" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFU",114,0)
 ; check if other facilities other than CMOR in TF list
"RTN","VAFCTFU",115,0)
 N SIT,CMOR,STOP
"RTN","VAFCTFU",116,0)
 S CMOR=$$GETVCCI^MPIF001(PDFN)
"RTN","VAFCTFU",117,0)
 S CMOR=$$LKUP^XUAF4(CMOR) ; **520 REMOVED +
"RTN","VAFCTFU",118,0)
 I CMOR=$P($$SITE^VASITE,"^") D
"RTN","VAFCTFU",119,0)
 .S SIT=0
"RTN","VAFCTFU",120,0)
 .S SIT=$O(^DGCN(391.91,"APAT",PDFN,SIT))
"RTN","VAFCTFU",121,0)
 .I SIT=CMOR S SIT=$O(^DGCN(391.91,"APAT",PDFN,SIT)) I SIT="" S STOP=""
"RTN","VAFCTFU",122,0)
 I $D(STOP) QUIT
"RTN","VAFCTFU",123,0)
 S ANS=$$PIVNW^VAFHPIVT(PDFN,DT,5,PDFN_";DPT(")
"RTN","VAFCTFU",124,0)
 I 'ANS QUIT
"RTN","VAFCTFU",125,0)
 D XMITFLAG^VAFCDD01(0,+ANS,0)
"RTN","VAFCTFU",126,0)
SETSNDQ Q
"RTN","VAFCTFU",127,0)
 ;
"RTN","VAFCTFU",128,0)
FILEDIT(TFIEN,PDLT,PDFN,FAC,EVNTR,VAFCSLT,ERROR,IPP,SOURCEID,IDENSTAT) ;
"RTN","VAFCTFU",129,0)
 N DGSENFLG,FDA,FDAIEN,ERR,RESULT S DGSENFLG="",ERR=""
"RTN","VAFCTFU",130,0)
 I $G(PDLT)'=""!($G(IPP)'="") D
"RTN","VAFCTFU",131,0)
 .S TFIEN(0)=$G(^DGCN(391.91,TFIEN,0))
"RTN","VAFCTFU",132,0)
 .I $G(EVNTR)'="" D CHK^DIE(391.91,.07,"",EVNTR,.RESULT) I +RESULT>0 S EVNTR=RESULT
"RTN","VAFCTFU",133,0)
 .I $G(PDLT)'="" S FDA(1,391.91,+TFIEN_",",.03)=$G(PDLT)
"RTN","VAFCTFU",134,0)
 .S FDA(1,391.91,+TFIEN_",",.07)=$G(EVNTR)
"RTN","VAFCTFU",135,0)
 .I $G(IPP)'="" S FDA(1,391.91,+TFIEN_",",.08)=$G(IPP)
"RTN","VAFCTFU",136,0)
 .D FILE^DIE("K","FDA(1)","ERR") I VAFCSLT I $D(ERR("DIERR",1)) S ERROR(STA)="Edit of "_STA_" Failed at "_$P($$SITE^VASITE,"^",3)_" due to "_$G(ERR("DIERR",1,"TEXT",1))
"RTN","VAFCTFU",137,0)
 I $G(SOURCEID)'="" D UPDSID(PDFN,FAC,SOURCEID,IDENSTAT,TFIEN)
"RTN","VAFCTFU",138,0)
 ;remove code to add a subscription
"RTN","VAFCTFU",139,0)
 Q
"RTN","VAFCTFU",140,0)
 ;
"RTN","VAFCTFU",141,0)
DELETETF(PAT,INST) ;deletion entry point
"RTN","VAFCTFU",142,0)
 ;This entry point is used to delete a single Treating Facility from
"RTN","VAFCTFU",143,0)
 ;the Treating Facility list.
"RTN","VAFCTFU",144,0)
 ;INPUT  PAT - the ICN of the patient.
"RTN","VAFCTFU",145,0)
 ;       INST - the IEN of the institution to be deleted.
"RTN","VAFCTFU",146,0)
 ;
"RTN","VAFCTFU",147,0)
 ;OUTPUT  0 (zero) - If no errors
"RTN","VAFCTFU",148,0)
 ;        1^error description if there was a problem
"RTN","VAFCTFU",149,0)
 ;
"RTN","VAFCTFU",150,0)
 N VAFCER,PDFN,TFIEN,X,VAFCSCN,LINK,VAFCLLN,IEN
"RTN","VAFCTFU",151,0)
 S VAFCER=0
"RTN","VAFCTFU",152,0)
 I '$G(PAT)!('$G(INST)) S VAFCER="1^Parameter missing." S ERROR(INST)="212"_"^"_$G(HL("MID"))_"^"_"Delete Failed: "_$P(VAFCER,"^") G DELTFQ
"RTN","VAFCTFU",153,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T G FILETFQ
"RTN","VAFCTFU",154,0)
 S PDFN=$$GETDFN^MPIF001(+PAT)
"RTN","VAFCTFU",155,0)
 I PDFN<0 S VAFCER="1^No patient DFN." G FILETFQ
"RTN","VAFCTFU",156,0)
 I '$$FIND1^DIC(4,"","MX","`"_INST) S VAFCER="1^Not an Institution IEN." G DELTFQ
"RTN","VAFCTFU",157,0)
 S TFIEN=$O(^DGCN(391.91,"APAT",PDFN,INST,0))
"RTN","VAFCTFU",158,0)
 I 'TFIEN S VAFCER="1^Could not find Treating Facility." G DELTFQ
"RTN","VAFCTFU",159,0)
 D DELETE(TFIEN)
"RTN","VAFCTFU",160,0)
 S TFIEN=$O(^DGCN(391.91,"APAT",PDFN,INST,0))
"RTN","VAFCTFU",161,0)
 I TFIEN S VAFCER="1^DIK failed to delete entry" G DELTFQ
"RTN","VAFCTFU",162,0)
 ;terminate the subscription if there is one
"RTN","VAFCTFU",163,0)
 S VAFCSCN=+$P($$MPINODE^MPIFAPI(PDFN),"^",5) I +$G(VAFCSCN)>0 D
"RTN","VAFCTFU",164,0)
 .;get logical link
"RTN","VAFCTFU",165,0)
 . D LINK^HLUTIL3(INST,.LINK) S VAFCLLN=$O(LINK(0)) I +$G(VAFCLLN)>0 S VAFCLLN=LINK(VAFCLLN) D UPD^HLSUB(VAFCSCN,VAFCLLN,0,,$$NOW^XLFDT,,.HLER)
"RTN","VAFCTFU",166,0)
 D RETPDR^VAFCEHU2(PDFN,INST) ;**474 retire pdr when deleting tf
"RTN","VAFCTFU",167,0)
DELTFQ Q VAFCER
"RTN","VAFCTFU",168,0)
 ;
"RTN","VAFCTFU",169,0)
DELETE(TFIEN) ;the actual deletion code
"RTN","VAFCTFU",170,0)
 ;
"RTN","VAFCTFU",171,0)
 K DIK,DA
"RTN","VAFCTFU",172,0)
 S DIK="^DGCN(391.91,"
"RTN","VAFCTFU",173,0)
 S DA=TFIEN
"RTN","VAFCTFU",174,0)
 D ^DIK K DIK,DA
"RTN","VAFCTFU",175,0)
 Q
"RTN","VAFCTFU",176,0)
 ;
"RTN","VAFCTFU",177,0)
DELALLTF(PAT) ;Entry point to delete all Treating Facilities for a single
"RTN","VAFCTFU",178,0)
 ;patient.
"RTN","VAFCTFU",179,0)
 ;INPUT  PAT - The patient's ICN
"RTN","VAFCTFU",180,0)
 ;OUTPUT 0 (zero) - If no errors
"RTN","VAFCTFU",181,0)
 ;       1^error description if an error
"RTN","VAFCTFU",182,0)
 ;
"RTN","VAFCTFU",183,0)
 N VAFCER,PDFN,LP,TFIEN,X
"RTN","VAFCTFU",184,0)
 S VAFCER=0
"RTN","VAFCTFU",185,0)
 I '$G(PAT) Q "1^Parameter missing."
"RTN","VAFCTFU",186,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T Q 0
"RTN","VAFCTFU",187,0)
 S PDFN=$$GETDFN^MPIF001(PAT)
"RTN","VAFCTFU",188,0)
 I PDFN<0 Q "1^No patient DFN."
"RTN","VAFCTFU",189,0)
 F LP=0:0 S LP=$O(^DGCN(391.91,"APAT",PDFN,LP)) Q:LP'>0  D
"RTN","VAFCTFU",190,0)
 . S TFIEN=0
"RTN","VAFCTFU",191,0)
 . F  S TFIEN=$O(^DGCN(391.91,"APAT",PDFN,LP,TFIEN)) Q:TFIEN'>0  D DELETE(TFIEN)
"RTN","VAFCTFU",192,0)
 ;
"RTN","VAFCTFU",193,0)
 Q VAFCER
"RTN","VAFCTFU",194,0)
 ;
"RTN","VAFCTFU2")
0^5^B41375332^n/a
"RTN","VAFCTFU2",1,0)
VAFCTFU2 ;BHM/CMC-Utilities for the Treating Facility file 391.91, CONTINUED ; 4/21/2010
"RTN","VAFCTFU2",2,0)
 ;;5.3;Registration;**821**;Aug 13, 1993;Build 7
"RTN","VAFCTFU2",3,0)
TFL(LIST,PT) ;for this PT [patient] (either DFN, ICN or EDIPI) return the list of treating facilities
"RTN","VAFCTFU2",4,0)
 ; CALLED FROM RPC VAFC LOCAL GET CORRESPONDINGIDS
"RTN","VAFCTFU2",5,0)
 ; PT values -->
"RTN","VAFCTFU2",6,0)
 ;ICN example:   1008520438V882204^NI^USVHA^200M                                 
"RTN","VAFCTFU2",7,0)
 ;DFN example:   100000511^PI^USVHA^500                                          
"RTN","VAFCTFU2",8,0)
 ;EDIPI example: 852043888^NI^USDOD^200DOD 
"RTN","VAFCTFU2",9,0)
 ;                                      
"RTN","VAFCTFU2",10,0)
 ; Return:
"RTN","VAFCTFU2",11,0)
 ; This will return the ICN and the list of treating facilities in the following.
"RTN","VAFCTFU2",12,0)
 ;
"RTN","VAFCTFU2",13,0)
 ;   format:
"RTN","VAFCTFU2",14,0)
 ;   Id^IdType^AssigningAuthority^AssigningFacility^IdStatus
"RTN","VAFCTFU2",15,0)
 ;
"RTN","VAFCTFU2",16,0)
 ;   Examples:
"RTN","VAFCTFU2",17,0)
 ;   RESULT(1)="1011232151V598646^NI^200M^A"
"RTN","VAFCTFU2",18,0)
 ;   RESULT(2)="7168937^PI^USVHA^500^A"
"RTN","VAFCTFU2",19,0)
 ;   RESULT(3)="852043888^NI^USDOD^200DOD^A"
"RTN","VAFCTFU2",20,0)
 ;
"RTN","VAFCTFU2",21,0)
 N X,ICN,DA,DR,VAFCTFU1,DIC,DIQ,VAFC,DFN,EDIPI,ASSIGN,ID,SITE,TYPE
"RTN","VAFCTFU2",22,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T S LIST(1)="-1^MPI Not Installed" Q
"RTN","VAFCTFU2",23,0)
 ; clear "return" variable
"RTN","VAFCTFU2",24,0)
 K LIST
"RTN","VAFCTFU2",25,0)
 ; what do we have
"RTN","VAFCTFU2",26,0)
 S TYPE=$P(PT,"^",2),SITE=$P(PT,"^",4),ID=$P(PT,"^"),ASSIGN=$P(PT,"^",3)
"RTN","VAFCTFU2",27,0)
 ; check input data
"RTN","VAFCTFU2",28,0)
 I ID']"" S LIST(1)="-1^Id is not defined." Q
"RTN","VAFCTFU2",29,0)
 I TYPE'="NI",TYPE'="PI" S LIST(1)="-1^Invalid Id Type." Q
"RTN","VAFCTFU2",30,0)
 I ASSIGN'="USVHA",ASSIGN'="USDOD" S LIST(1)="-1^Invalid Assigning Authority." Q
"RTN","VAFCTFU2",31,0)
 I SITE']"" S LIST(1)="-1^Missing Assigning Facility." Q
"RTN","VAFCTFU2",32,0)
 ; find the ien for the station number
"RTN","VAFCTFU2",33,0)
 S SITEIEN=$O(^DIC(4,"D",SITE,0))
"RTN","VAFCTFU2",34,0)
 I 'SITEIEN S LIST(1)="-1^Assigning Facility is not defined in database." Q
"RTN","VAFCTFU2",35,0)
 ;
"RTN","VAFCTFU2",36,0)
 I TYPE="PI",ASSIGN="USVHA" S DFN=ID
"RTN","VAFCTFU2",37,0)
 I TYPE="NI",ASSIGN="USVHA",SITE="200M" S ICN=ID
"RTN","VAFCTFU2",38,0)
 I TYPE="NI",ASSIGN="USDOD",SITE="200DOD" S EDIPI=ID
"RTN","VAFCTFU2",39,0)
 I $D(ICN) S DFN=$$GETDFN^MPIF001(ICN) D  Q:$D(LIST(1))
"RTN","VAFCTFU2",40,0)
 . I +DFN<0 S LIST(1)="-1^ICN is not known" Q
"RTN","VAFCTFU2",41,0)
 . S SITEIEN=$$IEN^XUAF4($P($$SITE^VASITE,"^",3))
"RTN","VAFCTFU2",42,0)
 ;
"RTN","VAFCTFU2",43,0)
 I $D(DFN) S ICN=$$GETICN^MPIF001(DFN)
"RTN","VAFCTFU2",44,0)
 ; DFN should be defined, but ICN may not.
"RTN","VAFCTFU2",45,0)
 ; I $D(EDIPI) S ICN=$$GETICN(EDIPI)
"RTN","VAFCTFU2",46,0)
 ; check EDIPI
"RTN","VAFCTFU2",47,0)
 I $D(EDIPI),'$D(^DGCN(391.91,"ASCR",EDIPI,SITEIEN)) D  Q
"RTN","VAFCTFU2",48,0)
 . S LIST(1)="-1^EDIPI Record is unknown at this facility"
"RTN","VAFCTFU2",49,0)
 I $D(EDIPI),$D(^DGCN(391.91,"ASCR",EDIPI,SITEIEN)) D
"RTN","VAFCTFU2",50,0)
 .S EN=$O(^DGCN(391.91,"ASCR",EDIPI,SITEIEN,0))
"RTN","VAFCTFU2",51,0)
 .S DFN=$P($G(^DGCN(391.91,EN,0)),"^")
"RTN","VAFCTFU2",52,0)
 ;
"RTN","VAFCTFU2",53,0)
 ; if ICN is not defined, it is OK, but DFN should be defined
"RTN","VAFCTFU2",54,0)
 ; I $G(ICN)<0 S LIST(1)=ICN Q
"RTN","VAFCTFU2",55,0)
 ; bad input, such as Id^NI^USVHA^123
"RTN","VAFCTFU2",56,0)
 I '$G(DFN) S LIST(1)="-1^Invalid input" Q
"RTN","VAFCTFU2",57,0)
 ; check DFN and Site to be matching an entry in file #391.91
"RTN","VAFCTFU2",58,0)
 I '$O(^DGCN(391.91,"APAT",DFN,SITEIEN,0)) D  Q
"RTN","VAFCTFU2",59,0)
 . S LIST(1)="-1^Id as '"_ID_"'"_" is not in database"
"RTN","VAFCTFU2",60,0)
 ; DFN should be defined, but ICN may not.
"RTN","VAFCTFU2",61,0)
 S X=$$QUERYTF($P($G(ICN),"V"),"LIST")
"RTN","VAFCTFU2",62,0)
 I $P(X,U)="1" S LIST(1)="-1"_U_$P(X,U,2) Q
"RTN","VAFCTFU2",63,0)
 ;S DR=".01;13;99",DIC=4,DIQ(0)="E",DIQ="VAFCTFU2"
"RTN","VAFCTFU2",64,0)
 ;F VAFC=0:0 S VAFC=$O(LIST(VAFC)) Q:VAFC=""  D
"RTN","VAFCTFU2",65,0)
 ;.K VAFCTFU2
"RTN","VAFCTFU2",66,0)
 ;.S DA=+LIST(VAFC)
"RTN","VAFCTFU2",67,0)
 ;.D EN^DIQ1
"RTN","VAFCTFU2",68,0)
 ;.S LIST(VAFC)=VAFCTFU2(4,+LIST(VAFC),99,"E")_"^"_VAFCTFU2(4,+LIST(VAFC),.01,"E")_"^"_$P(LIST(VAFC),"^",2)_"^"_$P(LIST(VAFC),"^",3)_"^"_VAFCTFU2(4,+LIST(VAFC),13,"E")_"^"_$P(LIST(VAFC),"^",4)
"RTN","VAFCTFU2",69,0)
 Q
"RTN","VAFCTFU2",70,0)
GETICN(EDIPI) ;return the ICN when EDIPI is passed
"RTN","VAFCTFU2",71,0)
 N EN,DFN,ICN,IEN
"RTN","VAFCTFU2",72,0)
 S IEN=$$IEN^XUAF4("200DOD")
"RTN","VAFCTFU2",73,0)
 I 'IEN Q "-1^Unknown Assigning Facility."
"RTN","VAFCTFU2",74,0)
 I '$D(^DGCN(391.91,"ASCR",EDIPI,IEN)) Q "-1^EDIPI Record is unknown at this facility"
"RTN","VAFCTFU2",75,0)
 I $D(^DGCN(391.91,"ASCR",EDIPI,IEN)) D
"RTN","VAFCTFU2",76,0)
 .S EN=$O(^DGCN(391.91,"ASCR",EDIPI,$$IEN^XUAF4("200DOD"),""))
"RTN","VAFCTFU2",77,0)
 .S DFN=$P($G(^DGCN(391.91,EN,0)),"^")
"RTN","VAFCTFU2",78,0)
 .I DFN'="" S ICN=$$GETICN^MPIF001(DFN)
"RTN","VAFCTFU2",79,0)
 .I DFN="" S ICN="-1^No Site Record associated with this entry"
"RTN","VAFCTFU2",80,0)
 Q ICN
"RTN","VAFCTFU2",81,0)
 ;
"RTN","VAFCTFU2",82,0)
SET(TFIEN,ARY,CTR) ;This sets the array with the treating facility list.
"RTN","VAFCTFU2",83,0)
 ;  Ex  ARY(1)=<ID> ^ <ID TYPE> ^ <Assigning Authority> ^ <Assigning Facility> ^ <ID Status>
"RTN","VAFCTFU2",84,0)
 N DGCN,INSTIEN,LSTA,SOURCE,EN,NODE,SDFN,STATUS,SITEN,ID,IDTYPE,SITE,ASSAUTH,FOUND
"RTN","VAFCTFU2",85,0)
 S DGCN(0)=$G(^DGCN(391.91,TFIEN,0)),SITEN=""
"RTN","VAFCTFU2",86,0)
 ;** FROM DG*5.3*800 - (ckn) - Quit if IPP field is not set for 200MH record
"RTN","VAFCTFU2",87,0)
 S INSTIEN=$P($G(DGCN(0)),"^",2),LSTA=$$STA^XUAF4(INSTIEN)
"RTN","VAFCTFU2",88,0)
 I $E(LSTA,1,5)="200MH",$P($G(DGCN(0)),"^",8)'=1 Q
"RTN","VAFCTFU2",89,0)
 S ID=$P(DGCN(0),"^"),SITE=$P(DGCN(0),"^",2) I SITE'="" S SITEN=$$STA^XUAF4(SITE)
"RTN","VAFCTFU2",90,0)
 S IDTYPE="PI"
"RTN","VAFCTFU2",91,0)
 I SITEN="200DOD"!(SITEN["200N") S IDTYPE="NI"
"RTN","VAFCTFU2",92,0)
 S ASSAUTH="USVHA"
"RTN","VAFCTFU2",93,0)
 I SITEN="200DOD" S ASSAUTH="USDOD"
"RTN","VAFCTFU2",94,0)
 ; GET SOURCE ID AND SOURCE STATUS - CAN BE MORE THAN ONE
"RTN","VAFCTFU2",95,0)
 ;^DGCN(391.91,14842,0)=7169806^17942
"RTN","VAFCTFU2",96,0)
 ;^DGCN(391.91,14842,1,0)=^391.9101A^2^2
"RTN","VAFCTFU2",97,0)
 ;^DGCN(391.91,14842,1,1,0)=1^A
"RTN","VAFCTFU2",98,0)
 ;^DGCN(391.91,14842,1,2,0)=2^H
"RTN","VAFCTFU2",99,0)
 ;^DGCN(391.91,14842,1,"B",1,1)=
"RTN","VAFCTFU2",100,0)
 ;^DGCN(391.91,14842,1,"B",2,2)=
"RTN","VAFCTFU2",101,0)
 ;^DGCN(391.91,1708,0)=7169806^500^3081204.152808^^^^1
"RTN","VAFCTFU2",102,0)
 ;^DGCN(391.91,1708,1,0)=^391.9101A^1^1
"RTN","VAFCTFU2",103,0)
 ;^DGCN(391.91,1708,1,1,0)=27^H
"RTN","VAFCTFU2",104,0)
 ;^DGCN(391.91,1708,1,"B",27,1)=
"RTN","VAFCTFU2",105,0)
 S SOURCE="",FOUND=0
"RTN","VAFCTFU2",106,0)
 I $D(^DGCN(391.91,TFIEN,1)) D
"RTN","VAFCTFU2",107,0)
 .S EN=0 F  S EN=$O(^DGCN(391.91,TFIEN,1,EN)) Q:EN=""  D
"RTN","VAFCTFU2",108,0)
 ..S NODE=$G(^DGCN(391.91,TFIEN,1,EN,0))
"RTN","VAFCTFU2",109,0)
 ..S SDFN=$P(NODE,"^"),STATUS=$P(NODE,"^",2)
"RTN","VAFCTFU2",110,0)
 ..I SDFN'="" S CTR=CTR+1,@ARY@(CTR)=SDFN_"^"_IDTYPE_"^"_ASSAUTH_"^"_SITEN_"^"_STATUS,FOUND=1
"RTN","VAFCTFU2",111,0)
 I FOUND=0 S CTR=CTR+1,@ARY@(CTR)=""_"^"_IDTYPE_"^"_ASSAUTH_"^"_SITEN
"RTN","VAFCTFU2",112,0)
 Q
"RTN","VAFCTFU2",113,0)
 ;
"RTN","VAFCTFU2",114,0)
QUERYTF(PAT,ARY) ;a query for Treating Facility.
"RTN","VAFCTFU2",115,0)
 ;INPUT   PAT - The patient's ICN
"RTN","VAFCTFU2",116,0)
 ;        ARY - The array in which to return the Treating facility info.
"RTN","VAFCTFU2",117,0)
 ;OUTPUT  A list of the Treating Facilities in the array provided from
"RTN","VAFCTFU2",118,0)
 ;        the parameter.  It will be in the structure of x(1), x(2) etc.
"RTN","VAFCTFU2",119,0)
 ;  Ex  X(1)=<ID> ^ <ID TYPE> ^ <Assigning Authority> ^ <Assigning Facility> ^ <ID Status>
"RTN","VAFCTFU2",120,0)
 ;
"RTN","VAFCTFU2",121,0)
 ;    This is also a function call.  If there is an error then a 
"RTN","VAFCTFU2",122,0)
 ;    1^error description will be returned. 
"RTN","VAFCTFU2",123,0)
 ;
"RTN","VAFCTFU2",124,0)
 ;  *** If no data is found the array will not be populated and
"RTN","VAFCTFU2",125,0)
 ;  a 1^error description will be returned.
"RTN","VAFCTFU2",126,0)
 ;
"RTN","VAFCTFU2",127,0)
 N PDFN,VAFCER,LP,CTR
"RTN","VAFCTFU2",128,0)
 ;
"RTN","VAFCTFU2",129,0)
 ; ICN is not required, comment out
"RTN","VAFCTFU2",130,0)
 ; I '$G(PAT)!('$D(ARY)) S VAFCER="1^Parameter missing." G QUERYTFQ
"RTN","VAFCTFU2",131,0)
 I ('$D(ARY)) S VAFCER="1^Parameter missing." G QUERYTFQ
"RTN","VAFCTFU2",132,0)
 S VAFCER=0,CTR=1
"RTN","VAFCTFU2",133,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T G QUERYTFQ
"RTN","VAFCTFU2",134,0)
 ; ICN is not required, comment out
"RTN","VAFCTFU2",135,0)
 ; S PDFN=$$GETDFN^MPIF001(PAT)
"RTN","VAFCTFU2",136,0)
 ; I PDFN<0 S VAFCER="1^No patient DFN." G QUERYTFQ
"RTN","VAFCTFU2",137,0)
 S PDFN=$G(DFN)
"RTN","VAFCTFU2",138,0)
 I '$G(PDFN) S VAFCER="1^DFN is not defined." G QUERYTFQ
"RTN","VAFCTFU2",139,0)
 ;SET FIRST ENTRY TO BE THE ICN - FULL ICN - PAT IS NOT THE ICN
"RTN","VAFCTFU2",140,0)
 S @ARY@(CTR)=$$GETICN^MPIF001(PDFN)_"^NI^USVHA^200M^A"
"RTN","VAFCTFU2",141,0)
 F LP=0:0 S LP=$O(^DGCN(391.91,"APAT",PDFN,LP)) Q:'LP  S TFIEN=$O(^(LP,"")) D SET(TFIEN,ARY,.CTR)
"RTN","VAFCTFU2",142,0)
 I $D(@ARY)'>9 S VAFCER="1^Could not find Treating Facilities"
"RTN","VAFCTFU2",143,0)
QUERYTFQ Q VAFCER
"RTN","VAFCTFU2",144,0)
 ;
"RTN","VAFCTFU2",145,0)
NEWTF(RESULT,DFN,EDIPI) ;
"RTN","VAFCTFU2",146,0)
 ; for MPIC_2019
"RTN","VAFCTFU2",147,0)
 ; called from RPC: VAFC NEW NC TREATING FACILITY
"RTN","VAFCTFU2",148,0)
 ; Input:
"RTN","VAFCTFU2",149,0)
 ;   DFN: Vista Patient Identifier will be the PATIENT file (#2) IEN (aka DFN)
"RTN","VAFCTFU2",150,0)
 ;        example of DFN="7168937"
"RTN","VAFCTFU2",151,0)
 ;
"RTN","VAFCTFU2",152,0)
 ;   EDIPI: The DOD Identifier will be EDIPI data with the
"RTN","VAFCTFU2",153,0)
 ;          following format:
"RTN","VAFCTFU2",154,0)
 ;          Id^IdType^AssigningAuthority^AssigningFacility
"RTN","VAFCTFU2",155,0)
 ;          example:  852043888^NI^USDOD^200DOD
"RTN","VAFCTFU2",156,0)
 ;
"RTN","VAFCTFU2",157,0)
 ; Return:
"RTN","VAFCTFU2",158,0)
 ; This will return a list of treating facilities in the following.
"RTN","VAFCTFU2",159,0)
 ;
"RTN","VAFCTFU2",160,0)
 ;   format:
"RTN","VAFCTFU2",161,0)
 ;   Id^IdType^AssigningAuthority^AssigningFacility^IdStatus[^NEW]
"RTN","VAFCTFU2",162,0)
 ;
"RTN","VAFCTFU2",163,0)
 ;   Examples:
"RTN","VAFCTFU2",164,0)
 ;   RESULT(1)="7168937^PI^USVHA^500^A"
"RTN","VAFCTFU2",165,0)
 ;   RESULT(2)="85204388^NI^USDOD^200DOD^A^NEW"
"RTN","VAFCTFU2",166,0)
 ;     Note: If there is data in the 6th piece of the RESULT(<number>),
"RTN","VAFCTFU2",167,0)
 ;           with data value as "NEW", then it means that the entry was
"RTN","VAFCTFU2",168,0)
 ;           newly created in the TREATING FACILITY LIST (#391.91) file
"RTN","VAFCTFU2",169,0)
 ;           by this RPC call.
"RTN","VAFCTFU2",170,0)
 ;
"RTN","VAFCTFU2",171,0)
 N X,TYPE,SITE,ID,ASSIGN,PTDFN,LP,CTR,NCTFIEN,ERROR,II
"RTN","VAFCTFU2",172,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T S RESULT(1)="-1^MPI Not Installed" Q
"RTN","VAFCTFU2",173,0)
 ; clear "return" variable
"RTN","VAFCTFU2",174,0)
 K RESULT
"RTN","VAFCTFU2",175,0)
 ; input parameters
"RTN","VAFCTFU2",176,0)
 S PTDFN=$G(DFN)
"RTN","VAFCTFU2",177,0)
 I 'PTDFN S RESULT(1)="-1^Invalid DFN:"""_PTDFN_"""" Q
"RTN","VAFCTFU2",178,0)
 ; check the field #.01 data in patient entry
"RTN","VAFCTFU2",179,0)
 I $P($G(^DPT(PTDFN,0)),"^")']"" D  Q
"RTN","VAFCTFU2",180,0)
 . S RESULT(1)="-1^No patient in database for the DFN:"_PTDFN
"RTN","VAFCTFU2",181,0)
 ;
"RTN","VAFCTFU2",182,0)
 S ID=$P(EDIPI,"^"),TYPE=$P(EDIPI,"^",2),ASSIGN=$P(EDIPI,"^",3)
"RTN","VAFCTFU2",183,0)
 S SITE=$P(EDIPI,"^",4)
"RTN","VAFCTFU2",184,0)
 ;
"RTN","VAFCTFU2",185,0)
 I ID']"" S RESULT(1)="-1^Id is not defined." Q
"RTN","VAFCTFU2",186,0)
 I TYPE'="NI" S RESULT(1)="-1^Invalid Id Type." Q
"RTN","VAFCTFU2",187,0)
 I ASSIGN'="USDOD" S RESULT(1)="-1^Invalid Assigning Authority." Q
"RTN","VAFCTFU2",188,0)
 I SITE'="200DOD" S RESULT(1)="-1^Invalid Assigning Facility." Q
"RTN","VAFCTFU2",189,0)
 S SITEIEN=$O(^DIC(4,"D","200DOD",0))
"RTN","VAFCTFU2",190,0)
 I 'SITEIEN S RESULT(1)="-1^Assigning Facility is not defined in database." Q
"RTN","VAFCTFU2",191,0)
 ;
"RTN","VAFCTFU2",192,0)
 ; get ien of file #391.91
"RTN","VAFCTFU2",193,0)
 S NCTFIEN=$O(^DGCN(391.91,"APAT",PTDFN,SITEIEN,0))
"RTN","VAFCTFU2",194,0)
 ;
"RTN","VAFCTFU2",195,0)
 ; Assigning Facility as "200DOD" of the patient is already existed
"RTN","VAFCTFU2",196,0)
 ; in file #391.91
"RTN","VAFCTFU2",197,0)
 S CTR=0
"RTN","VAFCTFU2",198,0)
 I NCTFIEN D  Q
"RTN","VAFCTFU2",199,0)
 . N TFIEN
"RTN","VAFCTFU2",200,0)
 . F LP=0:0 S LP=$O(^DGCN(391.91,"APAT",PTDFN,LP)) Q:'LP  S TFIEN=$O(^(LP,0)) D
"RTN","VAFCTFU2",201,0)
 .. Q:'TFIEN
"RTN","VAFCTFU2",202,0)
 .. ; retrieve entry in file #391.91
"RTN","VAFCTFU2",203,0)
 .. D SET(TFIEN,"RESULT",.CTR)
"RTN","VAFCTFU2",204,0)
 ;
"RTN","VAFCTFU2",205,0)
 ; add new entry to file #391.91
"RTN","VAFCTFU2",206,0)
 D FILENEW^VAFCTFU(PTDFN,SITEIEN,"","","",.ERROR,"",ID,"A")
"RTN","VAFCTFU2",207,0)
 I $D(ERROR(SITEIEN)) D  Q
"RTN","VAFCTFU2",208,0)
 . S RESULT(1)="-1^"_$G(ERROR(SITEIEN))
"RTN","VAFCTFU2",209,0)
 ;
"RTN","VAFCTFU2",210,0)
 ; for Cache client/server model in case that there is a delay for
"RTN","VAFCTFU2",211,0)
 ; retrieving the new created entry.
"RTN","VAFCTFU2",212,0)
 F II=1:1:5 Q:$O(^DGCN(391.91,"APAT",PTDFN,SITEIEN,0))  H II
"RTN","VAFCTFU2",213,0)
 ; retrieving the results
"RTN","VAFCTFU2",214,0)
 F LP=0:0 S LP=$O(^DGCN(391.91,"APAT",PTDFN,LP)) Q:'LP  S TFIEN=$O(^(LP,0)) D
"RTN","VAFCTFU2",215,0)
 . Q:'TFIEN
"RTN","VAFCTFU2",216,0)
 . ; retrieve entry in file #391.91
"RTN","VAFCTFU2",217,0)
 . D SET(TFIEN,"RESULT",.CTR)
"RTN","VAFCTFU2",218,0)
 . I $P($G(RESULT(CTR)),"^",3)="USDOD" S RESULT(CTR)=RESULT(CTR)_"^NEW"
"RTN","VAFCTFU2",219,0)
 Q
"RTN","VAFCTFU2",220,0)
 ;
"UP",391.91,391.9101,-1)
391.91^1
"UP",391.91,391.9101,0)
391.9101
"VER")
8.0^22.0
"^DD",391.91,391.91,20,0)
SOURCE ID^391.9101A^^1;0
"^DD",391.91,391.91,20,21,0)
^^13^13^3100714^
"^DD",391.91,391.91,20,21,1,0)
SOURCE ID is the unique system assigned identifier at the identified 
"^DD",391.91,391.91,20,21,2,0)
facility for the patient record.  The value of SOURCE ID varies, 
"^DD",391.91,391.91,20,21,3,0)
depending on the source facility.
"^DD",391.91,391.91,20,21,4,0)
  
"^DD",391.91,391.91,20,21,5,0)
If SOURCE ID is from the Master Patient Index, the value is the 
"^DD",391.91,391.91,20,21,6,0)
Integration Control Number (ICN).  If SOURCE ID is from the Department of 
"^DD",391.91,391.91,20,21,7,0)
Defense (DoD), the value is the Electronic Data Interchange Personal 
"^DD",391.91,391.91,20,21,8,0)
Identifier (EDIPI), which is their equivalent of an ICN.  In the future, 
"^DD",391.91,391.91,20,21,9,0)
SOURCE ID may come from other sources due to additional initiatives.
"^DD",391.91,391.91,20,21,10,0)
  
"^DD",391.91,391.91,20,21,11,0)
SOURCE ID is a multiple because a patient seen at disparate systems 
"^DD",391.91,391.91,20,21,12,0)
(e.g., VAMC and DoD) may have a different identifier on each system which 
"^DD",391.91,391.91,20,21,13,0)
is unique to that system.
"^DD",391.91,391.9101,0)
SOURCE ID SUB-FIELD^^1^2
"^DD",391.91,391.9101,0,"DT")
3100714
"^DD",391.91,391.9101,0,"IX","B",391.9101,.01)

"^DD",391.91,391.9101,0,"NM","SOURCE ID")

"^DD",391.91,391.9101,0,"UP")
391.91
"^DD",391.91,391.9101,.01,0)
SOURCE ID^F^^0;1^K:$L(X)>40!($L(X)<1) X
"^DD",391.91,391.9101,.01,.1)
SourceID
"^DD",391.91,391.9101,.01,1,0)
^.1
"^DD",391.91,391.9101,.01,1,1,0)
391.9101^B
"^DD",391.91,391.9101,.01,1,1,1)
S ^DGCN(391.91,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",391.91,391.9101,.01,1,1,2)
K ^DGCN(391.91,DA(1),1,"B",$E(X,1,30),DA)
"^DD",391.91,391.9101,.01,3)
Enter the SourceID, 1-40 characters.
"^DD",391.91,391.9101,.01,21,0)
^.001^13^13^3100714^^^
"^DD",391.91,391.9101,.01,21,1,0)
SOURCE ID is the unique system assigned identifier at the identified 
"^DD",391.91,391.9101,.01,21,2,0)
facility for the patient record.  The value of SOURCE ID varies, 
"^DD",391.91,391.9101,.01,21,3,0)
depending on the source facility.
"^DD",391.91,391.9101,.01,21,4,0)
  
"^DD",391.91,391.9101,.01,21,5,0)
If SOURCE ID is from the Master Patient Index, the value is the 
"^DD",391.91,391.9101,.01,21,6,0)
Integration Control Number (ICN).  If SOURCE ID is from the Department of 
"^DD",391.91,391.9101,.01,21,7,0)
Defense (DoD), the value is the Electronic Data Interchange Personal 
"^DD",391.91,391.9101,.01,21,8,0)
Identifier (EDIPI), which is their equivalent of an ICN.  In the future, 
"^DD",391.91,391.9101,.01,21,9,0)
SOURCE ID may come from other sources due to additional initiatives.
"^DD",391.91,391.9101,.01,21,10,0)
  
"^DD",391.91,391.9101,.01,21,11,0)
SOURCE ID is a multiple because a patient seen at disparate systems 
"^DD",391.91,391.9101,.01,21,12,0)
(e.g., VAMC and DoD) may have a different identifier on each system which 
"^DD",391.91,391.9101,.01,21,13,0)
is unique to that system.
"^DD",391.91,391.9101,.01,"DT")
3100714
"^DD",391.91,391.9101,1,0)
IDENTIFIER STATUS^S^A:Active;H:Merged;^0;2^Q
"^DD",391.91,391.9101,1,.1)
Identifier Status
"^DD",391.91,391.9101,1,3)
Enter the status for this SourceID.
"^DD",391.91,391.9101,1,21,0)
^.001^11^11^3100714^^
"^DD",391.91,391.9101,1,21,1,0)
The IDENTIFIER STATUS field supports the upcoming Joint VA/DoD Medical 
"^DD",391.91,391.9101,1,21,2,0)
Center, Veteran's Record Management (VRM), and Virtual Lifetime 
"^DD",391.91,391.9101,1,21,3,0)
Electronic Record (VLER) initiatives.  This field allows the capture of 
"^DD",391.91,391.9101,1,21,4,0)
the resolved duplicate events and exposes the related identifier and 
"^DD",391.91,391.9101,1,21,5,0)
identifier status to the consuming applications.
"^DD",391.91,391.9101,1,21,6,0)
  
"^DD",391.91,391.9101,1,21,7,0)
A value of "A" indicates that the patient record is an active record on 
"^DD",391.91,391.9101,1,21,8,0)
the identifying system (e.g., VAMC or DoD).
"^DD",391.91,391.9101,1,21,9,0)
A value of "H" indicates that the patient record was identified as part 
"^DD",391.91,391.9101,1,21,10,0)
of a duplicate pair, has been merged, and is no longer active on the 
"^DD",391.91,391.9101,1,21,11,0)
identifying system (e.g., VAMC or DoD).
"^DD",391.91,391.9101,1,"DT")
3100107
"BLD",2766,6)
^729
**END**
**END**
