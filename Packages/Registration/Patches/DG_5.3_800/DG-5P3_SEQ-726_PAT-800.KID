Released DG*5.3*800 SEQ #726
Extracted from mail message
**KIDS**:DG*5.3*800^

**INSTALL NAME**
DG*5.3*800
"BLD",2693,0)
DG*5.3*800^REGISTRATION^0^3100222^y
"BLD",2693,1,0)
^^4^4^3100222^
"BLD",2693,1,1,0)
 
"BLD",2693,1,2,0)
VETERAN ON-LINE APPLICATION (VOA) ENHANCEMENT
"BLD",2693,1,3,0)
Refer to patch DG*5.3*800 in the FORUM Patch Module for a complete
"BLD",2693,1,4,0)
description.
"BLD",2693,4,0)
^9.64PA^391.91^1
"BLD",2693,4,391.91,0)
391.91
"BLD",2693,4,391.91,2,0)
^9.641^391.91^1
"BLD",2693,4,391.91,2,391.91,0)
TREATING FACILITY LIST  (File-top level)
"BLD",2693,4,391.91,2,391.91,1,0)
^9.6411^.08^1
"BLD",2693,4,391.91,2,391.91,1,.08,0)
IN-PERSON PROOFED
"BLD",2693,4,391.91,222)
y^y^p^^^^n^^n
"BLD",2693,4,391.91,224)

"BLD",2693,4,"APDD",391.91,391.91)

"BLD",2693,4,"APDD",391.91,391.91,.08)

"BLD",2693,4,"B",391.91,391.91)

"BLD",2693,6.3)
4
"BLD",2693,"ABNS",0)
^9.66A^^
"BLD",2693,"ABPKG")
n^n^
"BLD",2693,"INIT")
EP^DG53800P
"BLD",2693,"KRN",0)
^9.67PA^779.2^20
"BLD",2693,"KRN",.4,0)
.4
"BLD",2693,"KRN",.401,0)
.401
"BLD",2693,"KRN",.402,0)
.402
"BLD",2693,"KRN",.403,0)
.403
"BLD",2693,"KRN",.5,0)
.5
"BLD",2693,"KRN",.84,0)
.84
"BLD",2693,"KRN",3.6,0)
3.6
"BLD",2693,"KRN",3.8,0)
3.8
"BLD",2693,"KRN",9.2,0)
9.2
"BLD",2693,"KRN",9.8,0)
9.8
"BLD",2693,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",2693,"KRN",9.8,"NM",1,0)
VAFCPTAD^^0^B64926627
"BLD",2693,"KRN",9.8,"NM",2,0)
DG53800P^^0^B18028040
"BLD",2693,"KRN",9.8,"NM",3,0)
VAFCTFIN^^0^B24080050
"BLD",2693,"KRN",9.8,"NM",4,0)
VAFCTFU^^0^B43187604
"BLD",2693,"KRN",9.8,"NM",5,0)
VAFCTFU1^^0^B9951191
"BLD",2693,"KRN",9.8,"NM","B","DG53800P",2)

"BLD",2693,"KRN",9.8,"NM","B","VAFCPTAD",1)

"BLD",2693,"KRN",9.8,"NM","B","VAFCTFIN",3)

"BLD",2693,"KRN",9.8,"NM","B","VAFCTFU",4)

"BLD",2693,"KRN",9.8,"NM","B","VAFCTFU1",5)

"BLD",2693,"KRN",19,0)
19
"BLD",2693,"KRN",19.1,0)
19.1
"BLD",2693,"KRN",101,0)
101
"BLD",2693,"KRN",409.61,0)
409.61
"BLD",2693,"KRN",771,0)
771
"BLD",2693,"KRN",779.2,0)
779.2
"BLD",2693,"KRN",870,0)
870
"BLD",2693,"KRN",8989.51,0)
8989.51
"BLD",2693,"KRN",8989.52,0)
8989.52
"BLD",2693,"KRN",8994,0)
8994
"BLD",2693,"KRN",8994,"NM",0)
^9.68A^1^1
"BLD",2693,"KRN",8994,"NM",1,0)
VAFC VOA ADD PATIENT^^0
"BLD",2693,"KRN",8994,"NM","B","VAFC VOA ADD PATIENT",1)

"BLD",2693,"KRN","B",.4,.4)

"BLD",2693,"KRN","B",.401,.401)

"BLD",2693,"KRN","B",.402,.402)

"BLD",2693,"KRN","B",.403,.403)

"BLD",2693,"KRN","B",.5,.5)

"BLD",2693,"KRN","B",.84,.84)

"BLD",2693,"KRN","B",3.6,3.6)

"BLD",2693,"KRN","B",3.8,3.8)

"BLD",2693,"KRN","B",9.2,9.2)

"BLD",2693,"KRN","B",9.8,9.8)

"BLD",2693,"KRN","B",19,19)

"BLD",2693,"KRN","B",19.1,19.1)

"BLD",2693,"KRN","B",101,101)

"BLD",2693,"KRN","B",409.61,409.61)

"BLD",2693,"KRN","B",771,771)

"BLD",2693,"KRN","B",779.2,779.2)

"BLD",2693,"KRN","B",870,870)

"BLD",2693,"KRN","B",8989.51,8989.51)

"BLD",2693,"KRN","B",8989.52,8989.52)

"BLD",2693,"KRN","B",8994,8994)

"BLD",2693,"QDEF")
^^^^^^^^^^YES
"BLD",2693,"QUES",0)
^9.62^^
"BLD",2693,"REQB",0)
^9.611^4^4
"BLD",2693,"REQB",1,0)
DG*5.3*449^2
"BLD",2693,"REQB",2,0)
DG*5.3*697^2
"BLD",2693,"REQB",3,0)
DG*5.3*707^2
"BLD",2693,"REQB",4,0)
XWB*1.1*54^2
"BLD",2693,"REQB","B","DG*5.3*449",1)

"BLD",2693,"REQB","B","DG*5.3*697",2)

"BLD",2693,"REQB","B","DG*5.3*707",3)

"BLD",2693,"REQB","B","XWB*1.1*54",4)

"FIA",391.91)
TREATING FACILITY LIST
"FIA",391.91,0)
^DGCN(391.91,
"FIA",391.91,0,0)
391.91IP
"FIA",391.91,0,1)
y^y^p^^^^n^^n
"FIA",391.91,0,10)

"FIA",391.91,0,11)

"FIA",391.91,0,"RLRO")

"FIA",391.91,0,"VR")
5.3^DG
"FIA",391.91,391.91)
1
"FIA",391.91,391.91,.08)

"INIT")
EP^DG53800P
"KRN",8994,272,-1)
0^1
"KRN",8994,272,0)
VAFC VOA ADD PATIENT^ADD^VAFCPTAD^2^R^0^^1^1
"KRN",8994,272,1,0)
^^3^3^3100201^
"KRN",8994,272,1,1,0)
This Remote Procedure Call allows the remote creation of a VistA
"KRN",8994,272,1,2,0)
PATIENT (#2) record at the Preferred Facility for the Veteran
"KRN",8994,272,1,3,0)
On-Line Application (VOA) project.
"KRN",8994,272,2,0)
^8994.02A^2^1
"KRN",8994,272,2,2,0)
PARAM^2^2000^1^1
"KRN",8994,272,2,2,1,0)
^8994.021^65^65^3100201^^^^
"KRN",8994,272,2,2,1,1,0)
PARAM may contain the following values: (R) Required (O) Optional
"KRN",8994,272,2,2,1,2,0)
The values are passed into this RPC from the Master Patient Index (MPI) 
"KRN",8994,272,2,2,1,3,0)
via the MPI PSIM ADD PREF FACILITY Remote Procedure.  If internal format
"KRN",8994,272,2,2,1,4,0)
values are sent, they are converted to the external value for the 
"KRN",8994,272,2,2,1,5,0)
UPDATE^DIE call.
"KRN",8994,272,2,2,1,6,0)
     
"KRN",8994,272,2,2,1,7,0)
     (R) PARAM("PRFCLTY") = Preferred Facility Station Number.  Must be 
"KRN",8994,272,2,2,1,8,0)
                            the same as the receiving site.
"KRN",8994,272,2,2,1,9,0)
     (R) PARAM("NAME") = Last Name^First Name^Middle Name^Suffix is
"KRN",8994,272,2,2,1,10,0)
                         converted to: Last Name<comma>First Name<space>
"KRN",8994,272,2,2,1,11,0)
                         Middle Name<space>Suffix
"KRN",8994,272,2,2,1,12,0)
                         NAME of the applicant to be added to the PATIENT
"KRN",8994,272,2,2,1,13,0)
                         (#2) file.
"KRN",8994,272,2,2,1,14,0)
     (R) PARAM("GENDER") = External format - MALE or FEMALE
"KRN",8994,272,2,2,1,15,0)
                           SEX of the applicant to be added to the PATIENT
"KRN",8994,272,2,2,1,16,0)
                           (#2) file.
"KRN",8994,272,2,2,1,17,0)
     (R) PARAM("DOB") = External date format; can be imprecise. Month
"KRN",8994,272,2,2,1,18,0)
                        and/or day alone, without year is not allowed.
"KRN",8994,272,2,2,1,19,0)
                        DATE OF BIRTH of the applicant to be added to the
"KRN",8994,272,2,2,1,20,0)
                        PATIENT (#2) file.
"KRN",8994,272,2,2,1,21,0)
     (R) PARAM("SSN") = Format: nine numbers / no dashes, or a NULL value.
"KRN",8994,272,2,2,1,22,0)
                        If SSN is sent with a null value, then on the
"KRN",8994,272,2,2,1,23,0)
                        VistA side, the patient is given a PSEUDO SSN
"KRN",8994,272,2,2,1,24,0)
                        number and the PSEUDO SSN REASON field is also set
"KRN",8994,272,2,2,1,25,0)
                        to "SSN UNKNOWN/FOLLOW-UP REQUIRED".  SOCIAL
"KRN",8994,272,2,2,1,26,0)
                        SECURITY NUMBER of the applicant to be added to
"KRN",8994,272,2,2,1,27,0)
                        the PATIENT (#2) file.
"KRN",8994,272,2,2,1,28,0)
     (R) PARAM("SRVCNCTD") = YES or NO
"KRN",8994,272,2,2,1,29,0)
                             Is the applicant to be added to the PATIENT
"KRN",8994,272,2,2,1,30,0)
                             (#2) file SERVICE CONNECTED?
"KRN",8994,272,2,2,1,31,0)
     (R) PARAM("TYPE") = Primary patient TYPE:
"KRN",8994,272,2,2,1,32,0)
                         ACTIVE DUTY,
"KRN",8994,272,2,2,1,33,0)
                         ALLIED VETERAN,
"KRN",8994,272,2,2,1,34,0)
                         COLLATERAL,
"KRN",8994,272,2,2,1,35,0)
                         EMPLOYEE,
"KRN",8994,272,2,2,1,36,0)
                         MILITARY RETIREE,
"KRN",8994,272,2,2,1,37,0)
                         NON-VETERAN (OTHER),
"KRN",8994,272,2,2,1,38,0)
                         NSC VETERAN,
"KRN",8994,272,2,2,1,39,0)
                         SC VETERAN, OR
"KRN",8994,272,2,2,1,40,0)
                         TRICARE
"KRN",8994,272,2,2,1,41,0)
                         Primary patient TYPE of the applicant to be added
"KRN",8994,272,2,2,1,42,0)
                         to the PATIENT (#2) file.
"KRN",8994,272,2,2,1,43,0)
     (R) PARAM("VET") = YES or NO
"KRN",8994,272,2,2,1,44,0)
                        Is the applicant to be added to the PATIENT (#2)
"KRN",8994,272,2,2,1,45,0)
                        file a VETERAN?
"KRN",8994,272,2,2,1,46,0)
     (R) PARAM("FULLICN ") = A 10 digit NUMBER, followed by V (delimiter),
"KRN",8994,272,2,2,1,47,0)
                             followed by a 6 digit CHECKSUM NUMBER.
"KRN",8994,272,2,2,1,48,0)
                             The full INTEGRATION CONTROL NUMBER (ICN)
"KRN",8994,272,2,2,1,49,0)
                             of the applicant to be added to the PATIENT
"KRN",8994,272,2,2,1,50,0)
                             (#2) file.
"KRN",8994,272,2,2,1,51,0)
         
"KRN",8994,272,2,2,1,52,0)
     (O) PARAM("POBCTY") = City name.  PLACE OF BIRTH [CITY] of the 
"KRN",8994,272,2,2,1,53,0)
                           applicant to be added to the PATIENT (#2) file.
"KRN",8994,272,2,2,1,54,0)
     (O) PARAM("POBST") = The incoming 2 character STATE ABBREVIATION
"KRN",8994,272,2,2,1,55,0)
                          is converted to the STATE NAME.  PLACE OF
"KRN",8994,272,2,2,1,56,0)
                          BIRTH [STATE] of the applicant to be added
"KRN",8994,272,2,2,1,57,0)
                          to the PATIENT (#2) file.
"KRN",8994,272,2,2,1,58,0)
     (O) PARAM("MMN") = MOTHER'S MAIDEN NAME.  Maiden name of the mother
"KRN",8994,272,2,2,1,59,0)
                        of the applicant to be added to the PATIENT (#2) 
"KRN",8994,272,2,2,1,60,0)
                        file.
"KRN",8994,272,2,2,1,61,0)
     (O) PARAM("ALIAS",#) = ALIAS NAME (Last Name^First Name^Middle
"KRN",8994,272,2,2,1,62,0)
                            Name^Suffix) is converted to: (Last Name
"KRN",8994,272,2,2,1,63,0)
                            <comma>First Name<space>Middle Name<space>
"KRN",8994,272,2,2,1,64,0)
                            Suffix)^ALIAS SSN
"KRN",8994,272,2,2,1,65,0)
                            The # subscript is a sequential number.
"KRN",8994,272,2,"B","PARAM",2)

"KRN",8994,272,2,"PARAMSEQ",1,2)

"KRN",8994,272,3,0)
^8994.03^7^7^3100201^^^^
"KRN",8994,272,3,1,0)
This RPC will return a positive (1) or negative response (-1) in 
"KRN",8994,272,3,2,0)
RETURN(1), in the following format: result^text result
"KRN",8994,272,3,3,0)
   
"KRN",8994,272,3,4,0)
Example output:
"KRN",8994,272,3,5,0)
    -1^error text
"KRN",8994,272,3,6,0)
       OR
"KRN",8994,272,3,7,0)
     1^DFN of the PATIENT (#2) file entry created
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813^2970721^12541
"PKG",5,22,1,"PAH",1,0)
800^3100222
"PKG",5,22,1,"PAH",1,1,0)
^^4^4^3100222
"PKG",5,22,1,"PAH",1,1,1,0)
 
"PKG",5,22,1,"PAH",1,1,2,0)
VETERAN ON-LINE APPLICATION (VOA) ENHANCEMENT
"PKG",5,22,1,"PAH",1,1,3,0)
Refer to patch DG*5.3*800 in the FORUM Patch Module for a complete
"PKG",5,22,1,"PAH",1,1,4,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","DG53800P")
0^2^B18028040^n/a
"RTN","DG53800P",1,0)
DG53800P ;BHM/CKN - POST INSTALL ROUTINE TO UPDATE IPP FIELD IN TREATING FACILITY FILE 391.91 ; 3/17/09 12:17pm
"RTN","DG53800P",2,0)
 ;;5.3;Registration;**800**;Aug 13, 1993;Build 4
"RTN","DG53800P",3,0)
 Q
"RTN","DG53800P",4,0)
EP ;MPIC_1490 - Post install routine entry point
"RTN","DG53800P",5,0)
 N RESTART
"RTN","DG53800P",6,0)
 S RESTART=0
"RTN","DG53800P",7,0)
 I '$$CHECK() Q
"RTN","DG53800P",8,0)
 D QUE
"RTN","DG53800P",9,0)
 Q
"RTN","DG53800P",10,0)
QUE ;Queue the process
"RTN","DG53800P",11,0)
 N ZTRTN,ZTDESC,ZTSK
"RTN","DG53800P",12,0)
 S ZTRTN="PROCESS^DG53800P",ZTDESC="DG53800P - UPDATE IPP FIELD IN TREATING FACILITY FILE"
"RTN","DG53800P",13,0)
 S ZTIO="",ZTDTH=$H
"RTN","DG53800P",14,0)
 D ^%ZTLOAD
"RTN","DG53800P",15,0)
 I $D(ZTSK) S ^XTMP("DG53800P","@@","TASK")=ZTSK W !,"Task: "_$G(ZTSK)
"RTN","DG53800P",16,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","DG53800P",17,0)
 Q
"RTN","DG53800P",18,0)
CHECK() ;Initial check
"RTN","DG53800P",19,0)
 D BMES^XPDUTL("Post install process to update IPP field in TREATING FACILITY FILE #391.91")
"RTN","DG53800P",20,0)
 N INITSTRT
"RTN","DG53800P",21,0)
 I '$D(^XTMP("DG53800P","@@","PROCESS INIT STARTED")) S (^XTMP("DG53800P","@@","PROCESS INIT STARTED"),^XTMP("DG53800P","@@","PROCESS STARTED"))=$$NOW^XLFDT() D BMES^XPDUTL("<<Process Started>>") Q 1
"RTN","DG53800P",22,0)
 I $D(^XTMP("DG53800P","@@","PROCESS COMPLETED")) D BMES^XPDUTL("<<Process is already completed>>")
"RTN","DG53800P",23,0)
 I $D(^XTMP("DG53800P","@@","PROCESS STOPPED")) D BMES^XPDUTL("<<Process stopped in previous run>>")
"RTN","DG53800P",24,0)
 I 'RESTART Q 0
"RTN","DG53800P",25,0)
 W ! S DIR(0)="Y",DIR("B")="Yes",DIR("A")="Do you want to complete the rerun" D ^DIR K DIR
"RTN","DG53800P",26,0)
 I '+Y Q 0
"RTN","DG53800P",27,0)
 S INITSTRT=$G(^XTMP("DG53800P","@@","PROCESS INIT STARTED"))
"RTN","DG53800P",28,0)
 K ^XTMP("DG53800P","@@")
"RTN","DG53800P",29,0)
 S ^XTMP("DG53800P","@@","PROCESS INIT STARTED")=$G(INITSTRT)
"RTN","DG53800P",30,0)
 S ^XTMP("DG53800P","@@","PROCESS STARTED")=$$NOW^XLFDT()
"RTN","DG53800P",31,0)
 D BMES^XPDUTL("<<Process Started>>") Q 1
"RTN","DG53800P",32,0)
PROCESS ;
"RTN","DG53800P",33,0)
 N TFIEN,QFLG,INSTIEN,VAL,X,X1,X2
"RTN","DG53800P",34,0)
 S QFLG=0,VAL=1
"RTN","DG53800P",35,0)
 S X1=DT,X2=60 D C^%DTC
"RTN","DG53800P",36,0)
 S ^XTMP("DG53800P",0)=X_"^"_$$DT^XLFDT_"^DG53800P - POST INSTALL - IPP FIELD UPDATE IN TREATING FACILITY FILE"
"RTN","DG53800P",37,0)
 S INSTIEN=$O(^DIC(4,"D","200MH","")) ;Institution file ien for 200MH
"RTN","DG53800P",38,0)
 S TFIEN=+$G(^XTMP("DG53800P","@@","CURRENT IEN"))
"RTN","DG53800P",39,0)
 F  S TFIEN=$O(^DGCN(391.91,"C",INSTIEN,TFIEN)) Q:+TFIEN=0!(QFLG)  D
"RTN","DG53800P",40,0)
 . I $D(^XTMP("DG53800P","@@","FORCE STOP")) S QFLG=1 Q
"RTN","DG53800P",41,0)
 . S ^XTMP("DG53800P","@@","CURRENT IEN")=TFIEN
"RTN","DG53800P",42,0)
 . S DIE="^DGCN(391.91,",DA=TFIEN,DR=".08///^S X=VAL"
"RTN","DG53800P",43,0)
 . D ^DIE K DIE,DA,DR
"RTN","DG53800P",44,0)
 I QFLG S ^XTMP("DG53800P","@@","PROCESS STOPPED")=$$NOW^XLFDT() Q
"RTN","DG53800P",45,0)
 S ^XTMP("DG53800P","@@","PROCESS COMPLETED")=$$NOW^XLFDT()
"RTN","DG53800P",46,0)
 D MAIL
"RTN","DG53800P",47,0)
 Q
"RTN","DG53800P",48,0)
MAIL ;Send Mail message
"RTN","DG53800P",49,0)
 N PATCH,SITE,STATN,SITENM,MSG,XMDUZ,XMSUB,XMTEXT,XMY
"RTN","DG53800P",50,0)
 S PATCH="DG*5.3*800"
"RTN","DG53800P",51,0)
 S SITE=$$SITE^VASITE,STATN=$P($G(SITE),"^",3),SITENM=$P($G(SITE),"^",2)
"RTN","DG53800P",52,0)
 S (XMY(DUZ),XMY(.5))="",XMY("CHINTAN.NAIK@VA.GOV")="",XMY("PAULETTE.DAVIS@VA.GOV")=""
"RTN","DG53800P",53,0)
 S XMDUZ="MPI PATCH MONITOR",XMTEXT="MSG("
"RTN","DG53800P",54,0)
 S XMSUB="DG*5.3*800 - POST INIT - IPP FIELD UPDATE COMPLETE FOR SITE: "_STATN
"RTN","DG53800P",55,0)
 S MSG(1)="The DG*5.3*800 post-init process to update the IN-PERSON PROOFED (#.08) field in the TREATING FACILITY LIST (#391.91) file completed successfully."
"RTN","DG53800P",56,0)
 S MSG(1.5)=""
"RTN","DG53800P",57,0)
 S MSG(2)="Patch: "_PATCH
"RTN","DG53800P",58,0)
 S MSG(3)="Task: "_$G(^XTMP("DG53800P","@@","TASK"))
"RTN","DG53800P",59,0)
 S MSG(4)=""
"RTN","DG53800P",60,0)
 S MSG(5)="Site Station #: "_STATN
"RTN","DG53800P",61,0)
 S MSG(6)="Site Name: "_SITENM
"RTN","DG53800P",62,0)
 S MSG(7)=""
"RTN","DG53800P",63,0)
 S MSG(8)="Process Started at: "_$$FMTE^XLFDT($G(^XTMP("DG53800P","@@","PROCESS INIT STARTED")),"5P")
"RTN","DG53800P",64,0)
 S MSG(8.5)=""
"RTN","DG53800P",65,0)
 S MSG(9)="Process Completed at: "_$$FMTE^XLFDT($G(^XTMP("DG53800P","@@","PROCESS COMPLETED")),"5P")
"RTN","DG53800P",66,0)
 D ^XMD
"RTN","DG53800P",67,0)
 Q
"RTN","DG53800P",68,0)
STRTAGN ;Re run of process in case of process is stopped
"RTN","DG53800P",69,0)
 N RESTART
"RTN","DG53800P",70,0)
 S RESTART=1
"RTN","DG53800P",71,0)
 I '$$CHECK() Q
"RTN","DG53800P",72,0)
 D QUE
"RTN","DG53800P",73,0)
 Q
"RTN","DG53800P",74,0)
STOP ;Stop the process
"RTN","DG53800P",75,0)
 W !!,"Stop process"
"RTN","DG53800P",76,0)
 I '$D(^XTMP("DG53800P","@@","PROCESS STARTED")) W !,"<< No process is currently running >>" Q
"RTN","DG53800P",77,0)
 I $D(^XTMP("DG53800P","@@","PROCESS COMPLETED")) W !,"<< Process already completed >>" Q
"RTN","DG53800P",78,0)
 W !!,"Process is currently running."
"RTN","DG53800P",79,0)
 W ! S DIR(0)="Y",DIR("B")="Yes",DIR("A")="Do you want to stop this process" D ^DIR K DIR
"RTN","DG53800P",80,0)
 I +Y S ^XTMP("DG53800P","@@","FORCE STOP")=1
"RTN","DG53800P",81,0)
 K DIR,Y
"RTN","DG53800P",82,0)
 Q
"RTN","VAFCPTAD")
0^1^B64926627^B2093553
"RTN","VAFCPTAD",1,0)
VAFCPTAD ; ISA/RJS,Zoltan;BIR/PTD - ADD NEW PATIENT ENTRY ;APR 6, 1999
"RTN","VAFCPTAD",2,0)
 ;;5.3;Registration;**149,800**;Aug 13, 1993;Build 4
"RTN","VAFCPTAD",3,0)
 ;
"RTN","VAFCPTAD",4,0)
ADD(RETURN,PARAM) ;Add an entry to the PATIENT (#2) file for VOA
"RTN","VAFCPTAD",5,0)
 ;
"RTN","VAFCPTAD",6,0)
 ;Input
"RTN","VAFCPTAD",7,0)
 ;  PARAM = List of data to be used for the creation of a VistA
"RTN","VAFCPTAD",8,0)
 ;          PATIENT (#2) record at the Preferred Facility.
"RTN","VAFCPTAD",9,0)
 ;  
"RTN","VAFCPTAD",10,0)
 ;Required elements include:
"RTN","VAFCPTAD",11,0)
 ;  PARAM("PRFCLTY")=PREFERRED FACILITY
"RTN","VAFCPTAD",12,0)
 ;  PARAM("NAME")=NAME (last name minimal; recommend full name)
"RTN","VAFCPTAD",13,0)
 ;  PARAM("GENDER")=SEX
"RTN","VAFCPTAD",14,0)
 ;  PARAM("DOB")=DATE OF BIRTH
"RTN","VAFCPTAD",15,0)
 ;  PARAM("SSN")=SOCIAL SECURITY NUMBER OR NULL IF NONE
"RTN","VAFCPTAD",16,0)
 ;  PARAM("SRVCNCTD")=SERVICE CONNECTED?
"RTN","VAFCPTAD",17,0)
 ;  PARAM("TYPE")=TYPE
"RTN","VAFCPTAD",18,0)
 ;  PARAM("VET")=VETERAN (Y/N)?
"RTN","VAFCPTAD",19,0)
 ;  PARAM("FULLICN")=INTEGRATION CONTROL NUMBER AND CHECKSUM
"RTN","VAFCPTAD",20,0)
 ;
"RTN","VAFCPTAD",21,0)
 ;Optional elements include:
"RTN","VAFCPTAD",22,0)
 ;  PARAM("POBCTY")=PLACE OF BIRTH [CITY]
"RTN","VAFCPTAD",23,0)
 ;  PARAM("POBST")=PLACE OF BIRTH [STATE]
"RTN","VAFCPTAD",24,0)
 ;  PARAM("MMN")=MOTHER'S MAIDEN NAME
"RTN","VAFCPTAD",25,0)
 ;  PARAM("ALIAS",#)=ALIAS NAME(last^first^middle^suffix)^ALIAS SSN
"RTN","VAFCPTAD",26,0)
 ;
"RTN","VAFCPTAD",27,0)
 ;Output:
"RTN","VAFCPTAD",28,0)
 ;  On Failure:  -1^error text - record add failed
"RTN","VAFCPTAD",29,0)
 ;  On Success:   1^DFN of new PATIENT (#2) record
"RTN","VAFCPTAD",30,0)
 ;
"RTN","VAFCPTAD",31,0)
EN1 ;Check value of all required fields
"RTN","VAFCPTAD",32,0)
 N ALSERR,DIERR,DPTIDS,DPTX,ERROR,FLG,FDA,FN,LN,MN,RESULT,RGRSICN,SFX,VAL,VAFCA08,X,Y
"RTN","VAFCPTAD",33,0)
 N VAFCDFN,VAFCDOB,VAFCICN,VAFCMMN,VAFCNAM,VAFCPF,VAFCPOBC,VAFCPOBS
"RTN","VAFCPTAD",34,0)
 N VAFCRSN,VAFCSRV,VAFCSSN,VAFCSUM,VAFCSX,VAFCTYP,VAFCVET
"RTN","VAFCPTAD",35,0)
 K RETURN
"RTN","VAFCPTAD",36,0)
 S (RGRSICN,VAFCA08)=1 S FLG=0 ;allow update to ICN; prevent triggering of messages
"RTN","VAFCPTAD",37,0)
 ;
"RTN","VAFCPTAD",38,0)
 ;PREFERRED FACILITY
"RTN","VAFCPTAD",39,0)
 I $G(PARAM("PRFCLTY"))="" S RETURN(1)="-1^PREFERRED FACILITY is a required field." Q
"RTN","VAFCPTAD",40,0)
 I $G(PARAM("PRFCLTY"))'=$P($$SITE^VASITE(),"^",3) S RETURN(1)="-1^PREFERRED FACILITY is not the station to which the RPC was sent." Q
"RTN","VAFCPTAD",41,0)
 I $G(PARAM("PRFCLTY"))'="" S VAL=$G(PARAM("PRFCLTY")) D CHK^DIE(2,27.02,,VAL,.RESULT) I RESULT="^" S RETURN(1)="-1^"_^TMP("DIERR",$J,1,"TEXT",1) Q
"RTN","VAFCPTAD",42,0)
 S VAFCPF=VAL,FLG=1
"RTN","VAFCPTAD",43,0)
 ;
"RTN","VAFCPTAD",44,0)
 ;INTEGRATION CONTROL NUMBER and ICN CHECKSUM
"RTN","VAFCPTAD",45,0)
 I $G(PARAM("FULLICN"))="" S RETURN(1)="-1^Full INTEGRATION CONTROL NUMBER with ICN CHECKSUM is required." Q
"RTN","VAFCPTAD",46,0)
 I $G(PARAM("FULLICN"))'["V" S RETURN(1)="-1^Full INTEGRATION CONTROL NUMBER with ICN CHECKSUM is required." Q
"RTN","VAFCPTAD",47,0)
 I $G(PARAM("FULLICN"))'="" D
"RTN","VAFCPTAD",48,0)
 .S PARAM("ICN")=$P(PARAM("FULLICN"),"V")
"RTN","VAFCPTAD",49,0)
 .S PARAM("CHKSUM")=$P(PARAM("FULLICN"),"V",2)
"RTN","VAFCPTAD",50,0)
 I $G(PARAM("ICN"))'="" S VAL=$G(PARAM("ICN")) D CHK^DIE(2,991.01,,VAL,.RESULT) I RESULT="^" S RETURN(1)="-1^"_^TMP("DIERR",$J,1,"TEXT",1) Q
"RTN","VAFCPTAD",51,0)
 S VAFCICN=VAL,FLG=1
"RTN","VAFCPTAD",52,0)
 I $G(PARAM("CHKSUM"))'="" S VAL=$G(PARAM("CHKSUM")) D CHK^DIE(2,991.02,,VAL,.RESULT) I RESULT="^" S RETURN(1)="-1^"_^TMP("DIERR",$J,1,"TEXT",1) Q
"RTN","VAFCPTAD",53,0)
 S VAFCSUM=VAL,FLG=1
"RTN","VAFCPTAD",54,0)
 ;Has patient already been created at this facility?  If so get DFN and quit.
"RTN","VAFCPTAD",55,0)
 I $O(^DPT("AICN",PARAM("ICN"),0)) S RETURN(1)="1^"_$O(^DPT("AICN",PARAM("ICN"),0)) Q
"RTN","VAFCPTAD",56,0)
 ;
"RTN","VAFCPTAD",57,0)
 ;NAME INPUT AS:LAST^FIRST^MIDDLE^SUFFIX; MUST BE FORMATTED FOR VISTA INPUT
"RTN","VAFCPTAD",58,0)
 I $G(PARAM("NAME"))="" S RETURN(1)="-1^Patient NAME is a required field." Q
"RTN","VAFCPTAD",59,0)
 S LN=$P($G(PARAM("NAME")),"^"),FN=$P($G(PARAM("NAME")),"^",2),MN=$P($G(PARAM("NAME")),"^",3),SFX=$P($G(PARAM("NAME")),"^",4)
"RTN","VAFCPTAD",60,0)
 S PARAM("NAME")=LN_","
"RTN","VAFCPTAD",61,0)
 I FN'="" S PARAM("NAME")=PARAM("NAME")_FN
"RTN","VAFCPTAD",62,0)
 I MN'="" S PARAM("NAME")=PARAM("NAME")_" "_MN
"RTN","VAFCPTAD",63,0)
 I SFX'="" S PARAM("NAME")=PARAM("NAME")_" "_SFX
"RTN","VAFCPTAD",64,0)
 I $G(PARAM("NAME"))'="" S VAL=$G(PARAM("NAME")) D CHK^DIE(2,.01,,VAL,.RESULT) I RESULT="^" S RETURN(1)="-1^"_^TMP("DIERR",$J,1,"TEXT",1) Q
"RTN","VAFCPTAD",65,0)
 S VAFCNAM=VAL,FLG=1
"RTN","VAFCPTAD",66,0)
 S DPTX=VAL ;variable used by SSN input transform
"RTN","VAFCPTAD",67,0)
 ;
"RTN","VAFCPTAD",68,0)
 ;DATE OF BIRTH
"RTN","VAFCPTAD",69,0)
 I $G(PARAM("DOB"))="" S RETURN(1)="-1^DATE OF BIRTH is a required field." Q
"RTN","VAFCPTAD",70,0)
 I $G(PARAM("DOB"))'="" S VAL=$G(PARAM("DOB")) D CHK^DIE(2,.03,,VAL,.RESULT) I RESULT="^" S RETURN(1)="-1^"_^TMP("DIERR",$J,1,"TEXT",1) Q
"RTN","VAFCPTAD",71,0)
 S VAFCDOB=VAL,FLG=1
"RTN","VAFCPTAD",72,0)
 S DPTIDS(.03)=RESULT ;variable used by PSEUDO-SSN code
"RTN","VAFCPTAD",73,0)
 ;
"RTN","VAFCPTAD",74,0)
 ;SOCIAL SECURITY NUMBER not equal null; valid 9-digit number
"RTN","VAFCPTAD",75,0)
 I '$D(PARAM("SSN")) S RETURN(1)="-1^SOCIAL SECURITY NUMBER is a required field.  A null value may be sent." Q
"RTN","VAFCPTAD",76,0)
 I $G(PARAM("SSN"))'="" S VAL=$G(PARAM("SSN")) D CHK^DIE(2,.09,,VAL,.RESULT) I RESULT="^" S RETURN(1)="-1^"_^TMP("DIERR",$J,1,"TEXT",1) Q
"RTN","VAFCPTAD",77,0)
 I $G(PARAM("SSN"))'="" S VAFCSSN=VAL,FLG=1
"RTN","VAFCPTAD",78,0)
 I $G(PARAM("SSN"))="" D  ;SSN null, set PSEUDO SSN REASON=SSN UNKNOWN/FOLLOW-UP
"RTN","VAFCPTAD",79,0)
 .S PARAM("SSN")="P" ;PSEUDO SSN
"RTN","VAFCPTAD",80,0)
 .S PARAM("PSEUDO")="S" ;PSEUDO SSN REASON
"RTN","VAFCPTAD",81,0)
 .S VAFCSSN=$G(PARAM("SSN")),FLG=1
"RTN","VAFCPTAD",82,0)
 .;If SSN null, set PSEUDO SSN REASON (#.0906) =SSN UNKNOWN/FOLLOW-UP
"RTN","VAFCPTAD",83,0)
 .S VAFCRSN=$G(PARAM("PSEUDO")),FLG=1
"RTN","VAFCPTAD",84,0)
 ;
"RTN","VAFCPTAD",85,0)
 ;SEX
"RTN","VAFCPTAD",86,0)
 I $G(PARAM("GENDER"))="" S RETURN(1)="-1^GENDER is a required field." Q
"RTN","VAFCPTAD",87,0)
 I $G(PARAM("GENDER"))'="" S VAL=$G(PARAM("GENDER")) D CHK^DIE(2,.02,,VAL,.RESULT) I RESULT="^" S RETURN(1)="-1^"_^TMP("DIERR",$J,1,"TEXT",1) Q
"RTN","VAFCPTAD",88,0)
 S VAFCSX=VAL,FLG=1
"RTN","VAFCPTAD",89,0)
 ;
"RTN","VAFCPTAD",90,0)
 ;SERVICE CONNECTED?
"RTN","VAFCPTAD",91,0)
 I $G(PARAM("SRVCNCTD"))="" S RETURN(1)="-1^'SERVICE CONNECTED?' is a required field." Q
"RTN","VAFCPTAD",92,0)
 ;input set to either YES or NO on the MPI before RPC call; skip CHK^DIE
"RTN","VAFCPTAD",93,0)
 ;here as it resulted in error; expected DFN variable which is not yet set.
"RTN","VAFCPTAD",94,0)
 I $G(PARAM("SRVCNCTD"))'="" S VAFCSRV=$G(PARAM("SRVCNCTD"))
"RTN","VAFCPTAD",95,0)
 ;
"RTN","VAFCPTAD",96,0)
 ;TYPE
"RTN","VAFCPTAD",97,0)
 I $G(PARAM("TYPE"))="" S RETURN(1)="-1^Patient TYPE is a required field." Q
"RTN","VAFCPTAD",98,0)
 I $G(PARAM("TYPE"))'="" S VAL=$G(PARAM("TYPE")) D CHK^DIE(2,391,,VAL,.RESULT) I RESULT="^" S RETURN(1)="-1^"_^TMP("DIERR",$J,1,"TEXT",1) Q
"RTN","VAFCPTAD",99,0)
 S VAFCTYP=VAL,FLG=1
"RTN","VAFCPTAD",100,0)
 ;
"RTN","VAFCPTAD",101,0)
 ;VETERAN Y/N?
"RTN","VAFCPTAD",102,0)
 I $G(PARAM("VET"))="" S RETURN(1)="-1^'VETERAN Y/N?' is a required field." Q
"RTN","VAFCPTAD",103,0)
 ;input set to either YES or NO on the MPI before RPC call; skip CHK^DIE
"RTN","VAFCPTAD",104,0)
 ;here as it resulted in error; expected DFN variable which is not yet set.
"RTN","VAFCPTAD",105,0)
 I $G(PARAM("VET"))'="" S VAFCVET=$E($G(PARAM("VET")),1),FLG=1 ;internal format
"RTN","VAFCPTAD",106,0)
 ;
"RTN","VAFCPTAD",107,0)
 ;Optional - POB CITY
"RTN","VAFCPTAD",108,0)
 I $D(PARAM("POBCTY")) S VAL=$G(PARAM("POBCTY")) D CHK^DIE(2,.092,,VAL,.RESULT) I RESULT="^" S RETURN(1)="-1^"_^TMP("DIERR",$J,1,"TEXT",1) Q
"RTN","VAFCPTAD",109,0)
 I $D(PARAM("POBCTY")) S VAFCPOBC=VAL,FLG=1
"RTN","VAFCPTAD",110,0)
 ;
"RTN","VAFCPTAD",111,0)
 ;Optional - POB STATE
"RTN","VAFCPTAD",112,0)
 N STIEN,UNDEF S UNDEF=0
"RTN","VAFCPTAD",113,0)
 I $D(PARAM("POBST")) D  I UNDEF S RETURN(1)="-1^The value passed for PLACE OF BIRTH [STATE], "_PARAM("POBST")_", is not a valid STATE (#5) file entry." Q
"RTN","VAFCPTAD",114,0)
 .;Convert STATE ABBREVIATION into STATE NAME
"RTN","VAFCPTAD",115,0)
 .S STIEN=$O(^DIC(5,"C",PARAM("POBST"),0))
"RTN","VAFCPTAD",116,0)
 .I STIEN="" S UNDEF=1 Q
"RTN","VAFCPTAD",117,0)
 .I STIEN'="" S PARAM("POBST")=$P($G(^DIC(5,STIEN,0)),"^")
"RTN","VAFCPTAD",118,0)
 .S VAL=$G(PARAM("POBST"))
"RTN","VAFCPTAD",119,0)
 .D CHK^DIE(2,.093,,VAL,.RESULT) I RESULT="^" S RETURN(1)="-1^"_^TMP("DIERR",$J,1,"TEXT",1) Q
"RTN","VAFCPTAD",120,0)
 .S VAFCPOBS=VAL,FLG=1
"RTN","VAFCPTAD",121,0)
 ;
"RTN","VAFCPTAD",122,0)
 ;Optional - MOTHER'S MAIDEN NAME
"RTN","VAFCPTAD",123,0)
 I $D(PARAM("MMN")) S VAL=$G(PARAM("MMN")) D CHK^DIE(2,.2403,,VAL,.RESULT) I RESULT="^" S RETURN(1)="-1^"_^TMP("DIERR",$J,1,"TEXT",1) Q
"RTN","VAFCPTAD",124,0)
 I $D(PARAM("MMN")) S VAFCMMN=VAL,FLG=1
"RTN","VAFCPTAD",125,0)
 ;
"RTN","VAFCPTAD",126,0)
 I FLG=0 S RETURN(1)="-1^Required information is missing; please check input and try again." Q
"RTN","VAFCPTAD",127,0)
 ;Else ok to file entry
"RTN","VAFCPTAD",128,0)
FILE ;Call FILE^DICN to add new entry to PATIENT (#2) file
"RTN","VAFCPTAD",129,0)
 N DA,DIC,DR K DD,DO
"RTN","VAFCPTAD",130,0)
 S DIC="^DPT(",DIC(0)="FLZ",DLAYGO=2,X=VAFCNAM
"RTN","VAFCPTAD",131,0)
 S DIC("DR")=".09///"_VAFCSSN_";.03///"_VAFCDOB_";.02///"_VAFCSX_";391///"_VAFCTYP_";1901////"_VAFCVET_";.301///"_VAFCSRV_";991.01///"_VAFCICN_";991.02///"_VAFCSUM_";27.02///"_VAFCPF
"RTN","VAFCPTAD",132,0)
 I VAFCSSN="P" S DIC("DR")=DIC("DR")_";.0906///"_VAFCRSN
"RTN","VAFCPTAD",133,0)
 I $G(VAFCPOBC)'="" S DIC("DR")=DIC("DR")_";.092///"_VAFCPOBC
"RTN","VAFCPTAD",134,0)
 I $G(VAFCPOBS)'="" S DIC("DR")=DIC("DR")_";.093///"_VAFCPOBS
"RTN","VAFCPTAD",135,0)
 I $G(VAFCMMN)'="" S DIC("DR")=DIC("DR")_";.2403///"_VAFCMMN
"RTN","VAFCPTAD",136,0)
 L +^DPT(0):10
"RTN","VAFCPTAD",137,0)
 D FILE^DICN K DA,DIC,DD,DLAYGO,DO,DR
"RTN","VAFCPTAD",138,0)
 L -^DPT(0)
"RTN","VAFCPTAD",139,0)
 ;If record creation/update fails, return a -1^error text
"RTN","VAFCPTAD",140,0)
 I $P(Y,U,3)'=1 S RETURN(1)="-1^"_"Attempt to add patient "_VAFCNAM_" to the PATIENT (#2) file at station number "_$P($$SITE^VASITE,"^",3)_" failed." Q
"RTN","VAFCPTAD",141,0)
 S VAFCDFN=+Y
"RTN","VAFCPTAD",142,0)
 ;
"RTN","VAFCPTAD",143,0)
 ;File ALIAS multiple
"RTN","VAFCPTAD",144,0)
 I $D(PARAM("ALIAS")) D ALIAS  ;If ALIAS data is passed, call ALIAS module
"RTN","VAFCPTAD",145,0)
 I $G(ALSERR)="" S RETURN(1)="1^"_VAFCDFN  ;No errors for ALIAS, return DFN
"RTN","VAFCPTAD",146,0)
 I $G(ALSERR)'="" S RETURN(1)=ALSERR
"RTN","VAFCPTAD",147,0)
 Q
"RTN","VAFCPTAD",148,0)
 ;
"RTN","VAFCPTAD",149,0)
 ;
"RTN","VAFCPTAD",150,0)
ALIAS ;Optional - Add ALIAS and ALIAS SSN data for entry
"RTN","VAFCPTAD",151,0)
 ;Only occurs for a NEW record; there is no previous ALIAS data
"RTN","VAFCPTAD",152,0)
 I '$D(PARAM("ALIAS")) Q
"RTN","VAFCPTAD",153,0)
 ;ALIAS input comes in as: LAST^FIRST^MIDDLE^SUFFIX^SSN
"RTN","VAFCPTAD",154,0)
 N AFN,ALN,AMN,ASFX,ASSN,ERR,FDA,I,LOC,NUM
"RTN","VAFCPTAD",155,0)
 S (I,NUM)=0 F  S NUM=$O(PARAM("ALIAS",NUM)) Q:'NUM  D
"RTN","VAFCPTAD",156,0)
 .S ALN=$P($G(PARAM("ALIAS",NUM)),"^") Q:ALN=""  ;Last name minimal input
"RTN","VAFCPTAD",157,0)
 .S AFN=$P($G(PARAM("ALIAS",NUM)),"^",2)
"RTN","VAFCPTAD",158,0)
 .S AMN=$P($G(PARAM("ALIAS",NUM)),"^",3)
"RTN","VAFCPTAD",159,0)
 .S ASFX=$P($G(PARAM("ALIAS",NUM)),"^",4)
"RTN","VAFCPTAD",160,0)
 .S ASSN=$P($G(PARAM("ALIAS",NUM)),"^",5)
"RTN","VAFCPTAD",161,0)
 .;Change format for VistA input: LAST,FIRST MIDDLE SUFFIX^SSN
"RTN","VAFCPTAD",162,0)
 .S LOC(NUM)=ALN_","
"RTN","VAFCPTAD",163,0)
 .I AFN'="" S LOC(NUM)=LOC(NUM)_AFN
"RTN","VAFCPTAD",164,0)
 .I AMN'="" S LOC(NUM)=LOC(NUM)_" "_AMN
"RTN","VAFCPTAD",165,0)
 .I ASFX'="" S LOC(NUM)=LOC(NUM)_" "_ASFX
"RTN","VAFCPTAD",166,0)
 .S LOC(NUM)=LOC(NUM)_"^"
"RTN","VAFCPTAD",167,0)
 .I ASSN'="" S LOC(NUM)=LOC(NUM)_ASSN
"RTN","VAFCPTAD",168,0)
 .;Set FDA nodes
"RTN","VAFCPTAD",169,0)
 .S I=I+1 ;Unique sequence number for add to ALIAS SUB-FILE (#2.01
"RTN","VAFCPTAD",170,0)
 .S FDA(2.01,"+"_I_","_VAFCDFN_",",.01)=$P(LOC(NUM),"^") ; (#.01) ALIAS (name)
"RTN","VAFCPTAD",171,0)
 .I ASSN'="" S FDA(2.01,"+"_I_","_VAFCDFN_",",1)=$P(LOC(NUM),"^",2) ; (#1) ALIAS SSN
"RTN","VAFCPTAD",172,0)
 ;Update ALIAS multiple with new entries
"RTN","VAFCPTAD",173,0)
 I $D(FDA) D  ;We have ALIAS data to add
"RTN","VAFCPTAD",174,0)
 .S ALSERR=""
"RTN","VAFCPTAD",175,0)
 .L +^DPT(VAFCDFN):10
"RTN","VAFCPTAD",176,0)
 .D UPDATE^DIE("E","FDA",,"ERR")
"RTN","VAFCPTAD",177,0)
 .L -^DPT(VAFCDFN)
"RTN","VAFCPTAD",178,0)
 .I $D(ERR("DIERR")) S ALSERR="1^"_VAFCDFN_"^Patient "_PARAM("NAME")_" was successfully added at "_$P($$SITE^VASITE,"^",3)_".  However, the ALIAS data failed to update. Error message: "_$G(ERR("DIERR","1","TEXT",1)) Q
"RTN","VAFCPTAD",179,0)
 Q
"RTN","VAFCPTAD",180,0)
 ;
"RTN","VAFCTFIN")
0^3^B24080050^B22721949
"RTN","VAFCTFIN",1,0)
VAFCTFIN ;BIR/DR-TREATING FACILTIY MFU PROCESSING ROUTINE ; 2/23/09 4:43pm
"RTN","VAFCTFIN",2,0)
 ;;5.3;Registration;**428,474,520,639,707,800**;Aug 13, 1993;Build 4
"RTN","VAFCTFIN",3,0)
 ;Reference to EXC, START, and STOP^RGHLLOG supported by IA #2796
"RTN","VAFCTFIN",4,0)
 ;
"RTN","VAFCTFIN",5,0)
IN ;This entry point is used to process the Treating Facility Master File Update Message.
"RTN","VAFCTFIN",6,0)
 ;It is called by the VAFC MFN-M05 CLIENT processing routine when a MFN
"RTN","VAFCTFIN",7,0)
 ;message is received.
"RTN","VAFCTFIN",8,0)
 ;There are no inputs or outputs
"RTN","VAFCTFIN",9,0)
 ;
"RTN","VAFCTFIN",10,0)
 I HL("MTN")="MFK" D RSP Q
"RTN","VAFCTFIN",11,0)
 N VAFC,STATN,VAFCI,MSG,SG,VAFCARR,PDFN,INST,MFUPT,PDLT,TFIEN
"RTN","VAFCTFIN",12,0)
 N ICN,MFI,MFE,MFA,HLCOMP,CNT,X,VAFCERR,VAFCX
"RTN","VAFCTFIN",13,0)
 ;quit if Master Patient Index (MPI) is not installed
"RTN","VAFCTFIN",14,0)
 S X="MPIF001" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFIN",15,0)
 S X="MPIFQ0" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFIN",16,0)
 S X="RGRSBUL1" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFIN",17,0)
 S X="RGRSBULL" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFIN",18,0)
INIT ;Process in the Treating Facility MFN msg
"RTN","VAFCTFIN",19,0)
 F VAFCI=1:1 X HLNEXT Q:HLQUIT'>0  S (MSG,VAFC(VAFCI))=HLNODE,SG=$E(HLNODE,1,3) D:SG?2A1(1A,1N) PICK
"RTN","VAFCTFIN",20,0)
 ;reconcil the inbound TF list from the MPI to the local TF list
"RTN","VAFCTFIN",21,0)
 D RECONCIL
"RTN","VAFCTFIN",22,0)
 ;create response message
"RTN","VAFCTFIN",23,0)
 S CNT=1
"RTN","VAFCTFIN",24,0)
 S HLA("HLA",1)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_HL("FS") S CNT=CNT+1
"RTN","VAFCTFIN",25,0)
 S HLA("HLA",CNT)=MFI S CNT=CNT+1
"RTN","VAFCTFIN",26,0)
 S VAFCX=0 F  S VAFCX=$O(MFE(VAFCX)) Q:'VAFCX  S HLA("HLA",CNT)=MFE(VAFCX),CNT=CNT+1,HLA("HLA",CNT)=MFA(VAFCX),CNT=CNT+1
"RTN","VAFCTFIN",27,0)
 ;generate an application level ack (MFK) identifying the status of the adds/edits/deletes of TF's passed in
"RTN","VAFCTFIN",28,0)
 D ROUTE
"RTN","VAFCTFIN",29,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.VAFCERR,"",.HLP)
"RTN","VAFCTFIN",30,0)
 Q
"RTN","VAFCTFIN",31,0)
PICK ;check routine for segment entry point
"RTN","VAFCTFIN",32,0)
 I $T(@SG)]"" D @SG
"RTN","VAFCTFIN",33,0)
 I $T(@SG)="" Q
"RTN","VAFCTFIN",34,0)
 Q
"RTN","VAFCTFIN",35,0)
MSH ;;MSH
"RTN","VAFCTFIN",36,0)
 ;process the MSH segment
"RTN","VAFCTFIN",37,0)
 S (HLFS,HL("FS"))=$E(MSG,4),(HLECH,HL("ECH"))=$E(MSG,5,8)
"RTN","VAFCTFIN",38,0)
 S HLCOMP=$E(HL("ECH"),1)
"RTN","VAFCTFIN",39,0)
 S VAFCARR("SENDING SITE")=$P(MSG,HL("FS"),4)
"RTN","VAFCTFIN",40,0)
 Q
"RTN","VAFCTFIN",41,0)
EVN ;;EVN
"RTN","VAFCTFIN",42,0)
 ;process the EVN segment
"RTN","VAFCTFIN",43,0)
 S STATN=+$$SITE^VASITE()_"^"_$$FMDATE^HLFNC($P(MSG,HL("FS"),3))
"RTN","VAFCTFIN",44,0)
 Q
"RTN","VAFCTFIN",45,0)
PID ;;PID
"RTN","VAFCTFIN",46,0)
 ;process the PID segment
"RTN","VAFCTFIN",47,0)
 S PDFN=+$P(MSG,HL("FS"),4)
"RTN","VAFCTFIN",48,0)
 Q
"RTN","VAFCTFIN",49,0)
MFI ;;MFI
"RTN","VAFCTFIN",50,0)
 ;process the MFI segment
"RTN","VAFCTFIN",51,0)
 S MFI=MSG
"RTN","VAFCTFIN",52,0)
 S MFUPT=$P(MSG,HL("FS"),4)
"RTN","VAFCTFIN",53,0)
 S VAFCARR("CMOR")=$P($P(MSG,HL("FS"),8),$E(HL("ECH"),1))
"RTN","VAFCTFIN",54,0)
 Q
"RTN","VAFCTFIN",55,0)
MFE ;;MFE
"RTN","VAFCTFIN",56,0)
 ;process the MFE segment
"RTN","VAFCTFIN",57,0)
 N HLCOMP,NXTSGMT,TYPE
"RTN","VAFCTFIN",58,0)
 S HLCOMP=$E(HL("ECH"),1)
"RTN","VAFCTFIN",59,0)
 S PDLT=$$FMDATE^HLFNC($P(MSG,HL("FS"),4))
"RTN","VAFCTFIN",60,0)
 S ICN=$P($P(MSG,HL("FS"),5),HLCOMP,4)
"RTN","VAFCTFIN",61,0)
 S INST=$P($P(MSG,HL("FS"),5),HLCOMP)
"RTN","VAFCTFIN",62,0)
 S TYPE=$P(MSG,HL("FS"),2)
"RTN","VAFCTFIN",63,0)
 S MFE(INST)=MSG
"RTN","VAFCTFIN",64,0)
 S MFI(ICN,INST)=PDLT_"^^"_TYPE
"RTN","VAFCTFIN",65,0)
 Q
"RTN","VAFCTFIN",66,0)
ZET ;;ZET
"RTN","VAFCTFIN",67,0)
 ;process Patient's Date Last Treated Event Type, ZET segment
"RTN","VAFCTFIN",68,0)
 N PDLTET,IPP
"RTN","VAFCTFIN",69,0)
 S PDLTET=$P(MSG,HL("FS"),2)
"RTN","VAFCTFIN",70,0)
 S $P(MFI(ICN,INST),"^",2)=PDLTET
"RTN","VAFCTFIN",71,0)
 ;DG*5.3*800 - Process In-Person Proofed
"RTN","VAFCTFIN",72,0)
 S IPP=$P(MSG,HL("FS"),3) ;In-Person Proofed
"RTN","VAFCTFIN",73,0)
 S $P(MFI(ICN,INST),"^",6)=IPP
"RTN","VAFCTFIN",74,0)
 Q
"RTN","VAFCTFIN",75,0)
RSP ;response process logic entry point
"RTN","VAFCTFIN",76,0)
 Q
"RTN","VAFCTFIN",77,0)
ROUTE ;routing logic entry point
"RTN","VAFCTFIN",78,0)
 N MPI
"RTN","VAFCTFIN",79,0)
 S MPI=$$MPILINK^MPIFAPI() D
"RTN","VAFCTFIN",80,0)
 .I $P($G(MPI),U)'=-1 S HLL("LINKS",1)="VAFC MFN-M05 CLIENT"_"^"_MPI
"RTN","VAFCTFIN",81,0)
 .I $P($G(MPI),U)=-1 D
"RTN","VAFCTFIN",82,0)
 .. N RGLOG D START^RGHLLOG(HLMTIEN,"","")
"RTN","VAFCTFIN",83,0)
 .. D EXC^RGHLLOG(224,"No MPI link identified in CIRN SITE PARAMETER file (#991.8)",$G(PDFN))
"RTN","VAFCTFIN",84,0)
 .. D STOP^RGHLLOG(0)
"RTN","VAFCTFIN",85,0)
 Q
"RTN","VAFCTFIN",86,0)
TEST ;
"RTN","VAFCTFIN",87,0)
 W $$REPROC^HLUTIL(39266,"D IN^VAFCTFIN")
"RTN","VAFCTFIN",88,0)
 Q
"RTN","VAFCTFIN",89,0)
RECONCIL ;
"RTN","VAFCTFIN",90,0)
 N DFN,MFIC,VAFCX,VAFCY,TFL,CNFLT,LOCCMOR,VAFCTYPE
"RTN","VAFCTFIN",91,0)
 S CNFLT=0
"RTN","VAFCTFIN",92,0)
 S DFN=$$GETDFN^MPIF001(ICN)
"RTN","VAFCTFIN",93,0)
 I DFN'>0 S CNFLT=1_"^"_$P($G(DFN),"^",2)
"RTN","VAFCTFIN",94,0)
 I MFUPT="REP" I +CNFLT=0 D TFL^VAFCTFU1(.TFL,DFN) S VAFCX=0 F  S VAFCX=$O(TFL(VAFCX)) Q:'VAFCX  D
"RTN","VAFCTFIN",95,0)
 . S MFIC($P(TFL(VAFCX),"^"))=TFL(VAFCX) I '$D(MFI(ICN,$P(TFL(VAFCX),"^"))) D DEL(ICN,$P(TFL(VAFCX),"^"))
"RTN","VAFCTFIN",96,0)
 ;VAFCX=ICN and VAFCY=INSTITUTION
"RTN","VAFCTFIN",97,0)
 S VAFCX=0 F  S VAFCX=$O(MFI(VAFCX)) Q:'VAFCX  D
"RTN","VAFCTFIN",98,0)
 . S VAFCY=0 F  S VAFCY=$O(MFI(VAFCX,VAFCY)) Q:'VAFCY  D
"RTN","VAFCTFIN",99,0)
 ..S VAFCTYPE=$P(MFI(VAFCX,VAFCY),"^",3)
"RTN","VAFCTFIN",100,0)
 ..I +CNFLT=1 S MFA(VAFCY)="MFA"_HL("FS")_VAFCTYPE_HL("FS")_VAFCY_HL("FS")_$$HLDATE^HLFNC($$NOW^XLFDT)_HL("FS")_"U"_HLCOMP_$S(VAFCTYPE="MDL":"Delete of ",1:"Update of ")_VAFCY_" Failed at "_$P($$SITE^VASITE,"^",3)_" due to "_$P(CNFLT,"^",2)
"RTN","VAFCTFIN",101,0)
 ..I +CNFLT=0 I VAFCTYPE="MAD"!(VAFCTYPE="MUP") D ADDUPD(DFN,VAFCY,$P(MFI(VAFCX,VAFCY),"^"),$P(MFI(VAFCX,VAFCY),"^",2),$P(MFI(VAFCX,VAFCY),"^",6))
"RTN","VAFCTFIN",102,0)
 ..I +CNFLT=0 I VAFCTYPE="MDL" D DEL(ICN,VAFCY)
"RTN","VAFCTFIN",103,0)
 Q
"RTN","VAFCTFIN",104,0)
ADDUPD(DFN,INST,PDLT,PDLRTET,IPP) ;add or update TF entry
"RTN","VAFCTFIN",105,0)
 N ERROR,STA
"RTN","VAFCTFIN",106,0)
 S STA=INST
"RTN","VAFCTFIN",107,0)
 S INST=$$LKUP^XUAF4(INST)
"RTN","VAFCTFIN",108,0)
 D FILE^VAFCTFU(DFN,INST_"^"_$G(PDLT)_"^"_$G(PDLRTET),1,1,.ERROR,$G(IPP))
"RTN","VAFCTFIN",109,0)
 S MFA(STA)="MFA"_HL("FS")_"MUP"_HL("FS")_STA_HL("FS")_$$HLDATE^HLFNC($$NOW^XLFDT)_HL("FS")
"RTN","VAFCTFIN",110,0)
 I '$D(ERROR(STA)) S MFA(STA)=MFA(STA)_"S"
"RTN","VAFCTFIN",111,0)
 I $D(ERROR(STA)) S MFA(STA)=MFA(STA)_"U"_HLCOMP_ERROR(STA)_HL("FS")
"RTN","VAFCTFIN",112,0)
 Q
"RTN","VAFCTFIN",113,0)
DEL(ICN,INST) ;delete a TF entry
"RTN","VAFCTFIN",114,0)
 N ERROR,STA
"RTN","VAFCTFIN",115,0)
 S STA=INST
"RTN","VAFCTFIN",116,0)
 S INST=$$LKUP^XUAF4(INST)
"RTN","VAFCTFIN",117,0)
 S ERROR=$$DELETETF^VAFCTFU(ICN,INST)
"RTN","VAFCTFIN",118,0)
 S MFA(STA)="MFA"_HL("FS")_"MDL"_HL("FS")_STA_HL("FS")_$$HLDATE^HLFNC($$NOW^XLFDT)_HL("FS")
"RTN","VAFCTFIN",119,0)
 I +ERROR'=1 S MFA(STA)=MFA(STA)_"S"
"RTN","VAFCTFIN",120,0)
 I +ERROR=1 S MFA(STA)=MFA(STA)_"U"_HLCOMP_"Delete Failed: "_$P(ERROR,"^",2)
"RTN","VAFCTFIN",121,0)
 Q
"RTN","VAFCTFU")
0^4^B43187604^B41840382
"RTN","VAFCTFU",1,0)
VAFCTFU ;ALB/JLU-UTILITIES FOR THE TREATING FACILITY FILE 391.91 ; 2/23/09 4:44pm
"RTN","VAFCTFU",2,0)
 ;;5.3;Registration;**149,240,261,255,316,392,440,428,474,520,697,800**;Aug 13, 1993;Build 4
"RTN","VAFCTFU",3,0)
 ;
"RTN","VAFCTFU",4,0)
 ;Reference to EXC^RGHLLOG and STOP^RGHLLOG supported by IA #2796
"RTN","VAFCTFU",5,0)
 ;Reference to $$UPDATE^ MPIFAPI supported by IA #2706
"RTN","VAFCTFU",6,0)
 ;
"RTN","VAFCTFU",7,0)
 ;CHKSUB & GETSCN line tags removed, patch DG*5.3*697
"RTN","VAFCTFU",8,0)
 ;Subscriptions are no longer used and errors are being
"RTN","VAFCTFU",9,0)
 ;generated when attempting to add a subscription.
"RTN","VAFCTFU",10,0)
 ;
"RTN","VAFCTFU",11,0)
FILETF(PAT,INST) ;programmer entry point.
"RTN","VAFCTFU",12,0)
 ;INPUT   PAT - This is the patient's ICN
"RTN","VAFCTFU",13,0)
 ;       INST - This is the IEN of the institution or Treating Facility
"RTN","VAFCTFU",14,0)
 ;it also contains the date of treatment in FM format.  It is to be
"RTN","VAFCTFU",15,0)
 ;stored in an array structure to allow for multiple treating
"RTN","VAFCTFU",16,0)
 ;facilities.
"RTN","VAFCTFU",17,0)
 ;  EX.   X(1)=500^2960101
"RTN","VAFCTFU",18,0)
 ;        x(2)=425^2960202
"RTN","VAFCTFU",19,0)
 ;
"RTN","VAFCTFU",20,0)
 ;OUTPUT  0 (ZERO) If no errors
"RTN","VAFCTFU",21,0)
 ;        1^error description if there was an error.
"RTN","VAFCTFU",22,0)
 ;
"RTN","VAFCTFU",23,0)
 N PDFN,LP,VAFCER,X
"RTN","VAFCTFU",24,0)
 S VAFCER=0
"RTN","VAFCTFU",25,0)
 I '$G(PAT)!('$D(INST)) S VAFCER="1^Parameter missing." G FILETFQ
"RTN","VAFCTFU",26,0)
 I $D(@INST)<10 S VAFCER="1^Institution array not populated." G FILETFQ
"RTN","VAFCTFU",27,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T G FILETFQ
"RTN","VAFCTFU",28,0)
 S PDFN=$$GETDFN^MPIF001(PAT)
"RTN","VAFCTFU",29,0)
 I PDFN<0 S VAFCER="1^No patient DFN." G FILETFQ
"RTN","VAFCTFU",30,0)
 N FSTRG
"RTN","VAFCTFU",31,0)
 F LP=0:0 S LP=$O(@INST@(LP)) Q:'LP  D FILE(PDFN,@INST@(LP))
"RTN","VAFCTFU",32,0)
 ;
"RTN","VAFCTFU",33,0)
FILETFQ Q VAFCER
"RTN","VAFCTFU",34,0)
 ;
"RTN","VAFCTFU",35,0)
 ; both the SET & QUERYTF subroutines have been moved to VAFCTFU1 as
"RTN","VAFCTFU",36,0)
 ; the result of DG*5.3*261  *261 gjc@120899
"RTN","VAFCTFU",37,0)
 ;
"RTN","VAFCTFU",38,0)
FILE(PDFN,FSTRG,TICN,VAFCSLT,ERROR,IPP) ;this module files the individual entry
"RTN","VAFCTFU",39,0)
 ;PDFN is the patient's DFN
"RTN","VAFCTFU",40,0)
 ;FSTRG = institution or treating facility^Date of treatment^Event reason
"RTN","VAFCTFU",41,0)
 ;TICN - if 1 suppress add entries to ADT HL7 PIVOT (#391.71) file
"RTN","VAFCTFU",42,0)
 ;VAFCSLT - (optional) if 1 suppress exception logging and return error in the ERROR array
"RTN","VAFCTFU",43,0)
 ;ERROR - (optional) 
"RTN","VAFCTFU",44,0)
 ;Ex  500^2960202^A1
"RTN","VAFCTFU",45,0)
 ;
"RTN","VAFCTFU",46,0)
 N X,Y
"RTN","VAFCTFU",47,0)
 I $G(VAFCSLT)="" S VAFCSLT=0
"RTN","VAFCTFU",48,0)
 S X="MPIF001" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFU",49,0)
 S X="MPIFQ0" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFU",50,0)
 N TFIEN,PDLT,FAC,EVNTR,VAFCER,CMOR,ICN,STA,ECNT
"RTN","VAFCTFU",51,0)
 S ECNT=1
"RTN","VAFCTFU",52,0)
 S FAC=$P(FSTRG,U,1),PDLT=$P(FSTRG,U,2),EVNTR=$P(FSTRG,U,3)
"RTN","VAFCTFU",53,0)
 S STA=$$STA^XUAF4(FAC)
"RTN","VAFCTFU",54,0)
 ;
"RTN","VAFCTFU",55,0)
 I '$$FIND1^DIC(4,"","MX","`"_FAC) D  Q
"RTN","VAFCTFU",56,0)
 . I 'VAFCSLT D EXC^RGHLLOG(212,"Msg#"_$G(HL("MID"))_" unknown Institution IEN "_FAC_" passed into TF update.",PDFN) D STOP^RGHLLOG(1) Q
"RTN","VAFCTFU",57,0)
 . I VAFCSLT S ERROR(STA)="Update of "_STA_" Failed at "_$P($$SITE^VASITE,"^",3)_" due to unknown Institution IEN "_FAC_" passed into TF update."
"RTN","VAFCTFU",58,0)
 I PDLT'="" K %DT S %DT="T" S X=PDLT D ^%DT K %DT I Y<0 S VAFCER="1^Not a FM date." D  Q
"RTN","VAFCTFU",59,0)
 .I 'VAFCSLT D EXC^RGHLLOG(212,"TF updated in msg#"_$G(HL("MID"))_" for Institution IEN "_FAC_" but with invalid date "_PDLT_" for DFN "_PDFN,PDFN)
"RTN","VAFCTFU",60,0)
 .I VAFCSLT S ERROR(STA)="Update of "_STA_" Failed at "_$P($$SITE^VASITE,"^",3)_" due to invalid date "_PDLT_" for DFN "_PDFN
"RTN","VAFCTFU",61,0)
 ;removed code for adding local ICN's
"RTN","VAFCTFU",62,0)
 S ICN=+$$MPINODE^MPIFAPI(PDFN)
"RTN","VAFCTFU",63,0)
 S TFIEN=$O(^DGCN(391.91,"APAT",PDFN,FAC,0)) D
"RTN","VAFCTFU",64,0)
 .;TFIEN is used in other places so quit after adding new entry
"RTN","VAFCTFU",65,0)
 .I 'TFIEN D FILENEW(PDFN,FAC,PDLT,EVNTR,VAFCSLT,.ERROR,$G(IPP)) Q
"RTN","VAFCTFU",66,0)
 .I TFIEN D FILEDIT(TFIEN,PDLT,PDFN,FAC,EVNTR,VAFCSLT,.ERROR,$G(IPP))
"RTN","VAFCTFU",67,0)
 ;look to see if CMOR is in TF list if not add
"RTN","VAFCTFU",68,0)
 S CMOR=$$GETVCCI^MPIF001(PDFN)
"RTN","VAFCTFU",69,0)
 S CMOR=$$LKUP^XUAF4(CMOR) ; **520 REMOVED +
"RTN","VAFCTFU",70,0)
 ;check to see if CMOR exist if not add it
"RTN","VAFCTFU",71,0)
 I +$G(CMOR)>0 D:'$D(^DGCN(391.91,"APAT",PDFN,CMOR)) FILENEW^VAFCTFU(PDFN,CMOR)
"RTN","VAFCTFU",72,0)
 ;create the entry in the pivot to broadcast the MFU.
"RTN","VAFCTFU",73,0)
 ; Note: we will not broadcast to the MFU if the TFL record
"RTN","VAFCTFU",74,0)
 ; has an event reason. See comments in FILEDIT. *261 gjc@120199
"RTN","VAFCTFU",75,0)
 I $G(TICN)'=1,$P($$SEND^VAFHUTL,"^",2)>0 D SETSND(PDFN)
"RTN","VAFCTFU",76,0)
FILEQ Q
"RTN","VAFCTFU",77,0)
 ;
"RTN","VAFCTFU",78,0)
FILENEW(PDFN,FAC,PDLT,EVNTR,VAFCSLT,ERROR,IPP) ;
"RTN","VAFCTFU",79,0)
 N DGSENFLG ;**240 added y
"RTN","VAFCTFU",80,0)
 K DD,DO,DIC,DA,RESULT
"RTN","VAFCTFU",81,0)
 S DGSENFLG=""
"RTN","VAFCTFU",82,0)
 N FDA,FDAIEN,ERR S ERR=""
"RTN","VAFCTFU",83,0)
 I $G(EVNTR)'="" D CHK^DIE(391.91,.07,"",EVNTR,.RESULT) I +RESULT>0 S EVNTR=RESULT
"RTN","VAFCTFU",84,0)
 S FDA(1,391.91,"+1,",.01)=PDFN
"RTN","VAFCTFU",85,0)
 S FDA(1,391.91,"+1,",.02)=FAC
"RTN","VAFCTFU",86,0)
 S FDA(1,391.91,"+1,",.03)=$G(PDLT)
"RTN","VAFCTFU",87,0)
 S FDA(1,391.91,"+1,",.07)=$G(EVNTR)
"RTN","VAFCTFU",88,0)
 S FDA(1,391.91,"+1,",.08)=$G(IPP)
"RTN","VAFCTFU",89,0)
 L +^DGCN(391.91,0):30
"RTN","VAFCTFU",90,0)
 I '$D(^DGCN(391.91,"APAT",PDFN,FAC)) D UPDATE^DIE("","FDA(1)","FDAIEN","ERR") I $D(ERR("DIERR",1)) S ERROR(STA)="Add of "_STA_" Failed at "_$P($$SITE^VASITE,"^",3)_" due to "_$G(ERR("DIERR",1,"TEXT",1))
"RTN","VAFCTFU",91,0)
 ;removed code to add a subscription
"RTN","VAFCTFU",92,0)
 L -^DGCN(391.91,0)
"RTN","VAFCTFU",93,0)
 K DIC,DD,DO,DA
"RTN","VAFCTFU",94,0)
 Q
"RTN","VAFCTFU",95,0)
 ;
"RTN","VAFCTFU",96,0)
SETSND(PDFN) ;sets the pivot file entry to send MFU
"RTN","VAFCTFU",97,0)
 ;
"RTN","VAFCTFU",98,0)
 N ANS,X
"RTN","VAFCTFU",99,0)
 S X="MPIF001" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFU",100,0)
 ; check if other facilities other than CMOR in TF list
"RTN","VAFCTFU",101,0)
 N SIT,CMOR,STOP
"RTN","VAFCTFU",102,0)
 S CMOR=$$GETVCCI^MPIF001(PDFN)
"RTN","VAFCTFU",103,0)
 S CMOR=$$LKUP^XUAF4(CMOR) ; **520 REMOVED +
"RTN","VAFCTFU",104,0)
 I CMOR=$P($$SITE^VASITE,"^") D
"RTN","VAFCTFU",105,0)
 .S SIT=0
"RTN","VAFCTFU",106,0)
 .S SIT=$O(^DGCN(391.91,"APAT",PDFN,SIT))
"RTN","VAFCTFU",107,0)
 .I SIT=CMOR S SIT=$O(^DGCN(391.91,"APAT",PDFN,SIT)) I SIT="" S STOP=""
"RTN","VAFCTFU",108,0)
 I $D(STOP) QUIT
"RTN","VAFCTFU",109,0)
 S ANS=$$PIVNW^VAFHPIVT(PDFN,DT,5,PDFN_";DPT(")
"RTN","VAFCTFU",110,0)
 I 'ANS QUIT
"RTN","VAFCTFU",111,0)
 D XMITFLAG^VAFCDD01(0,+ANS,0)
"RTN","VAFCTFU",112,0)
SETSNDQ Q
"RTN","VAFCTFU",113,0)
 ;
"RTN","VAFCTFU",114,0)
FILEDIT(TFIEN,PDLT,PDFN,FAC,EVNTR,VAFCSLT,ERROR,IPP) ;
"RTN","VAFCTFU",115,0)
 N DGSENFLG,FDA,FDAIEN,ERR,RESULT S DGSENFLG="",ERR=""
"RTN","VAFCTFU",116,0)
 I $G(PDLT)'=""!($G(IPP)'="") D
"RTN","VAFCTFU",117,0)
 .S TFIEN(0)=$G(^DGCN(391.91,TFIEN,0))
"RTN","VAFCTFU",118,0)
 .I $G(EVNTR)'="" D CHK^DIE(391.91,.07,"",EVNTR,.RESULT) I +RESULT>0 S EVNTR=RESULT
"RTN","VAFCTFU",119,0)
 .I $G(PDLT)'="" S FDA(1,391.91,+TFIEN_",",.03)=$G(PDLT)
"RTN","VAFCTFU",120,0)
 .S FDA(1,391.91,+TFIEN_",",.07)=$G(EVNTR)
"RTN","VAFCTFU",121,0)
 .I $G(IPP)'="" S FDA(1,391.91,+TFIEN_",",.08)=$G(IPP)
"RTN","VAFCTFU",122,0)
 .D FILE^DIE("K","FDA(1)","ERR") I VAFCSLT I $D(ERR("DIERR",1)) S ERROR(STA)="Edit of "_STA_" Failed at "_$P($$SITE^VASITE,"^",3)_" due to "_$G(ERR("DIERR",1,"TEXT",1))
"RTN","VAFCTFU",123,0)
 ;remove code to add a subscription
"RTN","VAFCTFU",124,0)
 Q
"RTN","VAFCTFU",125,0)
 ;
"RTN","VAFCTFU",126,0)
DELETETF(PAT,INST) ;deletion entry point
"RTN","VAFCTFU",127,0)
 ;This entry point is used to delete a single Treating Facility from
"RTN","VAFCTFU",128,0)
 ;the Treating Facility list.
"RTN","VAFCTFU",129,0)
 ;INPUT  PAT - the ICN of the patient.
"RTN","VAFCTFU",130,0)
 ;       INST - the IEN of the institution to be deleted.
"RTN","VAFCTFU",131,0)
 ;
"RTN","VAFCTFU",132,0)
 ;OUTPUT  0 (zero) - If no errors
"RTN","VAFCTFU",133,0)
 ;        1^error description if there was a problem
"RTN","VAFCTFU",134,0)
 ;
"RTN","VAFCTFU",135,0)
 N VAFCER,PDFN,TFIEN,X,VAFCSCN,LINK,VAFCLLN,IEN
"RTN","VAFCTFU",136,0)
 S VAFCER=0
"RTN","VAFCTFU",137,0)
 I '$G(PAT)!('$G(INST)) S VAFCER="1^Parameter missing." S ERROR(INST)="212"_"^"_$G(HL("MID"))_"^"_"Delete Failed: "_$P(VAFCER,"^") G DELTFQ
"RTN","VAFCTFU",138,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T G FILETFQ
"RTN","VAFCTFU",139,0)
 S PDFN=$$GETDFN^MPIF001(+PAT)
"RTN","VAFCTFU",140,0)
 I PDFN<0 S VAFCER="1^No patient DFN." G FILETFQ
"RTN","VAFCTFU",141,0)
 I '$$FIND1^DIC(4,"","MX","`"_INST) S VAFCER="1^Not an Institution IEN." G DELTFQ
"RTN","VAFCTFU",142,0)
 S TFIEN=$O(^DGCN(391.91,"APAT",PDFN,INST,0))
"RTN","VAFCTFU",143,0)
 I 'TFIEN S VAFCER="1^Could not find Treating Facility." G DELTFQ
"RTN","VAFCTFU",144,0)
 D DELETE(TFIEN)
"RTN","VAFCTFU",145,0)
 S TFIEN=$O(^DGCN(391.91,"APAT",PDFN,INST,0))
"RTN","VAFCTFU",146,0)
 I TFIEN S VAFCER="1^DIK failed to delete entry" G DELTFQ
"RTN","VAFCTFU",147,0)
 ;terminate the subscription if there is one
"RTN","VAFCTFU",148,0)
 S VAFCSCN=+$P($$MPINODE^MPIFAPI(PDFN),"^",5) I +$G(VAFCSCN)>0 D
"RTN","VAFCTFU",149,0)
 .;get logical link
"RTN","VAFCTFU",150,0)
 . D LINK^HLUTIL3(INST,.LINK) S VAFCLLN=$O(LINK(0)) I +$G(VAFCLLN)>0 S VAFCLLN=LINK(VAFCLLN) D UPD^HLSUB(VAFCSCN,VAFCLLN,0,,$$NOW^XLFDT,,.HLER)
"RTN","VAFCTFU",151,0)
 D RETPDR^VAFCEHU2(PDFN,INST) ;**474 retire pdr when deleting tf
"RTN","VAFCTFU",152,0)
DELTFQ Q VAFCER
"RTN","VAFCTFU",153,0)
 ;
"RTN","VAFCTFU",154,0)
DELETE(TFIEN) ;the actual deletion code
"RTN","VAFCTFU",155,0)
 ;
"RTN","VAFCTFU",156,0)
 K DIK,DA
"RTN","VAFCTFU",157,0)
 S DIK="^DGCN(391.91,"
"RTN","VAFCTFU",158,0)
 S DA=TFIEN
"RTN","VAFCTFU",159,0)
 D ^DIK K DIK,DA
"RTN","VAFCTFU",160,0)
 Q
"RTN","VAFCTFU",161,0)
 ;
"RTN","VAFCTFU",162,0)
DELALLTF(PAT) ;Entry point to delete all Treating Facilities for a single
"RTN","VAFCTFU",163,0)
 ;patient.
"RTN","VAFCTFU",164,0)
 ;INPUT  PAT - The patient's ICN
"RTN","VAFCTFU",165,0)
 ;OUTPUT 0 (zero) - If no errors
"RTN","VAFCTFU",166,0)
 ;       1^error description if an error
"RTN","VAFCTFU",167,0)
 ;
"RTN","VAFCTFU",168,0)
 N VAFCER,PDFN,LP,TFIEN,X
"RTN","VAFCTFU",169,0)
 S VAFCER=0
"RTN","VAFCTFU",170,0)
 I '$G(PAT) Q "1^Parameter missing."
"RTN","VAFCTFU",171,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T Q 0
"RTN","VAFCTFU",172,0)
 S PDFN=$$GETDFN^MPIF001(PAT)
"RTN","VAFCTFU",173,0)
 I PDFN<0 Q "1^No patient DFN."
"RTN","VAFCTFU",174,0)
 F LP=0:0 S LP=$O(^DGCN(391.91,"APAT",PDFN,LP)) Q:LP'>0  D
"RTN","VAFCTFU",175,0)
 . S TFIEN=0
"RTN","VAFCTFU",176,0)
 . F  S TFIEN=$O(^DGCN(391.91,"APAT",PDFN,LP,TFIEN)) Q:TFIEN'>0  D DELETE(TFIEN)
"RTN","VAFCTFU",177,0)
 ;
"RTN","VAFCTFU",178,0)
 Q VAFCER
"RTN","VAFCTFU",179,0)
 ;
"RTN","VAFCTFU1")
0^5^B9951191^B9279546
"RTN","VAFCTFU1",1,0)
VAFCTFU1 ;BHM/RGY-Utilities for the Treating Facility file 391.91, CONTINUED ; 7/27/09 6:16pm
"RTN","VAFCTFU1",2,0)
 ;;5.3;Registration;**261,392,448,449,800**;Aug 13, 1993;Build 4
"RTN","VAFCTFU1",3,0)
TFL(LIST,DFN) ;for dfn get list of treating facilities
"RTN","VAFCTFU1",4,0)
 NEW X,ICN,DA,DR,VAFCTFU1,DIC,DIQ,VAFC
"RTN","VAFCTFU1",5,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T S LIST(1)="-1^MPI Not Installed" Q
"RTN","VAFCTFU1",6,0)
 S DR=".01;13;99",DIC=4,DIQ(0)="E",DIQ="VAFCTFU1" ;**448
"RTN","VAFCTFU1",7,0)
 S ICN=$$GETICN^MPIF001(DFN)
"RTN","VAFCTFU1",8,0)
 I ICN<0 S LIST(1)=ICN Q
"RTN","VAFCTFU1",9,0)
 S X=$$QUERYTF($P(ICN,"V"),"LIST",0)
"RTN","VAFCTFU1",10,0)
 I $P(X,U)="1" S LIST(1)="-1"_U_$P(X,U,2) Q
"RTN","VAFCTFU1",11,0)
 F VAFC=0:0 S VAFC=$O(LIST(VAFC)) Q:VAFC=""  D
"RTN","VAFCTFU1",12,0)
 .K VAFCTFU1
"RTN","VAFCTFU1",13,0)
 .S DA=+LIST(VAFC)
"RTN","VAFCTFU1",14,0)
 .D EN^DIQ1
"RTN","VAFCTFU1",15,0)
 .S LIST(VAFC)=VAFCTFU1(4,+LIST(VAFC),99,"E")_"^"_VAFCTFU1(4,+LIST(VAFC),.01,"E")_"^"_$P(LIST(VAFC),"^",2)_"^"_$P(LIST(VAFC),"^",3)_"^"_VAFCTFU1(4,+LIST(VAFC),13,"E") ;**448
"RTN","VAFCTFU1",16,0)
 .Q
"RTN","VAFCTFU1",17,0)
 Q
"RTN","VAFCTFU1",18,0)
GETICN(RESULT,DFN) ;
"RTN","VAFCTFU1",19,0)
 S RESULT=$$GETICN^MPIF001(DFN)
"RTN","VAFCTFU1",20,0)
 Q
"RTN","VAFCTFU1",21,0)
GETDFN(RESULT,ICN) ;
"RTN","VAFCTFU1",22,0)
 S RESULT=$$GETDFN^MPIF001(ICN)
"RTN","VAFCTFU1",23,0)
 Q
"RTN","VAFCTFU1",24,0)
IFLOCAL(RESULT,DFN) ;
"RTN","VAFCTFU1",25,0)
 S RESULT=$$IFLOCAL^MPIF001(DFN)
"RTN","VAFCTFU1",26,0)
 Q
"RTN","VAFCTFU1",27,0)
 ;
"RTN","VAFCTFU1",28,0)
SET(TFIEN,ARY,CTR) ;This sets the array with the treating facility list.
"RTN","VAFCTFU1",29,0)
 ; Returns: treating facility ^ treatment date ^ event reason (if any)
"RTN","VAFCTFU1",30,0)
 ; *261 gjc@120899 (formerly part of VAFCTFU prior to DG*5.3*261)
"RTN","VAFCTFU1",31,0)
 N DGCN,INSTIEN,LSTA S DGCN(0)=$G(^DGCN(391.91,TFIEN,0))
"RTN","VAFCTFU1",32,0)
 ;** DG*5.3*800 - (ckn) - Quit if IPP field is not set for 200MH record
"RTN","VAFCTFU1",33,0)
 S INSTIEN=$P($G(DGCN(0)),"^",2),LSTA=$$STA^XUAF4(INSTIEN)
"RTN","VAFCTFU1",34,0)
 I $E(LSTA,1,5)="200MH",$P($G(DGCN(0)),"^",8)'=1 Q
"RTN","VAFCTFU1",35,0)
 S CTR=CTR+1,@ARY@(CTR)=$P(DGCN(0),U,2,3)_U_$P(DGCN(0),U,7)
"RTN","VAFCTFU1",36,0)
 Q
"RTN","VAFCTFU1",37,0)
 ;
"RTN","VAFCTFU1",38,0)
QUERYTF(PAT,ARY,INDX) ;a query for Treating Facility.
"RTN","VAFCTFU1",39,0)
 ;INPUT   PAT - The patient's ICN
"RTN","VAFCTFU1",40,0)
 ;        ARY - The array in which to return the Treating facility info.
"RTN","VAFCTFU1",41,0)
 ;        INDX (optional) - the index to $O through.  APAT for patient
"RTN","VAFCTFU1",42,0)
 ;        information linked to treating facilities, AEVN for patient
"RTN","VAFCTFU1",43,0)
 ;        info linked with an event reason.  INDX=1 if AEVN is used,
"RTN","VAFCTFU1",44,0)
 ;        else APAT is used. *261 gjc@120399
"RTN","VAFCTFU1",45,0)
 ;
"RTN","VAFCTFU1",46,0)
 ;OUTPUT  A list of the Treating Facilities in the array provided from
"RTN","VAFCTFU1",47,0)
 ;        the parameter.  It will be in the structure of x(1), x(2) etc.
"RTN","VAFCTFU1",48,0)
 ;  Ex  X(1)=500^2960101^ptr to ADT/HL7 Event Reason file (if exists)
"RTN","VAFCTFU1",49,0)
 ;    Where the first piece is the IEN of the institution, the second
"RTN","VAFCTFU1",50,0)
 ;    piece is the current date on record for that institution and the
"RTN","VAFCTFU1",51,0)
 ;    third piece is the event reason (if it exists).  Note: A04 & A08
"RTN","VAFCTFU1",52,0)
 ;    events do not file an event reason when adding to the TREATING
"RTN","VAFCTFU1",53,0)
 ;    FACILITY LIST (#391.91) file, thus returning null in the third
"RTN","VAFCTFU1",54,0)
 ;    piece. *261 gjc@120199
"RTN","VAFCTFU1",55,0)
 ;
"RTN","VAFCTFU1",56,0)
 ;    This is also a function call.  If there is an error then a 
"RTN","VAFCTFU1",57,0)
 ;    1^error description will be returned. 
"RTN","VAFCTFU1",58,0)
 ;
"RTN","VAFCTFU1",59,0)
 ;  *** If no data is found the array will not be populated and
"RTN","VAFCTFU1",60,0)
 ;  a 1^error description will be returned.
"RTN","VAFCTFU1",61,0)
 ;
"RTN","VAFCTFU1",62,0)
 N PDFN,VAFCER,LP,CTR
"RTN","VAFCTFU1",63,0)
 I '$G(PAT)!('$D(ARY)) S VAFCER="1^Parameter missing." G QUERYTFQ
"RTN","VAFCTFU1",64,0)
 S VAFCER=0,CTR=0,INDX=$G(INDX)
"RTN","VAFCTFU1",65,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T G QUERYTFQ
"RTN","VAFCTFU1",66,0)
 S PDFN=$$GETDFN^MPIF001(PAT)
"RTN","VAFCTFU1",67,0)
 I PDFN<0 S VAFCER="1^No patient DFN." G QUERYTFQ
"RTN","VAFCTFU1",68,0)
 ; determine the index to $O through, based on the value of INDX
"RTN","VAFCTFU1",69,0)
 I 'INDX F LP=0:0 S LP=$O(^DGCN(391.91,"APAT",PDFN,LP)) Q:'LP  S TFIEN=$O(^(LP,"")) D SET(TFIEN,ARY,.CTR)
"RTN","VAFCTFU1",70,0)
 I INDX S LP=0 F  S LP=$O(^DGCN(391.91,"AEVN",PDFN,LP)) Q:'LP  D
"RTN","VAFCTFU1",71,0)
 .; please note the following: the AEVN xref is subscripted by pat. dfn
"RTN","VAFCTFU1",72,0)
 .; event reason ptr, and the ien of the TFL file.  It is possible
"RTN","VAFCTFU1",73,0)
 .; that a patient may have numerous admission/discharges at different
"RTN","VAFCTFU1",74,0)
 .; treating facilities, thus the looping through the TFIEN (TFL ien)
"RTN","VAFCTFU1",75,0)
 .; subscript. *261 gjc@120399
"RTN","VAFCTFU1",76,0)
 .S TFIEN=0 F  S TFIEN=$O(^DGCN(391.91,"AEVN",PDFN,LP,TFIEN)) Q:'TFIEN  D SET(TFIEN,ARY,.CTR)
"RTN","VAFCTFU1",77,0)
 .Q
"RTN","VAFCTFU1",78,0)
 I $D(@ARY)'>9 S VAFCER="1^Could not find Treating Facilities"
"RTN","VAFCTFU1",79,0)
QUERYTFQ Q VAFCER
"VER")
8.0^22.0
"^DD",391.91,391.91,.08,0)
IN-PERSON PROOFED^S^1:YES;0:NO;^0;8^Q
"^DD",391.91,391.91,.08,.1)
In-Person Proofed
"^DD",391.91,391.91,.08,3)
Enter YES when the In-Person Authentication process is completed.
"^DD",391.91,391.91,.08,21,0)
^.001^15^15^3081114^^
"^DD",391.91,391.91,.08,21,1,0)
A registered MyHealtheVet user can request In-Person Authentication.  The 
"^DD",391.91,391.91,.08,21,2,0)
user must be an established patient of a VA facility and place his/her 
"^DD",391.91,391.91,.08,21,3,0)
request at any VA facility in person presenting two picture IDs, signing 
"^DD",391.91,391.91,.08,21,4,0)
a consent form, as well as participating in an orientation/education 
"^DD",391.91,391.91,.08,21,5,0)
session.
"^DD",391.91,391.91,.08,21,6,0)
  
"^DD",391.91,391.91,.08,21,7,0)
When the In-Person Authentication process is complete, the IN-PERSON 
"^DD",391.91,391.91,.08,21,8,0)
PROOFED field is updated to YES.  This allows the MyHealtheVet system to 
"^DD",391.91,391.91,.08,21,9,0)
be viewed via CPRS Remote Data Views and/or VistAWeb, providing the 
"^DD",391.91,391.91,.08,21,10,0)
ability to view the electronic medical record using the on-line 
"^DD",391.91,391.91,.08,21,11,0)
MyHealtheVet web portal.
"^DD",391.91,391.91,.08,21,12,0)
  
"^DD",391.91,391.91,.08,21,13,0)
In the event that Authentication is revoked, the IN-PERSON PROOFED field 
"^DD",391.91,391.91,.08,21,14,0)
is changed to NO, and the MyHealtheVet system is removed as a Treating 
"^DD",391.91,391.91,.08,21,15,0)
Facility.
"^DD",391.91,391.91,.08,"DT")
3081114
"BLD",2693,6)
^726
**END**
**END**
