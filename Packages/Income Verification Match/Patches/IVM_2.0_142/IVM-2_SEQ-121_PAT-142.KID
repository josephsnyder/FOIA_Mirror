Released IVM*2*142 SEQ #121
Extracted from mail message
**KIDS**:IVM*2.0*142^

**INSTALL NAME**
IVM*2.0*142
"BLD",7628,0)
IVM*2.0*142^INCOME VERIFICATION MATCH^0^3091014^y
"BLD",7628,1,0)
^^1^1^3091006^
"BLD",7628,1,1,0)
This patch prevents test patients from sending Z07 transmissions.
"BLD",7628,4,0)
^9.64PA^^
"BLD",7628,6.3)
3
"BLD",7628,"ABPKG")
n
"BLD",7628,"KRN",0)
^9.67PA^779.2^20
"BLD",7628,"KRN",.4,0)
.4
"BLD",7628,"KRN",.401,0)
.401
"BLD",7628,"KRN",.402,0)
.402
"BLD",7628,"KRN",.403,0)
.403
"BLD",7628,"KRN",.5,0)
.5
"BLD",7628,"KRN",.84,0)
.84
"BLD",7628,"KRN",3.6,0)
3.6
"BLD",7628,"KRN",3.8,0)
3.8
"BLD",7628,"KRN",9.2,0)
9.2
"BLD",7628,"KRN",9.8,0)
9.8
"BLD",7628,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",7628,"KRN",9.8,"NM",1,0)
IVMPTRN7^^0^B9163420
"BLD",7628,"KRN",9.8,"NM","B","IVMPTRN7",1)

"BLD",7628,"KRN",19,0)
19
"BLD",7628,"KRN",19.1,0)
19.1
"BLD",7628,"KRN",101,0)
101
"BLD",7628,"KRN",409.61,0)
409.61
"BLD",7628,"KRN",771,0)
771
"BLD",7628,"KRN",779.2,0)
779.2
"BLD",7628,"KRN",870,0)
870
"BLD",7628,"KRN",8989.51,0)
8989.51
"BLD",7628,"KRN",8989.52,0)
8989.52
"BLD",7628,"KRN",8994,0)
8994
"BLD",7628,"KRN","B",.4,.4)

"BLD",7628,"KRN","B",.401,.401)

"BLD",7628,"KRN","B",.402,.402)

"BLD",7628,"KRN","B",.403,.403)

"BLD",7628,"KRN","B",.5,.5)

"BLD",7628,"KRN","B",.84,.84)

"BLD",7628,"KRN","B",3.6,3.6)

"BLD",7628,"KRN","B",3.8,3.8)

"BLD",7628,"KRN","B",9.2,9.2)

"BLD",7628,"KRN","B",9.8,9.8)

"BLD",7628,"KRN","B",19,19)

"BLD",7628,"KRN","B",19.1,19.1)

"BLD",7628,"KRN","B",101,101)

"BLD",7628,"KRN","B",409.61,409.61)

"BLD",7628,"KRN","B",771,771)

"BLD",7628,"KRN","B",779.2,779.2)

"BLD",7628,"KRN","B",870,870)

"BLD",7628,"KRN","B",8989.51,8989.51)

"BLD",7628,"KRN","B",8989.52,8989.52)

"BLD",7628,"KRN","B",8994,8994)

"BLD",7628,"QUES",0)
^9.62^^
"BLD",7628,"REQB",0)
^9.611^1^1
"BLD",7628,"REQB",1,0)
IVM*2.0*115^1
"BLD",7628,"REQB","B","IVM*2.0*115",1)

"MBREQ")
0
"PKG",220,-1)
1^1
"PKG",220,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",220,20,0)
^9.402P^^
"PKG",220,22,0)
^9.49I^1^1
"PKG",220,22,1,0)
2.0^2941021
"PKG",220,22,1,"PAH",1,0)
142^3091014
"PKG",220,22,1,"PAH",1,1,0)
^^1^1^3091014
"PKG",220,22,1,"PAH",1,1,1,0)
This patch prevents test patients from sending Z07 transmissions.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","IVMPTRN7")
0^1^B9163420^B8730852
"RTN","IVMPTRN7",1,0)
IVMPTRN7 ;ALB/KCL/CJM/PHH/BAJ,TDM - HL7 FULL DATA TRANSMISSION (Z07) BUILDER ; 8/15/08 10:30am
"RTN","IVMPTRN7",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**9,11,24,34,74,88,105,115,142**;OCT 21, 1994;Build 3
"RTN","IVMPTRN7",3,0)
 ;
"RTN","IVMPTRN7",4,0)
 ;
"RTN","IVMPTRN7",5,0)
FULL(DFN,IVMMTDT,EVENTS,IVMCT,IVMGTOT,IVMFLL,IVMNOMSH,IVMREC,IVMQUERY) ;
"RTN","IVMPTRN7",6,0)
 ;Description: This entry point will be used to create an HL7 "Full Data Transmission" message for a patient.   Transmission of these messages will be in a batch of 1-100 individual HL7 messages.
"RTN","IVMPTRN7",7,0)
 ;
"RTN","IVMPTRN7",8,0)
 ;Input:
"RTN","IVMPTRN7",9,0)
 ;  DFN - Patient IEN
"RTN","IVMPTRN7",10,0)
 ;  IVMMTDT - date of the patient's Means Test or Copay Test
"RTN","IVMPTRN7",11,0)
 ;  EVENTS () - an array of reasons for transmission, pass by reference.
"RTN","IVMPTRN7",12,0)
 ;  EVENTS("IVM") = 1 if transmission due to IVM criteria, 0 otherwise
"RTN","IVMPTRN7",13,0)
 ;  EVENTS(" "DCD")=1 if transmission due to DCD criteria, 0 otherwise
"RTN","IVMPTRN7",14,0)
 ;  EVENTS("ENROLL")=1 if transmission due to enrollment criteria, 0 otherwise
"RTN","IVMPTRN7",15,0)
 ;  IVMCT - count of segments transmitted, pass by reference
"RTN","IVMPTRN7",16,0)
 ;  IVMGTOT - count of batchs transmitted, pass by reference
"RTN","IVMPTRN7",17,0)
 ;  IVMFLL - (optional), flag for creating MSA, QRD segments for FULL query transmission, $G(IVMFLL) means yes
"RTN","IVMPTRN7",18,0)
 ;  IVMNOMSH - (optional), if IVMNOMSH=1, means the MSH segment should not be built
"RTN","IVMPTRN7",19,0)
 ;  IVMREC - (optional), if $G(IVMFLL), then this variable will contain the internal entry number of Query Income Year #301.9001 mult.
"RTN","IVMPTRN7",20,0)
 ;  IVMQUERY - array passed in by reference where
"RTN","IVMPTRN7",21,0)
 ;    IVMQUERY("LTD") -- # of the QUERY that is currently open or
"RTN","IVMPTRN7",22,0)
 ;                undefined, zero, or null if no QUERY opened for
"RTN","IVMPTRN7",23,0)
 ;                last treatment date
"RTN","IVMPTRN7",24,0)
 ;    IVMQUERY("OVIS") -- # of the QUERY that is currently open or
"RTN","IVMPTRN7",25,0)
 ;                undefined, zero, or null if no QUERY opened for
"RTN","IVMPTRN7",26,0)
 ;                finding outpatient visits
"RTN","IVMPTRN7",27,0)
 ;
"RTN","IVMPTRN7",28,0)
 ;HL7 variables as defined by call to INIT^IVMUFNC:
"RTN","IVMPTRN7",29,0)
 ;  HLEVN - HL7 message event counter 
"RTN","IVMPTRN7",30,0)
 ;  HLSDT - a flag that indicates that the data to be sent is stored in the ^TMP("HLS") global array.
"RTN","IVMPTRN7",31,0)
 ;
"RTN","IVMPTRN7",32,0)
 ;The following variables returned by the INIT^HLTRANS entry point:
"RTN","IVMPTRN7",33,0)
 ;  HLNDAP - Non-DHCP Application Pointer from file 770
"RTN","IVMPTRN7",34,0)
 ;  HLNDAP0 - Zero node from file 770 corresponding to HLNDAP
"RTN","IVMPTRN7",35,0)
 ;  HLDAP - DHCP Application Pointer from file 771
"RTN","IVMPTRN7",36,0)
 ;  HLDAN - The DHCP Application Name (.01 field, file 771) for HLDAP
"RTN","IVMPTRN7",37,0)
 ;  HLPID - HL7 processing ID from file 770
"RTN","IVMPTRN7",38,0)
 ;  HLVER - HL7 version number from file 770
"RTN","IVMPTRN7",39,0)
 ;  HLFS - HL7 Field Separater from the 'FS' node of file 771
"RTN","IVMPTRN7",40,0)
 ;  HLECH - HL7 Encoding Characters from the 'EC' node of file 771
"RTN","IVMPTRN7",41,0)
 ;  HLQ - Double quotes ("") for use in building HL7 segments
"RTN","IVMPTRN7",42,0)
 ;  HLERR - if an error is encountered, an error message is returned in the HLERR variable.
"RTN","IVMPTRN7",43,0)
 ;  HLDA - the internal entry number for the entry created in file 772
"RTN","IVMPTRN7",44,0)
 ;
"RTN","IVMPTRN7",45,0)
 ;  HLDT - the transmission date/time (associated with the entry in in file 772 identified by HLDA) in internal VA FileMan format.
"RTN","IVMPTRN7",46,0)
 ;  HLDT1 - the same transmission date/time as the HLDT variable, only in HL7 format.
"RTN","IVMPTRN7",47,0)
 ;
"RTN","IVMPTRN7",48,0)
 ;Output:
"RTN","IVMPTRN7",49,0)
 ;  ^TMP("HLS",$J,IVMCT) - global array containing all segments of the HL7 message that the VistA application wishes to send.  The HLSDT variable is defined above and the IVMCT variable is a sequential number starting at 1.
"RTN","IVMPTRN7",50,0)
 ;
"RTN","IVMPTRN7",51,0)
 N DGREL,DGINC,DR,I,IVMI,IVMDFN,IVMHLMID,IVMNTE,IVMPAT,IVMQRD,X,IVMCNTID
"RTN","IVMPTRN7",52,0)
 ;
"RTN","IVMPTRN7",53,0)
 ; IVM*2.0*142  Quit if test patient unless ^XTMP("IVMTST","Z07",DFN) set and user wishes test patient to send a Z07 for testing purpose.
"RTN","IVMPTRN7",54,0)
 I $$TESTPAT^VADPT(DFN) Q:'$D(^XTMP("IVMTST","Z07",DFN))
"RTN","IVMPTRN7",55,0)
 ; IVM*2.0*105 BAJ 10/20/2005
"RTN","IVMPTRN7",56,0)
 ; Do Z07 Consistency checks and, if fail, prevent Z07 Build
"RTN","IVMPTRN7",57,0)
 I '$$EN^IVMZ07C(DFN) Q
"RTN","IVMPTRN7",58,0)
 ;
"RTN","IVMPTRN7",59,0)
 ; INITIALIZE HL7 1.6 VARIABLES
"RTN","IVMPTRN7",60,0)
 D INIT^HLFNC2(HLEID,.HL)
"RTN","IVMPTRN7",61,0)
 ;
"RTN","IVMPTRN7",62,0)
 ; quit if Pseudo SSN and not verified
"RTN","IVMPTRN7",63,0)
 ; Q:'$$SNDPSSN(DFN)   ;Removed by IVM*2*105
"RTN","IVMPTRN7",64,0)
 ; 
"RTN","IVMPTRN7",65,0)
 S DGPRIM=$$GET1^DIQ(2,DFN_",",.361)
"RTN","IVMPTRN7",66,0)
 I $G(DGPRIM)]"" S DGPRIM=$O(^DIC(8,"B",DGPRIM,0))
"RTN","IVMPTRN7",67,0)
 I $G(DGPRIM)]"" S DGPRIM=$P($G(^DIC(8,DGPRIM,0)),U,9)
"RTN","IVMPTRN7",68,0)
 I $G(DGPRIM)=14 D REM Q
"RTN","IVMPTRN7",69,0)
 ;
"RTN","IVMPTRN7",70,0)
 ; if count=0 and not first batch
"RTN","IVMPTRN7",71,0)
 ;RMC;I IVMCT=0,$G(IVMGTOT) D FILE^HLTF
"RTN","IVMPTRN7",72,0)
 ;
"RTN","IVMPTRN7",73,0)
 ; HL7 event/message counter
"RTN","IVMPTRN7",74,0)
 S HLEVN=$G(HLEVN)+1
"RTN","IVMPTRN7",75,0)
 ;
"RTN","IVMPTRN7",76,0)
 ; CREATE SLOT FOR EACH NEW BATCH
"RTN","IVMPTRN7",77,0)
 I HLEVN=1 D
"RTN","IVMPTRN7",78,0)
 . K HLMID,MTIEN,HLDT,HLDT1
"RTN","IVMPTRN7",79,0)
 . D CREATE^HLTF(.HLMID,.MTIEN,.HLDT,.HLDT1)
"RTN","IVMPTRN7",80,0)
 ;
"RTN","IVMPTRN7",81,0)
 ; handle message header processing for HL7 full data trans (Z07) msg
"RTN","IVMPTRN7",82,0)
 D MSH^IVMUFNC4($G(IVMNOMSH),$G(IVMFLL),$G(IVMREC),.IVMCT,.IVMCNTID)
"RTN","IVMPTRN7",83,0)
 ;
"RTN","IVMPTRN7",84,0)
 I IVMMTDT="" D
"RTN","IVMPTRN7",85,0)
 .S IVMMTDT=$P($$LST^DGMTU(DFN,DT),"^",2)
"RTN","IVMPTRN7",86,0)
 .I IVMMTDT="" S IVMMTDT=DT
"RTN","IVMPTRN7",87,0)
 ;
"RTN","IVMPTRN7",88,0)
 ; build HL7 Full Data Transmission (Z07) message
"RTN","IVMPTRN7",89,0)
 D BUILD^IVMPTRN8(DFN,IVMMTDT,.IVMCT,.IVMQUERY)
"RTN","IVMPTRN7",90,0)
 ;
"RTN","IVMPTRN7",91,0)
 ; log patient transmission
"RTN","IVMPTRN7",92,0)
 D
"RTN","IVMPTRN7",93,0)
 .N IVMSTAT
"RTN","IVMPTRN7",94,0)
 .S X=$$LST^DGMTCOU1(DFN,IVMMTDT,3)
"RTN","IVMPTRN7",95,0)
 .S IVMSTAT=$S($E($P(X,"^",2),1,3)=$E(IVMMTDT,1,3):$P($G(^DGMT(408.31,+X,0)),"^",3),1:"")
"RTN","IVMPTRN7",96,0)
 .;
"RTN","IVMPTRN7",97,0)
 .D FILEPT^IVMPTRN3(DFN,$$LYR^DGMTSCU1(IVMMTDT),HLDT,IVMCNTID,.EVENTS,IVMSTAT,IVMINS)
"RTN","IVMPTRN7",98,0)
 ;
"RTN","IVMPTRN7",99,0)
 ;if number of HL7 events/msgs is 100 then call HL7 pkg to transmit batch
"RTN","IVMPTRN7",100,0)
 I HLEVN=100 D
"RTN","IVMPTRN7",101,0)
 .N IVMEVENT
"RTN","IVMPTRN7",102,0)
 .; event code for Full Data Transmission
"RTN","IVMPTRN7",103,0)
 .S IVMEVENT="Z07"
"RTN","IVMPTRN7",104,0)
 .I $G(IVMFLL) D FILE1^IVMPTRN3 Q
"RTN","IVMPTRN7",105,0)
 .D FILE^IVMPTRN3
"RTN","IVMPTRN7",106,0)
 Q
"RTN","IVMPTRN7",107,0)
 ;
"RTN","IVMPTRN7",108,0)
SNDPSSN(DFN) ; check SSN and patient eligibility
"RTN","IVMPTRN7",109,0)
 ;
"RTN","IVMPTRN7",110,0)
 ; Input:
"RTN","IVMPTRN7",111,0)
 ;  DFN           Patient file (#2) IEN
"RTN","IVMPTRN7",112,0)
 ; Output:
"RTN","IVMPTRN7",113,0)
 ;  <expression>  1: Pseudo SSN and Eligibility verified or
"RTN","IVMPTRN7",114,0)
 ;                   not a Pseudo SSN
"RTN","IVMPTRN7",115,0)
 ;                0: Psuedo SSN and Eligibility Pending verification
"RTN","IVMPTRN7",116,0)
 ;                   Pending re-verification
"RTN","IVMPTRN7",117,0)
 ;
"RTN","IVMPTRN7",118,0)
 N SSN,PFLG
"RTN","IVMPTRN7",119,0)
 ;
"RTN","IVMPTRN7",120,0)
 ; Don't process records with corrupted nodes
"RTN","IVMPTRN7",121,0)
 I '$D(^DPT(DFN,0)) D REM Q 0
"RTN","IVMPTRN7",122,0)
 ;   
"RTN","IVMPTRN7",123,0)
 S SSN=$P(^DPT(DFN,0),U,9)
"RTN","IVMPTRN7",124,0)
 S PFLG=($E(SSN,$L(SSN))="P") I 'PFLG Q 1
"RTN","IVMPTRN7",125,0)
 I ($P($G(^DPT(DFN,.361)),U)="V") Q 1
"RTN","IVMPTRN7",126,0)
 ;
"RTN","IVMPTRN7",127,0)
 D REM
"RTN","IVMPTRN7",128,0)
 Q 0
"RTN","IVMPTRN7",129,0)
 ;
"RTN","IVMPTRN7",130,0)
REM ; Remove Psuedo SSN from Queue
"RTN","IVMPTRN7",131,0)
 ; Set TRANSMISSION STATUS to transmission not required
"RTN","IVMPTRN7",132,0)
 S PDATA(.03)=1 I $$UPD^DGENDBS(301.5,IVMDA,.PDATA,.ERR)
"RTN","IVMPTRN7",133,0)
 K PDATA,ERR
"RTN","IVMPTRN7",134,0)
 Q
"VER")
8.0^22.0
"BLD",7628,6)
^121
**END**
**END**
