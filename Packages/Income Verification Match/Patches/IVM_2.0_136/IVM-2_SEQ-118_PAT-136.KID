Released IVM*2*136 SEQ #118
Extracted from mail message
**KIDS**:IVM*2.0*136^

**INSTALL NAME**
IVM*2.0*136
"BLD",7732,0)
IVM*2.0*136^INCOME VERIFICATION MATCH^0^3081124^y
"BLD",7732,1,0)
^^3^3^3081124^
"BLD",7732,1,1,0)
This patch fixes a hard error when uploading a means test from a
"BLD",7732,1,2,0)
Z10 message.  Please refer to the National Patch Module for a full
"BLD",7732,1,3,0)
description of the contents of this patch.
"BLD",7732,4,0)
^9.64PA^^
"BLD",7732,6.3)
1
"BLD",7732,"KRN",0)
^9.67PA^779.2^20
"BLD",7732,"KRN",.4,0)
.4
"BLD",7732,"KRN",.4,"NM",0)
^9.68A^^
"BLD",7732,"KRN",.401,0)
.401
"BLD",7732,"KRN",.402,0)
.402
"BLD",7732,"KRN",.403,0)
.403
"BLD",7732,"KRN",.5,0)
.5
"BLD",7732,"KRN",.84,0)
.84
"BLD",7732,"KRN",3.6,0)
3.6
"BLD",7732,"KRN",3.8,0)
3.8
"BLD",7732,"KRN",9.2,0)
9.2
"BLD",7732,"KRN",9.8,0)
9.8
"BLD",7732,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",7732,"KRN",9.8,"NM",1,0)
IVMCM6^^0^B76427016
"BLD",7732,"KRN",9.8,"NM","B","IVMCM6",1)

"BLD",7732,"KRN",19,0)
19
"BLD",7732,"KRN",19.1,0)
19.1
"BLD",7732,"KRN",101,0)
101
"BLD",7732,"KRN",409.61,0)
409.61
"BLD",7732,"KRN",771,0)
771
"BLD",7732,"KRN",779.2,0)
779.2
"BLD",7732,"KRN",870,0)
870
"BLD",7732,"KRN",8989.51,0)
8989.51
"BLD",7732,"KRN",8989.52,0)
8989.52
"BLD",7732,"KRN",8994,0)
8994
"BLD",7732,"KRN","B",.4,.4)

"BLD",7732,"KRN","B",.401,.401)

"BLD",7732,"KRN","B",.402,.402)

"BLD",7732,"KRN","B",.403,.403)

"BLD",7732,"KRN","B",.5,.5)

"BLD",7732,"KRN","B",.84,.84)

"BLD",7732,"KRN","B",3.6,3.6)

"BLD",7732,"KRN","B",3.8,3.8)

"BLD",7732,"KRN","B",9.2,9.2)

"BLD",7732,"KRN","B",9.8,9.8)

"BLD",7732,"KRN","B",19,19)

"BLD",7732,"KRN","B",19.1,19.1)

"BLD",7732,"KRN","B",101,101)

"BLD",7732,"KRN","B",409.61,409.61)

"BLD",7732,"KRN","B",771,771)

"BLD",7732,"KRN","B",779.2,779.2)

"BLD",7732,"KRN","B",870,870)

"BLD",7732,"KRN","B",8989.51,8989.51)

"BLD",7732,"KRN","B",8989.52,8989.52)

"BLD",7732,"KRN","B",8994,8994)

"BLD",7732,"QUES",0)
^9.62^^
"BLD",7732,"REQB",0)
^9.611^1^1
"BLD",7732,"REQB",1,0)
IVM*2.0*115^2
"BLD",7732,"REQB","B","IVM*2.0*115",1)

"MBREQ")
0
"PKG",220,-1)
1^1
"PKG",220,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",220,20,0)
^9.402P^^
"PKG",220,22,0)
^9.49I^1^1
"PKG",220,22,1,0)
2.0^2941021
"PKG",220,22,1,"PAH",1,0)
136^3081124
"PKG",220,22,1,"PAH",1,1,0)
^^3^3^3081124
"PKG",220,22,1,"PAH",1,1,1,0)
This patch fixes a hard error when uploading a means test from a
"PKG",220,22,1,"PAH",1,1,2,0)
Z10 message.  Please refer to the National Patch Module for a full
"PKG",220,22,1,"PAH",1,1,3,0)
description of the contents of this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","IVMCM6")
0^1^B76427016^B76408345
"RTN","IVMCM6",1,0)
IVMCM6 ;ALB/SEK,JAN,RTK,CKN,TDM,GN - COMPLETE DCD INCOME TEST ; 7/21/03 1:13pm
"RTN","IVMCM6",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**17,25,39,44,50,53,49,58,62,67,84,115,136**;21-OCT-94;Build 1
"RTN","IVMCM6",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMCM6",4,0)
 ;
"RTN","IVMCM6",5,0)
 ;IVM*2*84 - insure DGMTP is defined by LTC test prior to calling
"RTN","IVMCM6",6,0)
 ;           audit
"RTN","IVMCM6",7,0)
 ;
"RTN","IVMCM6",8,0)
EN ; This routine will update annual means test file (#408.31):
"RTN","IVMCM6",9,0)
 ;      
"RTN","IVMCM6",10,0)
 ; Note: There is no entry in 408.31 for income screening.
"RTN","IVMCM6",11,0)
 ;
"RTN","IVMCM6",12,0)
 ;
"RTN","IVMCM6",13,0)
 ;Input:
"RTN","IVMCM6",14,0)
 ;  DGMTI - ien of new Annual Means Test which requires completion
"RTN","IVMCM6",15,0)
 ;  IVMMTIEN - ien of replaced test (may not exist)
"RTN","IVMCM6",16,0)
 ;
"RTN","IVMCM6",17,0)
 ; - open case record in (#301.5) file
"RTN","IVMCM6",18,0)
 N DGREF,DATA,CODE,FIELD,RET,NODE0,NODE2,OK2SND
"RTN","IVMCM6",19,0)
 D CHKTST,OPEN
"RTN","IVMCM6",20,0)
 ;
"RTN","IVMCM6",21,0)
 ; - if income screening goto MTBULL
"RTN","IVMCM6",22,0)
 I IVMTYPE=3 G MTBULL
"RTN","IVMCM6",23,0)
 ;
"RTN","IVMCM6",24,0)
 ; - setup variables for (#408.31) file
"RTN","IVMCM6",25,0)
 ;get the ZMT segment, translate HLQ's to NULLS
"RTN","IVMCM6",26,0)
 S IVMSEG=$G(^TMP($J,"IVMCM","ZMT"_IVMTYPE)) ; get mt/copay ZMT segment
"RTN","IVMCM6",27,0)
 F FIELD=4:1:30 I FIELD'=24,$P(IVMSEG,HLFS,FIELD)=HLQ S $P(IVMSEG,HLFS,FIELD)=""
"RTN","IVMCM6",28,0)
 ;
"RTN","IVMCM6",29,0)
 S IVM1=$$FMDATE^HLFNC($P(IVMSEG,"^",10)) ; dt/time completed
"RTN","IVMCM6",30,0)
 S IVM2=$P(IVMSEG,"^",7) ; agree to pay deductible
"RTN","IVMCM6",31,0)
 S IVM3=$$FMDATE^HLFNC($P(IVMSEG,"^",15)) ; dt vet signed test
"RTN","IVMCM6",32,0)
 S IVM4=$P(IVMSEG,"^",16) ; declines to give income info field
"RTN","IVMCM6",33,0)
 S:IVM4 DGREF=""
"RTN","IVMCM6",34,0)
 S IVM5=$$FMDATE^HLFNC($P(IVMSEG,"^",6)) ; dt/time of adjudication
"RTN","IVMCM6",35,0)
 S IVM6=$P(IVMSEG,"^",3) ;status
"RTN","IVMCM6",36,0)
 S IVM7=$P(IVMSEG,"^",13) ; hardship
"RTN","IVMCM6",37,0)
 S:$G(IVMHADJ) IVMCAT=$P(IVMSEG,"^",3) ; test status 
"RTN","IVMCM6",38,0)
 S IVM8=$P(IVMSEG,"^",22) ; site conducting test
"RTN","IVMCM6",39,0)
 S IVM9=$P(IVMSEG,"^",23) ; site granting hardship
"RTN","IVMCM6",40,0)
 S IVM10=$P(IVMSEG,"^",11) ; prev years threshold
"RTN","IVMCM6",41,0)
 S IVM11=$P(IVMSEG,"^",18) ; source of test
"RTN","IVMCM6",42,0)
 S IVM12=$$FMDATE^HLFNC($P(IVMSEG,"^",24)) ; hardship effective date
"RTN","IVMCM6",43,0)
 S IVM13=$$FMDATE^HLFNC($P(IVMSEG,"^",25)) ; date/time last edited
"RTN","IVMCM6",44,0)
 S IVM14=$P(IVMSEG,"^",26) ; test determined status
"RTN","IVMCM6",45,0)
 S IVM15=$P(IVMSEG,"^",4) ; income 
"RTN","IVMCM6",46,0)
 S IVM16=$P(IVMSEG,"^",5) ; net worth
"RTN","IVMCM6",47,0)
 S IVM17=$P(IVMSEG,"^",8) ; threshold A
"RTN","IVMCM6",48,0)
 S IVM18=$P(IVMSEG,"^",9) ; deductible expenses
"RTN","IVMCM6",49,0)
 S IVM19=$P(IVMSEG,"^",12) ; total dependents
"RTN","IVMCM6",50,0)
 S IVM20=$P(IVMSEG,"^",27) ; signature valid?
"RTN","IVMCM6",51,0)
 S IVM21=$$FMDATE^HLFNC($P(IVMSEG,"^",14)) ; hardship review date
"RTN","IVMCM6",52,0)
 S IVM22=$P(IVMSEG,"^",28) ; GMT threshold
"RTN","IVMCM6",53,0)
 S IVM23=$P(IVMSEG,"^",29) ; hardship reason
"RTN","IVMCM6",54,0)
 S IVM24=+$P(IVMSEG,"^",30) ; Means Test Version
"RTN","IVMCM6",55,0)
 ;
"RTN","IVMCM6",56,0)
 ;old tests may not have the field Test-Determined Status
"RTN","IVMCM6",57,0)
 I IVM14="" D
"RTN","IVMCM6",58,0)
 . I IVMTYPE=1,IVM7,"AG"[IVM6 D  Q
"RTN","IVMCM6",59,0)
 . . I IVM6="A",(IVM15'>IVM22) S IVM14="G" Q   ;Income <= GMT Threshold
"RTN","IVMCM6",60,0)
 . . S IVM14="C"
"RTN","IVMCM6",61,0)
 . S IVM14=IVM6
"RTN","IVMCM6",62,0)
 ;
"RTN","IVMCM6",63,0)
 ; - fields for means test, copay test and Long Term Care Test
"RTN","IVMCM6",64,0)
 S DATA(.14)=IVM4,DATA(.18)=IVM19,DATA(.23)=IVM11,DATA(2.05)=IVM8,DATA(.06)=DUZ,DATA(.07)=IVM1,DATA(2.02)=IVM13,DATA(2.03)=$$GETSTAT^DGMTH(IVM14,IVMTYPE),DATA(2.11)=IVM24
"RTN","IVMCM6",65,0)
 ;
"RTN","IVMCM6",66,0)
 I IVM7 S DATA(.08)=.5,DATA(.09)=$$NOW^XLFDT
"RTN","IVMCM6",67,0)
 ;
"RTN","IVMCM6",68,0)
 I 'IVM4 S DATA(.04)=IVM15,DATA(.15)=IVM18
"RTN","IVMCM6",69,0)
 ;
"RTN","IVMCM6",70,0)
 ; - means test fields
"RTN","IVMCM6",71,0)
 I IVMTYPE=1 D
"RTN","IVMCM6",72,0)
 . S DATA(.11)=IVM2,DATA(.12)=IVM17,DATA(.2)=IVM7,DATA(.24)=IVM3,DATA(.29)=IVM20,DATA(2.04)=IVM9,DATA(.1)=IVM5,DATA(2.01)=IVM12
"RTN","IVMCM6",73,0)
 . I 'IVM4 S DATA(.05)=IVM16
"RTN","IVMCM6",74,0)
 . S DATA(.16)=IVM10,DATA(.21)=IVM21,DATA(.27)=IVM22,DATA(2.09)=IVM23
"RTN","IVMCM6",75,0)
 ;
"RTN","IVMCM6",76,0)
 ; - Long Term Care fields
"RTN","IVMCM6",77,0)
 I IVMTYPE=4 D
"RTN","IVMCM6",78,0)
 . N DATE,TYPE
"RTN","IVMCM6",79,0)
 . ;set pointer to associated means test or RX copay test if there is one
"RTN","IVMCM6",80,0)
 . I $P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,2) S DATE=$P(^TMP($J,"IVMCM","ZMT1"),HLFS,2),TYPE=1
"RTN","IVMCM6",81,0)
 . E  I $P($G(^TMP($J,"IVMCM","ZMT2")),HLFS,2) S DATE=$P(^TMP($J,"IVMCM","ZMT2"),HLFS,2),TYPE=2
"RTN","IVMCM6",82,0)
 . I $G(DATE) S DATA(2.08)=$P($$LST^DGMTU(DFN,DATE,TYPE),"^")
"RTN","IVMCM6",83,0)
 . S DATA(.11)=IVM2
"RTN","IVMCM6",84,0)
 . I 'IVM4 S DATA(.05)=IVM16
"RTN","IVMCM6",85,0)
 . K DATA(2.03)  ;test determined status is not used in LTC test
"RTN","IVMCM6",86,0)
 ;
"RTN","IVMCM6",87,0)
 I $G(IVMMTIEN) D
"RTN","IVMCM6",88,0)
 . ; Get record data to compare with HL7 Message data
"RTN","IVMCM6",89,0)
 . S NODE0=$G(^DGMT(408.31,IVMMTIEN,0))
"RTN","IVMCM6",90,0)
 . S NODE2=$G(^DGMT(408.31,IVMMTIEN,2))
"RTN","IVMCM6",91,0)
 . ;
"RTN","IVMCM6",92,0)
 . ; If Site Conducting Test is the same, get Completed By from record.
"RTN","IVMCM6",93,0)
 . I $P(NODE2,"^",5)=IVM8 S DATA(.06)=$P(NODE0,"^",6)
"RTN","IVMCM6",94,0)
 . ;
"RTN","IVMCM6",95,0)
 . ; If there are Comments, copy them into new record
"RTN","IVMCM6",96,0)
 . I $O(^DGMT(408.31,IVMMTIEN,"C",0)) S DATA(50)="^DGMT(408.31,"_IVMMTIEN_",""C"")"
"RTN","IVMCM6",97,0)
 . ;
"RTN","IVMCM6",98,0)
 . I IVMTYPE=1 D
"RTN","IVMCM6",99,0)
 . . ; Hardship is YES in msg and record, and the Site Granting Hardship
"RTN","IVMCM6",100,0)
 . . ; is the same as the site receiving the msg, keep the record data
"RTN","IVMCM6",101,0)
 . . I IVM7,$P(NODE0,"^",20),IVM9=$P($$SITE^VASITE,"^",3) S DATA(.21)=$P(NODE0,"^",21),DATA(.22)=$P(NODE0,"^",22),DATA(2.01)=$P(NODE2,"^",1),DATA(.08)=$P(NODE0,"^",8),DATA(.09)=$P(NODE0,"^",9)
"RTN","IVMCM6",102,0)
 . . ;
"RTN","IVMCM6",103,0)
 . . ; Hardship is YES in msg and record, and the Site Granting Hardship
"RTN","IVMCM6",104,0)
 . . ; is NOT the same in both the msg and record, keep the message data
"RTN","IVMCM6",105,0)
 . . I IVM7,$P(NODE0,"^",20),$P(NODE2,"^",4)'=IVM9 S DATA(.22)=DATA(.06)
"RTN","IVMCM6",106,0)
 . . ;
"RTN","IVMCM6",107,0)
 . . ; Hardship is YES in msg and NO in record, keep the message data
"RTN","IVMCM6",108,0)
 . . I IVM7,'$P(NODE0,"^",20) S DATA(.22)=DATA(.06)
"RTN","IVMCM6",109,0)
 . . ;
"RTN","IVMCM6",110,0)
 . . ; Hardship is set to delete in msg, delete the Hardship
"RTN","IVMCM6",111,0)
 . . I IVM12=HLQ!('IVM7&($P(NODE0,"^",20))) D
"RTN","IVMCM6",112,0)
 . . . S (DATA(.08),DATA(.09),DATA(.2),DATA(.21),DATA(.22),DATA(2.01),DATA(2.04),DATA(2.09))=""
"RTN","IVMCM6",113,0)
 . . . I $P(NODE0,"^",20) D BULL2^IVMCMB(DFN,$P(NODE2,"^"),$P(NODE2,"^",4))
"RTN","IVMCM6",114,0)
 . . ;
"RTN","IVMCM6",115,0)
 . . ; Hardship is NO in msg and in record, keep the message data
"RTN","IVMCM6",116,0)
 . . I 'IVM7,'$P(NODE0,"^",20) S DATA(.22)=""
"RTN","IVMCM6",117,0)
 . . ;
"RTN","IVMCM6",118,0)
 . . ; Notify site of hardship?
"RTN","IVMCM6",119,0)
 . . I IVM12'=HLQ,IVM7,((IVM12'=$P(NODE2,"^"))!('$P(NODE0,"^",20))) D BULL1^IVMCMB(DFN,IVM12,IVM9)
"RTN","IVMCM6",120,0)
 . . ;
"RTN","IVMCM6",121,0)
 . . ; Notify site to discontinue net-worth development?
"RTN","IVMCM6",122,0)
 . . I IVM11=3,$P(NODE0,"^",23)=1,$$GETCODE^DGMTH($P(NODE0,"^",3))="P" D BULL3^IVMCMB(DFN)
"RTN","IVMCM6",123,0)
 ;
"RTN","IVMCM6",124,0)
 ;determine status based on test-determined status and hardship
"RTN","IVMCM6",125,0)
 S CODE=IVM14
"RTN","IVMCM6",126,0)
 I IVMTYPE=1,DATA(.2) S CODE=IVM6
"RTN","IVMCM6",127,0)
 S DATA(.03)=$$GETSTAT^DGMTH(CODE,IVMTYPE)
"RTN","IVMCM6",128,0)
 ;
"RTN","IVMCM6",129,0)
 I $$UPD^DGENDBS(408.31,DGMTI,.DATA) D
"RTN","IVMCM6",130,0)
 . ; can't call MT Events protocol for Long Term Care Copay Exemption
"RTN","IVMCM6",131,0)
 . ; Tests as it triggers an IB and Enrollment update
"RTN","IVMCM6",132,0)
 . ; so manually call needed protocols to trigger audit, date stamp
"RTN","IVMCM6",133,0)
 . ; and transmission (if necessary)
"RTN","IVMCM6",134,0)
 . I IVMTYPE=4 D  Q
"RTN","IVMCM6",135,0)
 . . S:$G(DGMTACT)="" DGMTACT="ADD"
"RTN","IVMCM6",136,0)
 . . S DGMTP=$G(DGMTP)                                       ;IVM*2*84
"RTN","IVMCM6",137,0)
 . . S DGMTINF=1  ;Means Test Interactive/Non-interactive flag
"RTN","IVMCM6",138,0)
 . . D AFTER^DGMTEVT
"RTN","IVMCM6",139,0)
 . . D EN^DGMTAUD                   ;means test audit event
"RTN","IVMCM6",140,0)
 . . D ^IVMPMTE                     ;IVM means test event
"RTN","IVMCM6",141,0)
 . . D DATETIME^DGMTU4($G(DGMTI))   ;date stamp
"RTN","IVMCM6",142,0)
 . ;
"RTN","IVMCM6",143,0)
 . ; - call means test event driver if not future test
"RTN","IVMCM6",144,0)
 . I 'IVMFUTR D
"RTN","IVMCM6",145,0)
 . . D:(IVMTYPE=1) MTPRIME^DGMTU4(DGMTI)
"RTN","IVMCM6",146,0)
 . . D:(IVMTYPE=2) RXPRIME^DGMTU4(DGMTI)
"RTN","IVMCM6",147,0)
 . . S CODE=$$GETCODE^DGMTH($P($G(^DGMT(408.31,DGMTI,0)),"^",3))
"RTN","IVMCM6",148,0)
 . E  D
"RTN","IVMCM6",149,0)
 . . ;enter to list of future tests kept in the IVM Patient file
"RTN","IVMCM6",150,0)
 . . D ADDFUTR^IVMPLOG2(DGMTI)
"RTN","IVMCM6",151,0)
 . . ;also, if HEC changed the test to a future date, there could be
"RTN","IVMCM6",152,0)
 . . ;a test on file for the same income year marked as primary
"RTN","IVMCM6",153,0)
 . . I $G(IVMMTIEN),$P(NODE2,"^",5)=IVM8 D
"RTN","IVMCM6",154,0)
 . . . N DATA,ERROR,DGMTI,DGMTACT,DGMTYPT,DGMTA
"RTN","IVMCM6",155,0)
 . . . S DATA(2)=0
"RTN","IVMCM6",156,0)
 . . . I $$UPD^DGENDBS(408.31,IVMMTIEN,.DATA,.ERROR)
"RTN","IVMCM6",157,0)
 . . . ; if the test being replaced by the uploaded future test
"RTN","IVMCM6",158,0)
 . . . ; becomes non-primary and the site conducted both tests
"RTN","IVMCM6",159,0)
 . . . ; then call Means Test event driver (non interactively)
"RTN","IVMCM6",160,0)
 . . . S DGMTACT="EDT",DGMTI=IVMMTIEN,DGMTYPT=IVMTYPE,DGMTINF=1
"RTN","IVMCM6",161,0)
 . . . D AFTER^DGMTEVT
"RTN","IVMCM6",162,0)
 . . . D EN^DGMTEVT
"RTN","IVMCM6",163,0)
 . . . D
"RTN","IVMCM6",164,0)
 . . . . N DGMSGF,DGADDF
"RTN","IVMCM6",165,0)
 . . . . S DGMSGF=1,DGADDF=0
"RTN","IVMCM6",166,0)
 . . . . D EN^DGMTR
"RTN","IVMCM6",167,0)
 . D:OK2SND TRNSMT
"RTN","IVMCM6",168,0)
 ;
"RTN","IVMCM6",169,0)
 ;
"RTN","IVMCM6",170,0)
MTBULL ; Build results array
"RTN","IVMCM6",171,0)
 D ADD^IVMCMB(DFN,IVMTYPE,$S(IVMFUTR:"Future Test",1:"New Test"),$G(IVMMTDT),$S($G(IVMMTIEN):$$GETCODE^DGMTH($P($G(^DGMT(408.31,IVMMTIEN,0)),"^",3)),1:""),CODE)
"RTN","IVMCM6",172,0)
 ;
"RTN","IVMCM6",173,0)
CLEANUP ; cleanup
"RTN","IVMCM6",174,0)
 K DGCAT,DGCOMF,DGMTACT,DGMTI,DGMTINF,DGMTPAR,DGTHB,IVMBU45,IVMOP,IVMOP1
"RTN","IVMCM6",175,0)
 K IVM1,IVM2,IVM3,IVM4,IVM5,IVM6,IVM7,IVM8,IVM9,IVM10,IVM11,IVM12,IVM13,IVM14,IVMCAT,IVMCEA,IVMCEB,IVMMTA,IVM15,IVM16,IVM17,IVM18,IVM19,IVM20,IVM21
"RTN","IVMCM6",176,0)
 K IVM22,IVM23,IVM24
"RTN","IVMCM6",177,0)
 Q
"RTN","IVMCM6",178,0)
 ;
"RTN","IVMCM6",179,0)
OPEN ; open case record for uploaded test
"RTN","IVMCM6",180,0)
 S IVMOP="",IVMOP=$O(^IVM(301.5,"AYR",DGLY,DFN,IVMOP)) I 'IVMOP D OPEN1 Q
"RTN","IVMCM6",181,0)
 S IVMOP1=$G(^IVM(301.5,IVMOP,0)) I 'IVMOP1 D OPEN1 Q
"RTN","IVMCM6",182,0)
 I $P(IVMOP1,"^",4)=1 S DA=+IVMOP D  Q
"RTN","IVMCM6",183,0)
 . S DIE="^IVM(301.5,",DR=".03////1;.04////0"
"RTN","IVMCM6",184,0)
 . D OPEN2
"RTN","IVMCM6",185,0)
 Q
"RTN","IVMCM6",186,0)
OPEN1 K DD,DO
"RTN","IVMCM6",187,0)
 S DIC="^IVM(301.5,",DIC(0)="LMNZ",X=DFN,DLAYGO=301.5
"RTN","IVMCM6",188,0)
 D FILE^DICN Q:Y'>0  S DA=+Y
"RTN","IVMCM6",189,0)
 S DIE="^IVM(301.5,",DR=".02////^S X=DGLY;.03////1;.04////0"
"RTN","IVMCM6",190,0)
OPEN2 D ^DIE K DD,DO,DIC,DLAYGO,X,Y,DIE,DR
"RTN","IVMCM6",191,0)
 Q
"RTN","IVMCM6",192,0)
 ;
"RTN","IVMCM6",193,0)
MTDRIVER ; call means test event driver
"RTN","IVMCM6",194,0)
 ; dgmtact
"RTN","IVMCM6",195,0)
 ; adj  adjudicated mt
"RTN","IVMCM6",196,0)
 ; cat  hardship mt
"RTN","IVMCM6",197,0)
 ; add  new mt or copay
"RTN","IVMCM6",198,0)
 ; edit corrected mt or copay
"RTN","IVMCM6",199,0)
 ;         
"RTN","IVMCM6",200,0)
 N IVMDA,IVMDT,IVMFLG,IVMMTDT,IVMNEW
"RTN","IVMCM6",201,0)
 S DGMTACT=$S($G(IVMHADJ)=1:"ADJ",$G(IVMHADJ)=2:"CAT",'$G(DGMTP):"ADD",1:"EDT")
"RTN","IVMCM6",202,0)
 D AFTER^DGMTEVT
"RTN","IVMCM6",203,0)
 S DGMTINF=1 ; non-interactive flag
"RTN","IVMCM6",204,0)
 D EN^DGMTEVT
"RTN","IVMCM6",205,0)
 Q
"RTN","IVMCM6",206,0)
 ;
"RTN","IVMCM6",207,0)
CHKTST ; Verify if the incoming Income Test requires a Z07 transmission.
"RTN","IVMCM6",208,0)
 ;
"RTN","IVMCM6",209,0)
 N MTREC,REC01,ZMTSEG
"RTN","IVMCM6",210,0)
 S OK2SND=0
"RTN","IVMCM6",211,0)
 S MTREC=$G(^DGMT(408.31,DGMTI,0))
"RTN","IVMCM6",212,0)
 Q:'$D(^DGMT(408.31,DGMTI,0))
"RTN","IVMCM6",213,0)
 ; Check if the Source of the Test is DCD
"RTN","IVMCM6",214,0)
 S ZMTSEG=$G(^TMP($J,"IVMCM","ZMT"_IVMTYPE))
"RTN","IVMCM6",215,0)
 Q:$P($G(^DG(408.34,+$P(ZMTSEG,U,18),0)),U)'="DCD"
"RTN","IVMCM6",216,0)
 ;Check if the DCD software has been installed
"RTN","IVMCM6",217,0)
 Q:'$$VERSION^XPDUTL("IVMC")
"RTN","IVMCM6",218,0)
 ;
"RTN","IVMCM6",219,0)
 ; If the source of the test is DCD, and the site receiving the test
"RTN","IVMCM6",220,0)
 ; is a DCD site, set the record to transmit.
"RTN","IVMCM6",221,0)
 S OK2SND=1
"RTN","IVMCM6",222,0)
 Q
"RTN","IVMCM6",223,0)
 ;
"RTN","IVMCM6",224,0)
TRNSMT ; Set the record to transmit due to DCD Criteria
"RTN","IVMCM6",225,0)
 N REC01,DCDDATA,DCDIEN,EVENTS,ERROR
"RTN","IVMCM6",226,0)
 S REC01=$O(^IVM(301.5,"AYR",DGLY,DFN,""))
"RTN","IVMCM6",227,0)
 S DCDDATA(.04)=0,DCDIEN=REC01
"RTN","IVMCM6",228,0)
 I $$UPD^DGENDBS(301.5,DCDIEN,.DCDDATA,.ERROR)
"RTN","IVMCM6",229,0)
 S EVENTS("DCD")=1
"RTN","IVMCM6",230,0)
 I $$SETSTAT^IVMPLOG(REC01,.EVENTS)
"RTN","IVMCM6",231,0)
 ;
"RTN","IVMCM6",232,0)
 Q
"VER")
8.0^22.0
"BLD",7732,6)
^118
**END**
**END**
