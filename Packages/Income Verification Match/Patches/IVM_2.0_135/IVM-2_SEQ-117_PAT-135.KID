Released IVM*2*135 SEQ #117
Extracted from mail message
**KIDS**:IVM*2.0*135^

**INSTALL NAME**
IVM*2.0*135
"BLD",7982,0)
IVM*2.0*135^INCOME VERIFICATION MATCH^0^3090225^y
"BLD",7982,1,0)
^^23^23^3090225^
"BLD",7982,1,1,0)
This patch is being implemented in support of the Insurance Capture Buffer
"BLD",7982,1,2,0)
(ICB) application which will provide a GUI front end to the Integrated
"BLD",7982,1,3,0)
Billing (IB) insurance update/editing functionality. The ICB application
"BLD",7982,1,4,0)
requires that there be no write statements or interactive reads when using
"BLD",7982,1,5,0)
the existing IB ACCEPT/REJECT Insurance Buffer logic. Currently, there is
"BLD",7982,1,6,0)
ICR 2530 is the supported interface between IB and IVM. The
"BLD",7982,1,7,0)
UPDATE^IVMLINS4 API needs to be updated to comply with ICBs requirements.
"BLD",7982,1,8,0)
 
"BLD",7982,1,9,0)
This patch will add two additional input parameters to the UPDATE^IVMLINS4
"BLD",7982,1,10,0)
API as follows:
"BLD",7982,1,11,0)
     UPDATE(DFN,IVMINSST,IVMID,IVMREPTR,IVMSUPPR)
"BLD",7982,1,12,0)
 
"BLD",7982,1,13,0)
The IVMREPTR variable is an input variable to pass the IVM REASONS FOR NOT
"BLD",7982,1,14,0)
UPLOADING (#301.91) Internal Entry Number into this application. This
"BLD",7982,1,15,0)
variable will be optional. When an Insurance Segment is rejected based on
"BLD",7982,1,16,0)
the ICB application rejecting an IVM Insurance entry from the IVM
"BLD",7982,1,17,0)
application, the pointer value for the reason it isn't uploaded will be
"BLD",7982,1,18,0)
pass and store in the REASON NOT UPLOADING INSURANCE (#.08) field of the
"BLD",7982,1,19,0)
IVM PATIENT (#301.5) file.
"BLD",7982,1,20,0)
 
"BLD",7982,1,21,0)
The IVMSUPPR variable is an input variable which when passed will suppress
"BLD",7982,1,22,0)
what is written to the screen and the interactive read of the IVM REASON
"BLD",7982,1,23,0)
FOR NOT UPLOADING (#301.91) file within the UPDATE API.
"BLD",7982,4,0)
^9.64PA^^
"BLD",7982,6.3)
1
"BLD",7982,"KRN",0)
^9.67PA^779.2^20
"BLD",7982,"KRN",.4,0)
.4
"BLD",7982,"KRN",.401,0)
.401
"BLD",7982,"KRN",.402,0)
.402
"BLD",7982,"KRN",.403,0)
.403
"BLD",7982,"KRN",.5,0)
.5
"BLD",7982,"KRN",.84,0)
.84
"BLD",7982,"KRN",3.6,0)
3.6
"BLD",7982,"KRN",3.8,0)
3.8
"BLD",7982,"KRN",9.2,0)
9.2
"BLD",7982,"KRN",9.8,0)
9.8
"BLD",7982,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",7982,"KRN",9.8,"NM",1,0)
IVMLINS4^^0^B16013068
"BLD",7982,"KRN",9.8,"NM","B","IVMLINS4",1)

"BLD",7982,"KRN",19,0)
19
"BLD",7982,"KRN",19.1,0)
19.1
"BLD",7982,"KRN",101,0)
101
"BLD",7982,"KRN",409.61,0)
409.61
"BLD",7982,"KRN",771,0)
771
"BLD",7982,"KRN",779.2,0)
779.2
"BLD",7982,"KRN",870,0)
870
"BLD",7982,"KRN",8989.51,0)
8989.51
"BLD",7982,"KRN",8989.52,0)
8989.52
"BLD",7982,"KRN",8994,0)
8994
"BLD",7982,"KRN","B",.4,.4)

"BLD",7982,"KRN","B",.401,.401)

"BLD",7982,"KRN","B",.402,.402)

"BLD",7982,"KRN","B",.403,.403)

"BLD",7982,"KRN","B",.5,.5)

"BLD",7982,"KRN","B",.84,.84)

"BLD",7982,"KRN","B",3.6,3.6)

"BLD",7982,"KRN","B",3.8,3.8)

"BLD",7982,"KRN","B",9.2,9.2)

"BLD",7982,"KRN","B",9.8,9.8)

"BLD",7982,"KRN","B",19,19)

"BLD",7982,"KRN","B",19.1,19.1)

"BLD",7982,"KRN","B",101,101)

"BLD",7982,"KRN","B",409.61,409.61)

"BLD",7982,"KRN","B",771,771)

"BLD",7982,"KRN","B",779.2,779.2)

"BLD",7982,"KRN","B",870,870)

"BLD",7982,"KRN","B",8989.51,8989.51)

"BLD",7982,"KRN","B",8989.52,8989.52)

"BLD",7982,"KRN","B",8994,8994)

"BLD",7982,"QUES",0)
^9.62^^
"BLD",7982,"REQB",0)
^9.611^1^1
"BLD",7982,"REQB",1,0)
IVM*2.0*14^1
"BLD",7982,"REQB","B","IVM*2.0*14",1)

"MBREQ")
0
"PKG",220,-1)
1^1
"PKG",220,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",220,20,0)
^9.402P^^
"PKG",220,22,0)
^9.49I^1^1
"PKG",220,22,1,0)
2.0^2941021
"PKG",220,22,1,"PAH",1,0)
135^3090225
"PKG",220,22,1,"PAH",1,1,0)
^^23^23^3090225
"PKG",220,22,1,"PAH",1,1,1,0)
This patch is being implemented in support of the Insurance Capture Buffer
"PKG",220,22,1,"PAH",1,1,2,0)
(ICB) application which will provide a GUI front end to the Integrated
"PKG",220,22,1,"PAH",1,1,3,0)
Billing (IB) insurance update/editing functionality. The ICB application
"PKG",220,22,1,"PAH",1,1,4,0)
requires that there be no write statements or interactive reads when using
"PKG",220,22,1,"PAH",1,1,5,0)
the existing IB ACCEPT/REJECT Insurance Buffer logic. Currently, there is
"PKG",220,22,1,"PAH",1,1,6,0)
ICR 2530 is the supported interface between IB and IVM. The
"PKG",220,22,1,"PAH",1,1,7,0)
UPDATE^IVMLINS4 API needs to be updated to comply with ICBs requirements.
"PKG",220,22,1,"PAH",1,1,8,0)
 
"PKG",220,22,1,"PAH",1,1,9,0)
This patch will add two additional input parameters to the UPDATE^IVMLINS4
"PKG",220,22,1,"PAH",1,1,10,0)
API as follows:
"PKG",220,22,1,"PAH",1,1,11,0)
     UPDATE(DFN,IVMINSST,IVMID,IVMREPTR,IVMSUPPR)
"PKG",220,22,1,"PAH",1,1,12,0)
 
"PKG",220,22,1,"PAH",1,1,13,0)
The IVMREPTR variable is an input variable to pass the IVM REASONS FOR NOT
"PKG",220,22,1,"PAH",1,1,14,0)
UPLOADING (#301.91) Internal Entry Number into this application. This
"PKG",220,22,1,"PAH",1,1,15,0)
variable will be optional. When an Insurance Segment is rejected based on
"PKG",220,22,1,"PAH",1,1,16,0)
the ICB application rejecting an IVM Insurance entry from the IVM
"PKG",220,22,1,"PAH",1,1,17,0)
application, the pointer value for the reason it isn't uploaded will be
"PKG",220,22,1,"PAH",1,1,18,0)
pass and store in the REASON NOT UPLOADING INSURANCE (#.08) field of the
"PKG",220,22,1,"PAH",1,1,19,0)
IVM PATIENT (#301.5) file.
"PKG",220,22,1,"PAH",1,1,20,0)
 
"PKG",220,22,1,"PAH",1,1,21,0)
The IVMSUPPR variable is an input variable which when passed will suppress
"PKG",220,22,1,"PAH",1,1,22,0)
what is written to the screen and the interactive read of the IVM REASON
"PKG",220,22,1,"PAH",1,1,23,0)
FOR NOT UPLOADING (#301.91) file within the UPDATE API.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","IVMLINS4")
0^1^B16013068^B14942950
"RTN","IVMLINS4",1,0)
IVMLINS4 ;ALB/SEK - IVM INSURANCE UPLOAD ACCEPT - IB CALL ; 30 JAN 2009
"RTN","IVMLINS4",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**14,135**; 21-OCT-94;Build 1
"RTN","IVMLINS4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IVMLINS4",4,0)
 ;
"RTN","IVMLINS4",5,0)
 ; This routine is called by IB to update insurance segments sent
"RTN","IVMLINS4",6,0)
 ; from HEC and stored in the INCOMING SEGMENT multiple of the IVM
"RTN","IVMLINS4",7,0)
 ; PATIENT file (#301.5).  A HL7 message is sent to HEC indicating if
"RTN","IVMLINS4",8,0)
 ; the data is accepted or rejected (including reason for rejection).
"RTN","IVMLINS4",9,0)
 ;
"RTN","IVMLINS4",10,0)
 ; Before this call, IB code allows the user to to review the
"RTN","IVMLINS4",11,0)
 ; insurance policy from HEC stored in IB's insurance module.  When
"RTN","IVMLINS4",12,0)
 ; the user decides to accept or reject the policy, this routine is
"RTN","IVMLINS4",13,0)
 ; called.  If the policy is rejected, this routine allows the user
"RTN","IVMLINS4",14,0)
 ; to pick the reason for rejection.
"RTN","IVMLINS4",15,0)
 ;
"RTN","IVMLINS4",16,0)
UPDATE(DFN,IVMINSST,IVMID,IVMREPTR,IVMSUPPR) ;
"RTN","IVMLINS4",17,0)
 ;
"RTN","IVMLINS4",18,0)
 ; Input:       DFN  --  internal entry number of PATIENT file
"RTN","IVMLINS4",19,0)
 ;         IVMINSST  --  upload status 1-accepted  0-rejected
"RTN","IVMLINS4",20,0)
 ;            IVMID  --  ins. co. name ^ street add[line 1] ^ group #
"RTN","IVMLINS4",21,0)
 ;         IVMREPTR  --  IVM REASONS FOR NOT UPLOADING (#301.91) IEN 
"RTN","IVMLINS4",22,0)
 ;                       (Optional)
"RTN","IVMLINS4",23,0)
 ;         IVMSUPPR  --  Suppress Write and Interactive Lookup when > 0
"RTN","IVMLINS4",24,0)
 ;                       (Optional)
"RTN","IVMLINS4",25,0)
 ;
"RTN","IVMLINS4",26,0)
 ; Output: returns 1 if updated or 0 followed by error if not updated
"RTN","IVMLINS4",27,0)
 ;
"RTN","IVMLINS4",28,0)
 N IVM1INSN,IVM2SA1,IVM3GNU,IVMI,IVMIBERR,IVMJ,IVMDA,IVMDAIN,IVMFOUND
"RTN","IVMLINS4",29,0)
 I '$G(DFN)!('$D(^DPT(+DFN,0))) S IVMIBERR="No patient defined" G EXIT
"RTN","IVMLINS4",30,0)
 I '$D(^IVM(301.5,"B",DFN)) S IVMIBERR="Patient not in IVM PATIENT file" G EXIT
"RTN","IVMLINS4",31,0)
 ;
"RTN","IVMLINS4",32,0)
 I $G(IVMINSST)'=0&($G(IVMINSST)'=1) S IVMIBERR="upload status not accepted or rejected" G EXIT
"RTN","IVMLINS4",33,0)
 ;
"RTN","IVMLINS4",34,0)
 ; - check id fields
"RTN","IVMLINS4",35,0)
 S IVM1INSN=$P(IVMID,"^")
"RTN","IVMLINS4",36,0)
 S IVM2SA1=$P(IVMID,"^",2)
"RTN","IVMLINS4",37,0)
 S IVM3GNU=$P(IVMID,"^",3)
"RTN","IVMLINS4",38,0)
 I IVM1INSN']"" S IVMIBERR="no insurance company name from MCCR insurance module" G EXIT
"RTN","IVMLINS4",39,0)
 I IVM2SA1']"" S IVMIBERR="no street address from MCCR insurance module" G EXIT
"RTN","IVMLINS4",40,0)
 I IVM3GNU']"" S IVMIBERR="no group number from MCCR insurance module" G EXIT
"RTN","IVMLINS4",41,0)
 ;
"RTN","IVMLINS4",42,0)
 S IVMDA=0
"RTN","IVMLINS4",43,0)
 F  S IVMDA=$O(^IVM(301.5,"B",DFN,IVMDA)) Q:'IVMDA  D FIND Q:$G(IVMFOUND)
"RTN","IVMLINS4",44,0)
 G PROCESS
"RTN","IVMLINS4",45,0)
 ;
"RTN","IVMLINS4",46,0)
 ; - find ins. record in IVM PATIENT file
"RTN","IVMLINS4",47,0)
FIND S IVMDAIN=0
"RTN","IVMLINS4",48,0)
 F  S IVMDAIN=$O(^IVM(301.5,IVMDA,"IN",IVMDAIN)) Q:'IVMDAIN  D  Q:$G(IVMFOUND)
"RTN","IVMLINS4",49,0)
 .; - record missing
"RTN","IVMLINS4",50,0)
 .Q:'$D(^IVM(301.5,IVMDA,"IN",IVMDAIN,0))
"RTN","IVMLINS4",51,0)
 .Q:'$D(^IVM(301.5,IVMDA,"IN",IVMDAIN,"ST"))
"RTN","IVMLINS4",52,0)
 .;
"RTN","IVMLINS4",53,0)
 .; - if 2nd piece not null - skip record - insurance record not transferred
"RTN","IVMLINS4",54,0)
 .Q:$P($G(^IVM(301.5,IVMDA,"IN",IVMDAIN,0)),"^",2)]""
"RTN","IVMLINS4",55,0)
 .;
"RTN","IVMLINS4",56,0)
 .; - if 4th piece not null - skip record - already uploaded or rejected
"RTN","IVMLINS4",57,0)
 .Q:$P($G(^IVM(301.5,IVMDA,"IN",IVMDAIN,0)),"^",4)]""
"RTN","IVMLINS4",58,0)
 .;
"RTN","IVMLINS4",59,0)
 .; - check 3 fields in ^IVM(301.5,IVMDA,"IN",IVMDAIN,"ST") if not 3 matches - skip record
"RTN","IVMLINS4",60,0)
 .Q:$P(^IVM(301.5,IVMDA,"IN",IVMDAIN,"ST"),"^",4)'=IVM1INSN
"RTN","IVMLINS4",61,0)
 .Q:$P($P(^IVM(301.5,IVMDA,"IN",IVMDAIN,"ST"),"^",5),"~")'=IVM2SA1
"RTN","IVMLINS4",62,0)
 .Q:$P(^IVM(301.5,IVMDA,"IN",IVMDAIN,"ST"),"^",8)'=IVM3GNU
"RTN","IVMLINS4",63,0)
 .; - if ins record found
"RTN","IVMLINS4",64,0)
 .S IVMFOUND=1
"RTN","IVMLINS4",65,0)
 .Q
"RTN","IVMLINS4",66,0)
 Q
"RTN","IVMLINS4",67,0)
 ;
"RTN","IVMLINS4",68,0)
PROCESS I 'IVMDAIN S IVMIBERR="Insurance data not found in IVM PATIENT file" G EXIT
"RTN","IVMLINS4",69,0)
 ;
"RTN","IVMLINS4",70,0)
 N DA,DTOUT,DUOUT,DR,DIE,Y
"RTN","IVMLINS4",71,0)
 ;
"RTN","IVMLINS4",72,0)
 ; - if the insurance data is accepted do
"RTN","IVMLINS4",73,0)
 I IVMINSST D  G DEL
"RTN","IVMLINS4",74,0)
 .;
"RTN","IVMLINS4",75,0)
 .; - stuff UPLOAD INSURANCE DATA(.04), UPLOADED INSURANCE DATE/TIME(.05)
"RTN","IVMLINS4",76,0)
 .S DA=IVMDAIN,DA(1)=IVMDA
"RTN","IVMLINS4",77,0)
 .S DIE="^IVM(301.5,"_DA(1)_",""IN"","
"RTN","IVMLINS4",78,0)
 .S DR=".04////1;.05///NOW" D ^DIE
"RTN","IVMLINS4",79,0)
 ;
"RTN","IVMLINS4",80,0)
 ; - if the insurance data is rejected and writes/prompts not suppressed
"RTN","IVMLINS4",81,0)
 ;   then ask for reason why
"RTN","IVMLINS4",82,0)
 ;
"RTN","IVMLINS4",83,0)
 D:$G(IVMSUPPR)'>0
"RTN","IVMLINS4",84,0)
 . W !!,"The 'Reject IVM Insurance Policy' action has been selected."
"RTN","IVMLINS4",85,0)
 . W !,"Please select a reason for rejecting the IVM insurance information."
"RTN","IVMLINS4",86,0)
 . S DIC="^IVM(301.91,",DIC("A")="Select reason for rejecting: ",DIC(0)="QEAMZ"
"RTN","IVMLINS4",87,0)
 . D ^DIC K DIC I Y<0!($D(DTOUT))!($D(DUOUT)) S IVMREPTR=0 Q
"RTN","IVMLINS4",88,0)
 . S IVMREPTR=+Y
"RTN","IVMLINS4",89,0)
 ;
"RTN","IVMLINS4",90,0)
 ;If IVMREPTR hasn't been defined, give error message and exit
"RTN","IVMLINS4",91,0)
 I $G(IVMREPTR)'>0 S IVMIBERR="No reason selected" G EXIT
"RTN","IVMLINS4",92,0)
 ;
"RTN","IVMLINS4",93,0)
 ; stuff UPLOAD INSURANCE DATA(.04) and REASON NOT UPLOADING INSURANCE
"RTN","IVMLINS4",94,0)
 ; (.08)
"RTN","IVMLINS4",95,0)
 S DA=IVMDAIN,DA(1)=IVMDA
"RTN","IVMLINS4",96,0)
 S DIE="^IVM(301.5,"_DA(1)_",""IN"","
"RTN","IVMLINS4",97,0)
 S DR=".04////0;.08////^S X=IVMREPTR" D ^DIE
"RTN","IVMLINS4",98,0)
 ;
"RTN","IVMLINS4",99,0)
DEL ; - delete incoming segments strings
"RTN","IVMLINS4",100,0)
 K ^IVM(301.5,DA(1),"IN",DA,"ST"),^("ST1")
"RTN","IVMLINS4",101,0)
 ;
"RTN","IVMLINS4",102,0)
 ; - send HL7 message to IVM Center
"RTN","IVMLINS4",103,0)
 ;
"RTN","IVMLINS4",104,0)
 S IVMI=DA(1),IVMJ=DA
"RTN","IVMLINS4",105,0)
 D HL7^IVMLINS2
"RTN","IVMLINS4",106,0)
 ;
"RTN","IVMLINS4",107,0)
EXIT Q $S($D(IVMIBERR):0,1:1)_"^"_$G(IVMIBERR)
"VER")
8.0^22.0
**END**
**END**
