Released IVM*2*143 SEQ #122
Extracted from mail message
**KIDS**:IVM*2.0*143^

**INSTALL NAME**
IVM*2.0*143
"BLD",7636,0)
IVM*2.0*143^INCOME VERIFICATION MATCH^0^3100121^y
"BLD",7636,1,0)
^^1^1^3100121^
"BLD",7636,1,1,0)
Fix problem w/ IVM BACKGROUND JOB not sending RX Copay Exemption tests.
"BLD",7636,4,0)
^9.64PA^^
"BLD",7636,6.3)
1
"BLD",7636,"KRN",0)
^9.67PA^779.2^20
"BLD",7636,"KRN",.4,0)
.4
"BLD",7636,"KRN",.401,0)
.401
"BLD",7636,"KRN",.402,0)
.402
"BLD",7636,"KRN",.403,0)
.403
"BLD",7636,"KRN",.5,0)
.5
"BLD",7636,"KRN",.84,0)
.84
"BLD",7636,"KRN",3.6,0)
3.6
"BLD",7636,"KRN",3.8,0)
3.8
"BLD",7636,"KRN",9.2,0)
9.2
"BLD",7636,"KRN",9.8,0)
9.8
"BLD",7636,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",7636,"KRN",9.8,"NM",1,0)
IVMPTRN^^0^B48845730
"BLD",7636,"KRN",9.8,"NM","B","IVMPTRN",1)

"BLD",7636,"KRN",19,0)
19
"BLD",7636,"KRN",19.1,0)
19.1
"BLD",7636,"KRN",101,0)
101
"BLD",7636,"KRN",409.61,0)
409.61
"BLD",7636,"KRN",771,0)
771
"BLD",7636,"KRN",779.2,0)
779.2
"BLD",7636,"KRN",870,0)
870
"BLD",7636,"KRN",8989.51,0)
8989.51
"BLD",7636,"KRN",8989.52,0)
8989.52
"BLD",7636,"KRN",8994,0)
8994
"BLD",7636,"KRN","B",.4,.4)

"BLD",7636,"KRN","B",.401,.401)

"BLD",7636,"KRN","B",.402,.402)

"BLD",7636,"KRN","B",.403,.403)

"BLD",7636,"KRN","B",.5,.5)

"BLD",7636,"KRN","B",.84,.84)

"BLD",7636,"KRN","B",3.6,3.6)

"BLD",7636,"KRN","B",3.8,3.8)

"BLD",7636,"KRN","B",9.2,9.2)

"BLD",7636,"KRN","B",9.8,9.8)

"BLD",7636,"KRN","B",19,19)

"BLD",7636,"KRN","B",19.1,19.1)

"BLD",7636,"KRN","B",101,101)

"BLD",7636,"KRN","B",409.61,409.61)

"BLD",7636,"KRN","B",771,771)

"BLD",7636,"KRN","B",779.2,779.2)

"BLD",7636,"KRN","B",870,870)

"BLD",7636,"KRN","B",8989.51,8989.51)

"BLD",7636,"KRN","B",8989.52,8989.52)

"BLD",7636,"KRN","B",8994,8994)

"BLD",7636,"QUES",0)
^9.62^^
"BLD",7636,"REQB",0)
^9.611^1^1
"BLD",7636,"REQB",1,0)
IVM*2.0*105^2
"BLD",7636,"REQB","B","IVM*2.0*105",1)

"MBREQ")
0
"PKG",220,-1)
1^1
"PKG",220,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",220,20,0)
^9.402P^^
"PKG",220,22,0)
^9.49I^1^1
"PKG",220,22,1,0)
2.0^2941021
"PKG",220,22,1,"PAH",1,0)
143^3100121
"PKG",220,22,1,"PAH",1,1,0)
^^1^1^3100121
"PKG",220,22,1,"PAH",1,1,1,0)
Fix problem w/ IVM BACKGROUND JOB not sending RX Copay Exemption tests.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","IVMPTRN")
0^1^B48845730^B44251671
"RTN","IVMPTRN",1,0)
IVMPTRN ;ALB/MLI,SEK,RTK,BRM,BAJ,LBD - IVM BACKGROUND JOB/TRANSMISSIONS TO IVM CENTER; 10/28/2005 ; 1/20/10 12:00pm
"RTN","IVMPTRN",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**1,9,11,12,17,28,34,74,79,89,105,143**;JUL 8,1996;Build 1
"RTN","IVMPTRN",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMPTRN",4,0)
 ;
"RTN","IVMPTRN",5,0)
 ; This routine is run nightly to send HL7 messages to the IVM Center for
"RTN","IVMPTRN",6,0)
 ; processing.
"RTN","IVMPTRN",7,0)
 ;
"RTN","IVMPTRN",8,0)
BGJ ; - IVM Nightly Background Job
"RTN","IVMPTRN",9,0)
 ;
"RTN","IVMPTRN",10,0)
 ;for tests being held for the future, make them primary if now effective
"RTN","IVMPTRN",11,0)
 D FUTUREMT,FUTURERX
"RTN","IVMPTRN",12,0)
 ;
"RTN","IVMPTRN",13,0)
 ; - retransmit enrollment/eligibility queries with no reply
"RTN","IVMPTRN",14,0)
 D BATCH^DGENQRY1
"RTN","IVMPTRN",15,0)
 ;
"RTN","IVMPTRN",16,0)
 ; - retransmit income test (financial) queries with no reply
"RTN","IVMPTRN",17,0)
 D MONITOR^IVMCQ2
"RTN","IVMPTRN",18,0)
 ;
"RTN","IVMPTRN",19,0)
 ; - current year and previous year
"RTN","IVMPTRN",20,0)
 S IVMCURYR=$$LYR^DGMTSCU1(DT),IVMPREYR=$$LYR^DGMTSCU1(IVMCURYR)
"RTN","IVMPTRN",21,0)
 ;
"RTN","IVMPTRN",22,0)
 ;
"RTN","IVMPTRN",23,0)
 ; - Master Query Processing
"RTN","IVMPTRN",24,0)
 ;
"RTN","IVMPTRN",25,0)
 ; - respond to Master Query for previous year, if necessary
"RTN","IVMPTRN",26,0)
 S IVMREC=$$QRY(IVMPREYR) I IVMREC D RESP(IVMPREYR,+IVMREC),END
"RTN","IVMPTRN",27,0)
 ;
"RTN","IVMPTRN",28,0)
 ; - respond to Master Query for current year, if necessary
"RTN","IVMPTRN",29,0)
 S IVMREC=$$QRY(IVMCURYR) I IVMREC D RESP(IVMCURYR,+IVMREC),END
"RTN","IVMPTRN",30,0)
 ;
"RTN","IVMPTRN",31,0)
 ; - send regular 'nightly' transmissions
"RTN","IVMPTRN",32,0)
 D REG,END
"RTN","IVMPTRN",33,0)
 ;
"RTN","IVMPTRN",34,0)
 ; - perform retransmission processing
"RTN","IVMPTRN",35,0)
 D ENTRY^IVMPTRN4,END
"RTN","IVMPTRN",36,0)
 ;
"RTN","IVMPTRN",37,0)
 ; - process billing activity
"RTN","IVMPTRN",38,0)
 D EN^IVMPTRN5
"RTN","IVMPTRN",39,0)
 ;
"RTN","IVMPTRN",40,0)
 ; - auto-upload address changes from #301.5 if >14 days old
"RTN","IVMPTRN",41,0)
 ; - auto-delete non address changes from #301.5 if >30 days old
"RTN","IVMPTRN",42,0)
 N ADDRDT S ADDRDT(0)=30,ADDRDT(1)=14 D EN^IVMLDEMC(.ADDRDT)
"RTN","IVMPTRN",43,0)
 ;
"RTN","IVMPTRN",44,0)
END ; - cleanup
"RTN","IVMPTRN",45,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IVMPTRN",46,0)
 K DA,DFN,DIE,DIK,DR,IVMCT,IVMDA,IVMDT,IVMGTOT,IVMINCYR,IVMINS,IVMMTDT
"RTN","IVMPTRN",47,0)
 K IVMNODE,IVMPAT,IVMPID,IVMQDT,IVMREC,IVMSTAT,X,%,VAFPID,IVMPREYR,IVMIY
"RTN","IVMPTRN",48,0)
 D CLEAN^IVMUFNC
"RTN","IVMPTRN",49,0)
 K ^TMP($J,"CC")
"RTN","IVMPTRN",50,0)
 Q
"RTN","IVMPTRN",51,0)
 ;
"RTN","IVMPTRN",52,0)
REG ; Creates FULL query transmission for patient's
"RTN","IVMPTRN",53,0)
 ;         that exist in file (#301.5) "ATR" x-ref
"RTN","IVMPTRN",54,0)
 ;
"RTN","IVMPTRN",55,0)
 ;
"RTN","IVMPTRN",56,0)
 ; - initialize variables for HL7/IVM
"RTN","IVMPTRN",57,0)
 S HLMTN="ORU"
"RTN","IVMPTRN",58,0)
 S HLEID="VAMC "_$P($$SITE^VASITE,"^",3)_" "_HLMTN_"-Z07 SERVER"
"RTN","IVMPTRN",59,0)
 S HLEID=$O(^ORD(101,"B",HLEID,0))
"RTN","IVMPTRN",60,0)
 K ^TMP($J,"CC") ;refresh Consistency Check counter
"RTN","IVMPTRN",61,0)
 D INIT^IVMUFNC(HLEID,.HL)
"RTN","IVMPTRN",62,0)
 ;
"RTN","IVMPTRN",63,0)
 ; - roll thru ATR x-ref for patients that require transmission
"RTN","IVMPTRN",64,0)
 K IVMQUERY("LTD"),IVMQUERY("OVIS") ;Variables needed to open/close last visit date and outpt visit QUERIES
"RTN","IVMPTRN",65,0)
 S IVMIY=0
"RTN","IVMPTRN",66,0)
 F  S IVMIY=$O(^IVM(301.5,"ATR",0,IVMIY)) Q:'IVMIY  D
"RTN","IVMPTRN",67,0)
 .S IVMDA=0
"RTN","IVMPTRN",68,0)
 .F  S IVMDA=$O(^IVM(301.5,"ATR",0,IVMIY,IVMDA)) Q:'IVMDA  D
"RTN","IVMPTRN",69,0)
 ..;
"RTN","IVMPTRN",70,0)
 ..N EVENTS
"RTN","IVMPTRN",71,0)
 ..; - get node, income year, dfn
"RTN","IVMPTRN",72,0)
 ..S IVMNODE=$G(^IVM(301.5,+IVMDA,0)),IVMDT=+$P(IVMNODE,"^",2),DFN=+IVMNODE
"RTN","IVMPTRN",73,0)
 ..I 'DFN!'IVMDT Q
"RTN","IVMPTRN",74,0)
 ..;
"RTN","IVMPTRN",75,0)
 ..Q:($$STATUS^IVMPLOG(IVMDA,.EVENTS)=1)
"RTN","IVMPTRN",76,0)
 ..;
"RTN","IVMPTRN",77,0)
 ..S IVMMTDT=$$GETMTDT(DFN,IVMDT)  ;IVM*2*143
"RTN","IVMPTRN",78,0)
 ..;
"RTN","IVMPTRN",79,0)
 ..; - prepare FULL transmission
"RTN","IVMPTRN",80,0)
 ..D FULL^IVMPTRN7(DFN,IVMMTDT,.EVENTS,.IVMCT,.IVMGTOT,,,,.IVMQUERY)
"RTN","IVMPTRN",81,0)
 ;
"RTN","IVMPTRN",82,0)
 ; After all transmissions send Bulletin of inconsistency check totals
"RTN","IVMPTRN",83,0)
 D EN^IVMPBUL
"RTN","IVMPTRN",84,0)
 ;
"RTN","IVMPTRN",85,0)
 F Z="LTD","OVIS" I $G(IVMQUERY(Z)) D CLOSE^SDQ(IVMQUERY(Z)) K IVMQUERY(Z)
"RTN","IVMPTRN",86,0)
 ; - transmit remaining records
"RTN","IVMPTRN",87,0)
 D
"RTN","IVMPTRN",88,0)
 .N IVMEVENT
"RTN","IVMPTRN",89,0)
 .; event code for Full Data Transmission
"RTN","IVMPTRN",90,0)
 .S IVMEVENT="Z07"
"RTN","IVMPTRN",91,0)
 .D FILE^IVMPTRN3
"RTN","IVMPTRN",92,0)
 Q
"RTN","IVMPTRN",93,0)
 ;
"RTN","IVMPTRN",94,0)
RESP(IVMINCYR,IVMREC) ; Response to the Master Query.
"RTN","IVMPTRN",95,0)
 ;
"RTN","IVMPTRN",96,0)
 ; Input: IVMINCYR -  The income year for which the query was sent
"RTN","IVMPTRN",97,0)
 ;        IVMREC   -  Internal entry number of query to be updated
"RTN","IVMPTRN",98,0)
 ;
"RTN","IVMPTRN",99,0)
 N DFN,IVMDA,IVMMTDT,DA,DR,DIE,EVENTS
"RTN","IVMPTRN",100,0)
 ;
"RTN","IVMPTRN",101,0)
 ; - initialize variables for HL7/IVM
"RTN","IVMPTRN",102,0)
 S HLMTN="ORF"
"RTN","IVMPTRN",103,0)
 S HLEID="VAMC "_$P($$SITE^VASITE,"^",3)_" "_HLMTN_"-Z07 SERVER"
"RTN","IVMPTRN",104,0)
 S HLEID=$O(^ORD(101,"B",HLEID,0))
"RTN","IVMPTRN",105,0)
 D INIT^IVMUFNC(HLEID,.HL)
"RTN","IVMPTRN",106,0)
 ;
"RTN","IVMPTRN",107,0)
 ; - roll thru AYR x-ref
"RTN","IVMPTRN",108,0)
 F DFN=0:0 S DFN=$O(^IVM(301.5,"AYR",IVMINCYR,DFN)) Q:'DFN  D
"RTN","IVMPTRN",109,0)
 .F IVMDA=0:0 S IVMDA=$O(^IVM(301.5,"AYR",IVMINCYR,DFN,IVMDA)) Q:'IVMDA  D
"RTN","IVMPTRN",110,0)
 ..;
"RTN","IVMPTRN",111,0)
 ..; - check for STOP FLAG in file #301.5.
"RTN","IVMPTRN",112,0)
 ..I '$$CLOSED^IVMPLOG(IVMDA) D
"RTN","IVMPTRN",113,0)
 ...;
"RTN","IVMPTRN",114,0)
 ...; if means test was deleted, -10000 could be entered as income year
"RTN","IVMPTRN",115,0)
 ...; in ^IVM(301.5.  close case if deleted.
"RTN","IVMPTRN",116,0)
 ...S IVMMTDT=$P($$LST^DGMTU(DFN,($E(IVMINCYR,1,3)+1)_"1231.9999"),"^",2)
"RTN","IVMPTRN",117,0)
 ...I IVMMTDT="" D CLOSE^IVMPTRN1(IVMINCYR,DFN,1,3) Q
"RTN","IVMPTRN",118,0)
 ...;
"RTN","IVMPTRN",119,0)
 ...;get EVENTS() array
"RTN","IVMPTRN",120,0)
 ...I $$STATUS^IVMPLOG(+IVMDA,.EVENTS)
"RTN","IVMPTRN",121,0)
 ...;
"RTN","IVMPTRN",122,0)
 ...; - prepare FULL transmission
"RTN","IVMPTRN",123,0)
 ...; note: 6th parameter is IVMFLL (=1 to include MSA segment)
"RTN","IVMPTRN",124,0)
 ...D FULL^IVMPTRN7(DFN,IVMMTDT,.EVENTS,.IVMCT,.IVMGTOT,1,,$G(IVMREC),.IVMQUERY)
"RTN","IVMPTRN",125,0)
 ;
"RTN","IVMPTRN",126,0)
 ; - transmit remaining records
"RTN","IVMPTRN",127,0)
 D
"RTN","IVMPTRN",128,0)
 .N IVMEVENT
"RTN","IVMPTRN",129,0)
 .; event code for Full Data Transmission
"RTN","IVMPTRN",130,0)
 .S IVMEVENT="Z07"
"RTN","IVMPTRN",131,0)
 .D FILE1^IVMPTRN3  ; added for v1.6 because of MSA segment (note: the original call was to FILE^IVMPTRN3)
"RTN","IVMPTRN",132,0)
 ;
"RTN","IVMPTRN",133,0)
 ;
"RTN","IVMPTRN",134,0)
 ; - update multiple in file #301.9. Stuff (.03) field with date/time
"RTN","IVMPTRN",135,0)
 ;   of FULL query transmission.
"RTN","IVMPTRN",136,0)
 S DIE="^IVM(301.9,1,10,",DA=+IVMREC,DA(1)=1,DR=".03////"_$$NOW^XLFDT D ^DIE
"RTN","IVMPTRN",137,0)
 Q
"RTN","IVMPTRN",138,0)
 ;
"RTN","IVMPTRN",139,0)
QRY(YEAR) ; See if Master Query has been satisfied for YEAR.
"RTN","IVMPTRN",140,0)
 ;  Input: YEAR - The income year being checked
"RTN","IVMPTRN",141,0)
 ;
"RTN","IVMPTRN",142,0)
 ; Output: 1^2, where   1 =  0, if query does not need a response
"RTN","IVMPTRN",143,0)
 ;                          >0, if query needs a response (value
"RTN","IVMPTRN",144,0)
 ;                              equal to ien of sub-file entry
"RTN","IVMPTRN",145,0)
 ;                              in #301.9
"RTN","IVMPTRN",146,0)
 ;                      2 =  0, if the request has not been received
"RTN","IVMPTRN",147,0)
 ;                           1, if the request has been received
"RTN","IVMPTRN",148,0)
 N IVM,X,Y,Z
"RTN","IVMPTRN",149,0)
 I '$G(YEAR) S X="0^0" G QRYQ
"RTN","IVMPTRN",150,0)
 S Y=$O(^IVM(301.9,1,10,"AB",YEAR,"")) I 'Y S X="0^0" G QRYQ
"RTN","IVMPTRN",151,0)
 S IVM=$O(^IVM(301.9,1,10,"AB",YEAR,Y,0)) I 'IVM S X="0^0" G QRYQ
"RTN","IVMPTRN",152,0)
 S Z=$P($G(^IVM(301.9,1,10,+IVM,0)),"^",3)
"RTN","IVMPTRN",153,0)
 S X=$S(Z:0,1:IVM)_"^1"
"RTN","IVMPTRN",154,0)
QRYQ Q X
"RTN","IVMPTRN",155,0)
 ;
"RTN","IVMPTRN",156,0)
FUTUREMT ;
"RTN","IVMPTRN",157,0)
 ;Find future tests, and if now effective then make them primary.  Will
"RTN","IVMPTRN",158,0)
 ;call the MT event driver unless NOT required, in which case the status
"RTN","IVMPTRN",159,0)
 ;will have the status will be changed to NO LONGER REQUIRED
"RTN","IVMPTRN",160,0)
 ;and may auto-create a Rx copay test
"RTN","IVMPTRN",161,0)
 ;
"RTN","IVMPTRN",162,0)
 N FDATE,IVMPAT,MTIEN,NODE,DFN,DATA
"RTN","IVMPTRN",163,0)
 ;
"RTN","IVMPTRN",164,0)
 S FDATE=0
"RTN","IVMPTRN",165,0)
 F  S FDATE=$O(^IVM(301.5,"AC",FDATE)) Q:('FDATE)  Q:(FDATE>DT)  D
"RTN","IVMPTRN",166,0)
 .S IVMPAT=0
"RTN","IVMPTRN",167,0)
 .F  S IVMPAT=$O(^IVM(301.5,"AC",FDATE,IVMPAT)) Q:'IVMPAT  D
"RTN","IVMPTRN",168,0)
 ..S MTIEN=$O(^IVM(301.5,"AC",FDATE,IVMPAT,""),-1)
"RTN","IVMPTRN",169,0)
 ..I '$$FUTURECK("AC",FDATE,IVMPAT,MTIEN) K ^IVM(301.5,"AC",FDATE,IVMPAT,MTIEN)
"RTN","IVMPTRN",170,0)
 ..K DATA S DATA(.06)="" I $$UPD^DGENDBS(301.5,IVMPAT,.DATA)
"RTN","IVMPTRN",171,0)
 ..S DFN=+$G(^IVM(301.5,IVMPAT,0))
"RTN","IVMPTRN",172,0)
 ..I DFN S NODE=$$LST^DGMTU(DFN,DT_.9999,1) I $E($P(NODE,"^",2),1,3)=$E(DT,1,3),$P(NODE,"^",4)'="","R"'=$P(NODE,"^",4) K ^IVM(301.5,"AC",FDATE,IVMPAT,MTIEN) Q
"RTN","IVMPTRN",173,0)
 ..D MTPRIME^DGMTU4(MTIEN)
"RTN","IVMPTRN",174,0)
 Q
"RTN","IVMPTRN",175,0)
 ;
"RTN","IVMPTRN",176,0)
FUTURERX ;
"RTN","IVMPTRN",177,0)
 ;Find future COPAY tests, and if now effective then make it primary.
"RTN","IVMPTRN",178,0)
 ;Will change the status to NO LONGER APPLICABLE if the vet is not
"RTN","IVMPTRN",179,0)
 ;subject to pharmacy copayments
"RTN","IVMPTRN",180,0)
 ;
"RTN","IVMPTRN",181,0)
 N FDATE,IVMPAT,MTIEN,NODE,DFN,DATA
"RTN","IVMPTRN",182,0)
 ;
"RTN","IVMPTRN",183,0)
 S FDATE=0
"RTN","IVMPTRN",184,0)
 F  S FDATE=$O(^IVM(301.5,"AD",FDATE)) Q:('FDATE)  Q:(FDATE>DT)  D
"RTN","IVMPTRN",185,0)
 .S IVMPAT=0
"RTN","IVMPTRN",186,0)
 .F  S IVMPAT=$O(^IVM(301.5,"AD",FDATE,IVMPAT)) Q:'IVMPAT  D
"RTN","IVMPTRN",187,0)
 ..S MTIEN=$O(^IVM(301.5,"AD",FDATE,IVMPAT,""),-1)
"RTN","IVMPTRN",188,0)
 ..I '$$FUTURECK("AD",FDATE,IVMPAT,MTIEN) K ^IVM(301.5,"AD",FDATE,IVMPAT,MTIEN)
"RTN","IVMPTRN",189,0)
 ..K DATA S DATA(.07)="" I $$UPD^DGENDBS(301.5,IVMPAT,.DATA)
"RTN","IVMPTRN",190,0)
 ..S DFN=+$G(^IVM(301.5,IVMPAT,0))
"RTN","IVMPTRN",191,0)
 ..I DFN S NODE=$$LST^DGMTU(DFN,DT_.9999,2) I $E($P(NODE,"^",2),1,3)=$E(DT,1,3),$P(NODE,"^",4)'="" K ^IVM(301.5,"AD",FDATE,IVMPAT,MTIEN) Q
"RTN","IVMPTRN",192,0)
 ..D RXPRIME^DGMTU4(MTIEN)
"RTN","IVMPTRN",193,0)
 Q
"RTN","IVMPTRN",194,0)
 ;
"RTN","IVMPTRN",195,0)
FUTURECK(TYPE,FDATE,IVMPAT,MTIEN) ;
"RTN","IVMPTRN",196,0)
 ; Check the Future MT or CP xref for a valid income test entry,
"RTN","IVMPTRN",197,0)
 ; and Delete all invalid xref entries.
"RTN","IVMPTRN",198,0)
 N VALID,MTREC S VALID=1,MTREC=0
"RTN","IVMPTRN",199,0)
 ;
"RTN","IVMPTRN",200,0)
 ; Remove duplicate entries from cross reference, leaving last entry
"RTN","IVMPTRN",201,0)
 F  S MTREC=$O(^IVM(301.5,TYPE,FDATE,IVMPAT,MTREC)) Q:(MTREC=MTIEN!('MTREC))  K ^IVM(301.5,TYPE,FDATE,IVMPAT,MTREC)
"RTN","IVMPTRN",202,0)
 ;
"RTN","IVMPTRN",203,0)
 I '$D(^IVM(301.5,IVMPAT,0)) S VALID=0 Q VALID
"RTN","IVMPTRN",204,0)
 I '$D(^DGMT(408.31,MTIEN,0)) S VALID=0 Q VALID
"RTN","IVMPTRN",205,0)
 I FDATE'=+(^DGMT(408.31,MTIEN,0)) S VALID=0 Q VALID
"RTN","IVMPTRN",206,0)
 ;
"RTN","IVMPTRN",207,0)
 Q VALID
"RTN","IVMPTRN",208,0)
 ;
"RTN","IVMPTRN",209,0)
GETMTDT(DFN,IVMDT) ;Get date of primary Means Test or RX Copay Test (IVM*2*143)
"RTN","IVMPTRN",210,0)
 N IDT,MT,MTDT,MTSTA,RX,RXDT,RXSTA
"RTN","IVMPTRN",211,0)
 I '$G(DFN)!('$G(IVMDT)) Q ""
"RTN","IVMPTRN",212,0)
 S IDT=($E(IVMDT,1,3)+1)_"1231.9999"
"RTN","IVMPTRN",213,0)
 ;Get most recent primary MT
"RTN","IVMPTRN",214,0)
 S MT=$$LST^DGMTU(DFN,IDT,1),MTDT=$P(MT,"^",2),MTSTA=$P(MT,"^",4)
"RTN","IVMPTRN",215,0)
 ;Get most recent primary RX Copay Test
"RTN","IVMPTRN",216,0)
 S RX=$$LST^DGMTU(DFN,IDT,2),RXDT=$P(RX,"^",2),RXSTA=$P(RX,"^",4)
"RTN","IVMPTRN",217,0)
 ;If there's no RX Copay Test, then return the Means Test date.
"RTN","IVMPTRN",218,0)
 I 'RXDT Q MTDT
"RTN","IVMPTRN",219,0)
 ;If the RX Copay Test date is greater than or equal to the Means
"RTN","IVMPTRN",220,0)
 ;Test date, and the RX Copay Test status is Exempt, Non-Exempt,
"RTN","IVMPTRN",221,0)
 ;or Pending Adjudication, then return the RX Copay Test date.
"RTN","IVMPTRN",222,0)
 I RXDT'<MTDT,("^E^M^P^"[("^"_RXSTA_"^")) Q RXDT
"RTN","IVMPTRN",223,0)
 ;Otherwise, return the Means Test date.
"RTN","IVMPTRN",224,0)
 Q MTDT
"VER")
8.0^22.0
"BLD",7636,6)
^122
**END**
**END**
