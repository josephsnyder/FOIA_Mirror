Released USR*1*33 SEQ #32
Extracted from mail message
**KIDS**:USR*1.0*33^

**INSTALL NAME**
USR*1.0*33
"BLD",7646,0)
USR*1.0*33^AUTHORIZATION/SUBSCRIPTION^0^3100324^y
"BLD",7646,1,0)
^^2^2^3091117^
"BLD",7646,1,1,0)
The description of this build can be found under patch USR*1*33 in the 
"BLD",7646,1,2,0)
National Patch Module.
"BLD",7646,4,0)
^9.64PA^^
"BLD",7646,6.3)
5
"BLD",7646,"ABPKG")
n
"BLD",7646,"KRN",0)
^9.67PA^779.2^20
"BLD",7646,"KRN",.4,0)
.4
"BLD",7646,"KRN",.401,0)
.401
"BLD",7646,"KRN",.402,0)
.402
"BLD",7646,"KRN",.403,0)
.403
"BLD",7646,"KRN",.5,0)
.5
"BLD",7646,"KRN",.84,0)
.84
"BLD",7646,"KRN",3.6,0)
3.6
"BLD",7646,"KRN",3.8,0)
3.8
"BLD",7646,"KRN",9.2,0)
9.2
"BLD",7646,"KRN",9.8,0)
9.8
"BLD",7646,"KRN",9.8,"NM",0)
^9.68A^15^13
"BLD",7646,"KRN",9.8,"NM",1,0)
USRCLST^^0^B18296617
"BLD",7646,"KRN",9.8,"NM",3,0)
USRULST^^0^B9659905
"BLD",7646,"KRN",9.8,"NM",4,0)
USRL^^0^B3076815
"BLD",7646,"KRN",9.8,"NM",5,0)
USRLM^^0^B36628011
"BLD",7646,"KRN",9.8,"NM",6,0)
USRAEDT^^0^B6181593
"BLD",7646,"KRN",9.8,"NM",8,0)
USRUM^^0^B1604085
"BLD",7646,"KRN",9.8,"NM",9,0)
USRM^^0^B1754703
"BLD",7646,"KRN",9.8,"NM",10,0)
USRMEMBR^^0^B24624500
"BLD",7646,"KRN",9.8,"NM",11,0)
USRMLST^^0^B9060446
"BLD",7646,"KRN",9.8,"NM",12,0)
USRUMMBR^^0^B29411302
"BLD",7646,"KRN",9.8,"NM",13,0)
USRLM1^^0^B12756911
"BLD",7646,"KRN",9.8,"NM",14,0)
USRCLASS^^0^B11828621
"BLD",7646,"KRN",9.8,"NM",15,0)
USRECCL^^0^B30482470
"BLD",7646,"KRN",9.8,"NM","B","USRAEDT",6)

"BLD",7646,"KRN",9.8,"NM","B","USRCLASS",14)

"BLD",7646,"KRN",9.8,"NM","B","USRCLST",1)

"BLD",7646,"KRN",9.8,"NM","B","USRECCL",15)

"BLD",7646,"KRN",9.8,"NM","B","USRL",4)

"BLD",7646,"KRN",9.8,"NM","B","USRLM",5)

"BLD",7646,"KRN",9.8,"NM","B","USRLM1",13)

"BLD",7646,"KRN",9.8,"NM","B","USRM",9)

"BLD",7646,"KRN",9.8,"NM","B","USRMEMBR",10)

"BLD",7646,"KRN",9.8,"NM","B","USRMLST",11)

"BLD",7646,"KRN",9.8,"NM","B","USRULST",3)

"BLD",7646,"KRN",9.8,"NM","B","USRUM",8)

"BLD",7646,"KRN",9.8,"NM","B","USRUMMBR",12)

"BLD",7646,"KRN",19,0)
19
"BLD",7646,"KRN",19.1,0)
19.1
"BLD",7646,"KRN",101,0)
101
"BLD",7646,"KRN",409.61,0)
409.61
"BLD",7646,"KRN",771,0)
771
"BLD",7646,"KRN",779.2,0)
779.2
"BLD",7646,"KRN",870,0)
870
"BLD",7646,"KRN",8989.51,0)
8989.51
"BLD",7646,"KRN",8989.52,0)
8989.52
"BLD",7646,"KRN",8994,0)
8994
"BLD",7646,"KRN","B",.4,.4)

"BLD",7646,"KRN","B",.401,.401)

"BLD",7646,"KRN","B",.402,.402)

"BLD",7646,"KRN","B",.403,.403)

"BLD",7646,"KRN","B",.5,.5)

"BLD",7646,"KRN","B",.84,.84)

"BLD",7646,"KRN","B",3.6,3.6)

"BLD",7646,"KRN","B",3.8,3.8)

"BLD",7646,"KRN","B",9.2,9.2)

"BLD",7646,"KRN","B",9.8,9.8)

"BLD",7646,"KRN","B",19,19)

"BLD",7646,"KRN","B",19.1,19.1)

"BLD",7646,"KRN","B",101,101)

"BLD",7646,"KRN","B",409.61,409.61)

"BLD",7646,"KRN","B",771,771)

"BLD",7646,"KRN","B",779.2,779.2)

"BLD",7646,"KRN","B",870,870)

"BLD",7646,"KRN","B",8989.51,8989.51)

"BLD",7646,"KRN","B",8989.52,8989.52)

"BLD",7646,"KRN","B",8994,8994)

"BLD",7646,"QDEF")
^^^^^^^^^^YES
"BLD",7646,"QUES",0)
^9.62^^
"BLD",7646,"REQB",0)
^9.611^5^5
"BLD",7646,"REQB",1,0)
USR*1.0*15^2
"BLD",7646,"REQB",2,0)
USR*1.0*22^2
"BLD",7646,"REQB",3,0)
USR*1.0*18^2
"BLD",7646,"REQB",4,0)
USR*1.0*28^2
"BLD",7646,"REQB",5,0)
USR*1.0*29^2
"BLD",7646,"REQB","B","USR*1.0*15",1)

"BLD",7646,"REQB","B","USR*1.0*18",3)

"BLD",7646,"REQB","B","USR*1.0*22",2)

"BLD",7646,"REQB","B","USR*1.0*28",4)

"BLD",7646,"REQB","B","USR*1.0*29",5)

"MBREQ")
0
"PKG",194,-1)
1^1
"PKG",194,0)
AUTHORIZATION/SUBSCRIPTION^USR^User Authorization
"PKG",194,20,0)
^9.402P^^
"PKG",194,22,0)
^9.49I^1^1
"PKG",194,22,1,0)
1.0^2970620
"PKG",194,22,1,"PAH",1,0)
33^3100324
"PKG",194,22,1,"PAH",1,1,0)
^^2^2^3100324
"PKG",194,22,1,"PAH",1,1,1,0)
The description of this build can be found under patch USR*1*33 in the 
"PKG",194,22,1,"PAH",1,1,2,0)
National Patch Module.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
13
"RTN","USRAEDT")
0^6^B6181593^B5903950
"RTN","USRAEDT",1,0)
USRAEDT ; SLC/JER - Business Rule Edit ;3/5/10
"RTN","USRAEDT",2,0)
 ;;1.0;AUTHORIZATION/SUBSCRIPTION;**15,29,33**;Jun 20, 1997;Build 5
"RTN","USRAEDT",3,0)
MAIN ; Controls branching
"RTN","USRAEDT",4,0)
 N DIC,DA,DIE,DR,DLAYGO,X,Y,DWPK,TIUFPRIV,USRY,USRI S TIUFPRIV=1
"RTN","USRAEDT",5,0)
 W !,"Please Enter or Edit a Business Rule:",!
"RTN","USRAEDT",6,0)
 S (DIC,DLAYGO)=8930.1,DIC(0)="AEMQL",DIC("A")="Select DOCUMENT DEFINITION: "
"RTN","USRAEDT",7,0)
 D ^DIC K DIC,DLAYGO Q:+Y'>0  S DA=+Y
"RTN","USRAEDT",8,0)
 S DIE=8930.1,DR="[USR DEFINE AUTHORIZATIONS]"
"RTN","USRAEDT",9,0)
 D ^DIE
"RTN","USRAEDT",10,0)
 I '$D(DA) W !!,"<Business Rule DELETED>" Q
"RTN","USRAEDT",11,0)
 W !!,"You defined the following rule:",!
"RTN","USRAEDT",12,0)
 D XLATE(.USRY,DA)
"RTN","USRAEDT",13,0)
 S USRI=0 F  S USRI=$O(USRY(USRI)) Q:+USRI'>0  D
"RTN","USRAEDT",14,0)
 . W !?(2*USRI),USRY(USRI)
"RTN","USRAEDT",15,0)
 Q
"RTN","USRAEDT",16,0)
XLATE(Y,DA) ; Translate business rule
"RTN","USRAEDT",17,0)
 N STATUS,USRCLASS,USROLE,USRD0,USRI
"RTN","USRAEDT",18,0)
 S USRD0=$G(^USR(8930.1,+DA,0))
"RTN","USRAEDT",19,0)
 S STATUS=$$STATUS(DA,USRD0),USRCLASS=$$CLASS(DA,USRD0)
"RTN","USRAEDT",20,0)
 S USROLE=$$ROLE(DA,USRD0)
"RTN","USRAEDT",21,0)
 S Y=$S($E(STATUS,1,2)="UN":"An",$E(STATUS,1)="A":"An",1:"A")
"RTN","USRAEDT",22,0)
 S Y=Y_" "_STATUS_" "
"RTN","USRAEDT",23,0)
 ;**ID** was " may be "
"RTN","USRAEDT",24,0)
 S Y=Y_$$DOCUMENT(DA,USRD0)_" may "_$$ACTION(DA,USRD0)_" by "
"RTN","USRAEDT",25,0)
 S Y=Y_USRCLASS_$S($P(USRD0,U,5)="&":" who is also ",$P(USRD0,U,5)="!":" OR ",(($G(USRCLASS)'="")&($G(USROLE)'="")):" OR ",1:"")
"RTN","USRAEDT",26,0)
 S Y=Y_USROLE,Y=$$WRAP^USRLS(Y,75)
"RTN","USRAEDT",27,0)
 F USRI=1:1:$L(Y,"|") S Y(USRI)=$P(Y,"|",USRI)
"RTN","USRAEDT",28,0)
 Q
"RTN","USRAEDT",29,0)
STATUS(DA,USRD0) ; to which status does the rule apply?
"RTN","USRAEDT",30,0)
 N Y
"RTN","USRAEDT",31,0)
 S Y=$P($G(^USR(8930.6,+$P(USRD0,U,2),0)),U)
"RTN","USRAEDT",32,0)
 Q $G(Y)
"RTN","USRAEDT",33,0)
DOCUMENT(DA,USRD0) ; to which document does the rule apply?
"RTN","USRAEDT",34,0)
 N Y
"RTN","USRAEDT",35,0)
 S Y=$$DDHLEV($P($G(^TIU(8925.1,+USRD0,0)),U,4)) ;ICR 2321
"RTN","USRAEDT",36,0)
 S Y=Y_$$UP^XLFSTR($$PNAME^TIULC1(+USRD0)) ;ICR 2323
"RTN","USRAEDT",37,0)
 I $E(Y,$L(Y))="S" S Y=$E(Y,1,$L(Y)-1)
"RTN","USRAEDT",38,0)
 Q $G(Y)
"RTN","USRAEDT",39,0)
DDHLEV(USRDTYP) ; External value of Document Definition Type
"RTN","USRAEDT",40,0)
 N USRY
"RTN","USRAEDT",41,0)
 S USRY=$S(USRDTYP="CL":"(CLASS) ",USRDTYP="DC":"(DOCUMENT CLASS) ",USRDTYP="DOC":"(TITLE) ",1:"")
"RTN","USRAEDT",42,0)
 Q $G(USRY)
"RTN","USRAEDT",43,0)
ACTION(DA,USRD0) ; to which action does rule apply?
"RTN","USRAEDT",44,0)
 N Y,ACTNDA,NODE0
"RTN","USRAEDT",45,0)
 S ACTNDA=+$P(USRD0,U,3),NODE0=$G(^USR(8930.8,ACTNDA,0))
"RTN","USRAEDT",46,0)
 S Y=$P(NODE0,U,6) ;DOCMT VERB
"RTN","USRAEDT",47,0)
ACTX Q $G(Y)
"RTN","USRAEDT",48,0)
 ;
"RTN","USRAEDT",49,0)
CLASS(DA,USRD0) ; to which user class does the rule apply?
"RTN","USRAEDT",50,0)
 N Y
"RTN","USRAEDT",51,0)
 ;S Y=$$UP^XLFSTR($$CLNAME^USRLM($P(USRD0,U,4)))
"RTN","USRAEDT",52,0)
 S Y=$$UP^XLFSTR($$CLNAME^USRLM($P(USRD0,U,4),1)) ; Use .01 class name
"RTN","USRAEDT",53,0)
 ; **ID** was "A ". Omit U to avoid "an User"
"RTN","USRAEDT",54,0)
 I $L(Y) S Y=$S("AEIO"[$E(Y):"an ",1:"a ")_Y
"RTN","USRAEDT",55,0)
 Q $G(Y)
"RTN","USRAEDT",56,0)
ROLE(DA,USRD0) ; to which user role does the rule apply?
"RTN","USRAEDT",57,0)
 N Y,USRDA
"RTN","USRAEDT",58,0)
 S USRDA=$P(USRD0,U,6),Y=$P($G(^USR(8930.2,+USRDA,0)),U)
"RTN","USRAEDT",59,0)
 ;**ID** changed A and An to lower case
"RTN","USRAEDT",60,0)
 I $L(Y) S Y=$S($E(Y)="A":"an ",$E(Y)="E":"an ",1:"a ")_Y
"RTN","USRAEDT",61,0)
 Q Y
"RTN","USRCLASS")
0^14^B11828621^B8732215
"RTN","USRCLASS",1,0)
USRCLASS ; SLC/JER - User Class Management actions ;11/25/09
"RTN","USRCLASS",2,0)
 ;;1.0;AUTHORIZATION/SUBSCRIPTION;**7,11,33**;Jun 20, 1997;Build 5
"RTN","USRCLASS",3,0)
EDIT ; Edit user classes
"RTN","USRCLASS",4,0)
 N USRDA,USRDATA,USREXPND,USRI,USRSTAT,DIROUT,USRCHNG
"RTN","USRCLASS",5,0)
 N USRLST,NAME,NAME1,NAME2,LINE,CANTMSG
"RTN","USRCLASS",6,0)
 D:'$D(VALMY) EN^VALM2(XQORNOD(0)) S USRI=0,USRCHNG=0
"RTN","USRCLASS",7,0)
 F  S USRI=$O(VALMY(USRI)) Q:+USRI'>0  D  Q:$D(DIROUT)
"RTN","USRCLASS",8,0)
 . S USRDATA=$S(VALMAR="^TMP(""USRCLASS"",$J)":$G(^TMP("USRCLASSIDX",$J,USRI)),1:$G(^TMP("USREXPIDX",$J,USRI)))
"RTN","USRCLASS",9,0)
 . W !!,"Editing #",+USRDATA,!
"RTN","USRCLASS",10,0)
 . S USRDA=+$P(USRDATA,U,2)
"RTN","USRCLASS",11,0)
 . S NAME=$P(^USR(8930,USRDA,0),U),NAME1="|_ "_NAME,NAME2="-"_NAME
"RTN","USRCLASS",12,0)
 . S LINE=^TMP("USRCLASS",$J,USRI,0)
"RTN","USRCLASS",13,0)
 . D EDIT1
"RTN","USRCLASS",14,0)
 . I (LINE[NAME1)!(LINE[NAME2) D  Q
"RTN","USRCLASS",15,0)
 . . S CANTMSG=1,VALMBCK="Q",USRCHNG=0
"RTN","USRCLASS",16,0)
 . I +$G(USRCHNG) S USRLST=$S($L($G(USRLST)):$G(USRLST)_", ",1:"")_USRI
"RTN","USRCLASS",17,0)
 . I $D(USRDATA) D UPDATE^USRL(USRDATA)
"RTN","USRCLASS",18,0)
 Q:$D(DIROUT)
"RTN","USRCLASS",19,0)
 I $D(CANTMSG) D  K VALMY S VALMBCK="Q" Q
"RTN","USRCLASS",20,0)
  . W !!,"  Expanded entries cannot be refreshed; please re-enter the option"
"RTN","USRCLASS",21,0)
  . W !,"to see the result of your edits." H 3
"RTN","USRCLASS",22,0)
 W !,"  Refreshing the list. If expanded entries require refreshing please"
"RTN","USRCLASS",23,0)
 W !,"collapse and re-expand the entries." H 2
"RTN","USRCLASS",24,0)
 S VALMSG="** "_$S($L($G(USRLST)):"Item"_$S($L($G(USRLST),",")>1:"s ",1:" ")_$G(USRLST),1:"Nothing")_" Edited **"
"RTN","USRCLASS",25,0)
 K VALMY S VALMBCK="R"
"RTN","USRCLASS",26,0)
 Q
"RTN","USRCLASS",27,0)
EDIT1 ; Single record edit
"RTN","USRCLASS",28,0)
 ; Receives USRDA
"RTN","USRCLASS",29,0)
 N DA,DIE,DR
"RTN","USRCLASS",30,0)
 I '+$G(USRDA) W !,"No Classes selected." H 2 Q
"RTN","USRCLASS",31,0)
 S DIE="^USR(8930,",DA=USRDA,DR="[USR CLASS STRUCTURE EDIT]"
"RTN","USRCLASS",32,0)
 D FULL^VALM1,^DIE
"RTN","USRCLASS",33,0)
 S USRCHNG=1 ;Needs check if not really changed.
"RTN","USRCLASS",34,0)
 Q
"RTN","USRCLASS",35,0)
EXPAND ; Expand/Collapse user class hierarchy display
"RTN","USRCLASS",36,0)
 N USRDNM,USRLNM,USRSTAT,USRVALMY
"RTN","USRCLASS",37,0)
 D:'$D(VALMY) EN^VALM2(XQORNOD(0))
"RTN","USRCLASS",38,0)
 I $D(VALMY) M USRVALMY=VALMY D EC^USRECCL(.USRVALMY)
"RTN","USRCLASS",39,0)
 W !,"Refreshing the list."
"RTN","USRCLASS",40,0)
 K VALMY S VALMBCK="R"
"RTN","USRCLASS",41,0)
 S USRSTAT=+$P($G(^TMP("USRCLASS",$J,0)),U,2)
"RTN","USRCLASS",42,0)
 S USRDNM=$P($G(^TMP("USRCLASS",$J,0)),U,3)
"RTN","USRCLASS",43,0)
 S USRLNM=$P($G(^TMP("USRCLASS",$J,0)),U,4)
"RTN","USRCLASS",44,0)
 S VALMCNT=+$G(@VALMAR@(0))
"RTN","USRCLASS",45,0)
 S VALMBCK="R"
"RTN","USRCLASS",46,0)
 Q
"RTN","USRCLASS",47,0)
CREATE ; Class constructor
"RTN","USRCLASS",48,0)
 N USRCREAT
"RTN","USRCLASS",49,0)
 N DIC,DLAYGO,X,Y,USRSTAT,USRDNM,USRLNM D FULL^VALM1
"RTN","USRCLASS",50,0)
 S (DIC,DLAYGO)=8930,DIC(0)="AELMQ",DIC("A")="Select CLASS: "
"RTN","USRCLASS",51,0)
 D ^DIC Q:+Y'>0
"RTN","USRCLASS",52,0)
 S USRCREAT=+$P(Y,U,3)
"RTN","USRCLASS",53,0)
 S DA=+Y,DIE=DIC,DIE("NO^")="BACK",DR="[USR CLASS STRUCTURE EDIT]"
"RTN","USRCLASS",54,0)
 D ^DIE
"RTN","USRCLASS",55,0)
 S USRSTAT=+$P($G(^TMP("USRCLASS",$J,0)),U,2)
"RTN","USRCLASS",56,0)
 S USRDNM=$P($G(^TMP("USRCLASS",$J,0)),U,3)
"RTN","USRCLASS",57,0)
 S USRLNM=$P($G(^TMP("USRCLASS",$J,0)),U,4)
"RTN","USRCLASS",58,0)
 I 'USRCREAT Q  ; Don't rebuild without cause
"RTN","USRCLASS",59,0)
 W !,"Rebuilding main class list."
"RTN","USRCLASS",60,0)
 D BUILD^USRCLST(USRSTAT,USRDNM,USRLNM)
"RTN","USRCLASS",61,0)
 S VALMCNT=+$G(@VALMAR@(0))
"RTN","USRCLASS",62,0)
 S VALMBCK="R"
"RTN","USRCLASS",63,0)
 Q
"RTN","USRCLASS",64,0)
MEMBERS ; List Members of classes and their subclasses
"RTN","USRCLASS",65,0)
 N USRDA,USRDATA,USREXPND,USRI,USRSTAT,VALMCNT,DIROUT
"RTN","USRCLASS",66,0)
 D:'$D(VALMY) EN^VALM2(XQORNOD(0)) S USRI=0
"RTN","USRCLASS",67,0)
 F  S USRI=$O(VALMY(USRI)) Q:+USRI'>0  D  Q:$D(DIROUT)
"RTN","USRCLASS",68,0)
 . S USRDATA=$S(VALMAR="^TMP(""USRCLASS"",$J)":$G(^TMP("USRCLASSIDX",$J,USRI)),1:$G(^TMP("USREXPIDX",$J,USRI)))
"RTN","USRCLASS",69,0)
 . W !!,"Listing Members of #",+USRDATA,!
"RTN","USRCLASS",70,0)
 . S USRDA=+$P(USRDATA,U,2) D EN^VALM("USR LIST MEMBERSHIP BY CLASS")
"RTN","USRCLASS",71,0)
 . I $D(USRDATA) D UPDATE^USRL(USRDATA)
"RTN","USRCLASS",72,0)
 W !,"Refreshing the list."
"RTN","USRCLASS",73,0)
 S VALMSG="Members listed"
"RTN","USRCLASS",74,0)
 K VALMY S VALMBCK="R"
"RTN","USRCLASS",75,0)
 Q
"RTN","USRCLST")
0^1^B18296617^B13250120
"RTN","USRCLST",1,0)
USRCLST ; SLC/JER - Review User Classes ;11/25/09
"RTN","USRCLST",2,0)
 ;;1.0;AUTHORIZATION/SUBSCRIPTION;**1,3,7,33**;Jun 20, 1997;Build 5
"RTN","USRCLST",3,0)
MAKELIST ; Build review screen list
"RTN","USRCLST",4,0)
 N STATUS,FNAME,LNAME
"RTN","USRCLST",5,0)
 S STATUS=$$SELSTAT("ACTIVE")
"RTN","USRCLST",6,0)
 I +STATUS<0 S VALMQUIT=1 Q
"RTN","USRCLST",7,0)
 S FNAME=$$RANGE("        Start With Class","FIRST")
"RTN","USRCLST",8,0)
 I +FNAME=-1 S VALMQUIT=1 Q
"RTN","USRCLST",9,0)
 S LNAME=$$RANGE("             Go To Class","LAST")
"RTN","USRCLST",10,0)
 I +LNAME=-1 S VALMQUIT=1 Q 
"RTN","USRCLST",11,0)
 W !,"Searching for the User Classes."
"RTN","USRCLST",12,0)
 D BUILD(STATUS,FNAME,LNAME)
"RTN","USRCLST",13,0)
 Q
"RTN","USRCLST",14,0)
SELSTAT(DEFLT) ; Select User Class status
"RTN","USRCLST",15,0)
 N DIC,XQORM,X,Y
"RTN","USRCLST",16,0)
 S DIC=101,DIC(0)="X",X="USR CLASS STATUS SELECT" D ^DIC
"RTN","USRCLST",17,0)
 I +Y>0 D
"RTN","USRCLST",18,0)
 . S XQORM=+Y_";ORD(101,",XQORM(0)="1A",XQORM("A")="Select User Class Status: " ;ICR 872
"RTN","USRCLST",19,0)
 . S XQORM("B")=DEFLT D ^XQORM
"RTN","USRCLST",20,0)
 . I +Y,($D(Y)>9) S Y=$S($P(Y(1),U,3)="Inactive":0,$P(Y(1),U,3)="Active":1,1:2)
"RTN","USRCLST",21,0)
 Q Y
"RTN","USRCLST",22,0)
RANGE(PROMPT,DEFAULT) ; Get range of classes to browse
"RTN","USRCLST",23,0)
 N Y
"RTN","USRCLST",24,0)
 S Y=$$READ^USRU("F^1:20",PROMPT,DEFAULT) ; Y^Y(0)
"RTN","USRCLST",25,0)
 I Y="^" S Y=-1 Q Y
"RTN","USRCLST",26,0)
 S Y=$S(Y["FIRST":"",Y["LAST":"ZZZZ",1:$P(Y,U))
"RTN","USRCLST",27,0)
 Q Y
"RTN","USRCLST",28,0)
BUILD(SELSTAT,USRFNM,USRLNM) ; Build List
"RTN","USRCLST",29,0)
 N USRPICK,USRJ,NODE0,STATUS,USRUPNM,CLNM,CLIEN,CLABB,USRCNT,USRREC
"RTN","USRCLST",30,0)
 N USRABBR,STATUSNM,NODE0,NAME,CLSTATNM,USRFNMX,USRLNMX,PREFIX
"RTN","USRCLST",31,0)
 S VALMCNT=0
"RTN","USRCLST",32,0)
 S USRPICK=+$O(^ORD(101,"B","USR ACTION SELECT LIST ELEMENT",0)) ;ICR 872
"RTN","USRCLST",33,0)
 ; P33 DRAFT
"RTN","USRCLST",34,0)
 K ^TMP("USRCLASS",$J),^TMP("USRCLASSIDX",$J),^TMP("USRUPCL",$J)
"RTN","USRCLST",35,0)
 S USRFNMX=$S(USRFNM]"":$$UP^XLFSTR($E(USRFNM)),1:USRFNM)
"RTN","USRCLST",36,0)
 S USRLNMX=$$LOW^XLFSTR(USRLNM)_"z"
"RTN","USRCLST",37,0)
 ; -- S ^TMP("USRUPCL",$J,UPPERCASE NAME,IEN,STATNM) by Uppercase .01 name --
"RTN","USRCLST",38,0)
 F  D  Q:$O(^USR(8930,USRJ))'>0
"RTN","USRCLST",39,0)
 . N NAME
"RTN","USRCLST",40,0)
 . S USRJ=$G(USRJ)+1,STATUS=""
"RTN","USRCLST",41,0)
 . ; -- Reject unselected statuses --
"RTN","USRCLST",42,0)
 . I $D(^USR(8930,"D",1,USRJ)) S STATUS=1
"RTN","USRCLST",43,0)
 . I $D(^USR(8930,"D",0,USRJ)) S STATUS=0
"RTN","USRCLST",44,0)
 . I STATUS']"" Q
"RTN","USRCLST",45,0)
 . I SELSTAT'=2,STATUS'=SELSTAT Q
"RTN","USRCLST",46,0)
 . S NODE0=$G(^USR(8930,USRJ,0)),NAME=$P(NODE0,U)
"RTN","USRCLST",47,0)
 . Q:NODE0']""
"RTN","USRCLST",48,0)
 . ; -- Reject entries clearly outside alpha boundaries --
"RTN","USRCLST",49,0)
 . I USRFNMX]NAME Q
"RTN","USRCLST",50,0)
 . I NAME]USRLNMX Q
"RTN","USRCLST",51,0)
 . S STATUSNM=$S(STATUS=0:"INACTIVE",STATUS=1:"ACTIVE",1:"??")
"RTN","USRCLST",52,0)
 . S USRABBR=$P(NODE0,U,2)
"RTN","USRCLST",53,0)
 . S USRUPNM=$$UP^XLFSTR(NAME)
"RTN","USRCLST",54,0)
 . S ^TMP("USRUPCL",$J,USRUPNM,USRJ,STATUSNM)=USRABBR_U_NAME
"RTN","USRCLST",55,0)
 ; -- Loop thru TMP("USRUPCL" and set info into USRREC array --
"RTN","USRCLST",56,0)
 ;  ; -- Now we're dealing with uppercase only so get exact boundaries --
"RTN","USRCLST",57,0)
 S USRFNMX=$$UP^XLFSTR(USRFNM),USRLNMX=$$UP^XLFSTR(USRLNM)_"Z"
"RTN","USRCLST",58,0)
 S CLNM=$S($G(USRFNMX)]"":$O(^TMP("USRUPCL",$J,USRFNMX),-1),1:"")
"RTN","USRCLST",59,0)
 F  S CLNM=$O(^TMP("USRUPCL",$J,CLNM)) Q:CLNM=""  Q:CLNM]USRLNMX  D
"RTN","USRCLST",60,0)
 . N NAME,TMP0
"RTN","USRCLST",61,0)
 . ; -- CLASS NAMES may not be unique --
"RTN","USRCLST",62,0)
 . S CLIEN="" F  S CLIEN=$O(^TMP("USRUPCL",$J,CLNM,CLIEN)) Q:+CLIEN'>0  D
"RTN","USRCLST",63,0)
 . . S PREFIX=+$O(^USR(8930,+CLIEN,1,0))
"RTN","USRCLST",64,0)
 . . S PREFIX=$S(PREFIX>0:"+",1:"")
"RTN","USRCLST",65,0)
 . . S CLSTATNM=$O(^TMP("USRUPCL",$J,CLNM,CLIEN,""))
"RTN","USRCLST",66,0)
 . . S TMP0=^TMP("USRUPCL",$J,CLNM,CLIEN,CLSTATNM)
"RTN","USRCLST",67,0)
 . . S CLABB=$P(TMP0,U),NAME=$P(TMP0,U,2)
"RTN","USRCLST",68,0)
 . . S USRCNT=+$G(USRCNT)+1
"RTN","USRCLST",69,0)
 . . S USRREC=$$SETFLD^VALM1(USRCNT,"","NUMBER")
"RTN","USRCLST",70,0)
 . . S USRREC=$$SETFLD^VALM1(PREFIX_NAME,USRREC,"CLASS NAME")
"RTN","USRCLST",71,0)
 . . S USRREC=$$SETFLD^VALM1(CLABB,USRREC,"ABBREVIATION")
"RTN","USRCLST",72,0)
 . . I SELSTAT=2 S USRREC=$$SETFLD^VALM1(CLSTATNM,USRREC,"ACTIVE")
"RTN","USRCLST",73,0)
 . . S VALMCNT=+$G(VALMCNT)+1
"RTN","USRCLST",74,0)
 . . S ^TMP("USRCLASS",$J,VALMCNT,0)=USRREC
"RTN","USRCLST",75,0)
 . . S ^TMP("USRCLASS",$J,"IDX",VALMCNT,USRCNT)=""
"RTN","USRCLST",76,0)
 . . S ^TMP("USRCLASSIDX",$J,USRCNT)=VALMCNT_U_CLIEN_U W:VALMCNT#10'>0 "."
"RTN","USRCLST",77,0)
 ;Clear the video attributes so we start fresh.
"RTN","USRCLST",78,0)
 D KILL^VALM10(VALMCNT) K ^TMP("USRUPCL",$J)
"RTN","USRCLST",79,0)
 S ^TMP("USRCLASS",$J,0)=+$G(USRCNT)_U_SELSTAT_U_USRFNM_U_USRLNM
"RTN","USRCLST",80,0)
 S ^TMP("USRCLASS",$J,"#")=USRPICK_U_"1:"_+$G(USRCNT)
"RTN","USRCLST",81,0)
 I $D(VALMHDR)>9 D HDR
"RTN","USRCLST",82,0)
 I +$G(USRCNT)'>0 D
"RTN","USRCLST",83,0)
 . S ^TMP("USRCLASS",$J,1,0)=""
"RTN","USRCLST",84,0)
 . S ^TMP("USRCLASS",$J,2,0)="No "_$S(SELSTAT=0:"Inactive ",SELSTAT=1:"Active ",1:"")_"User Classes found"
"RTN","USRCLST",85,0)
 . S VALMCNT=2
"RTN","USRCLST",86,0)
 Q
"RTN","USRCLST",87,0)
  ;
"RTN","USRCLST",88,0)
HDR ; Initialize header for review screen
"RTN","USRCLST",89,0)
 N BY,USRX,USRCNT,SCREEN,STATUS,TITLE
"RTN","USRCLST",90,0)
 S USRX=$G(^TMP("USRCLASS",$J,0)),STATUS=$P("INACTIVE^ACTIVE^ALL",U,+$P(USRX,U,2)+1)
"RTN","USRCLST",91,0)
 S TITLE=STATUS_" USER CLASSES"
"RTN","USRCLST",92,0)
 S USRCNT=$J(+$G(^TMP("USRCLASS",$J,0)),4)
"RTN","USRCLST",93,0)
 S USRCNT=USRCNT_" Class"_$S(+USRCNT=1:"",1:"es")
"RTN","USRCLST",94,0)
 S VALMHDR(1)=$$CENTER^USRLS(TITLE)
"RTN","USRCLST",95,0)
 S VALMHDR(1)=$$SETSTR^VALM1(USRCNT,VALMHDR(1),(IOM-$L(USRCNT)),$L(USRCNT))
"RTN","USRCLST",96,0)
 Q
"RTN","USRCLST",97,0)
CLEAN ; "Joel...Clean up your mess!"
"RTN","USRCLST",98,0)
 K ^TMP("USRCLASS",$J),^TMP("USRCLASSIDX",$J)
"RTN","USRCLST",99,0)
 Q
"RTN","USRECCL")
0^15^B30482470^B29525466
"RTN","USRECCL",1,0)
USRECCL ; SLC/PKR,MA - Routines for expanding/collapsing class views ;11/25/09
"RTN","USRECCL",2,0)
 ;;1.0;AUTHORIZATION/SUBSCRIPTION;**7,18,33**;Jun 20, 1997;Build 5
"RTN","USRECCL",3,0)
 ; Patch USR*1*18 additional quit to contract logic in tag EC.
"RTN","USRECCL",4,0)
 ; This routine invokes IA #872
"RTN","USRECCL",5,0)
 ;======================================================================
"RTN","USRECCL",6,0)
COPYCL(LIST,LSTART,START,END) ;Copy elements of ^TMP("USRCLASS",$J) starting
"RTN","USRECCL",7,0)
 ;at START going to END.
"RTN","USRECCL",8,0)
 N IND,TEXT
"RTN","USRECCL",9,0)
 F IND=START:1:END D
"RTN","USRECCL",10,0)
 . S LSTART=LSTART+1
"RTN","USRECCL",11,0)
 . S TEXT=^TMP("USRCLASS",$J,IND,0)
"RTN","USRECCL",12,0)
 . S TEXT=$$SETFLD^VALM1(LSTART,TEXT,"NUMBER")
"RTN","USRECCL",13,0)
 . S LIST(LSTART)=TEXT_U_$P($G(^TMP("USRCLASSIDX",$J,IND)),U,2)
"RTN","USRECCL",14,0)
 Q LSTART
"RTN","USRECCL",15,0)
 ;
"RTN","USRECCL",16,0)
 ;======================================================================
"RTN","USRECCL",17,0)
EC(USRVALMY) ;Expand or contract the list of classes in VALMY.
"RTN","USRECCL",18,0)
 ;Make sure the request is valid.
"RTN","USRECCL",19,0)
 I '$$VEXREQ(.USRVALMY) Q
"RTN","USRECCL",20,0)
 N ACTION,DIROUT,LISTNUM,REBUILD,START,TSTART,TEXT,USRTMP
"RTN","USRECCL",21,0)
 N USRDATA,USRI,USRIEN,USRPICK,TMP0
"RTN","USRECCL",22,0)
 S REBUILD=0
"RTN","USRECCL",23,0)
 S START=1
"RTN","USRECCL",24,0)
 S TSTART=0
"RTN","USRECCL",25,0)
 S USRI=""
"RTN","USRECCL",26,0)
 F  S USRI=$O(VALMY(USRI)) Q:+USRI'>0  D  Q:$D(DIROUT)
"RTN","USRECCL",27,0)
 . S USRDATA=^TMP("USRCLASSIDX",$J,USRI)
"RTN","USRECCL",28,0)
 . S LISTNUM=$P(USRDATA,U,1)
"RTN","USRECCL",29,0)
 . S USRIEN=$P(USRDATA,U,2)
"RTN","USRECCL",30,0)
 . S TEXT=$G(^TMP("USRCLASS",$J,LISTNUM,0))
"RTN","USRECCL",31,0)
 . S ACTION=$S(TEXT["+":"+",TEXT["-":"-",1:"")
"RTN","USRECCL",32,0)
 . I ACTION="" Q
"RTN","USRECCL",33,0)
 .;If ACTION="+" then expand the class, if ACTION="-" shrink the class.
"RTN","USRECCL",34,0)
 . I ACTION="+" D
"RTN","USRECCL",35,0)
 .. S REBUILD=1
"RTN","USRECCL",36,0)
 .. S TSTART=$$COPYCL(.USRTMP,TSTART,START,LISTNUM-1)
"RTN","USRECCL",37,0)
 .. S START=LISTNUM+1
"RTN","USRECCL",38,0)
 .. S TSTART=TSTART+1
"RTN","USRECCL",39,0)
 .. S USRTMP(TSTART)=$$SETFLD^VALM1(TSTART,TEXT,"NUMBER")
"RTN","USRECCL",40,0)
 .. S USRTMP(TSTART)=$TR(USRTMP(TSTART),"+","-")
"RTN","USRECCL",41,0)
 .. S USRTMP(TSTART)=USRTMP(TSTART)_U_USRIEN
"RTN","USRECCL",42,0)
 .. S TSTART=$$INSSUB(.USRTMP,TSTART,USRIEN)
"RTN","USRECCL",43,0)
 . ; -- ACTION="-" --
"RTN","USRECCL",44,0)
 . I ACTION="-" D
"RTN","USRECCL",45,0)
 .. N TEMP,CONTRACT
"RTN","USRECCL",46,0)
 .. S REBUILD=1
"RTN","USRECCL",47,0)
 .. S TSTART=$$COPYCL(.USRTMP,TSTART,START,LISTNUM-1)
"RTN","USRECCL",48,0)
 .. S TSTART=TSTART+1
"RTN","USRECCL",49,0)
 .. S USRTMP(TSTART)=$$SETFLD^VALM1(TSTART,TEXT,"NUMBER")
"RTN","USRECCL",50,0)
 .. S USRLEVEL=$L(TEXT,"|")
"RTN","USRECCL",51,0)
 .. S USRTMP(TSTART)=$TR(USRTMP(TSTART),"-","+")_U_USRIEN
"RTN","USRECCL",52,0)
 .. S START=USRI+1
"RTN","USRECCL",53,0)
 .. S CONTRACT=1
"RTN","USRECCL",54,0)
 .. ; Patch 18 added the second quit.
"RTN","USRECCL",55,0)
 .. F  Q:'CONTRACT  Q:'$D(^TMP("USRCLASS",$J,START,0))  D
"RTN","USRECCL",56,0)
 ... S TEMP=^TMP("USRCLASS",$J,START,0)
"RTN","USRECCL",57,0)
 ...;Contract if at a or higher level than the main line
"RTN","USRECCL",58,0)
 ... I TEMP["|",$L(TEMP,"|")>USRLEVEL S START=START+1
"RTN","USRECCL",59,0)
 ... E  S CONTRACT=0
"RTN","USRECCL",60,0)
 .;
"RTN","USRECCL",61,0)
 .;Restore the original video attributes.
"RTN","USRECCL",62,0)
 . D RESTORE^VALM10(USRI)
"RTN","USRECCL",63,0)
 ;No more classes to expand or contract, add the rest of the list.
"RTN","USRECCL",64,0)
 I 'REBUILD Q
"RTN","USRECCL",65,0)
 S TMP0=^TMP("USRCLASS",$J,0)
"RTN","USRECCL",66,0)
 S LISTNUM=$P(TMP0,U)
"RTN","USRECCL",67,0)
 S TSTART=$$COPYCL(.USRTMP,TSTART,START,LISTNUM)
"RTN","USRECCL",68,0)
 ;Rebuild the ^TMP arrays.
"RTN","USRECCL",69,0)
 K ^TMP("USRCLASS",$J),^TMP("USRCLASSIDX",$J),^TMP("USRCLASS",$J,"PICK")
"RTN","USRECCL",70,0)
 S VALMCNT=0
"RTN","USRECCL",71,0)
 S START=0
"RTN","USRECCL",72,0)
 F  S START=$O(USRTMP(START)) Q:START=""  D
"RTN","USRECCL",73,0)
 . S VALMCNT=VALMCNT+1
"RTN","USRECCL",74,0)
 . S TEXT=$P(USRTMP(START),U,1)
"RTN","USRECCL",75,0)
 . S USRIEN=$P(USRTMP(START),U,2)
"RTN","USRECCL",76,0)
 . S ^TMP("USRCLASS",$J,START,0)=TEXT
"RTN","USRECCL",77,0)
 . S ^TMP("USRCLASS",$J,"IDX",START,START)=""
"RTN","USRECCL",78,0)
 . S ^TMP("USRCLASSIDX",$J,START)=START_U_USRIEN
"RTN","USRECCL",79,0)
 S ^TMP("USRCLASS",$J,0)=VALMCNT_U_$P(TMP0,U,2)_$P(TMP0,U,3)_$P(TMP0,U,4)
"RTN","USRECCL",80,0)
 S USRPICK=+$O(^ORD(101,"B","USR ACTION SELECT LIST ELEMENT",0))
"RTN","USRECCL",81,0)
 S ^TMP("USRCLASS",$J,"#")=USRPICK_U_"1:"_+$G(VALMCNT)
"RTN","USRECCL",82,0)
 Q
"RTN","USRECCL",83,0)
 ;
"RTN","USRECCL",84,0)
 ;======================================================================
"RTN","USRECCL",85,0)
INSSUB(LIST,TSTART,USRIEN) ;Insert the subclasses into the list.
"RTN","USRECCL",86,0)
 N ACTIVE,CLN,CLNS,DATA,IND,IEN,USRLEVEL,MSG,TEXT
"RTN","USRECCL",87,0)
 ;Determine the level of the subclass and create the appropriate
"RTN","USRECCL",88,0)
 ;diagram.
"RTN","USRECCL",89,0)
 S USRLEVEL=$L(LIST(TSTART),"|")
"RTN","USRECCL",90,0)
 I USRLEVEL=1 S CLNS=" "
"RTN","USRECCL",91,0)
 E  S CLNS=""
"RTN","USRECCL",92,0)
 F IND=2:1:USRLEVEL S CLNS=CLNS_" | "
"RTN","USRECCL",93,0)
 I USRLEVEL>1 S CLNS=CLNS_" |_"
"RTN","USRECCL",94,0)
 E  S CLNS=CLNS_"|_"
"RTN","USRECCL",95,0)
 S IND=0
"RTN","USRECCL",96,0)
 F  S IND=$O(^USR(8930,USRIEN,1,IND)) Q:+IND=0  D
"RTN","USRECCL",97,0)
 . S IEN=^USR(8930,USRIEN,1,IND,0)
"RTN","USRECCL",98,0)
 . S DATA=$G(^USR(8930,IEN,0))
"RTN","USRECCL",99,0)
 . S TSTART=TSTART+1
"RTN","USRECCL",100,0)
 . S TEXT=$$SETFLD^VALM1(TSTART,"","NUMBER")
"RTN","USRECCL",101,0)
 . S CLN=CLNS
"RTN","USRECCL",102,0)
 . I $D(^USR(8930,IEN,1,0))&$D(^USR(8930,IEN,1,"B")) S CLN=CLN_"+"
"RTN","USRECCL",103,0)
 . E  S CLN=CLN_" "
"RTN","USRECCL",104,0)
 . S CLN=CLN_$P(DATA,U) ; Use .01 name, not dipsplay name
"RTN","USRECCL",105,0)
 . S TEXT=$$SETFLD^VALM1(CLN,TEXT,"CLASS NAME")
"RTN","USRECCL",106,0)
 . S TEXT=$$SETFLD^VALM1($P(DATA,U,2),TEXT,"ABBREVIATION")
"RTN","USRECCL",107,0)
 . S ACTIVE=$$EXTERNAL^DILFD(8930,.03,"",$P(DATA,U,3),"MSG")
"RTN","USRECCL",108,0)
 . S TEXT=$$SETFLD^VALM1(ACTIVE,TEXT,"ACTIVE")
"RTN","USRECCL",109,0)
 .;NEED USRCLASSIDX INFO
"RTN","USRECCL",110,0)
 . S LIST(TSTART)=TEXT_U_IEN
"RTN","USRECCL",111,0)
 Q TSTART
"RTN","USRECCL",112,0)
 ;
"RTN","USRECCL",113,0)
 ;======================================================================
"RTN","USRECCL",114,0)
ISSUB(CLASS1,CLASS2,USRLEVEL) ;Return true if CLASS2 is sub to CLASS1.
"RTN","USRECCL",115,0)
 N IND,ISSUB
"RTN","USRECCL",116,0)
 I USRLEVEL(CLASS1)'<USRLEVEL(CLASS2) Q 0
"RTN","USRECCL",117,0)
 ;Check sublevel links between class1 and class2
"RTN","USRECCL",118,0)
 S ISSUB=1
"RTN","USRECCL",119,0)
 F IND=(CLASS1+1):1:(CLASS2-1) D
"RTN","USRECCL",120,0)
 . I USRLEVEL(IND)=1 D  Q
"RTN","USRECCL",121,0)
 .. S ISSUB=0
"RTN","USRECCL",122,0)
 Q ISSUB
"RTN","USRECCL",123,0)
 ;
"RTN","USRECCL",124,0)
 ;======================================================================
"RTN","USRECCL",125,0)
VEXREQ(VALMY) ;Check for valid expand/contract requests.
"RTN","USRECCL",126,0)
 N END,START
"RTN","USRECCL",127,0)
 S START=$O(VALMY(""))
"RTN","USRECCL",128,0)
 S END=$O(VALMY(""),-1)
"RTN","USRECCL",129,0)
 I START=END Q 1
"RTN","USRECCL",130,0)
 ;
"RTN","USRECCL",131,0)
 N ACTION,ACTIND,ACTJND,CIND,CN,IND,JND,USRLEVEL,MSG,TEXT,VALID
"RTN","USRECCL",132,0)
 ;Build the level list.
"RTN","USRECCL",133,0)
 F IND=START:1:END D
"RTN","USRECCL",134,0)
 . S USRLEVEL(IND)=$L(^TMP("USRCLASS",$J,IND,0),"|")
"RTN","USRECCL",135,0)
 S VALID=1
"RTN","USRECCL",136,0)
 S IND=""
"RTN","USRECCL",137,0)
 F  S IND=$O(VALMY(IND)) Q:IND=""  D
"RTN","USRECCL",138,0)
 . S TEXT(IND)=$G(^TMP("USRCLASS",$J,IND,0))
"RTN","USRECCL",139,0)
 . S ACTIND=$S(TEXT(IND)["+":"+ ",TEXT(IND)["-":"-",1:"")
"RTN","USRECCL",140,0)
 . I ACTIND="" Q
"RTN","USRECCL",141,0)
 . S ACTION(IND)=$S(TEXT(IND)["+":"expand ",TEXT(IND)["-":"collapse ",1:"")
"RTN","USRECCL",142,0)
 . S JND=IND
"RTN","USRECCL",143,0)
 . F  S JND=$O(VALMY(JND)) Q:JND=""  D
"RTN","USRECCL",144,0)
 .. S TEXT(JND)=$G(^TMP("USRCLASS",$J,JND,0))
"RTN","USRECCL",145,0)
 .. S ACTJND=$S(TEXT(JND)["+":"+",TEXT(JND)["-":"-",1:"")
"RTN","USRECCL",146,0)
 .. I ACTJND="" Q
"RTN","USRECCL",147,0)
 .. S ACTION(JND)=$S(TEXT(JND)["+":"expand ",TEXT(JND)["-":"collapse ",1:"")
"RTN","USRECCL",148,0)
 .. I $$ISSUB(IND,JND,.USRLEVEL) D
"RTN","USRECCL",149,0)
 ... I ACTION(IND)'=ACTION(JND) D  Q
"RTN","USRECCL",150,0)
 .... S CIND(IND)=$P(^TMP("USRCLASSIDX",$J,IND),U,2)
"RTN","USRECCL",151,0)
 .... S CN(IND)=$P(^USR(8930,CIND(IND),0),U,1)
"RTN","USRECCL",152,0)
 .... S CIND(JND)=$P(^TMP("USRCLASSIDX",$J,JND),U,2)
"RTN","USRECCL",153,0)
 .... S CN(JND)=$P(^USR(8930,CIND(JND),0),U,1)
"RTN","USRECCL",154,0)
 .... S MSG="You cannot "_ACTION(IND)_CN(IND)_" and "_ACTION(JND)_CN(JND)
"RTN","USRECCL",155,0)
 .... D MSG^VALM10(MSG)
"RTN","USRECCL",156,0)
 .... H 4
"RTN","USRECCL",157,0)
 .... S VALID=0
"RTN","USRECCL",158,0)
 Q VALID
"RTN","USRECCL",159,0)
 ;
"RTN","USRL")
0^4^B3076815^B3296978
"RTN","USRL",1,0)
USRL ; SLC/JER - User class library ;11/12/09
"RTN","USRL",2,0)
 ;;1.0;AUTHORIZATION/SUBSCRIPTION;**3,7,33**;Jun 20, 1997;Build 5
"RTN","USRL",3,0)
 ;======================================================================
"RTN","USRL",4,0)
UPDATE(ITEM) ; Updates list following edit
"RTN","USRL",5,0)
 N DA,USRREC,USRABB,USRCLNM,USRACT,USRITM
"RTN","USRL",6,0)
 N USRLREC,USREREC
"RTN","USRL",7,0)
 S DA=+$P(ITEM,U,2),USRREC=$G(^USR(8930,+DA,0))
"RTN","USRL",8,0)
 S USRITM=+ITEM
"RTN","USRL",9,0)
 ;S USRCLNM=$S(USRREC']"":"<Class DELETED>",$P(USRREC,U,4)]"":$P(USRREC,U,4),1:$$MIXED^USRLS($P(USRREC,U)))
"RTN","USRL",10,0)
 S USRCLNM=$S(USRREC']"":"<Class DELETED>",1:$P(USRREC,U))
"RTN","USRL",11,0)
 I +$D(^USR(8930,DA,1))>9 S USRCLNM="+"_USRCLNM
"RTN","USRL",12,0)
 S USRABB=$P(USRREC,U,2),USRACT=$S(+$P(USRREC,U,3):"Active",1:"Inactive")
"RTN","USRL",13,0)
 S USRLREC=$$SETFLD^VALM1(USRITM,$G(USRLREC),"NUMBER")
"RTN","USRL",14,0)
 S USRLREC=$$SETFLD^VALM1(USRCLNM,$G(USRLREC),"CLASS NAME")
"RTN","USRL",15,0)
 S USRLREC=$$SETFLD^VALM1(USRABB,$G(USRLREC),"ABBREVIATION")
"RTN","USRL",16,0)
 S USRLREC=$$SETFLD^VALM1(USRACT,$G(USRLREC),"ACTIVE")
"RTN","USRL",17,0)
 S USREREC=$$SETFLD^VALM1(USRITM,$G(USREREC),"NUMBER")
"RTN","USRL",18,0)
 S USREREC=$$SETFLD^VALM1(USRCLNM,$G(USREREC),"CLASS NAME")
"RTN","USRL",19,0)
 S USREREC=$$SETFLD^VALM1(USRABB,$G(USREREC),"ABBREVIATION")
"RTN","USRL",20,0)
 S USREREC=$$SETFLD^VALM1(USRACT,$G(USREREC),"ACTIVE")
"RTN","USRL",21,0)
 S ^TMP("USRCLASS",$J,+USRITM,0)=USRLREC
"RTN","USRL",22,0)
 D RESTORE^VALM10(+USRITM),CNTRL^VALM10(+USRITM,1,VALM("RM"),IOINHI,IOINORM)
"RTN","USRL",23,0)
 Q
"RTN","USRL",24,0)
RESTORE(ITEM) ; Restore video attributes for a single list element
"RTN","USRL",25,0)
 D RESTORE^VALM10(ITEM),FLDCTRL^VALM10(ITEM,"NUMBER",IOINHI,IOINORM)
"RTN","USRL",26,0)
 Q
"RTN","USRL",27,0)
 ;
"RTN","USRL",28,0)
 ;======================================================================
"RTN","USRL",29,0)
VCLDN(NAME) ;Screen for valid class display names.
"RTN","USRL",30,0)
 N LEN
"RTN","USRL",31,0)
 S LEN=$L(NAME)
"RTN","USRL",32,0)
 I (LEN<3)!(LEN>55) Q 0
"RTN","USRL",33,0)
 ;
"RTN","USRL",34,0)
 ;Don't allow "+" or "-", or "|" in the name.
"RTN","USRL",35,0)
 I (NAME["+")!(NAME["-")!(NAME["|") Q 0
"RTN","USRL",36,0)
 ;
"RTN","USRL",37,0)
 Q 1
"RTN","USRL",38,0)
 ;
"RTN","USRLM")
0^5^B36628011^B62037293
"RTN","USRLM",1,0)
USRLM ; SLC/JER - User Class Membership functions and proc's ; 11/25/09
"RTN","USRLM",2,0)
 ;;1.0;AUTHORIZATION/SUBSCRIPTION;**2,3,6,7,8,13,16,25,28,33**;Jun 20, 1997;Build 5
"RTN","USRLM",3,0)
 ;======================================================================
"RTN","USRLM",4,0)
ISA(USER,CLASS,ERR,USRDT) ; Boolean - Is USER a Member of CLASS?
"RTN","USRLM",5,0)
 N USRY,USRI
"RTN","USRLM",6,0)
 I $S(CLASS="USER":1,CLASS=+$O(^USR(8930,"B","USER",0)):1,1:0) S USRY=1 G ISAX
"RTN","USRLM",7,0)
 ; In case USER is entered as the name, not IEN:
"RTN","USRLM",8,0)
 I '+USER S USER=$$FIND1^DIC(200,,"X",USER,,,"USRERR") K USRERR
"RTN","USRLM",9,0)
 I +USER'>0 S ERR="INVALID USER" Q 0
"RTN","USRLM",10,0)
 I '+CLASS S CLASS=+$O(^USR(8930,"B",CLASS,0))
"RTN","USRLM",11,0)
 I +CLASS'>0 S ERR="INVALID USER CLASS" Q 0
"RTN","USRLM",12,0)
 ; If USER is a member of CLASS return true
"RTN","USRLM",13,0)
 S USRY=0
"RTN","USRLM",14,0)
 I +$D(^USR(8930.3,"AUC",USER,CLASS)) D
"RTN","USRLM",15,0)
 . N USRMDA
"RTN","USRLM",16,0)
 . S USRMDA=0
"RTN","USRLM",17,0)
 . F  S USRMDA=+$O(^USR(8930.3,"AUC",USER,CLASS,USRMDA)) Q:((+USRMDA'>0)!(USRY))  D
"RTN","USRLM",18,0)
 .. S USRY=+$$CURRENT(USRMDA,$G(USRDT))
"RTN","USRLM",19,0)
 I USRY Q USRY
"RTN","USRLM",20,0)
 ; Otherwise, check to see if user is a member of any subclass of CLASS
"RTN","USRLM",21,0)
 S USRI=0
"RTN","USRLM",22,0)
 F  S USRI=$O(^USR(8930,+CLASS,1,USRI)) Q:+USRI'>0!+$G(USRY)  D
"RTN","USRLM",23,0)
 . N USRSUB S USRSUB=+$G(^USR(8930,+CLASS,1,USRI,0)) Q:+USRSUB'>0
"RTN","USRLM",24,0)
 . S USRY=$$ISA(USER,USRSUB,,+$G(USRDT)) ; Recurs to find members of subclass
"RTN","USRLM",25,0)
ISAX Q +$G(USRY)
"RTN","USRLM",26,0)
 ;======================================================================
"RTN","USRLM",27,0)
ISAWM(USER,CLASS) ; Boolean - Is USER a Member of CLASS, with message.
"RTN","USRLM",28,0)
 I $$ISA(USER,CLASS) D  Q 1
"RTN","USRLM",29,0)
 . W !,"Already a member of this class"
"RTN","USRLM",30,0)
 . H 2
"RTN","USRLM",31,0)
 E  Q 0
"RTN","USRLM",32,0)
 ;
"RTN","USRLM",33,0)
 ;======================================================================
"RTN","USRLM",34,0)
CURRENT(MEMBER,USRDT) ; Boolean - Is Membership current?
"RTN","USRLM",35,0)
 N USRIN,USROUT,USRY
"RTN","USRLM",36,0)
 I +$G(USRDT)'>0 S USRDT=DT
"RTN","USRLM",37,0)
 S USRIN=+$P($G(^USR(8930.3,+MEMBER,0)),U,3)
"RTN","USRLM",38,0)
 S USROUT=+$P($G(^USR(8930.3,+MEMBER,0)),U,4)
"RTN","USRLM",39,0)
 I USRIN'>USRDT,$S(USROUT>0&(USROUT'<USRDT):1,USROUT=0:1,1:0) S USRY=1
"RTN","USRLM",40,0)
 E  S USRY=0
"RTN","USRLM",41,0)
 Q USRY
"RTN","USRLM",42,0)
 ;
"RTN","USRLM",43,0)
 ;======================================================================
"RTN","USRLM",44,0)
ISTERM(USER,ERR) ;Return true if USER (DUZ or IEN in file 200) has a termination date
"RTN","USRLM",45,0)
 ; and that date is less than the current date and time.
"RTN","USRLM",46,0)
 N TERM,TERMDATE,IENS,HUSH
"RTN","USRLM",47,0)
 S (TERM,TERMDATE)=0
"RTN","USRLM",48,0)
 S IENS=USER_",",TERMDATE=$$GET1^DIQ(200,IENS,9.2,"I",,"ERR") ; ICR 10060
"RTN","USRLM",49,0)
 I $D(ERR("DIERR","E",601)) D  G ISTERMX
"RTN","USRLM",50,0)
 . S ERR="INVALID USER"
"RTN","USRLM",51,0)
 . S HUSH=$S($$BROKER^XWBLIB:1,1:0) ; ICR 2198
"RTN","USRLM",52,0)
 . I 'HUSH W !,"Warning: bad data. ",+USER," does not exist in file 200!" H 3
"RTN","USRLM",53,0)
 I (+TERMDATE>0)&(+TERMDATE<$$NOW^XLFDT) S TERM=1
"RTN","USRLM",54,0)
ISTERMX ;
"RTN","USRLM",55,0)
  Q TERM
"RTN","USRLM",56,0)
  ;
"RTN","USRLM",57,0)
 ;======================================================================
"RTN","USRLM",58,0)
RESIZE(LONG,SHORT,SHRINK) ; Resizes list area
"RTN","USRLM",59,0)
 N USRBM S USRBM=$S(VALMMENU:SHORT,+$G(SHRINK):SHORT,1:LONG)
"RTN","USRLM",60,0)
 I VALM("BM")'=USRBM S VALMBCK="R" D
"RTN","USRLM",61,0)
 . S VALM("BM")=USRBM,VALM("LINES")=(USRBM-VALM("TM"))+1
"RTN","USRLM",62,0)
 . I +$G(VALMCC) D RESET^VALM4
"RTN","USRLM",63,0)
 Q
"RTN","USRLM",64,0)
 ;======================================================================
"RTN","USRLM",65,0)
TERM ;USR actions to be taken when a user is terminated. Invoked by
"RTN","USRLM",66,0)
 ;XU USER TERMINATE.  XUIFN is the user being terminated; Newed in XUSERP.
"RTN","USRLM",67,0)
 ;Sets all Class Memberships to expired.
"RTN","USRLM",68,0)
 N IND,OLDTERM,NOW
"RTN","USRLM",69,0)
 S NOW=DT ;Piece 4 is date only, time not needed.
"RTN","USRLM",70,0)
 S IND=""
"RTN","USRLM",71,0)
 F  S IND=$O(^USR(8930.3,"B",XUIFN,IND)) Q:IND=""  D
"RTN","USRLM",72,0)
 . S OLDTERM=+$P($G(^USR(8930.3,IND,0)),U,4)
"RTN","USRLM",73,0)
 . I (OLDTERM>0)&(OLDTERM<NOW) Q
"RTN","USRLM",74,0)
 . S $P(^USR(8930.3,IND,0),U,4)=NOW
"RTN","USRLM",75,0)
 Q
"RTN","USRLM",76,0)
 ;
"RTN","USRLM",77,0)
 ;======================================================================
"RTN","USRLM",78,0)
WHOIS(MEMBER,CLASS,NAME01) ; Given a Class, set array of CURRENT members. Used in CANDEL.
"RTN","USRLM",79,0)
 ; CLASS is pointer to file 8930
"RTN","USRLM",80,0)
 ; MEMBER is name of array (local or global) in which members are
"RTN","USRLM",81,0)
 ;        returned in alphabetical order by name
"RTN","USRLM",82,0)
 ; NAME01 is optional. If NAME01>0 use .01 Class Name in returned data.
"RTN","USRLM",83,0)
 D WHOIS1^USRLM1(MEMBER,CLASS,+$G(NAME01)) Q  ;Moved to USRLM1
"RTN","USRLM",84,0)
 ;
"RTN","USRLM",85,0)
 ;======================================================================
"RTN","USRLM",86,0)
WHOIS2(MEMBER,USRCLASS,NAME01) ;Given a Class, return list of CURRENT members
"RTN","USRLM",87,0)
 ; Uses WHOISTMP^USRLM1 (and XREF ACU)
"RTN","USRLM",88,0)
 ; USRCLASS is pointer to file 8930
"RTN","USRLM",89,0)
 ; MEMBER is name of array (local or global) in which members are
"RTN","USRLM",90,0)
 ;        returned in alphabetical order by name - indexed by number
"RTN","USRLM",91,0)
 ;       i.e. @MEMBER@(1 ...n)
"RTN","USRLM",92,0)
 ;  @member@(0) = ien of8930^usr class name^count of members
"RTN","USRLM",93,0)
 ;  @member@(1..n)=
"RTN","USRLM",94,0)
 ;    1    2        3          4         5        6       7      8
"RTN","USRLM",95,0)
 ;  p200^p8930.3^classname^effectdate^inactdate^username^title^mailcode
"RTN","USRLM",96,0)
 ;  Note: For pieces 2,4 & 5 - Only one of potentially many is returned
"RTN","USRLM",97,0)
 ; NAME01 is optional. If NAME01>0 use .01 Class Name in returned data.
"RTN","USRLM",98,0)
 ;N USER,USRNM,USRCLNM,USRCNT,USRDA,USRNDX,EFFCTV,EXPIRES,USRI
"RTN","USRLM",99,0)
 N USER,USRNM,USRDA,USRNDX,EFFCTV,EXPIRES,USRI
"RTN","USRLM",100,0)
 D WHOISTMP^USRLM1(.USRCLASS,+$G(NAME01))
"RTN","USRLM",101,0)
 S USRNM="",USRNDX=0
"RTN","USRLM",102,0)
 F  S USRNM=$O(^TMP("USRWHO",$J,"USRWHO2","B",USRNM)) Q:USRNM']""  D
"RTN","USRLM",103,0)
 . S USER=0 F  S USER=$O(^TMP("USRWHO",$J,"USRWHO2","B",USRNM,USER)) Q:'USER  D
"RTN","USRLM",104,0)
 . . S USRNDX=USRNDX+1
"RTN","USRLM",105,0)
 . . S @MEMBER@(USRNDX)=^TMP("USRWHO",$J,"USRWHO2",USER)
"RTN","USRLM",106,0)
 S @MEMBER@(0)=^TMP("USRWHO",$J,"USRWHO2",0)
"RTN","USRLM",107,0)
 S $P(@MEMBER@(0),U,3)=USRNDX
"RTN","USRLM",108,0)
 K ^TMP("USRWHO",$J,"USRWHO2")
"RTN","USRLM",109,0)
 Q
"RTN","USRLM",110,0)
 ;
"RTN","USRLM",111,0)
 ;======================================================================
"RTN","USRLM",112,0)
WHATIS(USER,CLASS,NAME01) ; Given a User, set array of classes USER belongs to
"RTN","USRLM",113,0)
 ; USER is pointer to file 200
"RTN","USRLM",114,0)
 ; CLASS is name of the array (local or global) to be set.
"RTN","USRLM",115,0)
 ;   Array is set in alpha order
"RTN","USRLM",116,0)
 ;   by name(display name or class name)in uppercase. Numeric indicator is appended to name
"RTN","USRLM",117,0)
 ;   to accomodate multiple memberships over time in the same class.
"RTN","USRLM",118,0)
 ;     ARRAY(Uppername_indicator)=UserClassIEN^MembershipIEN^name^EffectDt^ExpireDt
"RTN","USRLM",119,0)
 ; NAME01 is optional. If NAME01>0 use .01 Class Name
"RTN","USRLM",120,0)
 ;   Otherwise, use Display Name
"RTN","USRLM",121,0)
 N IND,GROUP,CLASSNM,CLASSCNT,USRCUR,USRDA,EFFCTV,EXPIRES,EFFCTV1,TMPDATA,UPCLASNM
"RTN","USRLM",122,0)
 K ^TMP("USRWHATIS",$J)
"RTN","USRLM",123,0)
 S (CLASSCNT,IND,GROUP)=0 S NAME01=+$G(NAME01)
"RTN","USRLM",124,0)
 F  S GROUP=$O(^USR(8930.3,"AUC",USER,GROUP)) Q:+GROUP'>0  D
"RTN","USRLM",125,0)
 . S USRDA=0
"RTN","USRLM",126,0)
 . F  S USRDA=$O(^USR(8930.3,"AUC",USER,GROUP,USRDA)) Q:+USRDA'>0  D
"RTN","USRLM",127,0)
 .. S USRCUR="E",EFFCTV1=""
"RTN","USRLM",128,0)
 .. S EFFCTV=$P($G(^USR(8930.3,+USRDA,0)),U,3) S:EFFCTV="" EFFCTV1=DT
"RTN","USRLM",129,0)
 .. S EXPIRES=$P($G(^USR(8930.3,+USRDA,0)),U,4) S:EXPIRES="" EXPIRES=9999999
"RTN","USRLM",130,0)
 .. I EFFCTV'>DT,EXPIRES'<DT S USRCUR="C"
"RTN","USRLM",131,0)
 .. I EFFCTV>DT S USRCUR="F"
"RTN","USRLM",132,0)
 .. S CLASSNM=$$CLNAME(+GROUP,+$G(NAME01)),UPCLASNM=$$UP^XLFSTR(CLASSNM)
"RTN","USRLM",133,0)
 .. S TMPDATA=GROUP_U_USRDA_U_CLASSNM_U_EFFCTV_U_$S(EXPIRES=9999999:"",1:EXPIRES)
"RTN","USRLM",134,0)
 .. S ^TMP("USRWHATIS",$J,UPCLASNM,USRCUR,$S(EFFCTV="":EFFCTV1,1:EFFCTV),EXPIRES)=TMPDATA
"RTN","USRLM",135,0)
 I $D(^TMP("USRWHATIS",$J)) D
"RTN","USRLM",136,0)
 . S UPCLASNM=""
"RTN","USRLM",137,0)
 . F  S UPCLASNM=$O(^TMP("USRWHATIS",$J,UPCLASNM)) Q:UPCLASNM=""  D
"RTN","USRLM",138,0)
 .. F USRCUR="F","E","C" D
"RTN","USRLM",139,0)
 ... S EFFCTV=""
"RTN","USRLM",140,0)
 ... F  S EFFCTV=$O(^TMP("USRWHATIS",$J,UPCLASNM,USRCUR,EFFCTV)) Q:EFFCTV=""  D
"RTN","USRLM",141,0)
 .... S EXPIRES=""
"RTN","USRLM",142,0)
 .... F  S EXPIRES=$O(^TMP("USRWHATIS",$J,UPCLASNM,USRCUR,EFFCTV,EXPIRES)) Q:EXPIRES=""  D
"RTN","USRLM",143,0)
 ..... S IND=IND+1
"RTN","USRLM",144,0)
 ..... S @CLASS@(UPCLASNM_IND)=$G(^TMP("USRWHATIS",$J,UPCLASNM,USRCUR,EFFCTV,EXPIRES))
"RTN","USRLM",145,0)
 ..... S CLASSCNT=+$G(CLASSCNT)+1
"RTN","USRLM",146,0)
 S @CLASS@(0)=USER_U_$$SIGNAME^USRLS(+USER)_U_CLASSCNT
"RTN","USRLM",147,0)
 K ^TMP("USRWHATIS",$J)
"RTN","USRLM",148,0)
 Q
"RTN","USRLM",149,0)
 ;====================================================================== 
"RTN","USRLM",150,0)
CLNAME(CLASS,NAME01) ; Given a class, return the Display Name or
"RTN","USRLM",151,0)
 ; NAME01 is optional. If NAME01>0 use .01 Class Name in returned data.
"RTN","USRLM",152,0)
 N USRREC,USRY
"RTN","USRLM",153,0)
 S USRREC=$G(^USR(8930,+CLASS,0))
"RTN","USRLM",154,0)
 Q $S(+$G(NAME01)>0:$P(USRREC,U),$P(USRREC,U,4)]"":$P(USRREC,U,4),1:$$MIXED^USRLS($P(USRREC,U)))
"RTN","USRLM",155,0)
 ;
"RTN","USRLM",156,0)
 ;======================================================================
"RTN","USRLM",157,0)
PUT(USER,CLASS) ; Make user a member of a given class
"RTN","USRLM",158,0)
 N DIC,DLAYGO,DA,DR,DIE,X,Y
"RTN","USRLM",159,0)
 S (DIC,DLAYGO)=8930.3,DIC(0)="LXF",X=""""_"`"_USER_"""" D ^DIC Q:+Y'>0
"RTN","USRLM",160,0)
 S DIE=DIC,DA=+Y,DR=".02///"_CLASS_";.03///"_DT
"RTN","USRLM",161,0)
 D ^DIE
"RTN","USRLM",162,0)
 Q
"RTN","USRLM",163,0)
 ;====================================================================== 
"RTN","USRLM",164,0)
SUBCLASS(DA,CLASS) ; Evaluate whether a given USER CLASS is a DESCENDENT
"RTN","USRLM",165,0)
 ;                 of another class
"RTN","USRLM",166,0)
 ; Receives DA = record # of possible subclass in 8930, and
"RTN","USRLM",167,0)
 ;       CLASS = record # of possible descendent class in 8930
"RTN","USRLM",168,0)
 N USRI,USRY S (USRI,USRY)=0
"RTN","USRLM",169,0)
 I +$G(DA)'>0 S DA=+$O(^USR(8930,"B",DA,0))
"RTN","USRLM",170,0)
 I +$G(CLASS)'>0 S CLASS=+$O(^USR(8930,"B",CLASS,0))
"RTN","USRLM",171,0)
 F  S USRI=$O(^USR(8930,"AD",DA,USRI)) Q:+USRI'>0!(USRY=1)  D
"RTN","USRLM",172,0)
 . I USRI=CLASS S USRY=1 Q
"RTN","USRLM",173,0)
 . S USRY=$$SUBCLASS(USRI,CLASS)
"RTN","USRLM",174,0)
 Q USRY
"RTN","USRLM",175,0)
 ;====================================================================== 
"RTN","USRLM",176,0)
CANDEL(USRCLDA,NAME01) ; Evaluate whether user can delete a class.  Can't find where it's used.
"RTN","USRLM",177,0)
 ; NAME01 is optional. If NAME01>0 use .01 Class Name in returned data.
"RTN","USRLM",178,0)
 N USRMLST,USRY S USRY=0
"RTN","USRLM",179,0)
 D WHOIS1^USRLM1("USRMLST",USRCLDA,+$G(NAME01))
"RTN","USRLM",180,0)
 I +$P(USRMLST(0),U,3)>0 S USRY=1 W "  There are members of the class ",$$CLNAME(USRCLDA,+$G(NAME01))
"RTN","USRLM",181,0)
 Q USRY
"RTN","USRLM1")
0^13^B12756911^n/a
"RTN","USRLM1",1,0)
USRLM1 ; SLC/MAM - User Class Membership functions and proc's Cont ; 03/04/10
"RTN","USRLM1",2,0)
 ;;1.0;AUTHORIZATION/SUBSCRIPTION;**33**;Jun 20, 1997;Build 5
"RTN","USRLM1",3,0)
 ;======================================================================
"RTN","USRLM1",4,0)
WHOISTMP(CLASS,NAME01) ; Given a Class, return list of CURRENT members into ^TMP
"RTN","USRLM1",5,0)
 ; Uses 8930.3 xref ACU
"RTN","USRLM1",6,0)
 ; CLASS is pointer to file 8930
"RTN","USRLM1",7,0)
 ; MEMBER is name of array (local or global) in which members are
"RTN","USRLM1",8,0)
 ;        returned in order by user/x-ref by name
"RTN","USRLM1",9,0)
 ;        main = ^tmp("USRWHO",$j,"USRWHO2",user)
"RTN","USRLM1",10,0)
 ;        x-ref= ^tmp("USRWHO",$j,"USRWHO2","b",usrnm,user)
"RTN","USRLM1",11,0)
 ;  -- used by whois2 call
"RTN","USRLM1",12,0)
 ; NAME01 is optional. If NAME01>0 use .01 Class Name in returned data.
"RTN","USRLM1",13,0)
 N USER,USRNM,USRCLNM,USRCNT,USRDA,EFFCTV,EXPIRES,USRI,USRMC,USRTIT,IENS
"RTN","USRLM1",14,0)
 S USER=0,USRCNT=+$P($G(@MEMBER@(0)),U,3)
"RTN","USRLM1",15,0)
 F  S USER=$O(^USR(8930.3,"ACU",CLASS,USER)) Q:+USER'>0  D
"RTN","USRLM1",16,0)
 . S USRDA=$O(^USR(8930.3,"ACU",CLASS,USER,0)) Q:+USRDA'>0  ;User membership DA
"RTN","USRLM1",17,0)
 . S EFFCTV=$P($G(^USR(8930.3,+USRDA,0)),U,3)
"RTN","USRLM1",18,0)
 . S EXPIRES=$P($G(^USR(8930.3,+USRDA,0)),U,4)
"RTN","USRLM1",19,0)
 . S USRNM=$$PERSNAME(+USER)
"RTN","USRLM1",20,0)
 . S IENS=+USER_",",USRTIT=$$GET1^DIQ(200,IENS,8,,,"ERR") ; Title ICR 10060
"RTN","USRLM1",21,0)
 . S USRMC=$$GET1^DIQ(200,IENS,28,,,"ERR") ;MAIL CODE ICR 10060
"RTN","USRLM1",22,0)
 . S USRCLNM=$$CLNAME^USRLM(+CLASS,+$G(NAME01))
"RTN","USRLM1",23,0)
 . S ^TMP("USRWHO",$J,"USRWHO2",USER)=USER_U_USRDA_U_USRCLNM_U_EFFCTV_U_EXPIRES_U_USRNM_U_USRTIT_U_USRMC
"RTN","USRLM1",24,0)
 . S ^TMP("USRWHO",$J,"USRWHO2","B",USRNM,USER)=""
"RTN","USRLM1",25,0)
 . S USRCNT=+$G(USRCNT)+1
"RTN","USRLM1",26,0)
 I '$D(^TMP("USRWHO",$J,"USRWHO2",0))#2 S ^TMP("USRWHO",$J,"USRWHO2",0)=CLASS_U_$P($G(^USR(8930,+CLASS,0)),U)_U
"RTN","USRLM1",27,0)
 S $P(^TMP("USRWHO",$J,"USRWHO2",0),U,3)=USRCNT
"RTN","USRLM1",28,0)
 S USRI=0 F  S USRI=$O(^USR(8930,+CLASS,1,USRI)) Q:+USRI'>0  D
"RTN","USRLM1",29,0)
 . N USRSUB S USRSUB=+$G(^USR(8930,+CLASS,1,USRI,0)) Q:+USRSUB'>0
"RTN","USRLM1",30,0)
 . D WHOISTMP(USRSUB,+$G(NAME01)) ; Recurs to find members of subclass
"RTN","USRLM1",31,0)
 Q
"RTN","USRLM1",32,0)
 ;====================================================================== 
"RTN","USRLM1",33,0)
WHOIS1(MEMBER,CLASS,NAME01) ; Given a Class, return list of CURRENT members.
"RTN","USRLM1",34,0)
 ;Used in CANDEL^USRLM but can't find where CANDEL is used. 
"RTN","USRLM1",35,0)
 ; WHOIS2^USRLM does the same thing more efficiently.  Putting WHOIS here just in case...
"RTN","USRLM1",36,0)
 ; CLASS is pointer to file 8930
"RTN","USRLM1",37,0)
 ; MEMBER is name of array (local or global) in which members are
"RTN","USRLM1",38,0)
 ;        returned in alphabetical order by name
"RTN","USRLM1",39,0)
 ; NAME01 is optional. If NAME01>0 use .01 Class Name, not Display name.
"RTN","USRLM1",40,0)
 N USER,USRCLNM,USRCNT,USRDA,EFFCTV,EXPIRES,USRI,USRNAME,EFFCTV1,EXPIRES1
"RTN","USRLM1",41,0)
 K ^TMP("USRWHOIS",$J)
"RTN","USRLM1",42,0)
 S USER=0,USRCNT=+$P($G(@MEMBER@(0)),U,3)
"RTN","USRLM1",43,0)
 F  S USER=$O(^USR(8930.3,"ACU",CLASS,USER)) Q:+USER'>0  D
"RTN","USRLM1",44,0)
 . S USRDA=""
"RTN","USRLM1",45,0)
 . F  S USRDA=$O(^USR(8930.3,"ACU",CLASS,USER,USRDA)) Q:USRDA=""  D
"RTN","USRLM1",46,0)
 .. S EFFCTV=$P($G(^USR(8930.3,+USRDA,0)),U,3) S:EFFCTV="" EFFCTV1="0000000"
"RTN","USRLM1",47,0)
 .. S EXPIRES=$P($G(^USR(8930.3,+USRDA,0)),U,4) S:EXPIRES="" EXPIRES1=9999999
"RTN","USRLM1",48,0)
 .. S USRCLNM=$$CLNAME^USRLM(+CLASS,+$G(NAME01))
"RTN","USRLM1",49,0)
 .. S USRNAME=$$GET1^DIQ(200,USER,.01)
"RTN","USRLM1",50,0)
 .. S ^TMP("USRWHOIS",$J,USRNAME,$S(EFFCTV="":EFFCTV1,1:EFFCTV),$S(EXPIRES="":EXPIRES1,1:EXPIRES))=USER_U_USRDA_U_USRCLNM_U_EFFCTV_U_EXPIRES
"RTN","USRLM1",51,0)
 .. S USRCNT=+$G(USRCNT)+1
"RTN","USRLM1",52,0)
 I $D(^TMP("USRWHOIS",$J)) D
"RTN","USRLM1",53,0)
 . S USRNAME="" F  S USRNAME=$O(^TMP("USRWHOIS",$J,USRNAME)) Q:USRNAME=""  D
"RTN","USRLM1",54,0)
 .. S EFFCTV="" F  S EFFCTV=$O(^TMP("USRWHOIS",$J,USRNAME,EFFCTV)) Q:EFFCTV=""  Q:EFFCTV>DT  D
"RTN","USRLM1",55,0)
 ... S EXPIRES="" F  S EXPIRES=$O(^TMP("USRWHOIS",$J,USRNAME,EFFCTV,EXPIRES),-1) Q:EXPIRES=""  Q:EXPIRES<DT  D
"RTN","USRLM1",56,0)
 .... S @MEMBER@(USRNAME)=$G(^TMP("USRWHOIS",$J,USRNAME,EFFCTV,EXPIRES))
"RTN","USRLM1",57,0)
 I '$D(@MEMBER@(0)) S @MEMBER@(0)=CLASS_U_$P($G(^USR(8930,+CLASS,0)),U)_U
"RTN","USRLM1",58,0)
 S $P(@MEMBER@(0),U,3)=USRCNT
"RTN","USRLM1",59,0)
 S USRI=0 F  S USRI=$O(^USR(8930,+CLASS,1,USRI)) Q:+USRI'>0  D
"RTN","USRLM1",60,0)
 . N USRSUB S USRSUB=+$G(^USR(8930,+CLASS,1,USRI,0)) Q:+USRSUB'>0
"RTN","USRLM1",61,0)
 . D WHOIS1(MEMBER,USRSUB,+$G(NAME01)) ; Recurs to find members of subclass
"RTN","USRLM1",62,0)
 K ^TMP("USRWHOIS",$J)
"RTN","USRLM1",63,0)
 Q
"RTN","USRLM1",64,0)
PERSNAME(USER) ; Receives pointer to 200, returns name field
"RTN","USRLM1",65,0)
 N X S X=$$GET1^DIQ(200,USER,.01) ; ICR 10060
"RTN","USRLM1",66,0)
 Q $S($L(X):X,1:"UNKNOWN")
"RTN","USRM")
0^9^B1754703^B1749736
"RTN","USRM",1,0)
USRM ; SLC/JER - User class membership library ;10/16/1998 11/16/09
"RTN","USRM",2,0)
 ;;1.0;AUTHORIZATION/SUBSCRIPTION;**3,10,33**;Jun 20, 1997;Build 5
"RTN","USRM",3,0)
UPDATE(ITEM) ; Updates list following edit
"RTN","USRM",4,0)
 N USRDA,USRDUZ,USRSIGNM,USREFF,USREXP,USRMEM,USRREC,USRCLNM
"RTN","USRM",5,0)
 S USRDA=$P(ITEM,U,2)
"RTN","USRM",6,0)
 S USRMEM=$G(^USR(8930.3,+USRDA,0))
"RTN","USRM",7,0)
 ;If membership was removed, restore and quit.
"RTN","USRM",8,0)
 I USRMEM="" D RESTORE^VALM10(+ITEM) Q
"RTN","USRM",9,0)
 S USRDUZ=+USRMEM,USRSIGNM=$$SIGNAME^USRLS(+USRDUZ)
"RTN","USRM",10,0)
 S USRCLNM=$$CLNAME^USRLM(+$P(USRMEM,U,2),1)
"RTN","USRM",11,0)
 S USREFF=$$DATE^USRLS(+$P(USRMEM,U,3),"MM/DD/YY")
"RTN","USRM",12,0)
 S USREXP=$$DATE^USRLS(+$P(USRMEM,U,4),"MM/DD/YY")
"RTN","USRM",13,0)
 S USRREC=$$SETFLD^VALM1(+ITEM,"","NUMBER")
"RTN","USRM",14,0)
 S USRREC=$$SETFLD^VALM1(USRSIGNM,USRREC,"MEMBER")
"RTN","USRM",15,0)
 S USRREC=$$SETFLD^VALM1(USREFF,USRREC,"EFFECTIVE")
"RTN","USRM",16,0)
 S USRREC=$$SETFLD^VALM1(USREXP,USRREC,"EXPIRES")
"RTN","USRM",17,0)
 S USRREC=$$SETFLD^VALM1(USRCLNM,USRREC,"CLASS")
"RTN","USRM",18,0)
 S ^TMP("USRMMBR",$J,+ITEM,0)=USRREC
"RTN","USRM",19,0)
 D RESTORE^VALM10(+ITEM),CNTRL^VALM10(+ITEM,1,VALM("RM"),IOINHI,IOINORM)
"RTN","USRM",20,0)
 Q
"RTN","USRMEMBR")
0^10^B24624500^B24265517
"RTN","USRMEMBR",1,0)
USRMEMBR ; SLC/JER - User Class Management actions ;3/5/10
"RTN","USRMEMBR",2,0)
 ;;1.0;AUTHORIZATION/SUBSCRIPTION;**2,3,6,7,29,33**;Jun 20, 1997;Build 5
"RTN","USRMEMBR",3,0)
EDIT ; Edit user's class membership
"RTN","USRMEMBR",4,0)
 ;N USRDA,USRDATA,USREXPND,USRI,USRSTAT,DIROUT,USRCHNG,USRLST
"RTN","USRMEMBR",5,0)
 N USRDA,USRDATA,USRI,DIROUT,USRCHNG,USRLST
"RTN","USRMEMBR",6,0)
 I '$D(VALMY) D EN^VALM2(XQORNOD(0))
"RTN","USRMEMBR",7,0)
 S (USRCHNG,USRI)=0
"RTN","USRMEMBR",8,0)
 F  S USRI=$O(VALMY(USRI)) Q:+USRI'>0  D  Q:$D(DIROUT)
"RTN","USRMEMBR",9,0)
 . S USRDATA=$G(^TMP("USRMMBRIDX",$J,USRI))
"RTN","USRMEMBR",10,0)
 . W !!,"Editing #",+USRDATA,!
"RTN","USRMEMBR",11,0)
 . S USRDA=+$P(USRDATA,U,2) D EDIT1
"RTN","USRMEMBR",12,0)
 . I +$G(USRCHNG) S USRLST=$S($L($G(USRLST)):$G(USRLST)_", ",1:"")_USRI
"RTN","USRMEMBR",13,0)
 . I $D(USRDATA) D UPDATE^USRM(USRDATA)
"RTN","USRMEMBR",14,0)
 W !,"Refreshing the list."
"RTN","USRMEMBR",15,0)
 S VALMSG="** "_$S($L($G(USRLST)):"Item"_$S($L($G(USRLST),",")>1:"s ",1:" ")_$G(USRLST),1:"Nothing")_" Edited **"
"RTN","USRMEMBR",16,0)
 K VALMY S VALMBCK="R"
"RTN","USRMEMBR",17,0)
 Q
"RTN","USRMEMBR",18,0)
EDIT1 ; Single record edit
"RTN","USRMEMBR",19,0)
 ; Receives USRDA
"RTN","USRMEMBR",20,0)
 N DA,DIE,DR
"RTN","USRMEMBR",21,0)
 I '+$G(USRDA) W !,"No Classes selected." H 2 S USRCHNG=0 Q
"RTN","USRMEMBR",22,0)
 S DIE="^USR(8930.3,",DA=USRDA,DR="[USR MEMBERSHIP EDIT]"
"RTN","USRMEMBR",23,0)
 D FULL^VALM1,^DIE S USRCHNG=1
"RTN","USRMEMBR",24,0)
 Q
"RTN","USRMEMBR",25,0)
ADD ; Add a member to the class
"RTN","USRMEMBR",26,0)
 N DA,DR,DIC,DLAYGO,X,Y,USRCLASS,USRUSER,USRQUIT,USRCNT D FULL^VALM1
"RTN","USRMEMBR",27,0)
 S USRCNT=0
"RTN","USRMEMBR",28,0)
 F  D  Q:+$G(USRQUIT)
"RTN","USRMEMBR",29,0)
 . W !
"RTN","USRMEMBR",30,0)
 . S DIC=200,DIC(0)="AEMQ"
"RTN","USRMEMBR",31,0)
 . S DIC("A")="Select "_$S(USRCNT'>0:"",1:"Another ")_"MEMBER: "
"RTN","USRMEMBR",32,0)
 . D ^DIC I +Y'>0 S USRQUIT=1 Q
"RTN","USRMEMBR",33,0)
 . I $$ISAWM^USRLM(+Y,USRDA) Q 
"RTN","USRMEMBR",34,0)
 . I $$ISTERM^USRLM(+Y) D  Q
"RTN","USRMEMBR",35,0)
 .. S USRQUIT=1
"RTN","USRMEMBR",36,0)
 .. W !,"The user you selected is terminated, cannot add them as a class member!"
"RTN","USRMEMBR",37,0)
 .. H 2
"RTN","USRMEMBR",38,0)
 . S (DIC,DLAYGO)=8930.3,DIC(0)="LM",X=""""_$P(Y,U,2)_""""
"RTN","USRMEMBR",39,0)
 . S DIC("W")="D DICW^USRMEMBR"
"RTN","USRMEMBR",40,0)
 . D ^DIC I +Y'>0 S USRQUIT=1 Q
"RTN","USRMEMBR",41,0)
 . S USRCREAT=+$P(Y,U,3),USRCNT=USRCNT+1
"RTN","USRMEMBR",42,0)
 . S DA=+Y,DIE=DIC,DIE("NO^")="BACK",DR="[USR CLASS EDIT]" D ^DIE
"RTN","USRMEMBR",43,0)
 . I $D(Y) D  Q
"RTN","USRMEMBR",44,0)
 . . S DIK=DIC D ^DIK K DIK
"RTN","USRMEMBR",45,0)
 . . S:+USRCNT'>1 VALMSG="** Nothing Added **"
"RTN","USRMEMBR",46,0)
 . . S VALMBCK="R",USRQUIT=1
"RTN","USRMEMBR",47,0)
 . I 'USRCREAT D  Q
"RTN","USRMEMBR",48,0)
 . . S:+USRCNT'>1 VALMSG="** Nothing Added **"
"RTN","USRMEMBR",49,0)
 . . S VALMBCK="R",USRQUIT=1
"RTN","USRMEMBR",50,0)
 W !,"Rebuilding membership list."
"RTN","USRMEMBR",51,0)
 S USRCLASS=+$G(^TMP("USRM",$J,0))
"RTN","USRMEMBR",52,0)
 D BUILD^USRMLST(USRCLASS)
"RTN","USRMEMBR",53,0)
 I USRCNT'>1,+$G(DA) D
"RTN","USRMEMBR",54,0)
 . S USRUSER=$$SIGNAME^USRLS(+$G(^USR(8930.3,+DA,0)))
"RTN","USRMEMBR",55,0)
 . S VALMSG="** "_USRUSER_" Added **"
"RTN","USRMEMBR",56,0)
 S VALMCNT=+$G(@VALMAR@(0))
"RTN","USRMEMBR",57,0)
 S VALMBCK="R"
"RTN","USRMEMBR",58,0)
 Q
"RTN","USRMEMBR",59,0)
DICW ; Write code for member look-up
"RTN","USRMEMBR",60,0)
 N USRSIGNM,USRCLASS,USREFF,USREXP,USRMEM
"RTN","USRMEMBR",61,0)
 S USRMEM=$G(^USR(8930.3,+Y,0))
"RTN","USRMEMBR",62,0)
 S USRSIGNM=$$SIGNAME^USRLS(+USRMEM)
"RTN","USRMEMBR",63,0)
 S USRCLASS=$E($$CLNAME^USRLM(+$P(USRMEM,U,2),1),1,24)
"RTN","USRMEMBR",64,0)
 S USREFF=$$DATE^USRLS($P(USRMEM,U,3),"MM/DD/YY")
"RTN","USRMEMBR",65,0)
 S USREXP=$$DATE^USRLS($P(USRMEM,U,4),"MM/DD/YY")
"RTN","USRMEMBR",66,0)
 W USRSIGNM,"  ",USRCLASS,?60,USREFF," - ",USREXP
"RTN","USRMEMBR",67,0)
 Q
"RTN","USRMEMBR",68,0)
DELETE ; Delete a member to the class
"RTN","USRMEMBR",69,0)
 N DIE,X,Y,USRCLASS D FULL^VALM1
"RTN","USRMEMBR",70,0)
 N USRCLASS,USRDA,USRCHNG,USRDATA,USRI,USRLST,DIROUT
"RTN","USRMEMBR",71,0)
 I '$D(VALMY) D EN^VALM2(XQORNOD(0))
"RTN","USRMEMBR",72,0)
 S USRI=0
"RTN","USRMEMBR",73,0)
 F  S USRI=$O(VALMY(USRI)) Q:+USRI'>0  D  Q:$D(DIROUT)
"RTN","USRMEMBR",74,0)
 . S USRDATA=$G(^TMP("USRMMBRIDX",$J,USRI))
"RTN","USRMEMBR",75,0)
 . S USRDA=+$P(USRDATA,U,2) D DELETE1(USRDA)
"RTN","USRMEMBR",76,0)
 . S:+$G(USRCHNG) USRLST=$S(+$G(USRLST):USRLST_", ",1:"")_+USRDATA
"RTN","USRMEMBR",77,0)
 . I $D(USRDATA) D UPDATE^USRM(USRDATA)
"RTN","USRMEMBR",78,0)
 W !,"Rebuilding the list."
"RTN","USRMEMBR",79,0)
 S USRCLASS=+$G(^TMP("USRM",$J,0))
"RTN","USRMEMBR",80,0)
 D BUILD^USRMLST(USRCLASS)
"RTN","USRMEMBR",81,0)
 S VALMCNT=+$G(@VALMAR@(0))
"RTN","USRMEMBR",82,0)
 K VALMY S VALMBCK="R"
"RTN","USRMEMBR",83,0)
 S VALMSG="** "_$S($L($G(USRLST)):"Item"_$S($L($G(USRLST),",")>1:"s ",1:" ")_$G(USRLST),1:"Nothing")_" removed **"
"RTN","USRMEMBR",84,0)
 Q
"RTN","USRMEMBR",85,0)
DELETE1(DA) ; Delete one member from a class
"RTN","USRMEMBR",86,0)
 N DIE,DR,USER,CLASS,USRMEM0 S USRMEM0=$G(^USR(8930.3,+DA,0))
"RTN","USRMEMBR",87,0)
 I USRMEM0']"" W !,"Record #",DA," NOT FOUND!" Q
"RTN","USRMEMBR",88,0)
 ;S USER=$P($G(^VA(200,+USRMEM,0)),U)
"RTN","USRMEMBR",89,0)
 S USER=$$PERSNAME^USRLM1(+USRMEM0)
"RTN","USRMEMBR",90,0)
 S CLASS=$P($G(^USR(8930,+$P(USRMEM0,U,2),0)),U)
"RTN","USRMEMBR",91,0)
 W !,"Removing ",USER," from ",CLASS
"RTN","USRMEMBR",92,0)
 I '$$READ^USRU("Y","Are you SURE","NO") S USRCHNG=0 W !,USER," NOT Removed from ",CLASS,"." Q
"RTN","USRMEMBR",93,0)
 S USRCHNG=1
"RTN","USRMEMBR",94,0)
 S DIK="^USR(8930.3," D ^DIK K DIK W "."
"RTN","USRMEMBR",95,0)
 Q
"RTN","USRMEMBR",96,0)
SCHEDULE ; Schedule changes in class membership
"RTN","USRMEMBR",97,0)
 N DIC,DLAYGO,X,Y
"RTN","USRMEMBR",98,0)
 N USRCREAT,USRDUZ,USRUSER,USRMIN,USRMAX,USREFF,USREXP,USRCLASS
"RTN","USRMEMBR",99,0)
 N USRCLNM
"RTN","USRMEMBR",100,0)
 D FULL^VALM1
"RTN","USRMEMBR",101,0)
 I '$D(VALMY) D EN^VALM2(XQORNOD(0))
"RTN","USRMEMBR",102,0)
 S DIC=8930,DIC(0)="AEMQZ",DIC("A")="Select CLASS: "
"RTN","USRMEMBR",103,0)
 S DIC("B")=$P($G(^TMP("USRMMBR",$J,0)),U,2)
"RTN","USRMEMBR",104,0)
 D ^DIC Q:+Y'>0
"RTN","USRMEMBR",105,0)
 S USRCLASS=+Y,USRCLNM=$$CLNAME^USRLM(USRCLASS,1)
"RTN","USRMEMBR",106,0)
 S USRMIN=DT,USRMAX=$$FMADD^XLFDT(DT,365)
"RTN","USRMEMBR",107,0)
 S USREFF=$$READ^USRU("D^"_USRMIN_":"_USRMAX_":EXFT"," Specify EFFECTIVE DATE/TIME","TODAY")
"RTN","USRMEMBR",108,0)
 S USREXP=$$READ^USRU("D^"_USRMIN_":"_USRMAX_":EXFT","Specify EXPIRATION DATE/TIME","T+365")
"RTN","USRMEMBR",109,0)
 S USRI=0
"RTN","USRMEMBR",110,0)
 F  S USRI=$O(VALMY(USRI)) Q:+USRI'>0  D
"RTN","USRMEMBR",111,0)
 . N USRDATA,USRDUZ,USRMEM,USRUSER,DIC,DIE,DA,DR,X,Y
"RTN","USRMEMBR",112,0)
 . S USRDATA=$G(^TMP("USRMMBRIDX",$J,USRI))
"RTN","USRMEMBR",113,0)
 . S USRMEM=$G(^USR(8930.3,+$P(USRDATA,U,2),0)),USRDUZ=+USRMEM
"RTN","USRMEMBR",114,0)
 . S DIC=200,DIC(0)="NX",X="`"_USRDUZ
"RTN","USRMEMBR",115,0)
 . D ^DIC Q:+Y'>0
"RTN","USRMEMBR",116,0)
 . S (DIC,DLAYGO)=8930.3,DIC(0)="LM",X=""""_$P(Y,U,2)_""""
"RTN","USRMEMBR",117,0)
 . D ^DIC Q:+Y'>0
"RTN","USRMEMBR",118,0)
 . S USRCREAT=+$P(Y,U,3)
"RTN","USRMEMBR",119,0)
 . S DA=+Y,DIE=DIC
"RTN","USRMEMBR",120,0)
 . S DR=".02////"_USRCLASS_";.03////"_USREFF_";.04////"_USREXP
"RTN","USRMEMBR",121,0)
 . D ^DIE
"RTN","USRMEMBR",122,0)
 W !,"Rebuilding membership list."
"RTN","USRMEMBR",123,0)
 S VALMBCK="R"
"RTN","USRMEMBR",124,0)
 Q
"RTN","USRMLST")
0^11^B9060446^B8585285
"RTN","USRMLST",1,0)
USRMLST ; SLC/JER - List User Class Members ;3/23/10
"RTN","USRMLST",2,0)
 ;;1.0;AUTHORIZATION/SUBSCRIPTION;**2,3,4,9,33**;Jun 20, 1997;Build 5
"RTN","USRMLST",3,0)
MAIN ; Control Branching
"RTN","USRMLST",4,0)
 N DIC,MSBPN,X,Y,USRDUZ
"RTN","USRMLST",5,0)
 ;MSBPN is set true if a user is missing the SIGNATURE BLOCK PRINT
"RTN","USRMLST",6,0)
 ;NAME.
"RTN","USRMLST",7,0)
 S MSBPN=0
"RTN","USRMLST",8,0)
 S DIC=8930,DIC(0)="AEMQ",DIC("A")="Select CLASS: "
"RTN","USRMLST",9,0)
 D ^DIC Q:+Y'>0
"RTN","USRMLST",10,0)
 S USRDA=+Y
"RTN","USRMLST",11,0)
 D EN^VALM(USRLTMPL)
"RTN","USRMLST",12,0)
 K USRLTMPL
"RTN","USRMLST",13,0)
 Q
"RTN","USRMLST",14,0)
MAKELIST ; Build review screen list
"RTN","USRMLST",15,0)
 K VALMY
"RTN","USRMLST",16,0)
 W !,"Searching for the User Classes."
"RTN","USRMLST",17,0)
 D BUILD(USRDA)
"RTN","USRMLST",18,0)
 Q
"RTN","USRMLST",19,0)
BUILD(USRDA) ; Build List
"RTN","USRMLST",20,0)
 N USRCNT,USRNAME,USRPICK
"RTN","USRMLST",21,0)
 S (USRCNT,VALMCNT)=0
"RTN","USRMLST",22,0)
 S USRPICK=+$O(^ORD(101,"B","USR ACTION SELECT LIST ELEMENT",0)) ;ICR 872
"RTN","USRMLST",23,0)
 K ^TMP("USRMMBR",$J),^TMP("USRMMBRIDX",$J),^TMP("USRM",$J)
"RTN","USRMLST",24,0)
 ;D WHOIS^USRLM("^TMP(""USRM"",$J)",USRDA)
"RTN","USRMLST",25,0)
 D WHOIS^USRLM("^TMP(""USRM"",$J)",USRDA,1) ; Display .01 Class name
"RTN","USRMLST",26,0)
 S USRNAME=0
"RTN","USRMLST",27,0)
 F  S USRNAME=$O(^TMP("USRM",$J,USRNAME)) Q:USRNAME=""  D
"RTN","USRMLST",28,0)
 . N USRDA,USRDUZ,USRSIGNM,USREFF,USREXP,USRMEM,USRREC,USRCLNM
"RTN","USRMLST",29,0)
 . S USRMEM=$G(^TMP("USRM",$J,USRNAME))
"RTN","USRMLST",30,0)
 . S USRDUZ=+USRMEM,USRSIGNM=$$SIGNAME^USRLS(+USRDUZ)
"RTN","USRMLST",31,0)
 . I USRSIGNM["?SBPN" S MSBPN=1
"RTN","USRMLST",32,0)
 .;If this user has been terminated change the name to reflect this.
"RTN","USRMLST",33,0)
 . I $$ISTERM^USRLM(+USRDUZ) S USRSIGNM="(T) "_USRSIGNM
"RTN","USRMLST",34,0)
 . S USRDA=+$P(USRMEM,U,2),USRCLNM=$P(USRMEM,U,3)
"RTN","USRMLST",35,0)
 . S USREFF=$$DATE^USRLS(+$P(USRMEM,U,4),"MM/DD/YY")
"RTN","USRMLST",36,0)
 . S USREXP=$$DATE^USRLS(+$P(USRMEM,U,5),"MM/DD/YY")
"RTN","USRMLST",37,0)
 . S USRCNT=+$G(USRCNT)+1
"RTN","USRMLST",38,0)
 . S USRREC=$$SETFLD^VALM1(USRCNT,"","NUMBER")
"RTN","USRMLST",39,0)
 . S USRREC=$$SETFLD^VALM1(USRSIGNM,USRREC,"MEMBER")
"RTN","USRMLST",40,0)
 . S USRREC=$$SETFLD^VALM1(USREFF,USRREC,"EFFECTIVE")
"RTN","USRMLST",41,0)
 . S USRREC=$$SETFLD^VALM1(USREXP,USRREC,"EXPIRES")
"RTN","USRMLST",42,0)
 . S USRREC=$$SETFLD^VALM1(USRCLNM,USRREC,"CLASS")
"RTN","USRMLST",43,0)
 . S VALMCNT=+$G(VALMCNT)+1
"RTN","USRMLST",44,0)
 . S ^TMP("USRMMBR",$J,VALMCNT,0)=USRREC
"RTN","USRMLST",45,0)
 . S ^TMP("USRMMBR",$J,"IDX",VALMCNT,USRCNT)=""
"RTN","USRMLST",46,0)
 . S ^TMP("USRMMBRIDX",$J,USRCNT)=VALMCNT_U_USRDA W:VALMCNT#10'>0 "."
"RTN","USRMLST",47,0)
 S ^TMP("USRMMBR",$J,0)=+$G(USRCNT)_U_$P(^TMP("USRM",$J,0),U,2)
"RTN","USRMLST",48,0)
 S ^TMP("USRMMBR",$J,"#")=USRPICK_U_"1:"_USRCNT
"RTN","USRMLST",49,0)
 I $D(VALMHDR)>9 D HDR
"RTN","USRMLST",50,0)
 I +$G(USRCNT)'>0 D
"RTN","USRMLST",51,0)
 . S ^TMP("USRMMBR",$J,1,0)="",VALMCNT=2
"RTN","USRMLST",52,0)
 . S ^TMP("USRMMBR",$J,2,0)="No "_$P(^TMP("USRM",$J,0),U,2)_"s found"
"RTN","USRMLST",53,0)
 Q
"RTN","USRMLST",54,0)
HDR ; Initialize header for review screen
"RTN","USRMLST",55,0)
 N BY,USRX,USRCNT,TITLE,USRCLASS
"RTN","USRMLST",56,0)
 S USRX=$G(^TMP("USRMMBR",$J,0)),USRCLASS=$P(USRX,U,2)
"RTN","USRMLST",57,0)
 S TITLE=USRCLASS_"s"
"RTN","USRMLST",58,0)
 S USRCNT=$J(+USRX,4)_" Member"_$S(+USRX=1:"",1:"s")
"RTN","USRMLST",59,0)
 S VALMHDR(1)=$$CENTER^USRLS(TITLE)
"RTN","USRMLST",60,0)
 S VALMHDR(1)=$$SETSTR^VALM1(USRCNT,VALMHDR(1),(IOM-$L(USRCNT)),$L(USRCNT))
"RTN","USRMLST",61,0)
 I $G(MSBPN) D
"RTN","USRMLST",62,0)
 . S VALMSG="(?SBPN) missing SIGNATURE BLOCK PRINTED NAME"
"RTN","USRMLST",63,0)
 Q
"RTN","USRMLST",64,0)
CLEAN ; "Joel...Clean up your mess!"
"RTN","USRMLST",65,0)
 K ^TMP("USRMMBR",$J),^TMP("USRMMBRIDX",$J),^TMP("USRM",$J)
"RTN","USRMLST",66,0)
 Q
"RTN","USRULST")
0^3^B9659905^B9210791
"RTN","USRULST",1,0)
USRULST ; SLC/JER - List Class Membership by user       ;3/23/10
"RTN","USRULST",2,0)
 ;;1.0;AUTHORIZATION/SUBSCRIPTION;**2,3,4,9,10,16,17,21,22,28,33**;Jun 20, 1997;Build 5
"RTN","USRULST",3,0)
 ; 30 Jun 00 MA - Added MAIN2 to prevent stack overflow
"RTN","USRULST",4,0)
 ; 20 Sep 00 MA - Removed MAIN2 and added GETUSER and chg protocol to
"RTN","USRULST",5,0)
 ; avoid looping through MAIN when doing a "CHANGE VIEW".
"RTN","USRULST",6,0)
 ;  7 Aug 01 MA - Removed line "S USRDUZ=+Y" from line tag GETUSER()
"RTN","USRULST",7,0)
 ;  6 Sep 01 MA - Added line "I +Y>0 S USRDUZ=Y" in GETUSER
"RTN","USRULST",8,0)
 ;  to avoid adding USER Classes to the wrong person.
"RTN","USRULST",9,0)
MAIN ; Control Branching
"RTN","USRULST",10,0)
 N DIC,X,Y,USRDUZ
"RTN","USRULST",11,0)
 S DIC=200,DIC(0)="AEMQ",DIC("A")="Select USER: "
"RTN","USRULST",12,0)
 D ^DIC Q:+Y'>0
"RTN","USRULST",13,0)
 S USRDUZ=+Y
"RTN","USRULST",14,0)
 D EN^VALM(USRLTMPL)
"RTN","USRULST",15,0)
 K USRLTMPL
"RTN","USRULST",16,0)
 Q
"RTN","USRULST",17,0)
GETUSER() ; Get a new user
"RTN","USRULST",18,0)
 N DIC,X,Y
"RTN","USRULST",19,0)
 S DIC=200,DIC(0)="AEMQ",DIC("A")="Select USER: "
"RTN","USRULST",20,0)
 D ^DIC     ; If Y is not set then will use current USRDUZ
"RTN","USRULST",21,0)
 I +Y>0 S USRDUZ=+Y
"RTN","USRULST",22,0)
 Q USRDUZ
"RTN","USRULST",23,0)
MAKELIST ; Build review screen list
"RTN","USRULST",24,0)
 W !,"Searching for the User Classes."
"RTN","USRULST",25,0)
 D BUILD(USRDUZ)
"RTN","USRULST",26,0)
 Q
"RTN","USRULST",27,0)
BUILD(USRDUZ) ; Build List
"RTN","USRULST",28,0)
 ; DBIA 872 ^ORD(101)
"RTN","USRULST",29,0)
 N USRCNT,USRNAME,USRPICK
"RTN","USRULST",30,0)
 S (USRCNT,VALMCNT)=0
"RTN","USRULST",31,0)
 S USRPICK=+$O(^ORD(101,"B","USR ACTION SELECT LIST ELEMENT",0)) ;ICR 87
"RTN","USRULST",32,0)
 K ^TMP("USRUSER",$J),^TMP("USRUSERIDX",$J),^TMP("USRU",$J)
"RTN","USRULST",33,0)
 ;D WHATIS^USRLM(USRDUZ,"^TMP(""USRU"",$J)")
"RTN","USRULST",34,0)
 D WHATIS^USRLM(USRDUZ,"^TMP(""USRU"",$J)",1) ; Use .01 class name 
"RTN","USRULST",35,0)
 S USRNAME=""
"RTN","USRULST",36,0)
 F  S USRNAME=$O(^TMP("USRU",$J,USRNAME),-1) Q:USRNAME=""  Q:USRNAME=0  D
"RTN","USRULST",37,0)
 . N USRDA,USREFF,USREXP,USRMEM,USRREC,USRCLNM
"RTN","USRULST",38,0)
 . S USRMEM=$G(^TMP("USRU",$J,USRNAME))
"RTN","USRULST",39,0)
 . S USRDA=+$P(USRMEM,U,2)
"RTN","USRULST",40,0)
 . S USRCLNM=$P(USRMEM,U,3)
"RTN","USRULST",41,0)
 . S USREFF=$$DATE^USRLS(+$P(USRMEM,U,4),"MM/DD/YY")
"RTN","USRULST",42,0)
 . S USREXP=$$DATE^USRLS(+$P(USRMEM,U,5),"MM/DD/YY")
"RTN","USRULST",43,0)
 . S USRCNT=+$G(USRCNT)+1
"RTN","USRULST",44,0)
 . S USRREC=$$SETFLD^VALM1(USRCNT,"","NUMBER")
"RTN","USRULST",45,0)
 . S USRREC=$$SETFLD^VALM1(USRCLNM,USRREC,"CLASS")
"RTN","USRULST",46,0)
 . S USRREC=$$SETFLD^VALM1(USREFF,USRREC,"EFFECTIVE")
"RTN","USRULST",47,0)
 . S USRREC=$$SETFLD^VALM1(USREXP,USRREC,"EXPIRES")
"RTN","USRULST",48,0)
 . S VALMCNT=+$G(VALMCNT)+1
"RTN","USRULST",49,0)
 . S ^TMP("USRUSER",$J,VALMCNT,0)=USRREC
"RTN","USRULST",50,0)
 . S ^TMP("USRUSER",$J,"IDX",VALMCNT,USRCNT)=""
"RTN","USRULST",51,0)
 . S ^TMP("USRUSERIDX",$J,USRCNT)=VALMCNT_U_USRDA W:VALMCNT#10'>0 "."
"RTN","USRULST",52,0)
 S ^TMP("USRUSER",$J,0)=+$G(USRCNT)_U_$P(^TMP("USRU",$J,0),U,2)
"RTN","USRULST",53,0)
 S ^TMP("USRUSER",$J,"#")=USRPICK_"^0:"_+$G(USRCNT)
"RTN","USRULST",54,0)
 I $D(VALMHDR)>9 D HDR
"RTN","USRULST",55,0)
 I +$G(USRCNT)'>0 D
"RTN","USRULST",56,0)
 . S ^TMP("USRUSER",$J,1,0)="",VALMCNT=2
"RTN","USRULST",57,0)
 . S ^TMP("USRUSER",$J,2,0)="No Class Memberships found for "_$P(^TMP("USRU",$J,0),U,2)
"RTN","USRULST",58,0)
 Q
"RTN","USRULST",59,0)
HDR ; Initialize header for review screen
"RTN","USRULST",60,0)
 N BY,USRX,USRCNT,TITLE,USRNAME
"RTN","USRULST",61,0)
 S USRX=$G(^TMP("USRUSER",$J,0)),USRNAME=$P(USRX,U,2)
"RTN","USRULST",62,0)
 S TITLE=USRNAME
"RTN","USRULST",63,0)
 I USRNAME["?SBPN" D
"RTN","USRULST",64,0)
 . S VALMSG="(?SBPN) missing SIGNATURE BLOCK PRINTED NAME"
"RTN","USRULST",65,0)
 ;If this user has been terminated change the title to reflect this.
"RTN","USRULST",66,0)
 I $$ISTERM^USRLM(USRDUZ) S TITLE=TITLE_" (terminated)"
"RTN","USRULST",67,0)
 S USRCNT=$J(+USRX,4)_" Class"_$S(+USRX=1:"",1:"es")
"RTN","USRULST",68,0)
 S VALMHDR(1)=$$CENTER^USRLS(TITLE)
"RTN","USRULST",69,0)
 S VALMHDR(1)=$$SETSTR^VALM1(USRCNT,VALMHDR(1),(IOM-$L(USRCNT)),$L(USRCNT))
"RTN","USRULST",70,0)
 Q
"RTN","USRULST",71,0)
CLEAN ; "Joel...Clean up your mess!"
"RTN","USRULST",72,0)
 K ^TMP("USRUSER",$J),^TMP("USRUSERIDX",$J),^TMP("USRU",$J)
"RTN","USRULST",73,0)
 Q
"RTN","USRUM")
0^8^B1604085^B1599118
"RTN","USRUM",1,0)
USRUM ; SLC/JER - User class membership by User library ;11/16/09
"RTN","USRUM",2,0)
 ;;1.0;AUTHORIZATION/SUBSCRIPTION;**3,10,33**;Jun 20, 1997;Build 5
"RTN","USRUM",3,0)
UPDATE(ITEM) ; Updates list following edit
"RTN","USRUM",4,0)
 N USRDA,USRDUZ,USRSIGNM,USREFF,USREXP,USRMEM,USRREC,USRCLNM
"RTN","USRUM",5,0)
 S USRDA=$P(ITEM,U,2)
"RTN","USRUM",6,0)
 S USRMEM=$G(^USR(8930.3,+USRDA,0))
"RTN","USRUM",7,0)
 ;If class membership was removed restore and quit.
"RTN","USRUM",8,0)
 I USRMEM="" D RESTORE^VALM10(+ITEM) Q
"RTN","USRUM",9,0)
 S USRDUZ=+USRMEM,USRSIGNM=$$SIGNAME^USRLS(+USRDUZ)
"RTN","USRUM",10,0)
 S USRCLNM=$$CLNAME^USRLM(+$P(USRMEM,U,2),1)
"RTN","USRUM",11,0)
 S USREFF=$$DATE^USRLS(+$P(USRMEM,U,3),"MM/DD/YY")
"RTN","USRUM",12,0)
 S USREXP=$$DATE^USRLS(+$P(USRMEM,U,4),"MM/DD/YY")
"RTN","USRUM",13,0)
 S USRREC=$$SETFLD^VALM1(+ITEM,"","NUMBER")
"RTN","USRUM",14,0)
 S USRREC=$$SETFLD^VALM1(USRCLNM,USRREC,"CLASS")
"RTN","USRUM",15,0)
 S USRREC=$$SETFLD^VALM1(USREFF,USRREC,"EFFECTIVE")
"RTN","USRUM",16,0)
 S USRREC=$$SETFLD^VALM1(USREXP,USRREC,"EXPIRES")
"RTN","USRUM",17,0)
 S ^TMP("USRUSER",$J,+ITEM,0)=USRREC
"RTN","USRUM",18,0)
 D RESTORE^VALM10(+ITEM),CNTRL^VALM10(+ITEM,1,VALM("RM"),IOINHI,IOINORM)
"RTN","USRUM",19,0)
 Q
"RTN","USRUMMBR")
0^12^B29411302^B29026400
"RTN","USRUMMBR",1,0)
USRUMMBR ; SLC/JER,MA - User Class Membership by User actions ;2/2/10
"RTN","USRUMMBR",2,0)
 ;;1.0;AUTHORIZATION/SUBSCRIPTION;**2,3,5,6,7,8,14,16,33**;Jun 20, 1997;Build 5
"RTN","USRUMMBR",3,0)
 ; 14 Feb 00 MA - Added check for 0 USRDA in DELETE
"RTN","USRUMMBR",4,0)
 ; 19 Jun 00 MA - Added check for inactive class when adding user.
"RTN","USRUMMBR",5,0)
EDIT ; Edit user's class membership
"RTN","USRUMMBR",6,0)
 ;N USRDA,USRDATA,USREXPND,USRI,USRSTAT,DIROUT,USRCHNG,USRLST
"RTN","USRUMMBR",7,0)
 N USRDA,USRDATA,USRI,DIROUT,USRCHNG,USRLST
"RTN","USRUMMBR",8,0)
 I '$D(VALMY) D EN^VALM2(XQORNOD(0))
"RTN","USRUMMBR",9,0)
 S (USRCHNG,USRI)=0
"RTN","USRUMMBR",10,0)
 F  S USRI=$O(VALMY(USRI)) Q:+USRI'>0  D  Q:$D(DIROUT)
"RTN","USRUMMBR",11,0)
 . S USRDATA=$G(^TMP("USRUSERIDX",$J,USRI))
"RTN","USRUMMBR",12,0)
 . W !!,"Editing #",+USRDATA,!
"RTN","USRUMMBR",13,0)
 . S USRDA=+$P(USRDATA,U,2) D EDIT1
"RTN","USRUMMBR",14,0)
 . I +$G(USRCHNG) S USRLST=$S($L($G(USRLST)):$G(USRLST)_", ",1:"")_USRI
"RTN","USRUMMBR",15,0)
 . I $D(USRDATA) D UPDATE^USRUM(USRDATA)
"RTN","USRUMMBR",16,0)
 W !,"Refreshing the list."
"RTN","USRUMMBR",17,0)
 S VALMSG="** "_$S($L($G(USRLST)):"Item"_$S($L($G(USRLST),",")>1:"s ",1:" ")_$G(USRLST),1:"Nothing")_" Edited **"
"RTN","USRUMMBR",18,0)
 K VALMY S VALMBCK="R"
"RTN","USRUMMBR",19,0)
 Q
"RTN","USRUMMBR",20,0)
EDIT1 ; Single record edit
"RTN","USRUMMBR",21,0)
 ; Receives USRDA
"RTN","USRUMMBR",22,0)
 N DA,DIE,DR
"RTN","USRUMMBR",23,0)
 I '+$G(USRDA) W !,"No Member selected." H 2 S USRCHNG=0 Q
"RTN","USRUMMBR",24,0)
 S DIE="^USR(8930.3,",DA=USRDA,DR="[USR MEMBERSHIP EDIT]"
"RTN","USRUMMBR",25,0)
 D FULL^VALM1,^DIE S USRCHNG=1
"RTN","USRUMMBR",26,0)
 Q
"RTN","USRUMMBR",27,0)
ADD ; Add a membership to selected classes for current user
"RTN","USRUMMBR",28,0)
 N CLASSADD,DIC,DLAYGO,FDA,MSG,X,Y
"RTN","USRUMMBR",29,0)
 N I2N,FDA,FDAIEN,MSG
"RTN","USRUMMBR",30,0)
 ;N USRCLASS,USRCREAT,USRUSER,USRCNT,USRQUIT
"RTN","USRUMMBR",31,0)
 N USRCLASS,USRUSER,USRCNT,USRQUIT
"RTN","USRUMMBR",32,0)
 D FULL^VALM1
"RTN","USRUMMBR",33,0)
 I $$ISTERM^USRLM(USRDUZ) D  Q  ;USRDUZ is newed and set in USRULST
"RTN","USRUMMBR",34,0)
 . W !,"You cannot add class memberships, this user is terminated!"
"RTN","USRUMMBR",35,0)
 . H 2
"RTN","USRUMMBR",36,0)
 S USRCNT=0
"RTN","USRUMMBR",37,0)
 F  D  Q:+$G(USRQUIT)
"RTN","USRUMMBR",38,0)
 . W !
"RTN","USRUMMBR",39,0)
 . S DIC=8930,DIC(0)="AEMQ"
"RTN","USRUMMBR",40,0)
 . S DIC("A")="Select "_$S(USRCNT'>0:"",1:"Another ")_"USER CLASS: "
"RTN","USRUMMBR",41,0)
 . D ^DIC I +Y'>0 S USRQUIT=1 Q
"RTN","USRUMMBR",42,0)
 . ;
"RTN","USRUMMBR",43,0)
 . I $P(^USR(8930,+Y,0),"^",3)=0 D  Q
"RTN","USRUMMBR",44,0)
 .. W !,"You may not add a user to a inactive USER CLASS !!!"
"RTN","USRUMMBR",45,0)
 .. I $$READ^USRU("FAO","Press return to continue")
"RTN","USRUMMBR",46,0)
 .. S USRQUIT=1
"RTN","USRUMMBR",47,0)
 . S USRCLASS=+Y
"RTN","USRUMMBR",48,0)
 . S DIC=200,DIC(0)="NMX",X="`"_USRDUZ
"RTN","USRUMMBR",49,0)
 .;Make sure the user is not already a member of this class.
"RTN","USRUMMBR",50,0)
 . I $$ISAWM^USRLM(USRDUZ,USRCLASS) S USRQUIT=1 Q
"RTN","USRUMMBR",51,0)
 . K FDA,FDAIEN,MSG
"RTN","USRUMMBR",52,0)
 . S CLASSADD=0
"RTN","USRUMMBR",53,0)
 . S I2N="+1,"
"RTN","USRUMMBR",54,0)
 . S FDA(8930.3,I2N,.01)=USRDUZ
"RTN","USRUMMBR",55,0)
 . S FDA(8930.3,I2N,.02)=USRCLASS
"RTN","USRUMMBR",56,0)
 . D UPDATE^DIE("","FDA","FDAIEN","MSG")
"RTN","USRUMMBR",57,0)
 . I +$G(FDAIEN(1))>0 D
"RTN","USRUMMBR",58,0)
 .. S CLASSADD=1
"RTN","USRUMMBR",59,0)
 .. S DA=+FDAIEN(1),DIE=8930.3,DIE("NO^")="BACK"
"RTN","USRUMMBR",60,0)
 .. S DR=".03;.04" D ^DIE
"RTN","USRUMMBR",61,0)
 .. I $D(Y) D
"RTN","USRUMMBR",62,0)
 ... S DIK=DIC D ^DIK K DIK
"RTN","USRUMMBR",63,0)
 ... S CLASSADD=0
"RTN","USRUMMBR",64,0)
 . I 'CLASSADD D  Q
"RTN","USRUMMBR",65,0)
 .. W !,"Error adding ",$$CLNAME^USRLM(+$P($G(^USR(8930.3,+DA,0)),U,2),1)
"RTN","USRUMMBR",66,0)
 . E  S USRCNT=USRCNT+1
"RTN","USRUMMBR",67,0)
 W !,"Rebuilding membership list."
"RTN","USRUMMBR",68,0)
 D BUILD^USRULST(USRDUZ)
"RTN","USRUMMBR",69,0)
 I USRCNT>0 D
"RTN","USRUMMBR",70,0)
 . S USRUSER=$$SIGNAME^USRLS(+$G(USRDUZ))
"RTN","USRUMMBR",71,0)
 . S VALMSG="** "_USRUSER_" added to "_USRCNT_" classes **"
"RTN","USRUMMBR",72,0)
 S VALMCNT=+$G(@VALMAR@(0))
"RTN","USRUMMBR",73,0)
 S VALMBCK="R"
"RTN","USRUMMBR",74,0)
 Q
"RTN","USRUMMBR",75,0)
DELETE ; Delete a member of the class
"RTN","USRUMMBR",76,0)
 N DIE,X,Y,USRCLASS D FULL^VALM1
"RTN","USRUMMBR",77,0)
 N USRCLASS,USRDA,USRCHNG,USRDATA,USRI,USRLST,DIROUT
"RTN","USRUMMBR",78,0)
 I '$D(VALMY) D EN^VALM2(XQORNOD(0))
"RTN","USRUMMBR",79,0)
 S USRI=0
"RTN","USRUMMBR",80,0)
 F  S USRI=$O(VALMY(USRI)) Q:+USRI'>0  D  Q:$D(DIROUT)
"RTN","USRUMMBR",81,0)
 . S USRDATA=$G(^TMP("USRUSERIDX",$J,USRI))
"RTN","USRUMMBR",82,0)
 . ;02/14/00 Been having trouble with USRDA=0
"RTN","USRUMMBR",83,0)
 . ;possible bad x-ref.  Will check for USRDA=0
"RTN","USRUMMBR",84,0)
 . ;Changed USRLM to check for valid 0 node for x-ref AUC
"RTN","USRUMMBR",85,0)
 . S USRDA=+$P(USRDATA,U,2) Q:USRDA=0  D DELETE1(USRDA)
"RTN","USRUMMBR",86,0)
 . S:+$G(USRCHNG) USRLST=$S(+$G(USRLST):USRLST_", ",1:"")_+USRDATA
"RTN","USRUMMBR",87,0)
 . I $D(USRDATA) D UPDATE^USRUM(USRDATA)
"RTN","USRUMMBR",88,0)
 W !,"Rebuilding the list."
"RTN","USRUMMBR",89,0)
 S USRCLASS=+$G(^TMP("USRU",$J,0))
"RTN","USRUMMBR",90,0)
 D BUILD^USRULST(USRDUZ)
"RTN","USRUMMBR",91,0)
 S VALMCNT=+$G(@VALMAR@(0))
"RTN","USRUMMBR",92,0)
 K VALMY S VALMBCK="R"
"RTN","USRUMMBR",93,0)
 S VALMSG="** "_$S($L($G(USRLST)):"Item"_$S($L($G(USRLST),",")>1:"s ",1:" ")_$G(USRLST),1:"Nothing")_" removed **"
"RTN","USRUMMBR",94,0)
 Q
"RTN","USRUMMBR",95,0)
DELETE1(DA) ; Delete one member from a class
"RTN","USRUMMBR",96,0)
 N DIE,DR,USER,CLASS,USRMEM0 S USRMEM0=$G(^USR(8930.3,+DA,0))
"RTN","USRUMMBR",97,0)
 I USRMEM0']"" W !,"Record #",DA," NOT FOUND!" H 2 D MAILMSG Q
"RTN","USRUMMBR",98,0)
 ;S USER=$P($G(^VA(200,+USRMEM0,0)),U)
"RTN","USRUMMBR",99,0)
 ;S USER=$$GET1^DIQ(200,+USRMEM0,.01) ; ICR 10060
"RTN","USRUMMBR",100,0)
 S USER=$$PERSNAME^USRLM1(+USRMEM0)
"RTN","USRUMMBR",101,0)
 S CLASS=$P($G(^USR(8930,+$P(USRMEM0,U,2),0)),U)
"RTN","USRUMMBR",102,0)
 W !,"Removing ",USER," from ",CLASS
"RTN","USRUMMBR",103,0)
 I '$$READ^USRU("Y","Are you SURE","NO") S USRCHNG=0 W !,USER," NOT Removed from ",CLASS,"." H 2 Q
"RTN","USRUMMBR",104,0)
 S USRCHNG=1
"RTN","USRUMMBR",105,0)
 S DIK="^USR(8930.3," D ^DIK W "."
"RTN","USRUMMBR",106,0)
 Q
"RTN","USRUMMBR",107,0)
MAILMSG ; This section will mail an error message to DUZ
"RTN","USRUMMBR",108,0)
 ;W "  A mail message is being sent to ",$P($G(^VA(200,DUZ,0)),"^",1) H 1
"RTN","USRUMMBR",109,0)
 W "  A mail message is being sent to ",$$GET1^DIQ(200,USER,.01) H 1
"RTN","USRUMMBR",110,0)
 N XMY,XMSUB,USRTEXT,XMTEXT,XMDUZ
"RTN","USRUMMBR",111,0)
 S XMDUZ=0.5
"RTN","USRUMMBR",112,0)
 S XMY(DUZ)=""
"RTN","USRUMMBR",113,0)
 S XMSUB="ERROR MESSAGE FROM AUTHORIZED/SUBSCRIPTION (USRUMMBR)"
"RTN","USRUMMBR",114,0)
 S USRTEXT(1)="This message is being generated due to a bad x-ref (AUC)"
"RTN","USRUMMBR",115,0)
 S USRTEXT(2)="in ^USR(8930.3) pointing to a IEN on the 0 node that"
"RTN","USRUMMBR",116,0)
 S USRTEXT(3)="does not exist."
"RTN","USRUMMBR",117,0)
 S USRTEXT(4)=""
"RTN","USRUMMBR",118,0)
 S USRTEXT(5)="Please forward this message to your IRM representative"
"RTN","USRUMMBR",119,0)
 S USRTEXT(6)="asking them to verify the Global ^USR(8930.3) x-ref"
"RTN","USRUMMBR",120,0)
 S USRTEXT(7)="on AUC & ACU."
"RTN","USRUMMBR",121,0)
 S USRTEXT(8)=""
"RTN","USRUMMBR",122,0)
 S USRTEXT(9)="IRM will need to verify that the x-ref AUC & ACU for"
"RTN","USRUMMBR",123,0)
 S USRTEXT(10)=$$GET1^DIQ(200,USRDUZ,.01)_" is pointing to a valid 0 node."
"RTN","USRUMMBR",124,0)
 S USRTEXT(11)=""
"RTN","USRUMMBR",125,0)
 S USRTEXT(12)="DO NOT CONTINUE WITH THIS USER UNTIL IRM VERIFIES!!"
"RTN","USRUMMBR",126,0)
 S USRTEXT(13)=""
"RTN","USRUMMBR",127,0)
 S USRTEXT(14)="IRM please check ^USR(8930.3,""AUC"","_USRDUZ_") to"
"RTN","USRUMMBR",128,0)
 S USRTEXT(15)="verify it is pointing to a valid 0 node IEN."
"RTN","USRUMMBR",129,0)
 S USRTEXT(16)="Also do the same for x-ref ACU"
"RTN","USRUMMBR",130,0)
 S XMTEXT="USRTEXT("
"RTN","USRUMMBR",131,0)
 D ^XMD
"RTN","USRUMMBR",132,0)
 Q
"VER")
8.0^22.0
"BLD",7646,6)
^32
**END**
**END**
