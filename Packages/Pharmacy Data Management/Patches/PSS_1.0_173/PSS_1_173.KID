KIDS Distribution saved on May 03, 2013@14:08:02
PSS*1*173
**KIDS**:PSS*1.0*173^

**INSTALL NAME**
PSS*1.0*173
"BLD",8414,0)
PSS*1.0*173^PHARMACY DATA MANAGEMENT^0^3130503^y
"BLD",8414,1,0)
^^27^27^3130124^
"BLD",8414,1,1,0)
This patch is part of a group of patches that make up the new Medication 
"BLD",8414,1,2,0)
This patch is part of a group of patches that make up the new Medication 
"BLD",8414,1,3,0)
Order Check Healthcare Application v2.0 (MOCHA). These patches will add a
"BLD",8414,1,4,0)
maximum single dose order check to the current Veterans Health Information
"BLD",8414,1,5,0)
Systems and Technology Architecture medication order checking system that
"BLD",8414,1,6,0)
uses the First DataBank (FDB) business logic and database.  FDB custom
"BLD",8414,1,7,0)
dosing tables will be used to store custom dosing changes to FDB standard
"BLD",8414,1,8,0)
reference drug tables. Pharmacy Enterprise Customization System v.2.2
"BLD",8414,1,9,0)
(PECS) application was developed to meet the customization requirements.
"BLD",8414,1,10,0)
 
"BLD",8414,1,11,0)
This patch also makes a second line patch list correction to the routine 
"BLD",8414,1,12,0)
PSS551. In patch PSS*1*169, the second line of the routine mistakenly 
"BLD",8414,1,13,0)
listed patch 260. This patch removes the 260 designation.
"BLD",8414,1,14,0)
 
"BLD",8414,1,15,0)
MOCHA v2.0 consists of the following patches:
"BLD",8414,1,16,0)
1.      PSS*1*160
"BLD",8414,1,17,0)
2.      MOCHA_2_0.KID host file which contains PSJ*5*252, PSO*7*372 and
"BLD",8414,1,18,0)
OR*3*345
"BLD",8414,1,19,0)
3.      PSS*1*173
"BLD",8414,1,20,0)
4.      MOCHA_2_FOLLOW UP COMBINED BUILD.KID host file which contains 
"BLD",8414,1,21,0)
PSJ*5*257, PSO*7*416, OR*3*311 and GMRA*4*47
"BLD",8414,1,22,0)
 
"BLD",8414,1,23,0)
These files and patches contain software that supports MOCHA v2.0 
"BLD",8414,1,24,0)
functionality.  The host files were created to simplify installation at 
"BLD",8414,1,25,0)
Veterans Health Administration (VHA) facilities.
"BLD",8414,1,26,0)
 
"BLD",8414,1,27,0)
Please refer to the Installation Guide for installation instructions.
"BLD",8414,4,0)
^9.64PA^^
"BLD",8414,6)
6^
"BLD",8414,6.3)
9
"BLD",8414,"ABPKG")
n
"BLD",8414,"KRN",0)
^9.67PA^779.2^20
"BLD",8414,"KRN",.4,0)
.4
"BLD",8414,"KRN",.401,0)
.401
"BLD",8414,"KRN",.402,0)
.402
"BLD",8414,"KRN",.403,0)
.403
"BLD",8414,"KRN",.5,0)
.5
"BLD",8414,"KRN",.84,0)
.84
"BLD",8414,"KRN",3.6,0)
3.6
"BLD",8414,"KRN",3.8,0)
3.8
"BLD",8414,"KRN",9.2,0)
9.2
"BLD",8414,"KRN",9.8,0)
9.8
"BLD",8414,"KRN",9.8,"NM",0)
^9.68A^8^8
"BLD",8414,"KRN",9.8,"NM",1,0)
PSSDSAPI^^0^B140100816
"BLD",8414,"KRN",9.8,"NM",2,0)
PSSDSAPD^^0^B181014294
"BLD",8414,"KRN",9.8,"NM",3,0)
PSSDSAPA^^0^B85990165
"BLD",8414,"KRN",9.8,"NM",4,0)
PSSDSAPM^^0^B245057882
"BLD",8414,"KRN",9.8,"NM",5,0)
PSSDRDOS^^0^B158735065
"BLD",8414,"KRN",9.8,"NM",6,0)
PSSHRIT^^0^B219197445
"BLD",8414,"KRN",9.8,"NM",7,0)
PSS551^^0^B15975307
"BLD",8414,"KRN",9.8,"NM",8,0)
PSSHRVL1^^0^B224743007
"BLD",8414,"KRN",9.8,"NM","B","PSS551",7)

"BLD",8414,"KRN",9.8,"NM","B","PSSDRDOS",5)

"BLD",8414,"KRN",9.8,"NM","B","PSSDSAPA",3)

"BLD",8414,"KRN",9.8,"NM","B","PSSDSAPD",2)

"BLD",8414,"KRN",9.8,"NM","B","PSSDSAPI",1)

"BLD",8414,"KRN",9.8,"NM","B","PSSDSAPM",4)

"BLD",8414,"KRN",9.8,"NM","B","PSSHRIT",6)

"BLD",8414,"KRN",9.8,"NM","B","PSSHRVL1",8)

"BLD",8414,"KRN",19,0)
19
"BLD",8414,"KRN",19.1,0)
19.1
"BLD",8414,"KRN",101,0)
101
"BLD",8414,"KRN",409.61,0)
409.61
"BLD",8414,"KRN",771,0)
771
"BLD",8414,"KRN",779.2,0)
779.2
"BLD",8414,"KRN",870,0)
870
"BLD",8414,"KRN",8989.51,0)
8989.51
"BLD",8414,"KRN",8989.52,0)
8989.52
"BLD",8414,"KRN",8994,0)
8994
"BLD",8414,"KRN","B",.4,.4)

"BLD",8414,"KRN","B",.401,.401)

"BLD",8414,"KRN","B",.402,.402)

"BLD",8414,"KRN","B",.403,.403)

"BLD",8414,"KRN","B",.5,.5)

"BLD",8414,"KRN","B",.84,.84)

"BLD",8414,"KRN","B",3.6,3.6)

"BLD",8414,"KRN","B",3.8,3.8)

"BLD",8414,"KRN","B",9.2,9.2)

"BLD",8414,"KRN","B",9.8,9.8)

"BLD",8414,"KRN","B",19,19)

"BLD",8414,"KRN","B",19.1,19.1)

"BLD",8414,"KRN","B",101,101)

"BLD",8414,"KRN","B",409.61,409.61)

"BLD",8414,"KRN","B",771,771)

"BLD",8414,"KRN","B",779.2,779.2)

"BLD",8414,"KRN","B",870,870)

"BLD",8414,"KRN","B",8989.51,8989.51)

"BLD",8414,"KRN","B",8989.52,8989.52)

"BLD",8414,"KRN","B",8994,8994)

"BLD",8414,"QUES",0)
^9.62^^
"BLD",8414,"REQB",0)
^9.611^3^3
"BLD",8414,"REQB",1,0)
PSS*1.0*160^2
"BLD",8414,"REQB",2,0)
PSS*1.0*164^2
"BLD",8414,"REQB",3,0)
PSS*1.0*169^2
"BLD",8414,"REQB","B","PSS*1.0*160",1)

"BLD",8414,"REQB","B","PSS*1.0*164",2)

"BLD",8414,"REQB","B","PSS*1.0*169",3)

"MBREQ")
0
"PKG",517,-1)
1^1
"PKG",517,0)
PHARMACY DATA MANAGEMENT^PSS^Maintenance of Pharmacy files.
"PKG",517,20,0)
^9.402P^^
"PKG",517,22,0)
^9.49I^1^1
"PKG",517,22,1,0)
1.0^2970930^2971014^11595
"PKG",517,22,1,"PAH",1,0)
173^3130503^10000000068
"PKG",517,22,1,"PAH",1,1,0)
^^27^27^3130503
"PKG",517,22,1,"PAH",1,1,1,0)
This patch is part of a group of patches that make up the new Medication 
"PKG",517,22,1,"PAH",1,1,2,0)
This patch is part of a group of patches that make up the new Medication 
"PKG",517,22,1,"PAH",1,1,3,0)
Order Check Healthcare Application v2.0 (MOCHA). These patches will add a
"PKG",517,22,1,"PAH",1,1,4,0)
maximum single dose order check to the current Veterans Health Information
"PKG",517,22,1,"PAH",1,1,5,0)
Systems and Technology Architecture medication order checking system that
"PKG",517,22,1,"PAH",1,1,6,0)
uses the First DataBank (FDB) business logic and database.  FDB custom
"PKG",517,22,1,"PAH",1,1,7,0)
dosing tables will be used to store custom dosing changes to FDB standard
"PKG",517,22,1,"PAH",1,1,8,0)
reference drug tables. Pharmacy Enterprise Customization System v.2.2
"PKG",517,22,1,"PAH",1,1,9,0)
(PECS) application was developed to meet the customization requirements.
"PKG",517,22,1,"PAH",1,1,10,0)
 
"PKG",517,22,1,"PAH",1,1,11,0)
This patch also makes a second line patch list correction to the routine 
"PKG",517,22,1,"PAH",1,1,12,0)
PSS551. In patch PSS*1*169, the second line of the routine mistakenly 
"PKG",517,22,1,"PAH",1,1,13,0)
listed patch 260. This patch removes the 260 designation.
"PKG",517,22,1,"PAH",1,1,14,0)
 
"PKG",517,22,1,"PAH",1,1,15,0)
MOCHA v2.0 consists of the following patches:
"PKG",517,22,1,"PAH",1,1,16,0)
1.      PSS*1*160
"PKG",517,22,1,"PAH",1,1,17,0)
2.      MOCHA_2_0.KID host file which contains PSJ*5*252, PSO*7*372 and
"PKG",517,22,1,"PAH",1,1,18,0)
OR*3*345
"PKG",517,22,1,"PAH",1,1,19,0)
3.      PSS*1*173
"PKG",517,22,1,"PAH",1,1,20,0)
4.      MOCHA_2_FOLLOW UP COMBINED BUILD.KID host file which contains 
"PKG",517,22,1,"PAH",1,1,21,0)
PSJ*5*257, PSO*7*416, OR*3*311 and GMRA*4*47
"PKG",517,22,1,"PAH",1,1,22,0)
 
"PKG",517,22,1,"PAH",1,1,23,0)
These files and patches contain software that supports MOCHA v2.0 
"PKG",517,22,1,"PAH",1,1,24,0)
functionality.  The host files were created to simplify installation at 
"PKG",517,22,1,"PAH",1,1,25,0)
Veterans Health Administration (VHA) facilities.
"PKG",517,22,1,"PAH",1,1,26,0)
 
"PKG",517,22,1,"PAH",1,1,27,0)
Please refer to the Installation Guide for installation instructions.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","PSS551")
0^7^B15975307
"RTN","PSS551",1,0)
PSS551 ;BHM/DB - API FOR PHARMACY PATIENT FILE ;15 JUN 05
"RTN","PSS551",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**108,118,133,169,173**;9/30/97;Build 9
"RTN","PSS551",3,0)
 ;DFN: IEN of Patient [REQUIRED]
"RTN","PSS551",4,0)
 ;PO: Order # [optional]
"RTN","PSS551",5,0)
 ;PSDATE: Start Date [optional]
"RTN","PSS551",6,0)
 ;PEDATE: End Date [optional]
"RTN","PSS551",7,0)
 ;If a start date is sent, an end date must also be sent
"RTN","PSS551",8,0)
 ;LIST: Subscript name used in ^TMP global [REQUIRED]
"RTN","PSS551",9,0)
 N PSSPO,PSSIEN,DA,DR,DIC,PSS,CNT1,X,PSSTMP
"RTN","PSS551",10,0)
 I $G(LIST)="" Q
"RTN","PSS551",11,0)
 K ^TMP($J,LIST)
"RTN","PSS551",12,0)
 I $G(DFN)="" S ^TMP($J,LIST,0)=-1_"^"_"NO DATA FOUND" Q
"RTN","PSS551",13,0)
 S PSSIEN=$G(DFN),PSSPO=$G(PO) S ^TMP($J,LIST,0)=0
"RTN","PSS551",14,0)
 I $G(PSSPO)>0,$G(PSSIEN)>0 S DA=PSSIEN,(IEN,DA(55.06))=PSSPO G DIQ431
"RTN","PSS551",15,0)
 I $G(PSSPO)="",$G(PSDATE)'="",$G(PEDATE)'="" S PSDATE=$S('$P(PSDATE,".",2):PSDATE_.000001,1:PSDATE),PEDATE=$S('$P($G(PEDATE),".",2):PEDATE_.999999,1:$G(PEDATE)) N PSS56 G DT431
"RTN","PSS551",16,0)
 I $G(PSSPO)="" N PSSPO1 G LOOP431
"RTN","PSS551",17,0)
 Q
"RTN","PSS551",18,0)
LOOP431 S (PSSPO1,PSSPO)=0 F  S PSSPO1=$O(^PS(55,DFN,5,"B",PSSPO1)) Q:PSSPO1'>0  F  S PSSPO=$O(^PS(55,DFN,5,"B",PSSPO1,PSSPO)) Q:PSSPO'>0  S PO=PSSPO D DIQ431
"RTN","PSS551",19,0)
 Q
"RTN","PSS551",20,0)
DIQ431 ;
"RTN","PSS551",21,0)
 I '$D(^PS(55,DFN,5,PO,0)) Q
"RTN","PSS551",22,0)
 S PSSIEN=PO_","_DFN_"," K DIQ
"RTN","PSS551",23,0)
 D GETS^DIQ(55.06,PSSIEN,".01;.5;1;2*;3;4;5;6;7;10;11;12;26;27;27.1;28;34;66;109","IE","^TMP(""PSS5506"",$J)")
"RTN","PSS551",24,0)
 F X=.01,.5,1,3,4,5,6,7,10,11,12,26,27,27.1,28,34,66,109 S ^TMP($J,LIST,+PSSPO,X)=$G(^TMP("PSS5506",$J,55.06,PSSIEN,X,"I"))
"RTN","PSS551",25,0)
 F X=.5,1,3,4,5,6,7,10,27,27.1,28,34 S ^TMP($J,LIST,+PSSPO,X)=$S($G(^TMP("PSS5506",$J,55.06,PSSIEN,X,"E"))'="":^TMP($J,LIST,+PSSPO,X)_"^"_$G(^TMP("PSS5506",$J,55.06,PSSIEN,X,"E")),1:"")
"RTN","PSS551",26,0)
 S PSSTMP=$P($G(^PS(55,DFN,5,PO,.2)),U) S ^TMP($J,LIST,IEN,108)=$S($G(PSSTMP)="":"",1:$$ORDITEM^PSS55(+PSSTMP))
"RTN","PSS551",27,0)
 S (PSS(1),CNT1)=0 F  S PSS(1)=$O(^TMP("PSS5506",$J,55.07,PSS(1))) Q:'PSS(1)  D
"RTN","PSS551",28,0)
 .S ^TMP($J,LIST,+PSSPO,"DDRUG",+PSS(1),.11)=$G(^TMP("PSS5506",$J,55.07,PSS(1),.11,"I"))
"RTN","PSS551",29,0)
 .S ^TMP($J,LIST,+PSSPO,"DDRUG",+PSS(1),.12)=$G(^TMP("PSS5506",$J,55.07,PSS(1),.12,"I"))
"RTN","PSS551",30,0)
 .S ^TMP($J,LIST,+PSSPO,"DDRUG",+PSS(1),.01)=$S($G(^TMP("PSS5506",$J,55.07,PSS(1),.01,"E"))'="":$G(^TMP("PSS5506",$J,55.07,PSS(1),.01,"I"))_"^"_$G(^TMP("PSS5506",$J,55.07,PSS(1),.01,"E")),1:"")
"RTN","PSS551",31,0)
 .S ^TMP($J,LIST,+PSSPO,"DDRUG",+PSS(1),.02)=$G(^TMP("PSS5506",$J,55.07,PSS(1),.02,"I"))
"RTN","PSS551",32,0)
 .S ^TMP($J,LIST,+PSSPO,"DDRUG",+PSS(1),.03)=$S($G(^TMP("PSS5506",$J,55.07,PSS(1),.03,"E"))'="":$G(^TMP("PSS5506",$J,55.07,PSS(1),.03,"I"))_"^"_$G(^TMP("PSS5506",$J,55.07,PSS(1),.03,"E")),1:"")
"RTN","PSS551",33,0)
 .S ^TMP($J,LIST,+PSSPO,"DDRUG",+PSS(1),.04)=$G(^TMP("PSS5506",$J,55.07,PSS(1),.04,"I"))
"RTN","PSS551",34,0)
 .S ^TMP($J,LIST,+PSSPO,"DDRUG",+PSS(1),.05)=$G(^TMP("PSS5506",$J,55.07,PSS(1),.05,"I"))
"RTN","PSS551",35,0)
 .S ^TMP($J,LIST,+PSSPO,"DDRUG",+PSS(1),.06)=$G(^TMP("PSS5506",$J,55.07,PSS(1),.06,"I"))
"RTN","PSS551",36,0)
 .S ^TMP($J,LIST,+PSSPO,"DDRUG",+PSS(1),.07)=$G(^TMP("PSS5506",$J,55.07,PSS(1),.07,"I"))
"RTN","PSS551",37,0)
 .S ^TMP($J,LIST,+PSSPO,"DDRUG",+PSS(1),.08)=$G(^TMP("PSS5506",$J,55.07,PSS(1),.08,"I"))
"RTN","PSS551",38,0)
 .S ^TMP($J,LIST,+PSSPO,"DDRUG",+PSS(1),.09)=$G(^TMP("PSS5506",$J,55.07,PSS(1),.09,"I"))
"RTN","PSS551",39,0)
 .S ^TMP($J,LIST,+PSSPO,"DDRUG",+PSS(1),.1)=$G(^TMP("PSS5506",$J,55.07,PSS(1),.1,"I"))
"RTN","PSS551",40,0)
 .S CNT1=CNT1+1
"RTN","PSS551",41,0)
 K ^TMP("PSS5506",$J),PSS(1) S ^TMP($J,LIST,"B",+PSSPO)=""
"RTN","PSS551",42,0)
 S ^TMP($J,LIST,0)=^TMP($J,LIST,0)+1
"RTN","PSS551",43,0)
 S ^TMP($J,LIST,+PSSPO,"DDRUG",0)=$S(CNT1=0:"-1^NO DATA FOUND",1:CNT1)
"RTN","PSS551",44,0)
 S ^TMP($J,LIST,0)=$S(^TMP($J,LIST,0)=0:"-1^NO DATA FOUND",1:^TMP($J,LIST,0))
"RTN","PSS551",45,0)
 Q
"RTN","PSS551",46,0)
DT431 F  S PSDATE=$O(^PS(55,DFN,5,"AUS",PSDATE)) Q:((+$G(PEDATE)>0)&(PSDATE>$G(PEDATE)))  Q:PSDATE'>0  D
"RTN","PSS551",47,0)
 .S PSS56=0 F  S PSS56=$O(^PS(55,DFN,5,"AUS",PSDATE,PSS56)) Q:PSS56'>0  S (PSSPO,PO)=PSS56 D DIQ431
"RTN","PSS551",48,0)
 S ^TMP($J,LIST,0)=$S(^TMP($J,LIST,0)=0:"-1^NO DATA FOUND",1:^TMP($J,LIST,0))
"RTN","PSS551",49,0)
 K CNT1,LIST,DA,DFN,DIC,DIQ,DR,IEN,PEDATE,PO,PSDATE,PSS,PSS56,PSSPO,PSSPO1,X Q
"RTN","PSSDRDOS")
0^5^B158735065
"RTN","PSSDRDOS",1,0)
PSSDRDOS ;BIR/RTR-Display Dosing related information for DRUG File(#50) entry ;08/20/11
"RTN","PSSDRDOS",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**160,173**;9/30/97;Build 9
"RTN","PSSDRDOS",3,0)
 ;
"RTN","PSSDRDOS",4,0)
 ;
"RTN","PSSDRDOS",5,0)
EN ;
"RTN","PSSDRDOS",6,0)
 N X,Y,DIR,DTOUT,DUOUT,DIRUT,DIROUT,DIC,DA,DR,DLAYGO,DIDEL,%,%DT,D0,I,J,XX,D
"RTN","PSSDRDOS",7,0)
 N PSSVVHIN,PSSVVHZR,PSSVVHND,PSSVVHN1,PSSVVHN3,PSSVVHRS,PSSVVHMT,PSSVVHOV,PSSVVHNM,PSSVVHDF,PSSVVHGC,PSSVVHDX,PSSVVHLG,PSSVVHQT,PSSVVHL3,PSSVVHL4
"RTN","PSSDRDOS",8,0)
 N PSSVVHA1,PSSVVHA2,PSSVVHA3,PSSVVHA4,PSSVVHA5,PSSVVHA7,PSSVVHA8,PSSVVHA9,PSSVVHAR,PSSIEN,PSSVVHXX,PSSVVHPL,PSSVVHHH
"RTN","PSSDRDOS",9,0)
 N PSSVVHL1,PSSVVHL2
"RTN","PSSDRDOS",10,0)
 S $P(PSSVVHL1,"=",75)=""
"RTN","PSSDRDOS",11,0)
 S $P(PSSVVHL2,"-",75)=""
"RTN","PSSDRDOS",12,0)
EN1 ;Come back through to prompt for another drug before exiting option
"RTN","PSSDRDOS",13,0)
 K X,Y,DIR,DTOUT,DUOUT,DIRUT,DIROUT,DIC,DA,DR,DLAYGO,DIDEL,%,%DT,D0,I,J,XX,D
"RTN","PSSDRDOS",14,0)
 K PSSVVHIN,PSSVVHZR,PSSVVHND,PSSVVHN1,PSSVVHN3,PSSVVHRS,PSSVVHMT,PSSVVHOV,PSSVVHNM,PSSVVHDF,PSSVVHGC,PSSVVHDX,PSSVVHLG,PSSVVHQT,PSSVVHL3,PSSVVHL4
"RTN","PSSDRDOS",15,0)
 K PSSVVHA1,PSSVVHA2,PSSVVHA3,PSSVVHA4,PSSVVHA5,PSSVVHA7,PSSVVHA8,PSSVVHA9,PSSVVHAR,PSSIEN,PSSVVHXX,PSSVVHPL,PSSVVHHH
"RTN","PSSDRDOS",16,0)
 W ! K DIC,X,DTOUT,DUOUT S DIC="^PSDRUG(",DIC(0)="AEQMZ" D ^DIC K DIC,X I Y<0!($D(DUOUT))!($D(DTOUT)) W ! Q
"RTN","PSSDRDOS",17,0)
 S PSSVVHIN=+Y
"RTN","PSSDRDOS",18,0)
 S (PSSVVHDX,PSSVVHQT,PSSVVHLG)=0,(PSSVVHOV,PSSVVHGC,PSSVVHNM,PSSVVHDF,PSSVVHPL,PSSVVHHH)=""
"RTN","PSSDRDOS",19,0)
 S PSSVVHZR=$G(^PSDRUG(PSSVVHIN,0)),PSSVVHND=$G(^PSDRUG(PSSVVHIN,"ND")),PSSVVHMT=1
"RTN","PSSDRDOS",20,0)
 S PSSVVHN1=$P(PSSVVHND,"^"),PSSVVHN3=$P(PSSVVHND,"^",3) I 'PSSVVHN1!('PSSVVHN3) S PSSVVHMT=0
"RTN","PSSDRDOS",21,0)
 I 'PSSVVHMT S PSSVVHLG=1 G NOTM
"RTN","PSSDRDOS",22,0)
 S PSSVVHRS=$$PROD0^PSNAPIS(PSSVVHN1,PSSVVHN3),PSSVVHOV=$$OVRIDE^PSNAPIS(PSSVVHN1,PSSVVHN3) S PSSVVHHH=$S(PSSVVHOV:1,1:0)
"RTN","PSSDRDOS",23,0)
 S PSSVVHNM=$P(PSSVVHRS,"^"),PSSVVHDF=$P(PSSVVHRS,"^",2),PSSVVHGC=$P(PSSVVHRS,"^",7)
"RTN","PSSDRDOS",24,0)
 I PSSVVHDF S PSSVVHPL=0 I $P($G(^PS(50.606,PSSVVHDF,1)),"^") S (PSSVVHDX,PSSVVHPL)=1
"RTN","PSSDRDOS",25,0)
 S PSSVVHLG=$$ELG
"RTN","PSSDRDOS",26,0)
 ;
"RTN","PSSDRDOS",27,0)
NOTM ;Jump to here if not matched to National Drug File
"RTN","PSSDRDOS",28,0)
 W @IOF
"RTN","PSSDRDOS",29,0)
 S PSSVVHL3=$L($P(PSSVVHZR,"^")),PSSVVHL4=$S(PSSVVHGC'="":$L(PSSVVHGC),1:4) D
"RTN","PSSDRDOS",30,0)
 .I (PSSVVHL3+PSSVVHL4)<54 W !?12,$P(PSSVVHZR,"^")_"  (GCNSEQNO: "_$S(PSSVVHGC'="":PSSVVHGC,1:"None")_")" D PAUSE Q
"RTN","PSSDRDOS",31,0)
 .W !?12,$P(PSSVVHZR,"^") D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",32,0)
 .W !?12,"(GCNSEQNO: "_$S(PSSVVHGC'="":PSSVVHGC,1:"None")_")" D PAUSE
"RTN","PSSDRDOS",33,0)
 G:PSSVVHQT EN1
"RTN","PSSDRDOS",34,0)
 W !,PSSVVHL1 D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",35,0)
 S PSSVVHL3=$L(PSSVVHNM) D
"RTN","PSSDRDOS",36,0)
 .I PSSVVHL3<63 W !,"VA PRODUCT NAME: "_PSSVVHNM D PAUSE Q
"RTN","PSSDRDOS",37,0)
 .W !,"VA PRODUCT NAME:" D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",38,0)
 .W !?2,PSSVVHNM D PAUSE
"RTN","PSSDRDOS",39,0)
 G:PSSVVHQT EN1
"RTN","PSSDRDOS",40,0)
 W !,"NDF DOSAGE FORM: "_$S(PSSVVHDF:$P($G(^PS(50.606,+PSSVVHDF,0)),"^"),1:"") D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",41,0)
 W !,"DEA, SPECIAL HDLG: "_$P(PSSVVHZR,"^",3)_"   VA DRUG CLASS: "_$P(PSSVVHZR,"^",2) D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",42,0)
 W !,"EXCLUDE DOSAGE FORM FROM DOSAGE CHECKS: " W $S(PSSVVHPL:"YES",PSSVVHPL=0:"NO",1:"") D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",43,0)
 W !,"OVERRIDE DOSAGE FORM DOSE CHECK EXCLUSION FOR VA PRODUCT: " W $S(PSSVVHHH:"YES",PSSVVHHH=0:"NO",1:"") D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",44,0)
 W ! D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",45,0)
 W !?7,"***DRUG "_$S(PSSVVHLG:"NOT ",1:"")_"ELIGIBLE FOR DOSAGE CHECKS***" D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",46,0)
 W !,PSSVVHL2 D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",47,0)
 ;
"RTN","PSSDRDOS",48,0)
 ;
"RTN","PSSDRDOS",49,0)
 S PSSVVHA1=$G(^PSDRUG(PSSVVHIN,"DOS")) S PSSVVHL3=0
"RTN","PSSDRDOS",50,0)
 S PSSVVHA2=$P(PSSVVHA1,"^"),PSSVVHA3=$P(PSSVVHA1,"^",2) I PSSVVHA3,$P($G(^PS(50.507,+PSSVVHA3,0)),"^")'["/" S PSSVVHL3=$L($P($G(^PS(50.607,+PSSVVHA3,0)),"^"))
"RTN","PSSDRDOS",51,0)
 W !,"Strength: "_$S($E($G(PSSVVHA2),1)=".":"0",1:"")_$G(PSSVVHA2) D
"RTN","PSSDRDOS",52,0)
 .I PSSVVHA3="" W "   Unit:" D PAUSE Q
"RTN","PSSDRDOS",53,0)
 .I PSSVVHL3<46 W "   Unit: "_$S($P($G(^PS(50.607,+$G(PSSVVHA3),0)),"^")'["/":$P($G(^(0)),"^"),1:"") D PAUSE Q
"RTN","PSSDRDOS",54,0)
 .W ! D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",55,0)
 .W "   Unit: "_$S($P($G(^PS(50.607,+$G(PSSVVHA3),0)),"^")'["/":$P($G(^(0)),"^"),1:"") D PAUSE Q
"RTN","PSSDRDOS",56,0)
 G:PSSVVHQT EN1
"RTN","PSSDRDOS",57,0)
 W !,"POSSIBLE DOSAGES:" D PAUSE G:PSSVVHQT EN1 D
"RTN","PSSDRDOS",58,0)
 .F PSSVVHA4=0:0 S PSSVVHA4=$O(^PSDRUG(PSSVVHIN,"DOS1",PSSVVHA4)) Q:'PSSVVHA4!(PSSVVHQT)  D
"RTN","PSSDRDOS",59,0)
 ..S PSSVVHA5=$G(^PSDRUG(PSSVVHIN,"DOS1",PSSVVHA4,0))
"RTN","PSSDRDOS",60,0)
 ..W !,"  DISPENSE UNITS PER DOSE: " D
"RTN","PSSDRDOS",61,0)
 ...W $S($E($P(PSSVVHA5,"^"),1)=".":"0",1:"")_$P(PSSVVHA5,"^")
"RTN","PSSDRDOS",62,0)
 ...S X=$P(PSSVVHA5,"^"),PSSIEN=PSSVVHIN D SET^PSSDOSLZ S PSSVVHXX=$G(X)
"RTN","PSSDRDOS",63,0)
 ...W ?43,"DOSE: ",PSSVVHXX
"RTN","PSSDRDOS",64,0)
 ...I $L(PSSVVHXX)'>14 W ?65,"PACKAGE: ",$P(PSSVVHA5,U,3) D PAUSE Q
"RTN","PSSDRDOS",65,0)
 ...W ! D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",66,0)
 ...W ?65,"PACKAGE: ",$P(PSSVVHA5,U,3) D PAUSE
"RTN","PSSDRDOS",67,0)
 ..Q:PSSVVHQT
"RTN","PSSDRDOS",68,0)
 ..W !,"      BCMA UNITS PER DOSE: "_$S($E($P(PSSVVHA5,"^",4),1)=".":"0",1:"")_$P(PSSVVHA5,"^",4) D PAUSE
"RTN","PSSDRDOS",69,0)
 G:PSSVVHQT EN1
"RTN","PSSDRDOS",70,0)
 W !!,"LOCAL POSSIBLE DOSAGES:" D PAUSE G:PSSVVHQT EN1 D
"RTN","PSSDRDOS",71,0)
 .F PSSVVHA7=0:0 S PSSVVHA7=$O(^PSDRUG(PSSVVHIN,"DOS2",PSSVVHA7)) Q:'PSSVVHA7!(PSSVVHQT)  D
"RTN","PSSDRDOS",72,0)
 ..S PSSVVHA8=$G(^PSDRUG(PSSVVHIN,"DOS2",PSSVVHA7,0)) W !,"  LOCAL POSSIBLE DOSAGE: " D
"RTN","PSSDRDOS",73,0)
 ...I $L($P(PSSVVHA8,"^"))'>37 W $P(PSSVVHA8,"^"),?65,"PACKAGE: ",$P(PSSVVHA8,"^",2) D PAUSE Q:PSSVVHQT  D WXFPT(PSSVVHA8) Q
"RTN","PSSDRDOS",74,0)
 ...W !,?3,$P(PSSVVHA8,"^"),?65,"PACKAGE: ",$P(PSSVVHA8,"^",2) D PAUSE Q:PSSVVHQT  D WXFPT(PSSVVHA8)
"RTN","PSSDRDOS",75,0)
 G:PSSVVHQT EN1
"RTN","PSSDRDOS",76,0)
 W !,PSSVVHL2 D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",77,0)
 I $G(PSSVVHGC)=""!(PSSVVHLG) D  G EN1
"RTN","PSSDRDOS",78,0)
 .W !,"FDB ROUTES:" D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",79,0)
 .W !,"FDB DOSE UNITS:" D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",80,0)
 .W !,"BSA REQUIRED FOR DOSAGE CHECKS:" D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",81,0)
 .W !,"WEIGHT REQUIRED FOR DOSAGE CHECKS:" D PAUSE
"RTN","PSSDRDOS",82,0)
 D NGC,NGCK G EN1
"RTN","PSSDRDOS",83,0)
 ;
"RTN","PSSDRDOS",84,0)
 ;
"RTN","PSSDRDOS",85,0)
WXFPT(PSSVVHCL) ;
"RTN","PSSDRDOS",86,0)
 N PSSVVHC1,PSSVVHC2,PSSVVHC3,PSSVVHC4,PSSVVHC5,PSSVVHC6,PSSVVHC7
"RTN","PSSDRDOS",87,0)
 S PSSVVHC4=""
"RTN","PSSDRDOS",88,0)
 S PSSVVHC1=$P(PSSVVHCL,"^",3),PSSVVHC2=$P(PSSVVHCL,"^",5),PSSVVHC3=$P(PSSVVHCL,"^",6)
"RTN","PSSDRDOS",89,0)
 I PSSVVHC2 S PSSVVHC4=$P($G(^PS(51.24,+PSSVVHC2,0)),"^")
"RTN","PSSDRDOS",90,0)
 S PSSVVHC5=$S($E(PSSVVHC3)=".":"0",1:"")_PSSVVHC3
"RTN","PSSDRDOS",91,0)
 S PSSVVHC7=$S($E(PSSVVHC1)=".":"0",1:"")_PSSVVHC1
"RTN","PSSDRDOS",92,0)
 S PSSVVHC6=$L(PSSVVHC5)
"RTN","PSSDRDOS",93,0)
 W !?4,"BCMA UNITS PER DOSE: "_PSSVVHC7 D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",94,0)
 I PSSVVHC6<12 W !?4,"       NUMERIC DOSE: "_PSSVVHC5,?38,"DOSE UNIT: "_PSSVVHC4 D PAUSE Q
"RTN","PSSDRDOS",95,0)
 W !,?4,"       NUMERIC DOSE: "_PSSVVHC5 D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",96,0)
 W !,?38,"DOSE UNIT: "_PSSVVHC4 D PAUSE
"RTN","PSSDRDOS",97,0)
 Q
"RTN","PSSDRDOS",98,0)
 ;
"RTN","PSSDRDOS",99,0)
 ;
"RTN","PSSDRDOS",100,0)
PAUSE ;
"RTN","PSSDRDOS",101,0)
 I ($Y+5)'>IOSL Q
"RTN","PSSDRDOS",102,0)
 W ! K DIR S DIR(0)="E",DIR("A")="Press Return to continue, '^' to exit" D ^DIR K DIR I 'Y S PSSVVHQT=1 Q
"RTN","PSSDRDOS",103,0)
 W @IOF
"RTN","PSSDRDOS",104,0)
 Q
"RTN","PSSDRDOS",105,0)
 ;
"RTN","PSSDRDOS",106,0)
 ;
"RTN","PSSDRDOS",107,0)
ELG() ;Is drug Dose Call Eligible, for matched drugs
"RTN","PSSDRDOS",108,0)
 N PSSVVHDA
"RTN","PSSDRDOS",109,0)
 S PSSVVHDA=PSSVVHDF
"RTN","PSSDRDOS",110,0)
 ;1=exempt from Dose Check, 0=not exempt from Dose check
"RTN","PSSDRDOS",111,0)
 I $P(PSSVVHZR,"^",3)["S"!($E($P(PSSVVHZR,"^",2),1,2)="XA") Q 1
"RTN","PSSDRDOS",112,0)
 I $G(PSSVVHGC)="" Q 1
"RTN","PSSDRDOS",113,0)
 I $G(PSSVVHDA)'>0,$P($G(^PSDRUG(PSSVVHIN,2)),"^") S PSSVVHDA=$P($G(^PS(50.7,+$P($G(^PSDRUG(PSSVVHIN,2)),"^"),0)),"^",2) I PSSVVHDA,$P($G(^PS(50.606,+$G(PSSVVHDA),1)),"^") S PSSVVHDX=1
"RTN","PSSDRDOS",114,0)
 I PSSVVHOV=""!('$G(PSSVVHDA))!($P($G(^PS(50.606,+$G(PSSVVHDA),1)),"^")="") Q 0
"RTN","PSSDRDOS",115,0)
 I $P($G(^PS(50.606,+$G(PSSVVHDA),1)),"^"),'PSSVVHOV Q 1
"RTN","PSSDRDOS",116,0)
 I '$P($G(^PS(50.606,+$G(PSSVVHDA),1)),"^"),PSSVVHOV Q 1
"RTN","PSSDRDOS",117,0)
 Q 0
"RTN","PSSDRDOS",118,0)
 ;
"RTN","PSSDRDOS",119,0)
 ;
"RTN","PSSDRDOS",120,0)
NGC ;Print First Databank data from Dosing records
"RTN","PSSDRDOS",121,0)
 N PSSDCR1,PSSDCR2,PSSDCR3,PSSDCR4,PSSDCR5,PSSDCR6,PSSDCR7,PSSDCR8,PSSDCR9,PSSDCRN3,PSSDCRVL,PSSDCRMR,PSSDCRUN,PSSDCRWT,PSSDCRBS,PSSDCRCO,PSSDCRF1,PSSDCRF2,PSSDCRF3,PSSDCRF4,PSSDCRF5,PSSDCRX1,PSSDCRX2,PSSDCRXX,PSSDCRK1,PSSDCRK2
"RTN","PSSDRDOS",122,0)
 N PSSDCRJ1,PSSDCRJ2,PSSDCRJ3,PSSDCRJ4,PSSDCRJ5,PSSDCRJ6
"RTN","PSSDRDOS",123,0)
 D NGCK
"RTN","PSSDRDOS",124,0)
 D EN^PSSFDBDI(PSSVVHGC,.PSSDCRVL)
"RTN","PSSDRDOS",125,0)
 I $P($G(PSSDCRVL(0)),"^")=-1 D  Q
"RTN","PSSDRDOS",126,0)
 .W !,"Vendor database cannot be reached. FDB Dosing information could not be" D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",127,0)
 .W !,"retrieved at this time." D PAUSE
"RTN","PSSDRDOS",128,0)
 ;
"RTN","PSSDRDOS",129,0)
 ;set arrays used for printing from doseRanges records
"RTN","PSSDRDOS",130,0)
 S (PSSDCRX1,PSSDCRX2)=1
"RTN","PSSDRDOS",131,0)
 S PSSVVHGC=+PSSVVHGC
"RTN","PSSDRDOS",132,0)
 S PSSDCR1="" F  S PSSDCR1=$O(^TMP($J,"PSSFDBDI",PSSVVHGC,"doseRanges",PSSDCR1)) Q:PSSDCR1=""  D
"RTN","PSSDRDOS",133,0)
 .S PSSDCR2=$G(^TMP($J,"PSSFDBDI",PSSVVHGC,"doseRanges",PSSDCR1,1,0)) Q:$P(PSSDCR2,"^",4)'="SINGLE DOSE"&($P(PSSDCR2,"^",4)'="MAINTENANCE")  S:$P(PSSDCR2,"^",6)'="" PSSDCRMR($P(PSSDCR2,"^",6))=""
"RTN","PSSDRDOS",134,0)
 .S PSSDCR5=$G(^TMP($J,"PSSFDBDI",PSSVVHGC,"doseRanges",PSSDCR1,5,0))
"RTN","PSSDRDOS",135,0)
 .S PSSDCR6=$G(^TMP($J,"PSSFDBDI",PSSVVHGC,"doseRanges",PSSDCR1,6,0))
"RTN","PSSDRDOS",136,0)
 .S PSSDCR7=$G(^TMP($J,"PSSFDBDI",PSSVVHGC,"doseRanges",PSSDCR1,7,0))
"RTN","PSSDRDOS",137,0)
 .S PSSDCRN3=$G(^TMP($J,"PSSFDBDI",PSSVVHGC,"doseRanges",PSSDCR1,3,0))
"RTN","PSSDRDOS",138,0)
 .F PSSDCR8=2,4,6,8 D
"RTN","PSSDRDOS",139,0)
 ..S:$P(PSSDCR5,"^",PSSDCR8)'="" PSSDCRUN($P($P(PSSDCR5,"^",PSSDCR8),"/"))="" S:$P(PSSDCR6,"^",PSSDCR8)'="" PSSDCRUN($P($P(PSSDCR6,"^",PSSDCR8),"/"))=""
"RTN","PSSDRDOS",140,0)
 .F PSSDCR8=2,4 D
"RTN","PSSDRDOS",141,0)
 ..S:$P(PSSDCR7,"^",PSSDCR8)'="" PSSDCRUN($P($P(PSSDCR7,"^",PSSDCR8),"/"))=""
"RTN","PSSDRDOS",142,0)
 .I $P(PSSDCR2,"^",7)'="",$P(PSSDCR2,"^",8)'="" S PSSDCRCO=$P(PSSDCR2,"^",7)_"-"_$P(PSSDCR2,"^",8) D
"RTN","PSSDRDOS",143,0)
 ..I $P(PSSDCRN3,"^")="true"!($P(PSSDCRN3,"^")="false") I '$$DUP1 S PSSDCRBS(PSSDCRX1,PSSDCRCO,$P(PSSDCRN3,"^"))=$P(PSSDCR2,"^",6)_"^"_$P(PSSDCR2,"^",4) S PSSDCRX1=PSSDCRX1+1
"RTN","PSSDRDOS",144,0)
 ..I $P(PSSDCRN3,"^",2)="true"!($P(PSSDCRN3,"^",2)="false") I '$$DUP2 S PSSDCRWT(PSSDCRX2,PSSDCRCO,$P(PSSDCRN3,"^",2))=$P(PSSDCR2,"^",6)_"^"_$P(PSSDCR2,"^",4) S PSSDCRX2=PSSDCRX2+1
"RTN","PSSDRDOS",145,0)
 ;
"RTN","PSSDRDOS",146,0)
 ;Removed all Min/Max Dosing records per CR 5781, CR 5783 and CCR 5778
"RTN","PSSDRDOS",147,0)
 ;
"RTN","PSSDRDOS",148,0)
 W !,"FDB ROUTES: " S PSSDCR3=0 D
"RTN","PSSDRDOS",149,0)
 .S PSSDCR4="" F  S PSSDCR4=$O(PSSDCRMR(PSSDCR4)) Q:PSSDCR4=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",150,0)
 ..I 'PSSDCR3 W PSSDCR4 S PSSDCR3=1 D PAUSE Q
"RTN","PSSDRDOS",151,0)
 ..W !?12,PSSDCR4 D PAUSE
"RTN","PSSDRDOS",152,0)
 I PSSVVHQT Q
"RTN","PSSDRDOS",153,0)
 ;
"RTN","PSSDRDOS",154,0)
 W !,"FDB DOSE UNITS: " S PSSDCR3=0 D
"RTN","PSSDRDOS",155,0)
 .S PSSDCR4="" F  S PSSDCR4=$O(PSSDCRUN(PSSDCR4)) Q:PSSDCR4=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",156,0)
 ..I 'PSSDCR3 W PSSDCR4 S PSSDCR3=1 D PAUSE Q
"RTN","PSSDRDOS",157,0)
 ..W !?16,PSSDCR4 D PAUSE
"RTN","PSSDRDOS",158,0)
 I PSSVVHQT Q
"RTN","PSSDRDOS",159,0)
 ;
"RTN","PSSDRDOS",160,0)
 ;Write BSA and WT required data
"RTN","PSSDRDOS",161,0)
 ;If all Age ranges under BSA or WT, are the same do not list individual age ranges
"RTN","PSSDRDOS",162,0)
 ;When listing Age ranges under BSA or WT, then within that Yes or No, if 2 or more and ranges exist, and one or more has
"RTN","PSSDRDOS",163,0)
 ;a route associated with it, do not show the age range that does not have a route. Other than that, duplicates are not screened out.
"RTN","PSSDRDOS",164,0)
 ;
"RTN","PSSDRDOS",165,0)
 S (PSSDCRF3,PSSDCRF4)="" D
"RTN","PSSDRDOS",166,0)
 .S PSSDCRXX="" F  S PSSDCRXX=$O(PSSDCRBS(PSSDCRXX)) Q:PSSDCRXX=""!(PSSDCRF4)  D
"RTN","PSSDRDOS",167,0)
 ..S PSSDCRF1="" F  S PSSDCRF1=$O(PSSDCRBS(PSSDCRXX,PSSDCRF1)) Q:PSSDCRF1=""!(PSSDCRF4)  D
"RTN","PSSDRDOS",168,0)
 ...S PSSDCRF2="" F  S PSSDCRF2=$O(PSSDCRBS(PSSDCRXX,PSSDCRF1,PSSDCRF2)) Q:PSSDCRF2=""!(PSSDCRF4)  D
"RTN","PSSDRDOS",169,0)
 ....I PSSDCRF3="" S PSSDCRF3=PSSDCRF2 Q
"RTN","PSSDRDOS",170,0)
 ....I PSSDCRF3'=PSSDCRF2 S PSSDCRF4=1 Q
"RTN","PSSDRDOS",171,0)
 ....S PSSDCRF3=PSSDCRF2
"RTN","PSSDRDOS",172,0)
 W !,"BSA REQUIRED FOR DOSAGE CHECKS:" D
"RTN","PSSDRDOS",173,0)
 .I 'PSSDCRF4 W $S(PSSDCRF3="true":" YES",PSSDCRF3="false":" NO",1:"") D PAUSE Q
"RTN","PSSDRDOS",174,0)
 .;Resort by starting age for printing
"RTN","PSSDRDOS",175,0)
 .K PSSDCRJ1,PSSDCRJ2,PSSDCRJ3,PSSDCRJ4,PSSDCRJ5,PSSDCRJ6
"RTN","PSSDRDOS",176,0)
 .F PSSDCRJ1=1:1 Q:'$D(PSSDCRBS(PSSDCRJ1))  S PSSDCRJ2="" F  S PSSDCRJ2=$O(PSSDCRBS(PSSDCRJ1,PSSDCRJ2)) Q:PSSDCRJ2=""  D
"RTN","PSSDRDOS",177,0)
 ..S PSSDCRJ3="" F  S PSSDCRJ3=$O(PSSDCRBS(PSSDCRJ1,PSSDCRJ2,PSSDCRJ3)) Q:PSSDCRJ3=""  S PSSDCRJ4=$P(PSSDCRJ2,"-") D
"RTN","PSSDRDOS",178,0)
 ...S PSSDCRJ5(PSSDCRJ4,PSSDCRJ1,PSSDCRJ2,PSSDCRJ3)=PSSDCRBS(PSSDCRJ1,PSSDCRJ2,PSSDCRJ3)
"RTN","PSSDRDOS",179,0)
 .W !?2,"YES for Age in Days:" S PSSDCR3=0 D
"RTN","PSSDRDOS",180,0)
 ..S PSSDCRJ6="" F  S PSSDCRJ6=$O(PSSDCRJ5(PSSDCRJ6)) Q:PSSDCRJ6=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",181,0)
 ...S PSSDCRXX="" F  S PSSDCRXX=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX)) Q:PSSDCRXX=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",182,0)
 ....S PSSDCR4="" F  S PSSDCR4=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4)) Q:PSSDCR4=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",183,0)
 .....S PSSDCRF5="" F  S PSSDCRF5=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)) Q:PSSDCRF5=""!(PSSVVHQT)  D:PSSDCRF5="true"
"RTN","PSSDRDOS",184,0)
 ......S PSSDCRK1=PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)
"RTN","PSSDRDOS",185,0)
 ......W:PSSDCR3 !?22 W " "_PSSDCR4_"  " D  Q:PSSVVHQT  S PSSDCR3=1 D PAUSE Q
"RTN","PSSDRDOS",186,0)
 .......D LWRP(PSSDCRK1)
"RTN","PSSDRDOS",187,0)
 .Q:PSSVVHQT
"RTN","PSSDRDOS",188,0)
 .W !?3,"NO for Age in Days:" S PSSDCR3=0 D
"RTN","PSSDRDOS",189,0)
 ..S PSSDCRJ6="" F  S PSSDCRJ6=$O(PSSDCRJ5(PSSDCRJ6)) Q:PSSDCRJ6=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",190,0)
 ...S PSSDCRXX="" F  S PSSDCRXX=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX)) Q:PSSDCRXX=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",191,0)
 ....S PSSDCR4="" F  S PSSDCR4=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4)) Q:PSSDCR4=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",192,0)
 .....S PSSDCRF5="" F  S PSSDCRF5=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)) Q:PSSDCRF5=""!(PSSVVHQT)  D:PSSDCRF5="false"
"RTN","PSSDRDOS",193,0)
 ......S PSSDCRK2=PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)
"RTN","PSSDRDOS",194,0)
 ......W:PSSDCR3 !?22 W " "_PSSDCR4_"  " D  Q:PSSVVHQT  S PSSDCR3=1 D PAUSE Q
"RTN","PSSDRDOS",195,0)
 .......D LWRP(PSSDCRK2)
"RTN","PSSDRDOS",196,0)
 I PSSVVHQT Q 
"RTN","PSSDRDOS",197,0)
 ;
"RTN","PSSDRDOS",198,0)
 S (PSSDCRF3,PSSDCRF4)="" D
"RTN","PSSDRDOS",199,0)
 .S PSSDCRXX="" F  S PSSDCRXX=$O(PSSDCRWT(PSSDCRXX)) Q:PSSDCRXX=""!(PSSDCRF4)  D
"RTN","PSSDRDOS",200,0)
 ..S PSSDCRF1="" F  S PSSDCRF1=$O(PSSDCRWT(PSSDCRXX,PSSDCRF1)) Q:PSSDCRF1=""!(PSSDCRF4)  D
"RTN","PSSDRDOS",201,0)
 ...S PSSDCRF2="" F  S PSSDCRF2=$O(PSSDCRWT(PSSDCRXX,PSSDCRF1,PSSDCRF2)) Q:PSSDCRF2=""!(PSSDCRF4)  D
"RTN","PSSDRDOS",202,0)
 ....I PSSDCRF3="" S PSSDCRF3=PSSDCRF2 Q
"RTN","PSSDRDOS",203,0)
 ....I PSSDCRF3'=PSSDCRF2 S PSSDCRF4=1 Q
"RTN","PSSDRDOS",204,0)
 ....S PSSDCRF3=PSSDCRF2
"RTN","PSSDRDOS",205,0)
 W !,"WEIGHT REQUIRED FOR DOSAGE CHECKS:" D 
"RTN","PSSDRDOS",206,0)
 .I 'PSSDCRF4 W $S(PSSDCRF3="true":" YES",PSSDCRF3="false":" NO",1:"") D PAUSE Q
"RTN","PSSDRDOS",207,0)
 .;Resort by starting age for printing
"RTN","PSSDRDOS",208,0)
 .K PSSDCRJ1,PSSDCRJ2,PSSDCRJ3,PSSDCRJ4,PSSDCRJ5,PSSDCRJ6
"RTN","PSSDRDOS",209,0)
 .F PSSDCRJ1=1:1 Q:'$D(PSSDCRWT(PSSDCRJ1))  S PSSDCRJ2="" F  S PSSDCRJ2=$O(PSSDCRWT(PSSDCRJ1,PSSDCRJ2)) Q:PSSDCRJ2=""  D
"RTN","PSSDRDOS",210,0)
 ..S PSSDCRJ3="" F  S PSSDCRJ3=$O(PSSDCRWT(PSSDCRJ1,PSSDCRJ2,PSSDCRJ3)) Q:PSSDCRJ3=""  S PSSDCRJ4=$P(PSSDCRJ2,"-") D
"RTN","PSSDRDOS",211,0)
 ...S PSSDCRJ5(PSSDCRJ4,PSSDCRJ1,PSSDCRJ2,PSSDCRJ3)=PSSDCRWT(PSSDCRJ1,PSSDCRJ2,PSSDCRJ3)
"RTN","PSSDRDOS",212,0)
 .W !?2,"YES for Age in Days:" S PSSDCR3=0 D
"RTN","PSSDRDOS",213,0)
  ..S PSSDCRJ6="" F  S PSSDCRJ6=$O(PSSDCRJ5(PSSDCRJ6)) Q:PSSDCRJ6=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",214,0)
 ...S PSSDCRXX="" F  S PSSDCRXX=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX)) Q:PSSDCRXX=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",215,0)
 ....S PSSDCR4="" F  S PSSDCR4=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4)) Q:PSSDCR4=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",216,0)
 .....S PSSDCRF5="" F  S PSSDCRF5=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)) Q:PSSDCRF5=""!(PSSVVHQT)  D:PSSDCRF5="true"
"RTN","PSSDRDOS",217,0)
 ......S PSSDCRK1=PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)
"RTN","PSSDRDOS",218,0)
 ......W:PSSDCR3 !?22 W " "_PSSDCR4_"  " D  Q:PSSVVHQT  S PSSDCR3=1 D PAUSE Q
"RTN","PSSDRDOS",219,0)
 .......D LWRP(PSSDCRK1)
"RTN","PSSDRDOS",220,0)
 .Q:PSSVVHQT
"RTN","PSSDRDOS",221,0)
 .W !?3,"NO for Age in Days:" S PSSDCR3=0 D
"RTN","PSSDRDOS",222,0)
 ..S PSSDCRJ6="" F  S PSSDCRJ6=$O(PSSDCRJ5(PSSDCRJ6)) Q:PSSDCRJ6=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",223,0)
 ...S PSSDCRXX="" F  S PSSDCRXX=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX)) Q:PSSDCRXX=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",224,0)
 ....S PSSDCR4="" F  S PSSDCR4=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4)) Q:PSSDCR4=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",225,0)
 .....S PSSDCRF5="" F  S PSSDCRF5=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)) Q:PSSDCRF5=""!(PSSVVHQT)  D:PSSDCRF5="false"
"RTN","PSSDRDOS",226,0)
 ......S PSSDCRK2=PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)
"RTN","PSSDRDOS",227,0)
 ......W:PSSDCR3 !?22 W " "_PSSDCR4_"  " D  Q:PSSVVHQT  S PSSDCR3=1 D PAUSE Q
"RTN","PSSDRDOS",228,0)
 .......D LWRP(PSSDCRK2)
"RTN","PSSDRDOS",229,0)
 Q
"RTN","PSSDRDOS",230,0)
 ;
"RTN","PSSDRDOS",231,0)
 ;
"RTN","PSSDRDOS",232,0)
NGCK ;
"RTN","PSSDRDOS",233,0)
 K ^TMP($J,"PSSFDBDI")
"RTN","PSSDRDOS",234,0)
 Q
"RTN","PSSDRDOS",235,0)
 ;
"RTN","PSSDRDOS",236,0)
 ;
"RTN","PSSDRDOS",237,0)
DUP1() ;Screen out duplicates, needed if Min/max records are added back
"RTN","PSSDRDOS",238,0)
 N PSSDCRD1,PSSDCRD2,PSSDCRDF,PSSDCRD4,PSSDCRG1,PSSDCRG2
"RTN","PSSDRDOS",239,0)
 S PSSDCRDF=0
"RTN","PSSDRDOS",240,0)
 S PSSDCRD1=$P(PSSDCRN3,"^"),PSSDCRD2=$P(PSSDCR2,"^",6),PSSDCRG1=$P(PSSDCR2,"^",4),PSSDCRG2=PSSDCRD2_"^"_PSSDCRG1
"RTN","PSSDRDOS",241,0)
 S PSSDCRD4="" F  S PSSDCRD4=$O(PSSDCRBS(PSSDCRD4)) Q:PSSDCRD4=""!(PSSDCRDF)  D
"RTN","PSSDRDOS",242,0)
 .I $G(PSSDCRBS(PSSDCRD4,PSSDCRCO,PSSDCRD1))=PSSDCRG2 S PSSDCRDF=1
"RTN","PSSDRDOS",243,0)
 Q PSSDCRDF
"RTN","PSSDRDOS",244,0)
 ;
"RTN","PSSDRDOS",245,0)
 ;
"RTN","PSSDRDOS",246,0)
DUP2() ;
"RTN","PSSDRDOS",247,0)
 N PSSDCRD5,PSSDCRD6,PSSDCRDG,PSSDCRD7,PSSDCRG4,PSSDCRG5
"RTN","PSSDRDOS",248,0)
 S PSSDCRDG=0
"RTN","PSSDRDOS",249,0)
 S PSSDCRD5=$P(PSSDCRN3,"^",2),PSSDCRD6=$P(PSSDCR2,"^",6),PSSDCRG4=$P(PSSDCR2,"^",4),PSSDCRG5=PSSDCRD6_"^"_PSSDCRG4
"RTN","PSSDRDOS",250,0)
 S PSSDCRD7="" F  S PSSDCRD7=$O(PSSDCRWT(PSSDCRD7)) Q:PSSDCRD7=""!(PSSDCRDG)  D
"RTN","PSSDRDOS",251,0)
 .I $G(PSSDCRWT(PSSDCRD7,PSSDCRCO,PSSDCRD5))=PSSDCRG5 S PSSDCRDG=1
"RTN","PSSDRDOS",252,0)
 Q PSSDCRDG
"RTN","PSSDRDOS",253,0)
 ;
"RTN","PSSDRDOS",254,0)
 ;
"RTN","PSSDRDOS",255,0)
LWRP(PSSDCRL1) ;Print last line, check for wrapping
"RTN","PSSDRDOS",256,0)
 N PSSDCRL2,PSSDCRL3,PSSDCRL4,PSSDCRL5
"RTN","PSSDRDOS",257,0)
 S PSSDCRL2=$S($P(PSSDCRL1,"^")'="":$L($P(PSSDCRL1,"^")),1:13),PSSDCRL3=$S($P(PSSDCRL1,"^",2)'="":$L($P(PSSDCRL1,"^",2)),1:12) I $P(PSSDCRL1,"^",2)="MAINTENANCE" S PSSDCRL3=PSSDCRL3+5
"RTN","PSSDRDOS",258,0)
 S PSSDCRL4=PSSDCRL2+PSSDCRL3+$L(PSSDCR4)
"RTN","PSSDRDOS",259,0)
 W "("_$S($P(PSSDCRL1,"^",2)="":"No Dose Type",1:$P(PSSDCRL1,"^",2))_$S($P(PSSDCRL1,"^",2)="MAINTENANCE":" DOSE, ",1:", ")
"RTN","PSSDRDOS",260,0)
 I PSSDCRL4<51 W $S($P(PSSDCRL1,"^")="":"No Dose Route)",1:$P(PSSDCRL1,"^")_")") Q
"RTN","PSSDRDOS",261,0)
 D PAUSE Q:PSSVVHQT  S PSSDCRL5=$L(PSSDCR4)+26 W !?PSSDCRL5,$S($P(PSSDCRL1,"^")="":"No Dose Route)",1:$P(PSSDCRL1,"^")_")")
"RTN","PSSDRDOS",262,0)
 Q
"RTN","PSSDSAPA")
0^3^B85990165
"RTN","PSSDSAPA",1,0)
PSSDSAPA ;BIR/RTR,TMK-Dose Check APIs routine (continued) ;27 Oct 2009  12:22 PM
"RTN","PSSDSAPA",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**151,160,173**;9/30/97;Build 9
"RTN","PSSDSAPA",3,0)
 ;
"RTN","PSSDSAPA",4,0)
IV(PSSADFOI) ;Return Additive Frequency default to CPRS, Forum DBIA 5504 ; 27 Oct 2009  12:16 PM
"RTN","PSSDSAPA",5,0)
 ;PSSADFOI = File 50.7 Internal Entry Number
"RTN","PSSDSAPA",6,0)
 N PSSADFRS,PSSADFIN,PSSADFLP,PSSADFXX,PSSADFHD,PSSADFLD,PSSADFNN,PSSADFER,PSSADFCT
"RTN","PSSDSAPA",7,0)
 S PSSADFRS="",(PSSADFXX,PSSADFCT)=0
"RTN","PSSDSAPA",8,0)
 I '$G(PSSADFOI) Q PSSADFRS
"RTN","PSSDSAPA",9,0)
 F PSSADFLP=0:0 S PSSADFLP=$O(^PS(52.6,"AOI",PSSADFOI,PSSADFLP)) Q:'PSSADFLP!(PSSADFXX)  D
"RTN","PSSDSAPA",10,0)
 . ; Get INACTIVATION DATE and ADDITIVE FREQUENCY
"RTN","PSSDSAPA",11,0)
 .S PSSADFNN=PSSADFLP_"," K PSSADFER,PSSADFLD
"RTN","PSSDSAPA",12,0)
 .D GETS^DIQ(52.6,PSSADFNN,"12;18","I","PSSADFLD","PSSADFER")
"RTN","PSSDSAPA",13,0)
 .I $G(PSSADFER("DIERR")) Q  ; Error(s) returned
"RTN","PSSDSAPA",14,0)
 .S PSSADFIN=$G(PSSADFLD(52.6,PSSADFNN,12,"I")),PSSADFHD=$G(PSSADFLD(52.6,PSSADFNN,18,"I"))
"RTN","PSSDSAPA",15,0)
 . ; Only consider if not inactive as of today
"RTN","PSSDSAPA",16,0)
 .I PSSADFIN,PSSADFIN'>DT Q
"RTN","PSSDSAPA",17,0)
 . ; If no frequency returned, set error flag, look no further
"RTN","PSSDSAPA",18,0)
 .I PSSADFHD="" S PSSADFXX=1 Q
"RTN","PSSDSAPA",19,0)
 . ; Save first non-null value found
"RTN","PSSDSAPA",20,0)
 .I 'PSSADFCT S PSSADFRS=PSSADFHD,PSSADFCT=1 Q
"RTN","PSSDSAPA",21,0)
 . ; Second or later match found and isn't the same value
"RTN","PSSDSAPA",22,0)
 . ;  as first match value, set error flag, quit
"RTN","PSSDSAPA",23,0)
 .I PSSADFHD'=PSSADFRS S PSSADFXX=1
"RTN","PSSDSAPA",24,0)
 ; If error found, return null
"RTN","PSSDSAPA",25,0)
 I PSSADFXX S PSSADFRS=""
"RTN","PSSDSAPA",26,0)
 Q PSSADFRS
"RTN","PSSDSAPA",27,0)
 ;
"RTN","PSSDSAPA",28,0)
 ;
"RTN","PSSDSAPA",29,0)
RESET ;Reset array to set flag to show General Dosing Guideline for last unique combination of Drug and Route
"RTN","PSSDSAPA",30,0)
 N PSSDBCD1,PSSDBCD2,PSSDBCD3,PSSDBCD4
"RTN","PSSDSAPA",31,0)
 S PSSDBCD1="" F  S PSSDBCD1=$O(PSSDBCDA(PSSDBCD1)) Q:PSSDBCD1=""  D
"RTN","PSSDSAPA",32,0)
 .S PSSDBCD2="" F  S PSSDBCD2=$O(PSSDBCDA(PSSDBCD1,PSSDBCD2)) Q:PSSDBCD2=""  D
"RTN","PSSDSAPA",33,0)
 ..S PSSDBCD3=PSSDBCDA(PSSDBCD1,PSSDBCD2)
"RTN","PSSDSAPA",34,0)
 ..I PSSDBCD3'="" S PSSDBCDP(PSSDBRLS,PSSDBCD3)=""
"RTN","PSSDSAPA",35,0)
 Q
"RTN","PSSDSAPA",36,0)
 ;
"RTN","PSSDSAPA",37,0)
 ;
"RTN","PSSDSAPA",38,0)
SGEN ;General Dosing Guidelines for last dosing sequence of a complex order when there is an error
"RTN","PSSDSAPA",39,0)
 N PSSDBCD5,PSSDBCD6,PSSDBCD7,PSSDBCD8
"RTN","PSSDSAPA",40,0)
 S PSSDBCD6=1
"RTN","PSSDSAPA",41,0)
 S PSSDBCD5="" F  S PSSDBCD5=$O(PSSDBCDP(PSSDWE5,PSSDBCD5)) Q:PSSDBCD5=""  D SGENA
"RTN","PSSDSAPA",42,0)
 Q
"RTN","PSSDSAPA",43,0)
 ;
"RTN","PSSDSAPA",44,0)
 ;
"RTN","PSSDSAPA",45,0)
SGENA ;
"RTN","PSSDSAPA",46,0)
 S PSSDBCD7=$P($G(PSSDBCAR(PSSDBCD5)),"^",2),PSSDBCD8=$P($G(PSSDBCAR(PSSDBCD5)),"^",3)
"RTN","PSSDSAPA",47,0)
 I PSSDBCD7=""!(PSSDBCD8="") Q 
"RTN","PSSDSAPA",48,0)
 I $G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDBCD5,PSSDBCD7,"GENERAL","MESSAGE",PSSDBCD8))'="" D  S PSSDBCD6=PSSDBCD6+1 Q 
"RTN","PSSDSAPA",49,0)
 .I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWE5,PSSDBCD7,"3_GENERAL","MESSAGE",PSSDBCD8,PSSDBCD6)=^TMP($J,PSSDBASE,"OUT","DOSE",PSSDBCD5,PSSDBCD7,"GENERAL","MESSAGE",PSSDBCD8)
"RTN","PSSDSAPA",50,0)
 .I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"MESSAGE","3_GENERAL",PSSDBCD8,PSSDBCD6)=^TMP($J,PSSDBASE,"OUT","DOSE",PSSDBCD5,PSSDBCD7,"GENERAL","MESSAGE",PSSDBCD8)
"RTN","PSSDSAPA",51,0)
 I PSSDBASA D
"RTN","PSSDSAPA",52,0)
 .S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWE5,PSSDBCD7,"3_GENERAL","MESSAGE",PSSDBCD8,PSSDBCD6)="General dosing range for "_$P($G(PSSDBCAR(PSSDBCD5)),"^",2)_" ("_$P($G(PSSDBCAR(PSSDBCD5)),"^",9)_") could not be obtained from vendor database."
"RTN","PSSDSAPA",53,0)
 I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"MESSAGE","3_GENERAL",PSSDBCD8,PSSDBCD6)="General dosing range for "_$P($G(PSSDBCAR(PSSDBCD5)),"^",2)_" ("_$P($G(PSSDBCAR(PSSDBCD5)),"^",9)_") could not be obtained from vendor database."
"RTN","PSSDSAPA",54,0)
 S PSSDBCD6=PSSDBCD6+1
"RTN","PSSDSAPA",55,0)
 Q
"RTN","PSSDSAPA",56,0)
 ;
"RTN","PSSDSAPA",57,0)
 ;
"RTN","PSSDSAPA",58,0)
REM ;Remove all Output globals except Single Dose Warning
"RTN","PSSDSAPA",59,0)
 N PSSRMV1,PSSRMV2,PSSRMV3,PSSRMV4,PSSRMV5,PSSRMV6,PSSRMV7,PSSRMV8,PSSRMV9
"RTN","PSSDSAPA",60,0)
 I PSSDBASA D
"RTN","PSSDSAPA",61,0)
 .K ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE")
"RTN","PSSDSAPA",62,0)
 .S PSSRMV5="" F  S PSSRMV5=$O(^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSRMV5)) Q:PSSRMV5=""  D
"RTN","PSSDSAPA",63,0)
 ..I $P(PSSDBCAR(PSSRMV5),"^",14) K ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSRMV5) Q
"RTN","PSSDSAPA",64,0)
 ..S PSSRMV6="" F  S PSSRMV6=$O(^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSRMV5,PSSRMV6)) Q:PSSRMV6=""  D
"RTN","PSSDSAPA",65,0)
 ...I $G(^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSRMV5,PSSRMV6,"WARN"))="Warning",'$P(PSSRMV5,";",5) K ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSRMV5,PSSRMV6,"WARN") S $P(PSSDBCAR(PSSRMV5),"^",13)="" Q
"RTN","PSSDSAPA",66,0)
 ...K ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSRMV5,PSSRMV6,"MSG")
"RTN","PSSDSAPA",67,0)
 ...K ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSRMV5,PSSRMV6,"TEXT")
"RTN","PSSDSAPA",68,0)
 .S PSSRMV3="" F  S PSSRMV3=$O(^TMP($J,PSSDBASF,"OUT","DOSE",PSSRMV3)) Q:PSSRMV3=""  D:PSSRMV3'="ERROR"
"RTN","PSSDSAPA",69,0)
 ..I $P(PSSDBCAR(PSSRMV3),"^",14) K ^TMP($J,PSSDBASF,"OUT","DOSE",PSSRMV3) Q
"RTN","PSSDSAPA",70,0)
 ..S PSSRMV4="" F  S PSSRMV4=$O(^TMP($J,PSSDBASF,"OUT","DOSE",PSSRMV3,PSSRMV4)) Q:PSSRMV4=""  D
"RTN","PSSDSAPA",71,0)
 ...K ^TMP($J,PSSDBASF,"OUT","DOSE",PSSRMV3,PSSRMV4,"2_RANGE")
"RTN","PSSDSAPA",72,0)
 ...K ^TMP($J,PSSDBASF,"OUT","DOSE",PSSRMV3,PSSRMV4,"3_GENERAL")
"RTN","PSSDSAPA",73,0)
 ; 
"RTN","PSSDSAPA",74,0)
 I PSSDBASB D
"RTN","PSSDSAPA",75,0)
 .S PSSRMV1="" F  S PSSRMV1=$O(^TMP($J,PSSDBASG,"OUT",PSSRMV1)) Q:PSSRMV1=""  D
"RTN","PSSDSAPA",76,0)
 ..S PSSRMV2="" F  S PSSRMV2=$O(^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2)) Q:PSSRMV2=""  D
"RTN","PSSDSAPA",77,0)
 ...I $P(PSSDBCAR(PSSRMV2),"^",14) K ^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2) Q
"RTN","PSSDSAPA",78,0)
 ...;K ^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"EXCEPTIONS") ;2.0 change to show specific exceptions
"RTN","PSSDSAPA",79,0)
 ...;K ^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"ERROR")
"RTN","PSSDSAPA",80,0)
 ...S PSSRMV7="" F  S PSSRMV7=$O(^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"ERROR",PSSRMV7)) Q:PSSRMV7=""  D
"RTN","PSSDSAPA",81,0)
 ....I $G(^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"ERROR",PSSRMV7,"WARN"))="Warning",'$P(PSSRMV2,";",5) K ^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"ERROR",PSSRMV7,"WARN") S $P(PSSDBCAR(PSSRMV2),"^",13)="" Q
"RTN","PSSDSAPA",82,0)
 ....Q  ;2.0 Change to now show specific errors
"RTN","PSSDSAPA",83,0)
 ....K ^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"ERROR",PSSRMV7,"MSG")
"RTN","PSSDSAPA",84,0)
 ....K ^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"ERROR",PSSRMV7,"TEXT")
"RTN","PSSDSAPA",85,0)
 ...K ^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"MESSAGE","2_RANGE")
"RTN","PSSDSAPA",86,0)
 ...K ^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"MESSAGE","3_GENERAL")
"RTN","PSSDSAPA",87,0)
 ;
"RTN","PSSDSAPA",88,0)
 S PSSRMV8="" F  S PSSRMV8=$O(PSSDBCAR(PSSRMV8)) Q:PSSRMV8=""  I $P(PSSDBCAR(PSSRMV8),"^",13),$D(PSSDSDPL(PSSRMV8)),'$P(PSSDBCAR(PSSRMV8),"^",14) D
"RTN","PSSDSAPA",89,0)
 .I $G(PSSENHK(PSSRMV8)),$G(PSSENHKZ(PSSRMV8)) Q
"RTN","PSSDSAPA",90,0)
 .I PSSDBASA D
"RTN","PSSDSAPA",91,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSRMV8,1)="Maximum Single Dose Check could not be done for Drug: "_$P(PSSDBCAR(PSSRMV8),"^",2)_$S($P(PSSDBCAR(PSSRMV8),"^",16):" (Dose="_$G(PSSDSDPL(PSSRMV8))_")",1:"")
"RTN","PSSDSAPA",92,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSRMV8,1)=^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSRMV8,1)_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSAPA",93,0)
 .I PSSDBASB,$P(PSSDBCAR(PSSRMV8),"^",17) D
"RTN","PSSDSAPA",94,0)
 ..S ^TMP($J,PSSDBASG,"OUT",$P(PSSRMV8,";",4),PSSRMV8,"EXCEPTIONS",1)="Maximum Single Dose Check could not be performed for Drug: "_$P(PSSDBCAR(PSSRMV8),"^",2)_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSAPA",95,0)
 Q
"RTN","PSSDSAPA",96,0)
 ;
"RTN","PSSDSAPA",97,0)
 ;
"RTN","PSSDSAPA",98,0)
SQX(PSSQBSS) ;returns Dosage check exclusion information based on Schedule
"RTN","PSSDSAPA",99,0)
 N PSSQBA1,PSSQBA2,PSSQBA3,PSSQBA4,PSSQBA5,PSSQBA6,PSSQBARS,PSSQBFLG,PSSQBSTM,PSSQBSTP
"RTN","PSSDSAPA",100,0)
 S PSSQBARS="",PSSQBFLG=0
"RTN","PSSDSAPA",101,0)
 I $G(PSSQBSS)="" Q PSSQBARS
"RTN","PSSDSAPA",102,0)
 S PSSQBSTM=PSSQBSS D SQXLP I PSSQBFLG Q PSSQBARS
"RTN","PSSDSAPA",103,0)
 S PSSQBA3=$L(PSSQBSS) I PSSQBA3>4 S PSSQBA4=$E(PSSQBSS,(PSSQBA3-3),PSSQBA3) S PSSQBA4=$$UP^XLFSTR(PSSQBA4) I PSSQBA4=" PRN" S PSSQBSTM=$E(PSSQBSS,1,(PSSQBA3-4)) D SQXLP I PSSQBFLG Q PSSQBARS
"RTN","PSSDSAPA",104,0)
 I PSSQBSS'["@" Q PSSQBARS
"RTN","PSSDSAPA",105,0)
 S PSSQBA5=$L(PSSQBSS),PSSQBA6=$F(PSSQBSS,"@") I PSSQBA6>PSSQBA5 Q PSSQBARS
"RTN","PSSDSAPA",106,0)
 S (PSSQBSTM,PSSQBSTP)=$E(PSSQBSS,PSSQBA6,PSSQBA5) D SQXLP I PSSQBFLG Q PSSQBARS
"RTN","PSSDSAPA",107,0)
 S PSSQBA3=$L(PSSQBSTP) I PSSQBA3>4 S PSSQBA4=$E(PSSQBSTP,(PSSQBA3-3),PSSQBA3) S PSSQBA4=$$UP^XLFSTR(PSSQBA4) I PSSQBA4=" PRN" S PSSQBSTM=$E(PSSQBSTP,1,(PSSQBA3-4)) D SQXLP
"RTN","PSSDSAPA",108,0)
 Q PSSQBARS
"RTN","PSSDSAPA",109,0)
 ;
"RTN","PSSDSAPA",110,0)
 ;
"RTN","PSSDSAPA",111,0)
SQXLP ;
"RTN","PSSDSAPA",112,0)
 F PSSQBA1=0:0 S PSSQBA1=$O(^PS(51.1,"APPSJ",PSSQBSTM,PSSQBA1)) Q:'PSSQBA1!(PSSQBFLG)  D
"RTN","PSSDSAPA",113,0)
 .S PSSQBA2=$G(^PS(51.1,PSSQBA1,0)) I PSSQBA2="" Q
"RTN","PSSDSAPA",114,0)
 .S PSSQBARS=$P(PSSQBA2,"^",9)_"^"_$P(PSSQBA2,"^",10),PSSQBFLG=1
"RTN","PSSDSAPA",115,0)
 Q
"RTN","PSSDSAPA",116,0)
 ;
"RTN","PSSDSAPA",117,0)
 ;
"RTN","PSSDSAPA",118,0)
SXCL ;Set exclusion fields in PSSDBCAR array
"RTN","PSSDSAPA",119,0)
 N PSSQBGR,PSSQBGT
"RTN","PSSDSAPA",120,0)
 S PSSQBGR=$G(PSSDBFRC(PSSDBKLP,"SCHEDULE")) I PSSQBGR="" Q
"RTN","PSSDSAPA",121,0)
 S PSSQBGT=$$SQX(PSSQBGR)
"RTN","PSSDSAPA",122,0)
 S:$P(PSSQBGT,"^") $P(PSSDBCAR(PSSDBKLP),"^",14)=1
"RTN","PSSDSAPA",123,0)
 S:$P(PSSQBGT,"^",2) $P(PSSDBCAR(PSSDBKLP),"^",15)=1
"RTN","PSSDSAPA",124,0)
 Q
"RTN","PSSDSAPA",125,0)
 ;
"RTN","PSSDSAPA",126,0)
 ;
"RTN","PSSDSAPA",127,0)
NOTS ;Set flag for not screened
"RTN","PSSDSAPA",128,0)
 N PSSNSCRE,PSSNSCRU
"RTN","PSSDSAPA",129,0)
 S PSSNSCRE=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"SEV"))
"RTN","PSSDSAPA",130,0)
 S PSSNSCRU=$$UP^XLFSTR(PSSNSCRE)
"RTN","PSSDSAPA",131,0)
 I PSSNSCRU["NOTSCREENED" S $P(PSSDBCAR(PSSDWLP),"^",13)=1
"RTN","PSSDSAPA",132,0)
 Q
"RTN","PSSDSAPA",133,0)
 ;
"RTN","PSSDSAPA",134,0)
 ;
"RTN","PSSDSAPA",135,0)
SOL(PSSLGTOI) ;
"RTN","PSSDSAPA",136,0)
 ;Return 1 for premix solution
"RTN","PSSDSAPA",137,0)
 ;Return 0 for solution not marked for premix
"RTN","PSSDSAPA",138,0)
 ;The second piece is 0 if there is no active solution found
"RTN","PSSDSAPA",139,0)
 ;If no active solution found and at least 1 premix then consider it's a premix
"RTN","PSSDSAPA",140,0)
 NEW PSSLGT1,PSSLGT2,PSSLGT3,PSSSOL,PSSPRE
"RTN","PSSDSAPA",141,0)
 I '+$G(PSSLGTOI) Q 0_U_0
"RTN","PSSDSAPA",142,0)
 S PSSINADT=$P($G(^PS(50.7,PSSLGTOI,0)),U,4)
"RTN","PSSDSAPA",143,0)
 I PSSINADT,(PSSINADT'>DT) Q 0_U_0
"RTN","PSSDSAPA",144,0)
 S PSSLGT2=0,PSSSOL=0,PSSPRE=0
"RTN","PSSDSAPA",145,0)
 F PSSLGT1=0:0 S PSSLGT1=$O(^PS(52.7,"AOI",PSSLGTOI,PSSLGT1)) Q:'PSSLGT1!(PSSLGT2)  D
"RTN","PSSDSAPA",146,0)
 .I $P($G(^PS(52.7,PSSLGT1,0)),"^",14)=1 S PSSPRE=1
"RTN","PSSDSAPA",147,0)
 .S PSSLGT3=$P($G(^PS(52.7,PSSLGT1,"I")),"^") I PSSLGT3,(PSSLGT3'>DT) Q
"RTN","PSSDSAPA",148,0)
 .S:PSSPRE PSSLGT2=1
"RTN","PSSDSAPA",149,0)
 .S PSSSOL=1
"RTN","PSSDSAPA",150,0)
 I 'PSSSOL,PSSPRE Q PSSPRE_U_PSSSOL
"RTN","PSSDSAPA",151,0)
 Q PSSLGT2_U_PSSSOL
"RTN","PSSDSAPA",152,0)
 ;
"RTN","PSSDSAPA",153,0)
 ;
"RTN","PSSDSAPA",154,0)
IPM(PSSLGTOI) ;
"RTN","PSSDSAPA",155,0)
 ;Return 1 if it's a UD, additive, or a premix solution
"RTN","PSSDSAPA",156,0)
 NEW PSSINADT,PSSIEN,PSSUD,PSSAD,PSSSOL
"RTN","PSSDSAPA",157,0)
 I '+$G(PSSLGTOI) Q 0
"RTN","PSSDSAPA",158,0)
 S (PSSUD,PSSAD,PSSSOL)=0
"RTN","PSSDSAPA",159,0)
 S PSSINADT=$P($G(^PS(50.7,PSSLGTOI,0)),U,4)
"RTN","PSSDSAPA",160,0)
 I PSSINADT,(PSSINADT'>DT) Q 0
"RTN","PSSDSAPA",161,0)
 F PSSIEN=0:0 S PSSIEN=$O(^PSDRUG("ASP",PSSLGTOI,PSSIEN)) Q:'PSSIEN!PSSUD  D
"RTN","PSSDSAPA",162,0)
 . S PSSINADT=$P($G(^PSDRUG(PSSIEN,"I")),U)
"RTN","PSSDSAPA",163,0)
 . I PSSINADT,(PSSINADT'>DT) Q
"RTN","PSSDSAPA",164,0)
 . I $P($G(^PSDRUG(PSSIEN,2)),U,3)["U" S PSSUD=1 Q
"RTN","PSSDSAPA",165,0)
 I PSSUD Q 1
"RTN","PSSDSAPA",166,0)
 F PSSIEN=0:0 S PSSIEN=$O(^PS(52.6,"AOI",PSSLGTOI,PSSIEN)) Q:'PSSIEN!PSSAD  D
"RTN","PSSDSAPA",167,0)
 . S PSSAD=1 Q
"RTN","PSSDSAPA",168,0)
 I PSSAD Q 1
"RTN","PSSDSAPA",169,0)
 S PSSSOL=$$SOL(PSSLGTOI)
"RTN","PSSDSAPA",170,0)
 ;If the is an active solution, $P(PSSSOL,U) is 1 if it's marked for premix
"RTN","PSSDSAPA",171,0)
 Q $P(PSSSOL,U)
"RTN","PSSDSAPA",172,0)
 ;
"RTN","PSSDSAPA",173,0)
 ;
"RTN","PSSDSAPA",174,0)
ONT ;Look for one to one relationship from Dispense Drug to Orderable Item for application
"RTN","PSSDSAPA",175,0)
 N PSSOTOD,PSSOTOI,PSSOTOL,PSSOTOF,PSSOTOA,PSSOTON,PSSOTOB1,PSSOTOB2,PSSOTOB3,PSSOTOB4
"RTN","PSSDSAPA",176,0)
 S PSSOTOF=0
"RTN","PSSDSAPA",177,0)
 S PSSOTOI=$P($G(^PSDRUG(+PSSDBIFG,2)),"^") I 'PSSOTOI Q
"RTN","PSSDSAPA",178,0)
 F PSSOTOL=0:0 S PSSOTOL=$O(^PSDRUG("ASP",PSSOTOI,PSSOTOL)) Q:'PSSOTOL!(PSSOTOF)  D:PSSOTOL'=+PSSDBIFG
"RTN","PSSDSAPA",179,0)
 .I $$EXMT^PSSDSAPI(PSSOTOL) Q
"RTN","PSSDSAPA",180,0)
 .S PSSOTOD=$P($G(^PSDRUG(PSSOTOL,"I")),"^") I PSSOTOD,PSSOTOD'>DT Q
"RTN","PSSDSAPA",181,0)
 .S PSSOTOA=$P($G(^PSDRUG(PSSOTOL,2)),"^",3),PSSOTOA=$TR(PSSOTOA,"U","I")
"RTN","PSSDSAPA",182,0)
 .I PSSOTOA'[$G(PSSDBFDB("PACKAGE")) Q
"RTN","PSSDSAPA",183,0)
 .S PSSOTOB2=$G(^PSDRUG(PSSOTOL,"ND")),PSSOTOB1=$P(PSSOTOB2,"^"),PSSOTOB3=$P(PSSOTOB2,"^",3) I 'PSSOTOB1!('PSSOTOB3) Q
"RTN","PSSDSAPA",184,0)
 .S PSSOTOB4=$$PROD0^PSNAPIS(PSSOTOB1,PSSOTOB3) I '$P(PSSOTOB4,"^",7) Q
"RTN","PSSDSAPA",185,0)
 .S PSSOTOF=1
"RTN","PSSDSAPA",186,0)
 Q:PSSOTOF
"RTN","PSSDSAPA",187,0)
 S PSSDBIFL=0,PSSOTON=$P($G(^PSDRUG(+PSSDBIFG,0)),"^")
"RTN","PSSDSAPA",188,0)
 S PSSDBFDB(PSSDBLP,"DRUG_NM")=$S(PSSOTON'="":PSSOTON,1:"UNKNOWN DRUG NAME")
"RTN","PSSDSAPA",189,0)
 S PSSDBFDB(PSSDBLP,"DRUG_IEN")=+PSSDBIFG
"RTN","PSSDSAPA",190,0)
 Q
"RTN","PSSDSAPA",191,0)
 ;
"RTN","PSSDSAPA",192,0)
 ;
"RTN","PSSDSAPA",193,0)
TLS(PSSTLS1,PSSTLS2) ;
"RTN","PSSDSAPA",194,0)
 N PSSTLS5,PSSTLS6,PSSTLS7
"RTN","PSSDSAPA",195,0)
 S PSSTLS5=$$DFSU^PSNAPIS(PSSTLS1,PSSTLS2)
"RTN","PSSDSAPA",196,0)
 S PSSTLS6=$P(PSSTLS5,"^",4),PSSTLS7=$P(PSSTLS5,"^",5)
"RTN","PSSDSAPA",197,0)
 I 'PSSTLS7!(PSSTLS6="") Q 1
"RTN","PSSDSAPA",198,0)
 I '$D(^PS(50.607,PSSTLS7,0)) Q 1
"RTN","PSSDSAPA",199,0)
 I PSSTLS6'?.N&(PSSTLS6'?.N1".".N) Q 1
"RTN","PSSDSAPA",200,0)
 Q 0
"RTN","PSSDSAPD")
0^2^B181014294
"RTN","PSSDSAPD",1,0)
PSSDSAPD ;BIR/RTR-Main Dose Check API ;09/16/08
"RTN","PSSDSAPD",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,160,173**;9/30/97;Build 9
"RTN","PSSDSAPD",3,0)
 ;
"RTN","PSSDSAPD",4,0)
 ;Dose Check API
"RTN","PSSDSAPD",5,0)
 ;
"RTN","PSSDSAPD",6,0)
 ;Input
"RTN","PSSDSAPD",7,0)
 ;PSSDBASE = Name of subscript
"RTN","PSSDSAPD",8,0)
 ;PSSDBDFN = Patient Internal Entry Number
"RTN","PSSDSAPD",9,0)
 ;PSSDBDS  = Data to use to build actual Input data, for pieces not sent in PSSDBFDB array
"RTN","PSSDSAPD",10,0)
 ;PSSDBFDB = Array where if the node exists, just set that data (even if null) directly into the corresponding API piece
"RTN","PSSDSAPD",11,0)
 ;
"RTN","PSSDSAPD",12,0)
DOSE(PSSDBASX,PSSDBDFN,PSSDBDS,PSSDBFDB) ;
"RTN","PSSDSAPD",13,0)
 I $G(PSSDBASX(1))="" Q
"RTN","PSSDSAPD",14,0)
 N PSSDBASE,PSSDBASF,PSSDBASG,PSSDBASA,PSSDBASB S PSSDBASE=PSSDBASX(1),PSSDBASF=$G(PSSDBASX(2)),PSSDBASG=$G(PSSDBASX(3)) K ^TMP($J,PSSDBASE) K ^TMP($J,"PSSDOSGL") K ^TMP($J,"PSSCNX")
"RTN","PSSDSAPD",15,0)
 S PSSDBASA=0 I $G(PSSDBASF)'="" K ^TMP($J,PSSDBASF) S PSSDBASA=1
"RTN","PSSDSAPD",16,0)
 S PSSDBASB=0 I $G(PSSDBASG)'="" K ^TMP($J,PSSDBASG) S PSSDBASB=1
"RTN","PSSDSAPD",17,0)
 S ^TMP($J,PSSDBASE,"IN","PING")="" D IN^PSSHRQ2(PSSDBASE)
"RTN","PSSDSAPD",18,0)
 I $P($G(^TMP($J,PSSDBASE,"OUT",0)),"^")=-1 D DOWN^PSSDSAPK Q
"RTN","PSSDSAPD",19,0)
 K ^TMP($J,PSSDBASE)
"RTN","PSSDSAPD",20,0)
 N PSSDBLP,PSSDBND1,PSSDBND3,PSSDBAR,PSSDBFST,PSSDBFLG,PSSDBCOT,PSSDBCAR,PSSDBFRC,PSSDBFRB,PSSDBIFL,PSSDBIFG,PSSDBCAX,PSSDBCAZ,PSSDBFTX,PSSDBADJ,PSSDBCDP,PSSDSDPL,PSSDSWHE,PSSENHK,PSSENHKZ,PSSDSIVF,PSSENO
"RTN","PSSDSAPD",21,0)
 I +$G(PSSDBDFN)'>0 Q
"RTN","PSSDSAPD",22,0)
 S PSSDBFLG=0 S PSSDSWHE=$S($E($G(PSSDBASE),1,2)="OR":1,1:0)
"RTN","PSSDSAPD",23,0)
 F PSSDBLP=0:0 S PSSDBLP=$O(PSSDBFDB(PSSDBLP)) Q:'PSSDBLP  D
"RTN","PSSDSAPD",24,0)
 .K PSSDBAR,PSSDBND1,PSSDBND3 S (PSSDBIFL,PSSDBIFG,PSSDSIVF,PSSENO)=0
"RTN","PSSDSAPD",25,0)
 .I $G(PSSDBFDB(PSSDBLP,"RX_NUM"))="" Q
"RTN","PSSDSAPD",26,0)
 .I $G(PSSDBFDB(PSSDBLP,"DRUG_NM"))="" Q
"RTN","PSSDSAPD",27,0)
 .S PSSDBFDB("OI")=$S($G(PSSDBFDB(PSSDBLP,"OI")):$G(PSSDBFDB(PSSDBLP,"OI")),1:$G(PSSDBFDB("OI"))) I $G(PSSDBFDB(PSSDBLP,"DRUG_IEN"))'>0,$G(PSSDBFDB("OI"))'>0 Q
"RTN","PSSDSAPD",28,0)
 .I $G(PSSDBFDB(PSSDBLP,"DRUG_IEN"))>0,$$EXMT^PSSDSAPI($G(PSSDBFDB(PSSDBLP,"DRUG_IEN"))) Q
"RTN","PSSDSAPD",29,0)
 .D INERR^PSSDSAPM Q:PSSENO  I $G(PSSDBFDB(PSSDBLP,"DRUG_IEN"))'>0 D FDRUG^PSSDSAPM I PSSDBIFG D ONT^PSSDSAPA
"RTN","PSSDSAPD",30,0)
 .I PSSDBIFL,'PSSDBIFG D NXDRUG^PSSDSAPM Q
"RTN","PSSDSAPD",31,0)
 .D NDINFO
"RTN","PSSDSAPD",32,0)
 .I $G(PSSDBND1),$G(PSSDBND3) D
"RTN","PSSDSAPD",33,0)
 ..S PSSDBAR("GCN")=$P($$PROD0^PSNAPIS(PSSDBND1,PSSDBND3),"^",7)
"RTN","PSSDSAPD",34,0)
 ..S PSSDBAR("VUID")=$$GETVUID^XTID(50.68,,+PSSDBND3_",")
"RTN","PSSDSAPD",35,0)
 .S PSSDBAR("NAME")=$G(PSSDBFDB(PSSDBLP,"DRUG_NM"))
"RTN","PSSDSAPD",36,0)
 .D AMT I $G(PSSDBAR("AMN"))'="",$L(PSSDBAR("AMN"))>1,$E(PSSDBAR("AMN"),1)="0" S PSSDBAR("AMN")=$E(PSSDBAR("AMN"),2,$L(PSSDBAR("AMN")))
"RTN","PSSDSAPD",37,0)
 .D DTYPE
"RTN","PSSDSAPD",38,0)
 .S PSSDBAR("DSE")=$S($D(PSSDBFDB(PSSDBLP,"DOSE_RATE")):$G(PSSDBFDB(PSSDBLP,"DOSE_RATE")),1:"DAY")
"RTN","PSSDSAPD",39,0)
 .D RTE
"RTN","PSSDSAPD",40,0)
 .D SCHD
"RTN","PSSDSAPD",41,0)
 .D DURR
"RTN","PSSDSAPD",42,0)
 .D DURRAT
"RTN","PSSDSAPD",43,0)
 .S PSSDBAR("SPFC")="" S:$G(PSSDBFDB(PSSDBLP,"ENH")) PSSENHK(PSSDBFDB(PSSDBLP,"RX_NUM"))=1
"RTN","PSSDSAPD",44,0)
 .S PSSDBFST=$G(PSSDBAR("GCN"))_"^"_$S($P($G(PSSDBAR("VUID")),"^")'=0:$G(PSSDBAR("VUID")),1:"")_"^"_$S('PSSDBIFL:PSSDBFDB(PSSDBLP,"DRUG_IEN"),PSSDBIFL&(PSSDBIFG):PSSDBIFG,1:"")_"^"_PSSDBAR("NAME")
"RTN","PSSDSAPD",45,0)
 .S PSSDBFLG=1
"RTN","PSSDSAPD",46,0)
 .S ^TMP($J,PSSDBASE,"IN","PROSPECTIVE",PSSDBFDB(PSSDBLP,"RX_NUM"))=PSSDBFST
"RTN","PSSDSAPD",47,0)
 .S ^TMP($J,PSSDBASE,"IN","DOSE",PSSDBFDB(PSSDBLP,"RX_NUM"))=PSSDBFST_"^"_$G(PSSDBAR("AMN"))_"^"_$G(PSSDBAR("UNIT"))_"^"_PSSDBAR("DSE")_"^"_PSSDBAR("FREQ")_"^"_PSSDBAR("DUR")_"^"_PSSDBAR("DRR")_"^"_PSSDBAR("RT")_"^"_PSSDBAR("TYPE")
"RTN","PSSDSAPD",48,0)
 .S ^TMP($J,PSSDBASE,"IN","DOSE",PSSDBFDB(PSSDBLP,"RX_NUM"))=^TMP($J,PSSDBASE,"IN","DOSE",PSSDBFDB(PSSDBLP,"RX_NUM"))_"^"_PSSDBAR("SPFC")_"^"_$$DFM^PSSDSEXC
"RTN","PSSDSAPD",49,0)
 .S PSSDBFRC(PSSDBFDB(PSSDBLP,"RX_NUM"),"CONJ")=$G(PSSDBDS(PSSDBLP,"CONJ")) S PSSDBFRC(PSSDBFDB(PSSDBLP,"RX_NUM"),"SCHEDULE")=$G(PSSDBDS(PSSDBLP,"SCHEDULE"))
"RTN","PSSDSAPD",50,0)
 .I $G(PSSDBDS(PSSDBLP,"DRATE"))'="" I PSSDBDS(PSSDBLP,"DRATE")?.N!(PSSDBDS(PSSDBLP,"DRATE")?.N1".".N) S PSSDBDS(PSSDBLP,"DRATE")=PSSDBDS(PSSDBLP,"DRATE")_"D"
"RTN","PSSDSAPD",51,0)
 .S PSSDBFRB(PSSDBFDB(PSSDBLP,"RX_NUM"),"DRATE")=$G(PSSDBDS(PSSDBLP,"DRATE")) D ADJU^PSSDSEXC
"RTN","PSSDSAPD",52,0)
 .D INFUE^PSSDSAPM
"RTN","PSSDSAPD",53,0)
 .D FRQE^PSSDSAPM
"RTN","PSSDSAPD",54,0)
 .S ^TMP($J,"PSSCNX","IN","DOSE",PSSDBLP,PSSDBFDB(PSSDBLP,"RX_NUM"))=^TMP($J,PSSDBASE,"IN","DOSE",PSSDBFDB(PSSDBLP,"RX_NUM"))
"RTN","PSSDSAPD",55,0)
 ;
"RTN","PSSDSAPD",56,0)
 ;
"RTN","PSSDSAPD",57,0)
 ;I 'PSSDBFLG Q
"RTN","PSSDSAPD",58,0)
 D COMP ;Set up complex Doses
"RTN","PSSDSAPD",59,0)
 S ^TMP($J,PSSDBASE,"IN","IEN")=PSSDBDFN
"RTN","PSSDSAPD",60,0)
 S ^TMP($J,PSSDBASE,"IN","DOSE")=""
"RTN","PSSDSAPD",61,0)
 D PAT^PSSDSAPM K ^TMP($J,"PSSCNX")
"RTN","PSSDSAPD",62,0)
 N PSSDBDGO ; Only go to interface if you have at least one Dose Sequence that needs to go
"RTN","PSSDSAPD",63,0)
 S PSSDBDGO=0 I $D(^TMP($J,PSSDBASE,"IN","EXCEPTIONS")) S PSSDBDGO=1
"RTN","PSSDSAPD",64,0)
 D ERR ;Set up PSSDBCAX error array and default data
"RTN","PSSDSAPD",65,0)
 I PSSDBDGO D:$D(PSSDBFTX) FTX^PSSDSAPK D IN^PSSHRQ2(PSSDBASE) D:$D(PSSDBFTX) FTXRS^PSSDSAPK
"RTN","PSSDSAPD",66,0)
 I PSSDBASA!(PSSDBASB) D FMT^PSSDSEXC I $P($G(^TMP($J,PSSDBASE,"OUT",0)),"^")'=-1 D ADDCT^PSSDSAPM,REM^PSSDSAPA
"RTN","PSSDSAPD",67,0)
 Q
"RTN","PSSDSAPD",68,0)
 ;
"RTN","PSSDSAPD",69,0)
 ;
"RTN","PSSDSAPD",70,0)
AMT ;Set Dose Amount and Dose Unit
"RTN","PSSDSAPD",71,0)
 D DPL^PSSDSAPK
"RTN","PSSDSAPD",72,0)
 I $D(PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"NO_DRUG")) D MLTS^PSSDSAPM Q
"RTN","PSSDSAPD",73,0)
 N PSSDBUNT,PSSDBFAL,PSSDBXP,PSSDBNOD,PSSDBNT,PSSDSXTD,PSSDBUNA,PSSDBLPD,PSSDSLCL
"RTN","PSSDSAPD",74,0)
 S (PSSDBFAL,PSSDBLPD)=0
"RTN","PSSDSAPD",75,0)
 I 'PSSDBIFL,$D(PSSDBFDB(PSSDBLP,"DOSE_AMT")),$D(PSSDBFDB(PSSDBLP,"DOSE_UNIT")) S PSSDBAR("AMN")=PSSDBFDB(PSSDBLP,"DOSE_AMT"),PSSDBAR("UNIT")=PSSDBFDB(PSSDBLP,"DOSE_UNIT") D LDZ Q
"RTN","PSSDSAPD",76,0)
 I 'PSSDBIFL,$G(PSSDBDS(PSSDBLP,"DRG_AMT")),$G(PSSDBDS(PSSDBLP,"DRG_UNIT"))'="" D
"RTN","PSSDSAPD",77,0)
 .;For Drug Units like MG/ML, take first piece of"/"
"RTN","PSSDSAPD",78,0)
 .S PSSDBUNT=$S(PSSDBDS(PSSDBLP,"DRG_UNIT")["/":$P(PSSDBDS(PSSDBLP,"DRG_UNIT"),"/"),1:PSSDBDS(PSSDBLP,"DRG_UNIT"))
"RTN","PSSDSAPD",79,0)
 .S PSSDBUNT=$$UP^XLFSTR(PSSDBUNT)
"RTN","PSSDSAPD",80,0)
 .S PSSDBUNA=$$UNIT^PSSDSAPI(PSSDBUNT)
"RTN","PSSDSAPD",81,0)
 .I PSSDBUNA'="" S PSSDBAR("AMN")=PSSDBDS(PSSDBLP,"DRG_AMT"),PSSDBAR("UNIT")=PSSDBUNA,PSSDBFAL=1 D LDZ
"RTN","PSSDSAPD",82,0)
 I PSSDBFAL Q
"RTN","PSSDSAPD",83,0)
 ;"DOSE" Node should only come from CPRS, for selected Local Possible Dosage
"RTN","PSSDSAPD",84,0)
 S PSSDSLCL=$S($G(PSSDBDS(PSSDBLP,"DOSE"))'="":$P($G(PSSDBDS(PSSDBLP,"DOSE")),"&",5),1:$G(PSSDBDS(PSSDBLP,"DO")))
"RTN","PSSDSAPD",85,0)
 I PSSDBIFL D MLT^PSSDSAPM Q
"RTN","PSSDSAPD",86,0)
 I PSSDSLCL'="" D
"RTN","PSSDSAPD",87,0)
 .F PSSDBXP=0:0 S PSSDBXP=$O(^PSDRUG(PSSDBFDB(PSSDBLP,"DRUG_IEN"),"DOS2",PSSDBXP)) Q:'PSSDBXP!(PSSDBFAL)  D
"RTN","PSSDSAPD",88,0)
 ..S PSSDBNOD=$G(^PSDRUG(PSSDBFDB(PSSDBLP,"DRUG_IEN"),"DOS2",PSSDBXP,0))
"RTN","PSSDSAPD",89,0)
 ..;ignore package of the Local Possible Dose
"RTN","PSSDSAPD",90,0)
 ..I $$MTCH^PSSDSAPK S PSSDBLPD=1 I $P(PSSDBNOD,"^",5),$P(PSSDBNOD,"^",6)'="" D
"RTN","PSSDSAPD",91,0)
 ...;XTID Screening out Inactive Dose Units
"RTN","PSSDSAPD",92,0)
 ...S PSSDSXTD=+$P(PSSDBNOD,"^",5) I PSSDSXTD,$$SCREEN^XTID(51.24,.01,PSSDSXTD_",") Q
"RTN","PSSDSAPD",93,0)
 ...S PSSDBNT=$P($G(^PS(51.24,+$P(PSSDBNOD,"^",5),0)),"^",2)
"RTN","PSSDSAPD",94,0)
 ...I PSSDBNT'="" S PSSDBAR("AMN")=$P(PSSDBNOD,"^",6),PSSDBAR("UNIT")=PSSDBNT,PSSDBFAL=1
"RTN","PSSDSAPD",95,0)
 .;Only do auto-population logic if Local Possible Dosage was not found at all in File 50
"RTN","PSSDSAPD",96,0)
 .I PSSDBFAL Q
"RTN","PSSDSAPD",97,0)
 .I PSSDBLPD D DPOP^PSSDSAPK I PSSDBFAL Q
"RTN","PSSDSAPD",98,0)
 .D ITEM^PSSDSAPK D:'PSSDBFAL NUM^PSSDSAPL
"RTN","PSSDSAPD",99,0)
 Q
"RTN","PSSDSAPD",100,0)
 ;
"RTN","PSSDSAPD",101,0)
 ;
"RTN","PSSDSAPD",102,0)
LDZ ;
"RTN","PSSDSAPD",103,0)
 I $E(PSSDBAR("AMN"))=0,$L(PSSDBAR("AMN"))>1 S PSSDBAR("AMN")=$E(PSSDBAR("AMN"),2,$L(PSSDBAR("AMN")))
"RTN","PSSDSAPD",104,0)
 Q
"RTN","PSSDSAPD",105,0)
 ;
"RTN","PSSDSAPD",106,0)
 ;
"RTN","PSSDSAPD",107,0)
RTE ;Get First DataBank Med Route
"RTN","PSSDSAPD",108,0)
 N PSSDBMRT
"RTN","PSSDSAPD",109,0)
 K PSSDBMRT
"RTN","PSSDSAPD",110,0)
 I $D(PSSDBFDB(PSSDBLP,"ROUTE")) S PSSDBAR("RT")=PSSDBFDB(PSSDBLP,"ROUTE") Q
"RTN","PSSDSAPD",111,0)
 I $G(PSSDBDS(PSSDBLP,"MR_IEN")) S PSSDBMRT=$$MRT^PSSDSAPI(PSSDBDS(PSSDBLP,"MR_IEN")) I $P(PSSDBMRT,"^",2)'="" S PSSDBAR("RT")=$P(PSSDBMRT,"^",2) Q
"RTN","PSSDSAPD",112,0)
 S PSSDBAR("RT")=""
"RTN","PSSDSAPD",113,0)
 Q
"RTN","PSSDSAPD",114,0)
 ;
"RTN","PSSDSAPD",115,0)
 ;
"RTN","PSSDSAPD",116,0)
SCHD ;
"RTN","PSSDSAPD",117,0)
 N PSSDBSCD,PSSDBSCP,PSSDBSCF,PSSDBSCG,PSSDBSCH
"RTN","PSSDSAPD",118,0)
 S PSSDBAR("FREQ")=""
"RTN","PSSDSAPD",119,0)
 ;I $D(PSSDBFDB(PSSDBLP,"FREQ")) S PSSDBAR("FREQ")=PSSDBFDB(PSSDBLP,"FREQ") Q
"RTN","PSSDSAPD",120,0)
 I PSSDBAR("TYPE")="SINGLE DOSE" S PSSDBAR("FREQ")="" Q
"RTN","PSSDSAPD",121,0)
 ;I $G(PSSDBDS(PSSDBLP,"DRATE"))'="",$$DRT(PSSDBDS(PSSDBLP,"DRATE"))<1440 S PSSDBSDR=1
"RTN","PSSDSAPD",122,0)
 S PSSDBSCD=$G(PSSDBDS(PSSDBLP,"SCHEDULE"))
"RTN","PSSDSAPD",123,0)
 I PSSDBSCD="",'$D(PSSDBFDB(PSSDBLP,"FREQ")) S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"FRQ_ERROR")="" Q
"RTN","PSSDSAPD",124,0)
 S (PSSDBSCF,PSSDBSCH)="" S PSSDBSCP=$P(PSSDBFDB(PSSDBLP,"RX_NUM"),";")
"RTN","PSSDSAPD",125,0)
 I $G(PSSDBSCD)'="" F PSSDBSCG=0:0 S PSSDBSCG=$O(^PS(51.1,"APPSJ",PSSDBSCD,PSSDBSCG)) Q:'PSSDBSCG!(PSSDBSCH)  D
"RTN","PSSDSAPD",126,0)
 .I $P($G(^PS(51.1,PSSDBSCG,0)),"^",5)="D" S PSSDBSCF="D"
"RTN","PSSDSAPD",127,0)
 .I $P($G(^PS(51.1,PSSDBSCG,0)),"^",5)="O"!($P($G(^PS(51.1,PSSDBSCG,0)),"^",5)="OC") S PSSDBSCH=1
"RTN","PSSDSAPD",128,0)
 I PSSDBSCH,'$D(PSSDBFDB(PSSDBLP,"FREQ")) S PSSDBAR("FREQ")=1 Q
"RTN","PSSDSAPD",129,0)
 I $G(PSSDBSCD)["@" S PSSDBSCF="D"
"RTN","PSSDSAPD",130,0)
 I $G(PSSDBSCD)'="" S PSSDBSCP=$S(PSSDBSCP="I":"I",1:"O") S PSSDBAR("FREQZZ")=$$FRQ^PSSDSAPI(PSSDBSCD,PSSDBSCF,PSSDBSCP,$G(PSSDBDS(PSSDBLP,"DRATE"))),PSSDBAR("FREQ")=$P(PSSDBAR("FREQZZ"),"^")
"RTN","PSSDSAPD",131,0)
 I $D(PSSDBFDB(PSSDBLP,"FREQ")) S PSSDBAR("FREQ")=PSSDBFDB(PSSDBLP,"FREQ") Q
"RTN","PSSDSAPD",132,0)
 S:PSSDBAR("FREQ")="" PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"FRQ_ERROR")=""
"RTN","PSSDSAPD",133,0)
 Q
"RTN","PSSDSAPD",134,0)
 ;
"RTN","PSSDSAPD",135,0)
 ;
"RTN","PSSDSAPD",136,0)
DTYPE ;Find Dose Type
"RTN","PSSDSAPD",137,0)
 N PSSDBST1,PSSDBST2,PSSDBST3,PSSDBST4
"RTN","PSSDSAPD",138,0)
 I $D(PSSDBFDB(PSSDBLP,"DOSE_TYPE")) S PSSDBAR("TYPE")=PSSDBFDB(PSSDBLP,"DOSE_TYPE") Q
"RTN","PSSDSAPD",139,0)
 S PSSDBST1=$G(PSSDBDS(PSSDBLP,"SCHEDULE"))
"RTN","PSSDSAPD",140,0)
 I PSSDBST1="" S PSSDBAR("TYPE")="MAINTENANCE" Q
"RTN","PSSDSAPD",141,0)
 S PSSDBST3=0
"RTN","PSSDSAPD",142,0)
 F PSSDBST2=0:0 S PSSDBST2=$O(^PS(51.1,"APPSJ",PSSDBST1,PSSDBST2)) Q:'PSSDBST2!(PSSDBST3)  D
"RTN","PSSDSAPD",143,0)
 .S PSSDBST4=$P($G(^PS(51.1,PSSDBST2,0)),"^",5)
"RTN","PSSDSAPD",144,0)
 .I PSSDBST4="O"!(PSSDBST4="OC") S PSSDBAR("TYPE")="SINGLE DOSE",PSSDBST3=1
"RTN","PSSDSAPD",145,0)
 I 'PSSDBST3 S PSSDBAR("TYPE")="MAINTENANCE"
"RTN","PSSDSAPD",146,0)
 Q
"RTN","PSSDSAPD",147,0)
 ;
"RTN","PSSDSAPD",148,0)
 ;
"RTN","PSSDSAPD",149,0)
DURR ;Set Duration
"RTN","PSSDSAPD",150,0)
 I $D(PSSDBFDB(PSSDBLP,"DURATION")) S PSSDBAR("DUR")=PSSDBFDB(PSSDBLP,"DURATION") Q
"RTN","PSSDSAPD",151,0)
 S PSSDBAR("DUR")=$S($G(PSSDBAR("TYPE"))="SINGLE DOSE":"",1:1)
"RTN","PSSDSAPD",152,0)
 Q
"RTN","PSSDSAPD",153,0)
 ;
"RTN","PSSDSAPD",154,0)
 ;
"RTN","PSSDSAPD",155,0)
DURRAT ;Set Duration Rate
"RTN","PSSDSAPD",156,0)
 I $D(PSSDBFDB(PSSDBLP,"DURATION_RT")) S PSSDBAR("DRR")=PSSDBFDB(PSSDBLP,"DURATION_RT") Q
"RTN","PSSDSAPD",157,0)
 S PSSDBAR("DRR")=$S($G(PSSDBAR("TYPE"))="SINGLE DOSE":"",1:"DAY")
"RTN","PSSDSAPD",158,0)
 Q
"RTN","PSSDSAPD",159,0)
 ;
"RTN","PSSDSAPD",160,0)
 ;
"RTN","PSSDSAPD",161,0)
COMP ;Handle complex order, set PSSDBCAR array, see routine PSSDSEXC for PSSBDCAR piece details
"RTN","PSSDSAPD",162,0)
 ;if you have to add new create input entry, just add a piece 5 = 1 to the Pharmacy Order Number
"RTN","PSSDSAPD",163,0)
 N PSSDBKLP,PSSDBKUN,PSSDBKMR,PSSDBKND,PSSDBKRF,PSSDBKNW,PSSDBKFL,PSSDBKTM,PSSDBKFQ,PSSDBKGG,PSSCNX1,PSSDBCDA,PSSDCLX
"RTN","PSSDSAPD",164,0)
 S PSSDBKTM="PSSTTMP"
"RTN","PSSDSAPD",165,0)
 K ^TMP($J,PSSDBKTM)
"RTN","PSSDSAPD",166,0)
 S PSSDBKFL=0
"RTN","PSSDSAPD",167,0)
 F PSSCNX1=0:0 S PSSCNX1=$O(^TMP($J,"PSSCNX","IN","DOSE",PSSCNX1)) Q:'PSSCNX1  S PSSDBKLP=$O(^TMP($J,"PSSCNX","IN","DOSE",PSSCNX1,"")) I PSSDBKLP'=""  D
"RTN","PSSDSAPD",168,0)
 .S PSSDBKND=$G(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBKLP)) S PSSDBKFQ=$S($D(PSSDBCAZ(PSSDBKLP,"FRQ_ERROR")):0,1:1) S PSSDBKGG=$S($P(PSSDBKND,"^",12)="SINGLE DOSE":1,1:0)
"RTN","PSSDSAPD",169,0)
 .S PSSDBCDA($S($P(PSSDBKND,"^",3)="":"NULL",1:$P(PSSDBKND,"^",3)),$S($P(PSSDBKND,"^",11)="":"NULL",1:$P(PSSDBKND,"^",11)))=PSSDBKLP I $G(PSSDCLX)="",PSSDSWHE S PSSDCLX=PSSDBKLP
"RTN","PSSDSAPD",170,0)
 .S PSSDBCAR(PSSDBKLP)="B"_"^"_$P(PSSDBKND,"^",4)_"^"_$P(PSSDBKND,"^",3)_"^"_PSSDBKFQ_"^"_$S($P(PSSDBKND,"^",12)="SINGLE DOSE":0,1:1) S:$G(PSSDBFRC(PSSDBKLP,"CONJ"))="A" $P(PSSDBCAR(PSSDBKLP),"^",7)=1
"RTN","PSSDSAPD",171,0)
 .S $P(PSSDBCAR(PSSDBKLP),"^",9)=$P(PSSDBKND,"^",11) D MLTNO^PSSDSAPM,SXCL^PSSDSAPA I PSSDSWHE S:$G(PSSDBFRC(PSSDBKLP,"CONJ"))'=""!($G(PSSDBFRC(PSSDCLX,"CONJ"))'="") $P(PSSDBCAR(PSSDBKLP),"^",16)=1 S PSSDCLX=PSSDBKLP
"RTN","PSSDSAPD",172,0)
 .I $G(PSSDBFRC(PSSDBKLP,"CONJ"))'="A"!($O(^TMP($J,"PSSCNX","IN","DOSE",PSSCNX1))="") S PSSDBKNW($P(PSSDBKLP,";",4),PSSDBKLP)="" D CRT K PSSDBKNW,PSSDBCDA S PSSDBKFL=0 Q
"RTN","PSSDSAPD",173,0)
 .S PSSDBKFL=PSSDBKFL+1
"RTN","PSSDSAPD",174,0)
 .S PSSDBKNW($P(PSSDBKLP,";",4),PSSDBKLP)=""
"RTN","PSSDSAPD",175,0)
 .S $P(PSSDBCAR(PSSDBKLP),"^")="S",$P(PSSDBCAR(PSSDBKLP),"^",12)=1
"RTN","PSSDSAPD",176,0)
 I $D(^TMP($J,PSSDBKTM)) M ^TMP($J,PSSDBASE)=^TMP($J,PSSDBKTM)
"RTN","PSSDSAPD",177,0)
 K ^TMP($J,PSSDBKTM)
"RTN","PSSDSAPD",178,0)
 Q
"RTN","PSSDSAPD",179,0)
 ;
"RTN","PSSDSAPD",180,0)
 ;
"RTN","PSSDSAPD",181,0)
DRT(PSSDBJV) ;Return number of minutes based on duration, API also called from Inpatient Medications
"RTN","PSSDSAPD",182,0)
 ;If only a numeric is passed in, the API will assume Days
"RTN","PSSDSAPD",183,0)
 I $G(PSSDBJV)="" Q -1
"RTN","PSSDSAPD",184,0)
 I PSSDBJV?.N1".".N1"D"!(PSSDBJV?.N1"D") Q (1440*+PSSDBJV)
"RTN","PSSDSAPD",185,0)
 I PSSDBJV?.N1".".N!(PSSDBJV?.N) Q (1440*+PSSDBJV)
"RTN","PSSDSAPD",186,0)
 I PSSDBJV?.N1".".N1"H"!(PSSDBJV?.N1"H") Q (60*+PSSDBJV)
"RTN","PSSDSAPD",187,0)
 I PSSDBJV?.N1".".N1"M"!(PSSDBJV?.N1"M") Q (+PSSDBJV)
"RTN","PSSDSAPD",188,0)
 I PSSDBJV?.N1".".N1"W"!(PSSDBJV?.N1"W") Q (10080*+PSSDBJV)
"RTN","PSSDSAPD",189,0)
 I PSSDBJV?.N1".".N1"L"!(PSSDBJV?.N1"L") Q (43200*+PSSDBJV)
"RTN","PSSDSAPD",190,0)
 Q -1
"RTN","PSSDSAPD",191,0)
 ;
"RTN","PSSDSAPD",192,0)
 ;
"RTN","PSSDSAPD",193,0)
CRT ;Possibly create new Input Dose Node just for Daily Dose purposes
"RTN","PSSDSAPD",194,0)
 I 'PSSDBKFL!($G(PSSDBFRC(PSSDBKLP,"CONJ"))="A") S $P(PSSDBCAR(PSSDBKLP),"^")=$S($G(PSSDBFRC(PSSDBKLP,"CONJ"))="A":"S",$G(PSSDBKGG):"S",$G(PSSDBFRB(PSSDBKLP,"DRATE"))="":"B",1:"B") D S12 Q
"RTN","PSSDSAPD",195,0)
 N PSSDBR1,PSSDBR2,PSSDBR3,PSSDBR4,PSSDBR5,PSSDBR6,PSSDBR7,PSSDBRCT,PSSDBRNO,PSSDBRLS,PSSDBR9,PSSDBR91,PSSDBEQ2,PSSDBEQ3,PSSDBEQ4,PSSDBR8,PSSDBXAX,PSSDBRLP,PSSDBRLA
"RTN","PSSDSAPD",196,0)
 S (PSSDBRNO,PSSDBRCT,PSSDBR5)=0
"RTN","PSSDSAPD",197,0)
 ;Then or Except Conjunction, or last Dosing Sequence in the series, with previous dosages to add up for Daily Dose
"RTN","PSSDSAPD",198,0)
 ;PSSDBKNW array holds all previous dosing sequences and current one
"RTN","PSSDSAPD",199,0)
 S PSSDBRLP="" F  S PSSDBRLP=$O(PSSDBKNW(PSSDBRLP)) Q:PSSDBRLP=""  S PSSDBR1=$O(PSSDBKNW(PSSDBRLP,"")) I PSSDBR1'=""  D
"RTN","PSSDSAPD",200,0)
 .S PSSDBR2=$G(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBR1))
"RTN","PSSDSAPD",201,0)
 .I $O(PSSDBKNW(PSSDBRLP))="" S $P(PSSDBCAR(PSSDBKLP),"^")="S",$P(PSSDBCAR(PSSDBKLP),"^",12)=1
"RTN","PSSDSAPD",202,0)
 .I $P(PSSDBR2,"^",12)'="MAINTENANCE" D NX(4)
"RTN","PSSDSAPD",203,0)
 .S PSSDBRCT=PSSDBRCT+1
"RTN","PSSDSAPD",204,0)
 .I $G(PSSDBFRC(PSSDBR1,"SCHEDULE"))["@" D NX(10)
"RTN","PSSDSAPD",205,0)
 .I '$D(PSSDBEQ2(10)),$G(PSSDBFRC(PSSDBR1,"SCHEDULE"))'="" F PSSDBEQ4=0:0 S PSSDBEQ4=$O(^PS(51.1,"APPSJ",$G(PSSDBFRC(PSSDBR1,"SCHEDULE")),PSSDBEQ4)) Q:'PSSDBEQ4!($D(PSSDBEQ2(10)))  D
"RTN","PSSDSAPD",206,0)
 ..I $P($G(^PS(51.1,PSSDBEQ4,0)),"^",5)="D" D NX(10)
"RTN","PSSDSAPD",207,0)
 .I PSSDBRCT=1 D  Q
"RTN","PSSDSAPD",208,0)
 ..I '$P(PSSDBR2,"^",5) D NX(11)
"RTN","PSSDSAPD",209,0)
 ..S PSSDBR91=$G(PSSDBFRB(PSSDBR1,"DRATE"))
"RTN","PSSDSAPD",210,0)
 ..S PSSDBR3=$P(PSSDBR2,"^",6),PSSDBR4=$P(PSSDBR2,"^",11) I PSSDBR3=""!(PSSDBR4="") S PSSDBRNO=1 D:PSSDBR3="" NX(5) D:PSSDBR4="" NX(6)
"RTN","PSSDSAPD",211,0)
 ..S PSSDBR5=$P(PSSDBR2,"^",8)
"RTN","PSSDSAPD",212,0)
 ..I $D(PSSDBCAZ(PSSDBR1,"FRQ_ERROR")) D NX(7)
"RTN","PSSDSAPD",213,0)
 ..I 'PSSDBRNO S PSSDBR8=$$FRCON^PSSDSAPK(PSSDBR5) S:PSSDBR8'<1 PSSDBR6=$P(PSSDBR2,"^",5)*PSSDBR8 I PSSDBR8<1 D NX(7)
"RTN","PSSDSAPD",214,0)
 ..I $G(PSSDBFRB(PSSDBR1,"DRATE"))'="" S PSSDBR7=$$DRT(PSSDBFRB(PSSDBR1,"DRATE")) I PSSDBR7<1440 D NX(9)
"RTN","PSSDSAPD",215,0)
 ..I '$O(PSSDBKNW(PSSDBRLP)) S PSSDBRLS=PSSDBR1 ; Get Last entry
"RTN","PSSDSAPD",216,0)
 .I '$P(PSSDBR2,"^",5) D NX(11)
"RTN","PSSDSAPD",217,0)
 .I PSSDBR3'=$P(PSSDBR2,"^",6) D NX(5)
"RTN","PSSDSAPD",218,0)
 .I PSSDBR4'=$P(PSSDBR2,"^",11) D NX(6)
"RTN","PSSDSAPD",219,0)
 .I $G(PSSDBFRB(PSSDBR1,"DRATE"))'=PSSDBR91 D NX(8)
"RTN","PSSDSAPD",220,0)
 .S PSSDBR5=$P(PSSDBR2,"^",8) I $D(PSSDBCAZ(PSSDBR1,"FRQ_ERROR")) D NX(7)
"RTN","PSSDSAPD",221,0)
 .I 'PSSDBRNO S PSSDBR8=$$FRCON^PSSDSAPK(PSSDBR5) S:PSSDBR8'<1 PSSDBR6=PSSDBR6+($P(PSSDBR2,"^",5)*PSSDBR8) I PSSDBR8<1 D NX(7)
"RTN","PSSDSAPD",222,0)
 .I $G(PSSDBFRB(PSSDBR1,"DRATE"))'="" S PSSDBR7=$$DRT(PSSDBFRB(PSSDBR1,"DRATE")) I PSSDBR7<1440 D NX(9)
"RTN","PSSDSAPD",223,0)
 .I '$O(PSSDBKNW(PSSDBRLP)) S PSSDBRLS=PSSDBR1 ; Get Last entry
"RTN","PSSDSAPD",224,0)
 I PSSDBRNO D  S $P(PSSDBCAR(PSSDBRLS),"^",8)=1,$P(PSSDBCAR(PSSDBRLS),"^",7)="" D MLTNP^PSSDSAPM D RESET^PSSDSAPA Q
"RTN","PSSDSAPD",225,0)
 .S PSSDBRLA="" F  S PSSDBRLA=$O(PSSDBKNW(PSSDBRLA)) Q:PSSDBRLA=""  S PSSDBR9=$O(PSSDBKNW(PSSDBRLA,"")) I PSSDBR9'=""  S $P(PSSDBCAR(PSSDBR9),"^")="S",$P(PSSDBCAR(PSSDBR9),"^",12)=1
"RTN","PSSDSAPD",226,0)
 .;Set error message only for last entry where Daily Dose should have been done
"RTN","PSSDSAPD",227,0)
 .D ERST^PSSDSAPM
"RTN","PSSDSAPD",228,0)
 S ^TMP($J,PSSDBKTM,"IN","DOSE",PSSDBRLS_";1")=^TMP($J,PSSDBASE,"IN","DOSE",PSSDBRLS)
"RTN","PSSDSAPD",229,0)
 S ^TMP($J,PSSDBKTM,"IN","PROSPECTIVE",PSSDBRLS_";1")=$P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBRLS),"^",1,4)
"RTN","PSSDSAPD",230,0)
 S $P(^TMP($J,PSSDBKTM,"IN","DOSE",PSSDBRLS_";1"),"^",8)=1
"RTN","PSSDSAPD",231,0)
 S $P(^TMP($J,PSSDBKTM,"IN","DOSE",PSSDBRLS_";1"),"^",5)=PSSDBR6
"RTN","PSSDSAPD",232,0)
 S PSSDBCAR(PSSDBRLS_";1")="D"_"^"_$P(PSSDBKND,"^",4)_"^"_$P(PSSDBKND,"^",3)_"^"_PSSDBKFQ S $P(PSSDBCAR(PSSDBRLS),"^",11)=1
"RTN","PSSDSAPD",233,0)
 Q
"RTN","PSSDSAPD",234,0)
 ;
"RTN","PSSDSAPD",235,0)
 ;
"RTN","PSSDSAPD",236,0)
NDINFO ;Set National Drug File information
"RTN","PSSDSAPD",237,0)
 I 'PSSDBIFL,$G(PSSDBFDB(PSSDBLP,"DRUG_IEN")) S PSSDBND1=$P($G(^PSDRUG(PSSDBFDB(PSSDBLP,"DRUG_IEN"),"ND")),"^"),PSSDBND3=$P($G(^PSDRUG(PSSDBFDB(PSSDBLP,"DRUG_IEN"),"ND")),"^",3) Q
"RTN","PSSDSAPD",238,0)
 I $G(PSSDBIFG) S PSSDBND1=$P($G(^PSDRUG(PSSDBIFG,"ND")),"^"),PSSDBND3=$P($G(^PSDRUG(PSSDBIFG,"ND")),"^",3)
"RTN","PSSDSAPD",239,0)
 Q
"RTN","PSSDSAPD",240,0)
 ;
"RTN","PSSDSAPD",241,0)
 ;
"RTN","PSSDSAPD",242,0)
ERR ;Loop through PSSDBCAR, set PSSDBCAX error array
"RTN","PSSDSAPD",243,0)
 N PSSDBEB1,PSSDBEB2,PSSDBEB3
"RTN","PSSDSAPD",244,0)
 S PSSDBEB3=$S($G(^TMP($J,PSSDBASE,"IN","DOSE","AGE")):1,1:0)
"RTN","PSSDSAPD",245,0)
 ;Skip AGE, WT and BSA and newly created Dosages for complex additions
"RTN","PSSDSAPD",246,0)
 ;Rx_NUM MUST contain a ";", or you will not set PSSDBDGO
"RTN","PSSDSAPD",247,0)
 S PSSDBEB1="" F  S PSSDBEB1=$O(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1)) Q:PSSDBEB1=""  S:'PSSDBEB3&(PSSDBEB1[";") $P(PSSDBCAR(PSSDBEB1),"^",13)=1 D:'$P(PSSDBEB1,";",5)&(PSSDBEB1[";")
"RTN","PSSDSAPD",248,0)
 .S PSSDBEB2=$G(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1))
"RTN","PSSDSAPD",249,0)
 .I $D(PSSDBCAZ(PSSDBEB1,"INF_ERROR")) D INRATE S PSSDBDGO=1 S $P(PSSDBCAR(PSSDBEB1),"^",13)=1 Q
"RTN","PSSDSAPD",250,0)
 .I $P(PSSDBEB2,"^",5)=""!($P(PSSDBEB2,"^",6)="") D BDOSE^PSSDSAPK S $P(PSSDBCAR(PSSDBEB1),"^",13)=1 Q
"RTN","PSSDSAPD",251,0)
 .I $D(PSSDBCAZ(PSSDBEB1,"FRQ_ERROR")) D INFRQ S PSSDBDGO=1 Q
"RTN","PSSDSAPD",252,0)
 .I '$P(PSSDBCAR(PSSDBEB1),"^",5) D SING^PSSDSAPK S PSSDBDGO=1 Q
"RTN","PSSDSAPD",253,0)
 .S PSSDBDGO=1
"RTN","PSSDSAPD",254,0)
 Q
"RTN","PSSDSAPD",255,0)
 ;
"RTN","PSSDSAPD",256,0)
 ;
"RTN","PSSDSAPD",257,0)
EXCPS(PSSDBEQ1) ;Set errors
"RTN","PSSDSAPD",258,0)
 I PSSDBEQ1=2,$D(PSSDBCAZ(PSSDBEB1,"FRQD_ERROR")) S PSSDBCAX(PSSDBEB1,15)="" Q
"RTN","PSSDSAPD",259,0)
 S PSSDBCAX(PSSDBEB1,PSSDBEQ1)=""
"RTN","PSSDSAPD",260,0)
 Q
"RTN","PSSDSAPD",261,0)
 ;
"RTN","PSSDSAPD",262,0)
 ;
"RTN","PSSDSAPD",263,0)
INRATE ;Infusion Rate error, default data already set in Inpatient
"RTN","PSSDSAPD",264,0)
 ;N PSSDBEC1
"RTN","PSSDSAPD",265,0)
 I 'PSSDBEB3 Q
"RTN","PSSDSAPD",266,0)
 I $P(PSSDBEB2,"^",5)=""!($P(PSSDBEB2,"^",6)="") D EXCPS(1)
"RTN","PSSDSAPD",267,0)
 ;S PSSDBEC1=$P(PSSDBEB2,"^",11) S PSSDBEC1=$$UP^XLFSTR(PSSDBEC1) I $E(PSSDBEC1,1,4)'="CONT" Q
"RTN","PSSDSAPD",268,0)
 S $P(PSSDBCAR(PSSDBEB1),"^",21)=1
"RTN","PSSDSAPD",269,0)
 D EXCPS(3) D INFERRS^PSSDSAPK
"RTN","PSSDSAPD",270,0)
 I $D(PSSDBCAZ(PSSDBEB1,"FRQ_ERROR")) D EXCPS(2)
"RTN","PSSDSAPD",271,0)
 I $P(PSSDBCAR(PSSDBEB1),"^",5) S $P(PSSDBCAR(PSSDBEB1),"^",6)=1 S $P(PSSDBCAR(PSSDBEB1),"^",10)=1 Q  ;Maintenance Dose
"RTN","PSSDSAPD",272,0)
 ;Single Dose, code should never be invoked, because we don't send Continuous infusions
"RTN","PSSDSAPD",273,0)
 S $P(PSSDBCAR(PSSDBEB1),"^")="S"
"RTN","PSSDSAPD",274,0)
 S $P(PSSDBCAR(PSSDBEB1),"^",7)=1
"RTN","PSSDSAPD",275,0)
 Q
"RTN","PSSDSAPD",276,0)
 ;
"RTN","PSSDSAPD",277,0)
 ;
"RTN","PSSDSAPD",278,0)
INFRQ ;Frequency error
"RTN","PSSDSAPD",279,0)
 I 'PSSDBEB3 Q
"RTN","PSSDSAPD",280,0)
 I $P(PSSDBEB2,"^",11)="" Q
"RTN","PSSDSAPD",281,0)
 ;I '$P(PSSDBCAR(PSSDBEB1),"^",5) Q
"RTN","PSSDSAPD",282,0)
 D EXCPS(2)
"RTN","PSSDSAPD",283,0)
 S $P(PSSDBCAR(PSSDBEB1),"^")="S"
"RTN","PSSDSAPD",284,0)
 I $P(PSSDBCAR(PSSDBEB1),"^",5) S $P(PSSDBCAR(PSSDBEB1),"^",8)=1 S $P(PSSDBCAR(PSSDBEB1),"^",10)=1
"RTN","PSSDSAPD",285,0)
 ;Inpatient may already be setting next 3, because this applies to Outpatient and IV
"RTN","PSSDSAPD",286,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",8)=1,$P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",9)=1
"RTN","PSSDSAPD",287,0)
 ;S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",9)=1
"RTN","PSSDSAPD",288,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",10)=$P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",7)
"RTN","PSSDSAPD",289,0)
 Q
"RTN","PSSDSAPD",290,0)
 ;
"RTN","PSSDSAPD",291,0)
 ;
"RTN","PSSDSAPD",292,0)
S12 ;
"RTN","PSSDSAPD",293,0)
 S:$P(PSSDBCAR(PSSDBKLP),"^")="S" $P(PSSDBCAR(PSSDBKLP),"^",12)=1
"RTN","PSSDSAPD",294,0)
 Q
"RTN","PSSDSAPD",295,0)
 ;
"RTN","PSSDSAPD",296,0)
 ;
"RTN","PSSDSAPD",297,0)
NX(PSSNX) ;
"RTN","PSSDSAPD",298,0)
 S PSSDBRNO=1
"RTN","PSSDSAPD",299,0)
 S PSSDBEQ2(PSSNX)=""
"RTN","PSSDSAPD",300,0)
 S PSSDBXAX(PSSNX,PSSDBR1)=""
"RTN","PSSDSAPD",301,0)
 Q
"RTN","PSSDSAPI")
0^1^B140100816
"RTN","PSSDSAPI",1,0)
PSSDSAPI ;BIR/RTR-Dose Check APIs routine ;06/09/08
"RTN","PSSDSAPI",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,160,173**;9/30/97;Build 9
"RTN","PSSDSAPI",3,0)
 ;
"RTN","PSSDSAPI",4,0)
EXMT(PSSVLIEN) ;Test if Drug should have Dose Call performed on it
"RTN","PSSDSAPI",5,0)
 ;PSSVLIEN=File 50 internal entry number 
"RTN","PSSDSAPI",6,0)
 ;1=exempt from Dose Check, 0=not exempt from Dose check
"RTN","PSSDSAPI",7,0)
 N PSSVLND,PSSVLND1,PSSVLND3,PSSVLNDF,PSSVLDOV,PSSVLZR,PSSVLDF
"RTN","PSSDSAPI",8,0)
 S PSSVLZR=$G(^PSDRUG(PSSVLIEN,0))
"RTN","PSSDSAPI",9,0)
 I $P(PSSVLZR,"^",3)["S"!($E($P(PSSVLZR,"^",2),1,2)="XA") Q 1
"RTN","PSSDSAPI",10,0)
 S PSSVLND=$G(^PSDRUG(PSSVLIEN,"ND"))
"RTN","PSSDSAPI",11,0)
 S PSSVLND1=$P(PSSVLND,"^"),PSSVLND3=$P(PSSVLND,"^",3)
"RTN","PSSDSAPI",12,0)
 S PSSVLDOV="" K PSSVLDF
"RTN","PSSDSAPI",13,0)
 I $T(OVRIDE^PSNAPIS)]"",PSSVLND1,PSSVLND3 S PSSVLDOV=$$OVRIDE^PSNAPIS(PSSVLND1,PSSVLND3)
"RTN","PSSDSAPI",14,0)
 I PSSVLND1,PSSVLND3 S PSSVLNDF=$$DFSU^PSNAPIS(PSSVLND1,PSSVLND3) S PSSVLDF=$P(PSSVLNDF,"^")
"RTN","PSSDSAPI",15,0)
 I $G(PSSVLDF)'>0,$P($G(^PSDRUG(PSSVLIEN,2)),"^") S PSSVLDF=$P($G(^PS(50.7,+$P($G(^PSDRUG(PSSVLIEN,2)),"^"),0)),"^",2)
"RTN","PSSDSAPI",16,0)
 I PSSVLDOV=""!('$G(PSSVLDF))!($P($G(^PS(50.606,+$G(PSSVLDF),1)),"^")="") Q 0
"RTN","PSSDSAPI",17,0)
 I $P($G(^PS(50.606,+$G(PSSVLDF),1)),"^"),'PSSVLDOV Q 1
"RTN","PSSDSAPI",18,0)
 I '$P($G(^PS(50.606,+$G(PSSVLDF),1)),"^"),PSSVLDOV Q 1
"RTN","PSSDSAPI",19,0)
 Q 0
"RTN","PSSDSAPI",20,0)
 ;
"RTN","PSSDSAPI",21,0)
 ;
"RTN","PSSDSAPI",22,0)
SUP(PSSSPLIN) ;Screen for Drug Interaction and Duplicate Therapy
"RTN","PSSDSAPI",23,0)
 ;PSSSPLIN = File 50 internal entry number
"RTN","PSSDSAPI",24,0)
 ;1=exempt, 0=not exempt
"RTN","PSSDSAPI",25,0)
 N PSSSPLZR
"RTN","PSSDSAPI",26,0)
 S PSSSPLZR=$G(^PSDRUG(PSSSPLIN,0))
"RTN","PSSDSAPI",27,0)
 I $P(PSSSPLZR,"^",3)["S"!($E($P(PSSSPLZR,"^",2),1,2)="XA") Q 1
"RTN","PSSDSAPI",28,0)
 Q 0
"RTN","PSSDSAPI",29,0)
 ;
"RTN","PSSDSAPI",30,0)
 ;
"RTN","PSSDSAPI",31,0)
MRT(PSSRS1) ;Return Standard Medication Route and First DataBank Route
"RTN","PSSDSAPI",32,0)
 N PSSRS2,PSSRS3,PSSRS4,PSSRTNAM,PSSRTIEN,PSSRTARR,PSSPKGU,PSSRS4SM I '$G(PSSRS1) S PSSRS2="" G MRTX
"RTN","PSSDSAPI",33,0)
 S (PSSRTNAM,PSSRTIEN,PSSRS2,PSSRS4,PSSRS4SM)="",PSSRTNAM=$$GET1^DIQ(51.2,PSSRS1,.01) I $G(PSSRTNAM)="" S PSSRS2="" G MRTX
"RTN","PSSDSAPI",34,0)
 F  S PSSRTIEN=$O(^PS(51.2,"B",PSSRTNAM,PSSRTIEN)) Q:PSSRTIEN=""  D  ;check for duplicate route names; if mapped, defined and has a valid effective date set array
"RTN","PSSDSAPI",35,0)
 .S PSSRS3="",PSSRS3=$P($G(^PS(51.2,PSSRTIEN,1)),"^")
"RTN","PSSDSAPI",36,0)
 .Q:'$G(PSSRS3)
"RTN","PSSDSAPI",37,0)
 .Q:'$D(^PS(51.23,+PSSRS3,0))
"RTN","PSSDSAPI",38,0)
 .Q:$$SCREEN^XTID(51.23,.01,+PSSRS3_",")
"RTN","PSSDSAPI",39,0)
 .S PSSPKGU="",PSSPKGU=$$GET1^DIQ(51.2,PSSRTIEN,3,"I") S:PSSPKGU="" PSSPKGU=0 S PSSRTARR(PSSPKGU,PSSRTIEN)=+PSSRS3
"RTN","PSSDSAPI",40,0)
 ;If duplicate route names, select 1st "ALL Package" route for PACKAGE USE field in file 51.2.  If no "ALL Package" route, select 1st "NDF Only" route.  Otherwise, return nothing to indicate "invalid or undefined" route.
"RTN","PSSDSAPI",41,0)
 ;If no duplicate route names, use the route passed in regardless of Packge Use value but only if mapped to route has valid effective date.
"RTN","PSSDSAPI",42,0)
 I $D(PSSRTARR) D
"RTN","PSSDSAPI",43,0)
 .I $D(PSSRTARR(1)) S PSSRS4=$O(PSSRTARR(1,PSSRS4)),PSSRS4SM=PSSRTARR(1,PSSRS4) Q
"RTN","PSSDSAPI",44,0)
 .S:$D(PSSRTARR(0)) PSSRS4=$O(PSSRTARR(0,PSSRS4)),PSSRS4SM=PSSRTARR(0,PSSRS4)
"RTN","PSSDSAPI",45,0)
 I PSSRS4="" G MRTX
"RTN","PSSDSAPI",46,0)
 S PSSRS2=$G(^PS(51.23,+PSSRS4SM,0))
"RTN","PSSDSAPI",47,0)
MRTX ;
"RTN","PSSDSAPI",48,0)
 Q $P(PSSRS2,"^")_"^"_$P(PSSRS2,"^",2)
"RTN","PSSDSAPI",49,0)
 ;
"RTN","PSSDSAPI",50,0)
 ;
"RTN","PSSDSAPI",51,0)
UNIT(PSSVUTUN) ;Find First DataBank Unit, can't do DIC Lookup because of exact match check
"RTN","PSSDSAPI",52,0)
 ;Returns Null or First DataBank Unit for text passed in
"RTN","PSSDSAPI",53,0)
 N PSSVUTX,PSSVUTZ,PSSVUTAA,PSSVUTFL
"RTN","PSSDSAPI",54,0)
 S PSSVUTFL=0 I $G(PSSVUTUN)="" S PSSVUTZ="" G UNITX
"RTN","PSSDSAPI",55,0)
 S PSSVUTAA=$$UP^XLFSTR(PSSVUTUN)
"RTN","PSSDSAPI",56,0)
UNITP ;
"RTN","PSSDSAPI",57,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"B",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="" G UNITX
"RTN","PSSDSAPI",58,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"C",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="" G UNITX
"RTN","PSSDSAPI",59,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"D",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="" G UNITX
"RTN","PSSDSAPI",60,0)
 I 'PSSVUTFL,$G(PSSVUTUN)["/" S PSSVUTFL=1,PSSVUTAA=$P(PSSVUTUN,"/"),PSSVUTAA=$$UP^XLFSTR(PSSVUTAA) G:PSSVUTAA'="" UNITP
"RTN","PSSDSAPI",61,0)
UNITX ;
"RTN","PSSDSAPI",62,0)
 Q $G(PSSVUTZ)
"RTN","PSSDSAPI",63,0)
 ;
"RTN","PSSDSAPI",64,0)
 ;
"RTN","PSSDSAPI",65,0)
FRQ(PSSFWSCC,PSSFWFR,PSSFWPK,PSSFWDRL) ;Return Daily Frequency for Daily Dose Check
"RTN","PSSDSAPI",66,0)
 ;
"RTN","PSSDSAPI",67,0)
 ;Input variables:
"RTN","PSSDSAPI",68,0)
 ;PSSFWSC = Free Text Schedule
"RTN","PSSDSAPI",69,0)
 ;PSSFWFR = Frequency in Minutes
"RTN","PSSDSAPI",70,0)
 ;PSSFWPK = Package  "O" for Outpatient, "I" for Inpatient
"RTN","PSSDSAPI",71,0)
 ;PSSFWDRL = Duration
"RTN","PSSDSAPI",72,0)
 ;Output: 2 pieces (More information see Forum DBIA 5425)
"RTN","PSSDSAPI",73,0)
 ;piece 1 - Adjusted Daily Frequency, (May need adjusted if Duration is passed in)
"RTN","PSSDSAPI",74,0)
 ;piece 2 - Daily Frequency solely based on Schedule
"RTN","PSSDSAPI",75,0)
 ;
"RTN","PSSDSAPI",76,0)
 N PSSFWPR1,PSSFWPR2,PSSFWPR3,PSSFWPR4,PSSFWPR5,PSSFWPR6,PSSFWPR7
"RTN","PSSDSAPI",77,0)
 S PSSFWPR1=0
"RTN","PSSDSAPI",78,0)
 S PSSFWPR2=$$FRQZ
"RTN","PSSDSAPI",79,0)
 I PSSFWPR1 Q PSSFWPR2_"^"_$G(PSSFWPR7)
"RTN","PSSDSAPI",80,0)
 S PSSFWPR3=$L(PSSFWSCC) I PSSFWPR3<5 Q PSSFWPR2_"^"_$G(PSSFWPR7)
"RTN","PSSDSAPI",81,0)
 S PSSFWPR4=$E(PSSFWSCC,(PSSFWPR3-3),PSSFWPR3) S PSSFWPR4=$$UP^XLFSTR(PSSFWPR4)
"RTN","PSSDSAPI",82,0)
 I PSSFWPR4'=" PRN" Q PSSFWPR2_"^"_$G(PSSFWPR7)
"RTN","PSSDSAPI",83,0)
 S PSSFWPR5=PSSFWSCC
"RTN","PSSDSAPI",84,0)
 S PSSFWSCC=$E(PSSFWSCC,1,(PSSFWPR3-4)) K PSSFWPR7
"RTN","PSSDSAPI",85,0)
 S PSSFWPR6=$$FRQZ
"RTN","PSSDSAPI",86,0)
 S PSSFWSCC=PSSFWPR5
"RTN","PSSDSAPI",87,0)
 Q PSSFWPR6_"^"_$G(PSSFWPR7)
"RTN","PSSDSAPI",88,0)
 ;
"RTN","PSSDSAPI",89,0)
 ;
"RTN","PSSDSAPI",90,0)
FRQZ() ;
"RTN","PSSDSAPI",91,0)
 N PSSFWRST,PSSFWFLG,PSSFWSC
"RTN","PSSDSAPI",92,0)
 S PSSFWSC=$$UP^XLFSTR(PSSFWSCC)
"RTN","PSSDSAPI",93,0)
 K PSSFWRST
"RTN","PSSDSAPI",94,0)
 I $G(PSSFWPK)'="O",$G(PSSFWPK)'="I" Q ""
"RTN","PSSDSAPI",95,0)
 I $G(PSSFWFR)="D" D DAY Q $G(PSSFWRST)
"RTN","PSSDSAPI",96,0)
 I $G(PSSFWFR) D NUMB I PSSFWFLG Q PSSFWRST
"RTN","PSSDSAPI",97,0)
 D STN I PSSFWFLG Q PSSFWRST
"RTN","PSSDSAPI",98,0)
 I $G(PSSFWPK)="O" D STNO I PSSFWFLG Q PSSFWRST
"RTN","PSSDSAPI",99,0)
 Q ""
"RTN","PSSDSAPI",100,0)
 ;
"RTN","PSSDSAPI",101,0)
 ;
"RTN","PSSDSAPI",102,0)
DAY ;Day of week schedule
"RTN","PSSDSAPI",103,0)
 N PSSFWFND,PSSFWRGH,PSSFWLTH,PSSFWTMP,PSSFWLP,PSSFWLP1,PSSFWCNT,PSSFWQZ,PSSFWDIV,PSSFWNUM,PSSFWKZ1,PSSFWKZ2,PSSFWKZ3,PSSFWKZ4,PSSFWKZ5
"RTN","PSSDSAPI",104,0)
 K PSSFWRST
"RTN","PSSDSAPI",105,0)
 S PSSFWLTH=$L(PSSFWSC)
"RTN","PSSDSAPI",106,0)
 S PSSFWFND=$F(PSSFWSC,"@")
"RTN","PSSDSAPI",107,0)
 S PSSFWRGH=$E(PSSFWSC,PSSFWFND,PSSFWLTH)
"RTN","PSSDSAPI",108,0)
 S PSSFWTMP=$S($E(PSSFWRGH,$L(PSSFWRGH))'="-":PSSFWRGH_"-",1:PSSFWRGH)
"RTN","PSSDSAPI",109,0)
 I PSSFWTMP?.(2N1"-")!(PSSFWTMP?.(4N1"-")) D  S PSSFWRST=PSSFWCNT,PSSFWPR1=1 Q
"RTN","PSSDSAPI",110,0)
 .S PSSFWCNT=0 F PSSFWLP=1:1:$L(PSSFWTMP) I $E(PSSFWTMP,PSSFWLP)="-" S PSSFWCNT=PSSFWCNT+1
"RTN","PSSDSAPI",111,0)
 I PSSFWRGH'="" F PSSFWLP1=0:0 S PSSFWLP1=$O(^PS(51.1,"APPSJ",PSSFWRGH,PSSFWLP1)) Q:'PSSFWLP1!($G(PSSFWRST))  D
"RTN","PSSDSAPI",112,0)
 .I $P($G(^PS(51.1,PSSFWLP1,0)),"^",5)'="D" Q
"RTN","PSSDSAPI",113,0)
 .S PSSFWKZ1=$P($G(^PS(51.1,PSSFWLP1,0)),"^",2)
"RTN","PSSDSAPI",114,0)
 .S PSSFWKZ5=0 I PSSFWKZ1'="" D
"RTN","PSSDSAPI",115,0)
 ..S PSSFWKZ2=$S($E(PSSFWKZ1,$L(PSSFWKZ1))'="-":PSSFWKZ1_"-",1:PSSFWKZ1)
"RTN","PSSDSAPI",116,0)
 ..I PSSFWKZ2?.(2N1"-")!(PSSFWKZ2?.(4N1"-")) D
"RTN","PSSDSAPI",117,0)
 ...S PSSFWKZ3=0 F PSSFWKZ4=1:1:$L(PSSFWKZ2) I $E(PSSFWKZ2,PSSFWKZ4)="-" S PSSFWKZ5=PSSFWKZ5+1
"RTN","PSSDSAPI",118,0)
 .I $G(PSSFWKZ5) S PSSFWRST=PSSFWKZ5
"RTN","PSSDSAPI",119,0)
 I $G(PSSFWRST) S PSSFWPR1=1 Q
"RTN","PSSDSAPI",120,0)
 I PSSFWRGH'="" F PSSFWLP1=0:0 S PSSFWLP1=$O(^PS(51.1,"APPSJ",PSSFWRGH,PSSFWLP1)) Q:'PSSFWLP1!($G(PSSFWRST))  D
"RTN","PSSDSAPI",121,0)
 .K PSSFWQZ,PSSFWDIV
"RTN","PSSDSAPI",122,0)
 .S PSSFWQZ=$P($G(^PS(51.1,PSSFWLP1,0)),"^",3)
"RTN","PSSDSAPI",123,0)
 .Q:'$G(PSSFWQZ)
"RTN","PSSDSAPI",124,0)
 .S PSSFWDIV=1440/PSSFWQZ I PSSFWDIV'>1 S PSSFWRST=1 Q
"RTN","PSSDSAPI",125,0)
 .I PSSFWDIV?.N S PSSFWRST=PSSFWDIV,PSSFWPR1=1
"RTN","PSSDSAPI",126,0)
 I $G(PSSFWRST) Q
"RTN","PSSDSAPI",127,0)
 I PSSFWPK="O" D DAYOUT Q:$G(PSSFWRST)
"RTN","PSSDSAPI",128,0)
 I PSSFWRGH?1"Q"1N.N1"H" S PSSFWRST=PSSFWRGH,PSSFWPR1=1 Q
"RTN","PSSDSAPI",129,0)
 I $G(PSSFWSC)'["@" S PSSFWRST=1 Q
"RTN","PSSDSAPI",130,0)
 I $E(PSSFWSC,$L(PSSFWSC))="@" S PSSFWRST=1 Q
"RTN","PSSDSAPI",131,0)
 Q
"RTN","PSSDSAPI",132,0)
 ;
"RTN","PSSDSAPI",133,0)
 ;
"RTN","PSSDSAPI",134,0)
DAYOUT ;Day of week for Outpatient orders
"RTN","PSSDSAPI",135,0)
 N PSSFWKZ6,PSSFWKZ7,PSSFWKZ8
"RTN","PSSDSAPI",136,0)
 I PSSFWRGH'="" F PSSFWKZ6=0:0 S PSSFWKZ6=$O(^PS(51,"B",PSSFWRGH,PSSFWKZ6)) Q:'PSSFWKZ6!($G(PSSFWRST))  I '$G(^PS(51,"B",PSSFWRGH,PSSFWKZ6)) D
"RTN","PSSDSAPI",137,0)
 .K PSSFWKZ7,PSSFWKZ8
"RTN","PSSDSAPI",138,0)
 .S PSSFWKZ7=$P($G(^PS(51,PSSFWKZ6,0)),"^",8)
"RTN","PSSDSAPI",139,0)
 .Q:'$G(PSSFWKZ7)
"RTN","PSSDSAPI",140,0)
 .S PSSFWKZ8=1440/PSSFWKZ7 I PSSFWKZ8'>1 S PSSFWRST=1 Q
"RTN","PSSDSAPI",141,0)
 .I PSSFWKZ8?.N S PSSFWRST=PSSFWKZ8,PSSFWPR1=1
"RTN","PSSDSAPI",142,0)
 Q
"RTN","PSSDSAPI",143,0)
 ;
"RTN","PSSDSAPI",144,0)
 ;
"RTN","PSSDSAPI",145,0)
NUMB ;Frequency passed in as a number
"RTN","PSSDSAPI",146,0)
 S PSSFWFLG=0 K PSSFWRST
"RTN","PSSDSAPI",147,0)
 N PSSFWDIS,PSSFWGRT,PSSFWMNT,PSSFWEEK,PSSFWXWK,PSSFWXMN
"RTN","PSSDSAPI",148,0)
 S PSSFWDIS=1440/PSSFWFR I PSSFWDIS?.N S PSSFWFLG=1,PSSFWRST=PSSFWDIS,PSSFWPR1=1 Q
"RTN","PSSDSAPI",149,0)
 I PSSFWDIS'<1 Q
"RTN","PSSDSAPI",150,0)
 S PSSFWGRT=PSSFWFR/1440
"RTN","PSSDSAPI",151,0)
 I PSSFWGRT?.N D  Q
"RTN","PSSDSAPI",152,0)
 .S PSSFWMNT=PSSFWGRT/30 I PSSFWMNT?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWMNT_"L",PSSFWPR1=1 Q
"RTN","PSSDSAPI",153,0)
 .S PSSFWEEK=PSSFWGRT/7 I PSSFWEEK?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWEEK_"W",PSSFWPR1=1 Q
"RTN","PSSDSAPI",154,0)
 .S PSSFWFLG=1,PSSFWRST="Q"_PSSFWGRT_"D",PSSFWPR1=1 Q
"RTN","PSSDSAPI",155,0)
 I PSSFWFR'>10080 S PSSFWXWK=10080/PSSFWFR I PSSFWXWK?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWXWK_"W",PSSFWPR1=1 Q
"RTN","PSSDSAPI",156,0)
 S PSSFWXMN=43200/PSSFWFR I PSSFWXMN?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWXMN_"L",PSSFWPR1=1 Q
"RTN","PSSDSAPI",157,0)
 Q
"RTN","PSSDSAPI",158,0)
 ;
"RTN","PSSDSAPI",159,0)
 ;
"RTN","PSSDSAPI",160,0)
STN ;Standard Logic
"RTN","PSSDSAPI",161,0)
 S PSSFWFLG=0 K PSSFWRST I $G(PSSFWSC)="" Q
"RTN","PSSDSAPI",162,0)
 N PSSFWLP2,PSSFWAA,PSSFWAAD,PSSFWAAM,PSSFWAMN,PSSFWAWK,PSSFWAXL,PSSFWAXW
"RTN","PSSDSAPI",163,0)
 F PSSFWLP2=0:0 S PSSFWLP2=$O(^PS(51.1,"APPSJ",PSSFWSC,PSSFWLP2)) Q:'PSSFWLP2!(PSSFWFLG)  D
"RTN","PSSDSAPI",164,0)
 .K PSSFWAA,PSSFWAAD
"RTN","PSSDSAPI",165,0)
 .S PSSFWAA=$P($G(^PS(51.1,PSSFWLP2,0)),"^",3)
"RTN","PSSDSAPI",166,0)
 .Q:'$G(PSSFWAA)
"RTN","PSSDSAPI",167,0)
 .S PSSFWAAD=1440/PSSFWAA
"RTN","PSSDSAPI",168,0)
 .I PSSFWAAD?.N S PSSFWRST=PSSFWAAD,PSSFWFLG=1 Q
"RTN","PSSDSAPI",169,0)
 .I PSSFWAAD>1 Q
"RTN","PSSDSAPI",170,0)
 .S PSSFWAAM=PSSFWAA/1440
"RTN","PSSDSAPI",171,0)
 .I PSSFWAAM?.N D  Q
"RTN","PSSDSAPI",172,0)
 ..S PSSFWAMN=PSSFWAAM/30 I PSSFWAMN?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWAMN_"L" Q
"RTN","PSSDSAPI",173,0)
 ..S PSSFWAWK=PSSFWAAM/7 I PSSFWAWK?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWAWK_"W" Q
"RTN","PSSDSAPI",174,0)
 ..S PSSFWFLG=1,PSSFWRST="Q"_PSSFWAAM_"D" Q
"RTN","PSSDSAPI",175,0)
 .I PSSFWAA'>10080 S PSSFWAXW=10080/PSSFWAA I PSSFWAXW?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWAXW_"W" Q
"RTN","PSSDSAPI",176,0)
 .S PSSFWAXL=43200/PSSFWAA I PSSFWAXL?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWAXL_"L" Q
"RTN","PSSDSAPI",177,0)
 I PSSFWFLG D DURLS I PSSFWFLG S PSSFWPR1=1 Q
"RTN","PSSDSAPI",178,0)
 I PSSFWSC?1"Q"1N.N1"H" S PSSFWRST=PSSFWSC,PSSFWFLG=1 D DURLS I PSSFWFLG S PSSFWPR1=1
"RTN","PSSDSAPI",179,0)
 Q
"RTN","PSSDSAPI",180,0)
 ;
"RTN","PSSDSAPI",181,0)
 ;
"RTN","PSSDSAPI",182,0)
STNO ;Standard Logic part 2, using File 51, For Outpatient Orders only
"RTN","PSSDSAPI",183,0)
 S PSSFWFLG=0 K PSSFWRST I $G(PSSFWSC)="" Q
"RTN","PSSDSAPI",184,0)
 N PSSFWLP3,PSSFWBA,PSSFWBAD,PSSFWBAM,PSSFWBMN,PSSFWBWK,PSSFWBXL,PSSFWBXW
"RTN","PSSDSAPI",185,0)
 F PSSFWLP3=0:0 S PSSFWLP3=$O(^PS(51,"B",PSSFWSC,PSSFWLP3)) Q:'PSSFWLP3!(PSSFWFLG)  I '$G(^PS(51,"B",PSSFWSC,PSSFWLP3)) D
"RTN","PSSDSAPI",186,0)
 .K PSSFWBA,PSSFWBAD
"RTN","PSSDSAPI",187,0)
 .S PSSFWBA=$P($G(^PS(51,PSSFWLP3,0)),"^",8)
"RTN","PSSDSAPI",188,0)
 .Q:'$G(PSSFWBA)
"RTN","PSSDSAPI",189,0)
 .S PSSFWBAD=1440/PSSFWBA
"RTN","PSSDSAPI",190,0)
 .I PSSFWBAD?.N S PSSFWRST=PSSFWBAD,PSSFWFLG=1 Q
"RTN","PSSDSAPI",191,0)
 .I PSSFWBAD>1 Q
"RTN","PSSDSAPI",192,0)
 .S PSSFWBAM=PSSFWBA/1440
"RTN","PSSDSAPI",193,0)
 .I PSSFWBAM?.N D  Q
"RTN","PSSDSAPI",194,0)
 ..S PSSFWBMN=PSSFWBAM/30 I PSSFWBMN?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWBMN_"L" Q
"RTN","PSSDSAPI",195,0)
 ..S PSSFWBWK=PSSFWBAM/7 I PSSFWBWK?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWBWK_"W" Q
"RTN","PSSDSAPI",196,0)
 ..S PSSFWFLG=1,PSSFWRST="Q"_PSSFWBAM_"D" Q
"RTN","PSSDSAPI",197,0)
 .I PSSFWBA'>10080 S PSSFWBXW=10080/PSSFWBA I PSSFWBXW?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWBXW_"W" Q
"RTN","PSSDSAPI",198,0)
 .S PSSFWBXL=43200/PSSFWBA I PSSFWBXL?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWBXL_"L" Q
"RTN","PSSDSAPI",199,0)
 I PSSFWFLG D DURLS I PSSFWFLG S PSSFWPR1=1 Q
"RTN","PSSDSAPI",200,0)
 I PSSFWSC?1"Q"1N.N1"H" S PSSFWRST=PSSFWSC,PSSFWFLG=1 D DURLS I PSSFWFLG S PSSFWPR1=1
"RTN","PSSDSAPI",201,0)
 Q
"RTN","PSSDSAPI",202,0)
 ;
"RTN","PSSDSAPI",203,0)
 ;
"RTN","PSSDSAPI",204,0)
DS() ; Return 1 if Dose Checks are enabled, return 0 if Dose Checks are not enabled
"RTN","PSSDSAPI",205,0)
 Q $S($P($G(^PS(59.7,1,81)),"^"):1,1:"0^Maximum Single Dose Order Check is not available; please complete a manual check for appropriate Dosing.")
"RTN","PSSDSAPI",206,0)
 ;
"RTN","PSSDSAPI",207,0)
 ;
"RTN","PSSDSAPI",208,0)
IV(PSSADFOI) ;Return Additive Frequency default to CPRS, Forum DBIA 5425
"RTN","PSSDSAPI",209,0)
 ;PSSADFOI = File 50.7 Internal Entry Number
"RTN","PSSDSAPI",210,0)
 N PSSADFRS,PSSADFIN,PSSADFLP,PSSADFXX,PSSADFHD,PSSADFNN,PSSADFER,PSSADFCT
"RTN","PSSDSAPI",211,0)
 S PSSADFRS="",(PSSADFXX,PSSADFCT)=0
"RTN","PSSDSAPI",212,0)
 I '$G(PSSADFOI) Q PSSADFRS
"RTN","PSSDSAPI",213,0)
 F PSSADFLP=0:0 S PSSADFLP=$O(^PS(52.6,"AOI",PSSADFOI,PSSADFLP)) Q:'PSSADFLP!(PSSADFXX)  D
"RTN","PSSDSAPI",214,0)
 .S PSSADFIN=$P($G(^PS(52.6,PSSADFLP,"I")),"^")
"RTN","PSSDSAPI",215,0)
 .I PSSADFIN,PSSADFIN'>DT Q
"RTN","PSSDSAPI",216,0)
 .S PSSADFNN=PSSADFLP_","
"RTN","PSSDSAPI",217,0)
 .S PSSADFHD=$$GET1^DIQ(52.6,PSSADFNN,18,"I",,"PSSADFER") I PSSADFHD="" S PSSADFXX=1 Q
"RTN","PSSDSAPI",218,0)
 .I 'PSSADFCT S PSSADFRS=PSSADFHD S PSSADFCT=1 Q
"RTN","PSSDSAPI",219,0)
 .I PSSADFHD'=PSSADFRS S PSSADFXX=1
"RTN","PSSDSAPI",220,0)
 I PSSADFXX S PSSADFRS=""
"RTN","PSSDSAPI",221,0)
 Q PSSADFRS
"RTN","PSSDSAPI",222,0)
 ;
"RTN","PSSDSAPI",223,0)
 ;
"RTN","PSSDSAPI",224,0)
BSA(PSSBSADF) ;
"RTN","PSSDSAPI",225,0)
 I '$G(PSSBSADF) Q "0^0"
"RTN","PSSDSAPI",226,0)
 N DFN,VADM,VAPTYP,VAHOW,VAROOT,VAERR,VA,X1,X2,X,%Y,PSSBSAW1,PSSBSAW2,PSSBSAH1,PSSBSAH2,GMRVSTR,PSSBSAB2,PSSBSAH3
"RTN","PSSDSAPI",227,0)
 S DFN=PSSBSADF
"RTN","PSSDSAPI",228,0)
 S (PSSBSAW2,PSSBSAH2,PSSBSAB2,PSSBSAH3)=0
"RTN","PSSDSAPI",229,0)
 S GMRVSTR="WT" K X D EN6^GMRVUTL
"RTN","PSSDSAPI",230,0)
 S PSSBSAW1=$P(X,"^",8) I PSSBSAW1 S PSSBSAW2=PSSBSAW1/2.2
"RTN","PSSDSAPI",231,0)
 S DFN=PSSBSADF
"RTN","PSSDSAPI",232,0)
 S GMRVSTR="HT" K X D EN6^GMRVUTL
"RTN","PSSDSAPI",233,0)
 S PSSBSAH1=$P(X,"^",8) I PSSBSAH1 S PSSBSAH2=.0254*PSSBSAH1,PSSBSAH3=$J(PSSBSAH1*2.54,0,2)
"RTN","PSSDSAPI",234,0)
 ;Using DuBios formula for BSA calculation, and sending in 2 decimal places
"RTN","PSSDSAPI",235,0)
 I $G(PSSBSAW2),$G(PSSBSAH2) S PSSBSAB2=.20247*(PSSBSAH2**.725)*(PSSBSAW2**.425)
"RTN","PSSDSAPI",236,0)
 ;I $G(PSSBSAW2),$G(PSSBSAH2) S PSSBSAB2=$J((((PSSBSAW2*PSSBSAH2)/3600)**.5),0,2)    Mosteller BSA Formula
"RTN","PSSDSAPI",237,0)
 Q PSSBSAH3_"^"_PSSBSAW2_"^"_PSSBSAB2
"RTN","PSSDSAPI",238,0)
 ;
"RTN","PSSDSAPI",239,0)
 ;
"RTN","PSSDSAPI",240,0)
UNITD(PSSVUTUN) ;Find First DataBank Unit, can't do DIC Lookup because of exact match check
"RTN","PSSDSAPI",241,0)
 ;Returns Null or First DataBank Unit for text passed in
"RTN","PSSDSAPI",242,0)
 N PSSVUTX,PSSVUTZ,PSSVUTAA,PSSVUTFL
"RTN","PSSDSAPI",243,0)
 S PSSVUTFL=0 I $G(PSSVUTUN)="" S PSSVUTZ="" G UNITDX
"RTN","PSSDSAPI",244,0)
 S PSSVUTAA=$$UP^XLFSTR(PSSVUTUN)
"RTN","PSSDSAPI",245,0)
UNITDP ;
"RTN","PSSDSAPI",246,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"B",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="",$P($G(^PS(51.24,PSSVUTX,0)),"^",3)=0 G UNITDX
"RTN","PSSDSAPI",247,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"C",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="",$P($G(^PS(51.24,PSSVUTX,0)),"^",3)=0 G UNITDX
"RTN","PSSDSAPI",248,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"D",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="",$P($G(^PS(51.24,PSSVUTX,0)),"^",3)=0 G UNITDX
"RTN","PSSDSAPI",249,0)
 K PSSVUTZ I 'PSSVUTFL,$G(PSSVUTUN)["/" S PSSVUTFL=1,PSSVUTAA=$P(PSSVUTUN,"/"),PSSVUTAA=$$UP^XLFSTR(PSSVUTAA) G:PSSVUTAA'="" UNITDP
"RTN","PSSDSAPI",250,0)
UNITDX ;
"RTN","PSSDSAPI",251,0)
 Q $G(PSSVUTZ)
"RTN","PSSDSAPI",252,0)
 ;
"RTN","PSSDSAPI",253,0)
 ;
"RTN","PSSDSAPI",254,0)
DURLS ;If Duration is less that 24 hours, make Frequency adjustments if applicable
"RTN","PSSDSAPI",255,0)
 ;Only check Frequencies of a whole number or in the format of Q#H
"RTN","PSSDSAPI",256,0)
 N PSSDK1,PSSDK2,PSSDK3,PSSDK4,PSSDK5,PSSDK6
"RTN","PSSDSAPI",257,0)
 S (PSSDK4,PSSFWPR7)=PSSFWRST
"RTN","PSSDSAPI",258,0)
 I $G(PSSFWDRL)="" Q
"RTN","PSSDSAPI",259,0)
 S PSSDK1=$$DRT^PSSDSAPD(PSSFWDRL) I PSSDK1'<1440!(PSSDK1'>0) Q
"RTN","PSSDSAPI",260,0)
 S PSSDK2=1440/PSSDK1
"RTN","PSSDSAPI",261,0)
 I PSSDK4?.N D  Q
"RTN","PSSDSAPI",262,0)
 .S PSSDK5=PSSDK4/PSSDK2
"RTN","PSSDSAPI",263,0)
 .I PSSDK5<1 K PSSFWRST S PSSFWFLG=0 Q
"RTN","PSSDSAPI",264,0)
 .S PSSDK6=$J(PSSDK5,0,0)
"RTN","PSSDSAPI",265,0)
 .S PSSFWRST=PSSDK6
"RTN","PSSDSAPI",266,0)
 I PSSDK4?1"Q"1N.N1"H" D  Q
"RTN","PSSDSAPI",267,0)
 .S PSSDK3=$$FRCON^PSSDSAPK(PSSDK4)
"RTN","PSSDSAPI",268,0)
 .S PSSDK5=PSSDK3/PSSDK2
"RTN","PSSDSAPI",269,0)
 .I PSSDK5<1 K PSSFWRST S PSSFWFLG=0 Q
"RTN","PSSDSAPI",270,0)
 .S PSSDK6=$J(PSSDK5,0,0)
"RTN","PSSDSAPI",271,0)
 .S PSSFWRST=PSSDK6
"RTN","PSSDSAPI",272,0)
 Q
"RTN","PSSDSAPI",273,0)
 ;
"RTN","PSSDSAPI",274,0)
 ;
"RTN","PSSDSAPI",275,0)
DLTM(PSSNVTOI) ;Check if all drugs for a Non-VA Med order are exempt, if so, kill Input exceptions and Quit
"RTN","PSSDSAPI",276,0)
 N PSSNVT1,PSSNVTFL,PSSNVTIN
"RTN","PSSDSAPI",277,0)
 S PSSNVTFL=1
"RTN","PSSDSAPI",278,0)
 F PSSNVT1=0:0 S PSSNVT1=$O(^PSDRUG("ASP",PSSNVTOI,PSSNVT1)) Q:'PSSNVT1!('PSSNVTFL)  D
"RTN","PSSDSAPI",279,0)
 .I $P($G(^PSDRUG(PSSNVT1,2)),"^",3)'["X" Q
"RTN","PSSDSAPI",280,0)
 .S PSSNVTIN=$P($G(^PSDRUG(PSSNVT1,"I")),"^") I PSSNVTIN,PSSNVTIN<DT Q
"RTN","PSSDSAPI",281,0)
 .S PSSNVTFL=$$EXMT^PSSDSAPI(PSSNVT1)
"RTN","PSSDSAPI",282,0)
 Q PSSNVTFL
"RTN","PSSDSAPI",283,0)
 ;
"RTN","PSSDSAPI",284,0)
 ;
"RTN","PSSDSAPI",285,0)
EMSY() ;Return 1 if there are matched supplies, no active drugs, regardless of Package use
"RTN","PSSDSAPI",286,0)
 N PSSKST1,PSSKST2,PSSKST3,PSSKST4,PSSKST5,PSSKST6,PSSKST9
"RTN","PSSDSAPI",287,0)
 S (PSSKST9,PSSKST6)=0
"RTN","PSSDSAPI",288,0)
 F PSSKST1=0:0 S PSSKST1=$O(^PSDRUG("ASP",PSSNBOI,PSSKST1)) Q:'PSSKST1!(PSSKST9)  D
"RTN","PSSDSAPI",289,0)
 .S PSSKST4=0,PSSKST2=$P($G(^PSDRUG(PSSKST1,"I")),"^") I PSSKST2,PSSKST2'>DT S PSSKST4=1
"RTN","PSSDSAPI",290,0)
 .S PSSKST5=$$SUP(PSSKST1)
"RTN","PSSDSAPI",291,0)
 .I 'PSSKST5,'PSSKST4 S PSSKST9=1 Q
"RTN","PSSDSAPI",292,0)
 .I 'PSSKST4,PSSKST5 S PSSKST6=1
"RTN","PSSDSAPI",293,0)
 I 'PSSKST9,PSSKST6 S $P(PSSNBRS,";",5)=0 Q 0
"RTN","PSSDSAPI",294,0)
 Q 1
"RTN","PSSDSAPM")
0^4^B245057882
"RTN","PSSDSAPM",1,0)
PSSDSAPM ;BIR/RTR-Dose Check utilities routine ;09/13/10
"RTN","PSSDSAPM",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,168,160,173**;9/30/97;Build 9
"RTN","PSSDSAPM",3,0)
 ;
"RTN","PSSDSAPM",4,0)
 ;
"RTN","PSSDSAPM",5,0)
 ;DRG - returns best Dispense Drug to use for Order Checks when only the Orderable Item is available
"RTN","PSSDSAPM",6,0)
 ;Input:
"RTN","PSSDSAPM",7,0)
 ;   PSSNBOI - Pharmacy orderable Item from #50.7
"RTN","PSSDSAPM",8,0)
 ;   PSSNBPK - package Use,  I for Inpatient, O for Outpatient, X for Non-VA Meds
"RTN","PSSDSAPM",9,0)
 ;   PSSNBOR - defined only if being called from CPRS, 1 for Enhanced Order Checks, 2 for Dosing
"RTN","PSSDSAPM",10,0)
 ;Output:
"RTN","PSSDSAPM",11,0)
 ;   nnn;nnn;nnnn - First piece is File 50 Internal Number, Second piece is VA Generic Internal number, Third piece
"RTN","PSSDSAPM",12,0)
 ;   will be the GCNSEQNO number. Piece 1 ';' is 0 if no drug found.                              
"RTN","PSSDSAPM",13,0)
 ;   Piece 2 will be null if drug not matched to National Drug File
"RTN","PSSDSAPM",14,0)
 ;   Piece 3 will be the GCNSEQNO number, if the NDF match has a GCNSEQNO number
"RTN","PSSDSAPM",15,0)
 ;   Piece 4 is returned as 1 if the call is from CPRS for enhanced order checks, and it indicates no drug was returned
"RTN","PSSDSAPM",16,0)
 ;   or a drug was returned, but there is an active supply tied to the Orderable Item, indicating CPRS should also do
"RTN","PSSDSAPM",17,0)
 ;   the duplicate supply check
"RTN","PSSDSAPM",18,0)
 ;   Piece 5 is returned as 1 if CPRS is getting a drug for the Enhanced Order Checks call, and they should
"RTN","PSSDSAPM",19,0)
 ;   display the error message for all order checks and not do the Dosing call
"RTN","PSSDSAPM",20,0)
 ;
"RTN","PSSDSAPM",21,0)
 ;
"RTN","PSSDSAPM",22,0)
 ;hierarchy: (Drug must be active)
"RTN","PSSDSAPM",23,0)
 ;1 - Exact Package Match, matched to NDF with GCNSEQNO
"RTN","PSSDSAPM",24,0)
 ;2 - No package match, but second choice package exists, matched to NDF with GCNSEQNO
"RTN","PSSDSAPM",25,0)
 ;3 - No package match, but third choice package exists, matched to NDF with GCNSEQNO
"RTN","PSSDSAPM",26,0)
 ;4 - No package match, but fourth choice package exists, matched to NDF with GCNSEQNO
"RTN","PSSDSAPM",27,0)
 ;5 - No package match, matched to NDF with GCNSEQNO
"RTN","PSSDSAPM",28,0)
 ;6 - Exact Package Match, matched to NDF with no GCNSEQNO
"RTN","PSSDSAPM",29,0)
 ;7 - No package match, but second choice package exists, matched to NDF with no GCNSEQNO
"RTN","PSSDSAPM",30,0)
 ;8 - No package match, but third choice package exists, matched to NDF with no GCNSEQNO
"RTN","PSSDSAPM",31,0)
 ;9 - No package match, but fourth choice package exists, matched to NDF with no GCNSEQNO
"RTN","PSSDSAPM",32,0)
 ;10 - No package match, matched to NDF with no GCNSEQNO
"RTN","PSSDSAPM",33,0)
 ;11 - Exact Package Match, not matched to NDF
"RTN","PSSDSAPM",34,0)
 ;12 - No package match, but second choice package exists, not matched to NDF
"RTN","PSSDSAPM",35,0)
 ;13 - No package match, but third choice package exists, not matched to NDF
"RTN","PSSDSAPM",36,0)
 ;14 - No package match, but fourth choice package exists, not matched to NDF
"RTN","PSSDSAPM",37,0)
 ;15 - No package match, package is null or some other package that is not one of the 4 primary packages (O, I U, X), matched to NDF
"RTN","PSSDSAPM",38,0)
 ;16 - No package match, not matched to NDF, package is null or some other package that is not one of the 4 primary packages (O, I U, X)
"RTN","PSSDSAPM",39,0)
 ;
"RTN","PSSDSAPM",40,0)
 ;** CPRS and Inpatient always passes in "I" for PSSNBPK variable, so drugs with "I" and "U" application packages are 
"RTN","PSSDSAPM",41,0)
 ;         evaluated as either or in the APP subroutine.  In the hierarchy above 1 or 2,  6 or 7 and 11 or 12 are 
"RTN","PSSDSAPM",42,0)
 ;         considered to be exact matches.  Outpatient evaluates "I" and "U" separately.  
"RTN","PSSDSAPM",43,0)
 ;
"RTN","PSSDSAPM",44,0)
 ;Second/Third Choice packages:
"RTN","PSSDSAPM",45,0)
 ;Outpatient - U for Unit dose, I for IV, then X for Non-VA med
"RTN","PSSDSAPM",46,0)
 ;Inpatient - O for outpatient then X
"RTN","PSSDSAPM",47,0)
 ;Non-VA Meds - O, U then I
"RTN","PSSDSAPM",48,0)
 ;
"RTN","PSSDSAPM",49,0)
 ;PSNBLOW holds current number in array, only reset array entry if lower number is found
"RTN","PSSDSAPM",50,0)
 ;PSSNBSTP stops the loop because you found the best possible drug, no need to set PSSNBLOW in this case
"RTN","PSSDSAPM",51,0)
 ;
"RTN","PSSDSAPM",52,0)
 ;
"RTN","PSSDSAPM",53,0)
DRG(PSSNBOI,PSSNBPK,PSSNBOR) ;
"RTN","PSSDSAPM",54,0)
 I '$G(PSSNBOI) Q "0;;"_$S($G(PSSNBOR)=1&($G(PSSNBPK)="I"!($G(PSSNBPK)="U")):";1;1",$G(PSSNBOR)=1:";1",1:"")
"RTN","PSSDSAPM",55,0)
 I $G(PSSNBPK)'="O",$G(PSSNBPK)'="I",$G(PSSNBPK)'="U",$G(PSSNBPK)'="X" Q "0;;"_$S($G(PSSNBOR)=1:";1;1",1:"")
"RTN","PSSDSAPM",56,0)
 N PSSNB1,PSSNBRS,PSSNBSTP,PSSNBIN,PSSNBAPP,PSSNBLOW,PSSNBARR,PSSNBAP1,PSSNBARX,PSSNONE,PSSNS1,PSSNS2,PSSNS3,PSSNS4,PSSNBOF,PSSNBOD,PSSNBOL,PSSNBOA,PSSNBO3
"RTN","PSSDSAPM",57,0)
 S PSSNBSTP=0,PSSNBLOW=16
"RTN","PSSDSAPM",58,0)
 S PSSNBRS="0;;"
"RTN","PSSDSAPM",59,0)
 ;package preference sequence defined
"RTN","PSSDSAPM",60,0)
 I PSSNBPK["O" S PSSNS1="O",PSSNS2="U",PSSNS3="I",PSSNS4="X"
"RTN","PSSDSAPM",61,0)
 I PSSNBPK["I" S PSSNS1="I",PSSNS2="U",PSSNS3="O",PSSNS4="X"
"RTN","PSSDSAPM",62,0)
 I PSSNBPK["U" S PSSNS1="U",PSSNS2="I",PSSNS3="O",PSSNS4="X"
"RTN","PSSDSAPM",63,0)
 I PSSNBPK["X" S PSSNS1="X",PSSNS2="O",PSSNS3="U",PSSNS4="I"
"RTN","PSSDSAPM",64,0)
 F PSSNB1=0:0 S PSSNB1=$O(^PSDRUG("ASP",PSSNBOI,PSSNB1)) Q:'PSSNB1!(PSSNBSTP)  D:'$$DREX
"RTN","PSSDSAPM",65,0)
 .S PSSNBIN=$P($G(^PSDRUG(PSSNB1,"I")),"^") I PSSNBIN,PSSNBIN'>DT Q
"RTN","PSSDSAPM",66,0)
 .S PSSNBAPP=$P($G(^PSDRUG(PSSNB1,2)),"^",3)
"RTN","PSSDSAPM",67,0)
 .S PSSNBAP1=$$GCN
"RTN","PSSDSAPM",68,0)
 .D APP
"RTN","PSSDSAPM",69,0)
 S PSSNBARX=$O(PSSNBARR(0))
"RTN","PSSDSAPM",70,0)
 I PSSNBARX S PSSNBRS=$G(PSSNBARR(PSSNBARX))
"RTN","PSSDSAPM",71,0)
 I $G(PSSNBOR)=1 D
"RTN","PSSDSAPM",72,0)
 .I '$P(PSSNBRS,";") S $P(PSSNBRS,";",4)=1 Q
"RTN","PSSDSAPM",73,0)
 .S PSSNBOF=0 F PSSNBOL=0:0 S PSSNBOL=$O(^PSDRUG("ASP",PSSNBOI,PSSNBOL)) Q:'PSSNBOL!(PSSNBOF)  D
"RTN","PSSDSAPM",74,0)
 ..I '$$SUP^PSSDSAPI(PSSNBOL) Q
"RTN","PSSDSAPM",75,0)
 ..S PSSNBO3=$P($G(^PSDRUG(PSSNBOL,2)),"^",3),PSSNBOA=$S(PSSNBPK["I"!(PSSNBPK["U"):1,1:0)
"RTN","PSSDSAPM",76,0)
 ..I PSSNBOA,PSSNBO3'["I",PSSNBO3'["O" Q
"RTN","PSSDSAPM",77,0)
 ..I 'PSSNBOA,PSSNBO3'["O",PSSNBO3'["X" Q
"RTN","PSSDSAPM",78,0)
 ..S PSSNBOD=$P($G(^PSDRUG(PSSNBOL,"I")),"^") I PSSNBOD,PSSNBOD'>DT Q
"RTN","PSSDSAPM",79,0)
 ..S $P(PSSNBRS,";",4)=1,PSSNBOF=1 Q
"RTN","PSSDSAPM",80,0)
 I $G(PSSNBOR)=1,'$P(PSSNBRS,";") I $$EMSY^PSSDSAPI S $P(PSSNBRS,";",5)=$$EMS I '$P(PSSNBRS,";",5) S $P(PSSNBRS,";",5)=$$EMSX
"RTN","PSSDSAPM",81,0)
 Q PSSNBRS
"RTN","PSSDSAPM",82,0)
 ;
"RTN","PSSDSAPM",83,0)
DREX() ;Quit if drug is exempt from order check
"RTN","PSSDSAPM",84,0)
 I $G(PSSINCFO)!($G(PSSNBOR)=2) Q $$EXMT^PSSDSAPI(PSSNB1)
"RTN","PSSDSAPM",85,0)
 Q $$SUP^PSSDSAPI(PSSNB1)
"RTN","PSSDSAPM",86,0)
 ;
"RTN","PSSDSAPM",87,0)
EMS() ;Sets piece 5 of output to 1 if CPRS needs to show error message and not do Dose check
"RTN","PSSDSAPM",88,0)
 I PSSNBPK'="U",PSSNBPK'="I" Q 0
"RTN","PSSDSAPM",89,0)
 I $$PRE^PSSDSAPK(PSSNBOI,"U")=1 Q 1
"RTN","PSSDSAPM",90,0)
 Q 0
"RTN","PSSDSAPM",91,0)
 ;
"RTN","PSSDSAPM",92,0)
EMSX() ;Sets piece 5 of output to 1 if no active drugs are tied to the orderable Item
"RTN","PSSDSAPM",93,0)
 N PSSKRC1,PSSKRC2,PSSKRC3,PSSKRC4,PSSKRC9
"RTN","PSSDSAPM",94,0)
 S (PSSKRC3,PSSKRC9,PSSKRC4)=0
"RTN","PSSDSAPM",95,0)
 F PSSKRC1=0:0 S PSSKRC1=$O(^PSDRUG("ASP",PSSNBOI,PSSKRC1)) Q:'PSSKRC1!(PSSKRC9)  D
"RTN","PSSDSAPM",96,0)
 .S PSSKRC2=$P($G(^PSDRUG(PSSKRC1,"I")),"^") I PSSKRC2,PSSKRC2'>DT D:'PSSKRC4  Q
"RTN","PSSDSAPM",97,0)
 ..I '$$SUP^PSSDSAPI(PSSKRC1) S PSSKRC4=1
"RTN","PSSDSAPM",98,0)
 .S PSSKRC3=1
"RTN","PSSDSAPM",99,0)
 .I '$$SUP^PSSDSAPI(PSSKRC1) S PSSKRC9=1
"RTN","PSSDSAPM",100,0)
 I 'PSSKRC3,PSSKRC4 S PSSKRC9=1
"RTN","PSSDSAPM",101,0)
 Q PSSKRC9
"RTN","PSSDSAPM",102,0)
 ;
"RTN","PSSDSAPM",103,0)
APP ;
"RTN","PSSDSAPM",104,0)
 I PSSNBAPP[PSSNS1,$P(PSSNBAP1,";",3) S PSSNBARR(1)=PSSNBAP1,PSSNBSTP=1 Q
"RTN","PSSDSAPM",105,0)
 Q:PSSNBLOW<2
"RTN","PSSDSAPM",106,0)
 I PSSNBAPP[PSSNS2,$P(PSSNBAP1,";",3) S PSSNBARR(2)=PSSNBAP1,PSSNBLOW=2 Q
"RTN","PSSDSAPM",107,0)
 I PSSNBAPP[PSSNS1!(PSSNBAPP[PSSNS2),$P(PSSNBAP1,";",3) S PSSNBARR(1)=PSSNBAP1,PSSNBSTP=1 Q
"RTN","PSSDSAPM",108,0)
 Q:PSSNBLOW<3
"RTN","PSSDSAPM",109,0)
 I PSSNBAPP[PSSNS3,$P(PSSNBAP1,";",3) S PSSNBARR(3)=PSSNBAP1,PSSNBLOW=3 Q
"RTN","PSSDSAPM",110,0)
 Q:PSSNBLOW<4
"RTN","PSSDSAPM",111,0)
 I PSSNBAPP[PSSNS4,$P(PSSNBAP1,";",3) S PSSNBARR(4)=PSSNBAP1,PSSNBLOW=4 Q
"RTN","PSSDSAPM",112,0)
 Q:PSSNBLOW<5
"RTN","PSSDSAPM",113,0)
 I $P(PSSNBAP1,";",3) S PSSNBARR(5)=PSSNBAP1,PSSNBLOW=5 Q
"RTN","PSSDSAPM",114,0)
 Q:PSSNBLOW<6
"RTN","PSSDSAPM",115,0)
 I PSSNBAPP[PSSNS1,PSSNBAP1 S PSSNBARR(6)=PSSNBAP1,PSSNBLOW=6 Q
"RTN","PSSDSAPM",116,0)
 Q:PSSNBLOW<7
"RTN","PSSDSAPM",117,0)
 I PSSNBAPP[PSSNS2,PSSNBAP1 S PSSNBARR(7)=PSSNBAP1,PSSNBLOW=7 Q
"RTN","PSSDSAPM",118,0)
 I PSSNBAPP[PSSNS1!(PSSNBAPP[PSSNS2),PSSNBAP1 S PSSNBARR(6)=PSSNBAP1,PSSNBLOW=6,PSSNBSTP=1 Q
"RTN","PSSDSAPM",119,0)
 Q:PSSNBLOW<8
"RTN","PSSDSAPM",120,0)
 I PSSNBAPP[PSSNS3,PSSNBAP1 S PSSNBARR(8)=PSSNBAP1,PSSNBLOW=8 Q
"RTN","PSSDSAPM",121,0)
 Q:PSSNBLOW<9
"RTN","PSSDSAPM",122,0)
 I PSSNBAPP[PSSNS4,PSSNBAP1 S PSSNBARR(9)=PSSNBAP1,PSSNBLOW=9 Q
"RTN","PSSDSAPM",123,0)
 Q:PSSNBLOW<10
"RTN","PSSDSAPM",124,0)
 I $P(PSSNBAP1,";",2) S PSSNBARR(10)=PSSNBAP1,PSSNBLOW=10 Q
"RTN","PSSDSAPM",125,0)
 Q:PSSNBLOW<11
"RTN","PSSDSAPM",126,0)
 I PSSNBAPP[PSSNS1 S PSSNBARR(11)=PSSNB1_";;",PSSNBLOW=11 Q
"RTN","PSSDSAPM",127,0)
 Q:PSSNBLOW<12
"RTN","PSSDSAPM",128,0)
 I PSSNBAPP[PSSNS2 S PSSNBARR(12)=PSSNB1_";;",PSSNBLOW=12 Q
"RTN","PSSDSAPM",129,0)
 I PSSNBAPP[PSSNS1!(PSSNBAPP[PSSNS2) S PSSNBARR(11)=PSSNB1_";;",PSSNBLOW=11,PSSNBSTP=1 Q
"RTN","PSSDSAPM",130,0)
 Q:PSSNBLOW<13
"RTN","PSSDSAPM",131,0)
 I PSSNBAPP[PSSNS3 S PSSNBARR(13)=PSSNB1_";;",PSSNBLOW=13 Q
"RTN","PSSDSAPM",132,0)
 Q:PSSNBLOW<14
"RTN","PSSDSAPM",133,0)
 I PSSNBAPP[PSSNS4 S PSSNBARR(14)=PSSNB1_";;",PSSNBLOW=14 Q
"RTN","PSSDSAPM",134,0)
 Q:PSSNBLOW<15
"RTN","PSSDSAPM",135,0)
 I PSSNBAP1 S PSSNBARR(15)=PSSNBAP1,PSSNBLOW=15 Q
"RTN","PSSDSAPM",136,0)
 Q:PSSNBLOW<16
"RTN","PSSDSAPM",137,0)
 S PSSNBARR(16)=PSSNB1_";;",PSSNBLOW=16
"RTN","PSSDSAPM",138,0)
 Q
"RTN","PSSDSAPM",139,0)
 ;
"RTN","PSSDSAPM",140,0)
GCN() ;Returns drug matching information
"RTN","PSSDSAPM",141,0)
 N PSSNBGC1,PSSNBGC3,PSSNBGRS
"RTN","PSSDSAPM",142,0)
 S PSSNBGC1=$P($G(^PSDRUG(PSSNB1,"ND")),"^"),PSSNBGC3=$P($G(^PSDRUG(PSSNB1,"ND")),"^",3)
"RTN","PSSDSAPM",143,0)
 I 'PSSNBGC1!('PSSNBGC3) Q 0
"RTN","PSSDSAPM",144,0)
 S PSSNBGRS=$$PROD0^PSNAPIS(PSSNBGC1,PSSNBGC3)
"RTN","PSSDSAPM",145,0)
 I $P(PSSNBGRS,"^",7) Q PSSNB1_";"_PSSNBGC1_";"_$P(PSSNBGRS,"^",7)
"RTN","PSSDSAPM",146,0)
 Q PSSNB1_";"_PSSNBGC1
"RTN","PSSDSAPM",147,0)
 ;
"RTN","PSSDSAPM",148,0)
 ;
"RTN","PSSDSAPM",149,0)
MLT ;Multi Ingredient check called from PSSDSAPD
"RTN","PSSDSAPM",150,0)
 D ITEM^PSSDSAPK D:'PSSDBFAL NUM^PSSDSAPL
"RTN","PSSDSAPM",151,0)
 I '$G(PSSDBIFG) Q
"RTN","PSSDSAPM",152,0)
 N PSSMLT1,PSSMLT2,PSSMLT3,DA
"RTN","PSSDSAPM",153,0)
 S PSSMLT1=$P($G(^PSDRUG(PSSDBIFG,"ND")),"^"),PSSMLT3=$P($G(^PSDRUG(PSSDBIFG,"ND")),"^",3)
"RTN","PSSDSAPM",154,0)
 I 'PSSMLT1!('PSSMLT3) D MLTS Q
"RTN","PSSDSAPM",155,0)
 S PSSMLT2=$$TLS^PSSDSAPA(PSSMLT1,PSSMLT3) I PSSMLT2 D MLTS Q
"RTN","PSSDSAPM",156,0)
 I $$MLTSU D MLTS
"RTN","PSSDSAPM",157,0)
 Q
"RTN","PSSDSAPM",158,0)
 ;
"RTN","PSSDSAPM",159,0)
 ;
"RTN","PSSDSAPM",160,0)
MLTS ;
"RTN","PSSDSAPM",161,0)
 K PSSDBAR("AMN"),PSSDBAR("UNIT")
"RTN","PSSDSAPM",162,0)
 S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"MUING")=""
"RTN","PSSDSAPM",163,0)
 Q
"RTN","PSSDSAPM",164,0)
 ;
"RTN","PSSDSAPM",165,0)
 ;
"RTN","PSSDSAPM",166,0)
MLTSU() ;
"RTN","PSSDSAPM",167,0)
 N X,Y,PSSMKT2,PSSMKT5,PSSMKT6,PSSMKT7
"RTN","PSSDSAPM",168,0)
 S PSSMKT2=$$DFSU^PSNAPIS(PSSMLT1,PSSMLT3)
"RTN","PSSDSAPM",169,0)
 S PSSMKT5=$P(PSSMKT2,"^",6) I PSSMKT5="" Q 1
"RTN","PSSDSAPM",170,0)
 S PSSMKT6=$$UNITM(PSSMKT5) I PSSMKT6'="" Q 1
"RTN","PSSDSAPM",171,0)
 S PSSMKT7=$$UNIT^PSSDSAPI(PSSMKT5) I PSSMKT7="" Q 1
"RTN","PSSDSAPM",172,0)
 Q 0
"RTN","PSSDSAPM",173,0)
 ;
"RTN","PSSDSAPM",174,0)
 ;
"RTN","PSSDSAPM",175,0)
UNITM(PSSXUTUN) ;Find First DataBank Unit, can't do DIC Lookup because of exact match check
"RTN","PSSDSAPM",176,0)
 ;Returns Null or First DataBank Unit for text passed in
"RTN","PSSDSAPM",177,0)
 N PSSXUTX,PSSXUTZ,PSSXUTAA,PSSXUTFL
"RTN","PSSDSAPM",178,0)
 S PSSXUTFL=0 I $G(PSSXUTUN)="" S PSSXUTZ="" G UNITDX
"RTN","PSSDSAPM",179,0)
 S PSSXUTAA=$$UP^XLFSTR(PSSXUTUN)
"RTN","PSSDSAPM",180,0)
UNITDP ;
"RTN","PSSDSAPM",181,0)
 K PSSXUTZ S PSSXUTX=$O(^PS(51.24,"B",PSSXUTAA,0)) I PSSXUTX,'$$SCREEN^XTID(51.24,.01,PSSXUTX_",") S PSSXUTZ=$P($G(^PS(51.24,PSSXUTX,0)),"^") I PSSXUTZ'="",$P($G(^PS(51.24,PSSXUTX,0)),"^",3) G UNITDX
"RTN","PSSDSAPM",182,0)
 K PSSXUTZ S PSSXUTX=$O(^PS(51.24,"C",PSSXUTAA,0)) I PSSXUTX,'$$SCREEN^XTID(51.24,.01,PSSXUTX_",") S PSSXUTZ=$P($G(^PS(51.24,PSSXUTX,0)),"^") I PSSXUTZ'="",$P($G(^PS(51.24,PSSXUTX,0)),"^",3) G UNITDX
"RTN","PSSDSAPM",183,0)
 K PSSXUTZ S PSSXUTX=$O(^PS(51.24,"D",PSSXUTAA,0)) I PSSXUTX,'$$SCREEN^XTID(51.24,.01,PSSXUTX_",") S PSSXUTZ=$P($G(^PS(51.24,PSSXUTX,0)),"^") I PSSXUTZ'="",$P($G(^PS(51.24,PSSXUTX,0)),"^",3) G UNITDX
"RTN","PSSDSAPM",184,0)
 K PSSXUTZ I 'PSSXUTFL,$G(PSSXUTUN)["/" S PSSXUTFL=1,PSSXUTAA=$P(PSSXUTUN,"/"),PSSXUTAA=$$UP^XLFSTR(PSSXUTAA) G:PSSXUTAA'="" UNITDP
"RTN","PSSDSAPM",185,0)
UNITDX ;
"RTN","PSSDSAPM",186,0)
 Q $G(PSSXUTZ)
"RTN","PSSDSAPM",187,0)
 ;
"RTN","PSSDSAPM",188,0)
 ;
"RTN","PSSDSAPM",189,0)
MLTNO ;
"RTN","PSSDSAPM",190,0)
 I $D(PSSDBCAZ(PSSDBKLP,"MUING")) S $P(PSSDBCAR(PSSDBKLP),"^",7)=1
"RTN","PSSDSAPM",191,0)
 Q
"RTN","PSSDSAPM",192,0)
 ;
"RTN","PSSDSAPM",193,0)
 ;
"RTN","PSSDSAPM",194,0)
MLTNP ;
"RTN","PSSDSAPM",195,0)
 I $D(PSSDBCAZ(PSSDBRLS,"MUING")) S $P(PSSDBCAR(PSSDBRLS),"^",7)=1
"RTN","PSSDSAPM",196,0)
 Q
"RTN","PSSDSAPM",197,0)
 ;
"RTN","PSSDSAPM",198,0)
 ;
"RTN","PSSDSAPM",199,0)
FDRUG ; Find drug, called from PSSDSAPD
"RTN","PSSDSAPM",200,0)
 N PSSINCFO S PSSINCFO=1
"RTN","PSSDSAPM",201,0)
 S PSSDBIFL=1,PSSDBIFG=$$DRG^PSSDSAPK(PSSDBFDB("OI"),$G(PSSDBFDB("PACKAGE")),$G(PSSDBDS(PSSDBLP,"MR_IEN")),$G(PSSDBFDB("OI_USAGE")))
"RTN","PSSDSAPM",202,0)
 I 'PSSDBIFG S PSSDBIFG=$$DRG(PSSDBFDB("OI"),$G(PSSDBFDB("PACKAGE"))) S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"NO_DRUG")="" S PSSDBIFG=$P(PSSDBIFG,";")
"RTN","PSSDSAPM",203,0)
 Q
"RTN","PSSDSAPM",204,0)
 ;
"RTN","PSSDSAPM",205,0)
 ;
"RTN","PSSDSAPM",206,0)
INERR ;Set OI error
"RTN","PSSDSAPM",207,0)
 N PSSNOOIX
"RTN","PSSDSAPM",208,0)
 S PSSNOOIX=$G(PSSDBFDB(PSSDBLP,"OI_ERROR",PSSDBFDB(PSSDBLP,"DRUG_NM")))
"RTN","PSSDSAPM",209,0)
 I PSSNOOIX'="" S ^TMP($J,PSSDBASE,"IN","EXCEPTIONS","OI",PSSDBFDB(PSSDBLP,"DRUG_NM"))=$P(PSSNOOIX,"^")_"^"_$P(PSSNOOIX,"^",2),PSSENO=1 D STDB
"RTN","PSSDSAPM",210,0)
 Q
"RTN","PSSDSAPM",211,0)
 ;
"RTN","PSSDSAPM",212,0)
 ;
"RTN","PSSDSAPM",213,0)
FRQE ;Set Frequency error called from PSSDSAPD
"RTN","PSSDSAPM",214,0)
 D INFERR^PSSDSAPK,FRDR^PSSDSAPK I $D(PSSDBFDB(PSSDBLP,"FRQ_ERROR")) S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"FRQ_ERROR")=""
"RTN","PSSDSAPM",215,0)
 Q
"RTN","PSSDSAPM",216,0)
 ;
"RTN","PSSDSAPM",217,0)
 ;
"RTN","PSSDSAPM",218,0)
INFUE ;Set Infusion rate error from PSSDSAPD
"RTN","PSSDSAPM",219,0)
 I $D(PSSDBFDB(PSSDBLP,"INF_ERROR")) S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"INF_ERROR")=""
"RTN","PSSDSAPM",220,0)
 Q
"RTN","PSSDSAPM",221,0)
 ;
"RTN","PSSDSAPM",222,0)
 ;
"RTN","PSSDSAPM",223,0)
ERST ;Set Dosing Sequences into error summary list
"RTN","PSSDSAPM",224,0)
 N PSSWSB1,PSSWSB2
"RTN","PSSDSAPM",225,0)
 F PSSDBEQ3=0:0 S PSSDBEQ3=$O(PSSDBEQ2(PSSDBEQ3)) Q:'PSSDBEQ3  S PSSDBCAX(PSSDBRLS,PSSDBEQ3)="" I $O(PSSDBXAX(PSSDBEQ3,""))'="",$E(PSSDBASE,1,3)'="PSJ" D
"RTN","PSSDSAPM",226,0)
 .S PSSWSB1="",PSSWSB2=0 F  S PSSWSB1=$O(PSSDBXAX(PSSDBEQ3,PSSWSB1)) Q:PSSWSB1=""!($G(PSSDBCAX(PSSDBRLS,PSSDBEQ3))["All")  S PSSWSB2=PSSWSB2+1 D
"RTN","PSSDSAPM",227,0)
 ..I PSSDBEQ3=5!(PSSDBEQ3=6)!(PSSDBEQ3=8) S PSSDBCAX(PSSDBRLS,PSSDBEQ3)=" (All" Q
"RTN","PSSDSAPM",228,0)
 ..I PSSWSB2=1 S PSSDBCAX(PSSDBRLS,PSSDBEQ3)=" (DOSE SEQ "_$P(PSSWSB1,";",4) Q
"RTN","PSSDSAPM",229,0)
 ..S PSSDBCAX(PSSDBRLS,PSSDBEQ3)=PSSDBCAX(PSSDBRLS,PSSDBEQ3)_", "_$P(PSSWSB1,";",4)
"RTN","PSSDSAPM",230,0)
 .S PSSDBCAX(PSSDBRLS,PSSDBEQ3)=PSSDBCAX(PSSDBRLS,PSSDBEQ3)_")"
"RTN","PSSDSAPM",231,0)
 Q
"RTN","PSSDSAPM",232,0)
 ;
"RTN","PSSDSAPM",233,0)
 ;
"RTN","PSSDSAPM",234,0)
PAT ;
"RTN","PSSDSAPM",235,0)
 N DFN,VADM,VAPTYP,VAHOW,VAROOT,VAERR,VA,X1,X2,X,%Y,PSSDBWT,PSSDBWTX,PSSDBHT,PSSDBHTX,GMRVSTR,PSSDBBSA,PSSDBATX
"RTN","PSSDSAPM",236,0)
 S DFN=PSSDBDFN,PSSDBATX=0
"RTN","PSSDSAPM",237,0)
 D DEM^VADPT
"RTN","PSSDSAPM",238,0)
 K X S X2=$P(VADM(3),"^"),X1=DT I X1,X2 D ^%DTC S PSSDBATX=X
"RTN","PSSDSAPM",239,0)
 S ^TMP($J,PSSDBASE,"IN","DOSE","AGE")=PSSDBATX
"RTN","PSSDSAPM",240,0)
 S DFN=PSSDBDFN
"RTN","PSSDSAPM",241,0)
 S (PSSDBWTX,PSSDBHTX,PSSDBBSA)=0
"RTN","PSSDSAPM",242,0)
 S GMRVSTR="WT" K X D EN6^GMRVUTL
"RTN","PSSDSAPM",243,0)
 S PSSDBWT=$P(X,"^",8) I PSSDBWT S PSSDBWTX=PSSDBWT/2.2
"RTN","PSSDSAPM",244,0)
 S ^TMP($J,PSSDBASE,"IN","DOSE","WT")=$G(PSSDBWTX)
"RTN","PSSDSAPM",245,0)
 S DFN=PSSDBDFN
"RTN","PSSDSAPM",246,0)
 S GMRVSTR="HT" K X D EN6^GMRVUTL
"RTN","PSSDSAPM",247,0)
 S PSSDBHT=$P(X,"^",8) I PSSDBHT S PSSDBHTX=.0254*PSSDBHT
"RTN","PSSDSAPM",248,0)
 ;Using DuBios formula for BSA calculation, and sending in 2 decimal places
"RTN","PSSDSAPM",249,0)
 I $G(PSSDBWTX),$G(PSSDBHTX) S PSSDBBSA=.20247*(PSSDBHTX**.725)*(PSSDBWTX**.425)
"RTN","PSSDSAPM",250,0)
 ;I $G(PSSDBWTX),$G(PSSDBHTX) S PSSDBBSA=$J((((PSSDBWTX*PSSDBHTX)/3600)**.5),0,2)    Mosteller BSA Formula
"RTN","PSSDSAPM",251,0)
 S ^TMP($J,PSSDBASE,"IN","DOSE","BSA")=$G(PSSDBBSA)
"RTN","PSSDSAPM",252,0)
 Q
"RTN","PSSDSAPM",253,0)
 ;
"RTN","PSSDSAPM",254,0)
 ;
"RTN","PSSDSAPM",255,0)
ADDCT ;Add counter to output globals so data appears in correct order for more than 9 Dosing Sequences
"RTN","PSSDSAPM",256,0)
 ;I PSSDBASA D ADDCTA  ;Remove comment when CPRS is ready to convert to new output, to show messages in Sequence order
"RTN","PSSDSAPM",257,0)
 I PSSDBASB D ADDCTB
"RTN","PSSDSAPM",258,0)
 Q
"RTN","PSSDSAPM",259,0)
 ;
"RTN","PSSDSAPM",260,0)
 ;
"RTN","PSSDSAPM",261,0)
ADDCTA ;Add counter to CPRS global
"RTN","PSSDSAPM",262,0)
 I '$D(^TMP($J,PSSDBASF)) Q 
"RTN","PSSDSAPM",263,0)
 N PSSJW1,PSSJW2,PSSJW3,PSSJW4,PSSJW5,PSSJW6
"RTN","PSSDSAPM",264,0)
 K ^TMP($J,"PSSJWTM1") M ^TMP($J,"PSSJWTM1")=^TMP($J,PSSDBASF) K ^TMP($J,PSSDBASF)
"RTN","PSSDSAPM",265,0)
 ;
"RTN","PSSDSAPM",266,0)
 S PSSJW1="" F  S PSSJW1=$O(^TMP($J,"PSSJWTM1","OUT","DOSE","ERROR",PSSJW1)) Q:PSSJW1=""  D
"RTN","PSSDSAPM",267,0)
 .S PSSJW2="" F  S PSSJW2=$O(^TMP($J,"PSSJWTM1","OUT","DOSE","ERROR",PSSJW1,PSSJW2)) Q:PSSJW2=""  D
"RTN","PSSDSAPM",268,0)
 ..S PSSJW3=$P(PSSJW1,";",4)
"RTN","PSSDSAPM",269,0)
 ..S PSSJW4=$G(^TMP($J,"PSSJWTM1","OUT","DOSE","ERROR",PSSJW1,PSSJW2,"MSG"))
"RTN","PSSDSAPM",270,0)
 ..S PSSJW5=$G(^TMP($J,"PSSJWTM1","OUT","DOSE","ERROR",PSSJW1,PSSJW2,"TEXT"))
"RTN","PSSDSAPM",271,0)
 ..I $D(^TMP($J,"PSSJWTM1","OUT","DOSE","ERROR",PSSJW1,PSSJW2,"MSG")) S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSJW3,PSSJW1,PSSJW2,"MSG")=PSSJW4
"RTN","PSSDSAPM",272,0)
 ..I $D(^TMP($J,"PSSJWTM1","OUT","DOSE","ERROR",PSSJW1,PSSJW2,"TEXT")) S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSJW3,PSSJW1,PSSJW2,"TEXT")=PSSJW5
"RTN","PSSDSAPM",273,0)
 ;
"RTN","PSSDSAPM",274,0)
 S PSSJW1="" F  S PSSJW1=$O(^TMP($J,"PSSJWTM1","OUT","EXCEPTIONS","DOSE",PSSJW1)) Q:PSSJW1=""  D
"RTN","PSSDSAPM",275,0)
 .S PSSJW2="" F  S PSSJW2=$O(^TMP($J,"PSSJWTM1","OUT","EXCEPTIONS","DOSE",PSSJW1,PSSJW2)) Q:PSSJW2=""  D
"RTN","PSSDSAPM",276,0)
 ..S PSSJW3=$P(PSSJW1,";",4)
"RTN","PSSDSAPM",277,0)
 ..S PSSJW4=$G(^TMP($J,"PSSJWTM1","OUT","EXCEPTIONS","DOSE",PSSJW1,PSSJW2))
"RTN","PSSDSAPM",278,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSJW3,PSSJW1,PSSJW2)=PSSJW4
"RTN","PSSDSAPM",279,0)
 ;
"RTN","PSSDSAPM",280,0)
 S PSSJW1="" F  S PSSJW1=$O(^TMP($J,"PSSJWTM1","OUT","DOSE",PSSJW1)) Q:PSSJW1=""  I PSSJW1'="ERROR" D
"RTN","PSSDSAPM",281,0)
 .S PSSJW2="" F  S PSSJW2=$O(^TMP($J,"PSSJWTM1","OUT","DOSE",PSSJW1,PSSJW2)) Q:PSSJW2=""  D
"RTN","PSSDSAPM",282,0)
 ..S PSSJW3="" F  S PSSJW3=$O(^TMP($J,"PSSJWTM1","OUT","DOSE",PSSJW1,PSSJW2,PSSJW3)) Q:PSSJW3=""  D
"RTN","PSSDSAPM",283,0)
 ...S PSSJW4="" F  S PSSJW4=$O(^TMP($J,"PSSJWTM1","OUT","DOSE",PSSJW1,PSSJW2,PSSJW3,"MESSAGE",PSSJW4)) Q:PSSJW4=""  D
"RTN","PSSDSAPM",284,0)
 ....S PSSJW5=$P(PSSJW1,";",4)
"RTN","PSSDSAPM",285,0)
 ....S PSSJW6=$G(^TMP($J,"PSSJWTM1","OUT","DOSE",PSSJW1,PSSJW2,PSSJW3,"MESSAGE",PSSJW4))
"RTN","PSSDSAPM",286,0)
 ....S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSJW5,PSSJW1,PSSJW2,PSSJW3,"MESSAGE",PSSJW4)=PSSJW6
"RTN","PSSDSAPM",287,0)
 ;
"RTN","PSSDSAPM",288,0)
 K ^TMP($J,"PSSJWTM1")
"RTN","PSSDSAPM",289,0)
 Q
"RTN","PSSDSAPM",290,0)
 ;
"RTN","PSSDSAPM",291,0)
 ;
"RTN","PSSDSAPM",292,0)
ADDCTB ;Add counter to Pharmacy global
"RTN","PSSDSAPM",293,0)
 I '$D(^TMP($J,PSSDBASG)) Q 
"RTN","PSSDSAPM",294,0)
 N PSSJW7,PSSJW8,PSSJW9,PSSJWNUM,PSSJWVAL,PSSJW56,PSSJW57
"RTN","PSSDSAPM",295,0)
 K ^TMP($J,"PSSJWTM2") M ^TMP($J,"PSSJWTM2")=^TMP($J,PSSDBASG) K ^TMP($J,PSSDBASG)
"RTN","PSSDSAPM",296,0)
 ;
"RTN","PSSDSAPM",297,0)
 S PSSJW7="" F  S PSSJW7=$O(^TMP($J,"PSSJWTM2","OUT",PSSJW7)) Q:PSSJW7=""  D
"RTN","PSSDSAPM",298,0)
 .S PSSJWNUM=$P(PSSJW7,";",4)
"RTN","PSSDSAPM",299,0)
 .S PSSJW8="" F  S PSSJW8=$O(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"ERROR",PSSJW8)) Q:PSSJW8=""  D
"RTN","PSSDSAPM",300,0)
 ..I $D(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"ERROR",PSSJW8,"MSG")) S ^TMP($J,PSSDBASG,"OUT",PSSJWNUM,PSSJW7,"ERROR",PSSJW8,"MSG")=$G(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"ERROR",PSSJW8,"MSG"))
"RTN","PSSDSAPM",301,0)
 ..I $D(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"ERROR",PSSJW8,"TEXT")) S ^TMP($J,PSSDBASG,"OUT",PSSJWNUM,PSSJW7,"ERROR",PSSJW8,"TEXT")=$G(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"ERROR",PSSJW8,"TEXT"))
"RTN","PSSDSAPM",302,0)
 ..I $G(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"ERROR",PSSJW8,"WARN"))="Warning" S ^TMP($J,PSSDBASG,"OUT",PSSJWNUM,PSSJW7,"ERROR",PSSJW8,"WARN")="Warning"
"RTN","PSSDSAPM",303,0)
 .;
"RTN","PSSDSAPM",304,0)
 .S PSSJW8="" F  S PSSJW8=$O(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"EXCEPTIONS",PSSJW8)) Q:PSSJW8=""  D
"RTN","PSSDSAPM",305,0)
 ..S PSSJW9=$G(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"EXCEPTIONS",PSSJW8))
"RTN","PSSDSAPM",306,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSJWNUM,PSSJW7,"EXCEPTIONS",PSSJW8)=PSSJW9
"RTN","PSSDSAPM",307,0)
 .;
"RTN","PSSDSAPM",308,0)
 .S PSSJW8="" F  S PSSJW8=$O(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"MESSAGE",PSSJW8)) Q:PSSJW8=""  D
"RTN","PSSDSAPM",309,0)
 ..S PSSJW9="" F  S PSSJW9=$O(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"MESSAGE",PSSJW8,PSSJW9)) Q:PSSJW9=""  D
"RTN","PSSDSAPM",310,0)
 ...I +PSSJW8=3 D  Q
"RTN","PSSDSAPM",311,0)
 ....S PSSJW56="" F  S PSSJW56=$O(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"MESSAGE",PSSJW8,PSSJW9,PSSJW56)) Q:PSSJW56=""  D
"RTN","PSSDSAPM",312,0)
 .....S PSSJW57=$G(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"MESSAGE",PSSJW8,PSSJW9,PSSJW56))
"RTN","PSSDSAPM",313,0)
 .....S ^TMP($J,PSSDBASG,"OUT",PSSJWNUM,PSSJW7,"MESSAGE",PSSJW8,PSSJW9,PSSJW56)=PSSJW57
"RTN","PSSDSAPM",314,0)
 ...S PSSJWVAL=$G(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"MESSAGE",PSSJW8,PSSJW9))
"RTN","PSSDSAPM",315,0)
 ...S ^TMP($J,PSSDBASG,"OUT",PSSJWNUM,PSSJW7,"MESSAGE",PSSJW8,PSSJW9)=PSSJWVAL
"RTN","PSSDSAPM",316,0)
 ; 
"RTN","PSSDSAPM",317,0)
 K ^TMP($J,"PSSJWTM2")
"RTN","PSSDSAPM",318,0)
 Q
"RTN","PSSDSAPM",319,0)
 ;
"RTN","PSSDSAPM",320,0)
 ;
"RTN","PSSDSAPM",321,0)
DSP(PSSDBDS,PSSDBFDB) ;Return Dose and Dose Unit to Inpatient for complex order display
"RTN","PSSDSAPM",322,0)
 ;Return value set into parameter 1 as "DRG_DISP" 
"RTN","PSSDSAPM",323,0)
 N PSSDBAR,PSSINDSP,PSSIND1,PSSIND2,PSSIND3,PSSDSLCL,PSSDBNOD,PSSDBXP,PSSDBLPD,PSSDSXTD,PSSDBNT,PSSDBFAL,PSSDBLP,PSSDBIFL
"RTN","PSSDSAPM",324,0)
 S PSSDBLP="" F  S PSSDBLP=$O(PSSDBDS(PSSDBLP)) Q:PSSDBLP=""  D
"RTN","PSSDSAPM",325,0)
 .S PSSINDSP="",(PSSDBLPD,PSSDBFAL,PSSDBIFL)=0 K PSSDBAR
"RTN","PSSDSAPM",326,0)
 .I $D(PSSDBFDB(PSSDBLP,"DOSE_AMT")),$D(PSSDBFDB(PSSDBLP,"DOSE_UNIT")) S PSSINDSP=PSSDBFDB(PSSDBLP,"DOSE_AMT")_"^"_PSSDBFDB(PSSDBLP,"DOSE_UNIT") D DSPL Q
"RTN","PSSDSAPM",327,0)
 .I $G(PSSDBDS(PSSDBLP,"DRG_AMT")),$G(PSSDBDS(PSSDBLP,"DRG_UNIT"))'="" D
"RTN","PSSDSAPM",328,0)
 ..S PSSIND1=$S(PSSDBDS(PSSDBLP,"DRG_UNIT")["/":$P(PSSDBDS(PSSDBLP,"DRG_UNIT"),"/"),1:PSSDBDS(PSSDBLP,"DRG_UNIT"))
"RTN","PSSDSAPM",329,0)
 ..S PSSIND1=$$UP^XLFSTR(PSSIND1)
"RTN","PSSDSAPM",330,0)
 ..S PSSIND2=$$UNIT^PSSDSAPI(PSSIND1)
"RTN","PSSDSAPM",331,0)
 ..I PSSIND2'="" S PSSINDSP=PSSDBDS(PSSDBLP,"DRG_AMT")_"^"_PSSIND2 D DSPL S PSSDBFAL=1
"RTN","PSSDSAPM",332,0)
 .I PSSDBFAL Q
"RTN","PSSDSAPM",333,0)
 .I '$G(PSSDBFDB(PSSDBLP,"DRUG_IEN")) S PSSDBDS(PSSDBLP,"DRG_DISP")="" Q
"RTN","PSSDSAPM",334,0)
 .;"DOSE" Node should only come from CPRS, for selected Local Possible Dosage
"RTN","PSSDSAPM",335,0)
 .S PSSDSLCL=$S($G(PSSDBDS(PSSDBLP,"DOSE"))'="":$P($G(PSSDBDS(PSSDBLP,"DOSE")),"&",5),1:$G(PSSDBDS(PSSDBLP,"DO")))
"RTN","PSSDSAPM",336,0)
 .I PSSDSLCL'="" S PSSIND3=0 D
"RTN","PSSDSAPM",337,0)
 ..F PSSDBXP=0:0 S PSSDBXP=$O(^PSDRUG(PSSDBFDB(PSSDBLP,"DRUG_IEN"),"DOS2",PSSDBXP)) Q:'PSSDBXP!(PSSIND3)  D
"RTN","PSSDSAPM",338,0)
 ...S PSSDBNOD=$G(^PSDRUG(PSSDBFDB(PSSDBLP,"DRUG_IEN"),"DOS2",PSSDBXP,0))
"RTN","PSSDSAPM",339,0)
 ...I $$MTCH^PSSDSAPK S PSSDBLPD=1 I $P(PSSDBNOD,"^",5),$P(PSSDBNOD,"^",6)'="" D
"RTN","PSSDSAPM",340,0)
 ....S PSSDSXTD=+$P(PSSDBNOD,"^",5) I PSSDSXTD,$$SCREEN^XTID(51.24,.01,PSSDSXTD_",") Q
"RTN","PSSDSAPM",341,0)
 ....S PSSDBNT=$P($G(^PS(51.24,+$P(PSSDBNOD,"^",5),0)),"^",2)
"RTN","PSSDSAPM",342,0)
 ....I PSSDBNT'="" S PSSINDSP=$P(PSSDBNOD,"^",6)_"^"_PSSDBNT,(PSSIND3,PSSDBFAL)=1
"RTN","PSSDSAPM",343,0)
 .I PSSDBFAL D DSPL Q
"RTN","PSSDSAPM",344,0)
 .I PSSDBLPD D DPOP^PSSDSAPK I PSSDBFAL S PSSINDSP=PSSDBAR("AMN")_"^"_PSSDBAR("UNIT") D DSPL Q
"RTN","PSSDSAPM",345,0)
 .D ITEM^PSSDSAPK I PSSDBFAL S PSSINDSP=PSSDBAR("AMN")_"^"_PSSDBAR("UNIT") D DSPL Q
"RTN","PSSDSAPM",346,0)
 .D NUM^PSSDSAPL I $G(PSSDBAR("AMN"))'="",$G(PSSDBAR("UNIT"))'="" S PSSINDSP=PSSDBAR("AMN")_"^"_PSSDBAR("UNIT") D DSPL Q
"RTN","PSSDSAPM",347,0)
 .S PSSDBDS(PSSDBLP,"DRG_DISP")=""
"RTN","PSSDSAPM",348,0)
 Q
"RTN","PSSDSAPM",349,0)
 ;
"RTN","PSSDSAPM",350,0)
 ;
"RTN","PSSDSAPM",351,0)
DSPL ;Add leading zero
"RTN","PSSDSAPM",352,0)
 I $E(PSSINDSP)="." S PSSINDSP="0"_PSSINDSP
"RTN","PSSDSAPM",353,0)
 S PSSDBDS(PSSDBLP,"DRG_DISP")=PSSINDSP
"RTN","PSSDSAPM",354,0)
 Q
"RTN","PSSDSAPM",355,0)
 ;
"RTN","PSSDSAPM",356,0)
 ;
"RTN","PSSDSAPM",357,0)
NXDRUG ;No Drug found
"RTN","PSSDSAPM",358,0)
 I $G(PSSDBFDB("PACKAGE"))="X",$$DLTM^PSSDSAPI(PSSDBFDB("OI")) K ^TMP($J,PSSDBASE,"IN","EXCEPTIONS","OI",PSSDBFDB(PSSDBLP,"DRUG_NM")),PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"NO_DRUG") Q
"RTN","PSSDSAPM",359,0)
 I $D(^TMP($J,PSSDBASE,"IN","EXCEPTIONS","OI",PSSDBFDB(PSSDBLP,"DRUG_NM"))) D DPL^PSSDSAPK Q
"RTN","PSSDSAPM",360,0)
 I PSSDSIVF S ^TMP($J,PSSDBASE,"IN","EXCEPTIONS","OI",PSSDBFDB(PSSDBLP,"DRUG_NM"))="4^"_PSSDBFDB(PSSDBLP,"RX_NUM") D STDB Q
"RTN","PSSDSAPM",361,0)
 S ^TMP($J,PSSDBASE,"IN","EXCEPTIONS","DOSE",PSSDBFDB(PSSDBLP,"RX_NUM"))="1^"_PSSDBFDB(PSSDBLP,"DRUG_NM") D STDB
"RTN","PSSDSAPM",362,0)
 Q
"RTN","PSSDSAPM",363,0)
 ;
"RTN","PSSDSAPM",364,0)
 ;
"RTN","PSSDSAPM",365,0)
STDB ;Set PSSDBCAR array for Input Exceptions
"RTN","PSSDSAPM",366,0)
 S PSSDBCAR(PSSDBFDB(PSSDBLP,"RX_NUM"))="B^"_PSSDBFDB(PSSDBLP,"DRUG_NM")
"RTN","PSSDSAPM",367,0)
 S $P(PSSDBCAR(PSSDBFDB(PSSDBLP,"RX_NUM")),"^",18)=1,$P(PSSDBCAR(PSSDBFDB(PSSDBLP,"RX_NUM")),"^",13)=1
"RTN","PSSDSAPM",368,0)
 ;S PSSENHKZ(PSSDBFDB(PSSDBLP,"RX_NUM"))=1
"RTN","PSSDSAPM",369,0)
 D DPL^PSSDSAPK
"RTN","PSSDSAPM",370,0)
 Q
"RTN","PSSHRIT")
0^6^B219197445
"RTN","PSSHRIT",1,0)
PSSHRIT ;WOIFO/SG,PO - Transmits a "ping" to determine if FDB server is down and record the down time ;7/30/2008
"RTN","PSSHRIT",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**136,168,164,173**;9/30/97;Build 9
"RTN","PSSHRIT",3,0)
 ;
"RTN","PSSHRIT",4,0)
 ;External reference to IN^PSSHRQ2 supported by DBIA 5369
"RTN","PSSHRIT",5,0)
 ;External reference to File 18.12 supported by DBIA 5891
"RTN","PSSHRIT",6,0)
 ;
"RTN","PSSHRIT",7,0)
 Q
"RTN","PSSHRIT",8,0)
PINGCHK ; do ping test, if not passed record it and send a message.
"RTN","PSSHRIT",9,0)
 ; Called from PSS INTERFACE SCHEDULER option
"RTN","PSSHRIT",10,0)
 N STATUS
"RTN","PSSHRIT",11,0)
 F  L +^PS(59.74,"PINGCHK^PSSHRIT"):1 Q:$T
"RTN","PSSHRIT",12,0)
 S STATUS=$$PINGTST()
"RTN","PSSHRIT",13,0)
 S STATUS=$$PINGFILE(STATUS)
"RTN","PSSHRIT",14,0)
 I STATUS=-1 D SMSGDWN   ; if failed for the first time (a new entry created) send a message that interface is down.
"RTN","PSSHRIT",15,0)
 L -^PS(59.74,"PINGCHK^PSSHRIT")
"RTN","PSSHRIT",16,0)
 Q
"RTN","PSSHRIT",17,0)
 ;
"RTN","PSSHRIT",18,0)
PINGTST() ; test the ping by sending a ping request.
"RTN","PSSHRIT",19,0)
 ;return 0 - ping successful,  -1^reason  ping failed
"RTN","PSSHRIT",20,0)
 N BASE,STATUS
"RTN","PSSHRIT",21,0)
 S BASE="PINGTST^"_$T(+0)
"RTN","PSSHRIT",22,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",23,0)
 S ^TMP($J,BASE,"IN","PING")=""
"RTN","PSSHRIT",24,0)
 D IN^PSSHRQ2(BASE)
"RTN","PSSHRIT",25,0)
 S STATUS=$G(^TMP($J,BASE,"OUT",0))
"RTN","PSSHRIT",26,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",27,0)
 Q STATUS
"RTN","PSSHRIT",28,0)
 ;
"RTN","PSSHRIT",29,0)
PINGFILE(STATUS) ;  file the ping results
"RTN","PSSHRIT",30,0)
 ; Input
"RTN","PSSHRIT",31,0)
 ;   Status - Ping results
"RTN","PSSHRIT",32,0)
 ; Return 
"RTN","PSSHRIT",33,0)
 ;     -1 - if creates an entry - means the first it noticed PEPS is unavailable
"RTN","PSSHRIT",34,0)
 ;      0 - if does not create/update a record, 
"RTN","PSSHRIT",35,0)
 ;      1 - if updates the last entry
"RTN","PSSHRIT",36,0)
 N LIEN,LASTAVL
"RTN","PSSHRIT",37,0)
 S STATUS=+$G(STATUS)
"RTN","PSSHRIT",38,0)
 S LIEN=+$O(^PS(59.74,":"),-1)           ; get last entry
"RTN","PSSHRIT",39,0)
 S LASTAVL=$P($G(^PS(59.74,LIEN,0)),U,2) ; get last available date/time
"RTN","PSSHRIT",40,0)
 I STATUS=0,'LIEN Q 0                          ; do nothing
"RTN","PSSHRIT",41,0)
 I STATUS=0,LIEN,LASTAVL Q 0                   ; do nothing
"RTN","PSSHRIT",42,0)
 I STATUS=0,LIEN,'LASTAVL D UPDATENT(LIEN) Q 1 ; update file
"RTN","PSSHRIT",43,0)
 I STATUS=-1,LIEN,LASTAVL D NEWENT Q -1        ; create new entry
"RTN","PSSHRIT",44,0)
 I STATUS=-1,'LIEN D NEWENT Q -1               ; create new entry
"RTN","PSSHRIT",45,0)
 Q 0
"RTN","PSSHRIT",46,0)
NEWENT ; create a new entry in FDB INTERFACE DATA (#59.74) file.
"RTN","PSSHRIT",47,0)
 N DIC,DO
"RTN","PSSHRIT",48,0)
 S X=$$NOW^XLFDT(),DIC="^PS(59.74,",DIC(0)="Z" D FILE^DICN
"RTN","PSSHRIT",49,0)
 K X,Y
"RTN","PSSHRIT",50,0)
 Q
"RTN","PSSHRIT",51,0)
 ;
"RTN","PSSHRIT",52,0)
UPDATENT(LAST) ; update the last entry in FDB INTERFACE DATA (#59.74) file.
"RTN","PSSHRIT",53,0)
 ;edit flag once it is created.
"RTN","PSSHRIT",54,0)
 N DIE,NEWVAL,DWNTIME,DA,DR,DIFF
"RTN","PSSHRIT",55,0)
 S DA=LAST
"RTN","PSSHRIT",56,0)
 S NEWVAL=$$NOW^XLFDT()   ;$$NOW()
"RTN","PSSHRIT",57,0)
 S DWNTIME=+$G(^PS(59.74,DA,0))
"RTN","PSSHRIT",58,0)
 Q:'DWNTIME
"RTN","PSSHRIT",59,0)
 S DIFF=$$FMDIFF^XLFDT(NEWVAL,DWNTIME,2)
"RTN","PSSHRIT",60,0)
 S DIFF=DIFF\60  ;IN MINUTES
"RTN","PSSHRIT",61,0)
 S DIE="^PS(59.74,",DR="1///^S X=NEWVAL;2///^S X=DIFF"
"RTN","PSSHRIT",62,0)
 D ^DIE
"RTN","PSSHRIT",63,0)
 D SMSGRST  ; send a message that interface connection is restored
"RTN","PSSHRIT",64,0)
 Q
"RTN","PSSHRIT",65,0)
 ;
"RTN","PSSHRIT",66,0)
SMSGDWN ; send a bulletin that Interface connection is down.
"RTN","PSSHRIT",67,0)
 N XMB,XMTEXT,XMY,PSFDB,XMV,XMDUN,XMDUZ
"RTN","PSSHRIT",68,0)
 S XMDUZ="PSS INTERFACE SCHEDULER"
"RTN","PSSHRIT",69,0)
 S XMB="PSS FDB INTERFACE"
"RTN","PSSHRIT",70,0)
 S XMTEXT="PSFDB"
"RTN","PSSHRIT",71,0)
 ; check to if dosing check is on.
"RTN","PSSHRIT",72,0)
 I $T(DS^PSSDSAPI)]"",$$DS^PSSDSAPI() D
"RTN","PSSHRIT",73,0)
 .S PSFDB(1)="Connection to Vendor Database is down!  No Drug-Drug Interaction, Duplicate"
"RTN","PSSHRIT",74,0)
 .S PSFDB(2)="Therapy or Dosing Order Checks will be performed until the connection is"
"RTN","PSSHRIT",75,0)
 .S PSFDB(3)="reestablished!!!"
"RTN","PSSHRIT",76,0)
 E  D
"RTN","PSSHRIT",77,0)
 .S PSFDB(1)="Connection to Vendor Database is down!  No Drug-Drug Interaction or Duplicate"
"RTN","PSSHRIT",78,0)
 .S PSFDB(2)="Therapy Order Checks will be performed until the connection is reestablished!!!"
"RTN","PSSHRIT",79,0)
 S XMY("G.PSS ORDER CHECKS")=""
"RTN","PSSHRIT",80,0)
 D ^XMB
"RTN","PSSHRIT",81,0)
 Q
"RTN","PSSHRIT",82,0)
 ;
"RTN","PSSHRIT",83,0)
SMSGRST ; send a bulletin that Interface connection is restored
"RTN","PSSHRIT",84,0)
 N XMB,XMTEXT,XMY,PSFDB,XMV,XMDUN,XMDUZ
"RTN","PSSHRIT",85,0)
 S XMDUZ="PSS INTERFACE SCHEDULER"
"RTN","PSSHRIT",86,0)
 S XMB="PSS FDB INTERFACE RESTORED"
"RTN","PSSHRIT",87,0)
 S XMTEXT="PSFDB"
"RTN","PSSHRIT",88,0)
 ; check to if dosing check is on.
"RTN","PSSHRIT",89,0)
 I $T(DS^PSSDSAPI)]"",$$DS^PSSDSAPI() D
"RTN","PSSHRIT",90,0)
 .S PSFDB(1)="Connection to Vendor Database has been restored! Drug-Drug Interactions,"
"RTN","PSSHRIT",91,0)
 .S PSFDB(2)="Duplicate Therapy and Dosing Order Checks can now be performed."
"RTN","PSSHRIT",92,0)
 E  D
"RTN","PSSHRIT",93,0)
 .S PSFDB(1)="Connection to Vendor Database has been restored! Drug-Drug Interactions or"
"RTN","PSSHRIT",94,0)
 .S PSFDB(2)="Duplicate Therapy Order Checks can now be performed."
"RTN","PSSHRIT",95,0)
 S XMY("G.PSS ORDER CHECKS")=""
"RTN","PSSHRIT",96,0)
 D ^XMB
"RTN","PSSHRIT",97,0)
 Q
"RTN","PSSHRIT",98,0)
 ;
"RTN","PSSHRIT",99,0)
TASKIT(FREQ,START) ; create/update scheduling option start time and frequency
"RTN","PSSHRIT",100,0)
 ; Input:
"RTN","PSSHRIT",101,0)
 ;   FREQ  - Optional - rescheduling frequency in minutes (default 15 minutes)
"RTN","PSSHRIT",102,0)
 ;  START  - Optional - start time (default is current time + 4 minutes)
"RTN","PSSHRIT",103,0)
 ; Note: if START is less than 4 minutes in future,  it will be defaulted to 
"RTN","PSSHRIT",104,0)
 ;       current time + 4 minutes.
"RTN","PSSHRIT",105,0)
 ;
"RTN","PSSHRIT",106,0)
 K PSERROR
"RTN","PSSHRIT",107,0)
 S FREQ=$G(FREQ,15)
"RTN","PSSHRIT",108,0)
 S FREQ=FREQ*60_"S"
"RTN","PSSHRIT",109,0)
 S START=$G(START,$$NOW^XLFDT())
"RTN","PSSHRIT",110,0)
 ;
"RTN","PSSHRIT",111,0)
 ; if start date/time is less than 4 minutes in future make it 4 minutes from now
"RTN","PSSHRIT",112,0)
 S:$$FMDIFF^XLFDT(START,$$NOW^XLFDT(),2)<240 START=$$FMADD^XLFDT($$NOW^XLFDT(),0,0,4)
"RTN","PSSHRIT",113,0)
 ;
"RTN","PSSHRIT",114,0)
 ; create the option schedule if it does not exist. return PSERROR=-1 if fails.
"RTN","PSSHRIT",115,0)
 ; in some situation when it fails, does not create the PSERROR variable
"RTN","PSSHRIT",116,0)
 D RESCH^XUTMOPT("PSS INTERFACE SCHEDULER",START,"",FREQ,"L",.PSERROR)
"RTN","PSSHRIT",117,0)
 Q
"RTN","PSSHRIT",118,0)
 ;
"RTN","PSSHRIT",119,0)
SCHDOPT ; edit option scheduling
"RTN","PSSHRIT",120,0)
 ; Called from "PSS SCHEDULE PEPS INTERFACE CK" option to create and/or edit the scheduling
"RTN","PSSHRIT",121,0)
 ; parameters for "PSS INTERFACE SCHEDULER" option in OPTION SCHEDULING file. 
"RTN","PSSHRIT",122,0)
 ; The "PSS SCHEDULE PEPS INTERFACE CK" option is installed by PAS*1.0*117 package.
"RTN","PSSHRIT",123,0)
 N PSSROOT
"RTN","PSSHRIT",124,0)
 ; check to see if the option is defined in option scheduler file and it is tasked.
"RTN","PSSHRIT",125,0)
 ; if not create and task the option.
"RTN","PSSHRIT",126,0)
 D OPTSTAT^XUTMOPT("PSS INTERFACE SCHEDULER",.PSSROOT)
"RTN","PSSHRIT",127,0)
 I '+$G(PSSROOT(1)) D TASKIT(15)
"RTN","PSSHRIT",128,0)
 ;
"RTN","PSSHRIT",129,0)
 D EDIT^XUTMOPT("PSS INTERFACE SCHEDULER")
"RTN","PSSHRIT",130,0)
 Q
"RTN","PSSHRIT",131,0)
 ;
"RTN","PSSHRIT",132,0)
SLASTRUN(LASTRUN) ; set last run time
"RTN","PSSHRIT",133,0)
 N SUB,PURGE,NOW,DESC
"RTN","PSSHRIT",134,0)
 S DESC="This stores the latest data on FDB interface"
"RTN","PSSHRIT",135,0)
 S NOW=$$NOW^XLFDT()\1
"RTN","PSSHRIT",136,0)
 S PURGE=$$FMADD^XLFDT(NOW,30)
"RTN","PSSHRIT",137,0)
 S ^XTMP("PSSRUN",0)=PURGE_U_NOW_U_DESC
"RTN","PSSHRIT",138,0)
 S ^XTMP("PSSRUN","LASTRUN")=LASTRUN
"RTN","PSSHRIT",139,0)
 Q
"RTN","PSSHRIT",140,0)
 ;
"RTN","PSSHRIT",141,0)
GLASTRUN() ; get last run time
"RTN","PSSHRIT",142,0)
 Q $G(^XTMP("PSSRUN","LASTRUN"))
"RTN","PSSHRIT",143,0)
 ;
"RTN","PSSHRIT",144,0)
RUNTEST ; run interaction test to PEPS server
"RTN","PSSHRIT",145,0)
 ; called from PSS CHECK PEPS SERVICES SETUP option
"RTN","PSSHRIT",146,0)
 D KILL^XUSCLEAN
"RTN","PSSHRIT",147,0)
 N STATUS,X,PSSFLAG,%ZIS,POP,ZTDESC,ZTQUEUED,ZTREQ,ZTRTN
"RTN","PSSHRIT",148,0)
 S PSSFLAG=ION
"RTN","PSSHRIT",149,0)
 ;
"RTN","PSSHRIT",150,0)
 W !!,"This option performs several checks. You may queue this report if you wish."
"RTN","PSSHRIT",151,0)
 W !!,"Among these checks are:"
"RTN","PSSHRIT",152,0)
 W !,"-----------------------"
"RTN","PSSHRIT",153,0)
 W !,"A connection check to the Vendor Database"
"RTN","PSSHRIT",154,0)
 W !,"Drug-Drug Interaction Check"
"RTN","PSSHRIT",155,0)
 W !,"Duplicate Therapy Order Check"
"RTN","PSSHRIT",156,0)
 W !,"Dosing Order Check"
"RTN","PSSHRIT",157,0)
 W !,"Custom Drug-Drug Interaction Check"
"RTN","PSSHRIT",158,0)
 ;
"RTN","PSSHRIT",159,0)
 W ! S %ZIS="MQ",%ZIS("A")="Select Device: " D ^%ZIS G EXIT:POP
"RTN","PSSHRIT",160,0)
 ;
"RTN","PSSHRIT",161,0)
 IF '$D(IO("Q"))&(PSSFLAG=ION) D TESTS^PSSHRIT  Q
"RTN","PSSHRIT",162,0)
 ELSE  IF $D(IO("Q"))!(PSSFLAG'=ION)  D  Q
"RTN","PSSHRIT",163,0)
 .S ZTRTN="QTESTS^PSSHRIT",ZTDESC="Interaction test to PEPS server"
"RTN","PSSHRIT",164,0)
 .D ^%ZTLOAD D HOME^%ZIS,^%ZISC K IO("Q") Q
"RTN","PSSHRIT",165,0)
 ;
"RTN","PSSHRIT",166,0)
EXIT S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","PSSHRIT",167,0)
 ;
"RTN","PSSHRIT",168,0)
TESTS ; interaction tests to PEPS server
"RTN","PSSHRIT",169,0)
 ;
"RTN","PSSHRIT",170,0)
 S STATUS=$$CONCHK()
"RTN","PSSHRIT",171,0)
 D PRSRTN Q:(STATUS=0)!(X="^") 
"RTN","PSSHRIT",172,0)
 ;
"RTN","PSSHRIT",173,0)
 S STATUS=$$INTERACT()
"RTN","PSSHRIT",174,0)
 D PRSRTN Q:X="^" 
"RTN","PSSHRIT",175,0)
 ;
"RTN","PSSHRIT",176,0)
 S STATUS=$$DUPTHRPY()
"RTN","PSSHRIT",177,0)
 D PRSRTN Q:X="^" 
"RTN","PSSHRIT",178,0)
 ;
"RTN","PSSHRIT",179,0)
 S STATUS=$$DOSECHK() ;
"RTN","PSSHRIT",180,0)
 D PRSRTN Q:X="^" 
"RTN","PSSHRIT",181,0)
 ;
"RTN","PSSHRIT",182,0)
 S STATUS=$$CUSTOM()
"RTN","PSSHRIT",183,0)
 D PRSRTN Q:X="^"
"RTN","PSSHRIT",184,0)
 ;
"RTN","PSSHRIT",185,0)
 Q
"RTN","PSSHRIT",186,0)
 ;
"RTN","PSSHRIT",187,0)
QTESTS ; queued interaction tests to PEPS server
"RTN","PSSHRIT",188,0)
 ;
"RTN","PSSHRIT",189,0)
 N %,PSSTIME,PSSCOUNT S PSSTIME="",PSSCOUNT=0
"RTN","PSSHRIT",190,0)
 D NOW^%DTC S PSSTIME=$$FMTE^XLFDT(%,"1P")
"RTN","PSSHRIT",191,0)
 W ! F PSSCOUNT=1:1:79 W "-"
"RTN","PSSHRIT",192,0)
 W !!,?15,"Check PEPS Services Setup",?55,PSSTIME,!!
"RTN","PSSHRIT",193,0)
 F PSSCOUNT=1:1:79 W "-"
"RTN","PSSHRIT",194,0)
 W !!
"RTN","PSSHRIT",195,0)
 ;
"RTN","PSSHRIT",196,0)
 S STATUS=$$CONCHK()
"RTN","PSSHRIT",197,0)
 S STATUS=$$INTERACT()
"RTN","PSSHRIT",198,0)
 S STATUS=$$DUPTHRPY()
"RTN","PSSHRIT",199,0)
 S STATUS=$$DOSECHK()
"RTN","PSSHRIT",200,0)
 S STATUS=$$CUSTOM()
"RTN","PSSHRIT",201,0)
 ;
"RTN","PSSHRIT",202,0)
 Q
"RTN","PSSHRIT",203,0)
 ;
"RTN","PSSHRIT",204,0)
CONCHK() ; check connection
"RTN","PSSHRIT",205,0)
 ; Return 1 if OK, 0 if not OK.
"RTN","PSSHRIT",206,0)
 ; 
"RTN","PSSHRIT",207,0)
 N MESSAGE,Y,STATUS,RESULT
"RTN","PSSHRIT",208,0)
 W !,"Checking Vendor Database Connection"
"RTN","PSSHRIT",209,0)
 S RESULT=$$PINGTST()
"RTN","PSSHRIT",210,0)
 I RESULT=0 D
"RTN","PSSHRIT",211,0)
 .W "...OK"
"RTN","PSSHRIT",212,0)
 E  D
"RTN","PSSHRIT",213,0)
 .W "...",!!,"    Connection could not be made to Vendor database."
"RTN","PSSHRIT",214,0)
 .S Y=$$GLASTRUN()
"RTN","PSSHRIT",215,0)
 .I Y D
"RTN","PSSHRIT",216,0)
 ..D DD^%DT                      ; convert last reached time in Y to external format
"RTN","PSSHRIT",217,0)
 ..W !,"       Last reached @"_$E(Y,1,18)
"RTN","PSSHRIT",218,0)
 W !
"RTN","PSSHRIT",219,0)
 Q $S(RESULT=0:1,1:0)
"RTN","PSSHRIT",220,0)
 ; 
"RTN","PSSHRIT",221,0)
INTERACT() ; check drug-drug interaction.
"RTN","PSSHRIT",222,0)
 ; Return 1 if OK, 0 if not OK.
"RTN","PSSHRIT",223,0)
 ;
"RTN","PSSHRIT",224,0)
 N PSORDER,PSDRUG1,PSDRUG2,BASE,INFO,INTRO,PSSPEC
"RTN","PSSHRIT",225,0)
 N PSSLEFT S PSSLEFT=4     ; left margin for results
"RTN","PSSHRIT",226,0)
 S BASE=$T(+0)_" INTERACT"
"RTN","PSSHRIT",227,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",228,0)
 S ^TMP($J,BASE,"IN","DRUGDRUG")=""
"RTN","PSSHRIT",229,0)
 S PSORDER="I;1464P;PROSPECTIVE;2",PSDRUG1="WARFARIN 10MG TAB",PSDRUG2="ASPIRIN 325MG TAB"
"RTN","PSSHRIT",230,0)
 SET ^TMP($JOB,BASE,"IN","PROSPECTIVE","I;1464P;PROSPECTIVE;2")="6559^4005201^^WARFARIN 10MG TAB"
"RTN","PSSHRIT",231,0)
 SET ^TMP($JOB,BASE,"IN","PROSPECTIVE","I;91464P;PROSPECTIVE;2")="4376^4005735^^ASPIRIN 325MG TAB"
"RTN","PSSHRIT",232,0)
 D IN^PSSHRQ2(BASE)
"RTN","PSSHRIT",233,0)
 ;
"RTN","PSSHRIT",234,0)
 S INTRO="Performing Drug-Drug Interaction Order Check for "_PSDRUG2_" and "_PSDRUG1
"RTN","PSSHRIT",235,0)
 S INFO=$G(^TMP($J,BASE,"OUT","DRUGDRUG","S",PSDRUG1,PSORDER,1,"PMON",9,0))
"RTN","PSSHRIT",236,0)
 S INTRO=INTRO_$S($L(INFO):"...OK",1:"...Not OK")
"RTN","PSSHRIT",237,0)
 W !
"RTN","PSSHRIT",238,0)
 I '$L(INFO) D
"RTN","PSSHRIT",239,0)
 .D OUTPUT(INTRO)
"RTN","PSSHRIT",240,0)
 .W ! D OUTPUT("Drug-Drug Interaction Order Check could not be performed.",PSSLEFT)
"RTN","PSSHRIT",241,0)
 E  D
"RTN","PSSHRIT",242,0)
 . D OUTPUT(INTRO)
"RTN","PSSHRIT",243,0)
 . W !
"RTN","PSSHRIT",244,0)
 . S PSSPEC("CLINICAL EFFECTS:  ")=""
"RTN","PSSHRIT",245,0)
 . S INFO=$$REPLACE^XLFSTR(INFO,.PSSPEC)
"RTN","PSSHRIT",246,0)
 . S INFO="Significant Drug Interaction: "_INFO
"RTN","PSSHRIT",247,0)
 . D OUTPUT(INFO,PSSLEFT)
"RTN","PSSHRIT",248,0)
 ;
"RTN","PSSHRIT",249,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",250,0)
 Q $S($L(INFO)=0:0,1:1)
"RTN","PSSHRIT",251,0)
 ;
"RTN","PSSHRIT",252,0)
DUPTHRPY() ; check duplicate therapy
"RTN","PSSHRIT",253,0)
 ; Return 1 if OK, 0 if not OK.
"RTN","PSSHRIT",254,0)
 ; 
"RTN","PSSHRIT",255,0)
 N PSORDER,PSDRUG1,PSDRUG2,BASE,CLAS1,CLAS2,LINE1,LINE2,INTRO
"RTN","PSSHRIT",256,0)
 N PSSLEFT S PSSLEFT=4     ; left margin for results
"RTN","PSSHRIT",257,0)
 S BASE=$T(+0)_" DUPTHRPY"
"RTN","PSSHRIT",258,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",259,0)
 S ^TMP($J,BASE,"IN","THERAPY")=""
"RTN","PSSHRIT",260,0)
 S PSORDER="O;403931;PROFILE;3"
"RTN","PSSHRIT",261,0)
 S PSDRUG1="CIMETIDINE 300MG TAB"
"RTN","PSSHRIT",262,0)
 S PSDRUG2="RANITIDINE 150MG TAB"
"RTN","PSSHRIT",263,0)
 S ^TMP($J,BASE,"IN","PROFILE","O;403931;PROFILE;3")="11666^4006826^^CIMETIDINE 300MG TAB^O"
"RTN","PSSHRIT",264,0)
 S ^TMP($J,BASE,"IN","PROSPECTIVE","Z;1;PROSPECTIVE;1")="11673^4007038^^RANITIDINE 150MG TAB"
"RTN","PSSHRIT",265,0)
 D IN^PSSHRQ2(BASE)
"RTN","PSSHRIT",266,0)
 ; 
"RTN","PSSHRIT",267,0)
 S CLAS1=$G(^TMP($J,BASE,"OUT","THERAPY",1,1,"CLASS"))
"RTN","PSSHRIT",268,0)
 S CLAS2=$G(^TMP($J,BASE,"OUT","THERAPY",1,2,"CLASS"))
"RTN","PSSHRIT",269,0)
 S INTRO="Performing Duplicate Therapy Order Check for "_PSDRUG1_" and "_PSDRUG2
"RTN","PSSHRIT",270,0)
 S INTRO=INTRO_$S($L(CLAS1):"...OK",1:"...Not OK")
"RTN","PSSHRIT",271,0)
 W !
"RTN","PSSHRIT",272,0)
 D OUTPUT(INTRO)
"RTN","PSSHRIT",273,0)
 I '$L(CLAS1) D
"RTN","PSSHRIT",274,0)
 .W !
"RTN","PSSHRIT",275,0)
 .D OUTPUT("Duplicate Therapy Order Check could not be performed.",PSSLEFT)
"RTN","PSSHRIT",276,0)
 E  D
"RTN","PSSHRIT",277,0)
 .S LINE1="Therapeutic Duplication with "_PSDRUG1_" and "_PSDRUG2
"RTN","PSSHRIT",278,0)
 .S LINE2="Duplicate Therapy Class(es): "_CLAS1_","_CLAS2
"RTN","PSSHRIT",279,0)
 .W !
"RTN","PSSHRIT",280,0)
 .D OUTPUT(LINE1,PSSLEFT)
"RTN","PSSHRIT",281,0)
 .D OUTPUT(LINE2,PSSLEFT)
"RTN","PSSHRIT",282,0)
 ;
"RTN","PSSHRIT",283,0)
 Q $S($L(CLAS1)=0:0,1:1)
"RTN","PSSHRIT",284,0)
 ;
"RTN","PSSHRIT",285,0)
DOSECHK() ; check dosing
"RTN","PSSHRIT",286,0)
 ; Return 1 if OK, 0 if not OK.
"RTN","PSSHRIT",287,0)
 N TOTAL,SINGLE,INTRO,ORDER,PSDRUG1,PSDRUG2,BASE
"RTN","PSSHRIT",288,0)
 N PSSLEFT S PSSLEFT=4     ; left margin for results
"RTN","PSSHRIT",289,0)
 S BASE=$T(+0)_" DOSECHK"
"RTN","PSSHRIT",290,0)
 S ORDER="O;1464P;PROSPECTIVE;2"
"RTN","PSSHRIT",291,0)
 S PSDRUG1="ACETAMINOPHEN 500MG TAB"
"RTN","PSSHRIT",292,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",293,0)
 S ^TMP($J,BASE,"IN","DOSE")=""
"RTN","PSSHRIT",294,0)
 SET ^TMP($J,BASE,"IN","DOSE","AGE")=5000
"RTN","PSSHRIT",295,0)
 SET ^TMP($J,BASE,"IN","DOSE","WT")=83.01
"RTN","PSSHRIT",296,0)
 SET ^TMP($J,BASE,"IN","DOSE","BSA")=1.532
"RTN","PSSHRIT",297,0)
 ;VALUES: GCN^VUID^IEN^NAME^DOSE AMOUNT^DOSE UNIT^DOSE RATE^FREQ^DURATION^DURATION RATE^ROUTE^DOSE TYPE^SPECIFIC
"RTN","PSSHRIT",298,0)
 S ^TMP($J,BASE,"IN","DOSE","O;1464P;PROSPECTIVE;2")="4490^4007154^^ACETAMINOPHEN 500MG TAB^3000^MILLIGRAMS^DAY^Q4H^10^DAY^ORAL^MAINTENANCE^1"
"RTN","PSSHRIT",299,0)
 S ^TMP($J,BASE,"IN","PROSPECTIVE","O;1464P;PROSPECTIVE;2")="4490^4007154^^ACETAMINOPHEN 500MG TAB^O"
"RTN","PSSHRIT",300,0)
 D IN^PSSHRQ2(BASE)
"RTN","PSSHRIT",301,0)
 ;
"RTN","PSSHRIT",302,0)
 S TOTAL=$G(^TMP($J,BASE,"OUT","DOSE",ORDER,PSDRUG1,"RANGE","MESSAGE",0))
"RTN","PSSHRIT",303,0)
 S SINGLE=$G(^TMP($J,BASE,"OUT","DOSE",ORDER,PSDRUG1,"SINGLE","MESSAGE",0))
"RTN","PSSHRIT",304,0)
 S INTRO="Performing Dosing Order Check for "_PSDRUG1_" - 3000MG Q4H"_$S($L(TOTAL):"...OK",1:"...Not OK")
"RTN","PSSHRIT",305,0)
 I '$L(TOTAL) D
"RTN","PSSHRIT",306,0)
 .D OUTPUT(INTRO)
"RTN","PSSHRIT",307,0)
 .W !
"RTN","PSSHRIT",308,0)
 .D OUTPUT("Dosing Order Check could not be performed.",PSSLEFT)
"RTN","PSSHRIT",309,0)
 E  D
"RTN","PSSHRIT",310,0)
 .W !
"RTN","PSSHRIT",311,0)
 .D OUTPUT(INTRO)
"RTN","PSSHRIT",312,0)
 .W !
"RTN","PSSHRIT",313,0)
 .D OUTPUT(SINGLE,PSSLEFT)
"RTN","PSSHRIT",314,0)
 .W !
"RTN","PSSHRIT",315,0)
 .D OUTPUT(TOTAL,PSSLEFT)
"RTN","PSSHRIT",316,0)
 Q $S($L(TOTAL)=0:0,1:1)
"RTN","PSSHRIT",317,0)
 ;
"RTN","PSSHRIT",318,0)
CUSTOM() ; check custom drug-drug interaction
"RTN","PSSHRIT",319,0)
 ; Return 1 if OK, 0 if not OK.
"RTN","PSSHRIT",320,0)
 ;
"RTN","PSSHRIT",321,0)
 N INFO,INTRO,ORDER,DRUG1,DRUG2,BASE,STATUS,PSSPEC
"RTN","PSSHRIT",322,0)
 N PSSLEFT S PSSLEFT=4     ; left margin for results
"RTN","PSSHRIT",323,0)
 S BASE=$T(+0)_" CUSTOM"
"RTN","PSSHRIT",324,0)
 S ORDER="Z;1;PROSPECTIVE;1"
"RTN","PSSHRIT",325,0)
 S DRUG1="CLARITHROMYCIN 250MG TAB",DRUG2="DIAZEPAM 5MG TAB"
"RTN","PSSHRIT",326,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",327,0)
 S ^TMP($J,BASE,"IN","DRUGDRUG")=""
"RTN","PSSHRIT",328,0)
 S ^TMP($J,BASE,"IN","PROSPECTIVE","Z;1;PROSPECTIVE;1")="16373^4010075F^^CLARITHROMYCIN 250MG TAB"
"RTN","PSSHRIT",329,0)
 S ^TMP($J,BASE,"IN","PROFILE","I;10U;PROFILE;10")="3768^40002216^^DIAZEPAM 5MG TAB"
"RTN","PSSHRIT",330,0)
 D IN^PSSHRQ2(BASE)
"RTN","PSSHRIT",331,0)
 ;
"RTN","PSSHRIT",332,0)
 S STATUS=$G(^TMP($J,BASE,"OUT",0))
"RTN","PSSHRIT",333,0)
 S INTRO="Performing Custom Drug-Drug Interaction Order Check for "_DRUG1_" and "_DRUG2
"RTN","PSSHRIT",334,0)
 D SCUST
"RTN","PSSHRIT",335,0)
 S INTRO=INTRO_$S($L(INFO):"...OK",STATUS=0:"...OK",1:"...Not OK")
"RTN","PSSHRIT",336,0)
 I '$L(INFO) D
"RTN","PSSHRIT",337,0)
 .D OUTPUT(INTRO)
"RTN","PSSHRIT",338,0)
 .I STATUS'=0 W ! D OUTPUT("Custom Drug-Drug Interaction Order Check could not be performed.",PSSLEFT)
"RTN","PSSHRIT",339,0)
 E   D
"RTN","PSSHRIT",340,0)
 . W !
"RTN","PSSHRIT",341,0)
 . D OUTPUT(INTRO)
"RTN","PSSHRIT",342,0)
 . W !
"RTN","PSSHRIT",343,0)
 . S PSSPEC("CLINICAL EFFECTS:  ")=""
"RTN","PSSHRIT",344,0)
 . S INFO=$$REPLACE^XLFSTR(INFO,.PSSPEC)
"RTN","PSSHRIT",345,0)
 .S INFO="Significant Drug Interaction: "_INFO
"RTN","PSSHRIT",346,0)
 .D OUTPUT(INFO,PSSLEFT)
"RTN","PSSHRIT",347,0)
 W !
"RTN","PSSHRIT",348,0)
 Q $S(STATUS=0:1,$L(INFO)=0:0,1:1)
"RTN","PSSHRIT",349,0)
 ;
"RTN","PSSHRIT",350,0)
 ;
"RTN","PSSHRIT",351,0)
INTACT ; check vendor data base link
"RTN","PSSHRIT",352,0)
 ; Called from CHECK VENDOR DATABASE LINK  option
"RTN","PSSHRIT",353,0)
 N STATUS,PSFIN,BASE,Y,PSSCKWER,PSSCKW1,PSSCKW2,PSSCKW3
"RTN","PSSHRIT",354,0)
 S BASE="PSPRE"
"RTN","PSSHRIT",355,0)
 S PSSCKW1=$$FIND1^DIC(18.12,"","X","PEPS","B",,"PSSCKWER") K PSSCKWER
"RTN","PSSHRIT",356,0)
 I PSSCKW1 S PSSCKW2=$$GET1^DIQ(18.12,PSSCKW1_",",.04,"I",,"PSSCKWER") K PSSCKWER
"RTN","PSSHRIT",357,0)
 S:$G(PSSCKW2)="" PSSCKW2="Unknown Database" S PSSCKW3=$L(PSSCKW2)
"RTN","PSSHRIT",358,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",359,0)
 S ^TMP($J,BASE,"IN","PING")=""
"RTN","PSSHRIT",360,0)
 D IN^PSSHRQ2(BASE)
"RTN","PSSHRIT",361,0)
 S STATUS=+$G(^TMP($J,BASE,"OUT",0))
"RTN","PSSHRIT",362,0)
 I STATUS=0 D
"RTN","PSSHRIT",363,0)
 .W !
"RTN","PSSHRIT",364,0)
 .W !,"  Database Version: ",$G(^TMP($J,BASE,"OUT","difBuildVersion"))
"RTN","PSSHRIT",365,0)
 .W !,"     Build Version: ",$G(^TMP($J,BASE,"OUT","difDbVersion"))
"RTN","PSSHRIT",366,0)
 .S Y=$G(^TMP($J,BASE,"OUT","difIssueDate"))
"RTN","PSSHRIT",367,0)
 .S:Y?8N Y=$E(Y,5,6)_"/"_$E(Y,7,8)_"/"_$E(Y,1,4)
"RTN","PSSHRIT",368,0)
 .W !,"        Issue Date: ",Y,!
"RTN","PSSHRIT",369,0)
 .;
"RTN","PSSHRIT",370,0)
 .W !,"  Custom Database Version: ",$G(^TMP($J,BASE,"OUT","customBuildVersion"))
"RTN","PSSHRIT",371,0)
 .W !,"     Custom Build Version: ",$G(^TMP($J,BASE,"OUT","customDbVersion"))
"RTN","PSSHRIT",372,0)
 .S Y=$G(^TMP($J,BASE,"OUT","customIssueDate"))
"RTN","PSSHRIT",373,0)
 .S:Y?8N Y=$E(Y,5,6)_"/"_$E(Y,7,8)_"/"_$E(Y,1,4)
"RTN","PSSHRIT",374,0)
 .W !,"        Custom Issue Date: ",Y,!
"RTN","PSSHRIT",375,0)
 .;
"RTN","PSSHRIT",376,0)
 .S Y=$$NOW^XLFDT()
"RTN","PSSHRIT",377,0)
 .D DD^%DT                       ; convert current time in Y to external format.
"RTN","PSSHRIT",378,0)
 .W !,"Connected to "_$G(PSSCKW2),!,"successfully @",$E(Y,1,18)
"RTN","PSSHRIT",379,0)
 E  D
"RTN","PSSHRIT",380,0)
 .W !,"Connection could not be made to " W:PSSCKW3>46 ! W PSSCKW2_"."
"RTN","PSSHRIT",381,0)
 .S Y=$$GLASTRUN()
"RTN","PSSHRIT",382,0)
 .IF Y D
"RTN","PSSHRIT",383,0)
 ..D DD^%DT                      ; convert last reached time in Y to external format.
"RTN","PSSHRIT",384,0)
 ..W !,"  Last reached @"_$E(Y,1,18)
"RTN","PSSHRIT",385,0)
 ;
"RTN","PSSHRIT",386,0)
 D PRSRTN
"RTN","PSSHRIT",387,0)
 Q
"RTN","PSSHRIT",388,0)
 ;
"RTN","PSSHRIT",389,0)
 ;----------------------------------------------------
"RTN","PSSHRIT",390,0)
 ;
"RTN","PSSHRIT",391,0)
PRSRTN ;
"RTN","PSSHRIT",392,0)
 ;calls std routine to ask user to hit return 
"RTN","PSSHRIT",393,0)
 N DIR S DIR(0)="E" D ^DIR
"RTN","PSSHRIT",394,0)
 Q
"RTN","PSSHRIT",395,0)
 ;
"RTN","PSSHRIT",396,0)
PING(BASE) ;
"RTN","PSSHRIT",397,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",398,0)
 S ^TMP($J,BASE,"IN","PING")=""
"RTN","PSSHRIT",399,0)
 D IN^PSSHRQ2(BASE)
"RTN","PSSHRIT",400,0)
 Q
"RTN","PSSHRIT",401,0)
 ;
"RTN","PSSHRIT",402,0)
HRSMIN(MIN) ;
"RTN","PSSHRIT",403,0)
 ; Called from output transform of VENDOR INTERFACE DATA FILE (#59.54) field TOTAL TIME NOT AVAILABLE (field# 2)
"RTN","PSSHRIT",404,0)
 ;INPUTS: MIN-TIME IN MINUTES
"RTN","PSSHRIT",405,0)
 ;RETURNS HRS AND MINUTES
"RTN","PSSHRIT",406,0)
 N HRS,MINHR,HRSMIN
"RTN","PSSHRIT",407,0)
 S HRSMIN=""
"RTN","PSSHRIT",408,0)
 S MINHR=60     ;TOTAL # OF MIN IN AN HR
"RTN","PSSHRIT",409,0)
 S HRS=MIN\MINHR,MIN=MIN#MINHR
"RTN","PSSHRIT",410,0)
 I HRS S HRSMIN=HRS_" HR"_$S(HRS>1:"S",1:"")
"RTN","PSSHRIT",411,0)
 I MIN S HRSMIN=HRSMIN_$S(HRSMIN:", ",1:"")_MIN_" MINUTE"_$S(MIN>1:"S",1:"")
"RTN","PSSHRIT",412,0)
 Q HRSMIN
"RTN","PSSHRIT",413,0)
 ;
"RTN","PSSHRIT",414,0)
OUTPUT(INFO,DIWL) ;
"RTN","PSSHRIT",415,0)
 K ^UTILITY($J,"W")
"RTN","PSSHRIT",416,0)
 N DIWR,DIWF,DIW,DIWT,X
"RTN","PSSHRIT",417,0)
 S DIWL=$G(DIWL,1)
"RTN","PSSHRIT",418,0)
 S X=INFO,DIWR=$S($G(IOM):IOM,1:60),DIWF="W" D ^DIWP
"RTN","PSSHRIT",419,0)
 D ^DIWW
"RTN","PSSHRIT",420,0)
 Q
"RTN","PSSHRIT",421,0)
 ;
"RTN","PSSHRIT",422,0)
 ;
"RTN","PSSHRIT",423,0)
SCUST ;Set Custom info
"RTN","PSSHRIT",424,0)
 I $D(^TMP($J,BASE,"OUT","DRUGDRUG","S",DRUG1,ORDER,1)) S INFO=$G(^TMP($J,BASE,"OUT","DRUGDRUG","S",DRUG1,ORDER,1,"PMON",9,0)) Q
"RTN","PSSHRIT",425,0)
 I $D(^TMP($J,BASE,"OUT","DRUGDRUG","S",DRUG2,"I;10U;PROFILE;10",1)) S INFO=$G(^TMP($J,BASE,"OUT","DRUGDRUG","S",DRUG2,"I;10U;PROFILE;10",1,"PMON",9,0)) Q
"RTN","PSSHRIT",426,0)
 S INFO=""
"RTN","PSSHRIT",427,0)
 Q
"RTN","PSSHRIT",428,0)
 ;
"RTN","PSSHRIT",429,0)
VENDRPT ;**Prints out the VENDOR INTERFACE DATA FILE (#59.74) sorted by most recent downtime first**
"RTN","PSSHRIT",430,0)
 ;
"RTN","PSSHRIT",431,0)
 ;The report retrieves the output using the Fileman EN1^DIP data retrieval call
"RTN","PSSHRIT",432,0)
 ;
"RTN","PSSHRIT",433,0)
 W !!,"This report will print out all information related to when and for how long the"
"RTN","PSSHRIT",434,0)
 W !,"vendor interface is unavailable (sorted by most recent down time first)."
"RTN","PSSHRIT",435,0)
 W !,"This information comes from the VENDOR INTERFACE DATA FILE."
"RTN","PSSHRIT",436,0)
 W !!,?15,"*** This has the potential to be a long report ***"
"RTN","PSSHRIT",437,0)
 W !!,"You may queue the report to print if you wish. You may also ""^"" to halt the"
"RTN","PSSHRIT",438,0)
 W !,"report at any time.",!!
"RTN","PSSHRIT",439,0)
 ;
"RTN","PSSHRIT",440,0)
 N DIC,BY,L,DIPCRIT,FR,TO,DHD,DIOBEG,DIOEND,FLDS
"RTN","PSSHRIT",441,0)
 S DIC="^PS(59.74,",BY="-.01",L=0,DIPCRIT=1
"RTN","PSSHRIT",442,0)
 S FR="?,",TO="?,",DHD="VENDOR INTERFACE DATA LIST"
"RTN","PSSHRIT",443,0)
 S DIOBEG="W @IOF"
"RTN","PSSHRIT",444,0)
 S FLDS=".01;""DATE/TIME UNAVAILABLE"",1;""DATE/TIME AVAILABLE"""";C26"",2;""TOTAL DOWNTIME"""
"RTN","PSSHRIT",445,0)
 D EN1^DIP
"RTN","PSSHRIT",446,0)
 Q
"RTN","PSSHRVL1")
0^8^B224743007
"RTN","PSSHRVL1",1,0)
PSSHRVL1 ;WOIFO/Alex Vasquez, Timothy Sabat, Steve Gordon - Continuation Data Validation routine for drug checks ;01/15/07
"RTN","PSSHRVL1",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**136,169,160,173**;9/30/97;Build 9
"RTN","PSSHRVL1",3,0)
 ;
"RTN","PSSHRVL1",4,0)
 ; Reference to ^PSNDF(50.68 GCNSEQNO field is supported by IA #3735 
"RTN","PSSHRVL1",5,0)
 ; 
"RTN","PSSHRVL1",6,0)
NEXTEX(PSS,PSSHASH) ;
"RTN","PSSHRVL1",7,0)
 ;@DESC Gets the next exception
"RTN","PSSHRVL1",8,0)
 ;@PSS The temp hash
"RTN","PSSHRVL1",9,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVL1",10,0)
 ;
"RTN","PSSHRVL1",11,0)
 N PSNEXT
"RTN","PSSHRVL1",12,0)
 S PSNEXT=":"
"RTN","PSSHRVL1",13,0)
 S PSNEXT=$ORDER(^TMP($JOB,PSSHASH("Base"),"OUT","EXCEPTIONS",PSS("PharmOrderNo"),PSNEXT),-1)
"RTN","PSSHRVL1",14,0)
 Q PSNEXT+1
"RTN","PSSHRVL1",15,0)
 ;;
"RTN","PSSHRVL1",16,0)
NEXTEXD(PSS,PSSHASH) ;
"RTN","PSSHRVL1",17,0)
 ;@DESC Gets the next dose exception
"RTN","PSSHRVL1",18,0)
 ;@PSS The temp hash
"RTN","PSSHRVL1",19,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVL1",20,0)
 N PSNEXT
"RTN","PSSHRVL1",21,0)
 S PSNEXT=":"
"RTN","PSSHRVL1",22,0)
 S PSNEXT=$ORDER(^TMP($JOB,PSSHASH("Base"),"OUT","EXCEPTIONS","DOSE",PSS("PharmOrderNo"),PSNEXT),-1)
"RTN","PSSHRVL1",23,0)
 Q PSNEXT+1
"RTN","PSSHRVL1",24,0)
 ;;
"RTN","PSSHRVL1",25,0)
WRITE(PSSHASH) ;
"RTN","PSSHRVL1",26,0)
 ;@Writes a response, based on the list of exceptions stored in Hash
"RTN","PSSHRVL1",27,0)
 ;@NOTE The internal hash looks like this:
"RTN","PSSHRVL1",28,0)
 ;PSSHASH("Exception","PROSPECTIVE","DOSE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText,NoWrite
"RTN","PSSHRVL1",29,0)
 ;PSSHASH("Exception","PROSPECTIVE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText,NoWrite
"RTN","PSSHRVL1",30,0)
 ;PSSHASH("Exception","PROFILE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText,NoWrite
"RTN","PSSHRVL1",31,0)
 ;PSSHASH("Exception","PatientIenMissing")=""
"RTN","PSSHRVL1",32,0)
 ;PSSHASH("Reason")="Failed Validation"
"RTN","PSSHRVL1",33,0)
 ;
"RTN","PSSHRVL1",34,0)
 ;
"RTN","PSSHRVL1",35,0)
 NEW PSS
"RTN","PSSHRVL1",36,0)
 SET PSS("PharmOrderNo")=""
"RTN","PSSHRVL1",37,0)
 SET PSS("I")=""
"RTN","PSSHRVL1",38,0)
 FOR  SET PSS("PharmOrderNo")=$ORDER(PSSHASH("Exception","PROFILE",PSS("PharmOrderNo"))) QUIT:PSS("PharmOrderNo")=""  DO 
"RTN","PSSHRVL1",39,0)
  . FOR  SET PSS("I")=$ORDER(PSSHASH("Exception","PROFILE",PSS("PharmOrderNo"),PSS("I"))) QUIT:PSS("I")=""  DO
"RTN","PSSHRVL1",40,0)
  . . DO WPROFILE(.PSSHASH,.PSS)
"RTN","PSSHRVL1",41,0)
  . . QUIT
"RTN","PSSHRVL1",42,0)
  . QUIT
"RTN","PSSHRVL1",43,0)
 ;
"RTN","PSSHRVL1",44,0)
 SET PSS("PharmOrderNo")=""
"RTN","PSSHRVL1",45,0)
 SET PSS("I")=""
"RTN","PSSHRVL1",46,0)
 FOR  SET PSS("PharmOrderNo")=$ORDER(PSSHASH("Exception","PROSPECTIVE","DOSE",PSS("PharmOrderNo"))) QUIT:PSS("PharmOrderNo")=""  DO 
"RTN","PSSHRVL1",47,0)
  . FOR  SET PSS("I")=$ORDER(PSSHASH("Exception","PROSPECTIVE","DOSE",PSS("PharmOrderNo"),PSS("I"))) QUIT:PSS("I")=""  DO
"RTN","PSSHRVL1",48,0)
  . . DO WDOSE(.PSSHASH,.PSS)
"RTN","PSSHRVL1",49,0)
  . . ;kill off node to prevent next loop from setting PSS("PharmOrderNo") to "DOSE"
"RTN","PSSHRVL1",50,0)
  . . K PSSHASH("Exception","PROSPECTIVE","DOSE",PSS("PharmOrderNo"),PSS("I"))
"RTN","PSSHRVL1",51,0)
  . QUIT
"RTN","PSSHRVL1",52,0)
 ;
"RTN","PSSHRVL1",53,0)
 SET PSS("PharmOrderNo")=""
"RTN","PSSHRVL1",54,0)
 SET PSS("I")=""
"RTN","PSSHRVL1",55,0)
 FOR  SET PSS("PharmOrderNo")=$ORDER(PSSHASH("Exception","PROSPECTIVE",PSS("PharmOrderNo"))) QUIT:PSS("PharmOrderNo")=""  DO 
"RTN","PSSHRVL1",56,0)
  . FOR  SET PSS("I")=$ORDER(PSSHASH("Exception","PROSPECTIVE",PSS("PharmOrderNo"),PSS("I"))) QUIT:PSS("I")=""  DO
"RTN","PSSHRVL1",57,0)
  . . DO WPROSPEC(.PSSHASH,.PSS)
"RTN","PSSHRVL1",58,0)
  . QUIT
"RTN","PSSHRVL1",59,0)
 ;
"RTN","PSSHRVL1",60,0)
 QUIT
"RTN","PSSHRVL1",61,0)
 ;;
"RTN","PSSHRVL1",62,0)
WDOSE(PSSHASH,PSS) ;
"RTN","PSSHRVL1",63,0)
 ;@DESC Writes the dose exceptions out.
"RTN","PSSHRVL1",64,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVL1",65,0)
 ;@PSS The temp hash
"RTN","PSSHRVL1",66,0)
 ;@NOTE The exception hash looks like this.
"RTN","PSSHRVL1",67,0)
 ;PSSHASH("Exception","PROSPECTIVE","DOSE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText
"RTN","PSSHRVL1",68,0)
 ;
"RTN","PSSHRVL1",69,0)
 NEW TYPE,I
"RTN","PSSHRVL1",70,0)
 SET PSS("DoseValue")=$G(^TMP($JOB,PSSHASH("Base"),"IN","DOSE",PSS("PharmOrderNo")))
"RTN","PSSHRVL1",71,0)
 ;Set the next exception
"RTN","PSSHRVL1",72,0)
 D:$P(PSSHASH("Exception","PROSPECTIVE","DOSE",PSS("PharmOrderNo"),PSS("I")),U,11)'=1
"RTN","PSSHRVL1",73,0)
 .S ^TMP($JOB,PSSHASH("Base"),"OUT","EXCEPTIONS","DOSE",PSS("PharmOrderNo"),$$NEXTEXD(.PSS,.PSSHASH))=PSSHASH("Exception","PROSPECTIVE","DOSE",PSS("PharmOrderNo"),PSS("I"))
"RTN","PSSHRVL1",74,0)
 QUIT
"RTN","PSSHRVL1",75,0)
 ;;
"RTN","PSSHRVL1",76,0)
WPROFILE(PSSHASH,PSS) ;
"RTN","PSSHRVL1",77,0)
 ;@DESC Writes the profile drug exceptions out.
"RTN","PSSHRVL1",78,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVL1",79,0)
 ;@PSS The temp hash
"RTN","PSSHRVL1",80,0)
 ;Kill the corresponding profile drug
"RTN","PSSHRVL1",81,0)
 ;KILL ^TMP($JOB,PSSHASH("Base"),"IN","PROFILE",PSS("PharmOrderNo"))
"RTN","PSSHRVL1",82,0)
 ;Set the exception in the global
"RTN","PSSHRVL1",83,0)
 S:$P(PSSHASH("Exception","PROFILE",PSS("PharmOrderNo"),PSS("I")),U,11)'=1 ^TMP($JOB,PSSHASH("Base"),"OUT","EXCEPTIONS",PSS("PharmOrderNo"),$$NEXTEX(.PSS,.PSSHASH))=PSSHASH("Exception","PROFILE",PSS("PharmOrderNo"),PSS("I"))
"RTN","PSSHRVL1",84,0)
 ;If no profile drugs left and the proVpro flag exists, delete it.
"RTN","PSSHRVL1",85,0)
 DO:'$DATA(^TMP($JOB,PSSHASH("Base"),"IN","PROFILE"))
"RTN","PSSHRVL1",86,0)
  . ;KILL ^TMP($JOB,PSSHASH("Base"),"IN","PROFILEVPROFILE")
"RTN","PSSHRVL1",87,0)
  .  D KILLCHEK(PSSHASH("Base"),"PROFILEVPROFILE")
"RTN","PSSHRVL1",88,0)
  . QUIT
"RTN","PSSHRVL1",89,0)
 QUIT
"RTN","PSSHRVL1",90,0)
 ;;
"RTN","PSSHRVL1",91,0)
WPROSPEC(PSSHASH,PSS) ;
"RTN","PSSHRVL1",92,0)
 ;@DESC Writes the prospective drug exceptions out.
"RTN","PSSHRVL1",93,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVL1",94,0)
 ;@PSS The temp hash
"RTN","PSSHRVL1",95,0)
 ;@NOTE Exception Hash Looks Like
"RTN","PSSHRVL1",96,0)
 ;PSSHASH("Exception","PROSPECTIVE","DOSE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText
"RTN","PSSHRVL1",97,0)
 ;PSSHASH("Exception","PROSPECTIVE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText
"RTN","PSSHRVL1",98,0)
 ;
"RTN","PSSHRVL1",99,0)
 ;Set the exception data
"RTN","PSSHRVL1",100,0)
 S:$P(PSSHASH("Exception","PROSPECTIVE",PSS("PharmOrderNo"),PSS("I")),U,11)'=1 ^TMP($JOB,PSSHASH("Base"),"OUT","EXCEPTIONS",PSS("PharmOrderNo"),$$NEXTEX(.PSS,.PSSHASH))=PSSHASH("Exception","PROSPECTIVE",PSS("PharmOrderNo"),PSS("I"))
"RTN","PSSHRVL1",101,0)
 QUIT
"RTN","PSSHRVL1",102,0)
 ;
"RTN","PSSHRVL1",103,0)
KILLALL(BASE) ;
"RTN","PSSHRVL1",104,0)
 ;INPUTS BASE SUBCRIPT
"RTN","PSSHRVL1",105,0)
 ;@DESC Kills the DrugDrug, Therapy, ProfileVProfile, and Dose check nodes.
"RTN","PSSHRVL1",106,0)
 DO KILLCHEK("DRUGDRUG",BASE)
"RTN","PSSHRVL1",107,0)
 DO KILLCHEK("THERAPY",BASE)
"RTN","PSSHRVL1",108,0)
 DO KILLCHEK("PROFILEVPROFILE",BASE)
"RTN","PSSHRVL1",109,0)
 DO KILLCHEK("DOSE",BASE)
"RTN","PSSHRVL1",110,0)
 QUIT
"RTN","PSSHRVL1",111,0)
 ;;
"RTN","PSSHRVL1",112,0)
KILLCHEK(PSSCHECK,BASE) ;
"RTN","PSSHRVL1",113,0)
 ;@DESC Kills the check node specified in parameter
"RTN","PSSHRVL1",114,0)
 ;@PSSCHEK The node to kill
"RTN","PSSHRVL1",115,0)
 ;
"RTN","PSSHRVL1",116,0)
 KILL ^TMP($JOB,BASE,"IN",PSSCHECK)
"RTN","PSSHRVL1",117,0)
 QUIT
"RTN","PSSHRVL1",118,0)
 ;
"RTN","PSSHRVL1",119,0)
 ;
"RTN","PSSHRVL1",120,0)
KILLNODE(BASE,TYPE,ORDER) ;
"RTN","PSSHRVL1",121,0)
 ;
"RTN","PSSHRVL1",122,0)
 ;@DESC KILLS A SINGLE NODE FOR A DRUG
"RTN","PSSHRVL1",123,0)
 ;@BASE--the subscript after $JOB
"RTN","PSSHRVL1",124,0)
 ;@TYPE-Can have 3 possible values: "PROSPECTIVE","PROFILE" or "DOSE"
"RTN","PSSHRVL1",125,0)
 ;@ODRDER-Is the order information to make the node unique
"RTN","PSSHRVL1",126,0)
 KILL ^TMP($JOB,BASE,"IN",TYPE,ORDER)
"RTN","PSSHRVL1",127,0)
 Q
"RTN","PSSHRVL1",128,0)
 ;
"RTN","PSSHRVL1",129,0)
GCNREASN(DRUGIEN,DRUGNM,ORDRNUM,BADGCN) ;
"RTN","PSSHRVL1",130,0)
 ;
"RTN","PSSHRVL1",131,0)
 ;Returns a message and reason on why a drug does not have a GCNSEQNO
"RTN","PSSHRVL1",132,0)
 ;inputs: DRUGIEN-IEN OF DRUG
"RTN","PSSHRVL1",133,0)
 ;DRUGNM-NAME OF DRUG
"RTN","PSSHRVL1",134,0)
 ;ORDRNUM-PHARMACY ORDER NUM
"RTN","PSSHRVL1",135,0)
 ;BADGCN-(OPTIONAL)FLAG IS SET to 1 IF DRUG RETURNED AS NOT FOUND BY SWRI/FDB
"RTN","PSSHRVL1",136,0)
 ;        if set to -1 Missing or invalid GCNSEQNO  from Input node  
"RTN","PSSHRVL1",137,0)
 N VAPROD1,NDNODE,REASON,MESSAGE,VAIEN,PSSVQPAC,PSSVQDOS,PSSVQNOM,PSSVQREM,PSSVQTY1,PSSVQTY2
"RTN","PSSHRVL1",138,0)
 S MESSAGE=$$NOCHKMSG(DRUGNM,ORDRNUM),PSSVQDOS=0,PSSVQPAC=$S($E(PSSHASH("Base"),1,2)="PS":1,1:0) I $T(DS^PSSDSAPI)]"",$$DS^PSSDSAPI S PSSVQDOS=1
"RTN","PSSHRVL1",139,0)
 S REASON="",PSSVQREM=$S($P(ORDRNUM,";")="R":1,1:0)
"RTN","PSSHRVL1",140,0)
 S PSSVQTY1=$P(ORDRNUM,";",3),PSSVQTY1=$$UP^XLFSTR(PSSVQTY1),PSSVQTY2=$S(PSSVQTY1["PROSPECTIVE":1,1:0)
"RTN","PSSHRVL1",141,0)
 ;
"RTN","PSSHRVL1",142,0)
 S VAPROD1=""
"RTN","PSSHRVL1",143,0)
 D  ;Case statement
"RTN","PSSHRVL1",144,0)
 .I $G(BADGCN)=1 S MESSAGE=$$NXCHKMSG(DRUGNM) S PSSVQNOM=$$GCMESS,REASON=$S(PSSVQNOM:"^1",1:"") Q
"RTN","PSSHRVL1",145,0)
 .I '$G(DRUGIEN),'PSSVQREM S REASON="No dispense drug found for Orderable Item" Q
"RTN","PSSHRVL1",146,0)
 .S NDNODE=$G(^PSDRUG(DRUGIEN,"ND"))
"RTN","PSSHRVL1",147,0)
 .;if no ndnode or 3rd piece not populated 
"RTN","PSSHRVL1",148,0)
 .I 'PSSVQREM,'$L(NDNODE)!('$P(NDNODE,U,3)) D  Q
"RTN","PSSHRVL1",149,0)
 ..S REASON="Drug not matched to NDF" D:PSSVQPAC&($D(^TMP($J,PSSHASH("Base"),"IN","DOSE"))) NZMSG I 'PSSVQPAC S MESSAGE=$$NXCHKMSG(DRUGNM),REASON=""
"RTN","PSSHRVL1",150,0)
 .S VAIEN=$S('PSSVQREM:+$P(NDNODE,U,3),1:0)
"RTN","PSSHRVL1",151,0)
 .S:VAIEN VAPROD1=$P($G(^PSNDF(50.68,VAIEN,1)),U,5)    ; Get the GCNSEQNO
"RTN","PSSHRVL1",152,0)
 .I 'VAPROD1!($G(BADGCN)=-1) D
"RTN","PSSHRVL1",153,0)
 ..S MESSAGE=$$NXCHKMSG(DRUGNM) S PSSVQNOM=$$GCMESS,REASON=$S(PSSVQNOM:"^1",1:"")
"RTN","PSSHRVL1",154,0)
 ;
"RTN","PSSHRVL1",155,0)
 Q MESSAGE_U_REASON
"RTN","PSSHRVL1",156,0)
 ;
"RTN","PSSHRVL1",157,0)
NOCHKMSG(DRUGNM,ORDRNUM) ;
"RTN","PSSHRVL1",158,0)
 ;Returns msg that no checks could be performed.
"RTN","PSSHRVL1",159,0)
 ;INPUTS: 
"RTN","PSSHRVL1",160,0)
 ;DRUGNM-Name of drug
"RTN","PSSHRVL1",161,0)
 ;ORDRNUM-PHARMACY ORDER NUMBER
"RTN","PSSHRVL1",162,0)
 N MESSAGE
"RTN","PSSHRVL1",163,0)
 S MESSAGE="Enhanced Order Checks cannot be performed for "_$$LOCORREM(ORDRNUM)_$$OUTPAT(ORDRNUM)_" Drug: "_DRUGNM
"RTN","PSSHRVL1",164,0)
 Q MESSAGE
"RTN","PSSHRVL1",165,0)
 ;
"RTN","PSSHRVL1",166,0)
OUTPAT(ORDRNUM) ;
"RTN","PSSHRVL1",167,0)
 ; Returns " Outpatient" if it is one.
"RTN","PSSHRVL1",168,0)
 ;INPUTS: 
"RTN","PSSHRVL1",169,0)
 ;ORDRNUM-PHARMACY ORDER NUMBER
"RTN","PSSHRVL1",170,0)
 ;PSSBASE - globally defined
"RTN","PSSHRVL1",171,0)
 ;
"RTN","PSSHRVL1",172,0)
 N OUTPAT
"RTN","PSSHRVL1",173,0)
 S OUTPAT=""
"RTN","PSSHRVL1",174,0)
 I $$LOCORREM(ORDRNUM)="Local" D
"RTN","PSSHRVL1",175,0)
 .I $E(ORDRNUM)'="I",$E(ORDRNUM)'="R",ORDRNUM["PROFILE",$G(^TMP($J,PSSBASE,"IN","SOURCE"))="I" S OUTPAT=" Outpatient"
"RTN","PSSHRVL1",176,0)
 Q OUTPAT
"RTN","PSSHRVL1",177,0)
 ;
"RTN","PSSHRVL1",178,0)
OIMSG(OINAME,PSSNOITN) ;
"RTN","PSSHRVL1",179,0)
 ;INPUT: Orderable item name
"RTN","PSSHRVL1",180,0)
 ;       Order number
"RTN","PSSHRVL1",181,0)
 ;RETURNS-ERROR MESSAGE
"RTN","PSSHRVL1",182,0)
 N MESSAGE,PSSNOITP,PSSNOITD,PSSNOIT1,PSSNOIT2
"RTN","PSSHRVL1",183,0)
 S PSSNOITP=$S($E(PSSHASH("Base"),1,2)="PS":0,1:1)
"RTN","PSSHRVL1",184,0)
 S PSSNOITD=0 I $T(DS^PSSDSAPI)]"",$$DS^PSSDSAPI S PSSNOITD=1
"RTN","PSSHRVL1",185,0)
 S PSSNOIT1=$P(PSSNOITN,";",3),PSSNOIT1=$$UP^XLFSTR(PSSNOIT1),PSSNOIT2=$S(PSSNOIT1["PROSPECTIVE":1,1:0)
"RTN","PSSHRVL1",186,0)
 I PSSNOITP D  Q MESSAGE
"RTN","PSSHRVL1",187,0)
 .I $D(^TMP($J,PSSHASH("Base"),"IN","DOSE")) D  Q
"RTN","PSSHRVL1",188,0)
 ..S MESSAGE="Maximum Single Dose Check could not be done for Drug: "_OINAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSHRVL1",189,0)
 .S MESSAGE="Order Checks could not be done for Drug: "_OINAME_", please complete a manual check for Drug Interactions"_$S(PSSNOITD&($G(PSSNOIT2)):", Duplicate Therapy and appropriate Dosing.",1:" and Duplicate Therapy.")
"RTN","PSSHRVL1",190,0)
 S MESSAGE="Enhanced Order Checks cannot be performed for Orderable Item: "_OINAME
"RTN","PSSHRVL1",191,0)
 Q MESSAGE
"RTN","PSSHRVL1",192,0)
 ;
"RTN","PSSHRVL1",193,0)
INRSON(ERRNUM,ORDERNUM) ;
"RTN","PSSHRVL1",194,0)
 ;INPUT-REASON CODE (1,2 OR 3)
"RTN","PSSHRVL1",195,0)
 ;ORDERNUM-(OPTIONAL)-ORDERNUMBER
"RTN","PSSHRVL1",196,0)
 ;OUTPUT-REASON MESSAGE
"RTN","PSSHRVL1",197,0)
 ;
"RTN","PSSHRVL1",198,0)
 N REASON,NONVAFLG
"RTN","PSSHRVL1",199,0)
 S NONVAFLG=0  ;DEFAULT
"RTN","PSSHRVL1",200,0)
 S ORDERNUM=$G(ORDERNUM)
"RTN","PSSHRVL1",201,0)
 I $E(ORDERNUM)="N" S NONVAFLG=1
"RTN","PSSHRVL1",202,0)
 D
"RTN","PSSHRVL1",203,0)
 .I ERRNUM=1 D  Q
"RTN","PSSHRVL1",204,0)
 .. I 'NONVAFLG S REASON="No Dispense Drug found." Q   ; No active Dispense Drug found for Pending order. 
"RTN","PSSHRVL1",205,0)
 .. I NONVAFLG S REASON="No Dispense Drug found."      ; No active Dispense Drug found for Non-VA med order.
"RTN","PSSHRVL1",206,0)
 .I ERRNUM=2 S REASON="Free Text Dosage could not be evaluated." Q
"RTN","PSSHRVL1",207,0)
 .I ERRNUM=3 S REASON="Free Text Infusion Rate could not be evaluated."
"RTN","PSSHRVL1",208,0)
 .I ERRNUM=4 S REASON="No active IV Additive/Solution marked for IV fluid order entry could be found."
"RTN","PSSHRVL1",209,0)
 Q REASON
"RTN","PSSHRVL1",210,0)
 ;
"RTN","PSSHRVL1",211,0)
DEMOCHK(AGE,BSA,WEIGHT,PSDRUG) ;
"RTN","PSSHRVL1",212,0)
 ;Checks age and returns message and error reason
"RTN","PSSHRVL1",213,0)
 ;input: AGE--AGE
"RTN","PSSHRVL1",214,0)
 ;BSA-BSA
"RTN","PSSHRVL1",215,0)
 ;WEIGHT OF THE PATIENT
"RTN","PSSHRVL1",216,0)
 ;output: message and reason strings
"RTN","PSSHRVL1",217,0)
 ;
"RTN","PSSHRVL1",218,0)
 N PSMESSAGE,PSREASON,PSRESULT,TEXT
"RTN","PSSHRVL1",219,0)
 S PSRESULT="",PSREASON="",TEXT=""
"RTN","PSSHRVL1",220,0)
 I AGE'>0 S TEXT=" Age"
"RTN","PSSHRVL1",221,0)
 I $L(TEXT) D
"RTN","PSSHRVL1",222,0)
 .;PASSES IN NULL BECAUSE AT THE TIME OF CALL DO NOT HAVE DRUG NAME
"RTN","PSSHRVL1",223,0)
 .S PSMESSAGE=$$DOSEMSG(PSDRUG)
"RTN","PSSHRVL1",224,0)
 .S PSREASON="One or more required patient parameters unavailable:"_TEXT
"RTN","PSSHRVL1",225,0)
 .S PSRESULT=PSMESSAGE_U_PSREASON
"RTN","PSSHRVL1",226,0)
 Q PSRESULT
"RTN","PSSHRVL1",227,0)
 ;
"RTN","PSSHRVL1",228,0)
MEDRTE(PSROUTE,PSDRUGNM) ;
"RTN","PSSHRVL1",229,0)
 ;Checks route if null
"RTN","PSSHRVL1",230,0)
 ;inputs: ROUTE-MEDICATION ROUTE
"RTN","PSSHRVL1",231,0)
 ;DRUGNM-DRUG NAME
"RTN","PSSHRVL1",232,0)
 ;RETURNS THE ERROR MESSAGE AND ERROR REASON 
"RTN","PSSHRVL1",233,0)
 N PSMESSAGE,PSREASON,PSRESULT
"RTN","PSSHRVL1",234,0)
 S PSRESULT=""
"RTN","PSSHRVL1",235,0)
 I '$L(PSROUTE) D
"RTN","PSSHRVL1",236,0)
 .S PSMESSAGE=$$DOSEMSG(PSDRUGNM)
"RTN","PSSHRVL1",237,0)
 .;S PSREASON="Unmapped Local Medication Route"
"RTN","PSSHRVL1",238,0)
 .S PSREASON="Invalid or Undefined Dose Route"
"RTN","PSSHRVL1",239,0)
 .S PSRESULT=PSMESSAGE_U_PSREASON
"RTN","PSSHRVL1",240,0)
 Q PSRESULT
"RTN","PSSHRVL1",241,0)
 ;
"RTN","PSSHRVL1",242,0)
 ;
"RTN","PSSHRVL1",243,0)
CHKDSTYP(DOSETYP,PSDRUGNM) ;
"RTN","PSSHRVL1",244,0)
 ;inputs: DOSETYP-DOSE TYPE (MAINTENANCE,LOADING)
"RTN","PSSHRVL1",245,0)
 ;PSDRUGNM-DRUG NAME
"RTN","PSSHRVL1",246,0)
 ;RETURNS THE ERROR MESSAGE AND ERROR REASON 
"RTN","PSSHRVL1",247,0)
 N PSREASON,PSRESULT,PSMSG,TEXT,OKFLAG
"RTN","PSSHRVL1",248,0)
 S PSRESULT="",OKFLAG=0
"RTN","PSSHRVL1",249,0)
 F TEXT="LOADING","MAINTENANCE","INITIAL DOSE","INTERMEDIATE DOSE","PROPHYLACTIC","SINGLE DOSE" D  Q:OKFLAG
"RTN","PSSHRVL1",250,0)
 .I DOSETYP=TEXT S OKFLAG=1 Q
"RTN","PSSHRVL1",251,0)
 I '$L(DOSETYP)!'OKFLAG D
"RTN","PSSHRVL1",252,0)
 .S PSMSG=$$DOSEMSG(PSDRUGNM)
"RTN","PSSHRVL1",253,0)
 .;S PSREASON="Undefined Dose Type"
"RTN","PSSHRVL1",254,0)
 .S PSREASON="Invalid or Undefined Dose Type"
"RTN","PSSHRVL1",255,0)
 .S PSRESULT=PSMSG_U_PSREASON
"RTN","PSSHRVL1",256,0)
 Q PSRESULT
"RTN","PSSHRVL1",257,0)
 ;
"RTN","PSSHRVL1",258,0)
CHKDOSE(PSDOSE,PSDRUGNM) ;
"RTN","PSSHRVL1",259,0)
 ;CHECKS THE DOSE OF DRUG DOSE REQUEST
"RTN","PSSHRVL1",260,0)
 ;INPUTS: PSDOSE-ORDERED DOSE OF A DRUG
"RTN","PSSHRVL1",261,0)
 ;PSDRUGNM=NAME OF DRUG
"RTN","PSSHRVL1",262,0)
 ;RETURNS THE ERROR MESSAGE AND ERROR REASON
"RTN","PSSHRVL1",263,0)
 N PSREASON,PSRESULT,PSMSG
"RTN","PSSHRVL1",264,0)
 S PSRESULT=""
"RTN","PSSHRVL1",265,0)
 I PSDOSE'=+PSDOSE D
"RTN","PSSHRVL1",266,0)
 .S PSMSG=$$DOSEMSG(PSDRUGNM)
"RTN","PSSHRVL1",267,0)
 .S PSREASON="Invalid or Undefined Dose"
"RTN","PSSHRVL1",268,0)
 .S PSRESULT=PSMSG_U_PSREASON
"RTN","PSSHRVL1",269,0)
 Q PSRESULT
"RTN","PSSHRVL1",270,0)
 ;
"RTN","PSSHRVL1",271,0)
CHKUNIT(PSUNIT,PSDRUGNM) ;
"RTN","PSSHRVL1",272,0)
 ;CHECKS THE UNITS OF A DOSE-RETURNS ERROR AND REASON
"RTN","PSSHRVL1",273,0)
 ;INPUTS: PSUNIT-UNITS OF THE DRUG
"RTN","PSSHRVL1",274,0)
 ;PSDRUGNM-NAME OF THE DRUG
"RTN","PSSHRVL1",275,0)
 N PSREASON,PSRESULT,PSMSG
"RTN","PSSHRVL1",276,0)
 S PSRESULT=""
"RTN","PSSHRVL1",277,0)
 I '$L(PSUNIT) D
"RTN","PSSHRVL1",278,0)
 .S PSMSG=$$DOSEMSG(PSDRUGNM)
"RTN","PSSHRVL1",279,0)
 .S PSREASON="Invalid or Undefined Dose Unit"
"RTN","PSSHRVL1",280,0)
 .S PSRESULT=PSMSG_U_PSREASON
"RTN","PSSHRVL1",281,0)
 Q PSRESULT
"RTN","PSSHRVL1",282,0)
 ;
"RTN","PSSHRVL1",283,0)
CHKFREQ(PSFREQ) ;
"RTN","PSSHRVL1",284,0)
 ;INPUTS: PSFREQ-HOW OFTEN A DRUG IS ADMINISTRED
"RTN","PSSHRVL1",285,0)
 ;RETURNS-ERROR MESSAGE AND ERROR REASON
"RTN","PSSHRVL1",286,0)
 N PSREASON,PSRESULT,PSMSG
"RTN","PSSHRVL1",287,0)
 S PSMSG="Daily Dosage Range Check could not be performed."
"RTN","PSSHRVL1",288,0)
 S PSRESULT=""
"RTN","PSSHRVL1",289,0)
 D
"RTN","PSSHRVL1",290,0)
 .I '$L(PSFREQ) Q  ;Freq can be null
"RTN","PSSHRVL1",291,0)
 .I '$$VALFREQ^PSSHFREQ(PSFREQ) D
"RTN","PSSHRVL1",292,0)
 ..S PSREASON="Invalid or Undefined Frequency"
"RTN","PSSHRVL1",293,0)
 ..S PSRESULT=PSMSG_U_PSREASON
"RTN","PSSHRVL1",294,0)
 Q PSRESULT
"RTN","PSSHRVL1",295,0)
 ;
"RTN","PSSHRVL1",296,0)
CHKRATE(PSRATE,TYPE,DRUGNM,DURATION) ;
"RTN","PSSHRVL1",297,0)
 ;INPUTS: PSRATE-Can be either dose or duration rate
"RTN","PSSHRVL1",298,0)
 ;TYPE-DOSE OR DURATION
"RTN","PSSHRVL1",299,0)
 ;DRUGNM-DRUG NAME
"RTN","PSSHRVL1",300,0)
 ;DURATION-OPTIONAL DURATION NUMERIC
"RTN","PSSHRVL1",301,0)
 S DURATION=$G(DURATION)
"RTN","PSSHRVL1",302,0)
 ;output: returns error message and reason
"RTN","PSSHRVL1",303,0)
 N OKFLAG,STDRATE,RESULT,REASON,PSMSG
"RTN","PSSHRVL1",304,0)
 S RESULT=""
"RTN","PSSHRVL1",305,0)
 S OKFLAG=0 ;ASSUME BAD
"RTN","PSSHRVL1",306,0)
 D
"RTN","PSSHRVL1",307,0)
 .I '$L(PSRATE),TYPE="DURATION",'$L(DURATION) Q  ;can be null for duration if duration is null
"RTN","PSSHRVL1",308,0)
 .F STDRATE="H","HOUR","MINUTE","MIN","DAY" D  Q:OKFLAG
"RTN","PSSHRVL1",309,0)
 ..I PSRATE=STDRATE S OKFLAG=1
"RTN","PSSHRVL1",310,0)
 .I 'OKFLAG D
"RTN","PSSHRVL1",311,0)
 ..S TYPE=$S(TYPE="DURATION":"Duration",TYPE="DOSE":"DOSE",1:"Duration or Dose")
"RTN","PSSHRVL1",312,0)
 ..S REASON="Invalid or Undefined "_TYPE_" Rate"
"RTN","PSSHRVL1",313,0)
 ..S PSMSG=$$DOSEMSG(DRUGNM)
"RTN","PSSHRVL1",314,0)
 ..S RESULT=PSMSG_U_REASON
"RTN","PSSHRVL1",315,0)
 Q RESULT
"RTN","PSSHRVL1",316,0)
 ;
"RTN","PSSHRVL1",317,0)
CHKDRATN(DURATION,DRUGNM) ;
"RTN","PSSHRVL1",318,0)
 ;INPUTS; DURATION-INTEGER-HOW LONG A DRUG IS TAKEN
"RTN","PSSHRVL1",319,0)
 ;PSMSG-ERROR MESSAGE
"RTN","PSSHRVL1",320,0)
 N RESULT,REASON,PSMSG
"RTN","PSSHRVL1",321,0)
 S RESULT=""
"RTN","PSSHRVL1",322,0)
 ;If not integer error
"RTN","PSSHRVL1",323,0)
 D
"RTN","PSSHRVL1",324,0)
 .I '$L(DURATION) Q  ;can be null OK
"RTN","PSSHRVL1",325,0)
 .;must be an integer > 0
"RTN","PSSHRVL1",326,0)
 .;I (DURATION'=+DURATION)!(DURATION'=(DURATION\1))!(DURATION=0) D
"RTN","PSSHRVL1",327,0)
 . I (DURATION=0)!(DURATION'?1.N) D
"RTN","PSSHRVL1",328,0)
 ..S REASON="Invalid or Undefined Duration"
"RTN","PSSHRVL1",329,0)
 ..S PSMSG=$$DOSEMSG(DRUGNM)
"RTN","PSSHRVL1",330,0)
 ..S RESULT=PSMSG_U_REASON
"RTN","PSSHRVL1",331,0)
 Q RESULT
"RTN","PSSHRVL1",332,0)
 ;
"RTN","PSSHRVL1",333,0)
DOSEMSG(DRUGNAME,TYPE) ;
"RTN","PSSHRVL1",334,0)
 ;INPUTS:DRUGNMAME
"RTN","PSSHRVL1",335,0)
 ;TYPE-either "R" for range or "S" for single or "D" for daily (optional)
"RTN","PSSHRVL1",336,0)
 ;OUTPUT STANDARD DOSAGE ERROR MESSAGE
"RTN","PSSHRVL1",337,0)
 N RETURN
"RTN","PSSHRVL1",338,0)
 S TYPE=$G(TYPE) ;OPTIONAL PARAMETER ONLY CALLED FROM PSSHRQ23
"RTN","PSSHRVL1",339,0)
 D
"RTN","PSSHRVL1",340,0)
 .I TYPE="R" D  Q
"RTN","PSSHRVL1",341,0)
 ..SET RETURN="Daily Dose Range Check could not be performed for Drug: "_DRUGNAME
"RTN","PSSHRVL1",342,0)
 .I TYPE="S" D  Q
"RTN","PSSHRVL1",343,0)
 ..;SET RETURN="Maximum Single Dose Range Check could not be performed for Drug: "_DRUGNAME
"RTN","PSSHRVL1",344,0)
 ..SET RETURN="Maximum Single Dose Check could not be performed for Drug: "_DRUGNAME
"RTN","PSSHRVL1",345,0)
 .I TYPE="D" D  Q
"RTN","PSSHRVL1",346,0)
 ..S RETURN="Daily Dose Check could not be performed for Drug: "_DRUGNAME
"RTN","PSSHRVL1",347,0)
 .;
"RTN","PSSHRVL1",348,0)
 .S RETURN="Maximum Single Dose Check could not be performed for Drug: "_DRUGNAME  ;2.0 Code changed from Dosing Checks..
"RTN","PSSHRVL1",349,0)
 Q RETURN
"RTN","PSSHRVL1",350,0)
 ;
"RTN","PSSHRVL1",351,0)
GETUCI() ;
"RTN","PSSHRVL1",352,0)
 ;RETURNS CURRENT UCI
"RTN","PSSHRVL1",353,0)
 N Y
"RTN","PSSHRVL1",354,0)
 X ^%ZOSF("UCI")
"RTN","PSSHRVL1",355,0)
 Q Y
"RTN","PSSHRVL1",356,0)
 ;
"RTN","PSSHRVL1",357,0)
ERRMSG(TYPE,DRUGNAME,ORDRNUM,WARNING) ;
"RTN","PSSHRVL1",358,0)
 ;Returns standard messages for error nodes
"RTN","PSSHRVL1",359,0)
 ;created from FDB alerts
"RTN","PSSHRVL1",360,0)
 ;inputs:
"RTN","PSSHRVL1",361,0)
 ;TYPE-DRUGDRUG,THERAPY,DOSE
"RTN","PSSHRVL1",362,0)
 ;DRUGNAME-NAME OF DRUG
"RTN","PSSHRVL1",363,0)
 ;WARNING (OPTIONAL) 1 OR 0 IF SET CAME BACKF FROM FDB AS SEVERITY OF WARINING)
"RTN","PSSHRVL1",364,0)
 ;CALLED BY MSGWRITE^PSSHRQ21
"RTN","PSSHRVL1",365,0)
 ;FDB Errors, Input Exceptions and Dose Screening prior to FDB call pass in Null Type
"RTN","PSSHRVL1",366,0)
 N MSG,LOCORREM
"RTN","PSSHRVL1",367,0)
 S WARNING=$G(WARNING)
"RTN","PSSHRVL1",368,0)
 S MSG=""
"RTN","PSSHRVL1",369,0)
 S LOCORREM=$$LOCORREM(ORDRNUM)
"RTN","PSSHRVL1",370,0)
 D
"RTN","PSSHRVL1",371,0)
 .I WARNING D  Q
"RTN","PSSHRVL1",372,0)
 ..I TYPE="DRUGDRUG" S MSG="Drug Interaction Order Check for "_LOCORREM_" Drug: "
"RTN","PSSHRVL1",373,0)
 ..I TYPE="THERAPY" S MSG="Duplicate Therapy Order Check for "_LOCORREM_" Drug: "
"RTN","PSSHRVL1",374,0)
 ..I TYPE="DOSE" S MSG="Maximum Single Dose Check Warning for "_DRUGNAME_":" Q    ; do not execute the next line - and 2.0 change from DOsing Order..
"RTN","PSSHRVL1",375,0)
 ..S MSG=MSG_DRUGNAME_" Warning"
"RTN","PSSHRVL1",376,0)
 .I TYPE="DRUGDRUG" S MSG="Drug Interaction Order Check could not be performed."
"RTN","PSSHRVL1",377,0)
 .I TYPE="THERAPY" S MSG="Duplicate Therapy Order Check could not be performed for "_LOCORREM_" Drug: "_DRUGNAME
"RTN","PSSHRVL1",378,0)
 .I TYPE="DOSE" S MSG=$$DOSEMSG(DRUGNAME)
"RTN","PSSHRVL1",379,0)
 Q MSG
"RTN","PSSHRVL1",380,0)
 ;
"RTN","PSSHRVL1",381,0)
ORDRTYP(ORDERNUM) ;
"RTN","PSSHRVL1",382,0)
 ;RETURNS THE TYPE OF ORDER: OUTPATIENT PROSPECTIVE DRUG, OUTPATIENT, REMOTE OR INPATIENT
"RTN","PSSHRVL1",383,0)
 ;INPUTS: ORDERNUM: TYPE;ORDER NUMBER;DRUG TYPE (PROFILE, PROSPECTIVE, REMOTE);COUNTER
"RTN","PSSHRVL1",384,0)
 N TYPE,C1
"RTN","PSSHRVL1",385,0)
 S TYPE=""
"RTN","PSSHRVL1",386,0)
 S C1=$E(ORDERNUM)
"RTN","PSSHRVL1",387,0)
 D
"RTN","PSSHRVL1",388,0)
 .I ORDERNUM["REMOTE" S TYPE="REMOTE" Q
"RTN","PSSHRVL1",389,0)
 .I C1="O" S TYPE="OUTPATIENT" Q
"RTN","PSSHRVL1",390,0)
 .I C1="Z" S TYPE="OUTPATIENT" Q
"RTN","PSSHRVL1",391,0)
 .I C1="I" S TYPE="INPATIENT" Q
"RTN","PSSHRVL1",392,0)
 .I C1="R" S TYPE="REMOTE" Q
"RTN","PSSHRVL1",393,0)
 Q TYPE
"RTN","PSSHRVL1",394,0)
 ;
"RTN","PSSHRVL1",395,0)
LOCORREM(ORDERNUM) ;
"RTN","PSSHRVL1",396,0)
 ;INPUTS: ORDERNUM: TYPE;ORDER NUMBER;DRUG TYPE (PROFILE, PROSPECTIVE, REMOTE);COUNTER
"RTN","PSSHRVL1",397,0)
 ;OUTPUTS:-String either "local" or "Remote"
"RTN","PSSHRVL1",398,0)
 N ORDRTYP,LOCORREM
"RTN","PSSHRVL1",399,0)
 S ORDRTYP=$$ORDRTYP(ORDERNUM)
"RTN","PSSHRVL1",400,0)
 D
"RTN","PSSHRVL1",401,0)
 .I ORDRTYP="REMOTE" S LOCORREM="Remote" Q
"RTN","PSSHRVL1",402,0)
 .S LOCORREM="Local"
"RTN","PSSHRVL1",403,0)
 Q LOCORREM
"RTN","PSSHRVL1",404,0)
 ;
"RTN","PSSHRVL1",405,0)
STATMSG() ;
"RTN","PSSHRVL1",406,0)
 ;This returns the standard message when an FDB update is being performed.
"RTN","PSSHRVL1",407,0)
 ;
"RTN","PSSHRVL1",408,0)
 N MSG
"RTN","PSSHRVL1",409,0)
 ;S MSG="Enhanced Order checks are unavailable. A Vendor database update is in progress."
"RTN","PSSHRVL1",410,0)
 S MSG="The connection to the vendor database has been disabled."
"RTN","PSSHRVL1",411,0)
 Q MSG
"RTN","PSSHRVL1",412,0)
 ;
"RTN","PSSHRVL1",413,0)
 ;
"RTN","PSSHRVL1",414,0)
GCMESS() ;Get Exclude field
"RTN","PSSHRVL1",415,0)
 N PSSVQND,PSSVQEXC,PSSVQPVP
"RTN","PSSHRVL1",416,0)
 S PSSVQPVP=$P(ORDRNUM,";",3)
"RTN","PSSHRVL1",417,0)
 I '$D(PSJDGCK) S PSSVQND=^TMP($J,PSSHASH("Base"),"IN",PSSVQPVP,ORDRNUM)
"RTN","PSSHRVL1",418,0)
 I $D(PSJDGCK) S PSSVQND=^TMP($J,PSSHASH("Base"),"IN","PROSPECTIVE",ORDRNUM)
"RTN","PSSHRVL1",419,0)
 S PSSVQEXC=""
"RTN","PSSHRVL1",420,0)
 D GCNMESX
"RTN","PSSHRVL1",421,0)
 Q PSSVQEXC
"RTN","PSSHRVL1",422,0)
 ;
"RTN","PSSHRVL1",423,0)
 ;
"RTN","PSSHRVL1",424,0)
GCNMESX ;
"RTN","PSSHRVL1",425,0)
 N PSSVQDRG,PSSVQ1,PSSVQ3,PSSVQVUI,PSSVQAR,PSSVQ4,PSSVQARR
"RTN","PSSHRVL1",426,0)
 S PSSVQDRG=$P(PSSVQND,"^",3) I PSSVQDRG D  Q
"RTN","PSSHRVL1",427,0)
 .S PSSVQ1=$P($G(^PSDRUG(PSSVQDRG,"ND")),"^"),PSSVQ3=$P($G(^PSDRUG(PSSVQDRG,"ND")),"^",3)
"RTN","PSSHRVL1",428,0)
 .I PSSVQ1,PSSVQ3 S PSSVQEXC=$$DDIEX^PSNAPIS(PSSVQ1,PSSVQ3)
"RTN","PSSHRVL1",429,0)
 S PSSVQVUI=$P(PSSVQND,"^",2) I 'PSSVQVUI Q
"RTN","PSSHRVL1",430,0)
 S PSSVQAR="PSSVQARR"
"RTN","PSSHRVL1",431,0)
 D GETIREF^XTID(50.68,.01,PSSVQVUI,PSSVQAR)
"RTN","PSSHRVL1",432,0)
 S PSSVQ4=$O(PSSVQARR(50.68,.01,""))
"RTN","PSSHRVL1",433,0)
 I PSSVQ4 S PSSVQEXC=$$DDIEX^PSNAPIS("",PSSVQ4)
"RTN","PSSHRVL1",434,0)
 Q
"RTN","PSSHRVL1",435,0)
 ;
"RTN","PSSHRVL1",436,0)
 ;
"RTN","PSSHRVL1",437,0)
NXCHKMSG(DRUGNM) ;
"RTN","PSSHRVL1",438,0)
 N MESSAGE
"RTN","PSSHRVL1",439,0)
 I $D(^TMP($J,PSSHASH("Base"),"IN","DOSE")) D  Q MESSAGE
"RTN","PSSHRVL1",440,0)
 .S MESSAGE="Maximum Single Dose Check could not be done for"_$S(PSSVQREM:" Remote",2:"")_" Drug: "_DRUGNM_", please complete a manual check for appropriate Dosing."
"RTN","PSSHRVL1",441,0)
 S MESSAGE="Order Checks could not be done for"
"RTN","PSSHRVL1",442,0)
 S MESSAGE=MESSAGE_$S(PSSVQREM:" Remote",2:"")_" Drug: "_DRUGNM_", please complete a manual check for Drug Interactions"_$S(PSSVQDOS&($G(PSSVQTY2)):", Duplicate Therapy and appropriate Dosing.",1:" and Duplicate Therapy.")
"RTN","PSSHRVL1",443,0)
 Q MESSAGE
"RTN","PSSHRVL1",444,0)
 ;
"RTN","PSSHRVL1",445,0)
 ;
"RTN","PSSHRVL1",446,0)
NZMSG ;Reset Message for Pharmacy Not matched to NDF error for Dosing
"RTN","PSSHRVL1",447,0)
 S MESSAGE="Maximum Single Dose Check could not be performed for Drug: "_DRUGNM
"RTN","PSSHRVL1",448,0)
 Q
"VER")
8.0^22.0
**END**
**END**
