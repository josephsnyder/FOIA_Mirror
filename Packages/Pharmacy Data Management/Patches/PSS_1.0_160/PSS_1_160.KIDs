KIDS Distribution saved on May 03, 2013@14:32:51
PSS*1*160
**KIDS**:PSS*1.0*160^

**INSTALL NAME**
PSS*1.0*160
"BLD",7971,0)
PSS*1.0*160^PHARMACY DATA MANAGEMENT^0^3130503^y
"BLD",7971,1,0)
^^73^73^3121005^
"BLD",7971,1,1,0)
This patch will activate the new Dosing Order Check functionality for
"BLD",7971,1,2,0)
Single Dose checking only for Inpatient Medications, Outpatient Pharmacy,
"BLD",7971,1,3,0)
and Computerized Patient Record System (CPRS). A message will be displayed
"BLD",7971,1,4,0)
to the user if the Single Dose entered for the medication order and all
"BLD",7971,1,5,0)
the other pertinent data is able to be properly converted for a valid
"BLD",7971,1,6,0)
Dosing Check, and the result is an out-of-range warning. An error message
"BLD",7971,1,7,0)
will be displayed if for any reason the Single Dose check cannot be 
"BLD",7971,1,8,0)
performed.
"BLD",7971,1,9,0)
 
"BLD",7971,1,10,0)
 
"BLD",7971,1,11,0)
This patch addresses the following New Service Request (NSR):
"BLD",7971,1,12,0)
-------------------------------------------------------------
"BLD",7971,1,13,0)
There is no NSR associated with this patch. 
"BLD",7971,1,14,0)
 
"BLD",7971,1,15,0)
 
"BLD",7971,1,16,0)
This patch addresses the following Remedy Ticket(s):
"BLD",7971,1,17,0)
----------------------------------------------------
"BLD",7971,1,18,0)
There are no Remedy tickets associated with this patch.
"BLD",7971,1,19,0)
 
"BLD",7971,1,20,0)
 
"BLD",7971,1,21,0)
Overview of Remedy Ticket(s):
"BLD",7971,1,22,0)
-----------------------------
"BLD",7971,1,23,0)
There are no Remedy tickets associated with this patch. 
"BLD",7971,1,24,0)
 
"BLD",7971,1,25,0)
 
"BLD",7971,1,26,0)
Components Exported With Patch: 
"BLD",7971,1,27,0)
-------------------------------
"BLD",7971,1,28,0)
 
"BLD",7971,1,29,0)
 
"BLD",7971,1,30,0)
The following is a list of fields included in this patch:
"BLD",7971,1,31,0)
 
"BLD",7971,1,32,0)
Field Name                      (Number)   File Name             (Number)
"BLD",7971,1,33,0)
----------------------------------------   ------------------------------
"BLD",7971,1,34,0)
EXCLUDE FROM ALL DOSE CHECKS           9   ADMINISTRATION SCHEDULE   51.1
"BLD",7971,1,35,0)
EXCLUDE FROM DAILY DOSE CHECK         10   ADMINISTRATION SCHEDULE   51.1
"BLD",7971,1,36,0)
DOSING ON/OFF                         95   PHARMACY SYSTEM           59.7
"BLD",7971,1,37,0)
DOSING ACTIVITY DATE AND TIME subfile 82 of PHARMACY SYSTEM          59.7:
"BLD",7971,1,38,0)
  DOSING ACTIVITY DATE AND TIME      .01
"BLD",7971,1,39,0)
  PERSON MAKING CHANGE                 1
"BLD",7971,1,40,0)
  ENABLE/DISABLE                       2                   
"BLD",7971,1,41,0)
                        
"BLD",7971,1,42,0)
The following is a list of data included in this patch:
"BLD",7971,1,43,0)
 
"BLD",7971,1,44,0)
File                      Entry
"BLD",7971,1,45,0)
-------------------       -------------
"BLD",7971,1,46,0)
DOSE UNITS (#51.24)       FILM(S)
"BLD",7971,1,47,0)
DOSE UNITS (#51.24)       ELISA UNIT(S) 
"BLD",7971,1,48,0)
DOSE UNITS (#51.24)       MILLIONUNIT(S)  new synonyms only:
"BLD",7971,1,49,0)
                          MILLION UNIT
"BLD",7971,1,50,0)
                          MILLION UNITS
"BLD",7971,1,51,0)
                                      
"BLD",7971,1,52,0)
 
"BLD",7971,1,53,0)
The following is a list of templates included in this patch:
"BLD",7971,1,54,0)
 
"BLD",7971,1,55,0)
Template Name                Type         File Name (Number)
"BLD",7971,1,56,0)
------------------           -----        -------------------------------
"BLD",7971,1,57,0)
PSSJ SCHEDULE EDIT           Input        ADMINISTRATION SCHEDULE (#51.1)
"BLD",7971,1,58,0)
 
"BLD",7971,1,59,0)
 
"BLD",7971,1,60,0)
The following is a list of options included in the patch:
"BLD",7971,1,61,0)
 
"BLD",7971,1,62,0)
Option Name                       Type
"BLD",7971,1,63,0)
--------------------------        ----
"BLD",7971,1,64,0)
PSS DRUG DOSING LOOKUP            Run
"BLD",7971,1,65,0)
PSS DOSING ORDER CHECKS           Run
"BLD",7971,1,66,0)
PSS TRAILING SPACES REPORT        Run
"BLD",7971,1,67,0)
                                      
"BLD",7971,1,68,0)
 
"BLD",7971,1,69,0)
The following is a list of security keys included in this patch:
"BLD",7971,1,70,0)
 
"BLD",7971,1,71,0)
Security Key Name
"BLD",7971,1,72,0)
-----------------
"BLD",7971,1,73,0)
PSS ORDER CHECKS
"BLD",7971,4,0)
^9.64PA^59.7^3
"BLD",7971,4,51.1,0)
51.1
"BLD",7971,4,51.1,2,0)
^9.641^51.1^1
"BLD",7971,4,51.1,2,51.1,0)
ADMINISTRATION SCHEDULE  (File-top level)
"BLD",7971,4,51.1,2,51.1,1,0)
^9.6411^10^2
"BLD",7971,4,51.1,2,51.1,1,9,0)
EXCLUDE FROM ALL DOSING CHECKS
"BLD",7971,4,51.1,2,51.1,1,10,0)
EXCLUDE FROM DAILY DOSE CHECK
"BLD",7971,4,51.1,222)
y^y^p^^^^n^^n
"BLD",7971,4,51.1,224)

"BLD",7971,4,51.24,0)
51.24
"BLD",7971,4,51.24,222)
n^n^f^^n^^y^r^n
"BLD",7971,4,51.24,224)
I Y=52!(Y=53)!(Y=23)
"BLD",7971,4,59.7,0)
59.7
"BLD",7971,4,59.7,2,0)
^9.641^59.7^2
"BLD",7971,4,59.7,2,59.7,0)
PHARMACY SYSTEM  (File-top level)
"BLD",7971,4,59.7,2,59.7,1,0)
^9.6411^95^1
"BLD",7971,4,59.7,2,59.7,1,95,0)
DOSING ON/OFF
"BLD",7971,4,59.7,2,59.782,0)
DOSING ACTIVITY DATE AND TIME  (sub-file)
"BLD",7971,4,59.7,2,59.782,1,0)
^9.6411^^
"BLD",7971,4,59.7,222)
y^y^p^^^^n^^n
"BLD",7971,4,59.7,224)

"BLD",7971,4,"APDD",51.1,51.1)

"BLD",7971,4,"APDD",51.1,51.1,9)

"BLD",7971,4,"APDD",51.1,51.1,10)

"BLD",7971,4,"APDD",59.7,59.7)

"BLD",7971,4,"APDD",59.7,59.7,95)

"BLD",7971,4,"APDD",59.7,59.782)

"BLD",7971,4,"B",51.1,51.1)

"BLD",7971,4,"B",51.24,51.24)

"BLD",7971,4,"B",59.7,59.7)

"BLD",7971,6.3)
76
"BLD",7971,"ABPKG")
n
"BLD",7971,"INID")
n^n
"BLD",7971,"INIT")
PSS160PO
"BLD",7971,"KRN",0)
^9.67PA^779.2^20
"BLD",7971,"KRN",.4,0)
.4
"BLD",7971,"KRN",.401,0)
.401
"BLD",7971,"KRN",.402,0)
.402
"BLD",7971,"KRN",.402,"NM",0)
^9.68A^1^1
"BLD",7971,"KRN",.402,"NM",1,0)
PSSJ SCHEDULE EDIT    FILE #51.1^51.1^0
"BLD",7971,"KRN",.402,"NM","B","PSSJ SCHEDULE EDIT    FILE #51.1",1)

"BLD",7971,"KRN",.403,0)
.403
"BLD",7971,"KRN",.5,0)
.5
"BLD",7971,"KRN",.84,0)
.84
"BLD",7971,"KRN",3.6,0)
3.6
"BLD",7971,"KRN",3.8,0)
3.8
"BLD",7971,"KRN",9.2,0)
9.2
"BLD",7971,"KRN",9.8,0)
9.8
"BLD",7971,"KRN",9.8,"NM",0)
^9.68A^26^26
"BLD",7971,"KRN",9.8,"NM",1,0)
PSSDSAPI^^0^B140284083
"BLD",7971,"KRN",9.8,"NM",2,0)
PSSDSEXC^^0^B204998585
"BLD",7971,"KRN",9.8,"NM",3,0)
PSSSCHRP^^0^B109553620
"BLD",7971,"KRN",9.8,"NM",4,0)
PSSJEEU^^0^B13608450
"BLD",7971,"KRN",9.8,"NM",5,0)
PSSDSAPA^^0^B70156002
"BLD",7971,"KRN",9.8,"NM",6,0)
PSSDSAPD^^0^B180554732
"BLD",7971,"KRN",9.8,"NM",7,0)
PSSDSAPM^^0^B247605421
"BLD",7971,"KRN",9.8,"NM",8,0)
PSS160EN^^0^B40169364
"BLD",7971,"KRN",9.8,"NM",9,0)
PSS160PO^^0^B136579965
"BLD",7971,"KRN",9.8,"NM",10,0)
PSSDSAPK^^0^B226082485
"BLD",7971,"KRN",9.8,"NM",11,0)
PSSDSAPL^^0^B108677776
"BLD",7971,"KRN",9.8,"NM",12,0)
PSSDSBPB^^0^B68007633
"BLD",7971,"KRN",9.8,"NM",13,0)
PSSDSBPC^^0^B37615346
"BLD",7971,"KRN",9.8,"NM",14,0)
PSSDSBPD^^0^B66106013
"BLD",7971,"KRN",9.8,"NM",15,0)
PSSDSBPA^^0^B112655451
"BLD",7971,"KRN",9.8,"NM",16,0)
PSSHRVAL^^0^B160566342
"BLD",7971,"KRN",9.8,"NM",17,0)
PSSHRVL1^^0^B221546631
"BLD",7971,"KRN",9.8,"NM",18,0)
PSSDRDOS^^0^B154577281
"BLD",7971,"KRN",9.8,"NM",19,0)
PSSFDBRT^^0^B57759107
"BLD",7971,"KRN",9.8,"NM",20,0)
PSSHTTP^^0^B8656729
"BLD",7971,"KRN",9.8,"NM",21,0)
PSSHRQ2^^0^B7188596
"BLD",7971,"KRN",9.8,"NM",22,0)
PSSHRQ2O^^0^B48912788
"BLD",7971,"KRN",9.8,"NM",23,0)
PSSEN168^^1^
"BLD",7971,"KRN",9.8,"NM",24,0)
PSSHRQ21^^0^B139673586
"BLD",7971,"KRN",9.8,"NM",25,0)
PSSFDBDI^^0^B129510787
"BLD",7971,"KRN",9.8,"NM",26,0)
PSSDSONF^^0^B29428168
"BLD",7971,"KRN",9.8,"NM","B","PSS160EN",8)

"BLD",7971,"KRN",9.8,"NM","B","PSS160PO",9)

"BLD",7971,"KRN",9.8,"NM","B","PSSDRDOS",18)

"BLD",7971,"KRN",9.8,"NM","B","PSSDSAPA",5)

"BLD",7971,"KRN",9.8,"NM","B","PSSDSAPD",6)

"BLD",7971,"KRN",9.8,"NM","B","PSSDSAPI",1)

"BLD",7971,"KRN",9.8,"NM","B","PSSDSAPK",10)

"BLD",7971,"KRN",9.8,"NM","B","PSSDSAPL",11)

"BLD",7971,"KRN",9.8,"NM","B","PSSDSAPM",7)

"BLD",7971,"KRN",9.8,"NM","B","PSSDSBPA",15)

"BLD",7971,"KRN",9.8,"NM","B","PSSDSBPB",12)

"BLD",7971,"KRN",9.8,"NM","B","PSSDSBPC",13)

"BLD",7971,"KRN",9.8,"NM","B","PSSDSBPD",14)

"BLD",7971,"KRN",9.8,"NM","B","PSSDSEXC",2)

"BLD",7971,"KRN",9.8,"NM","B","PSSDSONF",26)

"BLD",7971,"KRN",9.8,"NM","B","PSSEN168",23)

"BLD",7971,"KRN",9.8,"NM","B","PSSFDBDI",25)

"BLD",7971,"KRN",9.8,"NM","B","PSSFDBRT",19)

"BLD",7971,"KRN",9.8,"NM","B","PSSHRQ2",21)

"BLD",7971,"KRN",9.8,"NM","B","PSSHRQ21",24)

"BLD",7971,"KRN",9.8,"NM","B","PSSHRQ2O",22)

"BLD",7971,"KRN",9.8,"NM","B","PSSHRVAL",16)

"BLD",7971,"KRN",9.8,"NM","B","PSSHRVL1",17)

"BLD",7971,"KRN",9.8,"NM","B","PSSHTTP",20)

"BLD",7971,"KRN",9.8,"NM","B","PSSJEEU",4)

"BLD",7971,"KRN",9.8,"NM","B","PSSSCHRP",3)

"BLD",7971,"KRN",19,0)
19
"BLD",7971,"KRN",19,"NM",0)
^9.68A^3^3
"BLD",7971,"KRN",19,"NM",1,0)
PSS DRUG DOSING LOOKUP^^0
"BLD",7971,"KRN",19,"NM",2,0)
PSS DOSING ORDER CHECKS^^0
"BLD",7971,"KRN",19,"NM",3,0)
PSS TRAILING SPACES REPORT^^0
"BLD",7971,"KRN",19,"NM","B","PSS DOSING ORDER CHECKS",2)

"BLD",7971,"KRN",19,"NM","B","PSS DRUG DOSING LOOKUP",1)

"BLD",7971,"KRN",19,"NM","B","PSS TRAILING SPACES REPORT",3)

"BLD",7971,"KRN",19.1,0)
19.1
"BLD",7971,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",7971,"KRN",19.1,"NM",1,0)
PSS ORDER CHECKS^^0
"BLD",7971,"KRN",19.1,"NM","B","PSS ORDER CHECKS",1)

"BLD",7971,"KRN",101,0)
101
"BLD",7971,"KRN",409.61,0)
409.61
"BLD",7971,"KRN",771,0)
771
"BLD",7971,"KRN",779.2,0)
779.2
"BLD",7971,"KRN",870,0)
870
"BLD",7971,"KRN",8989.51,0)
8989.51
"BLD",7971,"KRN",8989.52,0)
8989.52
"BLD",7971,"KRN",8994,0)
8994
"BLD",7971,"KRN","B",.4,.4)

"BLD",7971,"KRN","B",.401,.401)

"BLD",7971,"KRN","B",.402,.402)

"BLD",7971,"KRN","B",.403,.403)

"BLD",7971,"KRN","B",.5,.5)

"BLD",7971,"KRN","B",.84,.84)

"BLD",7971,"KRN","B",3.6,3.6)

"BLD",7971,"KRN","B",3.8,3.8)

"BLD",7971,"KRN","B",9.2,9.2)

"BLD",7971,"KRN","B",9.8,9.8)

"BLD",7971,"KRN","B",19,19)

"BLD",7971,"KRN","B",19.1,19.1)

"BLD",7971,"KRN","B",101,101)

"BLD",7971,"KRN","B",409.61,409.61)

"BLD",7971,"KRN","B",771,771)

"BLD",7971,"KRN","B",779.2,779.2)

"BLD",7971,"KRN","B",870,870)

"BLD",7971,"KRN","B",8989.51,8989.51)

"BLD",7971,"KRN","B",8989.52,8989.52)

"BLD",7971,"KRN","B",8994,8994)

"BLD",7971,"PRE")
PSS160EN
"BLD",7971,"QUES",0)
^9.62^^
"BLD",7971,"REQB",0)
^9.611^6^5
"BLD",7971,"REQB",1,0)
PSS*1.0*117^2
"BLD",7971,"REQB",2,0)
PSS*1.0*151^2
"BLD",7971,"REQB",3,0)
PSS*1.0*157^2
"BLD",7971,"REQB",5,0)
PSS*1.0*163^2
"BLD",7971,"REQB",6,0)
PSS*1.0*168^2
"BLD",7971,"REQB","B","PSS*1.0*117",1)

"BLD",7971,"REQB","B","PSS*1.0*151",2)

"BLD",7971,"REQB","B","PSS*1.0*157",3)

"BLD",7971,"REQB","B","PSS*1.0*163",5)

"BLD",7971,"REQB","B","PSS*1.0*168",6)

"DATA",51.24,23,0)
MILLIONUNIT(S)^MILLIONUNIT(S)^0
"DATA",51.24,23,1,0)
^51.242^9^9
"DATA",51.24,23,1,1,0)
MU
"DATA",51.24,23,1,2,0)
MIU
"DATA",51.24,23,1,3,0)
MILU
"DATA",51.24,23,1,4,0)
MILI U
"DATA",51.24,23,1,5,0)
MILI UNIT
"DATA",51.24,23,1,6,0)
MILI UNITS
"DATA",51.24,23,1,7,0)
MILLION UNT
"DATA",51.24,23,1,8,0)
MILLION UNIT
"DATA",51.24,23,1,9,0)
MILLION UNITS
"DATA",51.24,52,0)
FILM(S)^FILMS^1
"DATA",51.24,52,1,0)
^51.242^2^2
"DATA",51.24,52,1,1,0)
FILM
"DATA",51.24,52,1,2,0)
FILMS
"DATA",51.24,53,0)
ELISA UNIT(S)^ELISA UNIT^0
"DATA",51.24,53,1,0)
^51.242^6^6
"DATA",51.24,53,1,1,0)
EL UNIT
"DATA",51.24,53,1,2,0)
ELISA UNITS
"DATA",51.24,53,1,3,0)
ELISA UNIT
"DATA",51.24,53,1,4,0)
EL.U.
"DATA",51.24,53,1,5,0)
ELISA UNT
"DATA",51.24,53,1,6,0)
ELU
"FIA",51.1)
ADMINISTRATION SCHEDULE
"FIA",51.1,0)
^PS(51.1,
"FIA",51.1,0,0)
51.1I
"FIA",51.1,0,1)
y^y^p^^^^n^^n
"FIA",51.1,0,10)

"FIA",51.1,0,11)

"FIA",51.1,0,"RLRO")

"FIA",51.1,0,"VR")
1.0^PSS
"FIA",51.1,51.1)
1
"FIA",51.1,51.1,9)

"FIA",51.1,51.1,10)

"FIA",51.24)
DOSE UNITS
"FIA",51.24,0)
^PS(51.24,
"FIA",51.24,0,0)
51.24
"FIA",51.24,0,1)
n^n^f^^n^^y^r^n
"FIA",51.24,0,10)

"FIA",51.24,0,11)
I Y=52!(Y=53)!(Y=23)
"FIA",51.24,0,"RLRO")

"FIA",51.24,0,"VR")
1.0^PSS
"FIA",51.24,51.24)
0
"FIA",51.24,51.242)
0
"FIA",51.24,51.2499)
0
"FIA",59.7)
PHARMACY SYSTEM
"FIA",59.7,0)
^PS(59.7,
"FIA",59.7,0,0)
59.7
"FIA",59.7,0,1)
y^y^p^^^^n^^n
"FIA",59.7,0,10)

"FIA",59.7,0,11)

"FIA",59.7,0,"RLRO")

"FIA",59.7,0,"VR")
1.0^PSS
"FIA",59.7,59.7)
1
"FIA",59.7,59.7,82)

"FIA",59.7,59.7,95)

"FIA",59.7,59.782)
0
"INIT")
PSS160PO
"IX",51.24,51.24,"AMASTERVUID",0)
51.24^AMASTERVUID^This cross-reference identifies the Master entry for a VUID.^R^^R^IR^I^51.24^^^^^S
"IX",51.24,51.24,"AMASTERVUID",.1,0)
^^3^3^3080331^
"IX",51.24,51.24,"AMASTERVUID",.1,1,0)
If multiple entries have the same VUID in the file, this cross-reference 
"IX",51.24,51.24,"AMASTERVUID",.1,2,0)
can be used to identify the Master entry for a VUID associated with a 
"IX",51.24,51.24,"AMASTERVUID",.1,3,0)
Term/Concept.
"IX",51.24,51.24,"AMASTERVUID",1)
S ^PS(51.24,"AMASTERVUID",$E(X(1),1,30),X(2),DA)=""
"IX",51.24,51.24,"AMASTERVUID",2)
K ^PS(51.24,"AMASTERVUID",$E(X(1),1,30),X(2),DA)
"IX",51.24,51.24,"AMASTERVUID",2.5)
K ^PS(51.24,"AMASTERVUID")
"IX",51.24,51.24,"AMASTERVUID",11.1,0)
^.114IA^2^2
"IX",51.24,51.24,"AMASTERVUID",11.1,1,0)
1^F^51.24^99.99^30^1^F
"IX",51.24,51.24,"AMASTERVUID",11.1,2,0)
2^F^51.24^99.98^^2^F
"IX",59.7,59.7,"AC",0)
59.7^AC^Updates the DOSING ACTIVITY DATE AND TIME (#59.782) Subfile.^MU^^F^^I^59.7^^^^^A
"IX",59.7,59.7,"AC",.1,0)
^^2^2^3120723^^^
"IX",59.7,59.7,"AC",.1,1,0)
This cross reference creates an entry in the DOSING ACTIVITY DATE AND TIME
"IX",59.7,59.7,"AC",.1,2,0)
(#59.782) Subfile of the PHARMACY SYSTEM (#59.7) File.
"IX",59.7,59.7,"AC",1)
I '$D(DIU(0)) D ACLOG^PSSDSONF
"IX",59.7,59.7,"AC",2)
Q
"IX",59.7,59.7,"AC",11.1,0)
^.114IA^1^1
"IX",59.7,59.7,"AC",11.1,1,0)
1^F^59.7^95^^^F
"KRN",.402,2003,-1)
0^1
"KRN",.402,2003,0)
PSSJ SCHEDULE EDIT^3110228.0914^@^51.1^^@^3120918
"KRN",.402,2003,"DIAB",3,1,51.11,0)
WARD ADMINISTRATION TIMES;REQ
"KRN",.402,2003,"DIAB",7,0,51.1,6)
STANDARD ADMINISTRATION TIMES;REQ
"KRN",.402,2003,"DIAB",11,0,51.1,0)
TYPE OF SCHEDULE//CONTINUOUS;REQ
"KRN",.402,2003,"DR",1,51.1)
S PSSJSE=1;S ZPSJS=$$GET1^DIQ(51.1,DA,5,"I");.01;8;8.1;S:'$D(PSJIVSEF) Y="@2";5////C//;S PSSSCT=X;S Y=1,PSJS="C";@2;5R~//CONTINUOUS;S PSSSCT=X;S XPSJS=0;I ZPSJS'="",ZPSJS'=X,X'="C" S XPSJS=1;I PSSSCT="P" S XPSJS=1;
"KRN",.402,2003,"DR",1,51.1,1)
I XPSJS=0 S Y="@3";2////@;1////@;D RMTIME^PSSJSV;W !,"The Type of Schedule has changed, the frequency will be removed",!;@3;I PSSSCT="O" D TEMSF^PSSJEEU;S (ZPSJS,PSJS)=X;I PSSSCT'="O" D TEMSFX^PSSJEEU;9;
"KRN",.402,2003,"DR",1,51.1,2)
I PSSSCT="O"!(PSSSCT="OC")!($G(X)=1) S Y="@11";10;@11;I PSSSCT'="O" D TEMSFRX^PSSJEEU;I PSSSCT="O" D TEMSFR^PSSJEEU S Y="";I PSSSCT="P" S Y="@999";I ",O,D,"[(","_PSSSCT_",") S Y="@5" Q;@4;S ZZZ=$$GET1^DIQ(51.1,DA,2,"I");
"KRN",.402,2003,"DR",1,51.1,3)
2//^D ENFQD^PSSJSV;S PSSFRQ=$G(X);I PSSSCT="OC" S Y="@60" Q;I X="" W " Must enter a frequency." K X S Y="@4" Q;I PSSSCT="P" S Y="@999";I PSSFRQ=""!(PSSFRQ=ZZZ) S Y="@60";1////@;D RMTIME^PSSJSV;
"KRN",.402,2003,"DR",1,51.1,4)
W !,"The Frequency has changed, the Admin Times will be removed",!;@60;S PSJS=$$NSO^PSGS0($G(PSSFRQ)),OFLG=0;I PSJS'="" W !?10,"The schedule entered equals ",PSJS,".",!;I PSSFRQ>1439,PSSFRQ#1440 S OFLG=1;
"KRN",.402,2003,"DR",1,51.1,5)
I PSSFRQ,PSSFRQ<1440,1440#PSSFRQ S OFLG=1;I PSSSCT="OC" S OFLG=1;I 'OFLG S Y="@5";W !?10,"This is an odd schedule that does not require administration times.",!;W ?10,"BCMA will determine the administration times based off the",!;
"KRN",.402,2003,"DR",1,51.1,6)
W ?10,"start date/time of the medication order.";1////@;D RMTIME^PSSJSV;S Y="@999";@5;I PSSSCT'="D",PSSSCT'="C",PSSSCT'="O" S Y="@6" Q;1R~;I X="",PSSSCT="C" W "Must enter administration times. " K X S Y="@5" Q;S Y="@7";@6;1;@7;3;
"KRN",.402,2003,"DR",1,51.1,7)
@999;K PSSSCT,PSSFRQ,PSSJSE,ZPSJS;
"KRN",.402,2003,"DR",2,51.11)
.01;I X="" S Y="@999" Q;1R~;
"KRN",19,13856,-1)
0^1
"KRN",19,13856,0)
PSS DRUG DOSING LOOKUP^Lookup Dosing Check Info for Drug^^R^^^^^^^^PHARMACY DATA MANAGEMENT
"KRN",19,13856,1,0)
^19.06^2^2^3110820^^
"KRN",19,13856,1,1,0)
This option displays all of the information related to Dosing checks for 
"KRN",19,13856,1,2,0)
the selected entry from the DRUG File (#50).
"KRN",19,13856,25)
EN^PSSDRDOS
"KRN",19,13856,"U")
LOOKUP DOSING CHECK INFO FOR D
"KRN",19,13929,-1)
0^2
"KRN",19,13929,0)
PSS DOSING ORDER CHECKS^Enable/Disable Dosing Order Checks^^R^^PSS ORDER CHECKS^^^^^^PHARMACY DATA MANAGEMENT
"KRN",19,13929,1,0)
^19.06^3^3^3120724^^
"KRN",19,13929,1,1,0)
This option is used to enable or disable Dosing order checks for Inpatient
"KRN",19,13929,1,2,0)
Medications, Outpatient Pharmacy, and Computerized Patient Record System
"KRN",19,13929,1,3,0)
(CPRS).
"KRN",19,13929,25)
EN^PSSDSONF
"KRN",19,13929,"U")
ENABLE/DISABLE DOSING ORDER CH
"KRN",19,13991,-1)
0^3
"KRN",19,13991,0)
PSS TRAILING SPACES REPORT^Drug Names with Trailing Spaces Report^^R^^^^^^^^PHARMACY DATA MANAGEMENT
"KRN",19,13991,1,0)
^^10^10^3121005^
"KRN",19,13991,1,1,0)
This option lists all active, multi-ingredient DRUG File (#50) entries
"KRN",19,13991,1,2,0)
with Local Possible Dosages defined, and whose drug name has trailing
"KRN",19,13991,1,3,0)
spaces. Drugs not matched to the National Drug File with trailing spaces
"KRN",19,13991,1,4,0)
in the name will also be listed. If the Drug Name is appended to the Local
"KRN",19,13991,1,5,0)
Possible Dosage and optional conjunction in  the Computerized Patient
"KRN",19,13991,1,6,0)
Record System (CPRS) order dialogues, a selection of such a dosage could
"KRN",19,13991,1,7,0)
cause the conjunction+drug name to become part of the actual Dosage,
"KRN",19,13991,1,8,0)
instead of just a display enhancement. This can case the Dosage check to
"KRN",19,13991,1,9,0)
fail, and that extra text could come to pharmacy as part of the Dosage in
"KRN",19,13991,1,10,0)
the order. These trailing spaces should be cleaned up if possible.
"KRN",19,13991,25)
TRAIL^PSSSCHRP
"KRN",19,13991,"U")
DRUG NAMES WITH TRAILING SPACE
"KRN",19.1,642,-1)
0^1
"KRN",19.1,642,0)
PSS ORDER CHECKS^Medication Order Checks Key^^n
"KRN",19.1,642,1,0)
^19.11^1^1^3120724^
"KRN",19.1,642,1,1,0)
This key will be used for functions related to medication order checks. 
"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",517,-1)
1^1
"PKG",517,0)
PHARMACY DATA MANAGEMENT^PSS^Maintenance of Pharmacy files.
"PKG",517,20,0)
^9.402P^^
"PKG",517,22,0)
^9.49I^1^1
"PKG",517,22,1,0)
1.0^2970930^2971014^11595
"PKG",517,22,1,"PAH",1,0)
160^3130503^10000000068
"PKG",517,22,1,"PAH",1,1,0)
^^73^73^3130503
"PKG",517,22,1,"PAH",1,1,1,0)
This patch will activate the new Dosing Order Check functionality for
"PKG",517,22,1,"PAH",1,1,2,0)
Single Dose checking only for Inpatient Medications, Outpatient Pharmacy,
"PKG",517,22,1,"PAH",1,1,3,0)
and Computerized Patient Record System (CPRS). A message will be displayed
"PKG",517,22,1,"PAH",1,1,4,0)
to the user if the Single Dose entered for the medication order and all
"PKG",517,22,1,"PAH",1,1,5,0)
the other pertinent data is able to be properly converted for a valid
"PKG",517,22,1,"PAH",1,1,6,0)
Dosing Check, and the result is an out-of-range warning. An error message
"PKG",517,22,1,"PAH",1,1,7,0)
will be displayed if for any reason the Single Dose check cannot be 
"PKG",517,22,1,"PAH",1,1,8,0)
performed.
"PKG",517,22,1,"PAH",1,1,9,0)
 
"PKG",517,22,1,"PAH",1,1,10,0)
 
"PKG",517,22,1,"PAH",1,1,11,0)
This patch addresses the following New Service Request (NSR):
"PKG",517,22,1,"PAH",1,1,12,0)
-------------------------------------------------------------
"PKG",517,22,1,"PAH",1,1,13,0)
There is no NSR associated with this patch. 
"PKG",517,22,1,"PAH",1,1,14,0)
 
"PKG",517,22,1,"PAH",1,1,15,0)
 
"PKG",517,22,1,"PAH",1,1,16,0)
This patch addresses the following Remedy Ticket(s):
"PKG",517,22,1,"PAH",1,1,17,0)
----------------------------------------------------
"PKG",517,22,1,"PAH",1,1,18,0)
There are no Remedy tickets associated with this patch.
"PKG",517,22,1,"PAH",1,1,19,0)
 
"PKG",517,22,1,"PAH",1,1,20,0)
 
"PKG",517,22,1,"PAH",1,1,21,0)
Overview of Remedy Ticket(s):
"PKG",517,22,1,"PAH",1,1,22,0)
-----------------------------
"PKG",517,22,1,"PAH",1,1,23,0)
There are no Remedy tickets associated with this patch. 
"PKG",517,22,1,"PAH",1,1,24,0)
 
"PKG",517,22,1,"PAH",1,1,25,0)
 
"PKG",517,22,1,"PAH",1,1,26,0)
Components Exported With Patch: 
"PKG",517,22,1,"PAH",1,1,27,0)
-------------------------------
"PKG",517,22,1,"PAH",1,1,28,0)
 
"PKG",517,22,1,"PAH",1,1,29,0)
 
"PKG",517,22,1,"PAH",1,1,30,0)
The following is a list of fields included in this patch:
"PKG",517,22,1,"PAH",1,1,31,0)
 
"PKG",517,22,1,"PAH",1,1,32,0)
Field Name                      (Number)   File Name             (Number)
"PKG",517,22,1,"PAH",1,1,33,0)
----------------------------------------   ------------------------------
"PKG",517,22,1,"PAH",1,1,34,0)
EXCLUDE FROM ALL DOSE CHECKS           9   ADMINISTRATION SCHEDULE   51.1
"PKG",517,22,1,"PAH",1,1,35,0)
EXCLUDE FROM DAILY DOSE CHECK         10   ADMINISTRATION SCHEDULE   51.1
"PKG",517,22,1,"PAH",1,1,36,0)
DOSING ON/OFF                         95   PHARMACY SYSTEM           59.7
"PKG",517,22,1,"PAH",1,1,37,0)
DOSING ACTIVITY DATE AND TIME subfile 82 of PHARMACY SYSTEM          59.7:
"PKG",517,22,1,"PAH",1,1,38,0)
  DOSING ACTIVITY DATE AND TIME      .01
"PKG",517,22,1,"PAH",1,1,39,0)
  PERSON MAKING CHANGE                 1
"PKG",517,22,1,"PAH",1,1,40,0)
  ENABLE/DISABLE                       2                   
"PKG",517,22,1,"PAH",1,1,41,0)
                        
"PKG",517,22,1,"PAH",1,1,42,0)
The following is a list of data included in this patch:
"PKG",517,22,1,"PAH",1,1,43,0)
 
"PKG",517,22,1,"PAH",1,1,44,0)
File                      Entry
"PKG",517,22,1,"PAH",1,1,45,0)
-------------------       -------------
"PKG",517,22,1,"PAH",1,1,46,0)
DOSE UNITS (#51.24)       FILM(S)
"PKG",517,22,1,"PAH",1,1,47,0)
DOSE UNITS (#51.24)       ELISA UNIT(S) 
"PKG",517,22,1,"PAH",1,1,48,0)
DOSE UNITS (#51.24)       MILLIONUNIT(S)  new synonyms only:
"PKG",517,22,1,"PAH",1,1,49,0)
                          MILLION UNIT
"PKG",517,22,1,"PAH",1,1,50,0)
                          MILLION UNITS
"PKG",517,22,1,"PAH",1,1,51,0)
                                      
"PKG",517,22,1,"PAH",1,1,52,0)
 
"PKG",517,22,1,"PAH",1,1,53,0)
The following is a list of templates included in this patch:
"PKG",517,22,1,"PAH",1,1,54,0)
 
"PKG",517,22,1,"PAH",1,1,55,0)
Template Name                Type         File Name (Number)
"PKG",517,22,1,"PAH",1,1,56,0)
------------------           -----        -------------------------------
"PKG",517,22,1,"PAH",1,1,57,0)
PSSJ SCHEDULE EDIT           Input        ADMINISTRATION SCHEDULE (#51.1)
"PKG",517,22,1,"PAH",1,1,58,0)
 
"PKG",517,22,1,"PAH",1,1,59,0)
 
"PKG",517,22,1,"PAH",1,1,60,0)
The following is a list of options included in the patch:
"PKG",517,22,1,"PAH",1,1,61,0)
 
"PKG",517,22,1,"PAH",1,1,62,0)
Option Name                       Type
"PKG",517,22,1,"PAH",1,1,63,0)
--------------------------        ----
"PKG",517,22,1,"PAH",1,1,64,0)
PSS DRUG DOSING LOOKUP            Run
"PKG",517,22,1,"PAH",1,1,65,0)
PSS DOSING ORDER CHECKS           Run
"PKG",517,22,1,"PAH",1,1,66,0)
PSS TRAILING SPACES REPORT        Run
"PKG",517,22,1,"PAH",1,1,67,0)
                                      
"PKG",517,22,1,"PAH",1,1,68,0)
 
"PKG",517,22,1,"PAH",1,1,69,0)
The following is a list of security keys included in this patch:
"PKG",517,22,1,"PAH",1,1,70,0)
 
"PKG",517,22,1,"PAH",1,1,71,0)
Security Key Name
"PKG",517,22,1,"PAH",1,1,72,0)
-----------------
"PKG",517,22,1,"PAH",1,1,73,0)
PSS ORDER CHECKS
"PRE")
PSS160EN
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
26
"RTN","PSS160EN")
0^8^B40169364
"RTN","PSS160EN",1,0)
PSS160EN ;BIR/RTR-Environment check routine for patch PSS*1*160 ;02/18/11
"RTN","PSS160EN",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**160**;9/30/97;Build 76
"RTN","PSS160EN",3,0)
 ;
"RTN","PSS160EN",4,0)
 Q:'$G(XPDENV)
"RTN","PSS160EN",5,0)
 ;
"RTN","PSS160EN",6,0)
 ;
"RTN","PSS160EN",7,0)
EN ;Check to see if all Local Med Routes are mapped and Local Possible Dosages are completed
"RTN","PSS160EN",8,0)
 N PSSMRMFM,PSSMRMLP,PSSMRMNM,PSSMRMFD,PSSMRMAR,DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT,DIC,DA,DLAYGO
"RTN","PSS160EN",9,0)
 N PSSMRMCT,PSSMRMXX,PSSMRMIN,PSSMRMZR,PSSMRMN1,PSSMRMN3,PSSMRMOK,PSSMRM22,PSSMRMBB,PSSMRMT1,PSSMRMD1,PSSMRMD2,PSSMRMTC
"RTN","PSS160EN",10,0)
 ;
"RTN","PSS160EN",11,0)
 ;
"RTN","PSS160EN",12,0)
 S (PSSMRMFM,PSSMRMFD)=0
"RTN","PSS160EN",13,0)
 ;Med Route check, using PSSMRMFM as flag
"RTN","PSS160EN",14,0)
 D BMES^XPDUTL("Checking for any remaining unmapped Local Medication Routes...")
"RTN","PSS160EN",15,0)
 S PSSMRMNM="" F  S PSSMRMNM=$O(^PS(51.2,"B",PSSMRMNM)) Q:PSSMRMNM=""!(PSSMRMFM)  D
"RTN","PSS160EN",16,0)
 .F PSSMRMLP=0:0 S PSSMRMLP=$O(^PS(51.2,"B",PSSMRMNM,PSSMRMLP))  Q:'PSSMRMLP!(PSSMRMFM)  D
"RTN","PSS160EN",17,0)
 ..I '$P($G(^PS(51.2,PSSMRMLP,0)),"^",4) Q
"RTN","PSS160EN",18,0)
 ..I '$P($G(^PS(51.2,PSSMRMLP,1)),"^") S PSSMRMFM=1
"RTN","PSS160EN",19,0)
 I 'PSSMRMFM D BMES^XPDUTL("All Local Medication Routes have been mapped!!") G DOS
"RTN","PSS160EN",20,0)
 K PSSMRMAR
"RTN","PSS160EN",21,0)
 S PSSMRMAR(1)=" "
"RTN","PSS160EN",22,0)
 S PSSMRMAR(2)="There are still local Medication Routes marked for 'ALL PACKAGES' not yet"
"RTN","PSS160EN",23,0)
 S PSSMRMAR(3)="mapped. Any orders containing an unmapped medication route will not have"
"RTN","PSS160EN",24,0)
 S PSSMRMAR(4)="dosage checks performed. Please refer to the 'Medication Route Mapping Report'"
"RTN","PSS160EN",25,0)
 S PSSMRMAR(5)="option for more details."
"RTN","PSS160EN",26,0)
 S PSSMRMAR(6)=" "
"RTN","PSS160EN",27,0)
 D MES^XPDUTL(.PSSMRMAR) K PSSMRMAR
"RTN","PSS160EN",28,0)
 ;
"RTN","PSS160EN",29,0)
 ;
"RTN","PSS160EN",30,0)
DOS ;Check to see if all Local Possible Dosages are mapped
"RTN","PSS160EN",31,0)
 ;Local Possible Dosage check, using PSSMRMFD as flag
"RTN","PSS160EN",32,0)
 D BMES^XPDUTL("Checking for any remaining Local Possible Dosages missing data...")
"RTN","PSS160EN",33,0)
 ;
"RTN","PSS160EN",34,0)
 S (PSSMRMFD,PSSMRMCT)=0
"RTN","PSS160EN",35,0)
 S PSSMRMXX="" F  S PSSMRMXX=$O(^PSDRUG("B",PSSMRMXX)) Q:PSSMRMXX=""!(PSSMRMFD)  F PSSMRMIN=0:0 S PSSMRMIN=$O(^PSDRUG("B",PSSMRMXX,PSSMRMIN)) Q:'PSSMRMIN!(PSSMRMFD)  D
"RTN","PSS160EN",36,0)
 .K PSSMRMZR,PSSMRMN1,PSSMRMN3
"RTN","PSS160EN",37,0)
 .S PSSMRMZR=$G(^PSDRUG(PSSMRMIN,0)),PSSMRMN1=$P($G(^PSDRUG(PSSMRMIN,"ND")),"^"),PSSMRMN3=$P($G(^PSDRUG(PSSMRMIN,"ND")),"^",3)
"RTN","PSS160EN",38,0)
 .S PSSMRMCT=PSSMRMCT+1 I '(PSSMRMCT#2000) D BMES^XPDUTL("...Still checking Local Possible Dosages...")
"RTN","PSS160EN",39,0)
 .S PSSMRMOK=$$TEST
"RTN","PSS160EN",40,0)
 .Q:'PSSMRMOK
"RTN","PSS160EN",41,0)
 .S PSSMRM22=0 F PSSMRMBB=0:0 S PSSMRMBB=$O(^PSDRUG(PSSMRMIN,"DOS2",PSSMRMBB)) Q:'PSSMRMBB!(PSSMRM22)  S PSSMRMT1=$G(^PSDRUG(PSSMRMIN,"DOS2",PSSMRMBB,0)) I $P(PSSMRMT1,"^")'="" I '$P(PSSMRMT1,"^",5)!($P(PSSMRMT1,"^",6)="") S PSSMRM22=1
"RTN","PSS160EN",42,0)
 .Q:'PSSMRM22
"RTN","PSS160EN",43,0)
 .S PSSMRMFD=1
"RTN","PSS160EN",44,0)
 I 'PSSMRMFD D BMES^XPDUTL("Population of data for eligible Local Possible Dosages has been completed!!") D BMES^XPDUTL(" ") G PRC
"RTN","PSS160EN",45,0)
 K PSSMRMAR
"RTN","PSS160EN",46,0)
 S PSSMRMAR(1)=" "
"RTN","PSS160EN",47,0)
 S PSSMRMAR(2)="There are still local possible dosages eligible for dosage checks that have"
"RTN","PSS160EN",48,0)
 S PSSMRMAR(3)="missing data in the Numeric Dose and Dose Unit fields. Any orders containing"
"RTN","PSS160EN",49,0)
 S PSSMRMAR(4)="such local possible dosages may not have dosage checks performed. Please"
"RTN","PSS160EN",50,0)
 S PSSMRMAR(5)="refer to the 'Local Possible Dosages Report' option for more details."
"RTN","PSS160EN",51,0)
 S PSSMRMAR(6)=" "
"RTN","PSS160EN",52,0)
 D MES^XPDUTL(.PSSMRMAR) K PSSMRMAR
"RTN","PSS160EN",53,0)
 ;
"RTN","PSS160EN",54,0)
 ;
"RTN","PSS160EN",55,0)
PRC ;Ask to continue
"RTN","PSS160EN",56,0)
 I 'PSSMRMFM,'PSSMRMFD G MAIL
"RTN","PSS160EN",57,0)
 K DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","PSS160EN",58,0)
 S DIR(0)="Y",DIR("B")="Y",DIR("A")="Do you want to continue to install this patch" D ^DIR
"RTN","PSS160EN",59,0)
 I Y'=1!($D(DUOUT))!($D(DTOUT)) S XPDABORT=2 Q
"RTN","PSS160EN",60,0)
 K DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","PSS160EN",61,0)
 ;
"RTN","PSS160EN",62,0)
 ;
"RTN","PSS160EN",63,0)
MAIL ;set up mail recipients for Post Init
"RTN","PSS160EN",64,0)
 D REC
"RTN","PSS160EN",65,0)
 S @XPDGREF@("PSSMLMSG",1)="Installation of Patch PSS*1.0*160 has been completed!"
"RTN","PSS160EN",66,0)
 S @XPDGREF@("PSSMLMSG",2)=" "
"RTN","PSS160EN",67,0)
 S PSSMRMTC=3
"RTN","PSS160EN",68,0)
 I 'PSSMRMFM S @XPDGREF@("PSSMLMSG",PSSMRMTC)="All Local Medication Routes have been mapped!!" G LMESS
"RTN","PSS160EN",69,0)
 S @XPDGREF@("PSSMLMSG",PSSMRMTC)="There are still local Medication Routes marked for 'ALL PACKAGES' not yet" S PSSMRMTC=PSSMRMTC+1
"RTN","PSS160EN",70,0)
 S @XPDGREF@("PSSMLMSG",PSSMRMTC)="mapped. Any orders containing an unmapped medication route will not have" S PSSMRMTC=PSSMRMTC+1
"RTN","PSS160EN",71,0)
 S @XPDGREF@("PSSMLMSG",PSSMRMTC)="dosage checks performed. Please refer to the 'Medication Route Mapping Report'" S PSSMRMTC=PSSMRMTC+1
"RTN","PSS160EN",72,0)
 S @XPDGREF@("PSSMLMSG",PSSMRMTC)="option for more details."
"RTN","PSS160EN",73,0)
 ;
"RTN","PSS160EN",74,0)
 ;
"RTN","PSS160EN",75,0)
LMESS ;
"RTN","PSS160EN",76,0)
 D INC I 'PSSMRMFD S @XPDGREF@("PSSMLMSG",PSSMRMTC)="Population of data for eligible Local Possible Dosages has been completed!!" D INC Q
"RTN","PSS160EN",77,0)
 S @XPDGREF@("PSSMLMSG",PSSMRMTC)="There are still local possible dosages eligible for dosage checks that have" S PSSMRMTC=PSSMRMTC+1
"RTN","PSS160EN",78,0)
 S @XPDGREF@("PSSMLMSG",PSSMRMTC)="missing data in the Numeric Dose and Dose Unit fields. Any orders containing" S PSSMRMTC=PSSMRMTC+1
"RTN","PSS160EN",79,0)
 S @XPDGREF@("PSSMLMSG",PSSMRMTC)="such local possible dosages may not have dosage checks performed. Please" S PSSMRMTC=PSSMRMTC+1
"RTN","PSS160EN",80,0)
 S @XPDGREF@("PSSMLMSG",PSSMRMTC)="refer to the 'Local Possible Dosages Report' option for more details." D INC
"RTN","PSS160EN",81,0)
 Q
"RTN","PSS160EN",82,0)
 ;
"RTN","PSS160EN",83,0)
 ;
"RTN","PSS160EN",84,0)
TEST() ;See if drug need Dose Unit and Numeric Dose defined
"RTN","PSS160EN",85,0)
 I 'PSSMRMN3!('PSSMRMN1) Q 0
"RTN","PSS160EN",86,0)
 I $P($G(^PSDRUG(PSSMRMIN,"I")),"^"),$P($G(^PSDRUG(PSSMRMIN,"I")),"^")<DT Q 0
"RTN","PSS160EN",87,0)
 I '$O(^PSDRUG(PSSMRMIN,"DOS2",0)) Q 0
"RTN","PSS160EN",88,0)
 I $P(PSSMRMZR,"^",3)["S"!($E($P(PSSMRMZR,"^",2),1,2)="XA") Q 0
"RTN","PSS160EN",89,0)
 N PSSMRMVV
"RTN","PSS160EN",90,0)
 S PSSMRMVV=""
"RTN","PSS160EN",91,0)
 I PSSMRMN1,PSSMRMN3,$T(OVRIDE^PSNAPIS)]"" S PSSMRMVV=$$OVRIDE^PSNAPIS(PSSMRMN1,PSSMRMN3)
"RTN","PSS160EN",92,0)
 K PSSMRMD1,PSSMRMD2
"RTN","PSS160EN",93,0)
 I PSSMRMN1,PSSMRMN3 S PSSMRMD1=$$DFSU^PSNAPIS(PSSMRMN1,PSSMRMN3) S PSSMRMD2=$P(PSSMRMD1,"^")
"RTN","PSS160EN",94,0)
 I $G(PSSMRMD2)'>0,$P($G(^PSDRUG(PSSMRMIN,2)),"^") S PSSMRMD2=$P($G(^PS(50.7,+$P($G(^PSDRUG(PSSMRMIN,2)),"^"),0)),"^",2)
"RTN","PSS160EN",95,0)
 I PSSMRMVV=""!('$G(PSSMRMD2))!($P($G(^PS(50.606,+$G(PSSMRMD2),1)),"^")="") Q 1
"RTN","PSS160EN",96,0)
 I $P($G(^PS(50.606,+$G(PSSMRMD2),1)),"^"),'PSSMRMVV Q 0
"RTN","PSS160EN",97,0)
 I '$P($G(^PS(50.606,+$G(PSSMRMD2),1)),"^"),PSSMRMVV Q 0
"RTN","PSS160EN",98,0)
 Q 1
"RTN","PSS160EN",99,0)
 ;
"RTN","PSS160EN",100,0)
 ;
"RTN","PSS160EN",101,0)
REC ;Set up mail message recipients
"RTN","PSS160EN",102,0)
 S @XPDGREF@("PSSMLMDZ",DUZ)=""
"RTN","PSS160EN",103,0)
 S @XPDGREF@("PSSMLMDZ","G.PSS ORDER CHECKS")=""
"RTN","PSS160EN",104,0)
 Q
"RTN","PSS160EN",105,0)
 ;
"RTN","PSS160EN",106,0)
 ;
"RTN","PSS160EN",107,0)
PRMP ;
"RTN","PSS160EN",108,0)
 K DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","PSS160EN",109,0)
 S DIR(0)="E",DIR("A")="Press Return to Continue" D ^DIR
"RTN","PSS160EN",110,0)
 K DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","PSS160EN",111,0)
 Q
"RTN","PSS160EN",112,0)
 ;
"RTN","PSS160EN",113,0)
 ;
"RTN","PSS160EN",114,0)
INC ;
"RTN","PSS160EN",115,0)
 S PSSMRMTC=PSSMRMTC+1
"RTN","PSS160EN",116,0)
 S @XPDGREF@("PSSMLMSG",PSSMRMTC)=" "
"RTN","PSS160EN",117,0)
 S PSSMRMTC=PSSMRMTC+1
"RTN","PSS160EN",118,0)
 Q
"RTN","PSS160PO")
0^9^B136579965
"RTN","PSS160PO",1,0)
PSS160PO ;BIR/RTR-Post Install routine for patch PSS*1*160 ;02/18/11
"RTN","PSS160PO",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**160**;9/30/97;Build 76
"RTN","PSS160PO",3,0)
 ;External reference to ^XOB(18.02 supported by DBIA 5814
"RTN","PSS160PO",4,0)
 ;External reference to ^XOB(18.12 supported by DBIA 5813
"RTN","PSS160PO",5,0)
 ;
"RTN","PSS160PO",6,0)
 ;
"RTN","PSS160PO",7,0)
EN ;Do Mail Message
"RTN","PSS160PO",8,0)
 N PSSMXUA1,PSSMXUA2 S PSSMXUA2=0
"RTN","PSS160PO",9,0)
 F PSSMXUA1=0:0 S PSSMXUA1=$O(@XPDGREF@("PSSMLMSG",PSSMXUA1)) Q:'PSSMXUA1  S PSSMXUA2=PSSMXUA2+1
"RTN","PSS160PO",10,0)
 S PSSMXUA2=PSSMXUA2+1
"RTN","PSS160PO",11,0)
 D ADDVAL,MNUADD,SETWS
"RTN","PSS160PO",12,0)
 D BMES^XPDUTL("Generating Mail Message....")
"RTN","PSS160PO",13,0)
EN2 ;
"RTN","PSS160PO",14,0)
 D MAIL D BMES^XPDUTL("Mail message sent.")
"RTN","PSS160PO",15,0)
 I $P($G(^PS(59.7,1,81)),"^")="" S $P(^PS(59.7,1,81),"^")=1
"RTN","PSS160PO",16,0)
 Q
"RTN","PSS160PO",17,0)
 ;
"RTN","PSS160PO",18,0)
 ;
"RTN","PSS160PO",19,0)
MAIL ;Send mail message
"RTN","PSS160PO",20,0)
 N PSS60REC,PSS60PLP,XMTEXT,XMY,XMSUB,XMDUZ,XMMG,XMSTRIP,XMROU,XMYBLOB,XMZ,XMDUN
"RTN","PSS160PO",21,0)
 K ^TMP($J,"PSS60PTX")
"RTN","PSS160PO",22,0)
 F PSS60PLP=0:0 S PSS60PLP=$O(@XPDGREF@("PSSMLMSG",PSS60PLP)) Q:'PSS60PLP  S ^TMP($J,"PSS60PTX",PSS60PLP)=@XPDGREF@("PSSMLMSG",PSS60PLP)
"RTN","PSS160PO",23,0)
 S XMSUB="PSS*1*160 Installation Complete"
"RTN","PSS160PO",24,0)
 S XMDUZ="PSS*1*160 Install"
"RTN","PSS160PO",25,0)
 S XMTEXT="^TMP($J,""PSS60PTX"","
"RTN","PSS160PO",26,0)
 S PSS60REC="" F  S PSS60REC=$O(@XPDGREF@("PSSMLMDZ",PSS60REC)) Q:PSS60REC=""  S XMY(PSS60REC)=""
"RTN","PSS160PO",27,0)
 N DIFROM D ^XMD
"RTN","PSS160PO",28,0)
 K ^TMP($J,"PSS60PTX")
"RTN","PSS160PO",29,0)
 Q
"RTN","PSS160PO",30,0)
 ;
"RTN","PSS160PO",31,0)
 ;
"RTN","PSS160PO",32,0)
MNUADD ;Add PSS DRUG DOSING LOOKUP option to PSS DOSAGE MANAGEMENT menu option
"RTN","PSS160PO",33,0)
 D BMES^XPDUTL("Linking New PSS DRUG DOSING LOOKUP Option....")
"RTN","PSS160PO",34,0)
 N PSSMXUA,PSSMXUAF
"RTN","PSS160PO",35,0)
 S PSSMXUAF=0
"RTN","PSS160PO",36,0)
 K PSSMXUA S PSSMXUA=$$ADD^XPDMENU("PSS DOSAGES MANAGEMENT","PSS DRUG DOSING LOOKUP",,9) I 'PSSMXUA D
"RTN","PSS160PO",37,0)
 .S PSSMXUAF=1
"RTN","PSS160PO",38,0)
 .D BMES^XPDUTL("Unable to link PSS DRUG DOSING LOOKUP Option....") D BMES^XPDUTL("Please log a Remedy Ticket for this issue.")
"RTN","PSS160PO",39,0)
 .S @XPDGREF@("PSSMLMSG",PSSMXUA2)="Unable to link PSS DRUG DOSING LOOKUP Option to PSS DOSAGES MANAGEMENT Menu" S PSSMXUA2=PSSMXUA2+1
"RTN","PSS160PO",40,0)
 .S @XPDGREF@("PSSMLMSG",PSSMXUA2)=" ",PSSMXUA2=PSSMXUA2+1 S @XPDGREF@("PSSMLMSG",PSSMXUA2)="Please log a Remedy Ticket and refer to this message." S PSSMXUA2=PSSMXUA2+1 D LINE
"RTN","PSS160PO",41,0)
 I 'PSSMXUAF D BMES^XPDUTL("New PSS DRUG DOSING LOOKUP option linked successfully...")
"RTN","PSS160PO",42,0)
 ;
"RTN","PSS160PO",43,0)
 D BMES^XPDUTL("Linking New PSS TRAILING SPACES REPORT Option....")
"RTN","PSS160PO",44,0)
 K PSSMXUA,PSSMXUAF
"RTN","PSS160PO",45,0)
 S PSSMXUAF=0
"RTN","PSS160PO",46,0)
 S PSSMXUA=$$ADD^XPDMENU("PSS DOSAGES MANAGEMENT","PSS TRAILING SPACES REPORT",,10) I 'PSSMXUA D
"RTN","PSS160PO",47,0)
 .S PSSMXUAF=1
"RTN","PSS160PO",48,0)
 .D BMES^XPDUTL("Unable to link PSS TRAILING SPACES REPORT Option....") D BMES^XPDUTL("Please log a Remedy Ticket for this issue.")
"RTN","PSS160PO",49,0)
 .S @XPDGREF@("PSSMLMSG",PSSMXUA2)="Unable to link PSS TRAILING SPACES REPORT Option to PSS DOSAGES MANAGEMENT Menu" S PSSMXUA2=PSSMXUA2+1
"RTN","PSS160PO",50,0)
 .S @XPDGREF@("PSSMLMSG",PSSMXUA2)=" ",PSSMXUA2=PSSMXUA2+1 S @XPDGREF@("PSSMLMSG",PSSMXUA2)="Please log a Remedy Ticket and refer to this message." S PSSMXUA2=PSSMXUA2+1 D LINE
"RTN","PSS160PO",51,0)
 I 'PSSMXUAF D BMES^XPDUTL("New PSS TRAILING SPACES REPORT option linked successfully...")
"RTN","PSS160PO",52,0)
 Q
"RTN","PSS160PO",53,0)
 ;
"RTN","PSS160PO",54,0)
 ;
"RTN","PSS160PO",55,0)
ADDVAL ; Final validation of data
"RTN","PSS160PO",56,0)
 D BMES^XPDUTL("Validating new Dose Unit File (#51.24) entries.")
"RTN","PSS160PO",57,0)
 N PSSADUC1,PSSADUC2,PSSADUC5,PSSADUC6,PSSADUC7,PSSADUC8,PSSADUK1,PSSADUK2,PSSADUK3,PSSATYPE
"RTN","PSS160PO",58,0)
 S (PSSADUK1,PSSADUK2,PSSADUK3)=0,PSSATYPE="FILM(S)"
"RTN","PSS160PO",59,0)
 S PSSADUC1=$$FIND1^DIC(51.24,"","X",PSSATYPE,"B") I +PSSADUC1'=52 D ADDKTM S PSSADUK1=1 G ADDLUN
"RTN","PSS160PO",60,0)
 I $$ADDCHK() S PSSADUK1=1 G ADDLUN
"RTN","PSS160PO",61,0)
 I $G(^PS(51.24,52,0))'="FILM(S)^FILMS^1" S PSSADUK1=1 G ADDLUN
"RTN","PSS160PO",62,0)
 F PSSADUC5="FILM;1","FILMS;2" Q:PSSADUK1  D
"RTN","PSS160PO",63,0)
 .S PSSADUC6=$P(PSSADUC5,";"),PSSADUC7=$P(PSSADUC5,";",2)
"RTN","PSS160PO",64,0)
 .S PSSADUC8=$$FIND1^DIC(51.242,",52,","X",PSSADUC6,"B")
"RTN","PSS160PO",65,0)
 .I $$ADDCHK() S PSSADUK1=1 Q
"RTN","PSS160PO",66,0)
 .I +PSSADUC8'=PSSADUC7 S PSSADUK1=1
"RTN","PSS160PO",67,0)
ADDLUN ;
"RTN","PSS160PO",68,0)
 I 'PSSADUK1 D ADDFLM
"RTN","PSS160PO",69,0)
 S PSSATYPE="ELISA UNIT(S)"
"RTN","PSS160PO",70,0)
 S PSSADUC2=$$FIND1^DIC(51.24,"","X",PSSATYPE,"B") I +PSSADUC2'=53 D ADDKTM S PSSADUK2=1 G ADDMIL
"RTN","PSS160PO",71,0)
 I $$ADDCHK() S PSSADUK2=1 G ADDLNX
"RTN","PSS160PO",72,0)
 I $G(^PS(51.24,53,0))'="ELISA UNIT(S)^ELISA UNIT^0" S PSSADUK2=1 G ADDLNX
"RTN","PSS160PO",73,0)
 K PSSADUC5,PSSADUC6,PSSADUC7,PSSADUC8
"RTN","PSS160PO",74,0)
 F PSSADUC5="EL UNIT;1","ELISA UNITS;2","ELISA UNIT;3","EL.U.;4","ELISA UNT;5","ELU;6" Q:PSSADUK2  D
"RTN","PSS160PO",75,0)
 .S PSSADUC6=$P(PSSADUC5,";"),PSSADUC7=$P(PSSADUC5,";",2)
"RTN","PSS160PO",76,0)
 .S PSSADUC8=$$FIND1^DIC(51.242,",53,","X",PSSADUC6,"B")
"RTN","PSS160PO",77,0)
 .I $$ADDCHK() S PSSADUK2=1 Q
"RTN","PSS160PO",78,0)
 .I +PSSADUC8'=PSSADUC7 S PSSADUK2=1
"RTN","PSS160PO",79,0)
 D ADDKTM
"RTN","PSS160PO",80,0)
ADDMIL ;
"RTN","PSS160PO",81,0)
 I 'PSSADUK2 D ADDELU
"RTN","PSS160PO",82,0)
 S PSSATYPE="MILLIONUNIT(S)"
"RTN","PSS160PO",83,0)
 S PSSADUC3=$$FIND1^DIC(51.24,"","X",PSSATYPE,"B") I +PSSADUC3'=23 D ADDKTM S PSSADUK3=1 G ADDLNX
"RTN","PSS160PO",84,0)
 I $$ADDCHK() S PSSADUK3=1 G ADDLNX
"RTN","PSS160PO",85,0)
 I $G(^PS(51.24,23,0))'="MILLIONUNIT(S)^MILLIONUNIT(S)^0" S PSSADUK3=1 G ADDLNX
"RTN","PSS160PO",86,0)
 K PSSADUC5,PSSADUC6,PSSADUC7,PSSADUC8
"RTN","PSS160PO",87,0)
 F PSSADUC5="MILLION UNIT;8","MILLION UNITS;9" Q:PSSADUK3  D
"RTN","PSS160PO",88,0)
 .S PSSADUC6=$P(PSSADUC5,";"),PSSADUC7=$P(PSSADUC5,";",2)
"RTN","PSS160PO",89,0)
 .S PSSADUC8=$$FIND1^DIC(51.242,",23,","X",PSSADUC6,"B")
"RTN","PSS160PO",90,0)
 .I $$ADDCHK() S PSSADUK3=1 Q
"RTN","PSS160PO",91,0)
 .I +PSSADUC8'=PSSADUC7 S PSSADUK3=1
"RTN","PSS160PO",92,0)
 I 'PSSADUK3 D ADDMIL2
"RTN","PSS160PO",93,0)
ADDLNX ;
"RTN","PSS160PO",94,0)
 I 'PSSADUK1,'PSSADUK2,'PSSADUK3 D BMES^XPDUTL("DOSE UNITS File (#51.24) entries are correct.") Q
"RTN","PSS160PO",95,0)
 I PSSADUK1 D ADDMS("FILM(S)")
"RTN","PSS160PO",96,0)
 I PSSADUK2 D ADDMS("ELISA UNIT(S)")
"RTN","PSS160PO",97,0)
 I PSSADUK3 D ADDMS("MILLIONUNIT(S)")
"RTN","PSS160PO",98,0)
 Q
"RTN","PSS160PO",99,0)
 ;
"RTN","PSS160PO",100,0)
 ;
"RTN","PSS160PO",101,0)
ADDMS(PSSATYPE) ; 
"RTN","PSS160PO",102,0)
 D BMES^XPDUTL("Problem found with "_PSSATYPE_" entry in DOSE UNITS File (#51.24).")
"RTN","PSS160PO",103,0)
 S @XPDGREF@("PSSMLMSG",PSSMXUA2)="Problem found with "_PSSATYPE_" entry in DOSE UNITS File (#51.24)." S PSSMXUA2=PSSMXUA2+1
"RTN","PSS160PO",104,0)
 S @XPDGREF@("PSSMLMSG",PSSMXUA2)=" " S PSSMXUA2=PSSMXUA2+1
"RTN","PSS160PO",105,0)
 D BMES^XPDUTL("Please log a Remedy Ticket for this issue.")
"RTN","PSS160PO",106,0)
 S @XPDGREF@("PSSMLMSG",PSSMXUA2)="Please log a Remedy Ticket and refer to this message." S PSSMXUA2=PSSMXUA2+1
"RTN","PSS160PO",107,0)
 S @XPDGREF@("PSSMLMSG",PSSMXUA2)=" " S PSSMXUA2=PSSMXUA2+1
"RTN","PSS160PO",108,0)
 Q
"RTN","PSS160PO",109,0)
 ;
"RTN","PSS160PO",110,0)
 ;
"RTN","PSS160PO",111,0)
ADDCHK() ;
"RTN","PSS160PO",112,0)
 I $D(^TMP("DIERR",$J)) D ADDKTM Q 1
"RTN","PSS160PO",113,0)
 K ^TMP("DIERR",$J)
"RTN","PSS160PO",114,0)
 Q 0
"RTN","PSS160PO",115,0)
 ;
"RTN","PSS160PO",116,0)
 ;
"RTN","PSS160PO",117,0)
ADDKTM ;
"RTN","PSS160PO",118,0)
 K ^TMP("DIERR",$J)
"RTN","PSS160PO",119,0)
 Q
"RTN","PSS160PO",120,0)
 ;
"RTN","PSS160PO",121,0)
 ;
"RTN","PSS160PO",122,0)
ADDFLM ;Validate synonyms and cross references for FILM(S)
"RTN","PSS160PO",123,0)
 I $G(^PS(51.24,52,1,1,0))'="FILM" S PSSADUK1=1 Q
"RTN","PSS160PO",124,0)
 I $G(^PS(51.24,52,1,2,0))'="FILMS" S PSSADUK1=1 Q
"RTN","PSS160PO",125,0)
 I '$D(^PS(51.24,52,1,"B","FILM",1)) S PSSADUK1=1 Q
"RTN","PSS160PO",126,0)
 I '$D(^PS(51.24,52,1,"B","FILMS",2)) S PSSADUK1=1 Q
"RTN","PSS160PO",127,0)
 I '$D(^PS(51.24,"B","FILM(S)",52)) S PSSADUK1=1 Q
"RTN","PSS160PO",128,0)
 I '$D(^PS(51.24,"C","FILMS",52)) S PSSADUK1=1 Q
"RTN","PSS160PO",129,0)
 I '$D(^PS(51.24,"D","FILM",52,1)) S PSSADUK1=1 Q
"RTN","PSS160PO",130,0)
 I '$D(^PS(51.24,"D","FILMS",52,2)) S PSSADUK1=1 Q
"RTN","PSS160PO",131,0)
 Q
"RTN","PSS160PO",132,0)
 ;
"RTN","PSS160PO",133,0)
 ;
"RTN","PSS160PO",134,0)
ADDELU ;Validate synonyms and cross references for ELISA UNIT(S)
"RTN","PSS160PO",135,0)
 I $G(^PS(51.24,53,1,1,0))'="EL UNIT" S PSSADUK2=1 Q
"RTN","PSS160PO",136,0)
 I $G(^PS(51.24,53,1,2,0))'="ELISA UNITS" S PSSADUK2=1 Q
"RTN","PSS160PO",137,0)
 I $G(^PS(51.24,53,1,3,0))'="ELISA UNIT" S PSSADUK2=1 Q
"RTN","PSS160PO",138,0)
 I $G(^PS(51.24,53,1,4,0))'="EL.U." S PSSADUK2=1 Q
"RTN","PSS160PO",139,0)
 I $G(^PS(51.24,53,1,5,0))'="ELISA UNT" S PSSADUK2=1 Q
"RTN","PSS160PO",140,0)
 I $G(^PS(51.24,53,1,6,0))'="ELU" S PSSADUK2=1 Q
"RTN","PSS160PO",141,0)
 I '$D(^PS(51.24,53,1,"B","EL UNIT",1)) S PSSADUK2=1 Q
"RTN","PSS160PO",142,0)
 I '$D(^PS(51.24,53,1,"B","EL.U.",4)) S PSSADUK2=1 Q
"RTN","PSS160PO",143,0)
 I '$D(^PS(51.24,53,1,"B","ELISA UNIT",3)) S PSSADUK2=1 Q
"RTN","PSS160PO",144,0)
 I '$D(^PS(51.24,53,1,"B","ELISA UNITS",2)) S PSSADUK2=1 Q
"RTN","PSS160PO",145,0)
 I '$D(^PS(51.24,53,1,"B","ELISA UNT",5)) S PSSADUK2=1 Q
"RTN","PSS160PO",146,0)
 I '$D(^PS(51.24,53,1,"B","ELU",6)) S PSSADUK2=1 Q
"RTN","PSS160PO",147,0)
 I '$D(^PS(51.24,"B","ELISA UNIT(S)",53)) S PSSADUK2=1 Q
"RTN","PSS160PO",148,0)
 I '$D(^PS(51.24,"C","ELISA UNIT",53)) S PSSADUK2=1 Q
"RTN","PSS160PO",149,0)
 I '$D(^PS(51.24,"D","EL UNIT",53,1)) S PSSADUK2=1 Q
"RTN","PSS160PO",150,0)
 I '$D(^PS(51.24,"D","EL.U.",53,4)) S PSSADUK2=1 Q
"RTN","PSS160PO",151,0)
 I '$D(^PS(51.24,"D","ELISA UNIT",53,3)) S PSSADUK2=1 Q
"RTN","PSS160PO",152,0)
 I '$D(^PS(51.24,"D","ELISA UNITS",53,2)) S PSSADUK2=1 Q
"RTN","PSS160PO",153,0)
 I '$D(^PS(51.24,"D","ELISA UNT",53,5)) S PSSADUK2=1 Q
"RTN","PSS160PO",154,0)
 I '$D(^PS(51.24,"D","ELU",53,6)) S PSSADUK2=1 Q
"RTN","PSS160PO",155,0)
 Q
"RTN","PSS160PO",156,0)
 ;
"RTN","PSS160PO",157,0)
SETWS ;define DOSING_INFO web service
"RTN","PSS160PO",158,0)
 N PSSWSERV,PSSWSER2,PSSWPEPS,PSSWSCNT,PSSWSMSG,PSSWSSTA,PSSWSERR,DA,DIE,DIC,DR,X,Y,DLAYGO S PSSWSCNT=0
"RTN","PSS160PO",159,0)
 S DIC="^XOB(18.12,",X="PEPS",DIC(0)="X" D ^DIC S PSSWPEPS=+Y K DIC  ;find the PEPS web server IEN
"RTN","PSS160PO",160,0)
 D BMES^XPDUTL("Beginning DOSING_INFO Web Service definition for PEPS web server: ")
"RTN","PSS160PO",161,0)
 S @XPDGREF@("PSSMLMSG",PSSMXUA2)="Beginning DOSING_INFO Web Service definition: " S PSSMXUA2=PSSMXUA2+1
"RTN","PSS160PO",162,0)
 I PSSWPEPS=-1 D  G SETWSQT
"RTN","PSS160PO",163,0)
 .D BMES^XPDUTL("     PEPS Web Server is not defined. Please contact product support.") S PSSWSERR=1
"RTN","PSS160PO",164,0)
 .S @XPDGREF@("PSSMLMSG",PSSMXUA2)="  PEPS Web Server isn't defined and DOSING_INFO Web Service couldn't be" S PSSMXUA2=PSSMXUA2+1
"RTN","PSS160PO",165,0)
 .S @XPDGREF@("PSSMLMSG",PSSMXUA2)="     created.  Please log a Remedy Ticket and refer to this message." S PSSMXUA2=PSSMXUA2+1
"RTN","PSS160PO",166,0)
SETWS2 ;
"RTN","PSS160PO",167,0)
 S DIC="^XOB(18.02,",X="DOSING_INFO",DIC(0)="X" D ^DIC S PSSWSERV=+Y ;get the IEN for the DOSING_INFO web service
"RTN","PSS160PO",168,0)
 I +Y<1,PSSWSCNT=0 D REGREST^XOBWLIB("DOSING_INFO","/MOCHA/","dosinginfo") H 3 S PSSWSCNT=1 G SETWS2  ;if not there register the web service
"RTN","PSS160PO",169,0)
 I +Y<1 D  H 3 G SETWSQT
"RTN","PSS160PO",170,0)
 .D BMES^XPDUTL("     DOSING_INFO web service has NOT been created. Please contact product support.")
"RTN","PSS160PO",171,0)
 .S @XPDGREF@("PSSMLMSG",PSSMXUA2)="  DOSING_INFO web service has NOT been defined.  Please log a" S PSSMXUA2=PSSMXUA2+1,PSSWSERR=1
"RTN","PSS160PO",172,0)
 .S @XPDGREF@("PSSMLMSG",PSSMXUA2)="  Remedy Ticket and refer to this message." S PSSMXUA2=PSSMXUA2+1
"RTN","PSS160PO",173,0)
 .S @XPDGREF@("PSSMLMSG",PSSMXUA2)=" " S PSSMXUA2=PSSMXUA2+1
"RTN","PSS160PO",174,0)
 S PSSWSMSG=$S(PSSWSCNT=0:"DOSING_INFO web service was previously defined.  No action taken.",1:"DOSING_INFO web service has been defined.")
"RTN","PSS160PO",175,0)
 S @XPDGREF@("PSSMLMSG",PSSMXUA2)="  "_PSSWSMSG S PSSMXUA2=PSSMXUA2+1
"RTN","PSS160PO",176,0)
 D BMES^XPDUTL("     "_PSSWSMSG)
"RTN","PSS160PO",177,0)
 ;
"RTN","PSS160PO",178,0)
 K DIC,DIE,DA,DR,X,Y
"RTN","PSS160PO",179,0)
 S DIC="^XOB(18.12,"_PSSWPEPS_",100,",X="DOSING_INFO",DIC(0)="X" D ^DIC S PSSWSER2=+Y
"RTN","PSS160PO",180,0)
 L +^XOB(18.12,PSSWPEPS):20 I '$T D  H 3 G SETWSQT
"RTN","PSS160PO",181,0)
 .D BMES^XPDUTL("     Unable to lock file 18.12 to enable DOSING_INFO web service. Please ")
"RTN","PSS160PO",182,0)
 .D BMES^XPDUTL("     contact product support.")
"RTN","PSS160PO",183,0)
 .S @XPDGREF@("PSSMLMSG",PSSMXUA2)="  Unable to lock file 18.12 to enable DOSING_INFO web service." S PSSMXUA2=PSSMXUA2+1
"RTN","PSS160PO",184,0)
 .S @XPDGREF@("PSSMLMSG",PSSMXUA2)="  Please log a Remedy Ticket and refer to this message." S PSSMXUA2=PSSMXUA2+1,PSSWSERR=1
"RTN","PSS160PO",185,0)
 I PSSWSER2=-1 D PSSENABL G SETWSQT
"RTN","PSS160PO",186,0)
 S PSSWSSTA=$$GET1^DIQ(18.121,PSSWSER2_",1",".06","I")
"RTN","PSS160PO",187,0)
 I PSSWSSTA=-1 D PSSENABL G SETWSQT
"RTN","PSS160PO",188,0)
 I PSSWSSTA=""!(PSSWSSTA=0) D PSSENAB2 G SETWSQT
"RTN","PSS160PO",189,0)
 I PSSWSSTA D
"RTN","PSS160PO",190,0)
 .D BMES^XPDUTL("     DOSING_INFO web service was previously enabled.  No action taken.")
"RTN","PSS160PO",191,0)
 .S @XPDGREF@("PSSMLMSG",PSSMXUA2)="  DOSING_INFO web service was previously enabled. No action taken." S PSSMXUA2=PSSMXUA2+1
"RTN","PSS160PO",192,0)
SETWSQT ;
"RTN","PSS160PO",193,0)
 L -^XOB(18.12,PSSWPEPS)
"RTN","PSS160PO",194,0)
 I $G(PSSWSERR) D
"RTN","PSS160PO",195,0)
 .D BMES^XPDUTL("     **************************************************************************")
"RTN","PSS160PO",196,0)
 .D BMES^XPDUTL("     ** Due to error(s), DOSING_INFO web service definition is not complete. **")
"RTN","PSS160PO",197,0)
 .D BMES^XPDUTL("     **************************************************************************")
"RTN","PSS160PO",198,0)
 .S @XPDGREF@("PSSMLMSG",PSSMXUA2)="*** Due to error(s), DOSING_INFO web service definition is not complete." S PSSMXUA2=PSSMXUA2+1
"RTN","PSS160PO",199,0)
 I '$G(PSSWSERR) D BMES^XPDUTL("Web Service definition process is complete for PEPS web server.") D
"RTN","PSS160PO",200,0)
 .S @XPDGREF@("PSSMLMSG",PSSMXUA2)="Web Service definition process is complete." S PSSMXUA2=PSSMXUA2+1
"RTN","PSS160PO",201,0)
 D LINE
"RTN","PSS160PO",202,0)
 Q
"RTN","PSS160PO",203,0)
 ;
"RTN","PSS160PO",204,0)
PSSENABL ;
"RTN","PSS160PO",205,0)
 S DIC="^XOB(18.12,"_PSSWPEPS_",100,",DLAYGO=18.121,DIC(0)="L",DA(1)=PSSWPEPS,X="DOSING_INFO" D ^DIC S PSSWSER2=+Y
"RTN","PSS160PO",206,0)
PSSENAB2 ;
"RTN","PSS160PO",207,0)
 S DIE="^XOB(18.12,"_PSSWPEPS_",100,",DR=".06///ENABLE",DA(1)=PSSWPEPS,DA=PSSWSER2 D ^DIE
"RTN","PSS160PO",208,0)
 S PSSWSSTA=$$GET1^DIQ(18.121,PSSWSER2_",1",".06","I")
"RTN","PSS160PO",209,0)
 I PSSWSSTA D
"RTN","PSS160PO",210,0)
 .D BMES^XPDUTL("     DOSING_INFO web service has been enabled.")
"RTN","PSS160PO",211,0)
 .S @XPDGREF@("PSSMLMSG",PSSMXUA2)="  DOSING_INFO web service has been enabled." S PSSMXUA2=PSSMXUA2+1
"RTN","PSS160PO",212,0)
 Q
"RTN","PSS160PO",213,0)
 ;
"RTN","PSS160PO",214,0)
LINE ;
"RTN","PSS160PO",215,0)
 S @XPDGREF@("PSSMLMSG",PSSMXUA2)=" " S PSSMXUA2=PSSMXUA2+1
"RTN","PSS160PO",216,0)
 Q
"RTN","PSS160PO",217,0)
 ;
"RTN","PSS160PO",218,0)
ADDMIL2 ;
"RTN","PSS160PO",219,0)
 I $G(^PS(51.24,23,1,1,0))'="MU" S PSSADUK3=1 Q
"RTN","PSS160PO",220,0)
 I $G(^PS(51.24,23,1,2,0))'="MIU" S PSSADUK3=1 Q
"RTN","PSS160PO",221,0)
 I $G(^PS(51.24,23,1,3,0))'="MILU" S PSSADUK3=1 Q
"RTN","PSS160PO",222,0)
 I $G(^PS(51.24,23,1,4,0))'="MILI U" S PSSADUK3=1 Q
"RTN","PSS160PO",223,0)
 I $G(^PS(51.24,23,1,5,0))'="MILI UNIT" S PSSADUK3=1 Q
"RTN","PSS160PO",224,0)
 I $G(^PS(51.24,23,1,6,0))'="MILI UNITS" S PSSADUK3=1 Q
"RTN","PSS160PO",225,0)
 I $G(^PS(51.24,23,1,7,0))'="MILLION UNT" S PSSADUK3=1 Q
"RTN","PSS160PO",226,0)
 I $G(^PS(51.24,23,1,8,0))'="MILLION UNIT" S PSSADUK3=1 Q
"RTN","PSS160PO",227,0)
 I $G(^PS(51.24,23,1,9,0))'="MILLION UNITS" S PSSADUK3=1 Q
"RTN","PSS160PO",228,0)
 I '$D(^PS(51.24,23,1,"B","MILI U",4)) S PSSADUK3=1 Q
"RTN","PSS160PO",229,0)
 I '$D(^PS(51.24,23,1,"B","MILI UNIT",5)) S PSSADUK3=1 Q
"RTN","PSS160PO",230,0)
 I '$D(^PS(51.24,23,1,"B","MILI UNITS",6)) S PSSADUK3=1 Q
"RTN","PSS160PO",231,0)
 I '$D(^PS(51.24,23,1,"B","MILLION UNIT",8)) S PSSADUK3=1 Q
"RTN","PSS160PO",232,0)
 I '$D(^PS(51.24,23,1,"B","MILLION UNITS",9)) S PSSADUK3=1 Q
"RTN","PSS160PO",233,0)
 I '$D(^PS(51.24,23,1,"B","MILLION UNT",7)) S PSSADUK3=1 Q
"RTN","PSS160PO",234,0)
 I '$D(^PS(51.24,23,1,"B","MILU",3)) S PSSADUK3=1 Q
"RTN","PSS160PO",235,0)
 I '$D(^PS(51.24,23,1,"B","MIU",2)) S PSSADUK3=1 Q
"RTN","PSS160PO",236,0)
 I '$D(^PS(51.24,23,1,"B","MU",1)) S PSSADUK3=1 Q
"RTN","PSS160PO",237,0)
 I '$D(^PS(51.24,"B","MILLIONUNIT(S)",23)) S PSSADUK3=1 Q
"RTN","PSS160PO",238,0)
 I '$D(^PS(51.24,"C","MILLIONUNIT(S)",23)) S PSSADUK3=1 Q 
"RTN","PSS160PO",239,0)
 I '$D(^PS(51.24,"D","MILI U",23,4)) S PSSADUK3=1 Q
"RTN","PSS160PO",240,0)
 I '$D(^PS(51.24,"D","MILI UNIT",23,5)) S PSSADUK3=1 Q
"RTN","PSS160PO",241,0)
 I '$D(^PS(51.24,"D","MILI UNITS",23,6)) S PSSADUK3=1 Q
"RTN","PSS160PO",242,0)
 I '$D(^PS(51.24,"D","MILLION UNIT",23,8)) S PSSADUK3=1 Q
"RTN","PSS160PO",243,0)
 I '$D(^PS(51.24,"D","MILLION UNITS",23,9)) S PSSADUK3=1 Q
"RTN","PSS160PO",244,0)
 I '$D(^PS(51.24,"D","MILLION UNT",23,7)) S PSSADUK3=1 Q
"RTN","PSS160PO",245,0)
 I '$D(^PS(51.24,"D","MILU",23,3)) S PSSADUK3=1 Q
"RTN","PSS160PO",246,0)
 I '$D(^PS(51.24,"D","MIU",23,2)) S PSSADUK3=1 Q
"RTN","PSS160PO",247,0)
 I '$D(^PS(51.24,"D","MU",23,1)) S PSSADUK3=1 Q
"RTN","PSS160PO",248,0)
 Q
"RTN","PSS160PO",249,0)
 ;
"RTN","PSSDRDOS")
0^18^B154577281
"RTN","PSSDRDOS",1,0)
PSSDRDOS ;BIR/RTR-Display Dosing related information for DRUG File(#50) entry ;08/20/11
"RTN","PSSDRDOS",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**160**;9/30/97;Build 76
"RTN","PSSDRDOS",3,0)
 ;
"RTN","PSSDRDOS",4,0)
 ;
"RTN","PSSDRDOS",5,0)
EN ;
"RTN","PSSDRDOS",6,0)
 N X,Y,DIR,DTOUT,DUOUT,DIRUT,DIROUT,DIC,DA,DR,DLAYGO,DIDEL,%,%DT,D0,I,J,XX,D
"RTN","PSSDRDOS",7,0)
 N PSSVVHIN,PSSVVHZR,PSSVVHND,PSSVVHN1,PSSVVHN3,PSSVVHRS,PSSVVHMT,PSSVVHOV,PSSVVHNM,PSSVVHDF,PSSVVHGC,PSSVVHDX,PSSVVHLG,PSSVVHQT,PSSVVHL3,PSSVVHL4
"RTN","PSSDRDOS",8,0)
 N PSSVVHA1,PSSVVHA2,PSSVVHA3,PSSVVHA4,PSSVVHA5,PSSVVHA7,PSSVVHA8,PSSVVHA9,PSSVVHAR,PSSIEN,PSSVVHXX,PSSVVHPL,PSSVVHHH
"RTN","PSSDRDOS",9,0)
 N PSSVVHL1,PSSVVHL2
"RTN","PSSDRDOS",10,0)
 S $P(PSSVVHL1,"=",75)=""
"RTN","PSSDRDOS",11,0)
 S $P(PSSVVHL2,"-",75)=""
"RTN","PSSDRDOS",12,0)
EN1 ;Come back through to prompt for another drug before exiting option
"RTN","PSSDRDOS",13,0)
 K X,Y,DIR,DTOUT,DUOUT,DIRUT,DIROUT,DIC,DA,DR,DLAYGO,DIDEL,%,%DT,D0,I,J,XX,D
"RTN","PSSDRDOS",14,0)
 K PSSVVHIN,PSSVVHZR,PSSVVHND,PSSVVHN1,PSSVVHN3,PSSVVHRS,PSSVVHMT,PSSVVHOV,PSSVVHNM,PSSVVHDF,PSSVVHGC,PSSVVHDX,PSSVVHLG,PSSVVHQT,PSSVVHL3,PSSVVHL4
"RTN","PSSDRDOS",15,0)
 K PSSVVHA1,PSSVVHA2,PSSVVHA3,PSSVVHA4,PSSVVHA5,PSSVVHA7,PSSVVHA8,PSSVVHA9,PSSVVHAR,PSSIEN,PSSVVHXX,PSSVVHPL,PSSVVHHH
"RTN","PSSDRDOS",16,0)
 W ! K DIC,X,DTOUT,DUOUT S DIC="^PSDRUG(",DIC(0)="AEQMZ" D ^DIC K DIC,X I Y<0!($D(DUOUT))!($D(DTOUT)) W ! Q
"RTN","PSSDRDOS",17,0)
 S PSSVVHIN=+Y
"RTN","PSSDRDOS",18,0)
 S (PSSVVHDX,PSSVVHQT,PSSVVHLG)=0,(PSSVVHOV,PSSVVHGC,PSSVVHNM,PSSVVHDF,PSSVVHPL,PSSVVHHH)=""
"RTN","PSSDRDOS",19,0)
 S PSSVVHZR=$G(^PSDRUG(PSSVVHIN,0)),PSSVVHND=$G(^PSDRUG(PSSVVHIN,"ND")),PSSVVHMT=1
"RTN","PSSDRDOS",20,0)
 S PSSVVHN1=$P(PSSVVHND,"^"),PSSVVHN3=$P(PSSVVHND,"^",3) I 'PSSVVHN1!('PSSVVHN3) S PSSVVHMT=0
"RTN","PSSDRDOS",21,0)
 I 'PSSVVHMT S PSSVVHLG=1 G NOTM
"RTN","PSSDRDOS",22,0)
 S PSSVVHRS=$$PROD0^PSNAPIS(PSSVVHN1,PSSVVHN3),PSSVVHOV=$$OVRIDE^PSNAPIS(PSSVVHN1,PSSVVHN3) S PSSVVHHH=$S(PSSVVHOV:1,1:0)
"RTN","PSSDRDOS",23,0)
 S PSSVVHNM=$P(PSSVVHRS,"^"),PSSVVHDF=$P(PSSVVHRS,"^",2),PSSVVHGC=$P(PSSVVHRS,"^",7)
"RTN","PSSDRDOS",24,0)
 I PSSVVHDF S PSSVVHPL=0 I $P($G(^PS(50.606,PSSVVHDF,1)),"^") S (PSSVVHDX,PSSVVHPL)=1
"RTN","PSSDRDOS",25,0)
 S PSSVVHLG=$$ELG
"RTN","PSSDRDOS",26,0)
 ;
"RTN","PSSDRDOS",27,0)
NOTM ;Jump to here if not matched to National Drug File
"RTN","PSSDRDOS",28,0)
 W @IOF
"RTN","PSSDRDOS",29,0)
 S PSSVVHL3=$L($P(PSSVVHZR,"^")),PSSVVHL4=$S(PSSVVHGC'="":$L(PSSVVHGC),1:4) D
"RTN","PSSDRDOS",30,0)
 .I (PSSVVHL3+PSSVVHL4)<54 W !?12,$P(PSSVVHZR,"^")_"  (GCNSEQNO: "_$S(PSSVVHGC'="":PSSVVHGC,1:"None")_")" D PAUSE Q
"RTN","PSSDRDOS",31,0)
 .W !?12,$P(PSSVVHZR,"^") D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",32,0)
 .W !?12,"(GCNSEQNO: "_$S(PSSVVHGC'="":PSSVVHGC,1:"None")_")" D PAUSE
"RTN","PSSDRDOS",33,0)
 G:PSSVVHQT EN1
"RTN","PSSDRDOS",34,0)
 W !,PSSVVHL1 D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",35,0)
 S PSSVVHL3=$L(PSSVVHNM) D
"RTN","PSSDRDOS",36,0)
 .I PSSVVHL3<63 W !,"VA PRODUCT NAME: "_PSSVVHNM D PAUSE Q
"RTN","PSSDRDOS",37,0)
 .W !,"VA PRODUCT NAME:" D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",38,0)
 .W !?2,PSSVVHNM D PAUSE
"RTN","PSSDRDOS",39,0)
 G:PSSVVHQT EN1
"RTN","PSSDRDOS",40,0)
 W !,"NDF DOSAGE FORM: "_$S(PSSVVHDF:$P($G(^PS(50.606,+PSSVVHDF,0)),"^"),1:"") D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",41,0)
 W !,"DEA, SPECIAL HDLG: "_$P(PSSVVHZR,"^",3)_"   VA DRUG CLASS: "_$P(PSSVVHZR,"^",2) D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",42,0)
 W !,"EXCLUDE DOSAGE FORM FROM DOSAGE CHECKS: " W $S(PSSVVHPL:"YES",PSSVVHPL=0:"NO",1:"") D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",43,0)
 W !,"OVERRIDE DOSAGE FORM DOSE CHECK EXCLUSION FOR VA PRODUCT: " W $S(PSSVVHHH:"YES",PSSVVHHH=0:"NO",1:"") D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",44,0)
 W ! D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",45,0)
 W !?7,"***DRUG "_$S(PSSVVHLG:"NOT ",1:"")_"ELIGIBLE FOR DOSAGE CHECKS***" D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",46,0)
 W !,PSSVVHL2 D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",47,0)
 ;
"RTN","PSSDRDOS",48,0)
 ;
"RTN","PSSDRDOS",49,0)
 S PSSVVHA1=$G(^PSDRUG(PSSVVHIN,"DOS")) S PSSVVHL3=0
"RTN","PSSDRDOS",50,0)
 S PSSVVHA2=$P(PSSVVHA1,"^"),PSSVVHA3=$P(PSSVVHA1,"^",2) I PSSVVHA3,$P($G(^PS(50.507,+PSSVVHA3,0)),"^")'["/" S PSSVVHL3=$L($P($G(^PS(50.607,+PSSVVHA3,0)),"^"))
"RTN","PSSDRDOS",51,0)
 W !,"Strength: "_$S($E($G(PSSVVHA2),1)=".":"0",1:"")_$G(PSSVVHA2) D
"RTN","PSSDRDOS",52,0)
 .I PSSVVHA3="" W "   Unit:" D PAUSE Q
"RTN","PSSDRDOS",53,0)
 .I PSSVVHL3<46 W "   Unit: "_$S($P($G(^PS(50.607,+$G(PSSVVHA3),0)),"^")'["/":$P($G(^(0)),"^"),1:"") D PAUSE Q
"RTN","PSSDRDOS",54,0)
 .W ! D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",55,0)
 .W "   Unit: "_$S($P($G(^PS(50.607,+$G(PSSVVHA3),0)),"^")'["/":$P($G(^(0)),"^"),1:"") D PAUSE Q
"RTN","PSSDRDOS",56,0)
 G:PSSVVHQT EN1
"RTN","PSSDRDOS",57,0)
 W !,"POSSIBLE DOSAGES:" D PAUSE G:PSSVVHQT EN1 D
"RTN","PSSDRDOS",58,0)
 .F PSSVVHA4=0:0 S PSSVVHA4=$O(^PSDRUG(PSSVVHIN,"DOS1",PSSVVHA4)) Q:'PSSVVHA4!(PSSVVHQT)  D
"RTN","PSSDRDOS",59,0)
 ..S PSSVVHA5=$G(^PSDRUG(PSSVVHIN,"DOS1",PSSVVHA4,0))
"RTN","PSSDRDOS",60,0)
 ..W !,"  DISPENSE UNITS PER DOSE: " D
"RTN","PSSDRDOS",61,0)
 ...W $S($E($P(PSSVVHA5,"^"),1)=".":"0",1:"")_$P(PSSVVHA5,"^")
"RTN","PSSDRDOS",62,0)
 ...S X=$P(PSSVVHA5,"^"),PSSIEN=PSSVVHIN D SET^PSSDOSLZ S PSSVVHXX=$G(X)
"RTN","PSSDRDOS",63,0)
 ...W ?43,"DOSE: ",PSSVVHXX
"RTN","PSSDRDOS",64,0)
 ...I $L(PSSVVHXX)'>14 W ?65,"PACKAGE: ",$P(PSSVVHA5,U,3) D PAUSE Q
"RTN","PSSDRDOS",65,0)
 ...W ! D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",66,0)
 ...W ?65,"PACKAGE: ",$P(PSSVVHA5,U,3) D PAUSE
"RTN","PSSDRDOS",67,0)
 ..Q:PSSVVHQT
"RTN","PSSDRDOS",68,0)
 ..W !,"      BCMA UNITS PER DOSE: "_$S($E($P(PSSVVHA5,"^",4),1)=".":"0",1:"")_$P(PSSVVHA5,"^",4) D PAUSE
"RTN","PSSDRDOS",69,0)
 G:PSSVVHQT EN1
"RTN","PSSDRDOS",70,0)
 W !!,"LOCAL POSSIBLE DOSAGES:" D PAUSE G:PSSVVHQT EN1 D
"RTN","PSSDRDOS",71,0)
 .F PSSVVHA7=0:0 S PSSVVHA7=$O(^PSDRUG(PSSVVHIN,"DOS2",PSSVVHA7)) Q:'PSSVVHA7!(PSSVVHQT)  D
"RTN","PSSDRDOS",72,0)
 ..S PSSVVHA8=$G(^PSDRUG(PSSVVHIN,"DOS2",PSSVVHA7,0)) W !,"  LOCAL POSSIBLE DOSAGE: " D
"RTN","PSSDRDOS",73,0)
 ...I $L($P(PSSVVHA8,"^"))'>37 W $P(PSSVVHA8,"^"),?65,"PACKAGE: ",$P(PSSVVHA8,"^",2) D PAUSE Q:PSSVVHQT  D WXFPT(PSSVVHA8) Q
"RTN","PSSDRDOS",74,0)
 ...W !,?3,$P(PSSVVHA8,"^"),?65,"PACKAGE: ",$P(PSSVVHA8,"^",2) D PAUSE Q:PSSVVHQT  D WXFPT(PSSVVHA8)
"RTN","PSSDRDOS",75,0)
 G:PSSVVHQT EN1
"RTN","PSSDRDOS",76,0)
 W !,PSSVVHL2 D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",77,0)
 I $G(PSSVVHGC)=""!(PSSVVHLG) D  G EN1
"RTN","PSSDRDOS",78,0)
 .W !,"FDB ROUTES:" D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",79,0)
 .W !,"FDB DOSE UNITS:" D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",80,0)
 .W !,"BSA REQUIRED FOR DOSAGE CHECKS:" D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",81,0)
 .W !,"WEIGHT REQUIRED FOR DOSAGE CHECKS:" D PAUSE
"RTN","PSSDRDOS",82,0)
 D NGC G EN1
"RTN","PSSDRDOS",83,0)
 ;
"RTN","PSSDRDOS",84,0)
 ;
"RTN","PSSDRDOS",85,0)
WXFPT(PSSVVHCL) ;
"RTN","PSSDRDOS",86,0)
 N PSSVVHC1,PSSVVHC2,PSSVVHC3,PSSVVHC4,PSSVVHC5,PSSVVHC6,PSSVVHC7
"RTN","PSSDRDOS",87,0)
 S PSSVVHC4=""
"RTN","PSSDRDOS",88,0)
 S PSSVVHC1=$P(PSSVVHCL,"^",3),PSSVVHC2=$P(PSSVVHCL,"^",5),PSSVVHC3=$P(PSSVVHCL,"^",6)
"RTN","PSSDRDOS",89,0)
 I PSSVVHC2 S PSSVVHC4=$P($G(^PS(51.24,+PSSVVHC2,0)),"^")
"RTN","PSSDRDOS",90,0)
 S PSSVVHC5=$S($E(PSSVVHC3)=".":"0",1:"")_PSSVVHC3
"RTN","PSSDRDOS",91,0)
 S PSSVVHC7=$S($E(PSSVVHC1)=".":"0",1:"")_PSSVVHC1
"RTN","PSSDRDOS",92,0)
 S PSSVVHC6=$L(PSSVVHC5)
"RTN","PSSDRDOS",93,0)
 W !?4,"BCMA UNITS PER DOSE: "_PSSVVHC7 D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",94,0)
 I PSSVVHC6<12 W !?4,"       NUMERIC DOSE: "_PSSVVHC5,?38,"DOSE UNIT: "_PSSVVHC4 D PAUSE Q
"RTN","PSSDRDOS",95,0)
 W !,?4,"       NUMERIC DOSE: "_PSSVVHC5 D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",96,0)
 W !,?38,"DOSE UNIT: "_PSSVVHC4 D PAUSE
"RTN","PSSDRDOS",97,0)
 Q
"RTN","PSSDRDOS",98,0)
 ;
"RTN","PSSDRDOS",99,0)
 ;
"RTN","PSSDRDOS",100,0)
PAUSE ;
"RTN","PSSDRDOS",101,0)
 I ($Y+5)'>IOSL Q
"RTN","PSSDRDOS",102,0)
 W ! K DIR S DIR(0)="E",DIR("A")="Press Return to continue, '^' to exit" D ^DIR K DIR I 'Y S PSSVVHQT=1 Q
"RTN","PSSDRDOS",103,0)
 W @IOF
"RTN","PSSDRDOS",104,0)
 Q
"RTN","PSSDRDOS",105,0)
 ;
"RTN","PSSDRDOS",106,0)
 ;
"RTN","PSSDRDOS",107,0)
ELG() ;Is drug Dose Call Eligible, for matched drugs
"RTN","PSSDRDOS",108,0)
 N PSSVVHDA
"RTN","PSSDRDOS",109,0)
 S PSSVVHDA=PSSVVHDF
"RTN","PSSDRDOS",110,0)
 ;1=exempt from Dose Check, 0=not exempt from Dose check
"RTN","PSSDRDOS",111,0)
 I $P(PSSVVHZR,"^",3)["S"!($E($P(PSSVVHZR,"^",2),1,2)="XA") Q 1
"RTN","PSSDRDOS",112,0)
 I $G(PSSVVHGC)="" Q 1
"RTN","PSSDRDOS",113,0)
 I $G(PSSVVHDA)'>0,$P($G(^PSDRUG(PSSVVHIN,2)),"^") S PSSVVHDA=$P($G(^PS(50.7,+$P($G(^PSDRUG(PSSVVHIN,2)),"^"),0)),"^",2) I PSSVVHDA,$P($G(^PS(50.606,+$G(PSSVVHDA),1)),"^") S PSSVVHDX=1
"RTN","PSSDRDOS",114,0)
 I PSSVVHOV=""!('$G(PSSVVHDA))!($P($G(^PS(50.606,+$G(PSSVVHDA),1)),"^")="") Q 0
"RTN","PSSDRDOS",115,0)
 I $P($G(^PS(50.606,+$G(PSSVVHDA),1)),"^"),'PSSVVHOV Q 1
"RTN","PSSDRDOS",116,0)
 I '$P($G(^PS(50.606,+$G(PSSVVHDA),1)),"^"),PSSVVHOV Q 1
"RTN","PSSDRDOS",117,0)
 Q 0
"RTN","PSSDRDOS",118,0)
 ;
"RTN","PSSDRDOS",119,0)
 ;
"RTN","PSSDRDOS",120,0)
NGC ;Print First Databank from from DOsing records
"RTN","PSSDRDOS",121,0)
 N PSSDCR1,PSSDCR2,PSSDCR3,PSSDCR4,PSSDCR5,PSSDCR6,PSSDCR7,PSSDCR8,PSSDCR9,PSSDCRN3,PSSDCRVL,PSSDCRMR,PSSDCRUN,PSSDCRWT,PSSDCRBS,PSSDCRCO,PSSDCRF1,PSSDCRF2,PSSDCRF3,PSSDCRF4,PSSDCRF5,PSSDCRX1,PSSDCRX2,PSSDCRXX,PSSDCRK1,PSSDCRK2
"RTN","PSSDRDOS",122,0)
 N PSSDCRJ1,PSSDCRJ2,PSSDCRJ3,PSSDCRJ4,PSSDCRJ5,PSSDCRJ6
"RTN","PSSDRDOS",123,0)
 D NGCK
"RTN","PSSDRDOS",124,0)
 D EN^PSSFDBDI(PSSVVHGC,.PSSDCRVL)
"RTN","PSSDRDOS",125,0)
 I $P($G(PSSDCRVL(0)),"^")=-1 D  D NGCK Q
"RTN","PSSDRDOS",126,0)
 .W !,"Vendor database cannot be reached. FDB Dosing information could not be" D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",127,0)
 .W !,"retrieved at this time." D PAUSE
"RTN","PSSDRDOS",128,0)
 ;
"RTN","PSSDRDOS",129,0)
 ;set arrays used for printing from doseRanges records
"RTN","PSSDRDOS",130,0)
 S (PSSDCRX1,PSSDCRX2)=1
"RTN","PSSDRDOS",131,0)
 S PSSVVHGC=+PSSVVHGC
"RTN","PSSDRDOS",132,0)
 S PSSDCR1="" F  S PSSDCR1=$O(^TMP($J,"PSSFDBDI",PSSVVHGC,"doseRanges",PSSDCR1)) Q:PSSDCR1=""  D
"RTN","PSSDRDOS",133,0)
 .S PSSDCR2=$G(^TMP($J,"PSSFDBDI",PSSVVHGC,"doseRanges",PSSDCR1,1,0)) Q:$P(PSSDCR2,"^",4)'="SINGLE DOSE"&($P(PSSDCR2,"^",4)'="MAINTENANCE")  S:$P(PSSDCR2,"^",6)'="" PSSDCRMR($P(PSSDCR2,"^",6))=""
"RTN","PSSDRDOS",134,0)
 .S PSSDCR5=$G(^TMP($J,"PSSFDBDI",PSSVVHGC,"doseRanges",PSSDCR1,5,0))
"RTN","PSSDRDOS",135,0)
 .S PSSDCR6=$G(^TMP($J,"PSSFDBDI",PSSVVHGC,"doseRanges",PSSDCR1,6,0))
"RTN","PSSDRDOS",136,0)
 .S PSSDCR7=$G(^TMP($J,"PSSFDBDI",PSSVVHGC,"doseRanges",PSSDCR1,7,0))
"RTN","PSSDRDOS",137,0)
 .S PSSDCRN3=$G(^TMP($J,"PSSFDBDI",PSSVVHGC,"doseRanges",PSSDCR1,3,0))
"RTN","PSSDRDOS",138,0)
 .F PSSDCR8=2,4,6,8 D
"RTN","PSSDRDOS",139,0)
 ..S:$P(PSSDCR5,"^",PSSDCR8)'="" PSSDCRUN($P($P(PSSDCR5,"^",PSSDCR8),"/"))="" S:$P(PSSDCR6,"^",PSSDCR8)'="" PSSDCRUN($P($P(PSSDCR6,"^",PSSDCR8),"/"))=""
"RTN","PSSDRDOS",140,0)
 .F PSSDCR8=2,4 D
"RTN","PSSDRDOS",141,0)
 ..S:$P(PSSDCR7,"^",PSSDCR8)'="" PSSDCRUN($P($P(PSSDCR7,"^",PSSDCR8),"/"))=""
"RTN","PSSDRDOS",142,0)
 .I $P(PSSDCR2,"^",7)'="",$P(PSSDCR2,"^",8)'="" S PSSDCRCO=$P(PSSDCR2,"^",7)_"-"_$P(PSSDCR2,"^",8) D
"RTN","PSSDRDOS",143,0)
 ..I $P(PSSDCRN3,"^")="true"!($P(PSSDCRN3,"^")="false") I '$$DUP1 S PSSDCRBS(PSSDCRX1,PSSDCRCO,$P(PSSDCRN3,"^"))=$P(PSSDCR2,"^",6)_"^"_$P(PSSDCR2,"^",4) S PSSDCRX1=PSSDCRX1+1
"RTN","PSSDRDOS",144,0)
 ..I $P(PSSDCRN3,"^",2)="true"!($P(PSSDCRN3,"^",2)="false") I '$$DUP2 S PSSDCRWT(PSSDCRX2,PSSDCRCO,$P(PSSDCRN3,"^",2))=$P(PSSDCR2,"^",6)_"^"_$P(PSSDCR2,"^",4) S PSSDCRX2=PSSDCRX2+1
"RTN","PSSDRDOS",145,0)
 ;
"RTN","PSSDRDOS",146,0)
 ;Removed all Min/Max Dosing records per CR 5781, CR 5783 and CCR 5778
"RTN","PSSDRDOS",147,0)
 ;
"RTN","PSSDRDOS",148,0)
 W !,"FDB ROUTES: " S PSSDCR3=0 D
"RTN","PSSDRDOS",149,0)
 .S PSSDCR4="" F  S PSSDCR4=$O(PSSDCRMR(PSSDCR4)) Q:PSSDCR4=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",150,0)
 ..I 'PSSDCR3 W PSSDCR4 S PSSDCR3=1 D PAUSE Q
"RTN","PSSDRDOS",151,0)
 ..W !?12,PSSDCR4 D PAUSE
"RTN","PSSDRDOS",152,0)
 I PSSVVHQT D NGCK Q
"RTN","PSSDRDOS",153,0)
 ;
"RTN","PSSDRDOS",154,0)
 W !,"FDB DOSE UNITS: " S PSSDCR3=0 D
"RTN","PSSDRDOS",155,0)
 .S PSSDCR4="" F  S PSSDCR4=$O(PSSDCRUN(PSSDCR4)) Q:PSSDCR4=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",156,0)
 ..I 'PSSDCR3 W PSSDCR4 S PSSDCR3=1 D PAUSE Q
"RTN","PSSDRDOS",157,0)
 ..W !?16,PSSDCR4 D PAUSE
"RTN","PSSDRDOS",158,0)
 I PSSVVHQT D NGCK Q
"RTN","PSSDRDOS",159,0)
 ;
"RTN","PSSDRDOS",160,0)
 ;Write BSA and WT required data
"RTN","PSSDRDOS",161,0)
 ;If all Age ranges under BSA or WT, are the same do not list individual age ranges
"RTN","PSSDRDOS",162,0)
 ;When listing Age ranges under BSA or WT, then within that Yes or No, if 2 or more and ranges exist, and one or more has
"RTN","PSSDRDOS",163,0)
 ;a route associated with it, do not show the age range that does not have a route. Other than that, duplicates are not screened out.
"RTN","PSSDRDOS",164,0)
 ;
"RTN","PSSDRDOS",165,0)
 S (PSSDCRF3,PSSDCRF4)="" D
"RTN","PSSDRDOS",166,0)
 .S PSSDCRXX="" F  S PSSDCRXX=$O(PSSDCRBS(PSSDCRXX)) Q:PSSDCRXX=""!(PSSDCRF4)  D
"RTN","PSSDRDOS",167,0)
 ..S PSSDCRF1="" F  S PSSDCRF1=$O(PSSDCRBS(PSSDCRXX,PSSDCRF1)) Q:PSSDCRF1=""!(PSSDCRF4)  D
"RTN","PSSDRDOS",168,0)
 ...S PSSDCRF2="" F  S PSSDCRF2=$O(PSSDCRBS(PSSDCRXX,PSSDCRF1,PSSDCRF2)) Q:PSSDCRF2=""!(PSSDCRF4)  D
"RTN","PSSDRDOS",169,0)
 ....I PSSDCRF3="" S PSSDCRF3=PSSDCRF2 Q
"RTN","PSSDRDOS",170,0)
 ....I PSSDCRF3'=PSSDCRF2 S PSSDCRF4=1 Q
"RTN","PSSDRDOS",171,0)
 ....S PSSDCRF3=PSSDCRF2
"RTN","PSSDRDOS",172,0)
 W !,"BSA REQUIRED FOR DOSAGE CHECKS:" D
"RTN","PSSDRDOS",173,0)
 .I 'PSSDCRF4 W $S(PSSDCRF3="true":" YES",PSSDCRF3="false":" NO",1:"") D PAUSE Q
"RTN","PSSDRDOS",174,0)
 .;Resort by starting age for printing
"RTN","PSSDRDOS",175,0)
 .K PSSDCRJ1,PSSDCRJ2,PSSDCRJ3,PSSDCRJ4,PSSDCRJ5,PSSDCRJ6
"RTN","PSSDRDOS",176,0)
 .F PSSDCRJ1=1:1 Q:'$D(PSSDCRBS(PSSDCRJ1))  S PSSDCRJ2="" F  S PSSDCRJ2=$O(PSSDCRBS(PSSDCRJ1,PSSDCRJ2)) Q:PSSDCRJ2=""  D
"RTN","PSSDRDOS",177,0)
 ..S PSSDCRJ3="" F  S PSSDCRJ3=$O(PSSDCRBS(PSSDCRJ1,PSSDCRJ2,PSSDCRJ3)) Q:PSSDCRJ3=""  S PSSDCRJ4=$P(PSSDCRJ2,"-") D
"RTN","PSSDRDOS",178,0)
 ...S PSSDCRJ5(PSSDCRJ4,PSSDCRJ1,PSSDCRJ2,PSSDCRJ3)=PSSDCRBS(PSSDCRJ1,PSSDCRJ2,PSSDCRJ3)
"RTN","PSSDRDOS",179,0)
 .W !?2,"YES for Age in Days:" S PSSDCR3=0 D
"RTN","PSSDRDOS",180,0)
 ..S PSSDCRJ6="" F  S PSSDCRJ6=$O(PSSDCRJ5(PSSDCRJ6)) Q:PSSDCRJ6=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",181,0)
 ...S PSSDCRXX="" F  S PSSDCRXX=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX)) Q:PSSDCRXX=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",182,0)
 ....S PSSDCR4="" F  S PSSDCR4=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4)) Q:PSSDCR4=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",183,0)
 .....S PSSDCRF5="" F  S PSSDCRF5=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)) Q:PSSDCRF5=""!(PSSVVHQT)  D:PSSDCRF5="true"
"RTN","PSSDRDOS",184,0)
 ......S PSSDCRK1=PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)
"RTN","PSSDRDOS",185,0)
 ......W:PSSDCR3 !?22 W " "_PSSDCR4_"  " D  S PSSDCR3=1 D PAUSE Q
"RTN","PSSDRDOS",186,0)
 .......W "("_$S($P(PSSDCRK1,"^",2)="":"No Dose Type, ",1:$P(PSSDCRK1,"^",2)_", ")_$S($P(PSSDCRK1,"^")="":"No Dose Route",1:$P(PSSDCRK1,"^")_")")
"RTN","PSSDRDOS",187,0)
 .Q:PSSVVHQT
"RTN","PSSDRDOS",188,0)
 .W !?3,"NO for Age in Days:" S PSSDCR3=0 D
"RTN","PSSDRDOS",189,0)
 ..S PSSDCRJ6="" F  S PSSDCRJ6=$O(PSSDCRJ5(PSSDCRJ6)) Q:PSSDCRJ6=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",190,0)
 ...S PSSDCRXX="" F  S PSSDCRXX=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX)) Q:PSSDCRXX=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",191,0)
 ....S PSSDCR4="" F  S PSSDCR4=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4)) Q:PSSDCR4=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",192,0)
 .....S PSSDCRF5="" F  S PSSDCRF5=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)) Q:PSSDCRF5=""!(PSSVVHQT)  D:PSSDCRF5="false"
"RTN","PSSDRDOS",193,0)
 ......S PSSDCRK2=PSSDCRBS(PSSDCRXX,PSSDCR4,PSSDCRF5)
"RTN","PSSDRDOS",194,0)
 ......W:PSSDCR3 !?22 W " "_PSSDCR4_"  " D  S PSSDCR3=1 D PAUSE Q
"RTN","PSSDRDOS",195,0)
 .......W "("_$S($P(PSSDCRK2,"^",2)="":"No Dose Type, ",1:$P(PSSDCRK2,"^",2)_", ")_$S($P(PSSDCRK2,"^")="":"No Dose Route",1:$P(PSSDCRK2,"^")_")")
"RTN","PSSDRDOS",196,0)
 I PSSVVHQT D NGCK Q 
"RTN","PSSDRDOS",197,0)
 ;
"RTN","PSSDRDOS",198,0)
 S (PSSDCRF3,PSSDCRF4)="" D
"RTN","PSSDRDOS",199,0)
 .S PSSDCRXX="" F  S PSSDCRXX=$O(PSSDCRWT(PSSDCRXX)) Q:PSSDCRXX=""!(PSSDCRF4)  D
"RTN","PSSDRDOS",200,0)
 ..S PSSDCRF1="" F  S PSSDCRF1=$O(PSSDCRWT(PSSDCRXX,PSSDCRF1)) Q:PSSDCRF1=""!(PSSDCRF4)  D
"RTN","PSSDRDOS",201,0)
 ...S PSSDCRF2="" F  S PSSDCRF2=$O(PSSDCRWT(PSSDCRXX,PSSDCRF1,PSSDCRF2)) Q:PSSDCRF2=""!(PSSDCRF4)  D
"RTN","PSSDRDOS",202,0)
 ....I PSSDCRF3="" S PSSDCRF3=PSSDCRF2 Q
"RTN","PSSDRDOS",203,0)
 ....I PSSDCRF3'=PSSDCRF2 S PSSDCRF4=1 Q
"RTN","PSSDRDOS",204,0)
 ....S PSSDCRF3=PSSDCRF2
"RTN","PSSDRDOS",205,0)
 W !,"WEIGHT REQUIRED FOR DOSAGE CHECKS:" D 
"RTN","PSSDRDOS",206,0)
 .I 'PSSDCRF4 W $S(PSSDCRF3="true":" YES",PSSDCRF3="false":" NO",1:"") D PAUSE Q
"RTN","PSSDRDOS",207,0)
 .;Resort by starting age for printing
"RTN","PSSDRDOS",208,0)
 .K PSSDCRJ1,PSSDCRJ2,PSSDCRJ3,PSSDCRJ4,PSSDCRJ5,PSSDCRJ6
"RTN","PSSDRDOS",209,0)
 .F PSSDCRJ1=1:1 Q:'$D(PSSDCRWT(PSSDCRJ1))  S PSSDCRJ2="" F  S PSSDCRJ2=$O(PSSDCRWT(PSSDCRJ1,PSSDCRJ2)) Q:PSSDCRJ2=""  D
"RTN","PSSDRDOS",210,0)
 ..S PSSDCRJ3="" F  S PSSDCRJ3=$O(PSSDCRWT(PSSDCRJ1,PSSDCRJ2,PSSDCRJ3)) Q:PSSDCRJ3=""  S PSSDCRJ4=$P(PSSDCRJ2,"-") D
"RTN","PSSDRDOS",211,0)
 ...S PSSDCRJ5(PSSDCRJ4,PSSDCRJ1,PSSDCRJ2,PSSDCRJ3)=PSSDCRWT(PSSDCRJ1,PSSDCRJ2,PSSDCRJ3)
"RTN","PSSDRDOS",212,0)
 .W !?2,"YES for Age in Days:" S PSSDCR3=0 D
"RTN","PSSDRDOS",213,0)
  ..S PSSDCRJ6="" F  S PSSDCRJ6=$O(PSSDCRJ5(PSSDCRJ6)) Q:PSSDCRJ6=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",214,0)
 ...S PSSDCRXX="" F  S PSSDCRXX=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX)) Q:PSSDCRXX=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",215,0)
 ....S PSSDCR4="" F  S PSSDCR4=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4)) Q:PSSDCR4=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",216,0)
 .....S PSSDCRF5="" F  S PSSDCRF5=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)) Q:PSSDCRF5=""!(PSSVVHQT)  D:PSSDCRF5="true"
"RTN","PSSDRDOS",217,0)
 ......S PSSDCRK1=PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)
"RTN","PSSDRDOS",218,0)
 ......W:PSSDCR3 !?22 W " "_PSSDCR4_"  " D  S PSSDCR3=1 D PAUSE Q
"RTN","PSSDRDOS",219,0)
 .......W "("_$S($P(PSSDCRK1,"^",2)="":"No Dose Type, ",1:$P(PSSDCRK1,"^",2)_", ")_$S($P(PSSDCRK1,"^")="":"No Dose Route",1:$P(PSSDCRK1,"^")_")")
"RTN","PSSDRDOS",220,0)
 .Q:PSSVVHQT
"RTN","PSSDRDOS",221,0)
 .W !?3,"NO for Age in Days:" S PSSDCR3=0 D
"RTN","PSSDRDOS",222,0)
 ..S PSSDCRJ6="" F  S PSSDCRJ6=$O(PSSDCRJ5(PSSDCRJ6)) Q:PSSDCRJ6=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",223,0)
 ...S PSSDCRXX="" F  S PSSDCRXX=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX)) Q:PSSDCRXX=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",224,0)
 ....S PSSDCR4="" F  S PSSDCR4=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4)) Q:PSSDCR4=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",225,0)
 .....S PSSDCRF5="" F  S PSSDCRF5=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)) Q:PSSDCRF5=""!(PSSVVHQT)  D:PSSDCRF5="false"
"RTN","PSSDRDOS",226,0)
 ......S PSSDCRK2=PSSDCRBS(PSSDCRXX,PSSDCR4,PSSDCRF5)
"RTN","PSSDRDOS",227,0)
 ......W:PSSDCR3 !?22 W " "_PSSDCR4_"  " D  S PSSDCR3=1 D PAUSE Q
"RTN","PSSDRDOS",228,0)
 .......W "("_$S($P(PSSDCRK2,"^",2)="":"No Dose Type, ",1:$P(PSSDCRK2,"^",2)_", ")_$S($P(PSSDCRK2,"^")="":"No Dose Route",1:$P(PSSDCRK2,"^")_")")
"RTN","PSSDRDOS",229,0)
 ;
"RTN","PSSDRDOS",230,0)
 D NGCK
"RTN","PSSDRDOS",231,0)
 Q
"RTN","PSSDRDOS",232,0)
 ;
"RTN","PSSDRDOS",233,0)
 ;
"RTN","PSSDRDOS",234,0)
NGCK ;
"RTN","PSSDRDOS",235,0)
 K ^TMP($J,"PSSFDBDI")
"RTN","PSSDRDOS",236,0)
 Q
"RTN","PSSDRDOS",237,0)
 ;
"RTN","PSSDRDOS",238,0)
 ;
"RTN","PSSDRDOS",239,0)
DUP1() ;Screen out duplicaes, needed if Min/max records are added back
"RTN","PSSDRDOS",240,0)
 N PSSDCRD1,PSSDCRD2,PSSDCRDF,PSSDCRD4,PSSDCRG1,PSSDCRG2
"RTN","PSSDRDOS",241,0)
 S PSSDCRDF=0
"RTN","PSSDRDOS",242,0)
 S PSSDCRD1=$P(PSSDCRN3,"^"),PSSDCRD2=$P(PSSDCR2,"^",6),PSSDCRG1=$P(PSSDCR2,"^",4),PSSDCRG2=PSSDCRD2_"^"_PSSDCRG1
"RTN","PSSDRDOS",243,0)
 S PSSDCRD4="" F  S PSSDCRD4=$O(PSSDCRBS(PSSDCRD4)) Q:PSSDCRD4=""!(PSSDCRDF)  D
"RTN","PSSDRDOS",244,0)
 .I $G(PSSDCRBS(PSSDCRD4,PSSDCRCO,PSSDCRD1))=PSSDCRG2 S PSSDCRDF=1
"RTN","PSSDRDOS",245,0)
 Q PSSDCRDF
"RTN","PSSDRDOS",246,0)
 ;
"RTN","PSSDRDOS",247,0)
 ;
"RTN","PSSDRDOS",248,0)
DUP2() ;
"RTN","PSSDRDOS",249,0)
 N PSSDCRD5,PSSDCRD6,PSSDCRDG,PSSDCRD7,PSSDCRG4,PSSDCRG5
"RTN","PSSDRDOS",250,0)
 S PSSDCRDG=0
"RTN","PSSDRDOS",251,0)
 S PSSDCRD5=$P(PSSDCRN3,"^",2),PSSDCRD6=$P(PSSDCR2,"^",6),PSSDCRG4=$P(PSSDCR2,"^",4),PSSDCRG5=PSSDCRD6_"^"_PSSDCRG4
"RTN","PSSDRDOS",252,0)
 S PSSDCRD7="" F  S PSSDCRD7=$O(PSSDCRWT(PSSDCRD7)) Q:PSSDCRD7=""!(PSSDCRDG)  D
"RTN","PSSDRDOS",253,0)
 .I $G(PSSDCRWT(PSSDCRD7,PSSDCRCO,PSSDCRD5))=PSSDCRG5 S PSSDCRDG=1
"RTN","PSSDRDOS",254,0)
 Q PSSDCRDG
"RTN","PSSDSAPA")
0^5^B70156002
"RTN","PSSDSAPA",1,0)
PSSDSAPA ;BIR/RTR,TMK-Dose Check APIs routine (continued) ;27 Oct 2009  12:22 PM
"RTN","PSSDSAPA",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**151,160**;9/30/97;Build 76
"RTN","PSSDSAPA",3,0)
 ;
"RTN","PSSDSAPA",4,0)
IV(PSSADFOI) ;Return Additive Frequency default to CPRS, Forum DBIA 5504 ; 27 Oct 2009  12:16 PM
"RTN","PSSDSAPA",5,0)
 ;PSSADFOI = File 50.7 Internal Entry Number
"RTN","PSSDSAPA",6,0)
 N PSSADFRS,PSSADFIN,PSSADFLP,PSSADFXX,PSSADFHD,PSSADFLD,PSSADFNN,PSSADFER,PSSADFCT
"RTN","PSSDSAPA",7,0)
 S PSSADFRS="",(PSSADFXX,PSSADFCT)=0
"RTN","PSSDSAPA",8,0)
 I '$G(PSSADFOI) Q PSSADFRS
"RTN","PSSDSAPA",9,0)
 F PSSADFLP=0:0 S PSSADFLP=$O(^PS(52.6,"AOI",PSSADFOI,PSSADFLP)) Q:'PSSADFLP!(PSSADFXX)  D
"RTN","PSSDSAPA",10,0)
 . ; Get INACTIVATION DATE and ADDITIVE FREQUENCY
"RTN","PSSDSAPA",11,0)
 .S PSSADFNN=PSSADFLP_"," K PSSADFER,PSSADFLD
"RTN","PSSDSAPA",12,0)
 .D GETS^DIQ(52.6,PSSADFNN,"12;18","I","PSSADFLD","PSSADFER")
"RTN","PSSDSAPA",13,0)
 .I $G(PSSADFER("DIERR")) Q  ; Error(s) returned
"RTN","PSSDSAPA",14,0)
 .S PSSADFIN=$G(PSSADFLD(52.6,PSSADFNN,12,"I")),PSSADFHD=$G(PSSADFLD(52.6,PSSADFNN,18,"I"))
"RTN","PSSDSAPA",15,0)
 . ; Only consider if not inactive as of today
"RTN","PSSDSAPA",16,0)
 .I PSSADFIN,PSSADFIN'>DT Q
"RTN","PSSDSAPA",17,0)
 . ; If no frequency returned, set error flag, look no further
"RTN","PSSDSAPA",18,0)
 .I PSSADFHD="" S PSSADFXX=1 Q
"RTN","PSSDSAPA",19,0)
 . ; Save first non-null value found
"RTN","PSSDSAPA",20,0)
 .I 'PSSADFCT S PSSADFRS=PSSADFHD,PSSADFCT=1 Q
"RTN","PSSDSAPA",21,0)
 . ; Second or later match found and isn't the same value
"RTN","PSSDSAPA",22,0)
 . ;  as first match value, set error flag, quit
"RTN","PSSDSAPA",23,0)
 .I PSSADFHD'=PSSADFRS S PSSADFXX=1
"RTN","PSSDSAPA",24,0)
 ; If error found, return null
"RTN","PSSDSAPA",25,0)
 I PSSADFXX S PSSADFRS=""
"RTN","PSSDSAPA",26,0)
 Q PSSADFRS
"RTN","PSSDSAPA",27,0)
 ;
"RTN","PSSDSAPA",28,0)
 ;
"RTN","PSSDSAPA",29,0)
RESET ;Reset array to set flag to show General Dosing Guideline for last unique combination of Drug and Route
"RTN","PSSDSAPA",30,0)
 N PSSDBCD1,PSSDBCD2,PSSDBCD3,PSSDBCD4
"RTN","PSSDSAPA",31,0)
 S PSSDBCD1="" F  S PSSDBCD1=$O(PSSDBCDA(PSSDBCD1)) Q:PSSDBCD1=""  D
"RTN","PSSDSAPA",32,0)
 .S PSSDBCD2="" F  S PSSDBCD2=$O(PSSDBCDA(PSSDBCD1,PSSDBCD2)) Q:PSSDBCD2=""  D
"RTN","PSSDSAPA",33,0)
 ..S PSSDBCD3=PSSDBCDA(PSSDBCD1,PSSDBCD2)
"RTN","PSSDSAPA",34,0)
 ..I PSSDBCD3'="" S PSSDBCDP(PSSDBRLS,PSSDBCD3)=""
"RTN","PSSDSAPA",35,0)
 Q
"RTN","PSSDSAPA",36,0)
 ;
"RTN","PSSDSAPA",37,0)
 ;
"RTN","PSSDSAPA",38,0)
SGEN ;General Dosing Guidelines for last dosing sequence of a complex order when there is an error
"RTN","PSSDSAPA",39,0)
 N PSSDBCD5,PSSDBCD6,PSSDBCD7,PSSDBCD8
"RTN","PSSDSAPA",40,0)
 S PSSDBCD6=1
"RTN","PSSDSAPA",41,0)
 S PSSDBCD5="" F  S PSSDBCD5=$O(PSSDBCDP(PSSDWE5,PSSDBCD5)) Q:PSSDBCD5=""  D SGENA
"RTN","PSSDSAPA",42,0)
 Q
"RTN","PSSDSAPA",43,0)
 ;
"RTN","PSSDSAPA",44,0)
 ;
"RTN","PSSDSAPA",45,0)
SGENA ;
"RTN","PSSDSAPA",46,0)
 S PSSDBCD7=$P($G(PSSDBCAR(PSSDBCD5)),"^",2),PSSDBCD8=$P($G(PSSDBCAR(PSSDBCD5)),"^",3)
"RTN","PSSDSAPA",47,0)
 I PSSDBCD7=""!(PSSDBCD8="") Q 
"RTN","PSSDSAPA",48,0)
 I $G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDBCD5,PSSDBCD7,"GENERAL","MESSAGE",PSSDBCD8))'="" D  S PSSDBCD6=PSSDBCD6+1 Q 
"RTN","PSSDSAPA",49,0)
 .I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWE5,PSSDBCD7,"3_GENERAL","MESSAGE",PSSDBCD8,PSSDBCD6)=^TMP($J,PSSDBASE,"OUT","DOSE",PSSDBCD5,PSSDBCD7,"GENERAL","MESSAGE",PSSDBCD8)
"RTN","PSSDSAPA",50,0)
 .I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"MESSAGE","3_GENERAL",PSSDBCD8,PSSDBCD6)=^TMP($J,PSSDBASE,"OUT","DOSE",PSSDBCD5,PSSDBCD7,"GENERAL","MESSAGE",PSSDBCD8)
"RTN","PSSDSAPA",51,0)
 I PSSDBASA D
"RTN","PSSDSAPA",52,0)
 .S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWE5,PSSDBCD7,"3_GENERAL","MESSAGE",PSSDBCD8,PSSDBCD6)="General dosing range for "_$P($G(PSSDBCAR(PSSDBCD5)),"^",2)_" ("_$P($G(PSSDBCAR(PSSDBCD5)),"^",9)_") could not be obtained from vendor database."
"RTN","PSSDSAPA",53,0)
 I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"MESSAGE","3_GENERAL",PSSDBCD8,PSSDBCD6)="General dosing range for "_$P($G(PSSDBCAR(PSSDBCD5)),"^",2)_" ("_$P($G(PSSDBCAR(PSSDBCD5)),"^",9)_") could not be obtained from vendor database."
"RTN","PSSDSAPA",54,0)
 S PSSDBCD6=PSSDBCD6+1
"RTN","PSSDSAPA",55,0)
 Q
"RTN","PSSDSAPA",56,0)
 ;
"RTN","PSSDSAPA",57,0)
 ;
"RTN","PSSDSAPA",58,0)
REM ;Remove all Output globals except Single Dose Warning
"RTN","PSSDSAPA",59,0)
 N PSSRMV1,PSSRMV2,PSSRMV3,PSSRMV4,PSSRMV5,PSSRMV6,PSSRMV7,PSSRMV8,PSSRMV9
"RTN","PSSDSAPA",60,0)
 I PSSDBASA D
"RTN","PSSDSAPA",61,0)
 .K ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE")
"RTN","PSSDSAPA",62,0)
 .S PSSRMV5="" F  S PSSRMV5=$O(^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSRMV5)) Q:PSSRMV5=""  D
"RTN","PSSDSAPA",63,0)
 ..I $P(PSSDBCAR(PSSRMV5),"^",14) K ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSRMV5) Q
"RTN","PSSDSAPA",64,0)
 ..S PSSRMV6="" F  S PSSRMV6=$O(^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSRMV5,PSSRMV6)) Q:PSSRMV6=""  D
"RTN","PSSDSAPA",65,0)
 ...I $G(^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSRMV5,PSSRMV6,"WARN"))="Warning",'$P(PSSRMV5,";",5) K ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSRMV5,PSSRMV6,"WARN") S $P(PSSDBCAR(PSSRMV5),"^",13)="" Q
"RTN","PSSDSAPA",66,0)
 ...K ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSRMV5,PSSRMV6,"MSG")
"RTN","PSSDSAPA",67,0)
 ...K ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSRMV5,PSSRMV6,"TEXT")
"RTN","PSSDSAPA",68,0)
 .S PSSRMV3="" F  S PSSRMV3=$O(^TMP($J,PSSDBASF,"OUT","DOSE",PSSRMV3)) Q:PSSRMV3=""  D:PSSRMV3'="ERROR"
"RTN","PSSDSAPA",69,0)
 ..I $P(PSSDBCAR(PSSRMV3),"^",14) K ^TMP($J,PSSDBASF,"OUT","DOSE",PSSRMV3) Q
"RTN","PSSDSAPA",70,0)
 ..S PSSRMV4="" F  S PSSRMV4=$O(^TMP($J,PSSDBASF,"OUT","DOSE",PSSRMV3,PSSRMV4)) Q:PSSRMV4=""  D
"RTN","PSSDSAPA",71,0)
 ...K ^TMP($J,PSSDBASF,"OUT","DOSE",PSSRMV3,PSSRMV4,"2_RANGE")
"RTN","PSSDSAPA",72,0)
 ...K ^TMP($J,PSSDBASF,"OUT","DOSE",PSSRMV3,PSSRMV4,"3_GENERAL")
"RTN","PSSDSAPA",73,0)
 ; 
"RTN","PSSDSAPA",74,0)
 I PSSDBASB D
"RTN","PSSDSAPA",75,0)
 .S PSSRMV1="" F  S PSSRMV1=$O(^TMP($J,PSSDBASG,"OUT",PSSRMV1)) Q:PSSRMV1=""  D
"RTN","PSSDSAPA",76,0)
 ..S PSSRMV2="" F  S PSSRMV2=$O(^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2)) Q:PSSRMV2=""  D
"RTN","PSSDSAPA",77,0)
 ...I $P(PSSDBCAR(PSSRMV2),"^",14) K ^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2) Q
"RTN","PSSDSAPA",78,0)
 ...;K ^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"EXCEPTIONS") ;2.0 change to show specific exceptions
"RTN","PSSDSAPA",79,0)
 ...;K ^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"ERROR")
"RTN","PSSDSAPA",80,0)
 ...S PSSRMV7="" F  S PSSRMV7=$O(^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"ERROR",PSSRMV7)) Q:PSSRMV7=""  D
"RTN","PSSDSAPA",81,0)
 ....I $G(^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"ERROR",PSSRMV7,"WARN"))="Warning",'$P(PSSRMV2,";",5) K ^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"ERROR",PSSRMV7,"WARN") S $P(PSSDBCAR(PSSRMV2),"^",13)="" Q
"RTN","PSSDSAPA",82,0)
 ....Q  ;2.0 Change to now show specific errors
"RTN","PSSDSAPA",83,0)
 ....K ^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"ERROR",PSSRMV7,"MSG")
"RTN","PSSDSAPA",84,0)
 ....K ^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"ERROR",PSSRMV7,"TEXT")
"RTN","PSSDSAPA",85,0)
 ...K ^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"MESSAGE","2_RANGE")
"RTN","PSSDSAPA",86,0)
 ...K ^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"MESSAGE","3_GENERAL")
"RTN","PSSDSAPA",87,0)
 ;
"RTN","PSSDSAPA",88,0)
 S PSSRMV8="" F  S PSSRMV8=$O(PSSDBCAR(PSSRMV8)) Q:PSSRMV8=""  I $P(PSSDBCAR(PSSRMV8),"^",13),$D(PSSDSDPL(PSSRMV8)),'$P(PSSDBCAR(PSSRMV8),"^",14) D
"RTN","PSSDSAPA",89,0)
 .I $G(PSSENHK(PSSRMV8)),$G(PSSENHKZ(PSSRMV8)) Q
"RTN","PSSDSAPA",90,0)
 .I PSSDBASA D
"RTN","PSSDSAPA",91,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSRMV8,1)="Maximum Single Dose Check could not be done for Drug: "_$P(PSSDBCAR(PSSRMV8),"^",2)_$S($P(PSSDBCAR(PSSRMV8),"^",16):" (Dose="_$G(PSSDSDPL(PSSRMV8))_")",1:"")
"RTN","PSSDSAPA",92,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSRMV8,1)=^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSRMV8,1)_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSAPA",93,0)
 .I PSSDBASB,$P(PSSDBCAR(PSSRMV8),"^",17) D
"RTN","PSSDSAPA",94,0)
 ..S ^TMP($J,PSSDBASG,"OUT",$P(PSSRMV8,";",4),PSSRMV8,"EXCEPTIONS",1)="Maximum Single Dose Check could not be performed for Drug: "_$P(PSSDBCAR(PSSRMV8),"^",2)_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSAPA",95,0)
 Q
"RTN","PSSDSAPA",96,0)
 ;
"RTN","PSSDSAPA",97,0)
 ;
"RTN","PSSDSAPA",98,0)
SQX(PSSQBSS) ;returns Dosage check exclusion information based on Schedule
"RTN","PSSDSAPA",99,0)
 N PSSQBA1,PSSQBA2,PSSQBA3,PSSQBA4,PSSQBA5,PSSQBA6,PSSQBARS,PSSQBFLG,PSSQBSTM,PSSQBSTP
"RTN","PSSDSAPA",100,0)
 S PSSQBARS="",PSSQBFLG=0
"RTN","PSSDSAPA",101,0)
 I $G(PSSQBSS)="" Q PSSQBARS
"RTN","PSSDSAPA",102,0)
 S PSSQBSTM=PSSQBSS D SQXLP I PSSQBFLG Q PSSQBARS
"RTN","PSSDSAPA",103,0)
 S PSSQBA3=$L(PSSQBSS) I PSSQBA3>4 S PSSQBA4=$E(PSSQBSS,(PSSQBA3-3),PSSQBA3) S PSSQBA4=$$UP^XLFSTR(PSSQBA4) I PSSQBA4=" PRN" S PSSQBSTM=$E(PSSQBSS,1,(PSSQBA3-4)) D SQXLP I PSSQBFLG Q PSSQBARS
"RTN","PSSDSAPA",104,0)
 I PSSQBSS'["@" Q PSSQBARS
"RTN","PSSDSAPA",105,0)
 S PSSQBA5=$L(PSSQBSS),PSSQBA6=$F(PSSQBSS,"@") I PSSQBA6>PSSQBA5 Q PSSQBARS
"RTN","PSSDSAPA",106,0)
 S (PSSQBSTM,PSSQBSTP)=$E(PSSQBSS,PSSQBA6,PSSQBA5) D SQXLP I PSSQBFLG Q PSSQBARS
"RTN","PSSDSAPA",107,0)
 S PSSQBA3=$L(PSSQBSTP) I PSSQBA3>4 S PSSQBA4=$E(PSSQBSTP,(PSSQBA3-3),PSSQBA3) S PSSQBA4=$$UP^XLFSTR(PSSQBA4) I PSSQBA4=" PRN" S PSSQBSTM=$E(PSSQBSTP,1,(PSSQBA3-4)) D SQXLP
"RTN","PSSDSAPA",108,0)
 Q PSSQBARS
"RTN","PSSDSAPA",109,0)
 ;
"RTN","PSSDSAPA",110,0)
 ;
"RTN","PSSDSAPA",111,0)
SQXLP ;
"RTN","PSSDSAPA",112,0)
 F PSSQBA1=0:0 S PSSQBA1=$O(^PS(51.1,"APPSJ",PSSQBSTM,PSSQBA1)) Q:'PSSQBA1!(PSSQBFLG)  D
"RTN","PSSDSAPA",113,0)
 .S PSSQBA2=$G(^PS(51.1,PSSQBA1,0)) I PSSQBA2="" Q
"RTN","PSSDSAPA",114,0)
 .S PSSQBARS=$P(PSSQBA2,"^",9)_"^"_$P(PSSQBA2,"^",10),PSSQBFLG=1
"RTN","PSSDSAPA",115,0)
 Q
"RTN","PSSDSAPA",116,0)
 ;
"RTN","PSSDSAPA",117,0)
 ;
"RTN","PSSDSAPA",118,0)
SXCL ;Set exclusion fields in PSSDBCAR array
"RTN","PSSDSAPA",119,0)
 N PSSQBGR,PSSQBGT
"RTN","PSSDSAPA",120,0)
 S PSSQBGR=$G(PSSDBFRC(PSSDBKLP,"SCHEDULE")) I PSSQBGR="" Q
"RTN","PSSDSAPA",121,0)
 S PSSQBGT=$$SQX(PSSQBGR)
"RTN","PSSDSAPA",122,0)
 S:$P(PSSQBGT,"^") $P(PSSDBCAR(PSSDBKLP),"^",14)=1
"RTN","PSSDSAPA",123,0)
 S:$P(PSSQBGT,"^",2) $P(PSSDBCAR(PSSDBKLP),"^",15)=1
"RTN","PSSDSAPA",124,0)
 Q
"RTN","PSSDSAPA",125,0)
 ;
"RTN","PSSDSAPA",126,0)
 ;
"RTN","PSSDSAPA",127,0)
NOTS ;Set flag for not screened
"RTN","PSSDSAPA",128,0)
 N PSSNSCRE,PSSNSCRU
"RTN","PSSDSAPA",129,0)
 S PSSNSCRE=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"SEV"))
"RTN","PSSDSAPA",130,0)
 S PSSNSCRU=$$UP^XLFSTR(PSSNSCRE)
"RTN","PSSDSAPA",131,0)
 I PSSNSCRU["NOTSCREENED" S $P(PSSDBCAR(PSSDWLP),"^",13)=1
"RTN","PSSDSAPA",132,0)
 Q
"RTN","PSSDSAPA",133,0)
 ;
"RTN","PSSDSAPA",134,0)
 ;
"RTN","PSSDSAPA",135,0)
SOL(PSSLGTOI) ;
"RTN","PSSDSAPA",136,0)
 ;Return 1 for premix solution
"RTN","PSSDSAPA",137,0)
 ;Return 0 for solution not marked for premix
"RTN","PSSDSAPA",138,0)
 ;The second piece is 0 if there is no active solution found
"RTN","PSSDSAPA",139,0)
 ;If no active solution found and at least 1 premix then consider it's a premix
"RTN","PSSDSAPA",140,0)
 NEW PSSLGT1,PSSLGT2,PSSLGT3,PSSSOL,PSSPRE
"RTN","PSSDSAPA",141,0)
 I '+$G(PSSLGTOI) Q 0_U_0
"RTN","PSSDSAPA",142,0)
 S PSSINADT=$P($G(^PS(50.7,PSSLGTOI,0)),U,4)
"RTN","PSSDSAPA",143,0)
 I PSSINADT,(PSSINADT'>DT) Q 0_U_0
"RTN","PSSDSAPA",144,0)
 S PSSLGT2=0,PSSSOL=0,PSSPRE=0
"RTN","PSSDSAPA",145,0)
 F PSSLGT1=0:0 S PSSLGT1=$O(^PS(52.7,"AOI",PSSLGTOI,PSSLGT1)) Q:'PSSLGT1!(PSSLGT2)  D
"RTN","PSSDSAPA",146,0)
 .I $P($G(^PS(52.7,PSSLGT1,0)),"^",14)=1 S PSSPRE=1
"RTN","PSSDSAPA",147,0)
 .S PSSLGT3=$P($G(^PS(52.7,PSSLGT1,"I")),"^") I PSSLGT3,(PSSLGT3'>DT) Q
"RTN","PSSDSAPA",148,0)
 .S:PSSPRE PSSLGT2=1
"RTN","PSSDSAPA",149,0)
 .S PSSSOL=1
"RTN","PSSDSAPA",150,0)
 I 'PSSSOL,PSSPRE Q PSSPRE_U_PSSSOL
"RTN","PSSDSAPA",151,0)
 Q PSSLGT2_U_PSSSOL
"RTN","PSSDSAPA",152,0)
 ;
"RTN","PSSDSAPA",153,0)
 ;
"RTN","PSSDSAPA",154,0)
IPM(PSSLGTOI) ;
"RTN","PSSDSAPA",155,0)
 ;Return 1 if it's a UD, additive, or a premix solution
"RTN","PSSDSAPA",156,0)
 NEW PSSINADT,PSSIEN,PSSUD,PSSAD,PSSSOL
"RTN","PSSDSAPA",157,0)
 I '+$G(PSSLGTOI) Q 0
"RTN","PSSDSAPA",158,0)
 S (PSSUD,PSSAD,PSSSOL)=0
"RTN","PSSDSAPA",159,0)
 S PSSINADT=$P($G(^PS(50.7,PSSLGTOI,0)),U,4)
"RTN","PSSDSAPA",160,0)
 I PSSINADT,(PSSINADT'>DT) Q 0
"RTN","PSSDSAPA",161,0)
 F PSSIEN=0:0 S PSSIEN=$O(^PSDRUG("ASP",PSSLGTOI,PSSIEN)) Q:'PSSIEN!PSSUD  D
"RTN","PSSDSAPA",162,0)
 . S PSSINADT=$P($G(^PSDRUG(PSSIEN,"I")),U)
"RTN","PSSDSAPA",163,0)
 . I PSSINADT,(PSSINADT'>DT) Q
"RTN","PSSDSAPA",164,0)
 . I $P($G(^PSDRUG(PSSIEN,2)),U,3)["U" S PSSUD=1 Q
"RTN","PSSDSAPA",165,0)
 I PSSUD Q 1
"RTN","PSSDSAPA",166,0)
 F PSSIEN=0:0 S PSSIEN=$O(^PS(52.6,"AOI",PSSLGTOI,PSSIEN)) Q:'PSSIEN!PSSAD  D
"RTN","PSSDSAPA",167,0)
 . S PSSAD=1 Q
"RTN","PSSDSAPA",168,0)
 I PSSAD Q 1
"RTN","PSSDSAPA",169,0)
 S PSSSOL=$$SOL(PSSLGTOI)
"RTN","PSSDSAPA",170,0)
 ;If the is an active solution, $P(PSSSOL,U) is 1 if it's marked for premix
"RTN","PSSDSAPA",171,0)
 Q $P(PSSSOL,U)
"RTN","PSSDSAPD")
0^6^B180554732
"RTN","PSSDSAPD",1,0)
PSSDSAPD ;BIR/RTR-Main Dose Check API ;09/16/08
"RTN","PSSDSAPD",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,160**;9/30/97;Build 76
"RTN","PSSDSAPD",3,0)
 ;
"RTN","PSSDSAPD",4,0)
 ;Dose Check API
"RTN","PSSDSAPD",5,0)
 ;
"RTN","PSSDSAPD",6,0)
 ;Input
"RTN","PSSDSAPD",7,0)
 ;PSSDBASE = Name of subscript
"RTN","PSSDSAPD",8,0)
 ;PSSDBDFN = Patient Internal Entry Number
"RTN","PSSDSAPD",9,0)
 ;PSSDBDS  = Data to use to build actual Input data, for pieces not sent in PSSDBFDB array
"RTN","PSSDSAPD",10,0)
 ;PSSDBFDB = Array where if the node exists, just set that data (even if null) directly into the corresponding API piece
"RTN","PSSDSAPD",11,0)
 ;
"RTN","PSSDSAPD",12,0)
DOSE(PSSDBASX,PSSDBDFN,PSSDBDS,PSSDBFDB) ;
"RTN","PSSDSAPD",13,0)
 I $G(PSSDBASX(1))="" Q
"RTN","PSSDSAPD",14,0)
 N PSSDBASE,PSSDBASF,PSSDBASG,PSSDBASA,PSSDBASB S PSSDBASE=PSSDBASX(1),PSSDBASF=$G(PSSDBASX(2)),PSSDBASG=$G(PSSDBASX(3)) K ^TMP($J,PSSDBASE) K ^TMP($J,"PSSDOSGL") K ^TMP($J,"PSSCNX")
"RTN","PSSDSAPD",15,0)
 S PSSDBASA=0 I $G(PSSDBASF)'="" K ^TMP($J,PSSDBASF) S PSSDBASA=1
"RTN","PSSDSAPD",16,0)
 S PSSDBASB=0 I $G(PSSDBASG)'="" K ^TMP($J,PSSDBASG) S PSSDBASB=1
"RTN","PSSDSAPD",17,0)
 S ^TMP($J,PSSDBASE,"IN","PING")="" D IN^PSSHRQ2(PSSDBASE)
"RTN","PSSDSAPD",18,0)
 I $P($G(^TMP($J,PSSDBASE,"OUT",0)),"^")=-1 D DOWN^PSSDSAPK Q
"RTN","PSSDSAPD",19,0)
 K ^TMP($J,PSSDBASE)
"RTN","PSSDSAPD",20,0)
 N PSSDBLP,PSSDBND1,PSSDBND3,PSSDBAR,PSSDBFST,PSSDBFLG,PSSDBCOT,PSSDBCAR,PSSDBFRC,PSSDBFRB,PSSDBIFL,PSSDBIFG,PSSDBCAX,PSSDBCAZ,PSSDBFTX,PSSDBADJ,PSSDBCDP,PSSDSDPL,PSSDSWHE,PSSENHK,PSSENHKZ,PSSDSIVF
"RTN","PSSDSAPD",21,0)
 I +$G(PSSDBDFN)'>0 Q
"RTN","PSSDSAPD",22,0)
 S PSSDBFLG=0 S PSSDSWHE=$S($E($G(PSSDBASE),1,2)="OR":1,1:0)
"RTN","PSSDSAPD",23,0)
 F PSSDBLP=0:0 S PSSDBLP=$O(PSSDBFDB(PSSDBLP)) Q:'PSSDBLP  D
"RTN","PSSDSAPD",24,0)
 .K PSSDBAR,PSSDBND1,PSSDBND3 S (PSSDBIFL,PSSDBIFG,PSSDSIVF)=0
"RTN","PSSDSAPD",25,0)
 .I $G(PSSDBFDB(PSSDBLP,"RX_NUM"))="" Q
"RTN","PSSDSAPD",26,0)
 .I $G(PSSDBFDB(PSSDBLP,"DRUG_NM"))="" Q
"RTN","PSSDSAPD",27,0)
 .S PSSDBFDB("OI")=$S($G(PSSDBFDB(PSSDBLP,"OI")):$G(PSSDBFDB(PSSDBLP,"OI")),1:$G(PSSDBFDB("OI"))) I $G(PSSDBFDB(PSSDBLP,"DRUG_IEN"))'>0,$G(PSSDBFDB("OI"))'>0 Q
"RTN","PSSDSAPD",28,0)
 .I $G(PSSDBFDB(PSSDBLP,"DRUG_IEN"))>0,$$EXMT^PSSDSAPI($G(PSSDBFDB(PSSDBLP,"DRUG_IEN"))) Q
"RTN","PSSDSAPD",29,0)
 .D INERR^PSSDSAPM I $G(PSSDBFDB(PSSDBLP,"DRUG_IEN"))'>0 D FDRUG^PSSDSAPM
"RTN","PSSDSAPD",30,0)
 .I PSSDBIFL,'PSSDBIFG D NXDRUG^PSSDSAPM Q
"RTN","PSSDSAPD",31,0)
 .D NDINFO
"RTN","PSSDSAPD",32,0)
 .I $G(PSSDBND1),$G(PSSDBND3) D
"RTN","PSSDSAPD",33,0)
 ..S PSSDBAR("GCN")=$P($$PROD0^PSNAPIS(PSSDBND1,PSSDBND3),"^",7)
"RTN","PSSDSAPD",34,0)
 ..S PSSDBAR("VUID")=$$GETVUID^XTID(50.68,,+PSSDBND3_",")
"RTN","PSSDSAPD",35,0)
 .S PSSDBAR("NAME")=$G(PSSDBFDB(PSSDBLP,"DRUG_NM"))
"RTN","PSSDSAPD",36,0)
 .D AMT I $G(PSSDBAR("AMN"))'="",$L(PSSDBAR("AMN"))>1,$E(PSSDBAR("AMN"),1)="0" S PSSDBAR("AMN")=$E(PSSDBAR("AMN"),2,$L(PSSDBAR("AMN")))
"RTN","PSSDSAPD",37,0)
 .D DTYPE
"RTN","PSSDSAPD",38,0)
 .S PSSDBAR("DSE")=$S($D(PSSDBFDB(PSSDBLP,"DOSE_RATE")):$G(PSSDBFDB(PSSDBLP,"DOSE_RATE")),1:"DAY")
"RTN","PSSDSAPD",39,0)
 .D RTE
"RTN","PSSDSAPD",40,0)
 .D SCHD
"RTN","PSSDSAPD",41,0)
 .D DURR
"RTN","PSSDSAPD",42,0)
 .D DURRAT
"RTN","PSSDSAPD",43,0)
 .S PSSDBAR("SPFC")="" S:$G(PSSDBFDB(PSSDBLP,"ENH")) PSSENHK(PSSDBFDB(PSSDBLP,"RX_NUM"))=1
"RTN","PSSDSAPD",44,0)
 .S PSSDBFST=$G(PSSDBAR("GCN"))_"^"_$S($P($G(PSSDBAR("VUID")),"^")'=0:$G(PSSDBAR("VUID")),1:"")_"^"_$S('PSSDBIFL:PSSDBFDB(PSSDBLP,"DRUG_IEN"),PSSDBIFL&(PSSDBIFG):PSSDBIFG,1:"")_"^"_PSSDBAR("NAME")
"RTN","PSSDSAPD",45,0)
 .S PSSDBFLG=1
"RTN","PSSDSAPD",46,0)
 .S ^TMP($J,PSSDBASE,"IN","PROSPECTIVE",PSSDBFDB(PSSDBLP,"RX_NUM"))=PSSDBFST
"RTN","PSSDSAPD",47,0)
 .S ^TMP($J,PSSDBASE,"IN","DOSE",PSSDBFDB(PSSDBLP,"RX_NUM"))=PSSDBFST_"^"_$G(PSSDBAR("AMN"))_"^"_$G(PSSDBAR("UNIT"))_"^"_PSSDBAR("DSE")_"^"_PSSDBAR("FREQ")_"^"_PSSDBAR("DUR")_"^"_PSSDBAR("DRR")_"^"_PSSDBAR("RT")_"^"_PSSDBAR("TYPE")
"RTN","PSSDSAPD",48,0)
 .S ^TMP($J,PSSDBASE,"IN","DOSE",PSSDBFDB(PSSDBLP,"RX_NUM"))=^TMP($J,PSSDBASE,"IN","DOSE",PSSDBFDB(PSSDBLP,"RX_NUM"))_"^"_PSSDBAR("SPFC")_"^"_$$DFM^PSSDSEXC
"RTN","PSSDSAPD",49,0)
 .S PSSDBFRC(PSSDBFDB(PSSDBLP,"RX_NUM"),"CONJ")=$G(PSSDBDS(PSSDBLP,"CONJ")) S PSSDBFRC(PSSDBFDB(PSSDBLP,"RX_NUM"),"SCHEDULE")=$G(PSSDBDS(PSSDBLP,"SCHEDULE"))
"RTN","PSSDSAPD",50,0)
 .I $G(PSSDBDS(PSSDBLP,"DRATE"))'="" I PSSDBDS(PSSDBLP,"DRATE")?.N!(PSSDBDS(PSSDBLP,"DRATE")?.N1".".N) S PSSDBDS(PSSDBLP,"DRATE")=PSSDBDS(PSSDBLP,"DRATE")_"D"
"RTN","PSSDSAPD",51,0)
 .S PSSDBFRB(PSSDBFDB(PSSDBLP,"RX_NUM"),"DRATE")=$G(PSSDBDS(PSSDBLP,"DRATE")) D ADJU^PSSDSEXC
"RTN","PSSDSAPD",52,0)
 .D INFUE^PSSDSAPM
"RTN","PSSDSAPD",53,0)
 .D FRQE^PSSDSAPM
"RTN","PSSDSAPD",54,0)
 .S ^TMP($J,"PSSCNX","IN","DOSE",PSSDBLP,PSSDBFDB(PSSDBLP,"RX_NUM"))=^TMP($J,PSSDBASE,"IN","DOSE",PSSDBFDB(PSSDBLP,"RX_NUM"))
"RTN","PSSDSAPD",55,0)
 ;
"RTN","PSSDSAPD",56,0)
 ;
"RTN","PSSDSAPD",57,0)
 ;I 'PSSDBFLG Q
"RTN","PSSDSAPD",58,0)
 D COMP ;Set up complex Doses
"RTN","PSSDSAPD",59,0)
 S ^TMP($J,PSSDBASE,"IN","IEN")=PSSDBDFN
"RTN","PSSDSAPD",60,0)
 S ^TMP($J,PSSDBASE,"IN","DOSE")=""
"RTN","PSSDSAPD",61,0)
 D PAT^PSSDSAPM K ^TMP($J,"PSSCNX")
"RTN","PSSDSAPD",62,0)
 N PSSDBDGO ; Only go to interface if you have at least one Dose Sequence that needs to go
"RTN","PSSDSAPD",63,0)
 S PSSDBDGO=0 I $D(^TMP($J,PSSDBASE,"IN","EXCEPTIONS")) S PSSDBDGO=1
"RTN","PSSDSAPD",64,0)
 D ERR ;Set up PSSDBCAX error array and default data
"RTN","PSSDSAPD",65,0)
 I PSSDBDGO D:$D(PSSDBFTX) FTX^PSSDSAPK D IN^PSSHRQ2(PSSDBASE) D:$D(PSSDBFTX) FTXRS^PSSDSAPK
"RTN","PSSDSAPD",66,0)
 I PSSDBASA!(PSSDBASB) D FMT^PSSDSEXC I $P($G(^TMP($J,PSSDBASE,"OUT",0)),"^")'=-1 D ADDCT^PSSDSAPM,REM^PSSDSAPA
"RTN","PSSDSAPD",67,0)
 Q
"RTN","PSSDSAPD",68,0)
 ;
"RTN","PSSDSAPD",69,0)
 ;
"RTN","PSSDSAPD",70,0)
AMT ;Set Dose Amount and Dose Unit
"RTN","PSSDSAPD",71,0)
 D DPL^PSSDSAPK
"RTN","PSSDSAPD",72,0)
 I $D(PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"NO_DRUG")) D MLTS^PSSDSAPM Q
"RTN","PSSDSAPD",73,0)
 N PSSDBUNT,PSSDBFAL,PSSDBXP,PSSDBNOD,PSSDBNT,PSSDSXTD,PSSDBUNA,PSSDBLPD,PSSDSLCL
"RTN","PSSDSAPD",74,0)
 S (PSSDBFAL,PSSDBLPD)=0
"RTN","PSSDSAPD",75,0)
 I 'PSSDBIFL,$D(PSSDBFDB(PSSDBLP,"DOSE_AMT")),$D(PSSDBFDB(PSSDBLP,"DOSE_UNIT")) S PSSDBAR("AMN")=PSSDBFDB(PSSDBLP,"DOSE_AMT"),PSSDBAR("UNIT")=PSSDBFDB(PSSDBLP,"DOSE_UNIT") D LDZ Q
"RTN","PSSDSAPD",76,0)
 I 'PSSDBIFL,$G(PSSDBDS(PSSDBLP,"DRG_AMT")),$G(PSSDBDS(PSSDBLP,"DRG_UNIT"))'="" D
"RTN","PSSDSAPD",77,0)
 .;For Drug Units like MG/ML, take first piece of"/"
"RTN","PSSDSAPD",78,0)
 .S PSSDBUNT=$S(PSSDBDS(PSSDBLP,"DRG_UNIT")["/":$P(PSSDBDS(PSSDBLP,"DRG_UNIT"),"/"),1:PSSDBDS(PSSDBLP,"DRG_UNIT"))
"RTN","PSSDSAPD",79,0)
 .S PSSDBUNT=$$UP^XLFSTR(PSSDBUNT)
"RTN","PSSDSAPD",80,0)
 .S PSSDBUNA=$$UNIT^PSSDSAPI(PSSDBUNT)
"RTN","PSSDSAPD",81,0)
 .I PSSDBUNA'="" S PSSDBAR("AMN")=PSSDBDS(PSSDBLP,"DRG_AMT"),PSSDBAR("UNIT")=PSSDBUNA,PSSDBFAL=1 D LDZ
"RTN","PSSDSAPD",82,0)
 I PSSDBFAL Q
"RTN","PSSDSAPD",83,0)
 ;"DOSE" Node should only come from CPRS, for selected Local Possible Dosage
"RTN","PSSDSAPD",84,0)
 S PSSDSLCL=$S($G(PSSDBDS(PSSDBLP,"DOSE"))'="":$P($G(PSSDBDS(PSSDBLP,"DOSE")),"&",5),1:$G(PSSDBDS(PSSDBLP,"DO")))
"RTN","PSSDSAPD",85,0)
 I PSSDBIFL D MLT^PSSDSAPM Q
"RTN","PSSDSAPD",86,0)
 I PSSDSLCL'="" D
"RTN","PSSDSAPD",87,0)
 .F PSSDBXP=0:0 S PSSDBXP=$O(^PSDRUG(PSSDBFDB(PSSDBLP,"DRUG_IEN"),"DOS2",PSSDBXP)) Q:'PSSDBXP!(PSSDBFAL)  D
"RTN","PSSDSAPD",88,0)
 ..S PSSDBNOD=$G(^PSDRUG(PSSDBFDB(PSSDBLP,"DRUG_IEN"),"DOS2",PSSDBXP,0))
"RTN","PSSDSAPD",89,0)
 ..;ignore package of the Local Possible Dose
"RTN","PSSDSAPD",90,0)
 ..I $$MTCH^PSSDSAPK S PSSDBLPD=1 I $P(PSSDBNOD,"^",5),$P(PSSDBNOD,"^",6)'="" D
"RTN","PSSDSAPD",91,0)
 ...;XTID Screening out Inactive Dose Units
"RTN","PSSDSAPD",92,0)
 ...S PSSDSXTD=+$P(PSSDBNOD,"^",5) I PSSDSXTD,$$SCREEN^XTID(51.24,.01,PSSDSXTD_",") Q
"RTN","PSSDSAPD",93,0)
 ...S PSSDBNT=$P($G(^PS(51.24,+$P(PSSDBNOD,"^",5),0)),"^",2)
"RTN","PSSDSAPD",94,0)
 ...I PSSDBNT'="" S PSSDBAR("AMN")=$P(PSSDBNOD,"^",6),PSSDBAR("UNIT")=PSSDBNT,PSSDBFAL=1
"RTN","PSSDSAPD",95,0)
 .;Only do auto-population logic if Local Possible Dosage was not found at all in File 50
"RTN","PSSDSAPD",96,0)
 .I PSSDBFAL Q
"RTN","PSSDSAPD",97,0)
 .I PSSDBLPD D DPOP^PSSDSAPK I PSSDBFAL Q
"RTN","PSSDSAPD",98,0)
 .D ITEM^PSSDSAPK D:'PSSDBFAL NUM^PSSDSAPL
"RTN","PSSDSAPD",99,0)
 Q
"RTN","PSSDSAPD",100,0)
 ;
"RTN","PSSDSAPD",101,0)
 ;
"RTN","PSSDSAPD",102,0)
LDZ ;
"RTN","PSSDSAPD",103,0)
 I $E(PSSDBAR("AMN"))=0,$L(PSSDBAR("AMN"))>1 S PSSDBAR("AMN")=$E(PSSDBAR("AMN"),2,$L(PSSDBAR("AMN")))
"RTN","PSSDSAPD",104,0)
 Q
"RTN","PSSDSAPD",105,0)
 ;
"RTN","PSSDSAPD",106,0)
 ;
"RTN","PSSDSAPD",107,0)
RTE ;Get First DataBank Med Route
"RTN","PSSDSAPD",108,0)
 N PSSDBMRT
"RTN","PSSDSAPD",109,0)
 K PSSDBMRT
"RTN","PSSDSAPD",110,0)
 I $D(PSSDBFDB(PSSDBLP,"ROUTE")) S PSSDBAR("RT")=PSSDBFDB(PSSDBLP,"ROUTE") Q
"RTN","PSSDSAPD",111,0)
 I $G(PSSDBDS(PSSDBLP,"MR_IEN")) S PSSDBMRT=$$MRT^PSSDSAPI(PSSDBDS(PSSDBLP,"MR_IEN")) I $P(PSSDBMRT,"^",2)'="" S PSSDBAR("RT")=$P(PSSDBMRT,"^",2) Q
"RTN","PSSDSAPD",112,0)
 S PSSDBAR("RT")=""
"RTN","PSSDSAPD",113,0)
 Q
"RTN","PSSDSAPD",114,0)
 ;
"RTN","PSSDSAPD",115,0)
 ;
"RTN","PSSDSAPD",116,0)
SCHD ;
"RTN","PSSDSAPD",117,0)
 N PSSDBSCD,PSSDBSCP,PSSDBSCF,PSSDBSCG,PSSDBSCH
"RTN","PSSDSAPD",118,0)
 S PSSDBAR("FREQ")=""
"RTN","PSSDSAPD",119,0)
 ;I $D(PSSDBFDB(PSSDBLP,"FREQ")) S PSSDBAR("FREQ")=PSSDBFDB(PSSDBLP,"FREQ") Q
"RTN","PSSDSAPD",120,0)
 I PSSDBAR("TYPE")="SINGLE DOSE" S PSSDBAR("FREQ")="" Q
"RTN","PSSDSAPD",121,0)
 ;I $G(PSSDBDS(PSSDBLP,"DRATE"))'="",$$DRT(PSSDBDS(PSSDBLP,"DRATE"))<1440 S PSSDBSDR=1
"RTN","PSSDSAPD",122,0)
 S PSSDBSCD=$G(PSSDBDS(PSSDBLP,"SCHEDULE"))
"RTN","PSSDSAPD",123,0)
 I PSSDBSCD="",'$D(PSSDBFDB(PSSDBLP,"FREQ")) S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"FRQ_ERROR")="" Q
"RTN","PSSDSAPD",124,0)
 S (PSSDBSCF,PSSDBSCH)="" S PSSDBSCP=$P(PSSDBFDB(PSSDBLP,"RX_NUM"),";")
"RTN","PSSDSAPD",125,0)
 I $G(PSSDBSCD)'="" F PSSDBSCG=0:0 S PSSDBSCG=$O(^PS(51.1,"APPSJ",PSSDBSCD,PSSDBSCG)) Q:'PSSDBSCG!(PSSDBSCH)  D
"RTN","PSSDSAPD",126,0)
 .I $P($G(^PS(51.1,PSSDBSCG,0)),"^",5)="D" S PSSDBSCF="D"
"RTN","PSSDSAPD",127,0)
 .I $P($G(^PS(51.1,PSSDBSCG,0)),"^",5)="O"!($P($G(^PS(51.1,PSSDBSCG,0)),"^",5)="OC") S PSSDBSCH=1
"RTN","PSSDSAPD",128,0)
 I PSSDBSCH,'$D(PSSDBFDB(PSSDBLP,"FREQ")) S PSSDBAR("FREQ")=1 Q
"RTN","PSSDSAPD",129,0)
 I $G(PSSDBSCD)["@" S PSSDBSCF="D"
"RTN","PSSDSAPD",130,0)
 I $G(PSSDBSCD)'="" S PSSDBSCP=$S(PSSDBSCP="I":"I",1:"O") S PSSDBAR("FREQZZ")=$$FRQ^PSSDSAPI(PSSDBSCD,PSSDBSCF,PSSDBSCP,$G(PSSDBDS(PSSDBLP,"DRATE"))),PSSDBAR("FREQ")=$P(PSSDBAR("FREQZZ"),"^")
"RTN","PSSDSAPD",131,0)
 I $D(PSSDBFDB(PSSDBLP,"FREQ")) S PSSDBAR("FREQ")=PSSDBFDB(PSSDBLP,"FREQ") Q
"RTN","PSSDSAPD",132,0)
 S:PSSDBAR("FREQ")="" PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"FRQ_ERROR")=""
"RTN","PSSDSAPD",133,0)
 Q
"RTN","PSSDSAPD",134,0)
 ;
"RTN","PSSDSAPD",135,0)
 ;
"RTN","PSSDSAPD",136,0)
DTYPE ;Find Dose Type
"RTN","PSSDSAPD",137,0)
 N PSSDBST1,PSSDBST2,PSSDBST3,PSSDBST4
"RTN","PSSDSAPD",138,0)
 I $D(PSSDBFDB(PSSDBLP,"DOSE_TYPE")) S PSSDBAR("TYPE")=PSSDBFDB(PSSDBLP,"DOSE_TYPE") Q
"RTN","PSSDSAPD",139,0)
 S PSSDBST1=$G(PSSDBDS(PSSDBLP,"SCHEDULE"))
"RTN","PSSDSAPD",140,0)
 I PSSDBST1="" S PSSDBAR("TYPE")="MAINTENANCE" Q
"RTN","PSSDSAPD",141,0)
 S PSSDBST3=0
"RTN","PSSDSAPD",142,0)
 F PSSDBST2=0:0 S PSSDBST2=$O(^PS(51.1,"APPSJ",PSSDBST1,PSSDBST2)) Q:'PSSDBST2!(PSSDBST3)  D
"RTN","PSSDSAPD",143,0)
 .S PSSDBST4=$P($G(^PS(51.1,PSSDBST2,0)),"^",5)
"RTN","PSSDSAPD",144,0)
 .I PSSDBST4="O"!(PSSDBST4="OC") S PSSDBAR("TYPE")="SINGLE DOSE",PSSDBST3=1
"RTN","PSSDSAPD",145,0)
 I 'PSSDBST3 S PSSDBAR("TYPE")="MAINTENANCE"
"RTN","PSSDSAPD",146,0)
 Q
"RTN","PSSDSAPD",147,0)
 ;
"RTN","PSSDSAPD",148,0)
 ;
"RTN","PSSDSAPD",149,0)
DURR ;Set Duration
"RTN","PSSDSAPD",150,0)
 I $D(PSSDBFDB(PSSDBLP,"DURATION")) S PSSDBAR("DUR")=PSSDBFDB(PSSDBLP,"DURATION") Q
"RTN","PSSDSAPD",151,0)
 S PSSDBAR("DUR")=$S($G(PSSDBAR("TYPE"))="SINGLE DOSE":"",1:1)
"RTN","PSSDSAPD",152,0)
 Q
"RTN","PSSDSAPD",153,0)
 ;
"RTN","PSSDSAPD",154,0)
 ;
"RTN","PSSDSAPD",155,0)
DURRAT ;Set Duration Rate
"RTN","PSSDSAPD",156,0)
 I $D(PSSDBFDB(PSSDBLP,"DURATION_RT")) S PSSDBAR("DRR")=PSSDBFDB(PSSDBLP,"DURATION_RT") Q
"RTN","PSSDSAPD",157,0)
 S PSSDBAR("DRR")=$S($G(PSSDBAR("TYPE"))="SINGLE DOSE":"",1:"DAY")
"RTN","PSSDSAPD",158,0)
 Q
"RTN","PSSDSAPD",159,0)
 ;
"RTN","PSSDSAPD",160,0)
 ;
"RTN","PSSDSAPD",161,0)
COMP ;Handle complex order, set PSSDBCAR array, see routine PSSDSEXC for PSSBDCAR piece details
"RTN","PSSDSAPD",162,0)
 ;if you have to add new create input entry, just add a piece 5 = 1 to the Pharmacy Order Number
"RTN","PSSDSAPD",163,0)
 N PSSDBKLP,PSSDBKUN,PSSDBKMR,PSSDBKND,PSSDBKRF,PSSDBKNW,PSSDBKFL,PSSDBKTM,PSSDBKFQ,PSSDBKGG,PSSCNX1,PSSDBCDA,PSSDCLX
"RTN","PSSDSAPD",164,0)
 S PSSDBKTM="PSSTTMP"
"RTN","PSSDSAPD",165,0)
 K ^TMP($J,PSSDBKTM)
"RTN","PSSDSAPD",166,0)
 S PSSDBKFL=0
"RTN","PSSDSAPD",167,0)
 F PSSCNX1=0:0 S PSSCNX1=$O(^TMP($J,"PSSCNX","IN","DOSE",PSSCNX1)) Q:'PSSCNX1  S PSSDBKLP=$O(^TMP($J,"PSSCNX","IN","DOSE",PSSCNX1,"")) I PSSDBKLP'=""  D
"RTN","PSSDSAPD",168,0)
 .S PSSDBKND=$G(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBKLP)) S PSSDBKFQ=$S($D(PSSDBCAZ(PSSDBKLP,"FRQ_ERROR")):0,1:1) S PSSDBKGG=$S($P(PSSDBKND,"^",12)="SINGLE DOSE":1,1:0)
"RTN","PSSDSAPD",169,0)
 .S PSSDBCDA($S($P(PSSDBKND,"^",3)="":"NULL",1:$P(PSSDBKND,"^",3)),$S($P(PSSDBKND,"^",11)="":"NULL",1:$P(PSSDBKND,"^",11)))=PSSDBKLP I $G(PSSDCLX)="",PSSDSWHE S PSSDCLX=PSSDBKLP
"RTN","PSSDSAPD",170,0)
 .S PSSDBCAR(PSSDBKLP)="B"_"^"_$P(PSSDBKND,"^",4)_"^"_$P(PSSDBKND,"^",3)_"^"_PSSDBKFQ_"^"_$S($P(PSSDBKND,"^",12)="SINGLE DOSE":0,1:1) S:$G(PSSDBFRC(PSSDBKLP,"CONJ"))="A" $P(PSSDBCAR(PSSDBKLP),"^",7)=1
"RTN","PSSDSAPD",171,0)
 .S $P(PSSDBCAR(PSSDBKLP),"^",9)=$P(PSSDBKND,"^",11) D MLTNO^PSSDSAPM,SXCL^PSSDSAPA I PSSDSWHE S:$G(PSSDBFRC(PSSDBKLP,"CONJ"))'=""!($G(PSSDBFRC(PSSDCLX,"CONJ"))'="") $P(PSSDBCAR(PSSDBKLP),"^",16)=1 S PSSDCLX=PSSDBKLP
"RTN","PSSDSAPD",172,0)
 .I $G(PSSDBFRC(PSSDBKLP,"CONJ"))'="A"!($O(^TMP($J,"PSSCNX","IN","DOSE",PSSCNX1))="") S PSSDBKNW($P(PSSDBKLP,";",4),PSSDBKLP)="" D CRT K PSSDBKNW,PSSDBCDA S PSSDBKFL=0 Q
"RTN","PSSDSAPD",173,0)
 .S PSSDBKFL=PSSDBKFL+1
"RTN","PSSDSAPD",174,0)
 .S PSSDBKNW($P(PSSDBKLP,";",4),PSSDBKLP)=""
"RTN","PSSDSAPD",175,0)
 .S $P(PSSDBCAR(PSSDBKLP),"^")="S",$P(PSSDBCAR(PSSDBKLP),"^",12)=1
"RTN","PSSDSAPD",176,0)
 I $D(^TMP($J,PSSDBKTM)) M ^TMP($J,PSSDBASE)=^TMP($J,PSSDBKTM)
"RTN","PSSDSAPD",177,0)
 K ^TMP($J,PSSDBKTM)
"RTN","PSSDSAPD",178,0)
 Q
"RTN","PSSDSAPD",179,0)
 ;
"RTN","PSSDSAPD",180,0)
 ;
"RTN","PSSDSAPD",181,0)
DRT(PSSDBJV) ;Return number of minutes based on duration, API also called from Inpatient Medications
"RTN","PSSDSAPD",182,0)
 ;If only a numeric is passed in, the API will assume Days
"RTN","PSSDSAPD",183,0)
 I $G(PSSDBJV)="" Q -1
"RTN","PSSDSAPD",184,0)
 I PSSDBJV?.N1".".N1"D"!(PSSDBJV?.N1"D") Q (1440*+PSSDBJV)
"RTN","PSSDSAPD",185,0)
 I PSSDBJV?.N1".".N!(PSSDBJV?.N) Q (1440*+PSSDBJV)
"RTN","PSSDSAPD",186,0)
 I PSSDBJV?.N1".".N1"H"!(PSSDBJV?.N1"H") Q (60*+PSSDBJV)
"RTN","PSSDSAPD",187,0)
 I PSSDBJV?.N1".".N1"M"!(PSSDBJV?.N1"M") Q (+PSSDBJV)
"RTN","PSSDSAPD",188,0)
 I PSSDBJV?.N1".".N1"W"!(PSSDBJV?.N1"W") Q (10080*+PSSDBJV)
"RTN","PSSDSAPD",189,0)
 I PSSDBJV?.N1".".N1"L"!(PSSDBJV?.N1"L") Q (43200*+PSSDBJV)
"RTN","PSSDSAPD",190,0)
 Q -1
"RTN","PSSDSAPD",191,0)
 ;
"RTN","PSSDSAPD",192,0)
 ;
"RTN","PSSDSAPD",193,0)
CRT ;Possibly create new Input Dose Node just for Daily Dose purposes
"RTN","PSSDSAPD",194,0)
 I 'PSSDBKFL!($G(PSSDBFRC(PSSDBKLP,"CONJ"))="A") S $P(PSSDBCAR(PSSDBKLP),"^")=$S($G(PSSDBFRC(PSSDBKLP,"CONJ"))="A":"S",$G(PSSDBKGG):"S",$G(PSSDBFRB(PSSDBKLP,"DRATE"))="":"B",1:"B") D S12 Q
"RTN","PSSDSAPD",195,0)
 N PSSDBR1,PSSDBR2,PSSDBR3,PSSDBR4,PSSDBR5,PSSDBR6,PSSDBR7,PSSDBRCT,PSSDBRNO,PSSDBRLS,PSSDBR9,PSSDBR91,PSSDBEQ2,PSSDBEQ3,PSSDBEQ4,PSSDBR8,PSSDBXAX,PSSDBRLP,PSSDBRLA
"RTN","PSSDSAPD",196,0)
 S (PSSDBRNO,PSSDBRCT,PSSDBR5)=0
"RTN","PSSDSAPD",197,0)
 ;Then or Except Conjunction, or last Dosing Sequence in the series, with previous dosages to add up for Daily Dose
"RTN","PSSDSAPD",198,0)
 ;PSSDBKNW array holds all previous dosing sequences and current one
"RTN","PSSDSAPD",199,0)
 S PSSDBRLP="" F  S PSSDBRLP=$O(PSSDBKNW(PSSDBRLP)) Q:PSSDBRLP=""  S PSSDBR1=$O(PSSDBKNW(PSSDBRLP,"")) I PSSDBR1'=""  D
"RTN","PSSDSAPD",200,0)
 .S PSSDBR2=$G(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBR1))
"RTN","PSSDSAPD",201,0)
 .I $O(PSSDBKNW(PSSDBRLP))="" S $P(PSSDBCAR(PSSDBKLP),"^")="S",$P(PSSDBCAR(PSSDBKLP),"^",12)=1
"RTN","PSSDSAPD",202,0)
 .I $P(PSSDBR2,"^",12)'="MAINTENANCE" D NX(4)
"RTN","PSSDSAPD",203,0)
 .S PSSDBRCT=PSSDBRCT+1
"RTN","PSSDSAPD",204,0)
 .I $G(PSSDBFRC(PSSDBR1,"SCHEDULE"))["@" D NX(10)
"RTN","PSSDSAPD",205,0)
 .I '$D(PSSDBEQ2(10)),$G(PSSDBFRC(PSSDBR1,"SCHEDULE"))'="" F PSSDBEQ4=0:0 S PSSDBEQ4=$O(^PS(51.1,"APPSJ",$G(PSSDBFRC(PSSDBR1,"SCHEDULE")),PSSDBEQ4)) Q:'PSSDBEQ4!($D(PSSDBEQ2(10)))  D
"RTN","PSSDSAPD",206,0)
 ..I $P($G(^PS(51.1,PSSDBEQ4,0)),"^",5)="D" D NX(10)
"RTN","PSSDSAPD",207,0)
 .I PSSDBRCT=1 D  Q
"RTN","PSSDSAPD",208,0)
 ..I '$P(PSSDBR2,"^",5) D NX(11)
"RTN","PSSDSAPD",209,0)
 ..S PSSDBR91=$G(PSSDBFRB(PSSDBR1,"DRATE"))
"RTN","PSSDSAPD",210,0)
 ..S PSSDBR3=$P(PSSDBR2,"^",6),PSSDBR4=$P(PSSDBR2,"^",11) I PSSDBR3=""!(PSSDBR4="") S PSSDBRNO=1 D:PSSDBR3="" NX(5) D:PSSDBR4="" NX(6)
"RTN","PSSDSAPD",211,0)
 ..S PSSDBR5=$P(PSSDBR2,"^",8)
"RTN","PSSDSAPD",212,0)
 ..I $D(PSSDBCAZ(PSSDBR1,"FRQ_ERROR")) D NX(7)
"RTN","PSSDSAPD",213,0)
 ..I 'PSSDBRNO S PSSDBR8=$$FRCON^PSSDSAPK(PSSDBR5) S:PSSDBR8'<1 PSSDBR6=$P(PSSDBR2,"^",5)*PSSDBR8 I PSSDBR8<1 D NX(7)
"RTN","PSSDSAPD",214,0)
 ..I $G(PSSDBFRB(PSSDBR1,"DRATE"))'="" S PSSDBR7=$$DRT(PSSDBFRB(PSSDBR1,"DRATE")) I PSSDBR7<1440 D NX(9)
"RTN","PSSDSAPD",215,0)
 ..I '$O(PSSDBKNW(PSSDBRLP)) S PSSDBRLS=PSSDBR1 ; Get Last entry
"RTN","PSSDSAPD",216,0)
 .I '$P(PSSDBR2,"^",5) D NX(11)
"RTN","PSSDSAPD",217,0)
 .I PSSDBR3'=$P(PSSDBR2,"^",6) D NX(5)
"RTN","PSSDSAPD",218,0)
 .I PSSDBR4'=$P(PSSDBR2,"^",11) D NX(6)
"RTN","PSSDSAPD",219,0)
 .I $G(PSSDBFRB(PSSDBR1,"DRATE"))'=PSSDBR91 D NX(8)
"RTN","PSSDSAPD",220,0)
 .S PSSDBR5=$P(PSSDBR2,"^",8) I $D(PSSDBCAZ(PSSDBR1,"FRQ_ERROR")) D NX(7)
"RTN","PSSDSAPD",221,0)
 .I 'PSSDBRNO S PSSDBR8=$$FRCON^PSSDSAPK(PSSDBR5) S:PSSDBR8'<1 PSSDBR6=PSSDBR6+($P(PSSDBR2,"^",5)*PSSDBR8) I PSSDBR8<1 D NX(7)
"RTN","PSSDSAPD",222,0)
 .I $G(PSSDBFRB(PSSDBR1,"DRATE"))'="" S PSSDBR7=$$DRT(PSSDBFRB(PSSDBR1,"DRATE")) I PSSDBR7<1440 D NX(9)
"RTN","PSSDSAPD",223,0)
 .I '$O(PSSDBKNW(PSSDBRLP)) S PSSDBRLS=PSSDBR1 ; Get Last entry
"RTN","PSSDSAPD",224,0)
 I PSSDBRNO D  S $P(PSSDBCAR(PSSDBRLS),"^",8)=1,$P(PSSDBCAR(PSSDBRLS),"^",7)="" D MLTNP^PSSDSAPM D RESET^PSSDSAPA Q
"RTN","PSSDSAPD",225,0)
 .S PSSDBRLA="" F  S PSSDBRLA=$O(PSSDBKNW(PSSDBRLA)) Q:PSSDBRLA=""  S PSSDBR9=$O(PSSDBKNW(PSSDBRLA,"")) I PSSDBR9'=""  S $P(PSSDBCAR(PSSDBR9),"^")="S",$P(PSSDBCAR(PSSDBR9),"^",12)=1
"RTN","PSSDSAPD",226,0)
 .;Set error message only for last entry where Daily Dose should have been done
"RTN","PSSDSAPD",227,0)
 .D ERST^PSSDSAPM
"RTN","PSSDSAPD",228,0)
 S ^TMP($J,PSSDBKTM,"IN","DOSE",PSSDBRLS_";1")=^TMP($J,PSSDBASE,"IN","DOSE",PSSDBRLS)
"RTN","PSSDSAPD",229,0)
 S ^TMP($J,PSSDBKTM,"IN","PROSPECTIVE",PSSDBRLS_";1")=$P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBRLS),"^",1,4)
"RTN","PSSDSAPD",230,0)
 S $P(^TMP($J,PSSDBKTM,"IN","DOSE",PSSDBRLS_";1"),"^",8)=1
"RTN","PSSDSAPD",231,0)
 S $P(^TMP($J,PSSDBKTM,"IN","DOSE",PSSDBRLS_";1"),"^",5)=PSSDBR6
"RTN","PSSDSAPD",232,0)
 S PSSDBCAR(PSSDBRLS_";1")="D"_"^"_$P(PSSDBKND,"^",4)_"^"_$P(PSSDBKND,"^",3)_"^"_PSSDBKFQ S $P(PSSDBCAR(PSSDBRLS),"^",11)=1
"RTN","PSSDSAPD",233,0)
 Q
"RTN","PSSDSAPD",234,0)
 ;
"RTN","PSSDSAPD",235,0)
 ;
"RTN","PSSDSAPD",236,0)
NDINFO ;Set National Drug File information
"RTN","PSSDSAPD",237,0)
 I 'PSSDBIFL,$G(PSSDBFDB(PSSDBLP,"DRUG_IEN")) S PSSDBND1=$P($G(^PSDRUG(PSSDBFDB(PSSDBLP,"DRUG_IEN"),"ND")),"^"),PSSDBND3=$P($G(^PSDRUG(PSSDBFDB(PSSDBLP,"DRUG_IEN"),"ND")),"^",3) Q
"RTN","PSSDSAPD",238,0)
 I $G(PSSDBIFG) S PSSDBND1=$P($G(^PSDRUG(PSSDBIFG,"ND")),"^"),PSSDBND3=$P($G(^PSDRUG(PSSDBIFG,"ND")),"^",3)
"RTN","PSSDSAPD",239,0)
 Q
"RTN","PSSDSAPD",240,0)
 ;
"RTN","PSSDSAPD",241,0)
 ;
"RTN","PSSDSAPD",242,0)
ERR ;Loop through PSSDBCAR, set PSSDBCAX error array
"RTN","PSSDSAPD",243,0)
 N PSSDBEB1,PSSDBEB2,PSSDBEB3
"RTN","PSSDSAPD",244,0)
 S PSSDBEB3=$S($G(^TMP($J,PSSDBASE,"IN","DOSE","AGE")):1,1:0)
"RTN","PSSDSAPD",245,0)
 ;Skip AGE, WT and BSA and newly created Dosages for complex additions
"RTN","PSSDSAPD",246,0)
 ;Rx_NUM MUST contain a ";", or you will not set PSSDBDGO
"RTN","PSSDSAPD",247,0)
 S PSSDBEB1="" F  S PSSDBEB1=$O(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1)) Q:PSSDBEB1=""  S:'PSSDBEB3&(PSSDBEB1[";") $P(PSSDBCAR(PSSDBEB1),"^",13)=1 D:'$P(PSSDBEB1,";",5)&(PSSDBEB1[";")
"RTN","PSSDSAPD",248,0)
 .S PSSDBEB2=$G(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1))
"RTN","PSSDSAPD",249,0)
 .I $D(PSSDBCAZ(PSSDBEB1,"INF_ERROR")) D INRATE S PSSDBDGO=1 S $P(PSSDBCAR(PSSDBEB1),"^",13)=1 Q
"RTN","PSSDSAPD",250,0)
 .I $P(PSSDBEB2,"^",5)=""!($P(PSSDBEB2,"^",6)="") D BDOSE^PSSDSAPK S $P(PSSDBCAR(PSSDBEB1),"^",13)=1 Q
"RTN","PSSDSAPD",251,0)
 .I $D(PSSDBCAZ(PSSDBEB1,"FRQ_ERROR")) D INFRQ S PSSDBDGO=1 Q
"RTN","PSSDSAPD",252,0)
 .I '$P(PSSDBCAR(PSSDBEB1),"^",5) D SING^PSSDSAPK S PSSDBDGO=1 Q
"RTN","PSSDSAPD",253,0)
 .S PSSDBDGO=1
"RTN","PSSDSAPD",254,0)
 Q
"RTN","PSSDSAPD",255,0)
 ;
"RTN","PSSDSAPD",256,0)
 ;
"RTN","PSSDSAPD",257,0)
EXCPS(PSSDBEQ1) ;Set errors
"RTN","PSSDSAPD",258,0)
 I PSSDBEQ1=2,$D(PSSDBCAZ(PSSDBEB1,"FRQD_ERROR")) S PSSDBCAX(PSSDBEB1,15)="" Q
"RTN","PSSDSAPD",259,0)
 S PSSDBCAX(PSSDBEB1,PSSDBEQ1)=""
"RTN","PSSDSAPD",260,0)
 Q
"RTN","PSSDSAPD",261,0)
 ;
"RTN","PSSDSAPD",262,0)
 ;
"RTN","PSSDSAPD",263,0)
INRATE ;Infusion Rate error, default data already set in Inpatient
"RTN","PSSDSAPD",264,0)
 ;N PSSDBEC1
"RTN","PSSDSAPD",265,0)
 I 'PSSDBEB3 Q
"RTN","PSSDSAPD",266,0)
 I $P(PSSDBEB2,"^",5)=""!($P(PSSDBEB2,"^",6)="") D EXCPS(1)
"RTN","PSSDSAPD",267,0)
 ;S PSSDBEC1=$P(PSSDBEB2,"^",11) S PSSDBEC1=$$UP^XLFSTR(PSSDBEC1) I $E(PSSDBEC1,1,4)'="CONT" Q
"RTN","PSSDSAPD",268,0)
 S $P(PSSDBCAR(PSSDBEB1),"^",21)=1
"RTN","PSSDSAPD",269,0)
 D EXCPS(3) D INFERRS^PSSDSAPK
"RTN","PSSDSAPD",270,0)
 I $D(PSSDBCAZ(PSSDBEB1,"FRQ_ERROR")) D EXCPS(2)
"RTN","PSSDSAPD",271,0)
 I $P(PSSDBCAR(PSSDBEB1),"^",5) S $P(PSSDBCAR(PSSDBEB1),"^",6)=1 S $P(PSSDBCAR(PSSDBEB1),"^",10)=1 Q  ;Maintenance Dose
"RTN","PSSDSAPD",272,0)
 ;Single Dose, code should never be invoked, because we don't send Continuous infusions
"RTN","PSSDSAPD",273,0)
 S $P(PSSDBCAR(PSSDBEB1),"^")="S"
"RTN","PSSDSAPD",274,0)
 S $P(PSSDBCAR(PSSDBEB1),"^",7)=1
"RTN","PSSDSAPD",275,0)
 Q
"RTN","PSSDSAPD",276,0)
 ;
"RTN","PSSDSAPD",277,0)
 ;
"RTN","PSSDSAPD",278,0)
INFRQ ;Frequency error
"RTN","PSSDSAPD",279,0)
 I 'PSSDBEB3 Q
"RTN","PSSDSAPD",280,0)
 I $P(PSSDBEB2,"^",11)="" Q
"RTN","PSSDSAPD",281,0)
 ;I '$P(PSSDBCAR(PSSDBEB1),"^",5) Q
"RTN","PSSDSAPD",282,0)
 D EXCPS(2)
"RTN","PSSDSAPD",283,0)
 S $P(PSSDBCAR(PSSDBEB1),"^")="S"
"RTN","PSSDSAPD",284,0)
 I $P(PSSDBCAR(PSSDBEB1),"^",5) S $P(PSSDBCAR(PSSDBEB1),"^",8)=1 S $P(PSSDBCAR(PSSDBEB1),"^",10)=1
"RTN","PSSDSAPD",285,0)
 ;Inpatient may already be setting next 3, because this applies to Outpatient and IV
"RTN","PSSDSAPD",286,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",8)=1,$P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",9)=1
"RTN","PSSDSAPD",287,0)
 ;S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",9)=1
"RTN","PSSDSAPD",288,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",10)=$P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",7)
"RTN","PSSDSAPD",289,0)
 Q
"RTN","PSSDSAPD",290,0)
 ;
"RTN","PSSDSAPD",291,0)
 ;
"RTN","PSSDSAPD",292,0)
S12 ;
"RTN","PSSDSAPD",293,0)
 S:$P(PSSDBCAR(PSSDBKLP),"^")="S" $P(PSSDBCAR(PSSDBKLP),"^",12)=1
"RTN","PSSDSAPD",294,0)
 Q
"RTN","PSSDSAPD",295,0)
 ;
"RTN","PSSDSAPD",296,0)
 ;
"RTN","PSSDSAPD",297,0)
NX(PSSNX) ;
"RTN","PSSDSAPD",298,0)
 S PSSDBRNO=1
"RTN","PSSDSAPD",299,0)
 S PSSDBEQ2(PSSNX)=""
"RTN","PSSDSAPD",300,0)
 S PSSDBXAX(PSSNX,PSSDBR1)=""
"RTN","PSSDSAPD",301,0)
 Q
"RTN","PSSDSAPI")
0^1^B140284083
"RTN","PSSDSAPI",1,0)
PSSDSAPI ;BIR/RTR-Dose Check APIs routine ;06/09/08
"RTN","PSSDSAPI",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,160**;9/30/97;Build 76
"RTN","PSSDSAPI",3,0)
 ;
"RTN","PSSDSAPI",4,0)
EXMT(PSSVLIEN) ;Test if Drug should have Dose Call performed on it
"RTN","PSSDSAPI",5,0)
 ;PSSVLIEN=File 50 internal entry number 
"RTN","PSSDSAPI",6,0)
 ;1=exempt from Dose Check, 0=not exempt from Dose check
"RTN","PSSDSAPI",7,0)
 N PSSVLND,PSSVLND1,PSSVLND3,PSSVLNDF,PSSVLDOV,PSSVLZR,PSSVLDF
"RTN","PSSDSAPI",8,0)
 S PSSVLZR=$G(^PSDRUG(PSSVLIEN,0))
"RTN","PSSDSAPI",9,0)
 I $P(PSSVLZR,"^",3)["S"!($E($P(PSSVLZR,"^",2),1,2)="XA") Q 1
"RTN","PSSDSAPI",10,0)
 S PSSVLND=$G(^PSDRUG(PSSVLIEN,"ND"))
"RTN","PSSDSAPI",11,0)
 S PSSVLND1=$P(PSSVLND,"^"),PSSVLND3=$P(PSSVLND,"^",3)
"RTN","PSSDSAPI",12,0)
 S PSSVLDOV="" K PSSVLDF
"RTN","PSSDSAPI",13,0)
 I $T(OVRIDE^PSNAPIS)]"",PSSVLND1,PSSVLND3 S PSSVLDOV=$$OVRIDE^PSNAPIS(PSSVLND1,PSSVLND3)
"RTN","PSSDSAPI",14,0)
 I PSSVLND1,PSSVLND3 S PSSVLNDF=$$DFSU^PSNAPIS(PSSVLND1,PSSVLND3) S PSSVLDF=$P(PSSVLNDF,"^")
"RTN","PSSDSAPI",15,0)
 I $G(PSSVLDF)'>0,$P($G(^PSDRUG(PSSVLIEN,2)),"^") S PSSVLDF=$P($G(^PS(50.7,+$P($G(^PSDRUG(PSSVLIEN,2)),"^"),0)),"^",2)
"RTN","PSSDSAPI",16,0)
 I PSSVLDOV=""!('$G(PSSVLDF))!($P($G(^PS(50.606,+$G(PSSVLDF),1)),"^")="") Q 0
"RTN","PSSDSAPI",17,0)
 I $P($G(^PS(50.606,+$G(PSSVLDF),1)),"^"),'PSSVLDOV Q 1
"RTN","PSSDSAPI",18,0)
 I '$P($G(^PS(50.606,+$G(PSSVLDF),1)),"^"),PSSVLDOV Q 1
"RTN","PSSDSAPI",19,0)
 Q 0
"RTN","PSSDSAPI",20,0)
 ;
"RTN","PSSDSAPI",21,0)
 ;
"RTN","PSSDSAPI",22,0)
SUP(PSSSPLIN) ;Screen for Drug Interaction and Duplicate Therapy
"RTN","PSSDSAPI",23,0)
 ;PSSSPLIN = File 50 internal entry number
"RTN","PSSDSAPI",24,0)
 ;1=exempt, 0=not exempt
"RTN","PSSDSAPI",25,0)
 N PSSSPLZR
"RTN","PSSDSAPI",26,0)
 S PSSSPLZR=$G(^PSDRUG(PSSSPLIN,0))
"RTN","PSSDSAPI",27,0)
 I $P(PSSSPLZR,"^",3)["S"!($E($P(PSSSPLZR,"^",2),1,2)="XA") Q 1
"RTN","PSSDSAPI",28,0)
 Q 0
"RTN","PSSDSAPI",29,0)
 ;
"RTN","PSSDSAPI",30,0)
 ;
"RTN","PSSDSAPI",31,0)
MRT(PSSRS1) ;Return Standard Medication Route and First DataBank Route
"RTN","PSSDSAPI",32,0)
 I '$G(PSSRS1) G MRTX
"RTN","PSSDSAPI",33,0)
 N PSSRS2,PSSRS3,PSSRS4,PSSRTNAM,PSSRTIEN,PSSRTARR,PSSPKGU,PSSRS4SM
"RTN","PSSDSAPI",34,0)
 S (PSSRTNAM,PSSRTIEN,PSSRS2,PSSRS4,PSSRS4SM)="",PSSRTNAM=$$GET1^DIQ(51.2,PSSRS1,.01)
"RTN","PSSDSAPI",35,0)
 F  S PSSRTIEN=$O(^PS(51.2,"B",PSSRTNAM,PSSRTIEN)) Q:PSSRTIEN=""  D  ;check for duplicate route names; if mapped, defined and has a valid effective date set array
"RTN","PSSDSAPI",36,0)
 .S PSSRS3="",PSSRS3=$P($G(^PS(51.2,PSSRTIEN,1)),"^")
"RTN","PSSDSAPI",37,0)
 .Q:'$G(PSSRS3)
"RTN","PSSDSAPI",38,0)
 .Q:'$D(^PS(51.23,+PSSRS3,0))
"RTN","PSSDSAPI",39,0)
 .Q:$$SCREEN^XTID(51.23,.01,+PSSRS3_",")
"RTN","PSSDSAPI",40,0)
 .S PSSPKGU="",PSSPKGU=$$GET1^DIQ(51.2,PSSRTIEN,3,"I") S:PSSPKGU="" PSSPKGU=0 S PSSRTARR(PSSPKGU,PSSRTIEN)=+PSSRS3
"RTN","PSSDSAPI",41,0)
 ;If duplicate route names, select 1st "ALL Package" route for PACKAGE USE field in file 51.2.  If no "ALL Package" route, select 1st "NDF Only" route.  Otherwise, return nothing to indicate "invalid or undefined" route.
"RTN","PSSDSAPI",42,0)
 ;If no duplicate route names, use the route passed in regardless of Packge Use value but only if mapped to route has valid effective date.
"RTN","PSSDSAPI",43,0)
 I $D(PSSRTARR) D
"RTN","PSSDSAPI",44,0)
 .I $D(PSSRTARR(1)) S PSSRS4=$O(PSSRTARR(1,PSSRS4)),PSSRS4SM=PSSRTARR(1,PSSRS4) Q
"RTN","PSSDSAPI",45,0)
 .S:$D(PSSRTARR(0)) PSSRS4=$O(PSSRTARR(0,PSSRS4)),PSSRS4SM=PSSRTARR(0,PSSRS4)
"RTN","PSSDSAPI",46,0)
 I PSSRS4="" G MRTX
"RTN","PSSDSAPI",47,0)
 S PSSRS2=$G(^PS(51.23,+PSSRS4SM,0))
"RTN","PSSDSAPI",48,0)
MRTX ;
"RTN","PSSDSAPI",49,0)
 Q $P(PSSRS2,"^")_"^"_$P(PSSRS2,"^",2)
"RTN","PSSDSAPI",50,0)
 ;
"RTN","PSSDSAPI",51,0)
 ;
"RTN","PSSDSAPI",52,0)
UNIT(PSSVUTUN) ;Find First DataBank Unit, can't do DIC Lookup because of exact match check
"RTN","PSSDSAPI",53,0)
 ;Returns Null or First DataBank Unit for text passed in
"RTN","PSSDSAPI",54,0)
 N PSSVUTX,PSSVUTZ,PSSVUTAA,PSSVUTFL
"RTN","PSSDSAPI",55,0)
 S PSSVUTFL=0 I $G(PSSVUTUN)="" S PSSVUTZ="" G UNITX
"RTN","PSSDSAPI",56,0)
 S PSSVUTAA=$$UP^XLFSTR(PSSVUTUN)
"RTN","PSSDSAPI",57,0)
UNITP ;
"RTN","PSSDSAPI",58,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"B",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="" G UNITX
"RTN","PSSDSAPI",59,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"C",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="" G UNITX
"RTN","PSSDSAPI",60,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"D",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="" G UNITX
"RTN","PSSDSAPI",61,0)
 I 'PSSVUTFL,$G(PSSVUTUN)["/" S PSSVUTFL=1,PSSVUTAA=$P(PSSVUTUN,"/"),PSSVUTAA=$$UP^XLFSTR(PSSVUTAA) G:PSSVUTAA'="" UNITP
"RTN","PSSDSAPI",62,0)
UNITX ;
"RTN","PSSDSAPI",63,0)
 Q $G(PSSVUTZ)
"RTN","PSSDSAPI",64,0)
 ;
"RTN","PSSDSAPI",65,0)
 ;
"RTN","PSSDSAPI",66,0)
FRQ(PSSFWSCC,PSSFWFR,PSSFWPK,PSSFWDRL) ;Return Daily Frequency for Daily Dose Check
"RTN","PSSDSAPI",67,0)
 ;
"RTN","PSSDSAPI",68,0)
 ;Input variables:
"RTN","PSSDSAPI",69,0)
 ;PSSFWSC = Free Text Schedule
"RTN","PSSDSAPI",70,0)
 ;PSSFWFR = Frequency in Minutes
"RTN","PSSDSAPI",71,0)
 ;PSSFWPK = Package  "O" for Outpatient, "I" for Inpatient
"RTN","PSSDSAPI",72,0)
 ;PSSFWDRL = Duration
"RTN","PSSDSAPI",73,0)
 ;Output: 2 pieces (More information see Forum DBIA 5425)
"RTN","PSSDSAPI",74,0)
 ;piece 1 - Adjusted Daily Frequency, (May need adjusted if Duration is passed in)
"RTN","PSSDSAPI",75,0)
 ;piece 2 - Daily Frequency solely based on Schedule
"RTN","PSSDSAPI",76,0)
 ;
"RTN","PSSDSAPI",77,0)
 N PSSFWPR1,PSSFWPR2,PSSFWPR3,PSSFWPR4,PSSFWPR5,PSSFWPR6,PSSFWPR7
"RTN","PSSDSAPI",78,0)
 S PSSFWPR1=0
"RTN","PSSDSAPI",79,0)
 S PSSFWPR2=$$FRQZ
"RTN","PSSDSAPI",80,0)
 I PSSFWPR1 Q PSSFWPR2_"^"_$G(PSSFWPR7)
"RTN","PSSDSAPI",81,0)
 S PSSFWPR3=$L(PSSFWSCC) I PSSFWPR3<5 Q PSSFWPR2_"^"_$G(PSSFWPR7)
"RTN","PSSDSAPI",82,0)
 S PSSFWPR4=$E(PSSFWSCC,(PSSFWPR3-3),PSSFWPR3) S PSSFWPR4=$$UP^XLFSTR(PSSFWPR4)
"RTN","PSSDSAPI",83,0)
 I PSSFWPR4'=" PRN" Q PSSFWPR2_"^"_$G(PSSFWPR7)
"RTN","PSSDSAPI",84,0)
 S PSSFWPR5=PSSFWSCC
"RTN","PSSDSAPI",85,0)
 S PSSFWSCC=$E(PSSFWSCC,1,(PSSFWPR3-4)) K PSSFWPR7
"RTN","PSSDSAPI",86,0)
 S PSSFWPR6=$$FRQZ
"RTN","PSSDSAPI",87,0)
 S PSSFWSCC=PSSFWPR5
"RTN","PSSDSAPI",88,0)
 Q PSSFWPR6_"^"_$G(PSSFWPR7)
"RTN","PSSDSAPI",89,0)
 ;
"RTN","PSSDSAPI",90,0)
 ;
"RTN","PSSDSAPI",91,0)
FRQZ() ;
"RTN","PSSDSAPI",92,0)
 N PSSFWRST,PSSFWFLG,PSSFWSC
"RTN","PSSDSAPI",93,0)
 S PSSFWSC=$$UP^XLFSTR(PSSFWSCC)
"RTN","PSSDSAPI",94,0)
 K PSSFWRST
"RTN","PSSDSAPI",95,0)
 I $G(PSSFWPK)'="O",$G(PSSFWPK)'="I" Q ""
"RTN","PSSDSAPI",96,0)
 I $G(PSSFWFR)="D" D DAY Q $G(PSSFWRST)
"RTN","PSSDSAPI",97,0)
 I $G(PSSFWFR) D NUMB I PSSFWFLG Q PSSFWRST
"RTN","PSSDSAPI",98,0)
 D STN I PSSFWFLG Q PSSFWRST
"RTN","PSSDSAPI",99,0)
 I $G(PSSFWPK)="O" D STNO I PSSFWFLG Q PSSFWRST
"RTN","PSSDSAPI",100,0)
 Q ""
"RTN","PSSDSAPI",101,0)
 ;
"RTN","PSSDSAPI",102,0)
 ;
"RTN","PSSDSAPI",103,0)
DAY ;Day of week schedule
"RTN","PSSDSAPI",104,0)
 N PSSFWFND,PSSFWRGH,PSSFWLTH,PSSFWTMP,PSSFWLP,PSSFWLP1,PSSFWCNT,PSSFWQZ,PSSFWDIV,PSSFWNUM,PSSFWKZ1,PSSFWKZ2,PSSFWKZ3,PSSFWKZ4,PSSFWKZ5
"RTN","PSSDSAPI",105,0)
 K PSSFWRST
"RTN","PSSDSAPI",106,0)
 S PSSFWLTH=$L(PSSFWSC)
"RTN","PSSDSAPI",107,0)
 S PSSFWFND=$F(PSSFWSC,"@")
"RTN","PSSDSAPI",108,0)
 S PSSFWRGH=$E(PSSFWSC,PSSFWFND,PSSFWLTH)
"RTN","PSSDSAPI",109,0)
 S PSSFWTMP=$S($E(PSSFWRGH,$L(PSSFWRGH))'="-":PSSFWRGH_"-",1:PSSFWRGH)
"RTN","PSSDSAPI",110,0)
 I PSSFWTMP?.(2N1"-")!(PSSFWTMP?.(4N1"-")) D  S PSSFWRST=PSSFWCNT,PSSFWPR1=1 Q
"RTN","PSSDSAPI",111,0)
 .S PSSFWCNT=0 F PSSFWLP=1:1:$L(PSSFWTMP) I $E(PSSFWTMP,PSSFWLP)="-" S PSSFWCNT=PSSFWCNT+1
"RTN","PSSDSAPI",112,0)
 I PSSFWRGH'="" F PSSFWLP1=0:0 S PSSFWLP1=$O(^PS(51.1,"APPSJ",PSSFWRGH,PSSFWLP1)) Q:'PSSFWLP1!($G(PSSFWRST))  D
"RTN","PSSDSAPI",113,0)
 .I $P($G(^PS(51.1,PSSFWLP1,0)),"^",5)'="D" Q
"RTN","PSSDSAPI",114,0)
 .S PSSFWKZ1=$P($G(^PS(51.1,PSSFWLP1,0)),"^",2)
"RTN","PSSDSAPI",115,0)
 .S PSSFWKZ5=0 I PSSFWKZ1'="" D
"RTN","PSSDSAPI",116,0)
 ..S PSSFWKZ2=$S($E(PSSFWKZ1,$L(PSSFWKZ1))'="-":PSSFWKZ1_"-",1:PSSFWKZ1)
"RTN","PSSDSAPI",117,0)
 ..I PSSFWKZ2?.(2N1"-")!(PSSFWKZ2?.(4N1"-")) D
"RTN","PSSDSAPI",118,0)
 ...S PSSFWKZ3=0 F PSSFWKZ4=1:1:$L(PSSFWKZ2) I $E(PSSFWKZ2,PSSFWKZ4)="-" S PSSFWKZ5=PSSFWKZ5+1
"RTN","PSSDSAPI",119,0)
 .I $G(PSSFWKZ5) S PSSFWRST=PSSFWKZ5
"RTN","PSSDSAPI",120,0)
 I $G(PSSFWRST) S PSSFWPR1=1 Q
"RTN","PSSDSAPI",121,0)
 I PSSFWRGH'="" F PSSFWLP1=0:0 S PSSFWLP1=$O(^PS(51.1,"APPSJ",PSSFWRGH,PSSFWLP1)) Q:'PSSFWLP1!($G(PSSFWRST))  D
"RTN","PSSDSAPI",122,0)
 .K PSSFWQZ,PSSFWDIV
"RTN","PSSDSAPI",123,0)
 .S PSSFWQZ=$P($G(^PS(51.1,PSSFWLP1,0)),"^",3)
"RTN","PSSDSAPI",124,0)
 .Q:'$G(PSSFWQZ)
"RTN","PSSDSAPI",125,0)
 .S PSSFWDIV=1440/PSSFWQZ I PSSFWDIV'>1 S PSSFWRST=1 Q
"RTN","PSSDSAPI",126,0)
 .I PSSFWDIV?.N S PSSFWRST=PSSFWDIV,PSSFWPR1=1
"RTN","PSSDSAPI",127,0)
 I $G(PSSFWRST) Q
"RTN","PSSDSAPI",128,0)
 I PSSFWPK="O" D DAYOUT Q:$G(PSSFWRST)
"RTN","PSSDSAPI",129,0)
 I PSSFWRGH?1"Q"1N.N1"H" S PSSFWRST=PSSFWRGH,PSSFWPR1=1 Q
"RTN","PSSDSAPI",130,0)
 I $G(PSSFWSC)'["@" S PSSFWRST=1 Q
"RTN","PSSDSAPI",131,0)
 I $E(PSSFWSC,$L(PSSFWSC))="@" S PSSFWRST=1 Q
"RTN","PSSDSAPI",132,0)
 Q
"RTN","PSSDSAPI",133,0)
 ;
"RTN","PSSDSAPI",134,0)
 ;
"RTN","PSSDSAPI",135,0)
DAYOUT ;Day of week for Outpatient orders
"RTN","PSSDSAPI",136,0)
 N PSSFWKZ6,PSSFWKZ7,PSSFWKZ8
"RTN","PSSDSAPI",137,0)
 I PSSFWRGH'="" F PSSFWKZ6=0:0 S PSSFWKZ6=$O(^PS(51,"B",PSSFWRGH,PSSFWKZ6)) Q:'PSSFWKZ6!($G(PSSFWRST))  I '$G(^PS(51,"B",PSSFWRGH,PSSFWKZ6)) D
"RTN","PSSDSAPI",138,0)
 .K PSSFWKZ7,PSSFWKZ8
"RTN","PSSDSAPI",139,0)
 .S PSSFWKZ7=$P($G(^PS(51,PSSFWKZ6,0)),"^",8)
"RTN","PSSDSAPI",140,0)
 .Q:'$G(PSSFWKZ7)
"RTN","PSSDSAPI",141,0)
 .S PSSFWKZ8=1440/PSSFWKZ7 I PSSFWKZ8'>1 S PSSFWRST=1 Q
"RTN","PSSDSAPI",142,0)
 .I PSSFWKZ8?.N S PSSFWRST=PSSFWKZ8,PSSFWPR1=1
"RTN","PSSDSAPI",143,0)
 Q
"RTN","PSSDSAPI",144,0)
 ;
"RTN","PSSDSAPI",145,0)
 ;
"RTN","PSSDSAPI",146,0)
NUMB ;Frequency passed in as a number
"RTN","PSSDSAPI",147,0)
 S PSSFWFLG=0 K PSSFWRST
"RTN","PSSDSAPI",148,0)
 N PSSFWDIS,PSSFWGRT,PSSFWMNT,PSSFWEEK,PSSFWXWK,PSSFWXMN
"RTN","PSSDSAPI",149,0)
 S PSSFWDIS=1440/PSSFWFR I PSSFWDIS?.N S PSSFWFLG=1,PSSFWRST=PSSFWDIS,PSSFWPR1=1 Q
"RTN","PSSDSAPI",150,0)
 I PSSFWDIS'<1 Q
"RTN","PSSDSAPI",151,0)
 S PSSFWGRT=PSSFWFR/1440
"RTN","PSSDSAPI",152,0)
 I PSSFWGRT?.N D  Q
"RTN","PSSDSAPI",153,0)
 .S PSSFWMNT=PSSFWGRT/30 I PSSFWMNT?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWMNT_"L",PSSFWPR1=1 Q
"RTN","PSSDSAPI",154,0)
 .S PSSFWEEK=PSSFWGRT/7 I PSSFWEEK?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWEEK_"W",PSSFWPR1=1 Q
"RTN","PSSDSAPI",155,0)
 .S PSSFWFLG=1,PSSFWRST="Q"_PSSFWGRT_"D",PSSFWPR1=1 Q
"RTN","PSSDSAPI",156,0)
 I PSSFWFR'>10080 S PSSFWXWK=10080/PSSFWFR I PSSFWXWK?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWXWK_"W",PSSFWPR1=1 Q
"RTN","PSSDSAPI",157,0)
 S PSSFWXMN=43200/PSSFWFR I PSSFWXMN?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWXMN_"L",PSSFWPR1=1 Q
"RTN","PSSDSAPI",158,0)
 Q
"RTN","PSSDSAPI",159,0)
 ;
"RTN","PSSDSAPI",160,0)
 ;
"RTN","PSSDSAPI",161,0)
STN ;Standard Logic
"RTN","PSSDSAPI",162,0)
 S PSSFWFLG=0 K PSSFWRST I $G(PSSFWSC)="" Q
"RTN","PSSDSAPI",163,0)
 N PSSFWLP2,PSSFWAA,PSSFWAAD,PSSFWAAM,PSSFWAMN,PSSFWAWK,PSSFWAXL,PSSFWAXW
"RTN","PSSDSAPI",164,0)
 F PSSFWLP2=0:0 S PSSFWLP2=$O(^PS(51.1,"APPSJ",PSSFWSC,PSSFWLP2)) Q:'PSSFWLP2!(PSSFWFLG)  D
"RTN","PSSDSAPI",165,0)
 .K PSSFWAA,PSSFWAAD
"RTN","PSSDSAPI",166,0)
 .S PSSFWAA=$P($G(^PS(51.1,PSSFWLP2,0)),"^",3)
"RTN","PSSDSAPI",167,0)
 .Q:'$G(PSSFWAA)
"RTN","PSSDSAPI",168,0)
 .S PSSFWAAD=1440/PSSFWAA
"RTN","PSSDSAPI",169,0)
 .I PSSFWAAD?.N S PSSFWRST=PSSFWAAD,PSSFWFLG=1 Q
"RTN","PSSDSAPI",170,0)
 .I PSSFWAAD>1 Q
"RTN","PSSDSAPI",171,0)
 .S PSSFWAAM=PSSFWAA/1440
"RTN","PSSDSAPI",172,0)
 .I PSSFWAAM?.N D  Q
"RTN","PSSDSAPI",173,0)
 ..S PSSFWAMN=PSSFWAAM/30 I PSSFWAMN?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWAMN_"L" Q
"RTN","PSSDSAPI",174,0)
 ..S PSSFWAWK=PSSFWAAM/7 I PSSFWAWK?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWAWK_"W" Q
"RTN","PSSDSAPI",175,0)
 ..S PSSFWFLG=1,PSSFWRST="Q"_PSSFWAAM_"D" Q
"RTN","PSSDSAPI",176,0)
 .I PSSFWAA'>10080 S PSSFWAXW=10080/PSSFWAA I PSSFWAXW?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWAXW_"W" Q
"RTN","PSSDSAPI",177,0)
 .S PSSFWAXL=43200/PSSFWAA I PSSFWAXL?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWAXL_"L" Q
"RTN","PSSDSAPI",178,0)
 I PSSFWFLG D DURLS I PSSFWFLG S PSSFWPR1=1 Q
"RTN","PSSDSAPI",179,0)
 I PSSFWSC?1"Q"1N.N1"H" S PSSFWRST=PSSFWSC,PSSFWFLG=1 D DURLS I PSSFWFLG S PSSFWPR1=1
"RTN","PSSDSAPI",180,0)
 Q
"RTN","PSSDSAPI",181,0)
 ;
"RTN","PSSDSAPI",182,0)
 ;
"RTN","PSSDSAPI",183,0)
STNO ;Standard Logic part 2, using File 51, For Outpatient Orders only
"RTN","PSSDSAPI",184,0)
 S PSSFWFLG=0 K PSSFWRST I $G(PSSFWSC)="" Q
"RTN","PSSDSAPI",185,0)
 N PSSFWLP3,PSSFWBA,PSSFWBAD,PSSFWBAM,PSSFWBMN,PSSFWBWK,PSSFWBXL,PSSFWBXW
"RTN","PSSDSAPI",186,0)
 F PSSFWLP3=0:0 S PSSFWLP3=$O(^PS(51,"B",PSSFWSC,PSSFWLP3)) Q:'PSSFWLP3!(PSSFWFLG)  I '$G(^PS(51,"B",PSSFWSC,PSSFWLP3)) D
"RTN","PSSDSAPI",187,0)
 .K PSSFWBA,PSSFWBAD
"RTN","PSSDSAPI",188,0)
 .S PSSFWBA=$P($G(^PS(51,PSSFWLP3,0)),"^",8)
"RTN","PSSDSAPI",189,0)
 .Q:'$G(PSSFWBA)
"RTN","PSSDSAPI",190,0)
 .S PSSFWBAD=1440/PSSFWBA
"RTN","PSSDSAPI",191,0)
 .I PSSFWBAD?.N S PSSFWRST=PSSFWBAD,PSSFWFLG=1 Q
"RTN","PSSDSAPI",192,0)
 .I PSSFWBAD>1 Q
"RTN","PSSDSAPI",193,0)
 .S PSSFWBAM=PSSFWBA/1440
"RTN","PSSDSAPI",194,0)
 .I PSSFWBAM?.N D  Q
"RTN","PSSDSAPI",195,0)
 ..S PSSFWBMN=PSSFWBAM/30 I PSSFWBMN?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWBMN_"L" Q
"RTN","PSSDSAPI",196,0)
 ..S PSSFWBWK=PSSFWBAM/7 I PSSFWBWK?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWBWK_"W" Q
"RTN","PSSDSAPI",197,0)
 ..S PSSFWFLG=1,PSSFWRST="Q"_PSSFWBAM_"D" Q
"RTN","PSSDSAPI",198,0)
 .I PSSFWBA'>10080 S PSSFWBXW=10080/PSSFWBA I PSSFWBXW?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWBXW_"W" Q
"RTN","PSSDSAPI",199,0)
 .S PSSFWBXL=43200/PSSFWBA I PSSFWBXL?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWBXL_"L" Q
"RTN","PSSDSAPI",200,0)
 I PSSFWFLG D DURLS I PSSFWFLG S PSSFWPR1=1 Q
"RTN","PSSDSAPI",201,0)
 I PSSFWSC?1"Q"1N.N1"H" S PSSFWRST=PSSFWSC,PSSFWFLG=1 D DURLS I PSSFWFLG S PSSFWPR1=1
"RTN","PSSDSAPI",202,0)
 Q
"RTN","PSSDSAPI",203,0)
 ;
"RTN","PSSDSAPI",204,0)
 ;
"RTN","PSSDSAPI",205,0)
DS() ; Return 1 if Dose Checks are enabled, return 0 if Dose Checks are not enabled
"RTN","PSSDSAPI",206,0)
 Q $S($P($G(^PS(59.7,1,81)),"^"):1,1:"0^Maximum Single Dose Order Check is not available; please complete a manual check for appropriate Dosing.")
"RTN","PSSDSAPI",207,0)
 ;
"RTN","PSSDSAPI",208,0)
 ;
"RTN","PSSDSAPI",209,0)
IV(PSSADFOI) ;Return Additive Frequency default to CPRS, Forum DBIA 5425
"RTN","PSSDSAPI",210,0)
 ;PSSADFOI = File 50.7 Internal Entry Number
"RTN","PSSDSAPI",211,0)
 N PSSADFRS,PSSADFIN,PSSADFLP,PSSADFXX,PSSADFHD,PSSADFNN,PSSADFER,PSSADFCT
"RTN","PSSDSAPI",212,0)
 S PSSADFRS="",(PSSADFXX,PSSADFCT)=0
"RTN","PSSDSAPI",213,0)
 I '$G(PSSADFOI) Q PSSADFRS
"RTN","PSSDSAPI",214,0)
 F PSSADFLP=0:0 S PSSADFLP=$O(^PS(52.6,"AOI",PSSADFOI,PSSADFLP)) Q:'PSSADFLP!(PSSADFXX)  D
"RTN","PSSDSAPI",215,0)
 .S PSSADFIN=$P($G(^PS(52.6,PSSADFLP,"I")),"^")
"RTN","PSSDSAPI",216,0)
 .I PSSADFIN,PSSADFIN'>DT Q
"RTN","PSSDSAPI",217,0)
 .S PSSADFNN=PSSADFLP_","
"RTN","PSSDSAPI",218,0)
 .S PSSADFHD=$$GET1^DIQ(52.6,PSSADFNN,18,"I",,"PSSADFER") I PSSADFHD="" S PSSADFXX=1 Q
"RTN","PSSDSAPI",219,0)
 .I 'PSSADFCT S PSSADFRS=PSSADFHD S PSSADFCT=1 Q
"RTN","PSSDSAPI",220,0)
 .I PSSADFHD'=PSSADFRS S PSSADFXX=1
"RTN","PSSDSAPI",221,0)
 I PSSADFXX S PSSADFRS=""
"RTN","PSSDSAPI",222,0)
 Q PSSADFRS
"RTN","PSSDSAPI",223,0)
 ;
"RTN","PSSDSAPI",224,0)
 ;
"RTN","PSSDSAPI",225,0)
BSA(PSSBSADF) ;
"RTN","PSSDSAPI",226,0)
 I '$G(PSSBSADF) Q "0^0"
"RTN","PSSDSAPI",227,0)
 N DFN,VADM,VAPTYP,VAHOW,VAROOT,VAERR,VA,X1,X2,X,%Y,PSSBSAW1,PSSBSAW2,PSSBSAH1,PSSBSAH2,GMRVSTR,PSSBSAB2,PSSBSAH3
"RTN","PSSDSAPI",228,0)
 S DFN=PSSBSADF
"RTN","PSSDSAPI",229,0)
 S (PSSBSAW2,PSSBSAH2,PSSBSAB2,PSSBSAH3)=0
"RTN","PSSDSAPI",230,0)
 S GMRVSTR="WT" K X D EN6^GMRVUTL
"RTN","PSSDSAPI",231,0)
 S PSSBSAW1=$P(X,"^",8) I PSSBSAW1 S PSSBSAW2=PSSBSAW1/2.2
"RTN","PSSDSAPI",232,0)
 S DFN=PSSBSADF
"RTN","PSSDSAPI",233,0)
 S GMRVSTR="HT" K X D EN6^GMRVUTL
"RTN","PSSDSAPI",234,0)
 S PSSBSAH1=$P(X,"^",8) I PSSBSAH1 S PSSBSAH2=.0254*PSSBSAH1,PSSBSAH3=$J(PSSBSAH1*2.54,0,2)
"RTN","PSSDSAPI",235,0)
 ;Using DuBios formula for BSA calculation, and sending in 2 decimal places
"RTN","PSSDSAPI",236,0)
 I $G(PSSBSAW2),$G(PSSBSAH2) S PSSBSAB2=.20247*(PSSBSAH2**.725)*(PSSBSAW2**.425)
"RTN","PSSDSAPI",237,0)
 ;I $G(PSSBSAW2),$G(PSSBSAH2) S PSSBSAB2=$J((((PSSBSAW2*PSSBSAH2)/3600)**.5),0,2)    Mosteller BSA Formula
"RTN","PSSDSAPI",238,0)
 Q PSSBSAH3_"^"_PSSBSAW2_"^"_PSSBSAB2
"RTN","PSSDSAPI",239,0)
 ;
"RTN","PSSDSAPI",240,0)
 ;
"RTN","PSSDSAPI",241,0)
UNITD(PSSVUTUN) ;Find First DataBank Unit, can't do DIC Lookup because of exact match check
"RTN","PSSDSAPI",242,0)
 ;Returns Null or First DataBank Unit for text passed in
"RTN","PSSDSAPI",243,0)
 N PSSVUTX,PSSVUTZ,PSSVUTAA,PSSVUTFL
"RTN","PSSDSAPI",244,0)
 S PSSVUTFL=0 I $G(PSSVUTUN)="" S PSSVUTZ="" G UNITDX
"RTN","PSSDSAPI",245,0)
 S PSSVUTAA=$$UP^XLFSTR(PSSVUTUN)
"RTN","PSSDSAPI",246,0)
UNITDP ;
"RTN","PSSDSAPI",247,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"B",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="",$P($G(^PS(51.24,PSSVUTX,0)),"^",3)=0 G UNITDX
"RTN","PSSDSAPI",248,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"C",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="",$P($G(^PS(51.24,PSSVUTX,0)),"^",3)=0 G UNITDX
"RTN","PSSDSAPI",249,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"D",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="",$P($G(^PS(51.24,PSSVUTX,0)),"^",3)=0 G UNITDX
"RTN","PSSDSAPI",250,0)
 K PSSVUTZ I 'PSSVUTFL,$G(PSSVUTUN)["/" S PSSVUTFL=1,PSSVUTAA=$P(PSSVUTUN,"/"),PSSVUTAA=$$UP^XLFSTR(PSSVUTAA) G:PSSVUTAA'="" UNITDP
"RTN","PSSDSAPI",251,0)
UNITDX ;
"RTN","PSSDSAPI",252,0)
 Q $G(PSSVUTZ)
"RTN","PSSDSAPI",253,0)
 ;
"RTN","PSSDSAPI",254,0)
 ;
"RTN","PSSDSAPI",255,0)
DURLS ;If Duration is less that 24 hours, make Frequency adjustments if applicable
"RTN","PSSDSAPI",256,0)
 ;Only check Frequencies of a whole number or in the format of Q#H
"RTN","PSSDSAPI",257,0)
 N PSSDK1,PSSDK2,PSSDK3,PSSDK4,PSSDK5,PSSDK6
"RTN","PSSDSAPI",258,0)
 S (PSSDK4,PSSFWPR7)=PSSFWRST
"RTN","PSSDSAPI",259,0)
 I $G(PSSFWDRL)="" Q
"RTN","PSSDSAPI",260,0)
 S PSSDK1=$$DRT^PSSDSAPD(PSSFWDRL) I PSSDK1'<1440!(PSSDK1'>0) Q
"RTN","PSSDSAPI",261,0)
 S PSSDK2=1440/PSSDK1
"RTN","PSSDSAPI",262,0)
 I PSSDK4?.N D  Q
"RTN","PSSDSAPI",263,0)
 .S PSSDK5=PSSDK4/PSSDK2
"RTN","PSSDSAPI",264,0)
 .I PSSDK5<1 K PSSFWRST S PSSFWFLG=0 Q
"RTN","PSSDSAPI",265,0)
 .S PSSDK6=$J(PSSDK5,0,0)
"RTN","PSSDSAPI",266,0)
 .S PSSFWRST=PSSDK6
"RTN","PSSDSAPI",267,0)
 I PSSDK4?1"Q"1N.N1"H" D  Q
"RTN","PSSDSAPI",268,0)
 .S PSSDK3=$$FRCON^PSSDSAPK(PSSDK4)
"RTN","PSSDSAPI",269,0)
 .S PSSDK5=PSSDK3/PSSDK2
"RTN","PSSDSAPI",270,0)
 .I PSSDK5<1 K PSSFWRST S PSSFWFLG=0 Q
"RTN","PSSDSAPI",271,0)
 .S PSSDK6=$J(PSSDK5,0,0)
"RTN","PSSDSAPI",272,0)
 .S PSSFWRST=PSSDK6
"RTN","PSSDSAPI",273,0)
 Q
"RTN","PSSDSAPI",274,0)
 ;
"RTN","PSSDSAPI",275,0)
 ;
"RTN","PSSDSAPI",276,0)
DLTM(PSSNVTOI) ;Check if all drugs for a Non-VA Med order are exempt, if so, kill Input exceptions and Quit
"RTN","PSSDSAPI",277,0)
 N PSSNVT1,PSSNVTFL,PSSNVTIN
"RTN","PSSDSAPI",278,0)
 S PSSNVTFL=1
"RTN","PSSDSAPI",279,0)
 F PSSNVT1=0:0 S PSSNVT1=$O(^PSDRUG("ASP",PSSNVTOI,PSSNVT1)) Q:'PSSNVT1!('PSSNVTFL)  D
"RTN","PSSDSAPI",280,0)
 .I $P($G(^PSDRUG(PSSNVT1,2)),"^",3)'["X" Q
"RTN","PSSDSAPI",281,0)
 .S PSSNVTIN=$P($G(^PSDRUG(PSSNVT1,"I")),"^") I PSSNVTIN,PSSNVTIN<DT Q
"RTN","PSSDSAPI",282,0)
 .S PSSNVTFL=$$EXMT^PSSDSAPI(PSSNVT1)
"RTN","PSSDSAPI",283,0)
 Q PSSNVTFL
"RTN","PSSDSAPI",284,0)
 ;
"RTN","PSSDSAPI",285,0)
 ;
"RTN","PSSDSAPI",286,0)
EMSY() ;Return 1 if there are matched supplies, no active drugs, regardless of Package use
"RTN","PSSDSAPI",287,0)
 N PSSKST1,PSSKST2,PSSKST3,PSSKST4,PSSKST5,PSSKST6,PSSKST9
"RTN","PSSDSAPI",288,0)
 S (PSSKST9,PSSKST6)=0
"RTN","PSSDSAPI",289,0)
 F PSSKST1=0:0 S PSSKST1=$O(^PSDRUG("ASP",PSSNBOI,PSSKST1)) Q:'PSSKST1!(PSSKST9)  D
"RTN","PSSDSAPI",290,0)
 .S PSSKST4=0,PSSKST2=$P($G(^PSDRUG(PSSKST1,"I")),"^") I PSSKST2,PSSKST2'>DT S PSSKST4=1
"RTN","PSSDSAPI",291,0)
 .S PSSKST5=$$SUP(PSSKST1)
"RTN","PSSDSAPI",292,0)
 .I 'PSSKST5,'PSSKST4 S PSSKST9=1 Q
"RTN","PSSDSAPI",293,0)
 .I 'PSSKST4,PSSKST5 S PSSKST6=1
"RTN","PSSDSAPI",294,0)
 I 'PSSKST9,PSSKST6 S $P(PSSNBRS,";",5)=0 Q 0
"RTN","PSSDSAPI",295,0)
 Q 1
"RTN","PSSDSAPK")
0^10^B226082485
"RTN","PSSDSAPK",1,0)
PSSDSAPK ;BIR/RTR-Miscellaneous APIs for Dose Call ;09/02/09
"RTN","PSSDSAPK",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,168,160**;9/30/97;Build 76
"RTN","PSSDSAPK",3,0)
 ;
"RTN","PSSDSAPK",4,0)
 ;
"RTN","PSSDSAPK",5,0)
 ;Disregard Package Use and Inactive Date in File 50, so you can still get General Dosing Guidelines
"RTN","PSSDSAPK",6,0)
 ;Return Dispense Drug for Orderable Item
"RTN","PSSDSAPK",7,0)
 ;PSSGTOI = Orderable Item
"RTN","PSSDSAPK",8,0)
 ;PSSGTPK = Package O for Outpatient, N for Non-VA Med, I for Inpatient
"RTN","PSSDSAPK",9,0)
 ;PSSGTRTE = Med Route Internal Entry Number
"RTN","PSSDSAPK",10,0)
 ;PSSGTAB = String containing A for Additive, B for Solution
"RTN","PSSDSAPK",11,0)
 ;PSSGTRES = result - 0 for No Drug found, or File 50 Internal Entry Number
"RTN","PSSDSAPK",12,0)
DRG(PSSGTOI,PSSGTPK,PSSGTRTE,PSSGTAB) ;
"RTN","PSSDSAPK",13,0)
 I '$G(PSSGTOI) Q 0
"RTN","PSSDSAPK",14,0)
 I $G(PSSGTPK)'="O",$G(PSSGTPK)'="X",$G(PSSGTPK)'="I" Q 0
"RTN","PSSDSAPK",15,0)
 N PSSGTRES,PSSGTPM,PSSGT1,PSSGT2,PSSGT3,PSSGT4,PSSGT5,PSSGTHL1,PSSGTHL2
"RTN","PSSDSAPK",16,0)
 S PSSGTPM=$S(PSSGTPK="I":"U",1:PSSGTPK)
"RTN","PSSDSAPK",17,0)
 S (PSSGTRES,PSSGTHL1,PSSGTHL2)=0
"RTN","PSSDSAPK",18,0)
 I PSSGTPK="I",$G(PSSGTRTE),$P($G(^PS(51.2,PSSGTRTE,0)),"^",6)=1 I $G(PSSGTAB)["A"!($G(PSSGTAB)["B") G DRGINP
"RTN","PSSDSAPK",19,0)
 F PSSGT1=0:0 S PSSGT1=$O(^PSDRUG("ASP",PSSGTOI,PSSGT1)) Q:'PSSGT1!(PSSGTHL2)  D
"RTN","PSSDSAPK",20,0)
 .S PSSGT3=$P($G(^PSDRUG(PSSGT1,"ND")),"^"),PSSGT4=$P($G(^PSDRUG(PSSGT1,"ND")),"^",3)
"RTN","PSSDSAPK",21,0)
 .I 'PSSGT3!('PSSGT4) Q
"RTN","PSSDSAPK",22,0)
 .S PSSGT5=$P($$PROD0^PSNAPIS(PSSGT3,PSSGT4),"^",7) I +$G(PSSGT5)'>0 Q
"RTN","PSSDSAPK",23,0)
 .I $$EXMT^PSSDSAPI(PSSGT1) Q
"RTN","PSSDSAPK",24,0)
 .S:'PSSGTHL1 PSSGTHL1=PSSGT1
"RTN","PSSDSAPK",25,0)
 .I $P($G(^PSDRUG(PSSGT1,2)),"^",3)'[PSSGTPM Q
"RTN","PSSDSAPK",26,0)
 .S PSSGT2=$P($G(^PSDRUG(PSSGT1,"I")),"^") I PSSGT2,PSSGT2<DT Q
"RTN","PSSDSAPK",27,0)
 .S PSSGTHL2=PSSGT1
"RTN","PSSDSAPK",28,0)
 S PSSGTRES=$S(PSSGTHL2:PSSGTHL2,PSSGTHL1:PSSGTHL1,1:0)
"RTN","PSSDSAPK",29,0)
 Q PSSGTRES
"RTN","PSSDSAPK",30,0)
 ;
"RTN","PSSDSAPK",31,0)
 ;
"RTN","PSSDSAPK",32,0)
DRGINP ;Inpatient Order with IV Route
"RTN","PSSDSAPK",33,0)
 S PSSDSIVF=1  ;Added in 2.0 to set Input exception if no drug found
"RTN","PSSDSAPK",34,0)
 N PSSGT6,PSSGT7,PSSGT8,PSSGTN1,PSSGTN3,PSSGTN4
"RTN","PSSDSAPK",35,0)
 I PSSGTAB["A" D
"RTN","PSSDSAPK",36,0)
 .F PSSGT6=0:0 S PSSGT6=$O(^PS(52.6,"AOI",PSSGTOI,PSSGT6)) Q:'PSSGT6!(PSSGTRES)  D
"RTN","PSSDSAPK",37,0)
 ..S PSSGT7=$P($G(^PS(52.6,PSSGT6,"I")),"^") I PSSGT7,PSSGT7'>DT Q
"RTN","PSSDSAPK",38,0)
 ..S PSSGT8=$P($G(^PS(52.6,PSSGT6,0)),"^",2) I 'PSSGT8 Q
"RTN","PSSDSAPK",39,0)
 ..;Dispense Drug can be inactive, and no need to check package use
"RTN","PSSDSAPK",40,0)
 ..S PSSGTN1=$P($G(^PSDRUG(PSSGT8,"ND")),"^"),PSSGTN3=$P($G(^PSDRUG(PSSGT8,"ND")),"^",3)
"RTN","PSSDSAPK",41,0)
 ..I 'PSSGTN1!('PSSGTN3) Q
"RTN","PSSDSAPK",42,0)
 ..S PSSGTN4=$P($$PROD0^PSNAPIS(PSSGTN1,PSSGTN3),"^",7) I +$G(PSSGTN4)'>0 Q
"RTN","PSSDSAPK",43,0)
 ..I $$EXMT^PSSDSAPI(PSSGT8) Q
"RTN","PSSDSAPK",44,0)
 ..S PSSGTRES=PSSGT8
"RTN","PSSDSAPK",45,0)
 I PSSGTRES Q PSSGTRES
"RTN","PSSDSAPK",46,0)
 I PSSGTAB["B" D
"RTN","PSSDSAPK",47,0)
 .F PSSGT6=0:0 S PSSGT6=$O(^PS(52.7,"AOI",PSSGTOI,PSSGT6)) Q:'PSSGT6!(PSSGTRES)  D
"RTN","PSSDSAPK",48,0)
 ..I $P($G(^PS(52.7,PSSGT6,0)),"^",14)'=1 Q
"RTN","PSSDSAPK",49,0)
 ..S PSSGT7=$P($G(^PS(52.7,PSSGT6,"I")),"^") I PSSGT7,PSSGT7'>DT Q
"RTN","PSSDSAPK",50,0)
 ..S PSSGT8=$P($G(^PS(52.7,PSSGT6,0)),"^",2) I 'PSSGT8 Q
"RTN","PSSDSAPK",51,0)
 ..;Dispense Drug can be inactive, and no need to check package use
"RTN","PSSDSAPK",52,0)
 ..S PSSGTN1=$P($G(^PSDRUG(PSSGT8,"ND")),"^"),PSSGTN3=$P($G(^PSDRUG(PSSGT8,"ND")),"^",3)
"RTN","PSSDSAPK",53,0)
 ..I 'PSSGTN1!('PSSGTN3) Q
"RTN","PSSDSAPK",54,0)
 ..S PSSGTN4=$P($$PROD0^PSNAPIS(PSSGTN1,PSSGTN3),"^",7) I +$G(PSSGTN4)'>0 Q
"RTN","PSSDSAPK",55,0)
 ..I $$EXMT^PSSDSAPI(PSSGT8) Q
"RTN","PSSDSAPK",56,0)
 ..S PSSGTRES=PSSGT8
"RTN","PSSDSAPK",57,0)
 Q PSSGTRES
"RTN","PSSDSAPK",58,0)
 ;
"RTN","PSSDSAPK",59,0)
 ;
"RTN","PSSDSAPK",60,0)
PRE(PSSLGTOI,PSSDIAG) ;Determine if CPRS needs to do order checks
"RTN","PSSDSAPK",61,0)
 ;PSSLGTOI = File 50.7 Internal Entry Number
"RTN","PSSDSAPK",62,0)
 ;PSSDIAG = CPRS order dialog (U:Inpatient; I:IV Fluids; O:Outpatient; N:Non-VA Meds)
"RTN","PSSDSAPK",63,0)
 ; If PSSDIAG is "I" then DO NOT use this call for additve entries.
"RTN","PSSDSAPK",64,0)
 ;If 1 is returned then CPRS needs to do enhanced order checks.  This means it is either a UD,
"RTN","PSSDSAPK",65,0)
 ; Outpatient, Non-VA, additive, or a premix solution.
"RTN","PSSDSAPK",66,0)
 ;If 0 is returned then enhanced order check is not needed to perform.
"RTN","PSSDSAPK",67,0)
 ;
"RTN","PSSDSAPK",68,0)
 I '+$G(PSSLGTOI) Q 0
"RTN","PSSDSAPK",69,0)
 I $G(PSSDIAG)="" Q 1
"RTN","PSSDSAPK",70,0)
 I PSSDIAG="O" Q 1
"RTN","PSSDSAPK",71,0)
 I PSSDIAG="N" Q 1
"RTN","PSSDSAPK",72,0)
 I PSSDIAG="I" Q +$$SOL^PSSDSAPA(PSSLGTOI)
"RTN","PSSDSAPK",73,0)
 I PSSDIAG="U" Q $$IPM^PSSDSAPA(PSSLGTOI)
"RTN","PSSDSAPK",74,0)
 Q 1
"RTN","PSSDSAPK",75,0)
 ;
"RTN","PSSDSAPK",76,0)
 ;
"RTN","PSSDSAPK",77,0)
CONV(PSSCVTVL) ;Convert hours into format for Dose API for Inpatient Medications
"RTN","PSSDSAPK",78,0)
 N PSSCVTRS,PSSCVT1,PSSCVT2,PSSCVT3
"RTN","PSSDSAPK",79,0)
 S PSSCVTRS=""
"RTN","PSSDSAPK",80,0)
 I '$G(PSSCVTVL) Q PSSCVTRS
"RTN","PSSDSAPK",81,0)
 S PSSCVT1=+PSSCVTVL
"RTN","PSSDSAPK",82,0)
 I PSSCVT1<1 S PSSCVT2=PSSCVT1*60 S PSSCVT3=1440/PSSCVT2 S PSSCVTRS=$J(PSSCVT3,0,0) S:PSSCVTRS=24 PSSCVTRS="Q1H" Q PSSCVTRS
"RTN","PSSDSAPK",83,0)
 S PSSCVT2=$J(PSSCVT1,0,0) S PSSCVTRS="Q"_PSSCVT2_"H"
"RTN","PSSDSAPK",84,0)
 Q PSSCVTRS
"RTN","PSSDSAPK",85,0)
 ;
"RTN","PSSDSAPK",86,0)
 ;
"RTN","PSSDSAPK",87,0)
ITEM ;Only Orderable Item passed in, no Dispense Drug
"RTN","PSSDSAPK",88,0)
 N PSSDBI1,PSSDBI2,PSSDBI3,PSSDBI4,PSSDBI5,PSSDBI6,PSSDBI7,PSSDBI8,PSSDBI9,PSSDBI91,PSSDBI92,PSSDBI93,PSSDBI94
"RTN","PSSDSAPK",89,0)
 S PSSDBI1=$G(PSSDSLCL)
"RTN","PSSDSAPK",90,0)
 I $L(PSSDBI1)'>0 Q
"RTN","PSSDSAPK",91,0)
 S PSSDBI1=$$UP^XLFSTR(PSSDBI1)
"RTN","PSSDSAPK",92,0)
 ;Strip out commas up until first character that's not a number, or a decimal
"RTN","PSSDSAPK",93,0)
 S PSSDBI6=0 F PSSDBI7=1:1:$L(PSSDBI1) Q:PSSDBI6  S PSSDBI8=$E(PSSDBI1,PSSDBI7) I PSSDBI8'?1N,PSSDBI8'?1".",PSSDBI8'?1"," S PSSDBI6=PSSDBI7
"RTN","PSSDSAPK",94,0)
 I PSSDBI6=1 Q
"RTN","PSSDSAPK",95,0)
 S PSSDBI9=$S('PSSDBI6:$L(PSSDBI1),1:(PSSDBI6-1))
"RTN","PSSDSAPK",96,0)
 S PSSDBI91=$E(PSSDBI1,1,PSSDBI9),PSSDBI92=$E(PSSDBI1,(PSSDBI9+1),$L(PSSDBI1))
"RTN","PSSDSAPK",97,0)
 S PSSDBI93=$TR(PSSDBI91,",","")
"RTN","PSSDSAPK",98,0)
 S PSSDBI1=PSSDBI93_PSSDBI92
"RTN","PSSDSAPK",99,0)
 I $E(PSSDBI1)=0 S PSSDBI1=$E(PSSDBI1,2,$L(PSSDBI1))
"RTN","PSSDSAPK",100,0)
 I $L(PSSDBI1)'>0 Q
"RTN","PSSDSAPK",101,0)
 S PSSDBI2=+PSSDBI1
"RTN","PSSDSAPK",102,0)
 I 'PSSDBI2!($L(PSSDBI2)=$L(PSSDBI1)) Q
"RTN","PSSDSAPK",103,0)
 S PSSDBI3=$E(PSSDBI1,($L(PSSDBI2)+1),$L(PSSDBI1))
"RTN","PSSDSAPK",104,0)
 S PSSDBI4=$S($E(PSSDBI3)=" ":$E(PSSDBI3,2,$L(PSSDBI3)),1:PSSDBI3)
"RTN","PSSDSAPK",105,0)
 I PSSDBI4="" Q
"RTN","PSSDSAPK",106,0)
 I PSSDBIFL S PSSDBI5=$$UNITD^PSSDSAPI(PSSDBI4)
"RTN","PSSDSAPK",107,0)
 I 'PSSDBIFL S PSSDBI5=$$UNIT^PSSDSAPI(PSSDBI4)
"RTN","PSSDSAPK",108,0)
 I PSSDBI5="" Q
"RTN","PSSDSAPK",109,0)
 S PSSDBAR("AMN")=PSSDBI2,PSSDBAR("UNIT")=PSSDBI5,PSSDBFAL=1
"RTN","PSSDSAPK",110,0)
 Q
"RTN","PSSDSAPK",111,0)
 ;
"RTN","PSSDSAPK",112,0)
 ;
"RTN","PSSDSAPK",113,0)
FRCON(PSSCFQ1) ;Convert frequency into a number for complex dose additions
"RTN","PSSDSAPK",114,0)
 N PSSCFQRS,PSSCFQ2,PSSCFQ3,PSSCFQ4
"RTN","PSSDSAPK",115,0)
 S PSSCFQRS=0
"RTN","PSSDSAPK",116,0)
 I PSSCFQ1?1N.N!(PSSCFQ1?1N.N1"."1N.N) S PSSCFQRS=PSSCFQ1 Q PSSCFQRS
"RTN","PSSDSAPK",117,0)
 I PSSCFQ1?1"Q"1N.N1"H" D  Q PSSCFQRS
"RTN","PSSDSAPK",118,0)
 .S PSSCFQ2=$E(PSSCFQ1,2,($L(PSSCFQ1)-1))
"RTN","PSSDSAPK",119,0)
 .S PSSCFQ3=60*PSSCFQ2
"RTN","PSSDSAPK",120,0)
 .S PSSCFQRS=1440/PSSCFQ3
"RTN","PSSDSAPK",121,0)
 I PSSCFQ1?1"Q"1N.N1"D" D  Q PSSCFQRS
"RTN","PSSDSAPK",122,0)
 .S PSSCFQ2=$E(PSSCFQ1,2,($L(PSSCFQ1)-1))
"RTN","PSSDSAPK",123,0)
 .S PSSCFQRS=1/PSSCFQ2 I PSSCFQRS["." S PSSCFQRS=$J(PSSCFQRS,0,4)
"RTN","PSSDSAPK",124,0)
 I PSSCFQ1?1"Q"1N.N1"W" D  Q PSSCFQRS
"RTN","PSSDSAPK",125,0)
 .S PSSCFQ2=$E(PSSCFQ1,2,($L(PSSCFQ1)-1))
"RTN","PSSDSAPK",126,0)
 .S PSSCFQ3=7*PSSCFQ2
"RTN","PSSDSAPK",127,0)
 .S PSSCFQ4=PSSCFQ3*1440
"RTN","PSSDSAPK",128,0)
 .S PSSCFQRS=1440/PSSCFQ4 I PSSCFQRS["." S PSSCFQRS=$J(PSSCFQRS,0,4)
"RTN","PSSDSAPK",129,0)
 I PSSCFQ1?1"Q"1N.N1"L" D  Q PSSCFQRS
"RTN","PSSDSAPK",130,0)
 .S PSSCFQ2=$E(PSSCFQ1,2,($L(PSSCFQ1)-1))
"RTN","PSSDSAPK",131,0)
 .S PSSCFQ3=30*PSSCFQ2
"RTN","PSSDSAPK",132,0)
 .S PSSCFQ4=PSSCFQ3*1440
"RTN","PSSDSAPK",133,0)
 .S PSSCFQRS=1440/PSSCFQ4 I PSSCFQRS["." S PSSCFQRS=$J(PSSCFQRS,0,4)
"RTN","PSSDSAPK",134,0)
 I PSSCFQ1?1"X"1N.N1"D" D  Q PSSCFQRS
"RTN","PSSDSAPK",135,0)
 .S PSSCFQ2=$E(PSSCFQ1,2,($L(PSSCFQ1)-1))
"RTN","PSSDSAPK",136,0)
 .S PSSCFQRS=PSSCFQ2 I PSSCFQRS["." S PSSCFQRS=$J(PSSCFQRS,0,4)
"RTN","PSSDSAPK",137,0)
 I PSSCFQ1?1"X"1N.N1"W" D  Q PSSCFQRS
"RTN","PSSDSAPK",138,0)
 .S PSSCFQ2=$E(PSSCFQ1,2,($L(PSSCFQ1)-1))
"RTN","PSSDSAPK",139,0)
 .S PSSCFQRS=PSSCFQ2/7
"RTN","PSSDSAPK",140,0)
 .I PSSCFQRS["." S PSSCFQRS=$J(PSSCFQRS,0,4)
"RTN","PSSDSAPK",141,0)
 I PSSCFQ1?1"X"1N.N1"L" D  Q PSSCFQRS
"RTN","PSSDSAPK",142,0)
 .S PSSCFQ2=$E(PSSCFQ1,2,($L(PSSCFQ1)-1))
"RTN","PSSDSAPK",143,0)
 .S PSSCFQ2=$E(PSSCFQ1,2,($L(PSSCFQ1)-1))
"RTN","PSSDSAPK",144,0)
 .S PSSCFQRS=PSSCFQ2/30
"RTN","PSSDSAPK",145,0)
 .I PSSCFQRS["." S PSSCFQRS=$J(PSSCFQRS,0,4)
"RTN","PSSDSAPK",146,0)
 I PSSCFQ1="QOD" S PSSCFQRS=.5 Q PSSCFQRS
"RTN","PSSDSAPK",147,0)
 Q 0
"RTN","PSSDSAPK",148,0)
 ;
"RTN","PSSDSAPK",149,0)
 ;
"RTN","PSSDSAPK",150,0)
SING ;
"RTN","PSSDSAPK",151,0)
 S $P(PSSDBCAR(PSSDBEB1),"^")="S"
"RTN","PSSDSAPK",152,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",8)=1
"RTN","PSSDSAPK",153,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",9)=1
"RTN","PSSDSAPK",154,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",10)=$P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",7)
"RTN","PSSDSAPK",155,0)
 S $P(PSSDBCAR(PSSDBEB1),"^",7)=1
"RTN","PSSDSAPK",156,0)
 Q
"RTN","PSSDSAPK",157,0)
 ;
"RTN","PSSDSAPK",158,0)
 ;
"RTN","PSSDSAPK",159,0)
DOWN ;
"RTN","PSSDSAPK",160,0)
 S:PSSDBASA ^TMP($J,PSSDBASF,"OUT",0)=^TMP($J,PSSDBASE,"OUT",0) S:PSSDBASB ^TMP($J,PSSDBASG,"OUT",0)=^TMP($J,PSSDBASE,"OUT",0)
"RTN","PSSDSAPK",161,0)
 Q
"RTN","PSSDSAPK",162,0)
 ;
"RTN","PSSDSAPK",163,0)
 ;
"RTN","PSSDSAPK",164,0)
BDOSE ;Missing Numeric Dose or Dose Unit
"RTN","PSSDSAPK",165,0)
 I 'PSSDBEB3!($P(PSSDBEB2,"^",11)="") D EXCPS^PSSDSAPD(1) D:$D(PSSDBCAZ(PSSDBEB1,"FRQ_ERROR")) EXCPS^PSSDSAPD(2) S PSSDBDGO=1 Q
"RTN","PSSDSAPK",166,0)
 S $P(PSSDBCAR(PSSDBEB1),"^",20)=1 I '$P(PSSDBCAR(PSSDBEB1),"^",5) D EXCPS^PSSDSAPD(1) D:$D(PSSDBCAZ(PSSDBEB1,"FRQ_ERROR")) EXCPS^PSSDSAPD(2) S PSSDBFTX(PSSDBEB1,"FTX_ERROR")="" Q
"RTN","PSSDSAPK",167,0)
 S PSSDBDGO=1
"RTN","PSSDSAPK",168,0)
 D EXCPS^PSSDSAPD(1)
"RTN","PSSDSAPK",169,0)
 I $D(PSSDBCAZ(PSSDBEB1,"FRQ_ERROR")) D EXCPS^PSSDSAPD(2)
"RTN","PSSDSAPK",170,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",5)=1
"RTN","PSSDSAPK",171,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",8)=1
"RTN","PSSDSAPK",172,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",9)=1
"RTN","PSSDSAPK",173,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",7)="DAY"
"RTN","PSSDSAPK",174,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",10)="DAY"
"RTN","PSSDSAPK",175,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",6)=$$DUNIT^PSSDSEXC S PSSDBAR("UNIT")=$P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",6) S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",14)=$$DFM^PSSDSEXC
"RTN","PSSDSAPK",176,0)
 S $P(PSSDBCAR(PSSDBEB1),"^",6)=1 S $P(PSSDBCAR(PSSDBEB1),"^",10)=1
"RTN","PSSDSAPK",177,0)
 Q
"RTN","PSSDSAPK",178,0)
 ;
"RTN","PSSDSAPK",179,0)
 ;
"RTN","PSSDSAPK",180,0)
FTX ;Pull Dosing sequences out of Input for complex orders where Free Text Dosage could not be evaluated
"RTN","PSSDSAPK",181,0)
 N PSSDTX1
"RTN","PSSDSAPK",182,0)
 S PSSDTX1="" F  S PSSDTX1=$O(PSSDBFTX(PSSDTX1)) Q:PSSDTX1=""  D
"RTN","PSSDSAPK",183,0)
 .S PSSDBFTX(PSSDTX1,"NODE1")=$G(^TMP($J,PSSDBASE,"IN","DOSE",PSSDTX1))
"RTN","PSSDSAPK",184,0)
 .S PSSDBFTX(PSSDTX1,"NODE2")=$G(^TMP($J,PSSDBASE,"IN","PROSPECTIVE",PSSDTX1))
"RTN","PSSDSAPK",185,0)
 .K ^TMP($J,PSSDBASE,"IN","DOSE",PSSDTX1)
"RTN","PSSDSAPK",186,0)
 .K ^TMP($J,PSSDBASE,"IN","PROSPECTIVE",PSSDTX1)
"RTN","PSSDSAPK",187,0)
 Q
"RTN","PSSDSAPK",188,0)
 ;
"RTN","PSSDSAPK",189,0)
 ;
"RTN","PSSDSAPK",190,0)
FTXRS ;Reset input globals that were pulled because of invalid dosage
"RTN","PSSDSAPK",191,0)
 N PSSDTX2
"RTN","PSSDSAPK",192,0)
 S PSSDTX2="" F  S PSSDTX2=$O(PSSDBFTX(PSSDTX2)) Q:PSSDTX2=""  D
"RTN","PSSDSAPK",193,0)
 .S ^TMP($J,PSSDBASE,"IN","DOSE",PSSDTX2)=PSSDBFTX(PSSDTX2,"NODE1")
"RTN","PSSDSAPK",194,0)
 .S ^TMP($J,PSSDBASE,"IN","PROSPECTIVE",PSSDTX2)=PSSDBFTX(PSSDTX2,"NODE2")
"RTN","PSSDSAPK",195,0)
 Q
"RTN","PSSDSAPK",196,0)
 ;
"RTN","PSSDSAPK",197,0)
 ;
"RTN","PSSDSAPK",198,0)
ERR1() ;Screen out Daily Dose errors for Single Dose Sequences, unless New Daily Dose created based on previous Dosing sequences
"RTN","PSSDSAPK",199,0)
 ;Called from PSSDSEXC
"RTN","PSSDSAPK",200,0)
 N PSSERS,PSSERSU
"RTN","PSSDSAPK",201,0)
 ;I $P($G(PSSDBCAR(PSSDWLP)),"^")'="S"!($P($G(PSSDBCAR(PSSDWLP)),"^",11)) Q 0  ;uncomment line for 2.1, for Daily Dose functionality
"RTN","PSSDSAPK",202,0)
 S PSSERS=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG"))
"RTN","PSSDSAPK",203,0)
 S PSSERSU=$$UP^XLFSTR(PSSERS)
"RTN","PSSDSAPK",204,0)
 I PSSERSU'["DAILY DOSE" Q 0
"RTN","PSSDSAPK",205,0)
 Q 1
"RTN","PSSDSAPK",206,0)
 ;
"RTN","PSSDSAPK",207,0)
 ;
"RTN","PSSDSAPK",208,0)
ERR2() ;Screen out Frequency errors if Dosing Sequence is flagged for Single Dose only 
"RTN","PSSDSAPK",209,0)
 ;Called from PSSDSEXC
"RTN","PSSDSAPK",210,0)
 N PSSERH,PSSERHU,PSSERHRS
"RTN","PSSDSAPK",211,0)
 S PSSERHRS=0
"RTN","PSSDSAPK",212,0)
 D  ;I $P($G(PSSDBCAR(PSSDWE1)),"^",12)!($P($G(PSSDBCAR(PSSDWE1)),"^",5)=0) D  ;Remove 'D' and uncomment line for 2.1
"RTN","PSSDSAPK",213,0)
 .S PSSERH=PSSDWEGC
"RTN","PSSDSAPK",214,0)
 .S PSSERHU=$$UP^XLFSTR(PSSERH)
"RTN","PSSDSAPK",215,0)
 .I PSSERHU["UNDEFINED FREQUENCY"!(PSSERHU["FREQUENCY GREATER") S PSSERHRS=1
"RTN","PSSDSAPK",216,0)
 Q PSSERHRS
"RTN","PSSDSAPK",217,0)
 ;
"RTN","PSSDSAPK",218,0)
 ;
"RTN","PSSDSAPK",219,0)
INFERR ;Infusion Rate Height and Weight Errors
"RTN","PSSDSAPK",220,0)
 I $D(PSSDBFDB(PSSDBLP,"HT_ERROR")) S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"HT_ERROR")=""
"RTN","PSSDSAPK",221,0)
 I $D(PSSDBFDB(PSSDBLP,"WT_ERROR")) S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"WT_ERROR")=""
"RTN","PSSDSAPK",222,0)
 Q
"RTN","PSSDSAPK",223,0)
 ;
"RTN","PSSDSAPK",224,0)
 ;
"RTN","PSSDSAPK",225,0)
INFERRS ;
"RTN","PSSDSAPK",226,0)
 I '$D(PSSDBCAZ(PSSDBEB1,"HT_ERROR")),'$D(PSSDBCAZ(PSSDBEB1,"WT_ERROR")) Q
"RTN","PSSDSAPK",227,0)
 I $D(PSSDBCAZ(PSSDBEB1,"WT_ERROR")),$D(PSSDBCAZ(PSSDBEB1,"HT_ERROR")) D EXCPS^PSSDSAPD(14) Q
"RTN","PSSDSAPK",228,0)
 I '$D(PSSDBCAZ(PSSDBEB1,"HT_ERROR")) D EXCPS^PSSDSAPD(13) Q
"RTN","PSSDSAPK",229,0)
 D EXCPS^PSSDSAPD(12)
"RTN","PSSDSAPK",230,0)
 Q
"RTN","PSSDSAPK",231,0)
 ;
"RTN","PSSDSAPK",232,0)
 ;
"RTN","PSSDSAPK",233,0)
GENERRX ;Set General Dosing Guidelines exception
"RTN","PSSDSAPK",234,0)
 ;This code, not being used, was moved from PSSDSEXC to have a record of old functionality, in case we need it again
"RTN","PSSDSAPK",235,0)
 Q
"RTN","PSSDSAPK",236,0)
 ;
"RTN","PSSDSAPK",237,0)
 N PSSDWF1,PSSDWF2,PSSDWF3,PSSDWF4
"RTN","PSSDSAPK",238,0)
 S PSSDWF2=0 F PSSDWF1=0:0 S PSSDWF1=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE5,PSSDWF1)) Q:'PSSDWF1  S PSSDWF2=PSSDWF1
"RTN","PSSDSAPK",239,0)
 I 'PSSDWF2 D  Q
"RTN","PSSDSAPK",240,0)
 .I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE5,1)="Dosing Checks could not be performed for Drug: "_$P(PSSDBCAR(PSSDWE5),"^",2)
"RTN","PSSDSAPK",241,0)
 .I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"EXCEPTIONS",1)="Dosing Checks could not be performed for Drug: "_$P(PSSDBCAR(PSSDWE5),"^",2)
"RTN","PSSDSAPK",242,0)
 .I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE5,2)="  General Dosing guidelines are not available"
"RTN","PSSDSAPK",243,0)
 .I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"EXCEPTIONS",2)="  General Dosing guidelines are not available"
"RTN","PSSDSAPK",244,0)
 .S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE5,1)="^^^^^^Dosing Checks could not be performed for Drug: "_$P(PSSDBCAR(PSSDWE5),"^",2)_"^^^"_"General Dosing guidelines are not available"
"RTN","PSSDSAPK",245,0)
 S PSSDWF2=PSSDWF2+1
"RTN","PSSDSAPK",246,0)
 S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE5,PSSDWF2)="^^^^^^Dosing Checks could not be performed for Drug: "_$P(PSSDBCAR(PSSDWE5),"^",2)_"^^^"_"General Dosing guidelines are not available"
"RTN","PSSDSAPK",247,0)
 I PSSDBASA D
"RTN","PSSDSAPK",248,0)
 .S PSSDWF3=0
"RTN","PSSDSAPK",249,0)
 .F PSSDWF4=0:0 S PSSDWF4=$O(^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE5,PSSDWF4)) Q:'PSSDWF4  S PSSDWF3=PSSDWF4
"RTN","PSSDSAPK",250,0)
 .S PSSDWF3=PSSDWF3+1
"RTN","PSSDSAPK",251,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE5,PSSDWF3)="  General Dosing guidelines are not available"
"RTN","PSSDSAPK",252,0)
 I PSSDBASB D
"RTN","PSSDSAPK",253,0)
 .S PSSDWF3=0
"RTN","PSSDSAPK",254,0)
 .F PSSDWF4=0:0 S PSSDWF4=$O(^TMP($J,PSSDBASG,"OUT",PSSDWE5,"EXCEPTIONS",PSSDWF4)) Q:'PSSDWF4  S PSSDWF3=PSSDWF4
"RTN","PSSDSAPK",255,0)
 .S PSSDWF3=PSSDWF3+1
"RTN","PSSDSAPK",256,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"EXCEPTIONS",PSSDWF3)="  General Dosing guidelines are not available"
"RTN","PSSDSAPK",257,0)
 Q
"RTN","PSSDSAPK",258,0)
 ;
"RTN","PSSDSAPK",259,0)
 ;
"RTN","PSSDSAPK",260,0)
MTCH() ;Called from PSSDSAPD, looking for Local Possible Dosages Match
"RTN","PSSDSAPK",261,0)
 N PSSDSLTM
"RTN","PSSDSAPK",262,0)
 I $P(PSSDBNOD,"^")=PSSDSLCL Q 1
"RTN","PSSDSAPK",263,0)
 I $E(PSSDSLCL)=0 S PSSDSLTM=$E(PSSDSLCL,2,$L(PSSDSLCL)) I $L(PSSDSLTM)>0,PSSDSLTM=$P(PSSDBNOD,"^") Q 1
"RTN","PSSDSAPK",264,0)
 I $E(PSSDSLCL)'=0 S PSSDSLTM=0_PSSDSLCL I PSSDSLTM=$P(PSSDBNOD,"^") Q 1
"RTN","PSSDSAPK",265,0)
 Q 0
"RTN","PSSDSAPK",266,0)
 ;
"RTN","PSSDSAPK",267,0)
 ;
"RTN","PSSDSAPK",268,0)
DPOP ;Use Pre release logic to find Dose unit and Numeric Dose
"RTN","PSSDSAPK",269,0)
 N PSSDDPOP,PSSDSLPO
"RTN","PSSDSAPK",270,0)
 S PSSDDPOP=$$EN^PSSDSBBP(PSSDBFDB(PSSDBLP,"DRUG_IEN"),PSSDSLCL)
"RTN","PSSDSAPK",271,0)
 I PSSDDPOP S PSSDBAR("AMN")=$P(PSSDDPOP,"^",2),PSSDBAR("UNIT")=$P($G(^PS(51.24,+$P(PSSDDPOP,"^"),0)),"^",2) S PSSDBFAL=1 Q
"RTN","PSSDSAPK",272,0)
 I $E(PSSDSLCL)=0 S PSSDSLPO=$E(PSSDSLCL,2,$L(PSSDSLCL)) I $L(PSSDSLPO)>0 D  I PSSDDPOP S PSSDBAR("AMN")=$P(PSSDDPOP,"^",2),PSSDBAR("UNIT")=$P($G(^PS(51.24,+$P(PSSDDPOP,"^"),0)),"^",2) S PSSDBFAL=1 Q
"RTN","PSSDSAPK",273,0)
 .S PSSDDPOP=$$EN^PSSDSBBP(PSSDBFDB(PSSDBLP,"DRUG_IEN"),PSSDSLPO)
"RTN","PSSDSAPK",274,0)
 I $E(PSSDSLCL)'=0 S PSSDSLPO=0_PSSDSLCL D  I PSSDDPOP S PSSDBAR("AMN")=$P(PSSDDPOP,"^",2),PSSDBAR("UNIT")=$P($G(^PS(51.24,+$P(PSSDDPOP,"^"),0)),"^",2) S PSSDBFAL=1 Q
"RTN","PSSDSAPK",275,0)
 .S PSSDDPOP=$$EN^PSSDSBBP(PSSDBFDB(PSSDBLP,"DRUG_IEN"),PSSDSLPO)
"RTN","PSSDSAPK",276,0)
 Q
"RTN","PSSDSAPK",277,0)
 ;
"RTN","PSSDSAPK",278,0)
 ;
"RTN","PSSDSAPK",279,0)
FRDR ;Check if Duration exists, and is less than Duration of Schedule
"RTN","PSSDSAPK",280,0)
 I $G(PSSDBAR("TYPE"))="SINGLE DOSE" Q
"RTN","PSSDSAPK",281,0)
 N PSSDRSC1,PSSDRSC2,PSSDRSC3,PSSDRSC4,PSSDRSC5
"RTN","PSSDSAPK",282,0)
 S PSSDRSC1=PSSDBFRB(PSSDBFDB(PSSDBLP,"RX_NUM"),"DRATE") I PSSDRSC1="" Q
"RTN","PSSDSAPK",283,0)
 S PSSDRSC3=$$DRT^PSSDSAPD(PSSDRSC1) I PSSDRSC3'>0 Q
"RTN","PSSDSAPK",284,0)
 S PSSDRSC4=1440/PSSDRSC3
"RTN","PSSDSAPK",285,0)
 S PSSDRSC5=$S($P($G(PSSDBAR("FREQZZ")),"^",2)'="":$P(PSSDBAR("FREQZZ"),"^",2),1:PSSDBAR("FREQ"))
"RTN","PSSDSAPK",286,0)
 I PSSDRSC5="" Q
"RTN","PSSDSAPK",287,0)
 S PSSDRSC2=$$FRCON(PSSDRSC5)
"RTN","PSSDSAPK",288,0)
 I PSSDRSC2,PSSDRSC4,PSSDRSC4>PSSDRSC2 D
"RTN","PSSDSAPK",289,0)
 .S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"FRQD_ERROR")=""
"RTN","PSSDSAPK",290,0)
 .S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"FRQ_ERROR")=""
"RTN","PSSDSAPK",291,0)
 Q
"RTN","PSSDSAPK",292,0)
 ;
"RTN","PSSDSAPK",293,0)
 ;
"RTN","PSSDSAPK",294,0)
NOEXP ;Don't show any exceptions for a drug level error
"RTN","PSSDSAPK",295,0)
 N PSSNOE1,PSSNOE2
"RTN","PSSDSAPK",296,0)
 F PSSNOE1=0:0 S PSSNOE1=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSNOE1)) Q:'PSSNOE1  D
"RTN","PSSDSAPK",297,0)
 .S PSSNOE2=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSNOE1)),"^",10) I PSSNOE2="" S PSSNOE9(PSSDWE1)=""!(PSSNOE2["GCNSEQNO") D NOEXPG Q
"RTN","PSSDSAPK",298,0)
 .I PSSNOE2["Drug not matched to NDF"!(PSSNOE2["No active IV Additive/Solution marked for IV fluid order entry") S PSSNOE9(PSSDWE1)="" D NOEXPS
"RTN","PSSDSAPK",299,0)
 Q
"RTN","PSSDSAPK",300,0)
 ;
"RTN","PSSDSAPK",301,0)
 ;
"RTN","PSSDSAPK",302,0)
NOEXPS ;Set Drug level error
"RTN","PSSDSAPK",303,0)
 I PSSNOE2["Drug not matched to NDF" S PSSENHKZ(PSSDWE1)=1
"RTN","PSSDSAPK",304,0)
 I PSSDBASA D
"RTN","PSSDSAPK",305,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,1)=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSNOE1)),"^",7)
"RTN","PSSDSAPK",306,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,2)="  Reason(s): "_$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSNOE1)),"^",10)
"RTN","PSSDSAPK",307,0)
 I PSSDBASB D
"RTN","PSSDSAPK",308,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",1)=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSNOE1)),"^",7)
"RTN","PSSDSAPK",309,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",2)="  Reason(s): "_$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSNOE1)),"^",10)
"RTN","PSSDSAPK",310,0)
 Q
"RTN","PSSDSAPK",311,0)
 ;
"RTN","PSSDSAPK",312,0)
 ;
"RTN","PSSDSAPK",313,0)
NOEXPG ;Set GCNSEQNO exception
"RTN","PSSDSAPK",314,0)
 S PSSENHKZ(PSSDWE1)=1
"RTN","PSSDSAPK",315,0)
 I PSSDBASA D
"RTN","PSSDSAPK",316,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,1)=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSNOE1)),"^",7)
"RTN","PSSDSAPK",317,0)
 I PSSDBASB D
"RTN","PSSDSAPK",318,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",1)=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSNOE1)),"^",7)
"RTN","PSSDSAPK",319,0)
 Q
"RTN","PSSDSAPK",320,0)
 ;
"RTN","PSSDSAPK",321,0)
 ;
"RTN","PSSDSAPK",322,0)
DPL ;Set Dose display text, called from PSSDSAPD
"RTN","PSSDSAPK",323,0)
 S PSSDSDPL(PSSDBFDB(PSSDBLP,"RX_NUM"))=""
"RTN","PSSDSAPK",324,0)
 I $D(PSSDBFDB(PSSDBLP,"DOSE_AMT")),$D(PSSDBFDB(PSSDBLP,"DOSE_UNIT")) S PSSDSDPL(PSSDBFDB(PSSDBLP,"RX_NUM"))=PSSDBFDB(PSSDBLP,"DOSE_AMT")_" "_PSSDBFDB(PSSDBLP,"DOSE_UNIT") D DPLZ Q
"RTN","PSSDSAPK",325,0)
 I $G(PSSDBDS(PSSDBLP,"DRG_AMT")),$G(PSSDBDS(PSSDBLP,"DRG_UNIT"))'="" S PSSDSDPL(PSSDBFDB(PSSDBLP,"RX_NUM"))=$G(PSSDBDS(PSSDBLP,"DRG_AMT"))_" "_$G(PSSDBDS(PSSDBLP,"DRG_UNIT")) D DPLZ Q
"RTN","PSSDSAPK",326,0)
 S PSSDSDPL(PSSDBFDB(PSSDBLP,"RX_NUM"))=$S($G(PSSDBDS(PSSDBLP,"DOSE"))'="":$P($G(PSSDBDS(PSSDBLP,"DOSE")),"&",5),1:$G(PSSDBDS(PSSDBLP,"DO")))
"RTN","PSSDSAPK",327,0)
 Q
"RTN","PSSDSAPK",328,0)
 ;
"RTN","PSSDSAPK",329,0)
 ;
"RTN","PSSDSAPK",330,0)
DPLZ ;
"RTN","PSSDSAPK",331,0)
 I $E(PSSDSDPL(PSSDBFDB(PSSDBLP,"RX_NUM")))="." S PSSDSDPL(PSSDBFDB(PSSDBLP,"RX_NUM"))="0"_PSSDSDPL(PSSDBFDB(PSSDBLP,"RX_NUM"))
"RTN","PSSDSAPK",332,0)
 Q
"RTN","PSSDSAPK",333,0)
 ;
"RTN","PSSDSAPK",334,0)
COMMENT ;
"RTN","PSSDSAPK",335,0)
 ;The following line at DRG+12 was commented out, but needed to uncomment for CCR 4971, but other changes seemed to
"RTN","PSSDSAPK",336,0)
 ;resolve this issue
"RTN","PSSDSAPK",337,0)
 ;.S:'PSSGTHL1 PSSGTHL1=PSSGT1
"RTN","PSSDSAPK",338,0)
 ;Original reason for comment:
"RTN","PSSDSAPK",339,0)
 ;Commented the Package Use and Inactive Date check out in 2.0 because of the logic failure of a Drug Level error from
"RTN","PSSDSAPK",340,0)
 ;CPRS, we check the Drug level error and don't return to error to CPRS if the enhanced order check was shown, to avoid
"RTN","PSSDSAPK",341,0)
 ;duplicate "dosing" error messages. But we need to restore in 2.1 to get General Dosing Guidelines, and look at another
"RTN","PSSDSAPK",342,0)
 ;way to handle the duplicate "dosing" drug level error messages.
"RTN","PSSDSAPK",343,0)
 Q
"RTN","PSSDSAPK",344,0)
 ;
"RTN","PSSDSAPK",345,0)
 ;
"RTN","PSSDSAPK",346,0)
CKWRN ;Set flag indicating a warning exists
"RTN","PSSDSAPK",347,0)
 N PSSWAF1,PSSWAF2,PSSWAF3
"RTN","PSSDSAPK",348,0)
 S PSSWAF3=0 F PSSWAF1=0:0 S PSSWAF1=$O(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSWAF1)) Q:'PSSWAF1!(PSSWAF3)  D
"RTN","PSSDSAPK",349,0)
 .I $G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSWAF1,"TEXT"))'="" D
"RTN","PSSDSAPK",350,0)
 ..S PSSWAF2=$S($G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSWAF1,"SEV"))="Warning":0,1:1)
"RTN","PSSDSAPK",351,0)
 ..I 'PSSWAF2 S $P(PSSDBCAR(PSSDWLP),"^",22)=1,PSSWAF3=1
"RTN","PSSDSAPK",352,0)
 Q
"RTN","PSSDSAPK",353,0)
 ;
"RTN","PSSDSAPK",354,0)
 ;
"RTN","PSSDSAPK",355,0)
ADOSE ;Add DOSE subscript to any EXCEPTION from interface without DOSE subscript
"RTN","PSSDSAPK",356,0)
 I '$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS",PSSDWEX3,"")) Q
"RTN","PSSDSAPK",357,0)
 N PSSDWEZ4,PSSDWEZ5,PSSDWEZ6,PSSDWEZ7
"RTN","PSSDSAPK",358,0)
 S PSSDWEZ4=0 F PSSDWEZ7=0:0 S PSSDWEZ7=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEZ7)) Q:'PSSDWEZ7  S PSSDWEZ4=PSSDWEZ7
"RTN","PSSDSAPK",359,0)
 S PSSDWEZ4=PSSDWEZ4+1
"RTN","PSSDSAPK",360,0)
 F PSSDWEZ5=0:0 S PSSDWEZ5=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS",PSSDWEX3,PSSDWEZ5)) Q:'PSSDWEZ5  D
"RTN","PSSDSAPK",361,0)
 .S PSSDWEZ6=^TMP($J,PSSDBASE,"OUT","EXCEPTIONS",PSSDWEX3,PSSDWEZ5)
"RTN","PSSDSAPK",362,0)
 .S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEZ4)=PSSDWEZ6
"RTN","PSSDSAPK",363,0)
 .I $P(PSSDWEZ6,"^",10)'="" S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEZ4),"^",7)="Maximum Single Dose Check could not be performed for Drug: "_$P(PSSDBCAR(PSSDWEX3),"^",2) ;Changed for 2.0
"RTN","PSSDSAPK",364,0)
 .S PSSDWEZ4=PSSDWEZ4+1
"RTN","PSSDSAPK",365,0)
 Q
"RTN","PSSDSAPL")
0^11^B108677776
"RTN","PSSDSAPL",1,0)
PSSDSAPL ;BIR/RTR-Free Text Dosage Logic ;06/21/10
"RTN","PSSDSAPL",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,160**;9/30/97;Build 76
"RTN","PSSDSAPL",3,0)
 ;
"RTN","PSSDSAPL",4,0)
 ;
"RTN","PSSDSAPL",5,0)
NUM ;Determine Dose Amount and Dose Unit from Free Text Dose
"RTN","PSSDSAPL",6,0)
 ;
"RTN","PSSDSAPL",7,0)
 ;PSSDBV9 = Free Text Dosage
"RTN","PSSDSAPL",8,0)
 ;
"RTN","PSSDSAPL",9,0)
 N PSSDBV9
"RTN","PSSDSAPL",10,0)
 S PSSDBV9=$G(PSSDSLCL)
"RTN","PSSDSAPL",11,0)
 I $L(PSSDBV9)'>0 Q
"RTN","PSSDSAPL",12,0)
 S PSSDBV9=$$UP^XLFSTR(PSSDBV9)
"RTN","PSSDSAPL",13,0)
 ;
"RTN","PSSDSAPL",14,0)
 ;
"RTN","PSSDSAPL",15,0)
 N PSSDBV1,PSSDBV2,PSSDBV3,PSSDBV7,PSSDBV8
"RTN","PSSDSAPL",16,0)
 S PSSDBV3=""
"RTN","PSSDSAPL",17,0)
 S PSSDBV8=$$NUMF I PSSDBV8 S PSSDBAR("AMN")=PSSDBV8,PSSDBAR("UNIT")=PSSDBV3 Q
"RTN","PSSDSAPL",18,0)
 ;
"RTN","PSSDSAPL",19,0)
 ;
"RTN","PSSDSAPL",20,0)
 I $E(PSSDBV9)="." S PSSDBV9="0"_PSSDBV9 S PSSDBV8=$$NUMF I PSSDBV8 S PSSDBAR("AMN")=PSSDBV8,PSSDBAR("UNIT")=PSSDBV3 Q
"RTN","PSSDSAPL",21,0)
 I $E(PSSDBV9)=0 S PSSDBV9=$E(PSSDBV9,2,$L(PSSDBV9)) S PSSDBV8=$$NUMF I PSSDBV8 S PSSDBAR("AMN")=PSSDBV8,PSSDBAR("UNIT")=PSSDBV3
"RTN","PSSDSAPL",22,0)
 Q
"RTN","PSSDSAPL",23,0)
 ;
"RTN","PSSDSAPL",24,0)
 ;
"RTN","PSSDSAPL",25,0)
NUMF() ;
"RTN","PSSDSAPL",26,0)
 S PSSDBV1=$E(PSSDBV9,1,11) I PSSDBV1="ONE FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,12,$L(PSSDBV9)) Q $S($$8:.25,1:0)
"RTN","PSSDSAPL",27,0)
 S PSSDBV1=$E(PSSDBV9,1,11) I PSSDBV1="ONE-FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,12,$L(PSSDBV9)) Q $S($$8:.25,1:0)
"RTN","PSSDSAPL",28,0)
 S PSSDBV1=$E(PSSDBV9,1,4) I PSSDBV1="1/4 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,5,$L(PSSDBV9)) Q $S($$8:.25,1:0)
"RTN","PSSDSAPL",29,0)
 S PSSDBV1=$E(PSSDBV9,1,5) I PSSDBV1="0.25 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,6,$L(PSSDBV9)) Q $S($$8:.25,1:0)
"RTN","PSSDSAPL",30,0)
 ;
"RTN","PSSDSAPL",31,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="ONE THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:.33,1:0)
"RTN","PSSDSAPL",32,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="ONE-THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:.33,1:0)
"RTN","PSSDSAPL",33,0)
 S PSSDBV1=$E(PSSDBV9,1,4) I PSSDBV1="1/3 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,5,$L(PSSDBV9)) Q $S($$8:.33,1:0)
"RTN","PSSDSAPL",34,0)
 S PSSDBV1=$E(PSSDBV9,1,5) I PSSDBV1="0.33 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,6,$L(PSSDBV9)) Q $S($$8:.33,1:0)
"RTN","PSSDSAPL",35,0)
 ;
"RTN","PSSDSAPL",36,0)
 S PSSDBV1=$E(PSSDBV9,1,9) I PSSDBV1="ONE HALF ",$$7 S PSSDBV2=$E(PSSDBV9,10,$L(PSSDBV9)) I $$8 Q .5
"RTN","PSSDSAPL",37,0)
 S PSSDBV1=$E(PSSDBV9,1,9) I PSSDBV1="ONE-HALF ",$$7 S PSSDBV2=$E(PSSDBV9,10,$L(PSSDBV9)) I $$8 Q .5
"RTN","PSSDSAPL",38,0)
 S PSSDBV1=$E(PSSDBV9,1,4) I PSSDBV1="1/2 ",$$7 S PSSDBV2=$E(PSSDBV9,5,$L(PSSDBV9)) I $$8 Q .5
"RTN","PSSDSAPL",39,0)
 S PSSDBV1=$E(PSSDBV9,1,4) I PSSDBV1="0.5 ",$$7 S PSSDBV2=$E(PSSDBV9,5,$L(PSSDBV9)) I $$8 Q .5
"RTN","PSSDSAPL",40,0)
 ;
"RTN","PSSDSAPL",41,0)
 S PSSDBV1=$E(PSSDBV9,1,6) I PSSDBV1="0.5-1 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,7,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",42,0)
 S PSSDBV1=$E(PSSDBV9,1,8) I PSSDBV1="0.5 - 1 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,9,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",43,0)
 S PSSDBV1=$E(PSSDBV9,1,9) I PSSDBV1="0.5 TO 1 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,10,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",44,0)
 S PSSDBV1=$E(PSSDBV9,1,9) I PSSDBV1="0.5 OR 1 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,10,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",45,0)
 S PSSDBV1=$E(PSSDBV9,1,6) I PSSDBV1="1/2-1 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,7,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",46,0)
 S PSSDBV1=$E(PSSDBV9,1,8) I PSSDBV1="1/2 - 1 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,9,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",47,0)
 S PSSDBV1=$E(PSSDBV9,1,9) I PSSDBV1="1/2 TO 1 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,10,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",48,0)
 S PSSDBV1=$E(PSSDBV9,1,9) I PSSDBV1="1/2 OR 1 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,10,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",49,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="ONE-HALF TO ONE " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",50,0)
 S PSSDBV1=$E(PSSDBV9,1,18) I PSSDBV1="ONE - HALF TO ONE " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,19,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",51,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="ONE HALF TO ONE " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",52,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="ONE-HALF OR ONE " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",53,0)
 S PSSDBV1=$E(PSSDBV9,1,18) I PSSDBV1="ONE - HALF OR ONE " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,19,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",54,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="ONE HALF OR ONE " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",55,0)
 ;
"RTN","PSSDSAPL",56,0)
 S PSSDBV1=$E(PSSDBV9,1,2) I PSSDBV1="1 ",$$7 S PSSDBV2=$E(PSSDBV9,3,$L(PSSDBV9)) I $$8 Q 1
"RTN","PSSDSAPL",57,0)
 S PSSDBV1=$E(PSSDBV9,1,4) I PSSDBV1="ONE ",$$7 S PSSDBV2=$E(PSSDBV9,5,$L(PSSDBV9)) I $$8 Q 1
"RTN","PSSDSAPL",58,0)
 ;
"RTN","PSSDSAPL",59,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="1 AND 1/4 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:1.25,1:0)
"RTN","PSSDSAPL",60,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="ONE AND ONE FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:1.25,1:0)
"RTN","PSSDSAPL",61,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="ONE AND ONE-FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:1.25,1:0)
"RTN","PSSDSAPL",62,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="1 AND ONE FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:1.25,1:0)
"RTN","PSSDSAPL",63,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="1 AND ONE-FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:1.25,1:0)
"RTN","PSSDSAPL",64,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="ONE AND 1/4 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:1.25,1:0)
"RTN","PSSDSAPL",65,0)
 ;
"RTN","PSSDSAPL",66,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="1 AND 1/3 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:1.33,1:0)
"RTN","PSSDSAPL",67,0)
 S PSSDBV1=$E(PSSDBV9,1,18) I PSSDBV1="ONE AND ONE THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,19,$L(PSSDBV9)) Q $S($$8:1.33,1:0)
"RTN","PSSDSAPL",68,0)
 S PSSDBV1=$E(PSSDBV9,1,18) I PSSDBV1="ONE AND ONE-THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,19,$L(PSSDBV9)) Q $S($$8:1.33,1:0)
"RTN","PSSDSAPL",69,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="1 AND ONE THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:1.33,1:0)
"RTN","PSSDSAPL",70,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="1 AND ONE-THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:1.33,1:0)
"RTN","PSSDSAPL",71,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="ONE AND 1/3 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:1.33,1:0)
"RTN","PSSDSAPL",72,0)
 ;
"RTN","PSSDSAPL",73,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="1 AND 1/2 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:1.5,1:0)
"RTN","PSSDSAPL",74,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="ONE AND ONE HALF " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:1.5,1:0)
"RTN","PSSDSAPL",75,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="ONE AND ONE-HALF " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:1.5,1:0)
"RTN","PSSDSAPL",76,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="1 AND ONE HALF " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:1.5,1:0)
"RTN","PSSDSAPL",77,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="1 AND ONE-HALF " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:1.5,1:0)
"RTN","PSSDSAPL",78,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="ONE AND 1/2 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:1.5,1:0)
"RTN","PSSDSAPL",79,0)
 ;
"RTN","PSSDSAPL",80,0)
 S PSSDBV1=$E(PSSDBV9,1,4) I PSSDBV1="1-2 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,5,$L(PSSDBV9)) Q $S($$8:2,1:0)
"RTN","PSSDSAPL",81,0)
 S PSSDBV1=$E(PSSDBV9,1,6) I PSSDBV1="1 - 2 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,7,$L(PSSDBV9)) Q $S($$8:2,1:0)
"RTN","PSSDSAPL",82,0)
 S PSSDBV1=$E(PSSDBV9,1,7) I PSSDBV1="1 TO 2 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,8,$L(PSSDBV9)) Q $S($$8:2,1:0)
"RTN","PSSDSAPL",83,0)
 S PSSDBV1=$E(PSSDBV9,1,7) I PSSDBV1="1 OR 2 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,8,$L(PSSDBV9)) Q $S($$8:2,1:0)
"RTN","PSSDSAPL",84,0)
 S PSSDBV1=$E(PSSDBV9,1,11) I PSSDBV1="ONE TO TWO " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,12,$L(PSSDBV9)) Q $S($$8:2,1:0)
"RTN","PSSDSAPL",85,0)
 S PSSDBV1=$E(PSSDBV9,1,11) I PSSDBV1="ONE OR TWO " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,12,$L(PSSDBV9)) Q $S($$8:2,1:0)
"RTN","PSSDSAPL",86,0)
 S PSSDBV1=$E(PSSDBV9,1,8) I PSSDBV1="ONE-TWO " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,9,$L(PSSDBV9)) Q $S($$8:2,1:0)
"RTN","PSSDSAPL",87,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="ONE - TWO " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:2,1:0)
"RTN","PSSDSAPL",88,0)
 ;
"RTN","PSSDSAPL",89,0)
 S PSSDBV1=$E(PSSDBV9,1,2) I PSSDBV1="2 ",$$7 S PSSDBV2=$E(PSSDBV9,3,$L(PSSDBV9)) I $$8 Q 2
"RTN","PSSDSAPL",90,0)
 S PSSDBV1=$E(PSSDBV9,1,4) I PSSDBV1="TWO ",$$7 S PSSDBV2=$E(PSSDBV9,5,$L(PSSDBV9)) I $$8 Q 2
"RTN","PSSDSAPL",91,0)
 ;
"RTN","PSSDSAPL",92,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="2 AND 1/4 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:2.25,1:0)
"RTN","PSSDSAPL",93,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="TWO AND ONE FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:2.25,1:0)
"RTN","PSSDSAPL",94,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="TWO AND ONE-FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:2.25,1:0)
"RTN","PSSDSAPL",95,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="2 AND ONE FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:2.25,1:0)
"RTN","PSSDSAPL",96,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="2 AND ONE-FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:2.25,1:0)
"RTN","PSSDSAPL",97,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="TWO AND 1/4 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:2.25,1:0)
"RTN","PSSDSAPL",98,0)
 ;
"RTN","PSSDSAPL",99,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="2 AND 1/3 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:2.33,1:0)
"RTN","PSSDSAPL",100,0)
 S PSSDBV1=$E(PSSDBV9,1,18) I PSSDBV1="TWO AND ONE THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,19,$L(PSSDBV9)) Q $S($$8:2.33,1:0)
"RTN","PSSDSAPL",101,0)
 S PSSDBV1=$E(PSSDBV9,1,18) I PSSDBV1="TWO AND ONE-THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,19,$L(PSSDBV9)) Q $S($$8:2.33,1:0)
"RTN","PSSDSAPL",102,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="2 AND ONE THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:2.33,1:0)
"RTN","PSSDSAPL",103,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="2 AND ONE-THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:2.33,1:0)
"RTN","PSSDSAPL",104,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="TWO AND 1/3 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:2.33,1:0)
"RTN","PSSDSAPL",105,0)
 ;
"RTN","PSSDSAPL",106,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="2 AND 1/2 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:2.5,1:0)
"RTN","PSSDSAPL",107,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="TWO AND ONE HALF " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:2.5,1:0)
"RTN","PSSDSAPL",108,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="TWO AND ONE-HALF " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:2.5,1:0)
"RTN","PSSDSAPL",109,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="2 AND ONE HALF " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:2.5,1:0)
"RTN","PSSDSAPL",110,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="2 AND ONE-HALF " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:2.5,1:0)
"RTN","PSSDSAPL",111,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="TWO AND 1/2 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:2.5,1:0)
"RTN","PSSDSAPL",112,0)
 ;
"RTN","PSSDSAPL",113,0)
 S PSSDBV1=$E(PSSDBV9,1,4) I PSSDBV1="2-3 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,5,$L(PSSDBV9)) Q $S($$8:3,1:0)
"RTN","PSSDSAPL",114,0)
 S PSSDBV1=$E(PSSDBV9,1,6) I PSSDBV1="2 - 3 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,7,$L(PSSDBV9)) Q $S($$8:3,1:0)
"RTN","PSSDSAPL",115,0)
 S PSSDBV1=$E(PSSDBV9,1,7) I PSSDBV1="2 TO 3 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,8,$L(PSSDBV9)) Q $S($$8:3,1:0)
"RTN","PSSDSAPL",116,0)
 S PSSDBV1=$E(PSSDBV9,1,7) I PSSDBV1="2 OR 3 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,8,$L(PSSDBV9)) Q $S($$8:3,1:0)
"RTN","PSSDSAPL",117,0)
 S PSSDBV1=$E(PSSDBV9,1,13) I PSSDBV1="TWO TO THREE " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,14,$L(PSSDBV9)) Q $S($$8:3,1:0)
"RTN","PSSDSAPL",118,0)
 S PSSDBV1=$E(PSSDBV9,1,13) I PSSDBV1="TWO OR THREE " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,14,$L(PSSDBV9)) Q $S($$8:3,1:0)
"RTN","PSSDSAPL",119,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="TWO-THREE " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:3,1:0)
"RTN","PSSDSAPL",120,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="TWO - THREE " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:3,1:0)
"RTN","PSSDSAPL",121,0)
 ;
"RTN","PSSDSAPL",122,0)
 S PSSDBV1=$E(PSSDBV9,1,2) I PSSDBV1="3 ",$$7 S PSSDBV2=$E(PSSDBV9,3,$L(PSSDBV9)) I $$8 Q 3
"RTN","PSSDSAPL",123,0)
 S PSSDBV1=$E(PSSDBV9,1,6) I PSSDBV1="THREE ",$$7 S PSSDBV2=$E(PSSDBV9,7,$L(PSSDBV9)) I $$8 Q 3
"RTN","PSSDSAPL",124,0)
 ;
"RTN","PSSDSAPL",125,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="3 AND 1/4 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:3.25,1:0)
"RTN","PSSDSAPL",126,0)
 S PSSDBV1=$E(PSSDBV9,1,21) I PSSDBV1="THREE AND ONE FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,22,$L(PSSDBV9)) Q $S($$8:3.25,1:0)
"RTN","PSSDSAPL",127,0)
 S PSSDBV1=$E(PSSDBV9,1,21) I PSSDBV1="THREE AND ONE-FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,22,$L(PSSDBV9)) Q $S($$8:3.25,1:0)
"RTN","PSSDSAPL",128,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="3 AND ONE FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:3.25,1:0)
"RTN","PSSDSAPL",129,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="3 AND ONE-FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:3.25,1:0)
"RTN","PSSDSAPL",130,0)
 S PSSDBV1=$E(PSSDBV9,1,14) I PSSDBV1="THREE AND 1/4 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,15,$L(PSSDBV9)) Q $S($$8:3.25,1:0)
"RTN","PSSDSAPL",131,0)
 ;
"RTN","PSSDSAPL",132,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="3 AND 1/3 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:3.33,1:0)
"RTN","PSSDSAPL",133,0)
 S PSSDBV1=$E(PSSDBV9,1,20) I PSSDBV1="THREE AND ONE THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,21,$L(PSSDBV9)) Q $S($$8:3.33,1:0)
"RTN","PSSDSAPL",134,0)
 S PSSDBV1=$E(PSSDBV9,1,20) I PSSDBV1="THREE AND ONE-THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,21,$L(PSSDBV9)) Q $S($$8:3.33,1:0)
"RTN","PSSDSAPL",135,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="3 AND ONE THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:3.33,1:0)
"RTN","PSSDSAPL",136,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="3 AND ONE-THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:3.33,1:0)
"RTN","PSSDSAPL",137,0)
 S PSSDBV1=$E(PSSDBV9,1,14) I PSSDBV1="THREE AND 1/3 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,15,$L(PSSDBV9)) Q $S($$8:3.33,1:0)
"RTN","PSSDSAPL",138,0)
 ;
"RTN","PSSDSAPL",139,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="3 AND 1/2 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:3.5,1:0)
"RTN","PSSDSAPL",140,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="THREE AND ONE HALF " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:3.5,1:0)
"RTN","PSSDSAPL",141,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="THREE AND ONE-HALF " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:3.5,1:0)
"RTN","PSSDSAPL",142,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="3 AND ONE HALF " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:3.5,1:0)
"RTN","PSSDSAPL",143,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="3 AND ONE-HALF " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:3.5,1:0)
"RTN","PSSDSAPL",144,0)
 S PSSDBV1=$E(PSSDBV9,1,14) I PSSDBV1="THREE AND 1/2 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,15,$L(PSSDBV9)) Q $S($$8:3.5,1:0)
"RTN","PSSDSAPL",145,0)
 ;
"RTN","PSSDSAPL",146,0)
 ;
"RTN","PSSDSAPL",147,0)
 S PSSDBV7=$$NUMC^PSSDSBPB Q:PSSDBV7'="" PSSDBV7
"RTN","PSSDSAPL",148,0)
 S PSSDBV7=$$NUMC^PSSDSBPC Q:PSSDBV7'="" PSSDBV7
"RTN","PSSDSAPL",149,0)
 S PSSDBV7=$$NUMC^PSSDSBPD Q PSSDBV7
"RTN","PSSDSAPL",150,0)
 ;
"RTN","PSSDSAPL",151,0)
 ;
"RTN","PSSDSAPL",152,0)
8() ;Look for Unit - PSSDBIFL set in PSSSAPD, indicates if Order has a Dispense Drug, or just an Orderable Item
"RTN","PSSDSAPL",153,0)
 S PSSDBV3="" D
"RTN","PSSDSAPL",154,0)
 .I PSSDBIFL S PSSDBV3=$$UNITD^PSSDSAPI(PSSDBV2) Q
"RTN","PSSDSAPL",155,0)
 .S PSSDBV3=$$UNIT^PSSDSAPI(PSSDBV2)
"RTN","PSSDSAPL",156,0)
 Q $S(PSSDBV3="":0,1:1)
"RTN","PSSDSAPL",157,0)
 ;
"RTN","PSSDSAPL",158,0)
 ;
"RTN","PSSDSAPL",159,0)
7() ;Validate text follow the numeric part of the text
"RTN","PSSDSAPL",160,0)
 I $L(PSSDBV9)'>$L(PSSDBV1) Q 0
"RTN","PSSDSAPL",161,0)
 Q 1
"RTN","PSSDSAPL",162,0)
 ;
"RTN","PSSDSAPL",163,0)
TEST ;used for testing numeric dose multiplier from Local Possible Dosage
"RTN","PSSDSAPL",164,0)
 N X,Y,PSSDBV1,PSSDBV2,PSSDBV3,PSSDBV7,PSSDBV8,DIR,DIRUT,DTOUT,PSSDBIFL
"RTN","PSSDSAPL",165,0)
 S (PSSDSLCL,PSSDBV3,PSSDBIFL)=""
"RTN","PSSDSAPL",166,0)
TEST1 ;
"RTN","PSSDSAPL",167,0)
 K DIR S DIR("A")="Possible Dosage",DIR(0)="FO^1:40"     ;,DIR("?")="Enter a possible dosage for testing numeric dose multiplier."
"RTN","PSSDSAPL",168,0)
 D ^DIR G TESTE:$G(DIRUT)!($G(DTOUT))!(X="")
"RTN","PSSDSAPL",169,0)
 K DIR S (PSSDBV9,PSSDSLCL)=Y W !!,$$NUMF^PSSDSAPL,!!
"RTN","PSSDSAPL",170,0)
 G TEST1
"RTN","PSSDSAPL",171,0)
TESTE ;
"RTN","PSSDSAPL",172,0)
 Q
"RTN","PSSDSAPM")
0^7^B247605421
"RTN","PSSDSAPM",1,0)
PSSDSAPM ;BIR/RTR-Dose Check utilities routine ;09/13/10
"RTN","PSSDSAPM",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,168,160**;9/30/97;Build 76
"RTN","PSSDSAPM",3,0)
 ;
"RTN","PSSDSAPM",4,0)
 ;
"RTN","PSSDSAPM",5,0)
 ;DRG - returns best Dispense Drug to use for Order Checks when only the Orderable Item is available
"RTN","PSSDSAPM",6,0)
 ;Input:
"RTN","PSSDSAPM",7,0)
 ;   PSSNBOI - Pharmacy orderable Item from #50.7
"RTN","PSSDSAPM",8,0)
 ;   PSSNBPK - package Use,  I for Inpatient, O for Outpatient, X for Non-VA Meds
"RTN","PSSDSAPM",9,0)
 ;   PSSNBOR - defined only if being called from CPRS, 1 for Enhanced Order Checks, 2 for Dosing
"RTN","PSSDSAPM",10,0)
 ;Output:
"RTN","PSSDSAPM",11,0)
 ;   nnn;nnn;nnnn - First piece is File 50 Internal Number, Second piece is VA Generic Internal number, Third piece
"RTN","PSSDSAPM",12,0)
 ;   will be the GCNSEQNO number. Piece 1 ';' is 0 if no drug found.                              
"RTN","PSSDSAPM",13,0)
 ;   Piece 2 will be null if drug not matched to National Drug File
"RTN","PSSDSAPM",14,0)
 ;   Piece 3 will be the GCNSEQNO number, if the NDF match has a GCNSEQNO number
"RTN","PSSDSAPM",15,0)
 ;   Piece 4 is returned as 1 if the call is from CPRS for enhanced order checks, and it indicates no drug was returned
"RTN","PSSDSAPM",16,0)
 ;   or a drug was returned, but there is an active supply tied to the Orderable Item, indicating CPRS should also do
"RTN","PSSDSAPM",17,0)
 ;   the duplicate supply check
"RTN","PSSDSAPM",18,0)
 ;   Piece 5 is returned as 1 if CPRS is getting a drug for the Enhanced Order Checks call, and they should
"RTN","PSSDSAPM",19,0)
 ;   display the error message for all order checks and not do the Dosing call
"RTN","PSSDSAPM",20,0)
 ;
"RTN","PSSDSAPM",21,0)
 ;
"RTN","PSSDSAPM",22,0)
 ;hierarchy: (Drug must be active)
"RTN","PSSDSAPM",23,0)
 ;1 - Exact Package Match, matched to NDF with GCNSEQNO
"RTN","PSSDSAPM",24,0)
 ;2 - No package match, but second choice package exists, matched to NDF with GCNSEQNO
"RTN","PSSDSAPM",25,0)
 ;3 - No package match, but third choice package exists, matched to NDF with GCNSEQNO
"RTN","PSSDSAPM",26,0)
 ;4 - No package match, but fourth choice package exists, matched to NDF with GCNSEQNO
"RTN","PSSDSAPM",27,0)
 ;5 - No package match, matched to NDF with GCNSEQNO
"RTN","PSSDSAPM",28,0)
 ;6 - Exact Package Match, matched to NDF with no GCNSEQNO
"RTN","PSSDSAPM",29,0)
 ;7 - No package match, but second choice package exists, matched to NDF with no GCNSEQNO
"RTN","PSSDSAPM",30,0)
 ;8 - No package match, but third choice package exists, matched to NDF with no GCNSEQNO
"RTN","PSSDSAPM",31,0)
 ;9 - No package match, but fourth choice package exists, matched to NDF with no GCNSEQNO
"RTN","PSSDSAPM",32,0)
 ;10 - No package match, matched to NDF with no GCNSEQNO
"RTN","PSSDSAPM",33,0)
 ;11 - Exact Package Match, not matched to NDF
"RTN","PSSDSAPM",34,0)
 ;12 - No package match, but second choice package exists, not matched to NDF
"RTN","PSSDSAPM",35,0)
 ;13 - No package match, but third choice package exists, not matched to NDF
"RTN","PSSDSAPM",36,0)
 ;14 - No package match, but fourth choice package exists, not matched to NDF
"RTN","PSSDSAPM",37,0)
 ;15 - No package match, package is null or some other package that is not one of the 4 primary packages (O, I U, X), matched to NDF
"RTN","PSSDSAPM",38,0)
 ;16 - No package match, not matched to NDF, package is null or some other package that is not one of the 4 primary packages (O, I U, X)
"RTN","PSSDSAPM",39,0)
 ;
"RTN","PSSDSAPM",40,0)
 ;** CPRS and Inpatient always passes in "I" for PSSNBPK variable, so drugs with "I" and "U" application packages are 
"RTN","PSSDSAPM",41,0)
 ;         evaluated as either or in the APP subroutine.  In the hierarchy above 1 or 2,  6 or 7 and 11 or 12 are 
"RTN","PSSDSAPM",42,0)
 ;         considered to be exact matches.  Outpatient evaluates "I" and "U" separately.  
"RTN","PSSDSAPM",43,0)
 ;
"RTN","PSSDSAPM",44,0)
 ;Second/Third Choice packages:
"RTN","PSSDSAPM",45,0)
 ;Outpatient - U for Unit dose, I for IV, then X for Non-VA med
"RTN","PSSDSAPM",46,0)
 ;Inpatient - O for outpatient then X
"RTN","PSSDSAPM",47,0)
 ;Non-VA Meds - O, U then I
"RTN","PSSDSAPM",48,0)
 ;
"RTN","PSSDSAPM",49,0)
 ;PSNBLOW holds current number in array, only reset array entry if lower number is found
"RTN","PSSDSAPM",50,0)
 ;PSSNBSTP stops the loop because you found the best possible drug, no need to set PSSNBLOW in this case
"RTN","PSSDSAPM",51,0)
 ;
"RTN","PSSDSAPM",52,0)
 ;
"RTN","PSSDSAPM",53,0)
DRG(PSSNBOI,PSSNBPK,PSSNBOR) ;
"RTN","PSSDSAPM",54,0)
 I '$G(PSSNBOI) Q "0;;"_$S($G(PSSNBOR)=1&($G(PSSNBPK)="I"!($G(PSSNBPK)="U")):";1;1",$G(PSSNBOR)=1:";1",1:"")
"RTN","PSSDSAPM",55,0)
 I $G(PSSNBPK)'="O",$G(PSSNBPK)'="I",$G(PSSNBPK)'="U",$G(PSSNBPK)'="X" Q "0;;"_$S($G(PSSNBOR)=1:";1;1",1:"")
"RTN","PSSDSAPM",56,0)
 N PSSNB1,PSSNBRS,PSSNBSTP,PSSNBIN,PSSNBAPP,PSSNBLOW,PSSNBARR,PSSNBAP1,PSSNBARX,PSSNONE,PSSNS1,PSSNS2,PSSNS3,PSSNS4,PSSINPT,PSSNBOF,PSSNBOD,PSSNBOL,PSSNBOA,PSSNBO3
"RTN","PSSDSAPM",57,0)
 S PSSNBSTP=0,PSSNBLOW=16
"RTN","PSSDSAPM",58,0)
 S PSSNBRS="0;;"
"RTN","PSSDSAPM",59,0)
 S PSSINPT=0
"RTN","PSSDSAPM",60,0)
 ;package preference sequence defined
"RTN","PSSDSAPM",61,0)
 I PSSNBPK["O" S PSSNS1="O",PSSNS2="U",PSSNS3="I",PSSNS4="X"
"RTN","PSSDSAPM",62,0)
 I PSSNBPK["I" S PSSNS1="I",PSSNS2="U",PSSNS3="O",PSSNS4="X",PSSINPT=1
"RTN","PSSDSAPM",63,0)
 I PSSNBPK["U" S PSSNS1="U",PSSNS2="I",PSSNS3="O",PSSNS4="X"
"RTN","PSSDSAPM",64,0)
 I PSSNBPK["X" S PSSNS1="X",PSSNS2="O",PSSNS3="U",PSSNS4="I"
"RTN","PSSDSAPM",65,0)
 F PSSNB1=0:0 S PSSNB1=$O(^PSDRUG("ASP",PSSNBOI,PSSNB1)) Q:'PSSNB1!(PSSNBSTP)  D:'$$DREX
"RTN","PSSDSAPM",66,0)
 .S PSSNBIN=$P($G(^PSDRUG(PSSNB1,"I")),"^") I PSSNBIN,PSSNBIN'>DT Q
"RTN","PSSDSAPM",67,0)
 .S PSSNBAPP=$P($G(^PSDRUG(PSSNB1,2)),"^",3)
"RTN","PSSDSAPM",68,0)
 .S PSSNBAP1=$$GCN
"RTN","PSSDSAPM",69,0)
 .D APP
"RTN","PSSDSAPM",70,0)
 S PSSNBARX=$O(PSSNBARR(0))
"RTN","PSSDSAPM",71,0)
 I PSSNBARX S PSSNBRS=$G(PSSNBARR(PSSNBARX))
"RTN","PSSDSAPM",72,0)
 I $G(PSSNBOR)=1 D
"RTN","PSSDSAPM",73,0)
 .I '$P(PSSNBRS,";") S $P(PSSNBRS,";",4)=1 Q
"RTN","PSSDSAPM",74,0)
 .S PSSNBOF=0 F PSSNBOL=0:0 S PSSNBOL=$O(^PSDRUG("ASP",PSSNBOI,PSSNBOL)) Q:'PSSNBOL!(PSSNBOF)  D
"RTN","PSSDSAPM",75,0)
 ..I '$$SUP^PSSDSAPI(PSSNBOL) Q
"RTN","PSSDSAPM",76,0)
 ..S PSSNBO3=$P($G(^PSDRUG(PSSNBOL,2)),"^",3),PSSNBOA=$S(PSSNBPK["I"!(PSSNBPK["U"):1,1:0)
"RTN","PSSDSAPM",77,0)
 ..I PSSNBOA,PSSNBO3'["I",PSSNBO3'["O" Q
"RTN","PSSDSAPM",78,0)
 ..I 'PSSNBOA,PSSNBO3'["O",PSSNBO3'["X" Q
"RTN","PSSDSAPM",79,0)
 ..S PSSNBOD=$P($G(^PSDRUG(PSSNBOL,"I")),"^") I PSSNBOD,PSSNBOD'>DT Q
"RTN","PSSDSAPM",80,0)
 ..S $P(PSSNBRS,";",4)=1,PSSNBOF=1 Q
"RTN","PSSDSAPM",81,0)
 I $G(PSSNBOR)=1,'$P(PSSNBRS,";") I $$EMSY^PSSDSAPI S $P(PSSNBRS,";",5)=$$EMS I '$P(PSSNBRS,";",5) S $P(PSSNBRS,";",5)=$$EMSX
"RTN","PSSDSAPM",82,0)
 Q PSSNBRS
"RTN","PSSDSAPM",83,0)
 ;
"RTN","PSSDSAPM",84,0)
DREX() ;Quit if drug is exempt from order check
"RTN","PSSDSAPM",85,0)
 I $G(PSSINCFO)!($G(PSSNBOR)=2) Q $$EXMT^PSSDSAPI(PSSNB1)
"RTN","PSSDSAPM",86,0)
 Q $$SUP^PSSDSAPI(PSSNB1)
"RTN","PSSDSAPM",87,0)
 ;
"RTN","PSSDSAPM",88,0)
EMS() ;Sets piece 5 of output to 1 if CPRS needs to show error message and not do Dose check
"RTN","PSSDSAPM",89,0)
 I PSSNBPK'="U",PSSNBPK'="I" Q 0
"RTN","PSSDSAPM",90,0)
 I $$PRE^PSSDSAPK(PSSNBOI,"U")=1 Q 1
"RTN","PSSDSAPM",91,0)
 Q 0
"RTN","PSSDSAPM",92,0)
 ;
"RTN","PSSDSAPM",93,0)
EMSX() ;Sets piece 5 of output to 1 if no active drugs are tied to the orderable Item
"RTN","PSSDSAPM",94,0)
 N PSSKRC1,PSSKRC2,PSSKRC3,PSSKRC4,PSSKRC9
"RTN","PSSDSAPM",95,0)
 S (PSSKRC3,PSSKRC9,PSSKRC4)=0
"RTN","PSSDSAPM",96,0)
 F PSSKRC1=0:0 S PSSKRC1=$O(^PSDRUG("ASP",PSSNBOI,PSSKRC1)) Q:'PSSKRC1!(PSSKRC9)  D
"RTN","PSSDSAPM",97,0)
 .S PSSKRC2=$P($G(^PSDRUG(PSSKRC1,"I")),"^") I PSSKRC2,PSSKRC2'>DT D:'PSSKRC4  Q
"RTN","PSSDSAPM",98,0)
 ..I '$$SUP^PSSDSAPI(PSSKRC1) S PSSKRC4=1
"RTN","PSSDSAPM",99,0)
 .S PSSKRC3=1
"RTN","PSSDSAPM",100,0)
 .I '$$SUP^PSSDSAPI(PSSKRC1) S PSSKRC9=1
"RTN","PSSDSAPM",101,0)
 I 'PSSKRC3,PSSKRC4 S PSSKRC9=1
"RTN","PSSDSAPM",102,0)
 Q PSSKRC9
"RTN","PSSDSAPM",103,0)
 ;
"RTN","PSSDSAPM",104,0)
APP ;
"RTN","PSSDSAPM",105,0)
 I 'PSSINPT,PSSNBAPP[PSSNS1,$P(PSSNBAP1,";",3) S PSSNBARR(1)=PSSNBAP1,PSSNBSTP=1 Q
"RTN","PSSDSAPM",106,0)
 I 'PSSINPT Q:PSSNBLOW<2
"RTN","PSSDSAPM",107,0)
 I 'PSSINPT,PSSNBAPP[PSSNS2,$P(PSSNBAP1,";",3) S PSSNBARR(2)=PSSNBAP1,PSSNBLOW=2 Q
"RTN","PSSDSAPM",108,0)
 I PSSINPT,PSSNBAPP[PSSNS1!(PSSNBAPP[PSSNS2),$P(PSSNBAP1,";",3) S PSSNBARR(1)=PSSNBAP1,PSSNBSTP=1 Q
"RTN","PSSDSAPM",109,0)
 Q:PSSNBLOW<3
"RTN","PSSDSAPM",110,0)
 I PSSNBAPP[PSSNS3,$P(PSSNBAP1,";",3) S PSSNBARR(3)=PSSNBAP1,PSSNBLOW=3 Q
"RTN","PSSDSAPM",111,0)
 Q:PSSNBLOW<4
"RTN","PSSDSAPM",112,0)
 I PSSNBAPP[PSSNS4,$P(PSSNBAP1,";",3) S PSSNBARR(4)=PSSNBAP1,PSSNBLOW=4 Q
"RTN","PSSDSAPM",113,0)
 Q:PSSNBLOW<5
"RTN","PSSDSAPM",114,0)
 I $P(PSSNBAP1,";",3) S PSSNBARR(5)=PSSNBAP1,PSSNBLOW=5 Q
"RTN","PSSDSAPM",115,0)
 Q:PSSNBLOW<6
"RTN","PSSDSAPM",116,0)
 I 'PSSINPT,PSSNBAPP[PSSNS1,PSSNBAP1 S PSSNBARR(6)=PSSNBAP1,PSSNBLOW=6 Q
"RTN","PSSDSAPM",117,0)
 I 'PSSINPT Q:PSSNBLOW<7
"RTN","PSSDSAPM",118,0)
 I 'PSSINPT,PSSNBAPP[PSSNS2,PSSNBAP1 S PSSNBARR(7)=PSSNBAP1,PSSNBLOW=7 Q
"RTN","PSSDSAPM",119,0)
 I PSSINPT,PSSNBAPP[PSSNS1!(PSSNBAPP[PSSNS2),PSSNBAP1 S PSSNBARR(6)=PSSNBAP1,PSSNBLOW=6,PSSNBSTP=1 Q
"RTN","PSSDSAPM",120,0)
 Q:PSSNBLOW<8
"RTN","PSSDSAPM",121,0)
 I PSSNBAPP[PSSNS3,PSSNBAP1 S PSSNBARR(8)=PSSNBAP1,PSSNBLOW=8 Q
"RTN","PSSDSAPM",122,0)
 Q:PSSNBLOW<9
"RTN","PSSDSAPM",123,0)
 I PSSNBAPP[PSSNS4,PSSNBAP1 S PSSNBARR(9)=PSSNBAP1,PSSNBLOW=9 Q
"RTN","PSSDSAPM",124,0)
 Q:PSSNBLOW<10
"RTN","PSSDSAPM",125,0)
 I $P(PSSNBAP1,";",2) S PSSNBARR(10)=PSSNBAP1,PSSNBLOW=10 Q
"RTN","PSSDSAPM",126,0)
 Q:PSSNBLOW<11
"RTN","PSSDSAPM",127,0)
 I 'PSSINPT,PSSNBAPP[PSSNS1 S PSSNBARR(11)=PSSNB1_";;",PSSNBLOW=11 Q
"RTN","PSSDSAPM",128,0)
 I 'PSSINPT Q:PSSNBLOW<12
"RTN","PSSDSAPM",129,0)
 I 'PSSINPT,PSSNBAPP[PSSNS2 S PSSNBARR(12)=PSSNB1_";;",PSSNBLOW=12 Q
"RTN","PSSDSAPM",130,0)
 I PSSINPT,PSSNBAPP[PSSNS1!(PSSNBAPP[PSSNS2) S PSSNBARR(11)=PSSNB1_";;",PSSNBLOW=11,PSSNBSTP=1 Q
"RTN","PSSDSAPM",131,0)
 Q:PSSNBLOW<13
"RTN","PSSDSAPM",132,0)
 I PSSNBAPP[PSSNS3 S PSSNBARR(13)=PSSNB1_";;",PSSNBLOW=13 Q
"RTN","PSSDSAPM",133,0)
 Q:PSSNBLOW<14
"RTN","PSSDSAPM",134,0)
 I PSSNBAPP[PSSNS4 S PSSNBARR(14)=PSSNB1_";;",PSSNBLOW=14 Q
"RTN","PSSDSAPM",135,0)
 Q:PSSNBLOW<15
"RTN","PSSDSAPM",136,0)
 I PSSNBAP1 S PSSNBARR(15)=PSSNBAP1,PSSNBLOW=15 Q
"RTN","PSSDSAPM",137,0)
 Q:PSSNBLOW<16
"RTN","PSSDSAPM",138,0)
 S PSSNBARR(16)=PSSNB1_";;",PSSNBLOW=16
"RTN","PSSDSAPM",139,0)
 Q
"RTN","PSSDSAPM",140,0)
 ;
"RTN","PSSDSAPM",141,0)
GCN() ;Returns drug matching information
"RTN","PSSDSAPM",142,0)
 N PSSNBGC1,PSSNBGC3,PSSNBGRS
"RTN","PSSDSAPM",143,0)
 S PSSNBGC1=$P($G(^PSDRUG(PSSNB1,"ND")),"^"),PSSNBGC3=$P($G(^PSDRUG(PSSNB1,"ND")),"^",3)
"RTN","PSSDSAPM",144,0)
 I 'PSSNBGC1!('PSSNBGC3) Q 0
"RTN","PSSDSAPM",145,0)
 S PSSNBGRS=$$PROD0^PSNAPIS(PSSNBGC1,PSSNBGC3)
"RTN","PSSDSAPM",146,0)
 I $P(PSSNBGRS,"^",7) Q PSSNB1_";"_PSSNBGC1_";"_$P(PSSNBGRS,"^",7)
"RTN","PSSDSAPM",147,0)
 Q PSSNB1_";"_PSSNBGC1
"RTN","PSSDSAPM",148,0)
 ;
"RTN","PSSDSAPM",149,0)
 ;
"RTN","PSSDSAPM",150,0)
MLT ;Multi Ingredient check called from PSSDSAPD
"RTN","PSSDSAPM",151,0)
 D ITEM^PSSDSAPK D:'PSSDBFAL NUM^PSSDSAPL
"RTN","PSSDSAPM",152,0)
 I '$G(PSSDBIFG) Q
"RTN","PSSDSAPM",153,0)
 N PSSMLT1,PSSMLT2,PSSMLT3,PSSMLG4,DA
"RTN","PSSDSAPM",154,0)
 S PSSMLT1=$P($G(^PSDRUG(PSSDBIFG,"ND")),"^"),PSSMLT3=$P($G(^PSDRUG(PSSDBIFG,"ND")),"^",3)
"RTN","PSSDSAPM",155,0)
 I 'PSSMLT1!('PSSMLT3) D MLTS Q
"RTN","PSSDSAPM",156,0)
 S PSSMLT2=$$PSJING^PSNAPIS(PSSMLT1,PSSMLT3,.PSSMLG4) I +PSSMLT2>1 D MLTS Q
"RTN","PSSDSAPM",157,0)
 I $$MLTSU D MLTS
"RTN","PSSDSAPM",158,0)
 Q
"RTN","PSSDSAPM",159,0)
 ;
"RTN","PSSDSAPM",160,0)
 ;
"RTN","PSSDSAPM",161,0)
MLTS ;
"RTN","PSSDSAPM",162,0)
 K PSSDBAR("AMN"),PSSDBAR("UNIT")
"RTN","PSSDSAPM",163,0)
 S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"MUING")=""
"RTN","PSSDSAPM",164,0)
 Q
"RTN","PSSDSAPM",165,0)
 ;
"RTN","PSSDSAPM",166,0)
 ;
"RTN","PSSDSAPM",167,0)
MLTSU() ;
"RTN","PSSDSAPM",168,0)
 N X,Y,PSSMKT2,PSSMKT5,PSSMKT6,PSSMKT7
"RTN","PSSDSAPM",169,0)
 S PSSMKT2=$$DFSU^PSNAPIS(PSSMLT1,PSSMLT3)
"RTN","PSSDSAPM",170,0)
 S PSSMKT5=$P(PSSMKT2,"^",6) I PSSMKT5="" Q 1
"RTN","PSSDSAPM",171,0)
 S PSSMKT6=$$UNITM(PSSMKT5) I PSSMKT6'="" Q 1
"RTN","PSSDSAPM",172,0)
 S PSSMKT7=$$UNIT^PSSDSAPI(PSSMKT5) I PSSMKT7="" Q 1
"RTN","PSSDSAPM",173,0)
 Q 0
"RTN","PSSDSAPM",174,0)
 ;
"RTN","PSSDSAPM",175,0)
 ;
"RTN","PSSDSAPM",176,0)
UNITM(PSSXUTUN) ;Find First DataBank Unit, can't do DIC Lookup because of exact match check
"RTN","PSSDSAPM",177,0)
 ;Returns Null or First DataBank Unit for text passed in
"RTN","PSSDSAPM",178,0)
 N PSSXUTX,PSSXUTZ,PSSXUTAA,PSSXUTFL
"RTN","PSSDSAPM",179,0)
 S PSSXUTFL=0 I $G(PSSXUTUN)="" S PSSXUTZ="" G UNITDX
"RTN","PSSDSAPM",180,0)
 S PSSXUTAA=$$UP^XLFSTR(PSSXUTUN)
"RTN","PSSDSAPM",181,0)
UNITDP ;
"RTN","PSSDSAPM",182,0)
 K PSSXUTZ S PSSXUTX=$O(^PS(51.24,"B",PSSXUTAA,0)) I PSSXUTX,'$$SCREEN^XTID(51.24,.01,PSSXUTX_",") S PSSXUTZ=$P($G(^PS(51.24,PSSXUTX,0)),"^") I PSSXUTZ'="",$P($G(^PS(51.24,PSSXUTX,0)),"^",3) G UNITDX
"RTN","PSSDSAPM",183,0)
 K PSSXUTZ S PSSXUTX=$O(^PS(51.24,"C",PSSXUTAA,0)) I PSSXUTX,'$$SCREEN^XTID(51.24,.01,PSSXUTX_",") S PSSXUTZ=$P($G(^PS(51.24,PSSXUTX,0)),"^") I PSSXUTZ'="",$P($G(^PS(51.24,PSSXUTX,0)),"^",3) G UNITDX
"RTN","PSSDSAPM",184,0)
 K PSSXUTZ S PSSXUTX=$O(^PS(51.24,"D",PSSXUTAA,0)) I PSSXUTX,'$$SCREEN^XTID(51.24,.01,PSSXUTX_",") S PSSXUTZ=$P($G(^PS(51.24,PSSXUTX,0)),"^") I PSSXUTZ'="",$P($G(^PS(51.24,PSSXUTX,0)),"^",3) G UNITDX
"RTN","PSSDSAPM",185,0)
 K PSSXUTZ I 'PSSXUTFL,$G(PSSXUTUN)["/" S PSSXUTFL=1,PSSXUTAA=$P(PSSXUTUN,"/"),PSSXUTAA=$$UP^XLFSTR(PSSXUTAA) G:PSSXUTAA'="" UNITDP
"RTN","PSSDSAPM",186,0)
UNITDX ;
"RTN","PSSDSAPM",187,0)
 Q $G(PSSXUTZ)
"RTN","PSSDSAPM",188,0)
 ;
"RTN","PSSDSAPM",189,0)
 ;
"RTN","PSSDSAPM",190,0)
MLTNO ;
"RTN","PSSDSAPM",191,0)
 I $D(PSSDBCAZ(PSSDBKLP,"MUING")) S $P(PSSDBCAR(PSSDBKLP),"^",7)=1
"RTN","PSSDSAPM",192,0)
 Q
"RTN","PSSDSAPM",193,0)
 ;
"RTN","PSSDSAPM",194,0)
 ;
"RTN","PSSDSAPM",195,0)
MLTNP ;
"RTN","PSSDSAPM",196,0)
 I $D(PSSDBCAZ(PSSDBRLS,"MUING")) S $P(PSSDBCAR(PSSDBRLS),"^",7)=1
"RTN","PSSDSAPM",197,0)
 Q
"RTN","PSSDSAPM",198,0)
 ;
"RTN","PSSDSAPM",199,0)
 ;
"RTN","PSSDSAPM",200,0)
FDRUG ; Find drug, called from PSSDSAPD
"RTN","PSSDSAPM",201,0)
 N PSSINCFO S PSSINCFO=1
"RTN","PSSDSAPM",202,0)
 S PSSDBIFL=1,PSSDBIFG=$$DRG^PSSDSAPK(PSSDBFDB("OI"),$G(PSSDBFDB("PACKAGE")),$G(PSSDBDS(PSSDBLP,"MR_IEN")),$G(PSSDBFDB("OI_USAGE")))
"RTN","PSSDSAPM",203,0)
 I 'PSSDBIFG S PSSDBIFG=$$DRG(PSSDBFDB("OI"),$G(PSSDBFDB("PACKAGE"))) S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"NO_DRUG")="" S PSSDBIFG=$P(PSSDBIFG,";")
"RTN","PSSDSAPM",204,0)
 Q
"RTN","PSSDSAPM",205,0)
 ;
"RTN","PSSDSAPM",206,0)
 ;
"RTN","PSSDSAPM",207,0)
INERR ;Set OI error
"RTN","PSSDSAPM",208,0)
 N PSSNOOIX
"RTN","PSSDSAPM",209,0)
 S PSSNOOIX=$G(PSSDBFDB(PSSDBLP,"OI_ERROR",PSSDBFDB(PSSDBLP,"DRUG_NM")))
"RTN","PSSDSAPM",210,0)
 I PSSNOOIX'="" S ^TMP($J,PSSDBASE,"IN","EXCEPTIONS","OI",PSSDBFDB(PSSDBLP,"RX_NUM"))=$P(PSSNOOIX,"^")_"^"_$P(PSSNOOIX,"^",2) D STDB
"RTN","PSSDSAPM",211,0)
 Q
"RTN","PSSDSAPM",212,0)
 ;
"RTN","PSSDSAPM",213,0)
 ;
"RTN","PSSDSAPM",214,0)
FRQE ;Set Frequency error called from PSSDSAPD
"RTN","PSSDSAPM",215,0)
 D INFERR^PSSDSAPK,FRDR^PSSDSAPK I $D(PSSDBFDB(PSSDBLP,"FRQ_ERROR")) S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"FRQ_ERROR")=""
"RTN","PSSDSAPM",216,0)
 Q
"RTN","PSSDSAPM",217,0)
 ;
"RTN","PSSDSAPM",218,0)
 ;
"RTN","PSSDSAPM",219,0)
INFUE ;Set Infusion rate error from PSSDSAPD
"RTN","PSSDSAPM",220,0)
 I $D(PSSDBFDB(PSSDBLP,"INF_ERROR")) S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"INF_ERROR")=""
"RTN","PSSDSAPM",221,0)
 Q
"RTN","PSSDSAPM",222,0)
 ;
"RTN","PSSDSAPM",223,0)
 ;
"RTN","PSSDSAPM",224,0)
ERST ;Set Dosing Sequences into error summary list
"RTN","PSSDSAPM",225,0)
 N PSSWSB1,PSSWSB2
"RTN","PSSDSAPM",226,0)
 F PSSDBEQ3=0:0 S PSSDBEQ3=$O(PSSDBEQ2(PSSDBEQ3)) Q:'PSSDBEQ3  S PSSDBCAX(PSSDBRLS,PSSDBEQ3)="" I $O(PSSDBXAX(PSSDBEQ3,""))'="",$E(PSSDBASE,1,3)'="PSJ" D
"RTN","PSSDSAPM",227,0)
 .S PSSWSB1="",PSSWSB2=0 F  S PSSWSB1=$O(PSSDBXAX(PSSDBEQ3,PSSWSB1)) Q:PSSWSB1=""!($G(PSSDBCAX(PSSDBRLS,PSSDBEQ3))["All")  S PSSWSB2=PSSWSB2+1 D
"RTN","PSSDSAPM",228,0)
 ..I PSSDBEQ3=5!(PSSDBEQ3=6)!(PSSDBEQ3=8) S PSSDBCAX(PSSDBRLS,PSSDBEQ3)=" (All" Q
"RTN","PSSDSAPM",229,0)
 ..I PSSWSB2=1 S PSSDBCAX(PSSDBRLS,PSSDBEQ3)=" (DOSE SEQ "_$P(PSSWSB1,";",4) Q
"RTN","PSSDSAPM",230,0)
 ..S PSSDBCAX(PSSDBRLS,PSSDBEQ3)=PSSDBCAX(PSSDBRLS,PSSDBEQ3)_", "_$P(PSSWSB1,";",4)
"RTN","PSSDSAPM",231,0)
 .S PSSDBCAX(PSSDBRLS,PSSDBEQ3)=PSSDBCAX(PSSDBRLS,PSSDBEQ3)_")"
"RTN","PSSDSAPM",232,0)
 Q
"RTN","PSSDSAPM",233,0)
 ;
"RTN","PSSDSAPM",234,0)
 ;
"RTN","PSSDSAPM",235,0)
PAT ;
"RTN","PSSDSAPM",236,0)
 N DFN,VADM,VAPTYP,VAHOW,VAROOT,VAERR,VA,X1,X2,X,%Y,PSSDBWT,PSSDBWTX,PSSDBHT,PSSDBHTX,GMRVSTR,PSSDBBSA,PSSDBATX
"RTN","PSSDSAPM",237,0)
 S DFN=PSSDBDFN,PSSDBATX=0
"RTN","PSSDSAPM",238,0)
 D DEM^VADPT
"RTN","PSSDSAPM",239,0)
 K X S X2=$P(VADM(3),"^"),X1=DT I X1,X2 D ^%DTC S PSSDBATX=X
"RTN","PSSDSAPM",240,0)
 S ^TMP($J,PSSDBASE,"IN","DOSE","AGE")=PSSDBATX
"RTN","PSSDSAPM",241,0)
 S DFN=PSSDBDFN
"RTN","PSSDSAPM",242,0)
 S (PSSDBWTX,PSSDBHTX,PSSDBBSA)=0
"RTN","PSSDSAPM",243,0)
 S GMRVSTR="WT" K X D EN6^GMRVUTL
"RTN","PSSDSAPM",244,0)
 S PSSDBWT=$P(X,"^",8) I PSSDBWT S PSSDBWTX=PSSDBWT/2.2
"RTN","PSSDSAPM",245,0)
 S ^TMP($J,PSSDBASE,"IN","DOSE","WT")=$G(PSSDBWTX)
"RTN","PSSDSAPM",246,0)
 S DFN=PSSDBDFN
"RTN","PSSDSAPM",247,0)
 S GMRVSTR="HT" K X D EN6^GMRVUTL
"RTN","PSSDSAPM",248,0)
 S PSSDBHT=$P(X,"^",8) I PSSDBHT S PSSDBHTX=.0254*PSSDBHT
"RTN","PSSDSAPM",249,0)
 ;Using DuBios formula for BSA calculation, and sending in 2 decimal places
"RTN","PSSDSAPM",250,0)
 I $G(PSSDBWTX),$G(PSSDBHTX) S PSSDBBSA=.20247*(PSSDBHTX**.725)*(PSSDBWTX**.425)
"RTN","PSSDSAPM",251,0)
 ;I $G(PSSDBWTX),$G(PSSDBHTX) S PSSDBBSA=$J((((PSSDBWTX*PSSDBHTX)/3600)**.5),0,2)    Mosteller BSA Formula
"RTN","PSSDSAPM",252,0)
 S ^TMP($J,PSSDBASE,"IN","DOSE","BSA")=$G(PSSDBBSA)
"RTN","PSSDSAPM",253,0)
 Q
"RTN","PSSDSAPM",254,0)
 ;
"RTN","PSSDSAPM",255,0)
 ;
"RTN","PSSDSAPM",256,0)
ADDCT ;Add counter to output globals so data appears in correct order for more than 9 Dosing Sequences
"RTN","PSSDSAPM",257,0)
 ;I PSSDBASA D ADDCTA  ;Remove comment when CPRS is ready to convert to new output, to show messages in Sequence order
"RTN","PSSDSAPM",258,0)
 I PSSDBASB D ADDCTB
"RTN","PSSDSAPM",259,0)
 Q
"RTN","PSSDSAPM",260,0)
 ;
"RTN","PSSDSAPM",261,0)
 ;
"RTN","PSSDSAPM",262,0)
ADDCTA ;Add counter to CPRS global
"RTN","PSSDSAPM",263,0)
 I '$D(^TMP($J,PSSDBASF)) Q 
"RTN","PSSDSAPM",264,0)
 N PSSJW1,PSSJW2,PSSJW3,PSSJW4,PSSJW5,PSSJW6
"RTN","PSSDSAPM",265,0)
 K ^TMP($J,"PSSJWTM1") M ^TMP($J,"PSSJWTM1")=^TMP($J,PSSDBASF) K ^TMP($J,PSSDBASF)
"RTN","PSSDSAPM",266,0)
 ;
"RTN","PSSDSAPM",267,0)
 S PSSJW1="" F  S PSSJW1=$O(^TMP($J,"PSSJWTM1","OUT","DOSE","ERROR",PSSJW1)) Q:PSSJW1=""  D
"RTN","PSSDSAPM",268,0)
 .S PSSJW2="" F  S PSSJW2=$O(^TMP($J,"PSSJWTM1","OUT","DOSE","ERROR",PSSJW1,PSSJW2)) Q:PSSJW2=""  D
"RTN","PSSDSAPM",269,0)
 ..S PSSJW3=$P(PSSJW1,";",4)
"RTN","PSSDSAPM",270,0)
 ..S PSSJW4=$G(^TMP($J,"PSSJWTM1","OUT","DOSE","ERROR",PSSJW1,PSSJW2,"MSG"))
"RTN","PSSDSAPM",271,0)
 ..S PSSJW5=$G(^TMP($J,"PSSJWTM1","OUT","DOSE","ERROR",PSSJW1,PSSJW2,"TEXT"))
"RTN","PSSDSAPM",272,0)
 ..I $D(^TMP($J,"PSSJWTM1","OUT","DOSE","ERROR",PSSJW1,PSSJW2,"MSG")) S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSJW3,PSSJW1,PSSJW2,"MSG")=PSSJW4
"RTN","PSSDSAPM",273,0)
 ..I $D(^TMP($J,"PSSJWTM1","OUT","DOSE","ERROR",PSSJW1,PSSJW2,"TEXT")) S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSJW3,PSSJW1,PSSJW2,"TEXT")=PSSJW5
"RTN","PSSDSAPM",274,0)
 ;
"RTN","PSSDSAPM",275,0)
 S PSSJW1="" F  S PSSJW1=$O(^TMP($J,"PSSJWTM1","OUT","EXCEPTIONS","DOSE",PSSJW1)) Q:PSSJW1=""  D
"RTN","PSSDSAPM",276,0)
 .S PSSJW2="" F  S PSSJW2=$O(^TMP($J,"PSSJWTM1","OUT","EXCEPTIONS","DOSE",PSSJW1,PSSJW2)) Q:PSSJW2=""  D
"RTN","PSSDSAPM",277,0)
 ..S PSSJW3=$P(PSSJW1,";",4)
"RTN","PSSDSAPM",278,0)
 ..S PSSJW4=$G(^TMP($J,"PSSJWTM1","OUT","EXCEPTIONS","DOSE",PSSJW1,PSSJW2))
"RTN","PSSDSAPM",279,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSJW3,PSSJW1,PSSJW2)=PSSJW4
"RTN","PSSDSAPM",280,0)
 ;
"RTN","PSSDSAPM",281,0)
 S PSSJW1="" F  S PSSJW1=$O(^TMP($J,"PSSJWTM1","OUT","DOSE",PSSJW1)) Q:PSSJW1=""  I PSSJW1'="ERROR" D
"RTN","PSSDSAPM",282,0)
 .S PSSJW2="" F  S PSSJW2=$O(^TMP($J,"PSSJWTM1","OUT","DOSE",PSSJW1,PSSJW2)) Q:PSSJW2=""  D
"RTN","PSSDSAPM",283,0)
 ..S PSSJW3="" F  S PSSJW3=$O(^TMP($J,"PSSJWTM1","OUT","DOSE",PSSJW1,PSSJW2,PSSJW3)) Q:PSSJW3=""  D
"RTN","PSSDSAPM",284,0)
 ...S PSSJW4="" F  S PSSJW4=$O(^TMP($J,"PSSJWTM1","OUT","DOSE",PSSJW1,PSSJW2,PSSJW3,"MESSAGE",PSSJW4)) Q:PSSJW4=""  D
"RTN","PSSDSAPM",285,0)
 ....S PSSJW5=$P(PSSJW1,";",4)
"RTN","PSSDSAPM",286,0)
 ....S PSSJW6=$G(^TMP($J,"PSSJWTM1","OUT","DOSE",PSSJW1,PSSJW2,PSSJW3,"MESSAGE",PSSJW4))
"RTN","PSSDSAPM",287,0)
 ....S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSJW5,PSSJW1,PSSJW2,PSSJW3,"MESSAGE",PSSJW4)=PSSJW6
"RTN","PSSDSAPM",288,0)
 ;
"RTN","PSSDSAPM",289,0)
 K ^TMP($J,"PSSJWTM1")
"RTN","PSSDSAPM",290,0)
 Q
"RTN","PSSDSAPM",291,0)
 ;
"RTN","PSSDSAPM",292,0)
 ;
"RTN","PSSDSAPM",293,0)
ADDCTB ;Add counter to Pharmacy global
"RTN","PSSDSAPM",294,0)
 I '$D(^TMP($J,PSSDBASG)) Q 
"RTN","PSSDSAPM",295,0)
 N PSSJW7,PSSJW8,PSSJW9,PSSJWNUM,PSSJWVAL,PSSJW56,PSSJW57
"RTN","PSSDSAPM",296,0)
 K ^TMP($J,"PSSJWTM2") M ^TMP($J,"PSSJWTM2")=^TMP($J,PSSDBASG) K ^TMP($J,PSSDBASG)
"RTN","PSSDSAPM",297,0)
 ;
"RTN","PSSDSAPM",298,0)
 S PSSJW7="" F  S PSSJW7=$O(^TMP($J,"PSSJWTM2","OUT",PSSJW7)) Q:PSSJW7=""  D
"RTN","PSSDSAPM",299,0)
 .S PSSJWNUM=$P(PSSJW7,";",4)
"RTN","PSSDSAPM",300,0)
 .S PSSJW8="" F  S PSSJW8=$O(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"ERROR",PSSJW8)) Q:PSSJW8=""  D
"RTN","PSSDSAPM",301,0)
 ..I $D(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"ERROR",PSSJW8,"MSG")) S ^TMP($J,PSSDBASG,"OUT",PSSJWNUM,PSSJW7,"ERROR",PSSJW8,"MSG")=$G(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"ERROR",PSSJW8,"MSG"))
"RTN","PSSDSAPM",302,0)
 ..I $D(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"ERROR",PSSJW8,"TEXT")) S ^TMP($J,PSSDBASG,"OUT",PSSJWNUM,PSSJW7,"ERROR",PSSJW8,"TEXT")=$G(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"ERROR",PSSJW8,"TEXT"))
"RTN","PSSDSAPM",303,0)
 ..I $G(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"ERROR",PSSJW8,"WARN"))="Warning" S ^TMP($J,PSSDBASG,"OUT",PSSJWNUM,PSSJW7,"ERROR",PSSJW8,"WARN")="Warning"
"RTN","PSSDSAPM",304,0)
 .;
"RTN","PSSDSAPM",305,0)
 .S PSSJW8="" F  S PSSJW8=$O(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"EXCEPTIONS",PSSJW8)) Q:PSSJW8=""  D
"RTN","PSSDSAPM",306,0)
 ..S PSSJW9=$G(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"EXCEPTIONS",PSSJW8))
"RTN","PSSDSAPM",307,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSJWNUM,PSSJW7,"EXCEPTIONS",PSSJW8)=PSSJW9
"RTN","PSSDSAPM",308,0)
 .;
"RTN","PSSDSAPM",309,0)
 .S PSSJW8="" F  S PSSJW8=$O(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"MESSAGE",PSSJW8)) Q:PSSJW8=""  D
"RTN","PSSDSAPM",310,0)
 ..S PSSJW9="" F  S PSSJW9=$O(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"MESSAGE",PSSJW8,PSSJW9)) Q:PSSJW9=""  D
"RTN","PSSDSAPM",311,0)
 ...I +PSSJW8=3 D  Q
"RTN","PSSDSAPM",312,0)
 ....S PSSJW56="" F  S PSSJW56=$O(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"MESSAGE",PSSJW8,PSSJW9,PSSJW56)) Q:PSSJW56=""  D
"RTN","PSSDSAPM",313,0)
 .....S PSSJW57=$G(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"MESSAGE",PSSJW8,PSSJW9,PSSJW56))
"RTN","PSSDSAPM",314,0)
 .....S ^TMP($J,PSSDBASG,"OUT",PSSJWNUM,PSSJW7,"MESSAGE",PSSJW8,PSSJW9,PSSJW56)=PSSJW57
"RTN","PSSDSAPM",315,0)
 ...S PSSJWVAL=$G(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"MESSAGE",PSSJW8,PSSJW9))
"RTN","PSSDSAPM",316,0)
 ...S ^TMP($J,PSSDBASG,"OUT",PSSJWNUM,PSSJW7,"MESSAGE",PSSJW8,PSSJW9)=PSSJWVAL
"RTN","PSSDSAPM",317,0)
 ; 
"RTN","PSSDSAPM",318,0)
 K ^TMP($J,"PSSJWTM2")
"RTN","PSSDSAPM",319,0)
 Q
"RTN","PSSDSAPM",320,0)
 ;
"RTN","PSSDSAPM",321,0)
 ;
"RTN","PSSDSAPM",322,0)
DSP(PSSDBDS,PSSDBFDB) ;Return Dose and Dose Unit to Inpatient for complex order display
"RTN","PSSDSAPM",323,0)
 ;Return value set into parameter 1 as "DRG_DISP" 
"RTN","PSSDSAPM",324,0)
 N PSSDBAR,PSSINDSP,PSSIND1,PSSIND2,PSSIND3,PSSDSLCL,PSSDBNOD,PSSDBXP,PSSDBLPD,PSSDSXTD,PSSDBNT,PSSDBFAL,PSSDBLP,PSSDBIFL
"RTN","PSSDSAPM",325,0)
 S PSSDBLP="" F  S PSSDBLP=$O(PSSDBDS(PSSDBLP)) Q:PSSDBLP=""  D
"RTN","PSSDSAPM",326,0)
 .S PSSINDSP="",(PSSDBLPD,PSSDBFAL,PSSDBIFL)=0 K PSSDBAR
"RTN","PSSDSAPM",327,0)
 .I $D(PSSDBFDB(PSSDBLP,"DOSE_AMT")),$D(PSSDBFDB(PSSDBLP,"DOSE_UNIT")) S PSSINDSP=PSSDBFDB(PSSDBLP,"DOSE_AMT")_"^"_PSSDBFDB(PSSDBLP,"DOSE_UNIT") D DSPL Q
"RTN","PSSDSAPM",328,0)
 .I $G(PSSDBDS(PSSDBLP,"DRG_AMT")),$G(PSSDBDS(PSSDBLP,"DRG_UNIT"))'="" D
"RTN","PSSDSAPM",329,0)
 ..S PSSIND1=$S(PSSDBDS(PSSDBLP,"DRG_UNIT")["/":$P(PSSDBDS(PSSDBLP,"DRG_UNIT"),"/"),1:PSSDBDS(PSSDBLP,"DRG_UNIT"))
"RTN","PSSDSAPM",330,0)
 ..S PSSIND1=$$UP^XLFSTR(PSSIND1)
"RTN","PSSDSAPM",331,0)
 ..S PSSIND2=$$UNIT^PSSDSAPI(PSSIND1)
"RTN","PSSDSAPM",332,0)
 ..I PSSIND2'="" S PSSINDSP=PSSDBDS(PSSDBLP,"DRG_AMT")_"^"_PSSIND2 D DSPL S PSSDBFAL=1
"RTN","PSSDSAPM",333,0)
 .I PSSDBFAL Q
"RTN","PSSDSAPM",334,0)
 .I '$G(PSSDBFDB(PSSDBLP,"DRUG_IEN")) S PSSDBDS(PSSDBLP,"DRG_DISP")="" Q
"RTN","PSSDSAPM",335,0)
 .;"DOSE" Node should only come from CPRS, for selected Local Possible Dosage
"RTN","PSSDSAPM",336,0)
 .S PSSDSLCL=$S($G(PSSDBDS(PSSDBLP,"DOSE"))'="":$P($G(PSSDBDS(PSSDBLP,"DOSE")),"&",5),1:$G(PSSDBDS(PSSDBLP,"DO")))
"RTN","PSSDSAPM",337,0)
 .I PSSDSLCL'="" S PSSIND3=0 D
"RTN","PSSDSAPM",338,0)
 ..F PSSDBXP=0:0 S PSSDBXP=$O(^PSDRUG(PSSDBFDB(PSSDBLP,"DRUG_IEN"),"DOS2",PSSDBXP)) Q:'PSSDBXP!(PSSIND3)  D
"RTN","PSSDSAPM",339,0)
 ...S PSSDBNOD=$G(^PSDRUG(PSSDBFDB(PSSDBLP,"DRUG_IEN"),"DOS2",PSSDBXP,0))
"RTN","PSSDSAPM",340,0)
 ...I $$MTCH^PSSDSAPK S PSSDBLPD=1 I $P(PSSDBNOD,"^",5),$P(PSSDBNOD,"^",6)'="" D
"RTN","PSSDSAPM",341,0)
 ....S PSSDSXTD=+$P(PSSDBNOD,"^",5) I PSSDSXTD,$$SCREEN^XTID(51.24,.01,PSSDSXTD_",") Q
"RTN","PSSDSAPM",342,0)
 ....S PSSDBNT=$P($G(^PS(51.24,+$P(PSSDBNOD,"^",5),0)),"^",2)
"RTN","PSSDSAPM",343,0)
 ....I PSSDBNT'="" S PSSINDSP=$P(PSSDBNOD,"^",6)_"^"_PSSDBNT,(PSSIND3,PSSDBFAL)=1
"RTN","PSSDSAPM",344,0)
 .I PSSDBFAL D DSPL Q
"RTN","PSSDSAPM",345,0)
 .I PSSDBLPD D DPOP^PSSDSAPK I PSSDBFAL S PSSINDSP=PSSDBAR("AMN")_"^"_PSSDBAR("UNIT") D DSPL Q
"RTN","PSSDSAPM",346,0)
 .D ITEM^PSSDSAPK I PSSDBFAL S PSSINDSP=PSSDBAR("AMN")_"^"_PSSDBAR("UNIT") D DSPL Q
"RTN","PSSDSAPM",347,0)
 .D NUM^PSSDSAPL I $G(PSSDBAR("AMN"))'="",$G(PSSDBAR("UNIT"))'="" S PSSINDSP=PSSDBAR("AMN")_"^"_PSSDBAR("UNIT") D DSPL Q
"RTN","PSSDSAPM",348,0)
 .S PSSDBDS(PSSDBLP,"DRG_DISP")=""
"RTN","PSSDSAPM",349,0)
 Q
"RTN","PSSDSAPM",350,0)
 ;
"RTN","PSSDSAPM",351,0)
 ;
"RTN","PSSDSAPM",352,0)
DSPL ;Add leading zero
"RTN","PSSDSAPM",353,0)
 I $E(PSSINDSP)="." S PSSINDSP="0"_PSSINDSP
"RTN","PSSDSAPM",354,0)
 S PSSDBDS(PSSDBLP,"DRG_DISP")=PSSINDSP
"RTN","PSSDSAPM",355,0)
 Q
"RTN","PSSDSAPM",356,0)
 ;
"RTN","PSSDSAPM",357,0)
 ;
"RTN","PSSDSAPM",358,0)
NXDRUG ;No Drug found
"RTN","PSSDSAPM",359,0)
 I $G(PSSDBFDB("PACKAGE"))="X",$$DLTM^PSSDSAPI(PSSDBFDB("OI")) K ^TMP($J,PSSDBASE,"IN","EXCEPTIONS","OI",PSSDBFDB(PSSDBLP,"RX_NUM")),PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"NO_DRUG") Q
"RTN","PSSDSAPM",360,0)
 I $D(^TMP($J,PSSDBASE,"IN","EXCEPTIONS","OI",PSSDBFDB(PSSDBLP,"RX_NUM"))) D DPL^PSSDSAPK Q
"RTN","PSSDSAPM",361,0)
 I PSSDSIVF S ^TMP($J,PSSDBASE,"IN","EXCEPTIONS","OI",PSSDBFDB(PSSDBLP,"RX_NUM"))="4^"_PSSDBFDB(PSSDBLP,"RX_NUM") D STDB Q
"RTN","PSSDSAPM",362,0)
 S ^TMP($J,PSSDBASE,"IN","EXCEPTIONS","DOSE",PSSDBFDB(PSSDBLP,"RX_NUM"))="1^"_PSSDBFDB(PSSDBLP,"DRUG_NM") D STDB
"RTN","PSSDSAPM",363,0)
 Q
"RTN","PSSDSAPM",364,0)
 ;
"RTN","PSSDSAPM",365,0)
 ;
"RTN","PSSDSAPM",366,0)
STDB ;Set PSSDBCAR array for Input Exceptions
"RTN","PSSDSAPM",367,0)
 S PSSDBCAR(PSSDBFDB(PSSDBLP,"RX_NUM"))="B^"_PSSDBFDB(PSSDBLP,"DRUG_NM")
"RTN","PSSDSAPM",368,0)
 S $P(PSSDBCAR(PSSDBFDB(PSSDBLP,"RX_NUM")),"^",18)=1,$P(PSSDBCAR(PSSDBFDB(PSSDBLP,"RX_NUM")),"^",13)=1
"RTN","PSSDSAPM",369,0)
 ;S PSSENHKZ(PSSDBFDB(PSSDBLP,"RX_NUM"))=1
"RTN","PSSDSAPM",370,0)
 D DPL^PSSDSAPK
"RTN","PSSDSAPM",371,0)
 Q
"RTN","PSSDSBPA")
0^15^B112655451
"RTN","PSSDSBPA",1,0)
PSSDSBPA ;BIR/RTR-Determine numeric dose multiplier for numeric dose ;02/12/09
"RTN","PSSDSBPA",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,160**;9/30/97;Build 76
"RTN","PSSDSBPA",3,0)
 ;
"RTN","PSSDSBPA",4,0)
 ;
"RTN","PSSDSBPA",5,0)
NUM() ;Determine numeric dose multiplier from Local Possible Dosage
"RTN","PSSDSBPA",6,0)
 ;
"RTN","PSSDSBPA",7,0)
 N PSSQVJ1,PSSQVJ2,PSSQVJ9
"RTN","PSSDSBPA",8,0)
 K PSSQVJ1,PSSQVJ2,PSSQVJ9
"RTN","PSSDSBPA",9,0)
 I $L($G(PSSQVLCD))'>0 Q 0
"RTN","PSSDSBPA",10,0)
 ;
"RTN","PSSDSBPA",11,0)
 ;
"RTN","PSSDSBPA",12,0)
 S PSSQVJ1=$E(PSSQVLCD,1,10) I PSSQVJ1="4 AND 1/2 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,11,$L(PSSQVLCD)) Q $S($$6:4.5,1:0)
"RTN","PSSDSBPA",13,0)
 S PSSQVJ1=$E(PSSQVLCD,1,18) I PSSQVJ1="FOUR AND ONE HALF " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,19,$L(PSSQVLCD)) Q $S($$6:4.5,1:0)
"RTN","PSSDSBPA",14,0)
 S PSSQVJ1=$E(PSSQVLCD,1,18) I PSSQVJ1="FOUR AND ONE-HALF " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,19,$L(PSSQVLCD)) Q $S($$6:4.5,1:0)
"RTN","PSSDSBPA",15,0)
 S PSSQVJ1=$E(PSSQVLCD,1,15) I PSSQVJ1="4 AND ONE HALF " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,16,$L(PSSQVLCD)) Q $S($$6:4.5,1:0)
"RTN","PSSDSBPA",16,0)
 S PSSQVJ1=$E(PSSQVLCD,1,15) I PSSQVJ1="4 AND ONE-HALF " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,16,$L(PSSQVLCD)) Q $S($$6:4.5,1:0)
"RTN","PSSDSBPA",17,0)
 S PSSQVJ1=$E(PSSQVLCD,1,13) I PSSQVJ1="FOUR AND 1/2 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,14,$L(PSSQVLCD)) Q $S($$6:4.5,1:0)
"RTN","PSSDSBPA",18,0)
 ;
"RTN","PSSDSBPA",19,0)
 S PSSQVJ1=$E(PSSQVLCD,1,10) I PSSQVJ1="3 AND 1/2 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,11,$L(PSSQVLCD)) Q $S($$6:3.5,1:0)
"RTN","PSSDSBPA",20,0)
 S PSSQVJ1=$E(PSSQVLCD,1,19) I PSSQVJ1="THREE AND ONE HALF " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,20,$L(PSSQVLCD)) Q $S($$6:3.5,1:0)
"RTN","PSSDSBPA",21,0)
 S PSSQVJ1=$E(PSSQVLCD,1,19) I PSSQVJ1="THREE AND ONE-HALF " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,20,$L(PSSQVLCD)) Q $S($$6:3.5,1:0)
"RTN","PSSDSBPA",22,0)
 S PSSQVJ1=$E(PSSQVLCD,1,15) I PSSQVJ1="3 AND ONE HALF " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,16,$L(PSSQVLCD)) Q $S($$6:3.5,1:0)
"RTN","PSSDSBPA",23,0)
 S PSSQVJ1=$E(PSSQVLCD,1,15) I PSSQVJ1="3 AND ONE-HALF " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,16,$L(PSSQVLCD)) Q $S($$6:3.5,1:0)
"RTN","PSSDSBPA",24,0)
 S PSSQVJ1=$E(PSSQVLCD,1,14) I PSSQVJ1="THREE AND 1/2 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,15,$L(PSSQVLCD)) Q $S($$6:3.5,1:0)
"RTN","PSSDSBPA",25,0)
 ;
"RTN","PSSDSBPA",26,0)
 S PSSQVJ1=$E(PSSQVLCD,1,10) I PSSQVJ1="2 AND 1/2 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,11,$L(PSSQVLCD)) Q $S($$6:2.5,1:0)
"RTN","PSSDSBPA",27,0)
 S PSSQVJ1=$E(PSSQVLCD,1,17) I PSSQVJ1="TWO AND ONE HALF " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,18,$L(PSSQVLCD)) Q $S($$6:2.5,1:0)
"RTN","PSSDSBPA",28,0)
 S PSSQVJ1=$E(PSSQVLCD,1,17) I PSSQVJ1="TWO AND ONE-HALF " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,18,$L(PSSQVLCD)) Q $S($$6:2.5,1:0)
"RTN","PSSDSBPA",29,0)
 S PSSQVJ1=$E(PSSQVLCD,1,15) I PSSQVJ1="2 AND ONE HALF " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,16,$L(PSSQVLCD)) Q $S($$6:2.5,1:0)
"RTN","PSSDSBPA",30,0)
 S PSSQVJ1=$E(PSSQVLCD,1,15) I PSSQVJ1="2 AND ONE-HALF " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,16,$L(PSSQVLCD)) Q $S($$6:2.5,1:0)
"RTN","PSSDSBPA",31,0)
 S PSSQVJ1=$E(PSSQVLCD,1,12) I PSSQVJ1="TWO AND 1/2 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,13,$L(PSSQVLCD)) Q $S($$6:2.5,1:0)
"RTN","PSSDSBPA",32,0)
 ;
"RTN","PSSDSBPA",33,0)
 S PSSQVJ1=$E(PSSQVLCD,1,10) I PSSQVJ1="1 AND 1/2 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,11,$L(PSSQVLCD)) Q $S($$6:1.5,1:0)
"RTN","PSSDSBPA",34,0)
 S PSSQVJ1=$E(PSSQVLCD,1,17) I PSSQVJ1="ONE AND ONE HALF " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,18,$L(PSSQVLCD)) Q $S($$6:1.5,1:0)
"RTN","PSSDSBPA",35,0)
 S PSSQVJ1=$E(PSSQVLCD,1,17) I PSSQVJ1="ONE AND ONE-HALF " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,18,$L(PSSQVLCD)) Q $S($$6:1.5,1:0)
"RTN","PSSDSBPA",36,0)
 S PSSQVJ1=$E(PSSQVLCD,1,15) I PSSQVJ1="1 AND ONE HALF " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,16,$L(PSSQVLCD)) Q $S($$6:1.5,1:0)
"RTN","PSSDSBPA",37,0)
 S PSSQVJ1=$E(PSSQVLCD,1,15) I PSSQVJ1="1 AND ONE-HALF " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,16,$L(PSSQVLCD)) Q $S($$6:1.5,1:0)
"RTN","PSSDSBPA",38,0)
 S PSSQVJ1=$E(PSSQVLCD,1,12) I PSSQVJ1="ONE AND 1/2 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,13,$L(PSSQVLCD)) Q $S($$6:1.5,1:0)
"RTN","PSSDSBPA",39,0)
 ;
"RTN","PSSDSBPA",40,0)
 S PSSQVJ1=$E(PSSQVLCD,1,10) I PSSQVJ1="4 AND 1/4 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,11,$L(PSSQVLCD)) Q $S($$6:4.25,1:0)
"RTN","PSSDSBPA",41,0)
 S PSSQVJ1=$E(PSSQVLCD,1,20) I PSSQVJ1="FOUR AND ONE FOURTH " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,21,$L(PSSQVLCD)) Q $S($$6:4.25,1:0)
"RTN","PSSDSBPA",42,0)
 S PSSQVJ1=$E(PSSQVLCD,1,20) I PSSQVJ1="FOUR AND ONE-FOURTH " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,21,$L(PSSQVLCD)) Q $S($$6:4.25,1:0)
"RTN","PSSDSBPA",43,0)
 S PSSQVJ1=$E(PSSQVLCD,1,17) I PSSQVJ1="4 AND ONE FOURTH " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,18,$L(PSSQVLCD)) Q $S($$6:4.25,1:0)
"RTN","PSSDSBPA",44,0)
 S PSSQVJ1=$E(PSSQVLCD,1,17) I PSSQVJ1="4 AND ONE-FOURTH " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,18,$L(PSSQVLCD)) Q $S($$6:4.25,1:0)
"RTN","PSSDSBPA",45,0)
 S PSSQVJ1=$E(PSSQVLCD,1,13) I PSSQVJ1="FOUR AND 1/4 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,14,$L(PSSQVLCD)) Q $S($$6:4.25,1:0)
"RTN","PSSDSBPA",46,0)
 ;
"RTN","PSSDSBPA",47,0)
 S PSSQVJ1=$E(PSSQVLCD,1,10) I PSSQVJ1="3 AND 1/4 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,11,$L(PSSQVLCD)) Q $S($$6:3.25,1:0)
"RTN","PSSDSBPA",48,0)
 S PSSQVJ1=$E(PSSQVLCD,1,21) I PSSQVJ1="THREE AND ONE FOURTH " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,22,$L(PSSQVLCD)) Q $S($$6:3.25,1:0)
"RTN","PSSDSBPA",49,0)
 S PSSQVJ1=$E(PSSQVLCD,1,21) I PSSQVJ1="THREE AND ONE-FOURTH " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,22,$L(PSSQVLCD)) Q $S($$6:3.25,1:0)
"RTN","PSSDSBPA",50,0)
 S PSSQVJ1=$E(PSSQVLCD,1,17) I PSSQVJ1="3 AND ONE FOURTH " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,18,$L(PSSQVLCD)) Q $S($$6:3.25,1:0)
"RTN","PSSDSBPA",51,0)
 S PSSQVJ1=$E(PSSQVLCD,1,17) I PSSQVJ1="3 AND ONE-FOURTH " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,18,$L(PSSQVLCD)) Q $S($$6:3.25,1:0)
"RTN","PSSDSBPA",52,0)
 S PSSQVJ1=$E(PSSQVLCD,1,14) I PSSQVJ1="THREE AND 1/4 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,15,$L(PSSQVLCD)) Q $S($$6:3.25,1:0)
"RTN","PSSDSBPA",53,0)
 ;
"RTN","PSSDSBPA",54,0)
 S PSSQVJ1=$E(PSSQVLCD,1,10) I PSSQVJ1="2 AND 1/4 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,11,$L(PSSQVLCD)) Q $S($$6:2.25,1:0)
"RTN","PSSDSBPA",55,0)
 S PSSQVJ1=$E(PSSQVLCD,1,19) I PSSQVJ1="TWO AND ONE FOURTH " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,20,$L(PSSQVLCD)) Q $S($$6:2.25,1:0)
"RTN","PSSDSBPA",56,0)
 S PSSQVJ1=$E(PSSQVLCD,1,19) I PSSQVJ1="TWO AND ONE-FOURTH " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,20,$L(PSSQVLCD)) Q $S($$6:2.25,1:0)
"RTN","PSSDSBPA",57,0)
 S PSSQVJ1=$E(PSSQVLCD,1,17) I PSSQVJ1="2 AND ONE FOURTH " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,18,$L(PSSQVLCD)) Q $S($$6:2.25,1:0)
"RTN","PSSDSBPA",58,0)
 S PSSQVJ1=$E(PSSQVLCD,1,17) I PSSQVJ1="2 AND ONE-FOURTH " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,18,$L(PSSQVLCD)) Q $S($$6:2.25,1:0)
"RTN","PSSDSBPA",59,0)
 S PSSQVJ1=$E(PSSQVLCD,1,12) I PSSQVJ1="TWO AND 1/4 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,13,$L(PSSQVLCD)) Q $S($$6:2.25,1:0)
"RTN","PSSDSBPA",60,0)
 ;
"RTN","PSSDSBPA",61,0)
 S PSSQVJ1=$E(PSSQVLCD,1,10) I PSSQVJ1="1 AND 1/4 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,11,$L(PSSQVLCD)) Q $S($$6:1.25,1:0)
"RTN","PSSDSBPA",62,0)
 S PSSQVJ1=$E(PSSQVLCD,1,19) I PSSQVJ1="ONE AND ONE FOURTH " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,20,$L(PSSQVLCD)) Q $S($$6:1.25,1:0)
"RTN","PSSDSBPA",63,0)
 S PSSQVJ1=$E(PSSQVLCD,1,19) I PSSQVJ1="ONE AND ONE-FOURTH " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,20,$L(PSSQVLCD)) Q $S($$6:1.25,1:0)
"RTN","PSSDSBPA",64,0)
 S PSSQVJ1=$E(PSSQVLCD,1,17) I PSSQVJ1="1 AND ONE FOURTH " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,18,$L(PSSQVLCD)) Q $S($$6:1.25,1:0)
"RTN","PSSDSBPA",65,0)
 S PSSQVJ1=$E(PSSQVLCD,1,17) I PSSQVJ1="1 AND ONE-FOURTH " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,18,$L(PSSQVLCD)) Q $S($$6:1.25,1:0)
"RTN","PSSDSBPA",66,0)
 S PSSQVJ1=$E(PSSQVLCD,1,12) I PSSQVJ1="ONE AND 1/4 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,13,$L(PSSQVLCD)) Q $S($$6:1.25,1:0)
"RTN","PSSDSBPA",67,0)
 ;
"RTN","PSSDSBPA",68,0)
 S PSSQVJ1=$E(PSSQVLCD,1,10) I PSSQVJ1="4 AND 1/3 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,11,$L(PSSQVLCD)) Q $S($$6:4.33,1:0)
"RTN","PSSDSBPA",69,0)
 S PSSQVJ1=$E(PSSQVLCD,1,19) I PSSQVJ1="FOUR AND ONE THIRD " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,20,$L(PSSQVLCD)) Q $S($$6:4.33,1:0)
"RTN","PSSDSBPA",70,0)
 S PSSQVJ1=$E(PSSQVLCD,1,19) I PSSQVJ1="FOUR AND ONE-THIRD " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,20,$L(PSSQVLCD)) Q $S($$6:4.33,1:0)
"RTN","PSSDSBPA",71,0)
 S PSSQVJ1=$E(PSSQVLCD,1,16) I PSSQVJ1="4 AND ONE THIRD " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,17,$L(PSSQVLCD)) Q $S($$6:4.33,1:0)
"RTN","PSSDSBPA",72,0)
 S PSSQVJ1=$E(PSSQVLCD,1,16) I PSSQVJ1="4 AND ONE-THIRD " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,17,$L(PSSQVLCD)) Q $S($$6:4.33,1:0)
"RTN","PSSDSBPA",73,0)
 S PSSQVJ1=$E(PSSQVLCD,1,13) I PSSQVJ1="FOUR AND 1/3 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,14,$L(PSSQVLCD)) Q $S($$6:4.33,1:0)
"RTN","PSSDSBPA",74,0)
 ;
"RTN","PSSDSBPA",75,0)
 S PSSQVJ1=$E(PSSQVLCD,1,10) I PSSQVJ1="3 AND 1/3 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,11,$L(PSSQVLCD)) Q $S($$6:3.33,1:0)
"RTN","PSSDSBPA",76,0)
 S PSSQVJ1=$E(PSSQVLCD,1,20) I PSSQVJ1="THREE AND ONE THIRD " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,21,$L(PSSQVLCD)) Q $S($$6:3.33,1:0)
"RTN","PSSDSBPA",77,0)
 S PSSQVJ1=$E(PSSQVLCD,1,20) I PSSQVJ1="THREE AND ONE-THIRD " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,21,$L(PSSQVLCD)) Q $S($$6:3.33,1:0)
"RTN","PSSDSBPA",78,0)
 S PSSQVJ1=$E(PSSQVLCD,1,16) I PSSQVJ1="3 AND ONE THIRD " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,17,$L(PSSQVLCD)) Q $S($$6:3.33,1:0)
"RTN","PSSDSBPA",79,0)
 S PSSQVJ1=$E(PSSQVLCD,1,16) I PSSQVJ1="3 AND ONE-THIRD " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,17,$L(PSSQVLCD)) Q $S($$6:3.33,1:0)
"RTN","PSSDSBPA",80,0)
 S PSSQVJ1=$E(PSSQVLCD,1,14) I PSSQVJ1="THREE AND 1/3 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,15,$L(PSSQVLCD)) Q $S($$6:3.33,1:0)
"RTN","PSSDSBPA",81,0)
 ;
"RTN","PSSDSBPA",82,0)
 S PSSQVJ1=$E(PSSQVLCD,1,10) I PSSQVJ1="2 AND 1/3 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,11,$L(PSSQVLCD)) Q $S($$6:2.33,1:0)
"RTN","PSSDSBPA",83,0)
 S PSSQVJ1=$E(PSSQVLCD,1,18) I PSSQVJ1="TWO AND ONE THIRD " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,19,$L(PSSQVLCD)) Q $S($$6:2.33,1:0)
"RTN","PSSDSBPA",84,0)
 S PSSQVJ1=$E(PSSQVLCD,1,18) I PSSQVJ1="TWO AND ONE-THIRD " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,19,$L(PSSQVLCD)) Q $S($$6:2.33,1:0)
"RTN","PSSDSBPA",85,0)
 S PSSQVJ1=$E(PSSQVLCD,1,16) I PSSQVJ1="2 AND ONE THIRD " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,17,$L(PSSQVLCD)) Q $S($$6:2.33,1:0)
"RTN","PSSDSBPA",86,0)
 S PSSQVJ1=$E(PSSQVLCD,1,16) I PSSQVJ1="2 AND ONE-THIRD " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,17,$L(PSSQVLCD)) Q $S($$6:2.33,1:0)
"RTN","PSSDSBPA",87,0)
 S PSSQVJ1=$E(PSSQVLCD,1,12) I PSSQVJ1="TWO AND 1/3 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,13,$L(PSSQVLCD)) Q $S($$6:2.33,1:0)
"RTN","PSSDSBPA",88,0)
 ;
"RTN","PSSDSBPA",89,0)
 S PSSQVJ1=$E(PSSQVLCD,1,10) I PSSQVJ1="1 AND 1/3 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,11,$L(PSSQVLCD)) Q $S($$6:1.33,1:0)
"RTN","PSSDSBPA",90,0)
 S PSSQVJ1=$E(PSSQVLCD,1,18) I PSSQVJ1="ONE AND ONE THIRD " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,19,$L(PSSQVLCD)) Q $S($$6:1.33,1:0)
"RTN","PSSDSBPA",91,0)
 S PSSQVJ1=$E(PSSQVLCD,1,18) I PSSQVJ1="ONE AND ONE-THIRD " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,19,$L(PSSQVLCD)) Q $S($$6:1.33,1:0)
"RTN","PSSDSBPA",92,0)
 S PSSQVJ1=$E(PSSQVLCD,1,16) I PSSQVJ1="1 AND ONE THIRD " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,17,$L(PSSQVLCD)) Q $S($$6:1.33,1:0)
"RTN","PSSDSBPA",93,0)
 S PSSQVJ1=$E(PSSQVLCD,1,16) I PSSQVJ1="1 AND ONE-THIRD " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,17,$L(PSSQVLCD)) Q $S($$6:1.33,1:0)
"RTN","PSSDSBPA",94,0)
 S PSSQVJ1=$E(PSSQVLCD,1,12) I PSSQVJ1="ONE AND 1/3 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,13,$L(PSSQVLCD)) Q $S($$6:1.33,1:0)
"RTN","PSSDSBPA",95,0)
 ;
"RTN","PSSDSBPA",96,0)
 S PSSQVJ1=$E(PSSQVLCD,1,6) I PSSQVJ1="0.5-1 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,7,$L(PSSQVLCD)) Q $S($$6:1,1:0)
"RTN","PSSDSBPA",97,0)
 S PSSQVJ1=$E(PSSQVLCD,1,8) I PSSQVJ1="0.5 - 1 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,9,$L(PSSQVLCD)) Q $S($$6:1,1:0)
"RTN","PSSDSBPA",98,0)
 S PSSQVJ1=$E(PSSQVLCD,1,9) I PSSQVJ1="0.5 TO 1 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,10,$L(PSSQVLCD)) Q $S($$6:1,1:0)
"RTN","PSSDSBPA",99,0)
 S PSSQVJ1=$E(PSSQVLCD,1,9) I PSSQVJ1="0.5 OR 1 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,10,$L(PSSQVLCD)) Q $S($$6:1,1:0)
"RTN","PSSDSBPA",100,0)
 S PSSQVJ1=$E(PSSQVLCD,1,6) I PSSQVJ1="1/2-1 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,7,$L(PSSQVLCD)) Q $S($$6:1,1:0)
"RTN","PSSDSBPA",101,0)
 S PSSQVJ1=$E(PSSQVLCD,1,8) I PSSQVJ1="1/2 - 1 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,9,$L(PSSQVLCD)) Q $S($$6:1,1:0)
"RTN","PSSDSBPA",102,0)
 S PSSQVJ1=$E(PSSQVLCD,1,9) I PSSQVJ1="1/2 TO 1 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,10,$L(PSSQVLCD)) Q $S($$6:1,1:0)
"RTN","PSSDSBPA",103,0)
 S PSSQVJ1=$E(PSSQVLCD,1,9) I PSSQVJ1="1/2 OR 1 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,10,$L(PSSQVLCD)) Q $S($$6:1,1:0)
"RTN","PSSDSBPA",104,0)
 S PSSQVJ1=$E(PSSQVLCD,1,16) I PSSQVJ1="ONE-HALF TO ONE " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,17,$L(PSSQVLCD)) Q $S($$6:1,1:0)
"RTN","PSSDSBPA",105,0)
 S PSSQVJ1=$E(PSSQVLCD,1,18) I PSSQVJ1="ONE - HALF TO ONE " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,19,$L(PSSQVLCD)) Q $S($$6:1,1:0)
"RTN","PSSDSBPA",106,0)
 S PSSQVJ1=$E(PSSQVLCD,1,16) I PSSQVJ1="ONE HALF TO ONE " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,17,$L(PSSQVLCD)) Q $S($$6:1,1:0)
"RTN","PSSDSBPA",107,0)
 S PSSQVJ1=$E(PSSQVLCD,1,16) I PSSQVJ1="ONE-HALF OR ONE " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,17,$L(PSSQVLCD)) Q $S($$6:1,1:0)
"RTN","PSSDSBPA",108,0)
 S PSSQVJ1=$E(PSSQVLCD,1,18) I PSSQVJ1="ONE - HALF OR ONE " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,19,$L(PSSQVLCD)) Q $S($$6:1,1:0)
"RTN","PSSDSBPA",109,0)
 S PSSQVJ1=$E(PSSQVLCD,1,16) I PSSQVJ1="ONE HALF OR ONE " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,17,$L(PSSQVLCD)) Q $S($$6:1,1:0)
"RTN","PSSDSBPA",110,0)
 ;
"RTN","PSSDSBPA",111,0)
 S PSSQVJ1=$E(PSSQVLCD,1,4) I PSSQVJ1="1-2 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,5,$L(PSSQVLCD)) Q $S($$6:2,1:0)
"RTN","PSSDSBPA",112,0)
 S PSSQVJ1=$E(PSSQVLCD,1,6) I PSSQVJ1="1 - 2 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,7,$L(PSSQVLCD)) Q $S($$6:2,1:0)
"RTN","PSSDSBPA",113,0)
 S PSSQVJ1=$E(PSSQVLCD,1,7) I PSSQVJ1="1 TO 2 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,8,$L(PSSQVLCD)) Q $S($$6:2,1:0)
"RTN","PSSDSBPA",114,0)
 S PSSQVJ1=$E(PSSQVLCD,1,7) I PSSQVJ1="1 OR 2 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,8,$L(PSSQVLCD)) Q $S($$6:2,1:0)
"RTN","PSSDSBPA",115,0)
 S PSSQVJ1=$E(PSSQVLCD,1,11) I PSSQVJ1="ONE TO TWO " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,12,$L(PSSQVLCD)) Q $S($$6:2,1:0)
"RTN","PSSDSBPA",116,0)
 S PSSQVJ1=$E(PSSQVLCD,1,11) I PSSQVJ1="ONE OR TWO " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,12,$L(PSSQVLCD)) Q $S($$6:2,1:0)
"RTN","PSSDSBPA",117,0)
 S PSSQVJ1=$E(PSSQVLCD,1,8) I PSSQVJ1="ONE-TWO " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,9,$L(PSSQVLCD)) Q $S($$6:2,1:0)
"RTN","PSSDSBPA",118,0)
 S PSSQVJ1=$E(PSSQVLCD,1,10) I PSSQVJ1="ONE - TWO " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,11,$L(PSSQVLCD)) Q $S($$6:2,1:0)
"RTN","PSSDSBPA",119,0)
 ;
"RTN","PSSDSBPA",120,0)
 S PSSQVJ1=$E(PSSQVLCD,1,4) I PSSQVJ1="2-3 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,5,$L(PSSQVLCD)) Q $S($$6:3,1:0)
"RTN","PSSDSBPA",121,0)
 S PSSQVJ1=$E(PSSQVLCD,1,6) I PSSQVJ1="2 - 3 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,7,$L(PSSQVLCD)) Q $S($$6:3,1:0)
"RTN","PSSDSBPA",122,0)
 S PSSQVJ1=$E(PSSQVLCD,1,7) I PSSQVJ1="2 TO 3 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,8,$L(PSSQVLCD)) Q $S($$6:3,1:0)
"RTN","PSSDSBPA",123,0)
 S PSSQVJ1=$E(PSSQVLCD,1,7) I PSSQVJ1="2 OR 3 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,8,$L(PSSQVLCD)) Q $S($$6:3,1:0)
"RTN","PSSDSBPA",124,0)
 S PSSQVJ1=$E(PSSQVLCD,1,13) I PSSQVJ1="TWO TO THREE " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,14,$L(PSSQVLCD)) Q $S($$6:3,1:0)
"RTN","PSSDSBPA",125,0)
 S PSSQVJ1=$E(PSSQVLCD,1,13) I PSSQVJ1="TWO OR THREE " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,14,$L(PSSQVLCD)) Q $S($$6:3,1:0)
"RTN","PSSDSBPA",126,0)
 S PSSQVJ1=$E(PSSQVLCD,1,10) I PSSQVJ1="TWO-THREE " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,11,$L(PSSQVLCD)) Q $S($$6:3,1:0)
"RTN","PSSDSBPA",127,0)
 S PSSQVJ1=$E(PSSQVLCD,1,12) I PSSQVJ1="TWO - THREE " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,13,$L(PSSQVLCD)) Q $S($$6:3,1:0)
"RTN","PSSDSBPA",128,0)
 ;
"RTN","PSSDSBPA",129,0)
 S PSSQVJ1=$E(PSSQVLCD,1,4) I PSSQVJ1="3-4 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,5,$L(PSSQVLCD)) Q $S($$6:4,1:0)
"RTN","PSSDSBPA",130,0)
 S PSSQVJ1=$E(PSSQVLCD,1,6) I PSSQVJ1="3 - 4 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,7,$L(PSSQVLCD)) Q $S($$6:4,1:0)
"RTN","PSSDSBPA",131,0)
 S PSSQVJ1=$E(PSSQVLCD,1,7) I PSSQVJ1="3 TO 4 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,8,$L(PSSQVLCD)) Q $S($$6:4,1:0)
"RTN","PSSDSBPA",132,0)
 S PSSQVJ1=$E(PSSQVLCD,1,7) I PSSQVJ1="3 OR 4 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,8,$L(PSSQVLCD)) Q $S($$6:4,1:0)
"RTN","PSSDSBPA",133,0)
 S PSSQVJ1=$E(PSSQVLCD,1,14) I PSSQVJ1="THREE TO FOUR " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,15,$L(PSSQVLCD)) Q $S($$6:4,1:0)
"RTN","PSSDSBPA",134,0)
 S PSSQVJ1=$E(PSSQVLCD,1,14) I PSSQVJ1="THREE OR FOUR " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,15,$L(PSSQVLCD)) Q $S($$6:4,1:0)
"RTN","PSSDSBPA",135,0)
 S PSSQVJ1=$E(PSSQVLCD,1,11) I PSSQVJ1="THREE-FOUR " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,12,$L(PSSQVLCD)) Q $S($$6:4,1:0)
"RTN","PSSDSBPA",136,0)
 S PSSQVJ1=$E(PSSQVLCD,1,13) I PSSQVJ1="THREE - FOUR " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,14,$L(PSSQVLCD)) Q $S($$6:4,1:0)
"RTN","PSSDSBPA",137,0)
 ;
"RTN","PSSDSBPA",138,0)
 S PSSQVJ1=$E(PSSQVLCD,1,4) I PSSQVJ1="0.5 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,5,$L(PSSQVLCD)) Q $S($$6:.5,1:0)
"RTN","PSSDSBPA",139,0)
 S PSSQVJ1=$E(PSSQVLCD,1,4) I PSSQVJ1="1/2 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,5,$L(PSSQVLCD)) Q $S($$6:.5,1:0)
"RTN","PSSDSBPA",140,0)
 S PSSQVJ1=$E(PSSQVLCD,1,9) I PSSQVJ1="ONE HALF " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,10,$L(PSSQVLCD)) Q $S($$6:.5,1:0)
"RTN","PSSDSBPA",141,0)
 S PSSQVJ1=$E(PSSQVLCD,1,9) I PSSQVJ1="ONE-HALF " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,10,$L(PSSQVLCD)) Q $S($$6:.5,1:0)
"RTN","PSSDSBPA",142,0)
 ;
"RTN","PSSDSBPA",143,0)
 S PSSQVJ9=$$NUMX^PSSDSBPB
"RTN","PSSDSBPA",144,0)
 Q PSSQVJ9
"RTN","PSSDSBPA",145,0)
 ;
"RTN","PSSDSBPA",146,0)
6() ;
"RTN","PSSDSBPA",147,0)
 ;Some special characters in a Nouns will pass, (), etc. others like "/" will not
"RTN","PSSDSBPA",148,0)
 I PSSQVJ2[" " Q 0
"RTN","PSSDSBPA",149,0)
 I PSSQVJ2["-" Q 0
"RTN","PSSDSBPA",150,0)
 I PSSQVJ2["&" Q 0
"RTN","PSSDSBPA",151,0)
 I PSSQVJ2["\" Q 0
"RTN","PSSDSBPA",152,0)
 I PSSQVJ2["/" Q 0
"RTN","PSSDSBPA",153,0)
 Q 1
"RTN","PSSDSBPA",154,0)
 ;
"RTN","PSSDSBPA",155,0)
7() ;
"RTN","PSSDSBPA",156,0)
 I $L(PSSQVLCD)'>$L(PSSQVJ1) Q 0
"RTN","PSSDSBPA",157,0)
 Q 1
"RTN","PSSDSBPB")
0^12^B68007633
"RTN","PSSDSBPB",1,0)
PSSDSBPB ;BIR/RTR-Determine numeric dose multiplier for dose call, continued ;02/12/09
"RTN","PSSDSBPB",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,160**;9/30/97;Build 76
"RTN","PSSDSBPB",3,0)
 ;
"RTN","PSSDSBPB",4,0)
 ;
"RTN","PSSDSBPB",5,0)
NUMX() ;Determine numeric dose multiplier from Local Possible Dosage
"RTN","PSSDSBPB",6,0)
 ;Q $S($$6:4,1:0)
"RTN","PSSDSBPB",7,0)
 ;
"RTN","PSSDSBPB",8,0)
 S PSSQVJ1=$E(PSSQVLCD,1,5) I PSSQVJ1="0.33 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,6,$L(PSSQVLCD)) Q $S($$6:.33,1:0)
"RTN","PSSDSBPB",9,0)
 S PSSQVJ1=$E(PSSQVLCD,1,4) I PSSQVJ1="1/3 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,5,$L(PSSQVLCD)) Q $S($$6:.33,1:0)
"RTN","PSSDSBPB",10,0)
 S PSSQVJ1=$E(PSSQVLCD,1,10) I PSSQVJ1="ONE THIRD " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,11,$L(PSSQVLCD)) Q $S($$6:.33,1:0)
"RTN","PSSDSBPB",11,0)
 S PSSQVJ1=$E(PSSQVLCD,1,10) I PSSQVJ1="ONE-THIRD " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,11,$L(PSSQVLCD)) Q $S($$6:.33,1:0)
"RTN","PSSDSBPB",12,0)
 ;
"RTN","PSSDSBPB",13,0)
 S PSSQVJ1=$E(PSSQVLCD,1,5) I PSSQVJ1="0.25 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,6,$L(PSSQVLCD)) Q $S($$6:.25,1:0)
"RTN","PSSDSBPB",14,0)
 S PSSQVJ1=$E(PSSQVLCD,1,4) I PSSQVJ1="1/4 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,5,$L(PSSQVLCD)) Q $S($$6:.25,1:0)
"RTN","PSSDSBPB",15,0)
 S PSSQVJ1=$E(PSSQVLCD,1,11) I PSSQVJ1="ONE FOURTH " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,12,$L(PSSQVLCD)) Q $S($$6:.25,1:0)
"RTN","PSSDSBPB",16,0)
 S PSSQVJ1=$E(PSSQVLCD,1,11) I PSSQVJ1="ONE-FOURTH " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,12,$L(PSSQVLCD)) Q $S($$6:.25,1:0)
"RTN","PSSDSBPB",17,0)
 ;
"RTN","PSSDSBPB",18,0)
 S PSSQVJ1=$E(PSSQVLCD,1,2) I PSSQVJ1="4 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,3,$L(PSSQVLCD)) Q $S($$6&$$9:4,1:0)
"RTN","PSSDSBPB",19,0)
 S PSSQVJ1=$E(PSSQVLCD,1,5) I PSSQVJ1="FOUR " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,6,$L(PSSQVLCD)) Q $S($$6&$$9:4,1:0)
"RTN","PSSDSBPB",20,0)
 ;
"RTN","PSSDSBPB",21,0)
 S PSSQVJ1=$E(PSSQVLCD,1,2) I PSSQVJ1="3 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,3,$L(PSSQVLCD)) Q $S($$6&$$9:3,1:0)
"RTN","PSSDSBPB",22,0)
 S PSSQVJ1=$E(PSSQVLCD,1,6) I PSSQVJ1="THREE " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,7,$L(PSSQVLCD)) Q $S($$6&$$9:3,1:0)
"RTN","PSSDSBPB",23,0)
 ;
"RTN","PSSDSBPB",24,0)
 S PSSQVJ1=$E(PSSQVLCD,1,2) I PSSQVJ1="2 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,3,$L(PSSQVLCD)) Q $S($$6&$$9:2,1:0)
"RTN","PSSDSBPB",25,0)
 S PSSQVJ1=$E(PSSQVLCD,1,4) I PSSQVJ1="TWO " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,5,$L(PSSQVLCD)) Q $S($$6&$$9:2,1:0)
"RTN","PSSDSBPB",26,0)
 ;
"RTN","PSSDSBPB",27,0)
 S PSSQVJ1=$E(PSSQVLCD,1,2) I PSSQVJ1="1 " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,3,$L(PSSQVLCD)) Q $S($$6&$$9:1,1:0)
"RTN","PSSDSBPB",28,0)
 S PSSQVJ1=$E(PSSQVLCD,1,4) I PSSQVJ1="ONE " Q:'$$7 0 S PSSQVJ2=$E(PSSQVLCD,5,$L(PSSQVLCD)) Q $S($$6&$$9:1,1:0)
"RTN","PSSDSBPB",29,0)
 ;
"RTN","PSSDSBPB",30,0)
 Q 0
"RTN","PSSDSBPB",31,0)
 ;
"RTN","PSSDSBPB",32,0)
6() ;
"RTN","PSSDSBPB",33,0)
 ;Some special characters in a Nouns will pass, (), etc. others like "/" will not
"RTN","PSSDSBPB",34,0)
 I PSSQVJ2[" " Q 0
"RTN","PSSDSBPB",35,0)
 I PSSQVJ2["-" Q 0
"RTN","PSSDSBPB",36,0)
 I PSSQVJ2["&" Q 0
"RTN","PSSDSBPB",37,0)
 I PSSQVJ2["\" Q 0
"RTN","PSSDSBPB",38,0)
 I PSSQVJ2["/" Q 0
"RTN","PSSDSBPB",39,0)
 Q 1
"RTN","PSSDSBPB",40,0)
 ;
"RTN","PSSDSBPB",41,0)
7() ;
"RTN","PSSDSBPB",42,0)
 I $L(PSSQVLCD)'>$L(PSSQVJ1) Q 0
"RTN","PSSDSBPB",43,0)
 Q 1
"RTN","PSSDSBPB",44,0)
 ;
"RTN","PSSDSBPB",45,0)
9() ;
"RTN","PSSDSBPB",46,0)
 I PSSQVJ2'["4",PSSQVJ2'["3",PSSQVJ2'["2",PSSQVJ2'["FOURTH",PSSQVJ2'["THIRD",PSSQVJ2'["HALF" Q 1
"RTN","PSSDSBPB",47,0)
 Q 0
"RTN","PSSDSBPB",48,0)
 ;
"RTN","PSSDSBPB",49,0)
 ;
"RTN","PSSDSBPB",50,0)
NUMC() ;Continuation of Free Text Dosage conversion from routine PSSDSAPL
"RTN","PSSDSBPB",51,0)
 ;
"RTN","PSSDSBPB",52,0)
 S PSSDBV1=$E(PSSDBV9,1,4) I PSSDBV1="3-4 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,5,$L(PSSDBV9)) Q $S($$8:4,1:0)
"RTN","PSSDSBPB",53,0)
 S PSSDBV1=$E(PSSDBV9,1,6) I PSSDBV1="3 - 4 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,7,$L(PSSDBV9)) Q $S($$8:4,1:0)
"RTN","PSSDSBPB",54,0)
 S PSSDBV1=$E(PSSDBV9,1,7) I PSSDBV1="3 TO 4 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,8,$L(PSSDBV9)) Q $S($$8:4,1:0)
"RTN","PSSDSBPB",55,0)
 S PSSDBV1=$E(PSSDBV9,1,7) I PSSDBV1="3 OR 4 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,8,$L(PSSDBV9)) Q $S($$8:4,1:0)
"RTN","PSSDSBPB",56,0)
 S PSSDBV1=$E(PSSDBV9,1,14) I PSSDBV1="THREE TO FOUR " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,15,$L(PSSDBV9)) Q $S($$8:4,1:0)
"RTN","PSSDSBPB",57,0)
 S PSSDBV1=$E(PSSDBV9,1,14) I PSSDBV1="THREE OR FOUR " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,15,$L(PSSDBV9)) Q $S($$8:4,1:0)
"RTN","PSSDSBPB",58,0)
 S PSSDBV1=$E(PSSDBV9,1,11) I PSSDBV1="THREE-FOUR " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,12,$L(PSSDBV9)) Q $S($$8:4,1:0)
"RTN","PSSDSBPB",59,0)
 S PSSDBV1=$E(PSSDBV9,1,13) I PSSDBV1="THREE - FOUR " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,14,$L(PSSDBV9)) Q $S($$8:4,1:0)
"RTN","PSSDSBPB",60,0)
 ;
"RTN","PSSDSBPB",61,0)
 S PSSDBV1=$E(PSSDBV9,1,2) I PSSDBV1="4 ",$$4 S PSSDBV2=$E(PSSDBV9,3,$L(PSSDBV9)) I $$8 Q 4
"RTN","PSSDSBPB",62,0)
 S PSSDBV1=$E(PSSDBV9,1,5) I PSSDBV1="FOUR ",$$4 S PSSDBV2=$E(PSSDBV9,6,$L(PSSDBV9)) I $$8 Q 4
"RTN","PSSDSBPB",63,0)
 ;
"RTN","PSSDSBPB",64,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="4 AND 1/4 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:4.25,1:0)
"RTN","PSSDSBPB",65,0)
 S PSSDBV1=$E(PSSDBV9,1,20) I PSSDBV1="FOUR AND ONE FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,21,$L(PSSDBV9)) Q $S($$8:4.25,1:0)
"RTN","PSSDSBPB",66,0)
 S PSSDBV1=$E(PSSDBV9,1,20) I PSSDBV1="FOUR AND ONE-FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,21,$L(PSSDBV9)) Q $S($$8:4.25,1:0)
"RTN","PSSDSBPB",67,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="4 AND ONE FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:4.25,1:0)
"RTN","PSSDSBPB",68,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="4 AND ONE-FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:4.25,1:0)
"RTN","PSSDSBPB",69,0)
 S PSSDBV1=$E(PSSDBV9,1,13) I PSSDBV1="FOUR AND 1/4 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,14,$L(PSSDBV9)) Q $S($$8:4.25,1:0)
"RTN","PSSDSBPB",70,0)
 ;
"RTN","PSSDSBPB",71,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="4 AND 1/3 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:4.33,1:0)
"RTN","PSSDSBPB",72,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="FOUR AND ONE THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:4.33,1:0)
"RTN","PSSDSBPB",73,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="FOUR AND ONE-THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:4.33,1:0)
"RTN","PSSDSBPB",74,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="4 AND ONE THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:4.33,1:0)
"RTN","PSSDSBPB",75,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="4 AND ONE-THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:4.33,1:0)
"RTN","PSSDSBPB",76,0)
 S PSSDBV1=$E(PSSDBV9,1,13) I PSSDBV1="FOUR AND 1/3 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,14,$L(PSSDBV9)) Q $S($$8:4.33,1:0)
"RTN","PSSDSBPB",77,0)
 ;
"RTN","PSSDSBPB",78,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="4 AND 1/2 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:4.5,1:0)
"RTN","PSSDSBPB",79,0)
 S PSSDBV1=$E(PSSDBV9,1,18) I PSSDBV1="FOUR AND ONE HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,19,$L(PSSDBV9)) Q $S($$8:4.5,1:0)
"RTN","PSSDSBPB",80,0)
 S PSSDBV1=$E(PSSDBV9,1,18) I PSSDBV1="FOUR AND ONE-HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,19,$L(PSSDBV9)) Q $S($$8:4.5,1:0)
"RTN","PSSDSBPB",81,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="4 AND ONE HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:4.5,1:0)
"RTN","PSSDSBPB",82,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="4 AND ONE-HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:4.5,1:0)
"RTN","PSSDSBPB",83,0)
 S PSSDBV1=$E(PSSDBV9,1,13) I PSSDBV1="FOUR AND 1/2 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,14,$L(PSSDBV9)) Q $S($$8:4.5,1:0)
"RTN","PSSDSBPB",84,0)
 ;
"RTN","PSSDSBPB",85,0)
 S PSSDBV1=$E(PSSDBV9,1,4) I PSSDBV1="4-5 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,5,$L(PSSDBV9)) Q $S($$8:5,1:0)
"RTN","PSSDSBPB",86,0)
 S PSSDBV1=$E(PSSDBV9,1,6) I PSSDBV1="4 - 5 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,7,$L(PSSDBV9)) Q $S($$8:5,1:0)
"RTN","PSSDSBPB",87,0)
 S PSSDBV1=$E(PSSDBV9,1,7) I PSSDBV1="4 TO 5 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,8,$L(PSSDBV9)) Q $S($$8:5,1:0)
"RTN","PSSDSBPB",88,0)
 S PSSDBV1=$E(PSSDBV9,1,7) I PSSDBV1="4 OR 5 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,8,$L(PSSDBV9)) Q $S($$8:5,1:0)
"RTN","PSSDSBPB",89,0)
 S PSSDBV1=$E(PSSDBV9,1,13) I PSSDBV1="FOUR TO FIVE " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,14,$L(PSSDBV9)) Q $S($$8:5,1:0)
"RTN","PSSDSBPB",90,0)
 S PSSDBV1=$E(PSSDBV9,1,13) I PSSDBV1="FOUR OR FIVE " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,14,$L(PSSDBV9)) Q $S($$8:5,1:0)
"RTN","PSSDSBPB",91,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="FOUR-FIVE " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:5,1:0)
"RTN","PSSDSBPB",92,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="FOUR - FIVE " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:5,1:0)
"RTN","PSSDSBPB",93,0)
 ;
"RTN","PSSDSBPB",94,0)
 S PSSDBV1=$E(PSSDBV9,1,2) I PSSDBV1="5 ",$$4 S PSSDBV2=$E(PSSDBV9,3,$L(PSSDBV9)) I $$8 Q 5
"RTN","PSSDSBPB",95,0)
 S PSSDBV1=$E(PSSDBV9,1,5) I PSSDBV1="FIVE ",$$4 S PSSDBV2=$E(PSSDBV9,6,$L(PSSDBV9)) I $$8 Q 5
"RTN","PSSDSBPB",96,0)
 ;
"RTN","PSSDSBPB",97,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="5 AND 1/4 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:5.25,1:0)
"RTN","PSSDSBPB",98,0)
 S PSSDBV1=$E(PSSDBV9,1,20) I PSSDBV1="FIVE AND ONE FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,21,$L(PSSDBV9)) Q $S($$8:5.25,1:0)
"RTN","PSSDSBPB",99,0)
 S PSSDBV1=$E(PSSDBV9,1,20) I PSSDBV1="FIVE AND ONE-FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,21,$L(PSSDBV9)) Q $S($$8:5.25,1:0)
"RTN","PSSDSBPB",100,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="5 AND ONE FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:5.25,1:0)
"RTN","PSSDSBPB",101,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="5 AND ONE-FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:5.25,1:0)
"RTN","PSSDSBPB",102,0)
 S PSSDBV1=$E(PSSDBV9,1,13) I PSSDBV1="FIVE AND 1/4 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,14,$L(PSSDBV9)) Q $S($$8:5.25,1:0)
"RTN","PSSDSBPB",103,0)
 ;
"RTN","PSSDSBPB",104,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="5 AND 1/3 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:5.33,1:0)
"RTN","PSSDSBPB",105,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="FIVE AND ONE THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:5.33,1:0)
"RTN","PSSDSBPB",106,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="FIVE AND ONE-THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:5.33,1:0)
"RTN","PSSDSBPB",107,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="5 AND ONE THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:5.33,1:0)
"RTN","PSSDSBPB",108,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="5 AND ONE-THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:5.33,1:0)
"RTN","PSSDSBPB",109,0)
 S PSSDBV1=$E(PSSDBV9,1,13) I PSSDBV1="FIVE AND 1/3 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,14,$L(PSSDBV9)) Q $S($$8:5.33,1:0)
"RTN","PSSDSBPB",110,0)
 ;
"RTN","PSSDSBPB",111,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="5 AND 1/2 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:5.5,1:0)
"RTN","PSSDSBPB",112,0)
 S PSSDBV1=$E(PSSDBV9,1,18) I PSSDBV1="FIVE AND ONE HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,19,$L(PSSDBV9)) Q $S($$8:5.5,1:0)
"RTN","PSSDSBPB",113,0)
 S PSSDBV1=$E(PSSDBV9,1,18) I PSSDBV1="FIVE AND ONE-HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,19,$L(PSSDBV9)) Q $S($$8:5.5,1:0)
"RTN","PSSDSBPB",114,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="5 AND ONE HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:5.5,1:0)
"RTN","PSSDSBPB",115,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="5 AND ONE-HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:5.5,1:0)
"RTN","PSSDSBPB",116,0)
 S PSSDBV1=$E(PSSDBV9,1,13) I PSSDBV1="FIVE AND 1/2 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,14,$L(PSSDBV9)) Q $S($$8:5.5,1:0)
"RTN","PSSDSBPB",117,0)
 ;
"RTN","PSSDSBPB",118,0)
 ;
"RTN","PSSDSBPB",119,0)
 Q ""
"RTN","PSSDSBPB",120,0)
 ;
"RTN","PSSDSBPB",121,0)
8() ;Look for Unit - PSSDBIFL set in PSSSAPD, indicates if Order has a Dispense Drug, or just an Orderable Item
"RTN","PSSDSBPB",122,0)
 S PSSDBV3="" D
"RTN","PSSDSBPB",123,0)
 .I PSSDBIFL S PSSDBV3=$$UNITD^PSSDSAPI(PSSDBV2) Q
"RTN","PSSDSBPB",124,0)
 .S PSSDBV3=$$UNIT^PSSDSAPI(PSSDBV2)
"RTN","PSSDSBPB",125,0)
 Q $S(PSSDBV3="":0,1:1)
"RTN","PSSDSBPB",126,0)
 ;
"RTN","PSSDSBPB",127,0)
 ;
"RTN","PSSDSBPB",128,0)
4() ;Validate text follow the numeric part of the text
"RTN","PSSDSBPB",129,0)
 I $L(PSSDBV9)'>$L(PSSDBV1) Q 0
"RTN","PSSDSBPB",130,0)
 Q 1
"RTN","PSSDSBPB",131,0)
 ;
"RTN","PSSDSBPB",132,0)
TEST ;used for testing numeric dose multiplier from Local Possible Dosage
"RTN","PSSDSBPB",133,0)
 N X,Y,PSSQVLCD,DIR,DIRUT,DTOUT
"RTN","PSSDSBPB",134,0)
TEST1 ;
"RTN","PSSDSBPB",135,0)
 K DIR S DIR("A")="Possible Dosage",DIR(0)="FO^1:40"     ;,DIR("?")="Enter a possible dosage for testing numeric dose multiplier."
"RTN","PSSDSBPB",136,0)
 D ^DIR G TESTE:$G(DIRUT)!($G(DTOUT))!(X="")
"RTN","PSSDSBPB",137,0)
 K DIR S PSSQVLCD=Y W !!,$$NUM^PSSDSBPA,!!
"RTN","PSSDSBPB",138,0)
 G TEST1
"RTN","PSSDSBPB",139,0)
TESTE ;
"RTN","PSSDSBPB",140,0)
 Q
"RTN","PSSDSBPC")
0^13^B37615346
"RTN","PSSDSBPC",1,0)
PSSDSBPC ;BIR/MJE-Determine numeric dose multiplier for dose call, continued ;10/14/10
"RTN","PSSDSBPC",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,160**;9/30/97;Build 76
"RTN","PSSDSBPC",3,0)
 ;
"RTN","PSSDSBPC",4,0)
NUMC() ;Continuation of Free Text Dosage conversion from routine PSSDSAPL
"RTN","PSSDSBPC",5,0)
 ;
"RTN","PSSDSBPC",6,0)
 S PSSDBV1=$E(PSSDBV9,1,4) I PSSDBV1="5-6 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,5,$L(PSSDBV9)) Q $S($$8:6,1:0)
"RTN","PSSDSBPC",7,0)
 S PSSDBV1=$E(PSSDBV9,1,6) I PSSDBV1="5 - 6 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,7,$L(PSSDBV9)) Q $S($$8:6,1:0)
"RTN","PSSDSBPC",8,0)
 S PSSDBV1=$E(PSSDBV9,1,7) I PSSDBV1="5 TO 6 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,8,$L(PSSDBV9)) Q $S($$8:6,1:0)
"RTN","PSSDSBPC",9,0)
 S PSSDBV1=$E(PSSDBV9,1,7) I PSSDBV1="5 OR 6 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,8,$L(PSSDBV9)) Q $S($$8:6,1:0)
"RTN","PSSDSBPC",10,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="FIVE TO SIX " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:6,1:0)
"RTN","PSSDSBPC",11,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="FIVE OR SIX " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:6,1:0)
"RTN","PSSDSBPC",12,0)
 S PSSDBV1=$E(PSSDBV9,1,9) I PSSDBV1="FIVE-SIX " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,10,$L(PSSDBV9)) Q $S($$8:6,1:0)
"RTN","PSSDSBPC",13,0)
 S PSSDBV1=$E(PSSDBV9,1,11) I PSSDBV1="FIVE - SIX " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,12,$L(PSSDBV9)) Q $S($$8:6,1:0)
"RTN","PSSDSBPC",14,0)
 ;
"RTN","PSSDSBPC",15,0)
 S PSSDBV1=$E(PSSDBV9,1,2) I PSSDBV1="6 ",$$4 S PSSDBV2=$E(PSSDBV9,3,$L(PSSDBV9)) I $$8 Q 6
"RTN","PSSDSBPC",16,0)
 S PSSDBV1=$E(PSSDBV9,1,4) I PSSDBV1="SIX ",$$4 S PSSDBV2=$E(PSSDBV9,5,$L(PSSDBV9)) I $$8 Q 6
"RTN","PSSDSBPC",17,0)
 ;
"RTN","PSSDSBPC",18,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="6 AND 1/4 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:6.25,1:0)
"RTN","PSSDSBPC",19,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="SIX AND ONE FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:6.25,1:0)
"RTN","PSSDSBPC",20,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="SIX AND ONE-FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:6.25,1:0)
"RTN","PSSDSBPC",21,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="6 AND ONE FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:6.25,1:0)
"RTN","PSSDSBPC",22,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="6 AND ONE-FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:6.25,1:0)
"RTN","PSSDSBPC",23,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="SIX AND 1/4 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:6.25,1:0)
"RTN","PSSDSBPC",24,0)
 ;
"RTN","PSSDSBPC",25,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="6 AND 1/3 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:6.33,1:0)
"RTN","PSSDSBPC",26,0)
 S PSSDBV1=$E(PSSDBV9,1,18) I PSSDBV1="SIX AND ONE THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,19,$L(PSSDBV9)) Q $S($$8:6.33,1:0)
"RTN","PSSDSBPC",27,0)
 S PSSDBV1=$E(PSSDBV9,1,18) I PSSDBV1="SIX AND ONE-THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,19,$L(PSSDBV9)) Q $S($$8:6.33,1:0)
"RTN","PSSDSBPC",28,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="6 AND ONE THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:6.33,1:0)
"RTN","PSSDSBPC",29,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="6 AND ONE-THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:6.33,1:0)
"RTN","PSSDSBPC",30,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="SIX AND 1/3 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:6.33,1:0)
"RTN","PSSDSBPC",31,0)
 ;
"RTN","PSSDSBPC",32,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="6 AND 1/2 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:6.5,1:0)
"RTN","PSSDSBPC",33,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="SIX AND ONE HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:6.5,1:0)
"RTN","PSSDSBPC",34,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="SIX AND ONE-HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:6.5,1:0)
"RTN","PSSDSBPC",35,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="6 AND ONE HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:6.5,1:0)
"RTN","PSSDSBPC",36,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="6 AND ONE-HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:6.5,1:0)
"RTN","PSSDSBPC",37,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="SIX AND 1/2 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:6.5,1:0)
"RTN","PSSDSBPC",38,0)
 ;
"RTN","PSSDSBPC",39,0)
 S PSSDBV1=$E(PSSDBV9,1,4) I PSSDBV1="6-7 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,5,$L(PSSDBV9)) Q $S($$8:7,1:0)
"RTN","PSSDSBPC",40,0)
 S PSSDBV1=$E(PSSDBV9,1,6) I PSSDBV1="6 - 7 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,7,$L(PSSDBV9)) Q $S($$8:7,1:0)
"RTN","PSSDSBPC",41,0)
 S PSSDBV1=$E(PSSDBV9,1,7) I PSSDBV1="6 TO 7 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,8,$L(PSSDBV9)) Q $S($$8:7,1:0)
"RTN","PSSDSBPC",42,0)
 S PSSDBV1=$E(PSSDBV9,1,7) I PSSDBV1="6 OR 7 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,8,$L(PSSDBV9)) Q $S($$8:7,1:0)
"RTN","PSSDSBPC",43,0)
 S PSSDBV1=$E(PSSDBV9,1,13) I PSSDBV1="SIX TO SEVEN " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,14,$L(PSSDBV9)) Q $S($$8:7,1:0)
"RTN","PSSDSBPC",44,0)
 S PSSDBV1=$E(PSSDBV9,1,13) I PSSDBV1="SIX OR SEVEN " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,14,$L(PSSDBV9)) Q $S($$8:7,1:0)
"RTN","PSSDSBPC",45,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="SIX-SEVEN " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:7,1:0)
"RTN","PSSDSBPC",46,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="SIX - SEVEN " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:7,1:0)
"RTN","PSSDSBPC",47,0)
 ;
"RTN","PSSDSBPC",48,0)
 S PSSDBV1=$E(PSSDBV9,1,2) I PSSDBV1="7 ",$$4 S PSSDBV2=$E(PSSDBV9,3,$L(PSSDBV9)) I $$8 Q 7
"RTN","PSSDSBPC",49,0)
 S PSSDBV1=$E(PSSDBV9,1,6) I PSSDBV1="SEVEN ",$$4 S PSSDBV2=$E(PSSDBV9,7,$L(PSSDBV9)) I $$8 Q 7
"RTN","PSSDSBPC",50,0)
 ;
"RTN","PSSDSBPC",51,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="7 AND 1/4 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:7.25,1:0)
"RTN","PSSDSBPC",52,0)
 S PSSDBV1=$E(PSSDBV9,1,21) I PSSDBV1="SEVEN AND ONE FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,22,$L(PSSDBV9)) Q $S($$8:7.25,1:0)
"RTN","PSSDSBPC",53,0)
 S PSSDBV1=$E(PSSDBV9,1,21) I PSSDBV1="SEVEN AND ONE-FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,22,$L(PSSDBV9)) Q $S($$8:7.25,1:0)
"RTN","PSSDSBPC",54,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="7 AND ONE FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:7.25,1:0)
"RTN","PSSDSBPC",55,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="7 AND ONE-FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:7.25,1:0)
"RTN","PSSDSBPC",56,0)
 S PSSDBV1=$E(PSSDBV9,1,14) I PSSDBV1="SEVEN AND 1/4 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,15,$L(PSSDBV9)) Q $S($$8:7.25,1:0)
"RTN","PSSDSBPC",57,0)
 ;
"RTN","PSSDSBPC",58,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="7 AND 1/3 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:7.33,1:0)
"RTN","PSSDSBPC",59,0)
 S PSSDBV1=$E(PSSDBV9,1,20) I PSSDBV1="SEVEN AND ONE THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,21,$L(PSSDBV9)) Q $S($$8:7.33,1:0)
"RTN","PSSDSBPC",60,0)
 S PSSDBV1=$E(PSSDBV9,1,20) I PSSDBV1="SEVEN AND ONE-THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,21,$L(PSSDBV9)) Q $S($$8:7.33,1:0)
"RTN","PSSDSBPC",61,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="7 AND ONE THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:7.33,1:0)
"RTN","PSSDSBPC",62,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="7 AND ONE-THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:7.33,1:0)
"RTN","PSSDSBPC",63,0)
 S PSSDBV1=$E(PSSDBV9,1,14) I PSSDBV1="SEVEN AND 1/3 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,15,$L(PSSDBV9)) Q $S($$8:7.33,1:0)
"RTN","PSSDSBPC",64,0)
 ;
"RTN","PSSDSBPC",65,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="7 AND 1/2 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:7.5,1:0)
"RTN","PSSDSBPC",66,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="SEVEN AND ONE HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:7.5,1:0)
"RTN","PSSDSBPC",67,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="SEVEN AND ONE-HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:7.5,1:0)
"RTN","PSSDSBPC",68,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="7 AND ONE HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:7.5,1:0)
"RTN","PSSDSBPC",69,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="7 AND ONE-HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:7.5,1:0)
"RTN","PSSDSBPC",70,0)
 S PSSDBV1=$E(PSSDBV9,1,14) I PSSDBV1="SEVEN AND 1/2 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,15,$L(PSSDBV9)) Q $S($$8:7.5,1:0)
"RTN","PSSDSBPC",71,0)
 ;
"RTN","PSSDSBPC",72,0)
 Q ""
"RTN","PSSDSBPC",73,0)
 ;
"RTN","PSSDSBPC",74,0)
8() ;Look for Unit - PSSDBIFL set in PSSSAPD, indicates if Order has a Dispense Drug, or just an Orderable Item
"RTN","PSSDSBPC",75,0)
 S PSSDBV3="" D
"RTN","PSSDSBPC",76,0)
 .I PSSDBIFL S PSSDBV3=$$UNITD^PSSDSAPI(PSSDBV2) Q
"RTN","PSSDSBPC",77,0)
 .S PSSDBV3=$$UNIT^PSSDSAPI(PSSDBV2)
"RTN","PSSDSBPC",78,0)
 Q $S(PSSDBV3="":0,1:1)
"RTN","PSSDSBPC",79,0)
 ;
"RTN","PSSDSBPC",80,0)
4() ;Validate text follow the numeric part of the text
"RTN","PSSDSBPC",81,0)
 I $L(PSSDBV9)'>$L(PSSDBV1) Q 0
"RTN","PSSDSBPC",82,0)
 Q 1
"RTN","PSSDSBPD")
0^14^B66106013
"RTN","PSSDSBPD",1,0)
PSSDSBPD ;BIR/MJE-Determine numeric dose multiplier for dose call, continued ;10/14/10
"RTN","PSSDSBPD",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,160**;9/30/97;Build 76
"RTN","PSSDSBPD",3,0)
 ;
"RTN","PSSDSBPD",4,0)
NUMC() ;Continuation of Free Text Dosage conversion from routine PSSDSAPL
"RTN","PSSDSBPD",5,0)
 ;
"RTN","PSSDSBPD",6,0)
 S PSSDBV1=$E(PSSDBV9,1,4) I PSSDBV1="7-8 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,5,$L(PSSDBV9)) Q $S($$8:8,1:0)
"RTN","PSSDSBPD",7,0)
 S PSSDBV1=$E(PSSDBV9,1,6) I PSSDBV1="7 - 8 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,7,$L(PSSDBV9)) Q $S($$8:8,1:0)
"RTN","PSSDSBPD",8,0)
 S PSSDBV1=$E(PSSDBV9,1,7) I PSSDBV1="7 TO 8 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,8,$L(PSSDBV9)) Q $S($$8:8,1:0)
"RTN","PSSDSBPD",9,0)
 S PSSDBV1=$E(PSSDBV9,1,7) I PSSDBV1="7 OR 8 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,8,$L(PSSDBV9)) Q $S($$8:8,1:0)
"RTN","PSSDSBPD",10,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="SEVEN TO EIGHT " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:8,1:0)
"RTN","PSSDSBPD",11,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="SEVEN OR EIGHT " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:8,1:0)
"RTN","PSSDSBPD",12,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="SEVEN-EIGHT " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:8,1:0)
"RTN","PSSDSBPD",13,0)
 S PSSDBV1=$E(PSSDBV9,1,14) I PSSDBV1="SEVEN - EIGHT " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,15,$L(PSSDBV9)) Q $S($$8:8,1:0)
"RTN","PSSDSBPD",14,0)
 ;
"RTN","PSSDSBPD",15,0)
 S PSSDBV1=$E(PSSDBV9,1,2) I PSSDBV1="8 ",$$4 S PSSDBV2=$E(PSSDBV9,3,$L(PSSDBV9)) I $$8 Q 8
"RTN","PSSDSBPD",16,0)
 S PSSDBV1=$E(PSSDBV9,1,6) I PSSDBV1="EIGHT ",$$4 S PSSDBV2=$E(PSSDBV9,7,$L(PSSDBV9)) I $$8 Q 8
"RTN","PSSDSBPD",17,0)
 ;
"RTN","PSSDSBPD",18,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="8 AND 1/4 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:8.25,1:0)
"RTN","PSSDSBPD",19,0)
 S PSSDBV1=$E(PSSDBV9,1,21) I PSSDBV1="EIGHT AND ONE FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,22,$L(PSSDBV9)) Q $S($$8:8.25,1:0)
"RTN","PSSDSBPD",20,0)
 S PSSDBV1=$E(PSSDBV9,1,21) I PSSDBV1="EIGHT AND ONE-FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,22,$L(PSSDBV9)) Q $S($$8:8.25,1:0)
"RTN","PSSDSBPD",21,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="8 AND ONE FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:8.25,1:0)
"RTN","PSSDSBPD",22,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="8 AND ONE-FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:8.25,1:0)
"RTN","PSSDSBPD",23,0)
 S PSSDBV1=$E(PSSDBV9,1,14) I PSSDBV1="EIGHT AND 1/4 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,15,$L(PSSDBV9)) Q $S($$8:8.25,1:0)
"RTN","PSSDSBPD",24,0)
 ;
"RTN","PSSDSBPD",25,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="8 AND 1/3 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:8.33,1:0)
"RTN","PSSDSBPD",26,0)
 S PSSDBV1=$E(PSSDBV9,1,20) I PSSDBV1="EIGHT AND ONE THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,21,$L(PSSDBV9)) Q $S($$8:8.33,1:0)
"RTN","PSSDSBPD",27,0)
 S PSSDBV1=$E(PSSDBV9,1,20) I PSSDBV1="EIGHT AND ONE-THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,21,$L(PSSDBV9)) Q $S($$8:8.33,1:0)
"RTN","PSSDSBPD",28,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="8 AND ONE THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:8.33,1:0)
"RTN","PSSDSBPD",29,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="8 AND ONE-THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:8.33,1:0)
"RTN","PSSDSBPD",30,0)
 S PSSDBV1=$E(PSSDBV9,1,14) I PSSDBV1="EIGHT AND 1/3 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,15,$L(PSSDBV9)) Q $S($$8:8.33,1:0)
"RTN","PSSDSBPD",31,0)
 ;
"RTN","PSSDSBPD",32,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="8 AND 1/2 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:8.5,1:0)
"RTN","PSSDSBPD",33,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="EIGHT AND ONE HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:8.5,1:0)
"RTN","PSSDSBPD",34,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="EIGHT AND ONE-HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:8.5,1:0)
"RTN","PSSDSBPD",35,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="8 AND ONE HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:8.5,1:0)
"RTN","PSSDSBPD",36,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="8 AND ONE-HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:8.5,1:0)
"RTN","PSSDSBPD",37,0)
 S PSSDBV1=$E(PSSDBV9,1,14) I PSSDBV1="EIGHT AND 1/2 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,15,$L(PSSDBV9)) Q $S($$8:8.5,1:0)
"RTN","PSSDSBPD",38,0)
 ;
"RTN","PSSDSBPD",39,0)
 S PSSDBV1=$E(PSSDBV9,1,4) I PSSDBV1="8-9 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,5,$L(PSSDBV9)) Q $S($$8:9,1:0)
"RTN","PSSDSBPD",40,0)
 S PSSDBV1=$E(PSSDBV9,1,6) I PSSDBV1="8 - 9 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,7,$L(PSSDBV9)) Q $S($$8:9,1:0)
"RTN","PSSDSBPD",41,0)
 S PSSDBV1=$E(PSSDBV9,1,7) I PSSDBV1="8 TO 9 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,8,$L(PSSDBV9)) Q $S($$8:9,1:0)
"RTN","PSSDSBPD",42,0)
 S PSSDBV1=$E(PSSDBV9,1,7) I PSSDBV1="8 OR 9 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,8,$L(PSSDBV9)) Q $S($$8:9,1:0)
"RTN","PSSDSBPD",43,0)
 S PSSDBV1=$E(PSSDBV9,1,14) I PSSDBV1="EIGHT TO NINE " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,15,$L(PSSDBV9)) Q $S($$8:9,1:0)
"RTN","PSSDSBPD",44,0)
 S PSSDBV1=$E(PSSDBV9,1,14) I PSSDBV1="EIGHT OR NINE " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,15,$L(PSSDBV9)) Q $S($$8:9,1:0)
"RTN","PSSDSBPD",45,0)
 S PSSDBV1=$E(PSSDBV9,1,11) I PSSDBV1="EIGHT-NINE " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,12,$L(PSSDBV9)) Q $S($$8:9,1:0)
"RTN","PSSDSBPD",46,0)
 S PSSDBV1=$E(PSSDBV9,1,13) I PSSDBV1="EIGHT - NINE " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,14,$L(PSSDBV9)) Q $S($$8:9,1:0)
"RTN","PSSDSBPD",47,0)
 ;
"RTN","PSSDSBPD",48,0)
 S PSSDBV1=$E(PSSDBV9,1,2) I PSSDBV1="9 ",$$4 S PSSDBV2=$E(PSSDBV9,3,$L(PSSDBV9)) I $$8 Q 9
"RTN","PSSDSBPD",49,0)
 S PSSDBV1=$E(PSSDBV9,1,5) I PSSDBV1="NINE ",$$4 S PSSDBV2=$E(PSSDBV9,6,$L(PSSDBV9)) I $$8 Q 9
"RTN","PSSDSBPD",50,0)
 ;
"RTN","PSSDSBPD",51,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="9 AND 1/4 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:9.25,1:0)
"RTN","PSSDSBPD",52,0)
 S PSSDBV1=$E(PSSDBV9,1,20) I PSSDBV1="NINE AND ONE FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,21,$L(PSSDBV9)) Q $S($$8:9.25,1:0)
"RTN","PSSDSBPD",53,0)
 S PSSDBV1=$E(PSSDBV9,1,20) I PSSDBV1="NINE AND ONE-FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,21,$L(PSSDBV9)) Q $S($$8:9.25,1:0)
"RTN","PSSDSBPD",54,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="9 AND ONE FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:9.25,1:0)
"RTN","PSSDSBPD",55,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="9 AND ONE-FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:9.25,1:0)
"RTN","PSSDSBPD",56,0)
 S PSSDBV1=$E(PSSDBV9,1,13) I PSSDBV1="NINE AND 1/4 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,14,$L(PSSDBV9)) Q $S($$8:9.25,1:0)
"RTN","PSSDSBPD",57,0)
 ;
"RTN","PSSDSBPD",58,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="9 AND 1/3 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:9.33,1:0)
"RTN","PSSDSBPD",59,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="NINE AND ONE THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:9.33,1:0)
"RTN","PSSDSBPD",60,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="NINE AND ONE-THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:9.33,1:0)
"RTN","PSSDSBPD",61,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="9 AND ONE THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:9.33,1:0)
"RTN","PSSDSBPD",62,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="9 AND ONE-THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:9.33,1:0)
"RTN","PSSDSBPD",63,0)
 S PSSDBV1=$E(PSSDBV9,1,13) I PSSDBV1="NINE AND 1/3 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,14,$L(PSSDBV9)) Q $S($$8:9.33,1:0)
"RTN","PSSDSBPD",64,0)
 ;
"RTN","PSSDSBPD",65,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="9 AND 1/2 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:9.5,1:0)
"RTN","PSSDSBPD",66,0)
 S PSSDBV1=$E(PSSDBV9,1,18) I PSSDBV1="NINE AND ONE HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,19,$L(PSSDBV9)) Q $S($$8:9.5,1:0)
"RTN","PSSDSBPD",67,0)
 S PSSDBV1=$E(PSSDBV9,1,18) I PSSDBV1="NINE AND ONE-HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,19,$L(PSSDBV9)) Q $S($$8:9.5,1:0)
"RTN","PSSDSBPD",68,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="9 AND ONE HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:9.5,1:0)
"RTN","PSSDSBPD",69,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="9 AND ONE-HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:9.5,1:0)
"RTN","PSSDSBPD",70,0)
 S PSSDBV1=$E(PSSDBV9,1,13) I PSSDBV1="NINE AND 1/2 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,14,$L(PSSDBV9)) Q $S($$8:9.5,1:0)
"RTN","PSSDSBPD",71,0)
 ;
"RTN","PSSDSBPD",72,0)
 S PSSDBV1=$E(PSSDBV9,1,5) I PSSDBV1="9-10 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,6,$L(PSSDBV9)) Q $S($$8:10,1:0)
"RTN","PSSDSBPD",73,0)
 S PSSDBV1=$E(PSSDBV9,1,7) I PSSDBV1="9 - 10 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,8,$L(PSSDBV9)) Q $S($$8:10,1:0)
"RTN","PSSDSBPD",74,0)
 S PSSDBV1=$E(PSSDBV9,1,8) I PSSDBV1="9 TO 10 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,9,$L(PSSDBV9)) Q $S($$8:10,1:0)
"RTN","PSSDSBPD",75,0)
 S PSSDBV1=$E(PSSDBV9,1,8) I PSSDBV1="9 OR 10 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,9,$L(PSSDBV9)) Q $S($$8:10,1:0)
"RTN","PSSDSBPD",76,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="NINE TO TEN " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:10,1:0)
"RTN","PSSDSBPD",77,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="NINE OR TEN " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:10,1:0)
"RTN","PSSDSBPD",78,0)
 S PSSDBV1=$E(PSSDBV9,1,9) I PSSDBV1="NINE-TEN " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,10,$L(PSSDBV9)) Q $S($$8:10,1:0)
"RTN","PSSDSBPD",79,0)
 S PSSDBV1=$E(PSSDBV9,1,11) I PSSDBV1="NINE - TEN " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,12,$L(PSSDBV9)) Q $S($$8:10,1:0)
"RTN","PSSDSBPD",80,0)
 ;
"RTN","PSSDSBPD",81,0)
 S PSSDBV1=$E(PSSDBV9,1,3) I PSSDBV1="10 ",$$4 S PSSDBV2=$E(PSSDBV9,4,$L(PSSDBV9)) I $$8 Q 10
"RTN","PSSDSBPD",82,0)
 S PSSDBV1=$E(PSSDBV9,1,4) I PSSDBV1="TEN ",$$4 S PSSDBV2=$E(PSSDBV9,5,$L(PSSDBV9)) I $$8 Q 10
"RTN","PSSDSBPD",83,0)
 ;
"RTN","PSSDSBPD",84,0)
 S PSSDBV1=$E(PSSDBV9,1,11) I PSSDBV1="10 AND 1/4 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,12,$L(PSSDBV9)) Q $S($$8:10.25,1:0)
"RTN","PSSDSBPD",85,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="TEN AND ONE FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:10.25,1:0)
"RTN","PSSDSBPD",86,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="TEN AND ONE-FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:10.25,1:0)
"RTN","PSSDSBPD",87,0)
 S PSSDBV1=$E(PSSDBV9,1,18) I PSSDBV1="10 AND ONE FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,19,$L(PSSDBV9)) Q $S($$8:10.25,1:0)
"RTN","PSSDSBPD",88,0)
 S PSSDBV1=$E(PSSDBV9,1,18) I PSSDBV1="10 AND ONE-FOURTH " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,19,$L(PSSDBV9)) Q $S($$8:10.25,1:0)
"RTN","PSSDSBPD",89,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="TEN AND 1/4 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:10.25,1:0)
"RTN","PSSDSBPD",90,0)
 ;
"RTN","PSSDSBPD",91,0)
 S PSSDBV1=$E(PSSDBV9,1,11) I PSSDBV1="10 AND 1/3 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,12,$L(PSSDBV9)) Q $S($$8:10.33,1:0)
"RTN","PSSDSBPD",92,0)
 S PSSDBV1=$E(PSSDBV9,1,18) I PSSDBV1="TEN AND ONE THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,19,$L(PSSDBV9)) Q $S($$8:10.33,1:0)
"RTN","PSSDSBPD",93,0)
 S PSSDBV1=$E(PSSDBV9,1,18) I PSSDBV1="TEN AND ONE-THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,19,$L(PSSDBV9)) Q $S($$8:10.33,1:0)
"RTN","PSSDSBPD",94,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="10 AND ONE THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:10.33,1:0)
"RTN","PSSDSBPD",95,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="10 AND ONE-THIRD " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:10.33,1:0)
"RTN","PSSDSBPD",96,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="TEN AND 1/3 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:10.33,1:0)
"RTN","PSSDSBPD",97,0)
 ;
"RTN","PSSDSBPD",98,0)
 S PSSDBV1=$E(PSSDBV9,1,11) I PSSDBV1="10 AND 1/2 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,12,$L(PSSDBV9)) Q $S($$8:10.5,1:0)
"RTN","PSSDSBPD",99,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="TEN AND ONE HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:10.5,1:0)
"RTN","PSSDSBPD",100,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="TEN AND ONE-HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:10.5,1:0)
"RTN","PSSDSBPD",101,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="10 AND ONE HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:10.5,1:0)
"RTN","PSSDSBPD",102,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="10 AND ONE-HALF " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:10.5,1:0)
"RTN","PSSDSBPD",103,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="TEN AND 1/2 " Q:'$$4 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:10.5,1:0)
"RTN","PSSDSBPD",104,0)
 ;
"RTN","PSSDSBPD",105,0)
 Q ""
"RTN","PSSDSBPD",106,0)
 ;
"RTN","PSSDSBPD",107,0)
8() ;Look for Unit - PSSDBIFL set in PSSSAPD, indicates if Order has a Dispense Drug, or just an Orderable Item
"RTN","PSSDSBPD",108,0)
 S PSSDBV3="" D
"RTN","PSSDSBPD",109,0)
 .I PSSDBIFL S PSSDBV3=$$UNITD^PSSDSAPI(PSSDBV2) Q
"RTN","PSSDSBPD",110,0)
 .S PSSDBV3=$$UNIT^PSSDSAPI(PSSDBV2)
"RTN","PSSDSBPD",111,0)
 Q $S(PSSDBV3="":0,1:1)
"RTN","PSSDSBPD",112,0)
 ;
"RTN","PSSDSBPD",113,0)
4() ;Validate text follow the numeric part of the text
"RTN","PSSDSBPD",114,0)
 I $L(PSSDBV9)'>$L(PSSDBV1) Q 0
"RTN","PSSDSBPD",115,0)
 Q 1
"RTN","PSSDSEXC")
0^2^B204998585
"RTN","PSSDSEXC",1,0)
PSSDSEXC ;BIR/RTR-Exceptions for Dose call ;02/24/09
"RTN","PSSDSEXC",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,160**;9/30/97;Build 76
"RTN","PSSDSEXC",3,0)
 ;
"RTN","PSSDSEXC",4,0)
 ;Called from PSSDSAPD, this routine takes the results from the call to First DataBank and creates displayable TMP
"RTN","PSSDSEXC",5,0)
 ;globals for the calling applications. Typically, PSSDBASA indicates a CPRS call, and PSSDBASB indicates a pharmacy call
"RTN","PSSDSEXC",6,0)
 ;
"RTN","PSSDSEXC",7,0)
 ;PSSDBCAR ARRAY pieces, set mostly in PSSDSAPD and a few other rotuines:
"RTN","PSSDSEXC",8,0)
 ;1 = S for Single Dose, D for Daily Dose, B for Both
"RTN","PSSDSEXC",9,0)
 ;2 = Drug Name
"RTN","PSSDSEXC",10,0)
 ;3 = Drug Internal Entry Number
"RTN","PSSDSEXC",11,0)
 ;4 = Frequency Flag
"RTN","PSSDSEXC",12,0)
 ;5 = 1 for Maintenance Dose, 0 for Single Dose
"RTN","PSSDSEXC",13,0)
 ;6 = 1 to only Show General information (Or General Dose error) and errors (No Single Dose or Daily DOse Messages)
"RTN","PSSDSEXC",14,0)
 ;7 = 1 To NEVER show General Dosing information, overrides piece 8
"RTN","PSSDSEXC",15,0)
 ;8 = 1 Show General Dosing Guidelines even though piece 1 = "S"
"RTN","PSSDSEXC",16,0)
 ;9 = FDB ROUTE
"RTN","PSSDSEXC",17,0)
 ;10 = 1 to show General Dosing exception in place of General Dosing information when no General Dosing Information exists
"RTN","PSSDSEXC",18,0)
 ;11 = 1 to indicate to show the Daily Dose Error message, (generally screened out in this case)
"RTN","PSSDSEXC",19,0)
 ;     because you added up previous Dosages at this Dosing Sequence,
"RTN","PSSDSEXC",20,0)
 ;12 = 1 to screen out frequency exceptions
"RTN","PSSDSEXC",21,0)
 ;13 = 1, set in this routine and PSSDSAPD, to indicate the need to show the generic exception message
"RTN","PSSDSEXC",22,0)
 ;14 = 1 to exclude from all Dose checks based on Schedule
"RTN","PSSDSEXC",23,0)
 ;15 = 1 to exclude from Daily Dose check based on Schedule
"RTN","PSSDSEXC",24,0)
 ;16 = 1 to indicate this Dosing sequence is part of a complex order
"RTN","PSSDSEXC",25,0)
 ;17 = 1 to indicate a GCNSECNQ number problem
"RTN","PSSDSEXC",26,0)
 ;18 = 1 to indicate there is an Input Exception
"RTN","PSSDSEXC",27,0)
 ;19 = 1 to indicate missing age
"RTN","PSSDSEXC",28,0)
 ;20 = 1 to indicate Free Text Dose can't be evaluated
"RTN","PSSDSEXC",29,0)
 ;21 = 1 to indicate Free Text Infusion Rate exception
"RTN","PSSDSEXC",30,0)
 ;22 = 1 to indicate FDB Warning exists
"RTN","PSSDSEXC",31,0)
 ;23 = 1 for missing Dose Route or Dose Type
"RTN","PSSDSEXC",32,0)
 ;
"RTN","PSSDSEXC",33,0)
 ;PSSDBCAX holds the errors to show
"RTN","PSSDSEXC",34,0)
 ;
"RTN","PSSDSEXC",35,0)
 ;
"RTN","PSSDSEXC",36,0)
FMT ;PSSDBDGO =1 if you went to interface, 0 if you did not go to interface
"RTN","PSSDSEXC",37,0)
 N PSSDWLP,PSSDWL1,PSSDWLPV
"RTN","PSSDSEXC",38,0)
 I PSSDBASA,PSSDBDGO S ^TMP($J,PSSDBASF,"OUT",0)=^TMP($J,PSSDBASE,"OUT",0)
"RTN","PSSDSEXC",39,0)
 I PSSDBASB,PSSDBDGO S ^TMP($J,PSSDBASG,"OUT",0)=^TMP($J,PSSDBASE,"OUT",0)
"RTN","PSSDSEXC",40,0)
 I $P($G(^TMP($J,PSSDBASE,"OUT",0)),"^")=-1 Q
"RTN","PSSDSEXC",41,0)
 ;
"RTN","PSSDSEXC",42,0)
 ;
"RTN","PSSDSEXC",43,0)
 ;Set errors
"RTN","PSSDSEXC",44,0)
 S PSSDWLP="" F  S PSSDWLP=$O(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP)) Q:PSSDWLP=""  D:'$P(PSSDWLP,";",5)
"RTN","PSSDSEXC",45,0)
 .D CKWRN^PSSDSAPK F PSSDWL1=0:0 S PSSDWL1=$O(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1)) Q:'PSSDWL1  D NOTS^PSSDSAPA D:'$$ERR1^PSSDSAPK
"RTN","PSSDSEXC",46,0)
 ..I $P(PSSDBCAR(PSSDWLP),"^",22),$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"SEV"))'="Warning" Q
"RTN","PSSDSEXC",47,0)
 ..I '$P(PSSDBCAR(PSSDWLP),"^",22) I $P(PSSDBCAR(PSSDWLP),"^",19)!$P(PSSDBCAR(PSSDWLP),"^",20)!$P(PSSDBCAR(PSSDWLP),"^",21) Q
"RTN","PSSDSEXC",48,0)
 ..I $G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG"))'="" D
"RTN","PSSDSEXC",49,0)
 ...I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG")=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG"))
"RTN","PSSDSEXC",50,0)
 ...I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"MSG")=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG"))
"RTN","PSSDSEXC",51,0)
 ..I $G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT"))'="" S PSSDWLPV=$S($G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"SEV"))="Warning":0,1:1) D
"RTN","PSSDSEXC",52,0)
 ...I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")=$S(PSSDWLPV:"Reason(s): ",1:"")_$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")) D:'PSSDWLPV
"RTN","PSSDSEXC",53,0)
 ....S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"WARN")="Warning"
"RTN","PSSDSEXC",54,0)
 ...I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"TEXT")=$S(PSSDWLPV:"Reason(s): ",1:"")_$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")) D:'PSSDWLPV
"RTN","PSSDSEXC",55,0)
 ....S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"WARN")="Warning"
"RTN","PSSDSEXC",56,0)
 ;
"RTN","PSSDSEXC",57,0)
 ;
"RTN","PSSDSEXC",58,0)
 D EXCP
"RTN","PSSDSEXC",59,0)
 D MESQ
"RTN","PSSDSEXC",60,0)
 I 'PSSDBDGO D
"RTN","PSSDSEXC",61,0)
 .I PSSDBASA D  Q
"RTN","PSSDSEXC",62,0)
 ..I $D(^TMP($J,PSSDBASF,"OUT")) S ^TMP($J,PSSDBASF,"OUT",0)=1 Q
"RTN","PSSDSEXC",63,0)
 ..S ^TMP($J,PSSDBASF,"OUT",0)=0
"RTN","PSSDSEXC",64,0)
 .I PSSDBASB D  Q
"RTN","PSSDSEXC",65,0)
 ..I $D(^TMP($J,PSSDBASG,"OUT")) S ^TMP($J,PSSDBASG,"OUT",0)=1 Q
"RTN","PSSDSEXC",66,0)
 ..S ^TMP($J,PSSDBASG,"OUT",0)=0
"RTN","PSSDSEXC",67,0)
 Q
"RTN","PSSDSEXC",68,0)
 ;
"RTN","PSSDSEXC",69,0)
 ;
"RTN","PSSDSEXC",70,0)
EXCP ;Set Exceptions
"RTN","PSSDSEXC",71,0)
 N PSSDWE1,PSSDWE2,PSSDWE3,PSSDWE4,PSSDWEE1,PSSDWEE2,PSSDWEX1,PSSDWEX2,PSSDWEX3,PSSDWEX4,PSSDWEX5,PSSDWEX6,PSSDWEX7,PSSDWSR1,PSSDWSR2,PSSDWSR3,PSSDWER1,PSSDWER2,PSSDWEGC,PSSDWER9,PSSNOE9
"RTN","PSSDSEXC",72,0)
 S PSSDWEX3="" F  S PSSDWEX3=$O(PSSDBCAR(PSSDWEX3)) Q:PSSDWEX3=""  D ADOSE^PSSDSAPK D
"RTN","PSSDSEXC",73,0)
 .I '$O(PSSDBCAX(PSSDWEX3,0)) Q
"RTN","PSSDSEXC",74,0)
 .S PSSDWEX4=0 F PSSDWEX7=0:0 S PSSDWEX7=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEX7)) Q:'PSSDWEX7  S PSSDWEX4=PSSDWEX7
"RTN","PSSDSEXC",75,0)
 .S PSSDWEX4=PSSDWEX4+1
"RTN","PSSDSEXC",76,0)
 .F PSSDWEX5=0:0 S PSSDWEX5=$O(PSSDBCAX(PSSDWEX3,PSSDWEX5)) Q:'PSSDWEX5  I PSSDWEX5=2!(PSSDWEX5=3)!(PSSDWEX5>11) D  ;For 2.1 change to only do if PSSDWEX5'=1
"RTN","PSSDSEXC",77,0)
 ..I $P(PSSDBCAR(PSSDWEX3),"^",19)!($P(PSSDBCAR(PSSDWEX3),"^",20)) Q
"RTN","PSSDSEXC",78,0)
 ..I $P(PSSDBCAR(PSSDWEX3),"^",21) I PSSDWEX5'=3,PSSDWEX5'=12,PSSDWEX5'=13,PSSDWEX5'=14 Q
"RTN","PSSDSEXC",79,0)
 ..S PSSDWEX6=$T(ERROR+PSSDWEX5) S PSSDWSR1=$P(PSSDWEX6,";;",4)
"RTN","PSSDSEXC",80,0)
 ..S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEX4)="^^^^^^"_$S(PSSDWSR1:"Daily Dose Range Check Error Summary for Drug: ",1:"Dosing Checks could not be performed for Drug: ")_$P(PSSDBCAR(PSSDWEX3),"^",2)_"^^^" D DSQ
"RTN","PSSDSEXC",81,0)
 ..S PSSDWEX4=PSSDWEX4+1
"RTN","PSSDSEXC",82,0)
 ;
"RTN","PSSDSEXC",83,0)
 ;
"RTN","PSSDSEXC",84,0)
 ;Loop through EXCEPTION global, call RESET if Free Text Dosage error exists and EXCEPTION from interface exists, then set 2 processing global outputs
"RTN","PSSDSEXC",85,0)
 K PSSDWE3
"RTN","PSSDSEXC",86,0)
 S PSSDWE1="" F  S PSSDWE1=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1)) Q:PSSDWE1=""  D NOEXP^PSSDSAPK I '$D(PSSNOE9(PSSDWE1)) S PSSDWEX1(PSSDWE1)="" D:$D(PSSDBCAX(PSSDWE1,1)) RESET D
"RTN","PSSDSEXC",87,0)
 .I $P(PSSDBCAR(PSSDWE1),"^",22) Q
"RTN","PSSDSEXC",88,0)
 .S PSSDWE4=1,(PSSDWSR3,PSSDWER1,PSSDWER2,PSSDWER9)=0
"RTN","PSSDSEXC",89,0)
 .S PSSDWEE1=$P($G(PSSDBCAR(PSSDWE1)),"^",2),PSSDWEE2=$P($G(PSSDBCAR(PSSDWE1)),"^",3)
"RTN","PSSDSEXC",90,0)
 .F PSSDWE2=0:0 S PSSDWE2=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)) Q:'PSSDWE2  S PSSDWSR2=$S($P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2),"^",7)["Summary":1,1:0) D
"RTN","PSSDSEXC",91,0)
 ..S PSSDWEGC=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",10) I $$ERR2^PSSDSAPK Q
"RTN","PSSDSEXC",92,0)
 ..I $P(PSSDBCAR(PSSDWE1),"^",19),PSSDWEGC'["patient parameters" Q
"RTN","PSSDSEXC",93,0)
 ..I '$P(PSSDBCAR(PSSDWE1),"^",19),$P(PSSDBCAR(PSSDWE1),"^",23),PSSDWEGC'["Dose Type",PSSDWEGC'["Dose Route" Q
"RTN","PSSDSEXC",94,0)
 ..I 'PSSDWSR2 D  Q
"RTN","PSSDSEXC",95,0)
 ...I PSSDWE4=1 D  S PSSDWE4=2
"RTN","PSSDSEXC",96,0)
 ....I PSSDBASA D HDER1
"RTN","PSSDSEXC",97,0)
 ....I PSSDBASB D HDER2
"RTN","PSSDSEXC",98,0)
 ...I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE4)=$S('PSSDWER1:"  Reason(s): ",1:"             ")_$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",10) I PSSDWEGC'["Frequency",PSSDWER9 D HDER3
"RTN","PSSDSEXC",99,0)
 ...I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",PSSDWE4)=$S('PSSDWER1:"  Reason(s): ",1:"             ")_$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",10) I PSSDWEGC'["Frequency",PSSDWER9 D HDER4
"RTN","PSSDSEXC",100,0)
 ...S PSSDWE4=PSSDWE4+1,PSSDWER1=1
"RTN","PSSDSEXC",101,0)
 ..I 'PSSDWSR3 D  S PSSDWE4=PSSDWE4+1
"RTN","PSSDSEXC",102,0)
 ...S PSSDWSR3=1
"RTN","PSSDSEXC",103,0)
 ...I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE4)=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",7)
"RTN","PSSDSEXC",104,0)
 ...I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",PSSDWE4)=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",7)
"RTN","PSSDSEXC",105,0)
 ..I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE4)=$S('PSSDWER2:"  Reason(s): ",1:"             ")_$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",10)
"RTN","PSSDSEXC",106,0)
 ..I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",PSSDWE4)=$S('PSSDWER2:"  Reason(s): ",1:"             ")_$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",10)
"RTN","PSSDSEXC",107,0)
 ..S PSSDWE4=PSSDWE4+1,PSSDWER2=1
"RTN","PSSDSEXC",108,0)
 ;
"RTN","PSSDSEXC",109,0)
 ;
"RTN","PSSDSEXC",110,0)
 ;If Free Text error message existed, but no Exception came back from Interface set the Free Text exception
"RTN","PSSDSEXC",111,0)
 S PSSDWEX2="" F  S PSSDWEX2=$O(PSSDBCAR(PSSDWEX2)) Q:PSSDWEX2=""  I '$P(PSSDBCAR(PSSDWEX2),"^",19),'$P(PSSDBCAR(PSSDWEX2),"^",22) D
"RTN","PSSDSEXC",112,0)
 .I '$D(PSSDWEX1(PSSDWEX2)),$D(PSSDBCAX(PSSDWEX2,1)),'$D(PSSNOE9(PSSDWEX2)) D
"RTN","PSSDSEXC",113,0)
 ..I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)="Maximum Single Dose Check could not be done for Drug: "_$P(PSSDBCAR(PSSDWEX2),"^",2) ;2.0 change
"RTN","PSSDSEXC",114,0)
 ..I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)="Maximum Single Dose Check could not be performed for Drug: "_$P(PSSDBCAR(PSSDWEX2),"^",2) ;2.0 change
"RTN","PSSDSEXC",115,0)
 ..I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)="  Reason(s): Free Text Dosage could not be evaluated"
"RTN","PSSDSEXC",116,0)
 ..I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)="  Reason(s): Free Text Dosage could not be evaluated"
"RTN","PSSDSEXC",117,0)
 ..S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)="^^^^^^Dosing Checks could not be performed for Drug: "_$P(PSSDBCAR(PSSDWEX2),"^",2)_"^^^"_"Free Text Dosage could not be evaluated"
"RTN","PSSDSEXC",118,0)
 Q
"RTN","PSSDSEXC",119,0)
 ;
"RTN","PSSDSEXC",120,0)
 ;
"RTN","PSSDSEXC",121,0)
MESQ ;Set Messages
"RTN","PSSDSEXC",122,0)
 N PSSDWE5,PSSDWDRG,PSSDWIEN,PSSDWGFB,PSSDWGER
"RTN","PSSDSEXC",123,0)
 S PSSDWE5="" F  S PSSDWE5=$O(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5)) Q:PSSDWE5=""  D
"RTN","PSSDSEXC",124,0)
 .S PSSDWGER=0
"RTN","PSSDSEXC",125,0)
 .S PSSDWDRG=$P($G(PSSDBCAR(PSSDWE5)),"^",2),PSSDWIEN=$P($G(PSSDBCAR(PSSDWE5)),"^",3) Q:PSSDWDRG=""!('PSSDWIEN)
"RTN","PSSDSEXC",126,0)
 .I $G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"SINGLE","STATUSCODE",PSSDWIEN))=5 S $P(PSSDBCAR(PSSDWE5),"^",13)=1
"RTN","PSSDSEXC",127,0)
 .I $P($G(PSSDBCAR(PSSDWE5)),"^")="S" D:'$P($G(PSSDBCAR(PSSDWE5)),"^",6) SING D:$P($G(PSSDBCAR(PSSDWE5)),"^",6)!($P($G(PSSDBCAR(PSSDWE5)),"^",8)) GEN Q
"RTN","PSSDSEXC",128,0)
 .S PSSDWGFB=0 I $P($G(PSSDBCAR(PSSDWE5)),"^")="D" D:'$P($G(PSSDBCAR(PSSDWE5)),"^",6) DAILY D:PSSDWGFB!('$P($G(PSSDBCAR(PSSDWE5)),"^",4))!($D(PSSDBCAX(PSSDWE5,1)))!($P($G(PSSDBCAR(PSSDWE5)),"^",8))!($P($G(PSSDBCAR(PSSDWE5)),"^",6)) GEN Q
"RTN","PSSDSEXC",129,0)
 .D SING,DAILY D:PSSDWGFB!('$P($G(PSSDBCAR(PSSDWE5)),"^",4))!($D(PSSDBCAX(PSSDWE5,1)))!($P($G(PSSDBCAR(PSSDWE5)),"^",8))!($P($G(PSSDBCAR(PSSDWE5)),"^",6)) GEN
"RTN","PSSDSEXC",130,0)
 Q
"RTN","PSSDSEXC",131,0)
 ;
"RTN","PSSDSEXC",132,0)
 ;
"RTN","PSSDSEXC",133,0)
SING ;Set Single Dose
"RTN","PSSDSEXC",134,0)
 I $P($G(PSSDBCAR(PSSDWE5)),"^",6) Q
"RTN","PSSDSEXC",135,0)
 N PSSDWE6
"RTN","PSSDSEXC",136,0)
 S PSSDWE6=$G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"SINGLE","STATUSCODE",PSSDWIEN))
"RTN","PSSDSEXC",137,0)
 Q:PSSDWE6=1
"RTN","PSSDSEXC",138,0)
 I PSSDWE6>1,PSSDWE6<5 D  Q
"RTN","PSSDSEXC",139,0)
 .I PSSDBASA D
"RTN","PSSDSEXC",140,0)
 ..I $G(PSSDBADJ(PSSDWE5))="" S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWE5,PSSDWDRG,"1_SINGLE","MESSAGE",PSSDWIEN)=PSSDWDRG_": "_^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"SINGLE","MESSAGE",PSSDWIEN) Q
"RTN","PSSDSEXC",141,0)
 ..S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWE5,PSSDWDRG,"1_SINGLE","MESSAGE",PSSDWIEN)=$G(PSSDBADJ(PSSDWE5))_" "_PSSDWDRG_": "_^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"SINGLE","MESSAGE",PSSDWIEN)
"RTN","PSSDSEXC",142,0)
 .I PSSDBASB D  S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"MESSAGE","1_SINGLE",PSSDWIEN)=PSSDWDRG_": "_^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"SINGLE","MESSAGE",PSSDWIEN)
"RTN","PSSDSEXC",143,0)
 ..S:$G(PSSDBADJ(PSSDWE5))'="" ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"MESSAGE",".5_SINGLE",PSSDWIEN)=$G(PSSDBADJ(PSSDWE5))
"RTN","PSSDSEXC",144,0)
 Q
"RTN","PSSDSEXC",145,0)
 ;
"RTN","PSSDSEXC",146,0)
 ;
"RTN","PSSDSEXC",147,0)
DAILY ;Set Daily (Range) Dose
"RTN","PSSDSEXC",148,0)
 I $P($G(PSSDBCAR(PSSDWE5)),"^",6) Q
"RTN","PSSDSEXC",149,0)
 N PSSDWE9
"RTN","PSSDSEXC",150,0)
 S PSSDWE9=$G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"RANGE","STATUSCODE",PSSDWIEN))
"RTN","PSSDSEXC",151,0)
 Q:PSSDWE9=1
"RTN","PSSDSEXC",152,0)
 ;I PSSDWE9=4,$G(PSSDBFRC(PSSDWE5,"CONJ"))="T" Q
"RTN","PSSDSEXC",153,0)
 I PSSDWE9>1,PSSDWE9<5 D  Q
"RTN","PSSDSEXC",154,0)
 .I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWE5,PSSDWDRG,"2_RANGE","MESSAGE",PSSDWIEN)=PSSDWDRG_": "_^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"RANGE","MESSAGE",PSSDWIEN)
"RTN","PSSDSEXC",155,0)
 .I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"MESSAGE","2_RANGE",PSSDWIEN)=PSSDWDRG_": "_^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"RANGE","MESSAGE",PSSDWIEN)
"RTN","PSSDSEXC",156,0)
 I PSSDWE9=5 D  S PSSDWGFB=1 Q
"RTN","PSSDSEXC",157,0)
 .;S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWE5,PSSDWDRG,"2_RANGE","MESSAGE",PSSDWIEN)="Daily dose range check could not be performed for "_PSSDWDRG_". Reason(s): "_^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"RANGE","MESSAGE",PSSDWIEN)
"RTN","PSSDSEXC",158,0)
 Q
"RTN","PSSDSEXC",159,0)
 ;
"RTN","PSSDSEXC",160,0)
 ;
"RTN","PSSDSEXC",161,0)
GEN ;General Dosing Guidelines
"RTN","PSSDSEXC",162,0)
 I $P($G(PSSDBCAR(PSSDWE5)),"^",7) Q
"RTN","PSSDSEXC",163,0)
 I $D(PSSDBCDP(PSSDWE5)) D SGEN^PSSDSAPA Q
"RTN","PSSDSEXC",164,0)
 I $G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"GENERAL","MESSAGE",PSSDWIEN))'="" D  Q
"RTN","PSSDSEXC",165,0)
 .I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWE5,PSSDWDRG,"3_GENERAL","MESSAGE",PSSDWIEN,1)=^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"GENERAL","MESSAGE",PSSDWIEN)
"RTN","PSSDSEXC",166,0)
 .I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"MESSAGE","3_GENERAL",PSSDWIEN,1)=^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"GENERAL","MESSAGE",PSSDWIEN)
"RTN","PSSDSEXC",167,0)
 ;I '$P($G(PSSDBCAR(PSSDWE5)),"^",10) Q
"RTN","PSSDSEXC",168,0)
 I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWE5,PSSDWDRG,"3_GENERAL","MESSAGE",PSSDWIEN,1)="General dosing range for "_$P($G(PSSDBCAR(PSSDWE5)),"^",2)_" ("_$P($G(PSSDBCAR(PSSDWE5)),"^",9)_") could not be obtained from vendor database."
"RTN","PSSDSEXC",169,0)
 I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"MESSAGE","3_GENERAL",PSSDWIEN,1)="General dosing range for "_$P($G(PSSDBCAR(PSSDWE5)),"^",2)_" ("_$P($G(PSSDBCAR(PSSDWE5)),"^",9)_") could not be obtained from vendor database."
"RTN","PSSDSEXC",170,0)
 ;S PSSDWGER=1
"RTN","PSSDSEXC",171,0)
 Q
"RTN","PSSDSEXC",172,0)
 ;
"RTN","PSSDSEXC",173,0)
 ;
"RTN","PSSDSEXC",174,0)
GENERR ;Set General Dosing Guidelines exception
"RTN","PSSDSEXC",175,0)
 Q
"RTN","PSSDSEXC",176,0)
 D GENERRX^PSSDSAPK
"RTN","PSSDSEXC",177,0)
 Q
"RTN","PSSDSEXC",178,0)
 ;
"RTN","PSSDSEXC",179,0)
 ;
"RTN","PSSDSEXC",180,0)
RESET ;Reset main exception global if Free text dose could not be evaluated
"RTN","PSSDSEXC",181,0)
 N PSSDWB1,PSSDWB2,PSSDWB3
"RTN","PSSDSEXC",182,0)
 S PSSDWB1="" F  S PSSDWB1=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWB1)) Q:PSSDWB1=""  D
"RTN","PSSDSEXC",183,0)
 .S PSSDWB2=$G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWB1))
"RTN","PSSDSEXC",184,0)
 .I $P(PSSDWB2,"^",10)'="Invalid or Undefined Dose",$P(PSSDWB2,"^",10)'="Invalid or Undefined Dose Unit" S PSSDWB3(PSSDWB1)=^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWB1)
"RTN","PSSDSEXC",185,0)
 .K ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWB1)
"RTN","PSSDSEXC",186,0)
 S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,1)="^^^^^^Dosing Checks could not be performed for Drug: "_$P(PSSDBCAR(PSSDWE1),"^",2)_"^^^Free Text Dosage could not be evaluated"
"RTN","PSSDSEXC",187,0)
 S PSSDWB2=2,PSSDWB1="" F  S PSSDWB1=$O(PSSDWB3(PSSDWB1)) Q:PSSDWB1=""  D
"RTN","PSSDSEXC",188,0)
 .S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWB2)=PSSDWB3(PSSDWB1)
"RTN","PSSDSEXC",189,0)
 .S PSSDWB2=PSSDWB2+1
"RTN","PSSDSEXC",190,0)
 Q
"RTN","PSSDSEXC",191,0)
 ;
"RTN","PSSDSEXC",192,0)
 ;
"RTN","PSSDSEXC",193,0)
ERROR ;List of errors, for complex orders piece 3 = 1 if only for Daily Dose and adding previous Dosing sequences
"RTN","PSSDSEXC",194,0)
 ;;1;;Free Text Dosage could not be evaluated
"RTN","PSSDSEXC",195,0)
 ;;2;;Invalid or Undefined Frequency
"RTN","PSSDSEXC",196,0)
 ;;3;;Free Text Infusion Rate could not be evaluated
"RTN","PSSDSEXC",197,0)
 ;;4;;Not all Dose types are Maintenance;;1
"RTN","PSSDSEXC",198,0)
 ;;5;;Not all Dose Units are defined or are the same;;1
"RTN","PSSDSEXC",199,0)
 ;;6;;Not all Med Routes are defined or are the same;;1
"RTN","PSSDSEXC",200,0)
 ;;7;;Not all Frequencies are valid;;1
"RTN","PSSDSEXC",201,0)
 ;;8;;Not all Durations are the same;;1
"RTN","PSSDSEXC",202,0)
 ;;9;;At least one Duration is less than one day;;1
"RTN","PSSDSEXC",203,0)
 ;;10;;At least one Schedule is a Day of Week Schedule;;1
"RTN","PSSDSEXC",204,0)
 ;;11;;One or more Free Text Dosages could not be evaluated;;1
"RTN","PSSDSEXC",205,0)
 ;;12;;One or more required patient parameters unavailable: Height
"RTN","PSSDSEXC",206,0)
 ;;13;;One or more required patient parameters unavailable: Weight
"RTN","PSSDSEXC",207,0)
 ;;14;;One or more required patient parameters unavailable: Height, Weight
"RTN","PSSDSEXC",208,0)
 ;;15;;Frequency greater than order duration
"RTN","PSSDSEXC",209,0)
 Q
"RTN","PSSDSEXC",210,0)
 ;
"RTN","PSSDSEXC",211,0)
 ;
"RTN","PSSDSEXC",212,0)
DUNIT() ;Find unit
"RTN","PSSDSEXC",213,0)
 ;Piece 3 of PSSDBCAR must be a File 50 IEN
"RTN","PSSDSEXC",214,0)
 N PSSDBEG1,PSSDBEG2,PSSDBEG3,PSSDBEG4,PSSDBEG5,PSSDBEG6,PSSDBEG7,X,Y
"RTN","PSSDSEXC",215,0)
 S PSSDBEG4=""
"RTN","PSSDSEXC",216,0)
 S PSSDBEG1=$P(PSSDBCAR(PSSDBEB1),"^",3)
"RTN","PSSDSEXC",217,0)
 I PSSDBEG1 D  I PSSDBEG4'="" Q PSSDBEG4
"RTN","PSSDSEXC",218,0)
 .S PSSDBEG2=$P($G(^PSDRUG(PSSDBEG1,"ND")),"^"),PSSDBEG3=$P($G(^PSDRUG(PSSDBEG1,"ND")),"^",3)
"RTN","PSSDSEXC",219,0)
 .I 'PSSDBEG2!('PSSDBEG3) Q
"RTN","PSSDSEXC",220,0)
 .S PSSDBEG5=$$DFSU^PSNAPIS(PSSDBEG2,PSSDBEG3)
"RTN","PSSDSEXC",221,0)
 .S PSSDBEG6=$P(PSSDBEG5,"^",6)
"RTN","PSSDSEXC",222,0)
 .I PSSDBEG6'="" S PSSDBEG7=$$UNIT^PSSDSAPI(PSSDBEG6) I PSSDBEG7'="" S PSSDBEG4=PSSDBEG7
"RTN","PSSDSEXC",223,0)
 I PSSDBEG1 F PSSDBEG2=0:0 S PSSDBEG2=$O(^PSDRUG(PSSDBEG1,"DOS2",PSSDBEG2)) Q:'PSSDBEG2!(PSSDBEG4'="")  D
"RTN","PSSDSEXC",224,0)
 .S PSSDBEG3=$P($G(^PSDRUG(PSSDBEG1,"DOS2",PSSDBEG2,0)),"^",5)
"RTN","PSSDSEXC",225,0)
 .I PSSDBEG3,$P($G(^PS(51.24,PSSDBEG3,0)),"^",2)'="" S PSSDBEG4=$P(^PS(51.24,PSSDBEG3,0),"^",2)
"RTN","PSSDSEXC",226,0)
 I PSSDBEG4'="" Q PSSDBEG4
"RTN","PSSDSEXC",227,0)
 I PSSDBEG1 S PSSDBEG2=$P($G(^PSDRUG(PSSDBEG1,2)),"^") I PSSDBEG2 D
"RTN","PSSDSEXC",228,0)
 .S PSSDBEG3=$P($G(^PS(50.7,PSSDBEG2,0)),"^",2) I PSSDBEG3 D
"RTN","PSSDSEXC",229,0)
 ..F PSSDBEG5=0:0 S PSSDBEG5=$O(^PS(50.606,PSSDBEG3,"NOUN",PSSDBEG5)) Q:'PSSDBEG5!(PSSDBEG4'="")  D
"RTN","PSSDSEXC",230,0)
 ...S PSSDBEG6=$P($G(^PS(50.606,PSSDBEG3,"NOUN",PSSDBEG5,0)),"^")
"RTN","PSSDSEXC",231,0)
 ...I PSSDBEG6'="" S PSSDBEG7=$$UNIT^PSSDSAPI(PSSDBEG6) I PSSDBEG7'="" S PSSDBEG4=PSSDBEG7
"RTN","PSSDSEXC",232,0)
 I PSSDBEG4'="" Q PSSDBEG4
"RTN","PSSDSEXC",233,0)
 Q "EACH"
"RTN","PSSDSEXC",234,0)
 ;
"RTN","PSSDSEXC",235,0)
 ;
"RTN","PSSDSEXC",236,0)
DFM() ;get Dose Form Indicator
"RTN","PSSDSEXC",237,0)
 N PSSDFDFK,PSSDFDFL
"RTN","PSSDSEXC",238,0)
 I $G(PSSDBAR("UNIT"))="" Q 0
"RTN","PSSDSEXC",239,0)
 S PSSDFDFL=0 F PSSDFDFK=0:0 S PSSDFDFK=$O(^PS(51.24,"C",PSSDBAR("UNIT"),PSSDFDFK)) Q:'PSSDFDFK!(PSSDFDFL)  I '$$SCREEN^XTID(51.24,.01,PSSDFDFK_",") S PSSDFDFL=PSSDFDFK
"RTN","PSSDSEXC",240,0)
 I PSSDFDFL,$P($G(^PS(51.24,PSSDFDFL,0)),"^",3) Q 1
"RTN","PSSDSEXC",241,0)
 Q 0
"RTN","PSSDSEXC",242,0)
 ;
"RTN","PSSDSEXC",243,0)
 ;
"RTN","PSSDSEXC",244,0)
HDER1 ;Set header for exceptions for Output 1
"RTN","PSSDSEXC",245,0)
 I PSSDWEGC["Frequency" D  S PSSDWER9=1 Q
"RTN","PSSDSEXC",246,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE4)="Daily Dose Range Check could not be performed for Drug: "_PSSDWEE1
"RTN","PSSDSEXC",247,0)
 S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE4)="Maximum Single Dose Check could not be done for Drug: "_PSSDWEE1 Q
"RTN","PSSDSEXC",248,0)
 ;S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE4)=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",7)   2.0 Commented out, added previous line
"RTN","PSSDSEXC",249,0)
 Q
"RTN","PSSDSEXC",250,0)
 ;
"RTN","PSSDSEXC",251,0)
 ;
"RTN","PSSDSEXC",252,0)
HDER2 ;Set header for exceptions for Output 2
"RTN","PSSDSEXC",253,0)
 I PSSDWEGC["Frequency" D  S PSSDWER9=1 Q
"RTN","PSSDSEXC",254,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",PSSDWE4)="Daily Dose Range Check could not be performed for Drug: "_PSSDWEE1
"RTN","PSSDSEXC",255,0)
 S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",PSSDWE4)="Maximum Single Dose Check could not be performed for Drug: "_PSSDWEE1 Q
"RTN","PSSDSEXC",256,0)
 ;S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",PSSDWE4)=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",7) 2.0 Commented out, added previous line
"RTN","PSSDSEXC",257,0)
 Q
"RTN","PSSDSEXC",258,0)
 ;
"RTN","PSSDSEXC",259,0)
 ;
"RTN","PSSDSEXC",260,0)
HDER3 ;Reset header node for Output 1 to Non-Frequency header
"RTN","PSSDSEXC",261,0)
 S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,1)="Maximum Single Dose Check could not be done for Drug: "_PSSDWEE1 ;2.0 CHANGE
"RTN","PSSDSEXC",262,0)
 Q
"RTN","PSSDSEXC",263,0)
 ;
"RTN","PSSDSEXC",264,0)
 ;
"RTN","PSSDSEXC",265,0)
HDER4 ;Reset header node for Output 2 to Non-frequency header
"RTN","PSSDSEXC",266,0)
 S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",1)="Maximum Single Dose Check could not be performed for Drug: "_PSSDWEE1 ;2.0 CHANGE
"RTN","PSSDSEXC",267,0)
 Q
"RTN","PSSDSEXC",268,0)
 ;
"RTN","PSSDSEXC",269,0)
 ;
"RTN","PSSDSEXC",270,0)
ADJU ;Set Adjusted Dose message
"RTN","PSSDSEXC",271,0)
 S:$G(PSSDBFDB(PSSDBLP,"ADJ_MSG"))'="" PSSDBADJ(PSSDBFDB(PSSDBLP,"RX_NUM"))=$G(PSSDBFDB(PSSDBLP,"ADJ_MSG"))
"RTN","PSSDSEXC",272,0)
 Q
"RTN","PSSDSEXC",273,0)
 ;
"RTN","PSSDSEXC",274,0)
 ;
"RTN","PSSDSEXC",275,0)
DSQ ;
"RTN","PSSDSEXC",276,0)
 S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEX4)=^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEX4)_$P(PSSDWEX6,";;",3)
"RTN","PSSDSEXC",277,0)
 I $G(PSSDBCAX(PSSDWEX3,PSSDWEX5))="" Q
"RTN","PSSDSEXC",278,0)
 S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEX4)=^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEX4)_$G(PSSDBCAX(PSSDWEX3,PSSDWEX5))
"RTN","PSSDSEXC",279,0)
 Q
"RTN","PSSDSONF")
0^26^B29486467
"RTN","PSSDSONF",1,0)
PSSDSONF ;BIR/RTR-Dosing On/Off Parameter ;07/09/12
"RTN","PSSDSONF",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**160**;9/30/97;Build 76
"RTN","PSSDSONF",3,0)
 ;
"RTN","PSSDSONF",4,0)
EN ;Turn Dosing On and Off
"RTN","PSSDSONF",5,0)
 N PSSDONA,PSSDONLK,PSSDONR,PSSDONTS,DIC,DIE,DA,DR,DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","PSSDSONF",6,0)
 S PSSDONA=$P($G(^PS(59.7,1,81)),"^"),PSSDONTS=1 I '$$PROD^XUPROD S PSSDONTS=0
"RTN","PSSDSONF",7,0)
 W !!?5,$S(PSSDONA:"Dosing Order Checks are currently ENABLED.",1:"WARNING! Dosing Order Checks are currently DISABLED.")
"RTN","PSSDSONF",8,0)
 I PSSDONA G ON
"RTN","PSSDSONF",9,0)
 W !!,"No Dosing Order Checks will be performed during order entry in CPRS or",!,"Pharmacy while Dosing Order Checks are disabled!!!"
"RTN","PSSDSONF",10,0)
 D LCK I 'PSSDONLK D END Q
"RTN","PSSDSONF",11,0)
 W ! K DIR,DTOUT,DUOUT S DIR(0)="Y",DIR("B")="YES",DIR("A")="Do you wish to ENABLE Dosing Order Checks"
"RTN","PSSDSONF",12,0)
 S DIR("?",1)="Enter 'YES' to enable all Dosing Order Checks for Outpatient Pharmacy,"
"RTN","PSSDSONF",13,0)
 S DIR("?")="Inpatient Medications and Computerized Patient Record System (CPRS)."
"RTN","PSSDSONF",14,0)
 D ^DIR K DIR I Y'=1!($D(DTOUT))!($D(DUOUT)) W !!?5,"WARNING! Dosing Order Checks remain DISABLED." D  D UNLCK,END Q
"RTN","PSSDSONF",15,0)
 .W !!,"NO Dosing Order Checks will be performed during order entry in CPRS",!,"or Pharmacy while Dosing Order Checks are disabled!!!"
"RTN","PSSDSONF",16,0)
 K PSSDONR K ^TMP("DIERR",$J) S PSSDONR(59.7,"1,",95)=1 D FILE^DIE("","PSSDONR") K ^TMP("DIERR",$J)
"RTN","PSSDSONF",17,0)
 I '$P($G(^PS(59.7,1,81)),"^") W !!?5,"UNABLE to enable Dosing Order Checks! Please contact",!?5,"local support for assistance." D UNLCK,END Q
"RTN","PSSDSONF",18,0)
 W !!?5,"Dosing Order Checks ENABLED.",! D TMES
"RTN","PSSDSONF",19,0)
 D SEND(1,0),SEND(1,1) D UNLCK,END Q
"RTN","PSSDSONF",20,0)
 Q
"RTN","PSSDSONF",21,0)
 ;
"RTN","PSSDSONF",22,0)
 ;
"RTN","PSSDSONF",23,0)
ON ;
"RTN","PSSDSONF",24,0)
 D LCK I 'PSSDONLK D END Q
"RTN","PSSDSONF",25,0)
 W ! K DIR,DTOUT,DUOUT S DIR(0)="Y",DIR("B")="NO",DIR("A")="Do you wish to DISABLE Dosing Order Checks"
"RTN","PSSDSONF",26,0)
 S DIR("?",1)="Enter 'YES' to disable all Dosing Order Checks for Outpatient Pharmacy,"
"RTN","PSSDSONF",27,0)
 S DIR("?")="Inpatient Medications and CPRS."
"RTN","PSSDSONF",28,0)
 D ^DIR K DIR I Y'=1!($D(DTOUT))!($D(DUOUT)) W !!?5,"Dosing Order Checks remain ENABLED." D UNLCK,END Q
"RTN","PSSDSONF",29,0)
 W ! K DIR,DTOUT,DUOUT S DIR(0)="Y",DIR("B")="NO",DIR("A")="to take this action"
"RTN","PSSDSONF",30,0)
 S DIR("A",1)="Have you received authorization from Pharmacy Benefits Management (PBM)"
"RTN","PSSDSONF",31,0)
 S DIR("?",1)="To turn Dosing Off, authorization must first come from Pharmacy",DIR("?")="Benefits Management (PBM)."
"RTN","PSSDSONF",32,0)
 D ^DIR I Y'=1!($D(DTOUT))!($D(DUOUT)) W !!?5,"Dosing Order Checks remain ENABLED." D UNLCK,END Q
"RTN","PSSDSONF",33,0)
 W !!,"NO Dosing Order Checks will be performed during order entry in CPRS"
"RTN","PSSDSONF",34,0)
 W !,"or Pharmacy while Dosing Order Checks are disabled!!!",!!,"Notification of this action will be sent to PBM and local VistA"
"RTN","PSSDSONF",35,0)
 W !,"PSS ORDER CHECKS mail group."
"RTN","PSSDSONF",36,0)
 W ! K DIR,DTOUT,DUOUT S DIR(0)="Y",DIR("B")="NO",DIR("A")="Are you sure you want to DISABLE Dosing Order Checks"
"RTN","PSSDSONF",37,0)
 S DIR("?",1)="Enter 'YES' to disable all Dosing Order Checks for Outpatient Pharmacy,"
"RTN","PSSDSONF",38,0)
 S DIR("?")="Inpatient Medications and CPRS."
"RTN","PSSDSONF",39,0)
 D ^DIR K DIR I Y'=1!($D(DTOUT))!($D(DUOUT)) W !!?5,"Dosing Order Checks remain ENABLED." D UNLCK,END Q
"RTN","PSSDSONF",40,0)
 K PSSDONR K ^TMP("DIERR",$J) S PSSDONR(59.7,"1,",95)=0 D FILE^DIE("","PSSDONR") K ^TMP("DIERR",$J)
"RTN","PSSDSONF",41,0)
 I $P($G(^PS(59.7,1,81)),"^") W !!?5,"UNABLE to disable Dosing Order Checks! Please contact",!?5,"local support for assistance." D UNLCK,END Q
"RTN","PSSDSONF",42,0)
 W !!?5,"Dosing Order Checks DISABLED.",! D TMES
"RTN","PSSDSONF",43,0)
 D SEND(0,0),SEND(0,1) D UNLCK,END Q
"RTN","PSSDSONF",44,0)
 Q
"RTN","PSSDSONF",45,0)
 ;
"RTN","PSSDSONF",46,0)
 ;
"RTN","PSSDSONF",47,0)
TMES ;Write final message
"RTN","PSSDSONF",48,0)
 I 'PSSDONTS W !,"Note: This is a TEST account. This request will NOT be sent forward to PBM",!,"on Outlook mail." Q
"RTN","PSSDSONF",49,0)
 W !,"NOTIFICATION OF THIS ACTION has been forwarded to PBM and local",!,"VistA PSS ORDER CHECKS mail group."
"RTN","PSSDSONF",50,0)
 Q
"RTN","PSSDSONF",51,0)
 ;
"RTN","PSSDSONF",52,0)
 ;
"RTN","PSSDSONF",53,0)
SEND(PSSDONW,PSSDONAB) ;Send mail message
"RTN","PSSDSONF",54,0)
 I 'PSSDONTS,PSSDONAB Q
"RTN","PSSDSONF",55,0)
 N XMTEXT,XMY,XMSUB,XMDUZ,XMMG,XMSTRIP,XMROU,XMDUN,DIFROM,XMYBLOB,XMZ,X,Y,%,%H,%I,%DT,PSSDONSC,PSSDONLC,PSSDONDZ
"RTN","PSSDSONF",56,0)
 S XMSUB="DOSING ORDER CHECKS "_$S(PSSDONW:"ENABLED",1:"DISABLED")
"RTN","PSSDSONF",57,0)
 S XMDUZ=DUZ
"RTN","PSSDSONF",58,0)
 D NOW^%DTC S Y=%,%DT="S" D DD^%DT S PSSDONSC=Y
"RTN","PSSDSONF",59,0)
 S PSSDONLC=$P($$SITE^VASITE(),"^",2)
"RTN","PSSDSONF",60,0)
 S PSSDONDZ=$$GET1^DIQ(200,DUZ_",",.01)
"RTN","PSSDSONF",61,0)
 K ^TMP($J,"PSSDSOTX")
"RTN","PSSDSONF",62,0)
 I PSSDONAB D
"RTN","PSSDSONF",63,0)
 .S ^TMP($J,"PSSDSOTX",1,0)=$G(PSSDONDZ)_" from "_$G(PSSDONLC)
"RTN","PSSDSONF",64,0)
 .S ^TMP($J,"PSSDSOTX",2,0)="has "_$S(PSSDONW:"ENABLED",1:"DISABLED")_" Dosing Order Checks on "_$G(PSSDONSC)_"."
"RTN","PSSDSONF",65,0)
 I 'PSSDONAB D
"RTN","PSSDSONF",66,0)
 .S ^TMP($J,"PSSDSOTX",1,0)=$G(PSSDONDZ)_" has "_$S(PSSDONW:"ENABLED",1:"DISABLED")_" Dosing Order Checks on "_$G(PSSDONSC)_"."
"RTN","PSSDSONF",67,0)
 S XMTEXT="^TMP($J,""PSSDSOTX"","
"RTN","PSSDSONF",68,0)
 I 'PSSDONAB D 
"RTN","PSSDSONF",69,0)
 .S XMY(DUZ)=""
"RTN","PSSDSONF",70,0)
 .S XMY("G.PSS ORDER CHECKS")=""
"RTN","PSSDSONF",71,0)
 I PSSDONTS,PSSDONAB  S XMY("MOCHADOSINGDISCONNECTNOTIFY@domain.ext")=""
"RTN","PSSDSONF",72,0)
 D ^XMD
"RTN","PSSDSONF",73,0)
 K ^TMP($J,"PSSDSOTX")
"RTN","PSSDSONF",74,0)
 Q
"RTN","PSSDSONF",75,0)
 ;
"RTN","PSSDSONF",76,0)
 ;
"RTN","PSSDSONF",77,0)
LCK ;Lock node
"RTN","PSSDSONF",78,0)
 S PSSDONLK=0 L +^PS(59.7,1,81):$S($G(DILOCKTM)>0:DILOCKTM,1:3) I '$T W !!,"Another person is editing the Dosing On/Off Switch." Q
"RTN","PSSDSONF",79,0)
 S PSSDONLK=1
"RTN","PSSDSONF",80,0)
 Q
"RTN","PSSDSONF",81,0)
 ;
"RTN","PSSDSONF",82,0)
 ;
"RTN","PSSDSONF",83,0)
UNLCK ;Unlock node
"RTN","PSSDSONF",84,0)
 L -^PS(59.7,1,81)
"RTN","PSSDSONF",85,0)
 Q
"RTN","PSSDSONF",86,0)
 ;
"RTN","PSSDSONF",87,0)
 ;
"RTN","PSSDSONF",88,0)
END ;
"RTN","PSSDSONF",89,0)
 K DIR W ! S DIR(0)="E",DIR("A")="Press Return to continue" D ^DIR K DIR W !
"RTN","PSSDSONF",90,0)
 Q
"RTN","PSSDSONF",91,0)
 ;
"RTN","PSSDSONF",92,0)
 ;
"RTN","PSSDSONF",93,0)
ACLOG ;Set activity log multiple for DOSING ON/OFF switch.
"RTN","PSSDSONF",94,0)
 I $G(X1(1))=$G(X2(1)) Q
"RTN","PSSDSONF",95,0)
 N PSSDHAH,PSSDHAHX,%,%H,%I,X
"RTN","PSSDSONF",96,0)
 S PSSDHAH("DA")=DA
"RTN","PSSDSONF",97,0)
 D NOW^%DTC S PSSDHAHX(59.782,"+1,"_PSSDHAH("DA")_",",.01)=%
"RTN","PSSDSONF",98,0)
 S PSSDHAHX(59.782,"+1,"_PSSDHAH("DA")_",",1)=$G(DUZ)
"RTN","PSSDSONF",99,0)
 S PSSDHAHX(59.782,"+1,"_PSSDHAH("DA")_",",2)=$G(X2(1))
"RTN","PSSDSONF",100,0)
 K ^TMP("DIERR",$J)
"RTN","PSSDSONF",101,0)
 D UPDATE^DIE("","PSSDHAHX")
"RTN","PSSDSONF",102,0)
 K ^TMP("DIERR",$J)
"RTN","PSSDSONF",103,0)
 Q 
"RTN","PSSEN168")
1^23^B0
"RTN","PSSFDBDI")
0^25^B129510787
"RTN","PSSFDBDI",1,0)
PSSFDBDI ;BIR/LE - Sends XML Request to PEPS via HWSC for Dose Information ;01/23/12
"RTN","PSSFDBDI",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**160**;9/30/97;Build 76
"RTN","PSSFDBDI",3,0)
 ;
"RTN","PSSFDBDI",4,0)
 ;Reference to PSNDF(50.68 supported by DBIA 3735
"RTN","PSSFDBDI",5,0)
 ;
"RTN","PSSFDBDI",6,0)
 ; this routine is responsible for performing dosing information queries against a drug database to retrieve dose information.
"RTN","PSSFDBDI",7,0)
 ; the architecture parses the XML stream into tokens and is stored in a ^TMP($J,"PSSFDBDI")
"RTN","PSSFDBDI",8,0)
 ;
"RTN","PSSFDBDI",9,0)
 ;NEW file structure:
"RTN","PSSFDBDI",10,0)
 ;^TMP($J,"PSSFDBDI",0)=file description^^total # sequences^total # sequences
"RTN","PSSFDBDI",11,0)
 ;^TMP($J,"PSSFDBDI",PSSGCN,0)=GCNSEQNO evaluated^passed in GCNSEQNO^dispensableDrugName^dispensableDrugDescription^fdbdx
"RTN","PSSFDBDI",12,0)
 ;^TMP($J,"PSSFDBDI",PSSGCN,doseRanges",SEQ,1,0)=custom^category^dosetypeid^dosetypedescription^doserouteid^doseroutedescription^agelowindays^agehigh indays
"RTN","PSSFDBDI",13,0)
 ;^TMP($J,"PSSFDBDI",PSSGCN,doseRanges",SEQ,2,0)=hitIndicationID^hitindication description^indicationid^indicationdescription^^indicationidtype^resulttype^warningcode
"RTN","PSSFDBDI",14,0)
 ;^TMP($J,"PSSFDBDI",PSSGCN,doseRanges",SEQ,3,0)=bsarequired^weightrequired^hepaticimpairement^renal impairement^loweliminationhalflife^higheliminationhalflife^halflifeunit^crclthreshold^crclthresholdunit
"RTN","PSSFDBDI",15,0)
 ;^TMP($J,"PSSFDBDI",PSSGCN,doseRanges",SEQ,4,0)=durationlow^durationhigh^maxduration^frequencylow^frequencyhigh
"RTN","PSSFDBDI",16,0)
 ;^TMP($J,"PSSFDBDI",PSSGCN,doseRanges",SEQ,5,0)=doselow^doselowunit^dosehigh^dosehighunit^doseformlow^doseformlowunit^doseformhigh^doseformhighunit
"RTN","PSSFDBDI",17,0)
 ;^TMP($J,"PSSFDBDI",PSSGCN,doseRanges",SEQ,6,0)=maxsingledose^maxsingledoseunit^maxsingledoseform^maxsingledoseformunit^maxdailydose^maxdailydoseunit^maxdailydoseform^maxdailydoseformunit
"RTN","PSSFDBDI",18,0)
 ;^TMP($J,"PSSFDBDI",PSSGCN,doseRanges",SEQ,7,0)maxlidfetimedose^maxlifetimedoseunit^maxlifetimedoseform^maxlifetimedoseformunit
"RTN","PSSFDBDI",19,0)
 ;^TMP($J,"PSSFDBDI",PSSGCN,"minMax",ageLowInDays,ageHighInDays,1)=doseLow^doseLowUnit^doseHigh^doseHighUnit^doseFormLow^doseFormLowUnit^doseFormHigh^doseFormHighUnit
"RTN","PSSFDBDI",20,0)
 ;^TMP($J,"PSSFDBDI",PSSGCN,"minMax",ageLowInDays,ageHighInDays,2)=maxDailyDose^maxDailyDoseUnit^maxDailyDoseForm^maxDailyDoseFormUnit^resultType^warningCode^bsaRequired^weightRequired
"RTN","PSSFDBDI",21,0)
 ;
"RTN","PSSFDBDI",22,0)
 ; Cross References "doseRanges" nodes:
"RTN","PSSFDBDI",23,0)
 ;^TMP($J,"PSSFDBDI","A",doseTypeId,ageLowInDays,ageHighInDays,SEQ)=custom
"RTN","PSSFDBDI",24,0)
 ;^TMP($J,"PSSFDBDI","B",gcnSeqNo)=dispensableDrugName
"RTN","PSSFDBDI",25,0)
 ;^TMP($J,"PSSFDBDI","C",ageLowInDays,ageHighInDays,doseTypeId,SEQ)=custom
"RTN","PSSFDBDI",26,0)
 ;
"RTN","PSSFDBDI",27,0)
 Q
"RTN","PSSFDBDI",28,0)
EN(PSSGCN,PSSOUT) ;get dosing information based on GCNSEQNO
"RTN","PSSFDBDI",29,0)
 ; input: PSSGCN  - GCCNSEQNO from file 50.68
"RTN","PSSFDBDI",30,0)
 ;
"RTN","PSSFDBDI",31,0)
 ; output: builds TMP file for dosing information
"RTN","PSSFDBDI",32,0)
 ;             e.g.  ^TMP($J,"PSSFDBDI"
"RTN","PSSFDBDI",33,0)
 ;                     PSSOUT(0) = 1 for successful
"RTN","PSSFDBDI",34,0)
 ;                                           -1^error message  (when an error occurs:  example  "-1^ERROR #6059: Unable to open TCP/IP socket to server nn.n.nnn.nn:nnnn"
"RTN","PSSFDBDI",35,0)
 ;
"RTN","PSSFDBDI",36,0)
 K ^TMP($J,"PSSFDBDI")
"RTN","PSSFDBDI",37,0)
 I PSSGCN=""!(PSSGCN=0) S PSSOUT="",PSSOUT(0)="-1^GCN sequence number is not defined." Q
"RTN","PSSFDBDI",38,0)
 N PSSXML,PSSFDBDX,GCNSEQ,BASE,PSSRETR2,PSSFDBDN
"RTN","PSSFDBDI",39,0)
 S PSSFDBDN=$$CHKSTAT^PSSDSFDB() I PSSFDBDN S PSSOUT(0)=PSSFDBDN Q
"RTN","PSSFDBDI",40,0)
 S GCNSEQ=PSSGCN,BASE=$T(+0)_" DOSEINFO"
"RTN","PSSFDBDI",41,0)
 S PSSXML=$$BLDXML(GCNSEQ)   ; build the xml request
"RTN","PSSFDBDI",42,0)
RETRY ;Retry line tag
"RTN","PSSFDBDI",43,0)
 D POST(PSSXML,PSSGCN,.PSSOUT)    ; post the request and process the results
"RTN","PSSFDBDI",44,0)
 I $P($G(PSSOUT(0)),"^")=-1,'$G(PSSRETR2) K PSSOUT S PSSRETR2=1 H 3 G RETRY
"RTN","PSSFDBDI",45,0)
 Q
"RTN","PSSFDBDI",46,0)
 ;
"RTN","PSSFDBDI",47,0)
BLDXML(GCNSEQ) ; build and return the XML request with drug information for given GCN sequence number
"RTN","PSSFDBDI",48,0)
 ;  input: drug IEN from drug file (#50)
"RTN","PSSFDBDI",49,0)
 ; output: returns the XML request for given GCN sequence number
"RTN","PSSFDBDI",50,0)
 ;             Example:  where 22211 is the GCN Sequence number passed by reference at line tag EN above.
"RTN","PSSFDBDI",51,0)
 ;                                PSSXML="<?xml version=""1.0"" encoding=""utf-8"" ?><dosingInfoRequest  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" 
"RTN","PSSFDBDI",52,0)
 ;                                         xsi:schemaLocation=""gov/va/med/pharmacy/peps/external/common/preencapsulation/vo/dosing/info/request dosingInfoSchemaInput.xsd"" 
"RTN","PSSFDBDI",53,0)
 ;                                         xmlns=""gov/va/med/pharmacy/peps/external/common/preencapsulation/vo/dosing/info/request"">
"RTN","PSSFDBDI",54,0)
 ;                                         <dosingInfo gcnSeqNo=""22211"" fdbdx=""999"" />
"RTN","PSSFDBDI",55,0)
 ;                                         </dosingInfoRequest>"
"RTN","PSSFDBDI",56,0)
 ;
"RTN","PSSFDBDI",57,0)
 N DRUGTAG,ENDTAG,FDBDX,SPACE,TAG,SUBXML,SCHEMA,XMLNS,SPACE,DOSETAG
"RTN","PSSFDBDI",58,0)
 S PSSXML="",SPACE=$C(32)
"RTN","PSSFDBDI",59,0)
 ;
"RTN","PSSFDBDI",60,0)
 ;xml header info - <?xml version="1.0" encoding="utf-8" ?>
"RTN","PSSFDBDI",61,0)
 S PSSXML=PSSXML_$$XMLHDR^MXMLUTL
"RTN","PSSFDBDI",62,0)
 ;
"RTN","PSSFDBDI",63,0)
 S SPACE=$C(32)
"RTN","PSSFDBDI",64,0)
 S SCHEMA="gov/va/med/pharmacy/peps/external/common/preencapsulation/vo/dosing/info/request dosingInfoSchemaInput.xsd"
"RTN","PSSFDBDI",65,0)
 S XMLNS="gov/va/med/pharmacy/peps/external/common/preencapsulation/vo/dosing/info/request"
"RTN","PSSFDBDI",66,0)
 S TAG="dosingInfoRequest"
"RTN","PSSFDBDI",67,0)
 S SUBXML="<"_TAG_SPACE
"RTN","PSSFDBDI",68,0)
 S SUBXML=SUBXML_$$ATRIBUTE^PSSHRCOM(SPACE_"xmlns:xsi","http://www.w3.org/2001/XMLSchema-instance")
"RTN","PSSFDBDI",69,0)
 S SUBXML=SUBXML_$$ATRIBUTE^PSSHRCOM(SPACE_"xsi:schemaLocation",SCHEMA)
"RTN","PSSFDBDI",70,0)
 S SUBXML=SUBXML_$$ATRIBUTE^PSSHRCOM(SPACE_"xmlns",XMLNS)
"RTN","PSSFDBDI",71,0)
 S PSSXML=PSSXML_SUBXML_">"
"RTN","PSSFDBDI",72,0)
 S DOSETAG="<dosingInfo",ENDTAG="/>",FDBDX=999
"RTN","PSSFDBDI",73,0)
 S PSSXML=PSSXML_DOSETAG_SPACE_$$ATRIBUTE^PSSHRCOM("gcnSeqNo",GCNSEQ)_SPACE_$$ATRIBUTE^PSSHRCOM("fdbdx",FDBDX)_SPACE_ENDTAG
"RTN","PSSFDBDI",74,0)
 S PSSXML=PSSXML_"</"_TAG_">"
"RTN","PSSFDBDI",75,0)
 Q PSSXML
"RTN","PSSFDBDI",76,0)
 ;
"RTN","PSSFDBDI",77,0)
POST(XML,PSSGCN,PSSOUT) ; post the XML request to PEPS server and return the routes
"RTN","PSSFDBDI",78,0)
 ;  input: XML request
"RTN","PSSFDBDI",79,0)
 ; output: PSSOUT - array containing the list of route names for the given drug.
"RTN","PSSFDBDI",80,0)
 ;
"RTN","PSSFDBDI",81,0)
 N PSS,PSSERR,PSSFDBDI S PSSFDBDI=1
"RTN","PSSFDBDI",82,0)
 N $ETRAP,$ESTACK
"RTN","PSSFDBDI",83,0)
 ; Set error trap
"RTN","PSSFDBDI",84,0)
 SET $ETRAP="DO ERROR^PSSHTTP"
"RTN","PSSFDBDI",85,0)
 K ^TMP($J,"OUT")    ; if exists from previous runs, posting would not execute.
"RTN","PSSFDBDI",86,0)
 ;
"RTN","PSSFDBDI",87,0)
 S PSS("server")="PEPS"
"RTN","PSSFDBDI",88,0)
 S PSS("webserviceName")="DOSING_INFO"
"RTN","PSSFDBDI",89,0)
 S PSS("path")="dosinginfo"
"RTN","PSSFDBDI",90,0)
 S PSS("parameterName")="xmlRequest"
"RTN","PSSFDBDI",91,0)
 S PSS("parameterValue")=XML
"RTN","PSSFDBDI",92,0)
 ;
"RTN","PSSFDBDI",93,0)
 ; get instance of client REST request object
"RTN","PSSFDBDI",94,0)
 SET PSS("restObject")=$$GETREST^XOBWLIB(PSS("webserviceName"),PSS("server"))
"RTN","PSSFDBDI",95,0)
 IF $DATA(^TMP($JOB,"OUT","EXCEPTION"))>0 S PSSOUT(0)="-1^"_^TMP($JOB,"OUT","EXCEPTION") K ^TMP($JOB,"OUT","EXCEPTION") Q PSSOUT
"RTN","PSSFDBDI",96,0)
 ;
"RTN","PSSFDBDI",97,0)
 ; insert XML as parameter
"RTN","PSSFDBDI",98,0)
 DO PSS("restObject").InsertFormData(PSS("parameterName"),PSS("parameterValue"))
"RTN","PSSFDBDI",99,0)
 IF $DATA(^TMP($JOB,"OUT","EXCEPTION"))>0 S PSSOUT(0)="-1^"_^TMP($JOB,"OUT","EXCEPTION") K ^TMP($JOB,"OUT","EXCEPTION") QUIT PSSOUT
"RTN","PSSFDBDI",100,0)
 ;
"RTN","PSSFDBDI",101,0)
 ; execute HTTP Post method
"RTN","PSSFDBDI",102,0)
 SET PSS("postResult")=$$POST^XOBWLIB(PSS("restObject"),PSS("path"),.PSSERR)
"RTN","PSSFDBDI",103,0)
 IF $DATA(^TMP($JOB,"OUT","EXCEPTION"))>0 S PSSOUT(0)="-1^"_^TMP($JOB,"OUT","EXCEPTION") K ^TMP($JOB,"OUT","EXCEPTION") QUIT PSSOUT
"RTN","PSSFDBDI",104,0)
 ;
"RTN","PSSFDBDI",105,0)
 ; error handling
"RTN","PSSFDBDI",106,0)
 DO:'PSS("postResult")
"RTN","PSSFDBDI",107,0)
 . SET PSSOUT(0)=-1_U_"Unable to make http request."
"RTN","PSSFDBDI",108,0)
 . SET PSS("result")=0
"RTN","PSSFDBDI",109,0)
 . QUIT
"RTN","PSSFDBDI",110,0)
 ;
"RTN","PSSFDBDI",111,0)
 ; if every thing is ok parse the returned xml result
"RTN","PSSFDBDI",112,0)
 I PSS("postResult") S PSS("result")=1 D PRSSTRM(PSS("restObject"),PSSGCN,.PSSOUT)
"RTN","PSSFDBDI",113,0)
 S PSSOUT(0)=1
"RTN","PSSFDBDI",114,0)
 I $D(^TMP($J,"OUT","EXCEPTION")) S PSSOUT(0)="-1^"_^TMP($J,"OUT","EXCEPTION") K ^TMP($J,"OUT","EXCEPTION"),^TMP($J,"PSSFDBDI")
"RTN","PSSFDBDI",115,0)
 Q PSS("result")
"RTN","PSSFDBDI",116,0)
 ;
"RTN","PSSFDBDI",117,0)
PRSSTRM(RESTOBJ,PSSGCN,PSSOUT) ;  parse the XML into token
"RTN","PSSFDBDI",118,0)
 ;  input: RESTOBJ--a rest object
"RTN","PSSFDBDI",119,0)
 ; output: PSSOUT - array containing the list of route names for the given drug.
"RTN","PSSFDBDI",120,0)
 ;
"RTN","PSSFDBDI",121,0)
 ; parse the XML into tokens. the first part of the token is the type of node being read.
"RTN","PSSFDBDI",122,0)
 ; the second part is the data--either the name of the node, or data. these fields are delimited using "<>".
"RTN","PSSFDBDI",123,0)
 ; if the node is type attribute, each attribute is separated by a caret ("^").
"RTN","PSSFDBDI",124,0)
 ;
"RTN","PSSFDBDI",125,0)
 N AREADER
"RTN","PSSFDBDI",126,0)
 S AREADER=$$GETREADR^PSSFDBRT(RESTOBJ)
"RTN","PSSFDBDI",127,0)
 D PARSXML(AREADER,PSSGCN,.PSSOUT)
"RTN","PSSFDBDI",128,0)
 Q
"RTN","PSSFDBDI",129,0)
 ;
"RTN","PSSFDBDI",130,0)
PARSXML(AREADER,PSSGCN,PSSOUT) ; extract the list of routes from XML results
"RTN","PSSFDBDI",131,0)
 ;  input: AREADER-%XML.TextReader object.
"RTN","PSSFDBDI",132,0)
 ;
"RTN","PSSFDBDI",133,0)
 N DRGDESC,DRGFLG,ATOKEN,DTOKEN,NODETYPE,GCNSEQ,FDBDX,PSSDR,PSSMM,PSSOUT2,PSSSEQ,I,SEQ,SEQ2,SEQ3,SEQ4,TYP2,TYP3,LDAY,HDAY,FTYPE,MMSEQ,MMATR
"RTN","PSSFDBDI",134,0)
 D GETFILE(.PSSDR,.PSSMM) S (PSSSEQ,MMSEQ,MMATR)=0
"RTN","PSSFDBDI",135,0)
 F  D  Q:AREADER.EOF
"RTN","PSSFDBDI",136,0)
 .S ATOKEN=$$GETTOKEN(AREADER)
"RTN","PSSFDBDI",137,0)
 .I '$L(ATOKEN) Q
"RTN","PSSFDBDI",138,0)
 .S NODETYPE=$P(ATOKEN,"<>"),ATOKEN=$P(ATOKEN,"<>",2)
"RTN","PSSFDBDI",139,0)
 .Q:NODETYPE["exception"
"RTN","PSSFDBDI",140,0)
 .; inside dosing attributes
"RTN","PSSFDBDI",141,0)
 .I ATOKEN="dispensableDrugName" S DTOKEN="",DTOKEN=$$GETTOKEN(AREADER) S $P(PSSOUT2(GCNSEQ),"^",3)=$P(DTOKEN,"<>",2) Q
"RTN","PSSFDBDI",142,0)
 .I ATOKEN="dispensableDrugDescription"  S DTOKEN="",DTOKEN=$$GETTOKEN(AREADER) S $P(PSSOUT2(GCNSEQ),"^",4)=$P(DTOKEN,"<>",2) Q
"RTN","PSSFDBDI",143,0)
 .I NODETYPE="dosingInfo(attributes)" S FTYPE="doseRanges",GCNSEQ=$P($P(ATOKEN,"^",2),"=",2),FDBDX=$P($P(ATOKEN,"^",1),"=",2) S PSSOUT2(GCNSEQ)=GCNSEQ_"^"_PSSGCN_"^^^"_FDBDX Q
"RTN","PSSFDBDI",144,0)
 .I NODETYPE="doseRange(attributes)"  S (FIELD,FLDNAM,FLDDATA)="" S PSSSEQ=PSSSEQ+1,FTYPE="doseRanges" D 
"RTN","PSSFDBDI",145,0)
 ..F I=1:1:4 S FIELD=$P(ATOKEN,"^",I),FLDNAM=$P(FIELD,"="),FLDDATA=$P(FIELD,"=",2) D SETARRAY
"RTN","PSSFDBDI",146,0)
 ..D DOSE
"RTN","PSSFDBDI",147,0)
 .I NODETYPE="minMax(attributes)" D
"RTN","PSSFDBDI",148,0)
 ..S MMSEQ=MMSEQ+1,MMATR=1,FTYPE="minMax",LDAY=$P($P(ATOKEN,"^",1),"=",2),HDAY=$P($P(ATOKEN,"^",2),"=",2) D DOSE
"RTN","PSSFDBDI",149,0)
 ;
"RTN","PSSFDBDI",150,0)
 N FIRST,FLD2,FLD8,FLD7,FLD3
"RTN","PSSFDBDI",151,0)
 S (FIRST,GCNSEQ,SEQ,SEQ2,SEQ3,SEQ4,FTYPE,TYP2,TYP3)="",FTYPE=0
"RTN","PSSFDBDI",152,0)
 F  S GCNSEQ=$O(PSSOUT2(GCNSEQ)) Q:GCNSEQ=""  D
"RTN","PSSFDBDI",153,0)
 .I '$G(FIRST),$D(PSSOUT2(GCNSEQ)) D
"RTN","PSSFDBDI",154,0)
 ..S ^TMP($J,"PSSFDBDI",GCNSEQ,0)=PSSOUT2(GCNSEQ)
"RTN","PSSFDBDI",155,0)
 ..S ^TMP($J,"PSSFDBDI","B",GCNSEQ)=$P(PSSOUT2(GCNSEQ),"^",3),FIRST=1
"RTN","PSSFDBDI",156,0)
 ..F  S FTYPE=$O(PSSOUT2(GCNSEQ,FTYPE)) Q:FTYPE=""!(FTYPE="A")  F  S SEQ=$O(PSSOUT2(GCNSEQ,FTYPE,SEQ)) Q:SEQ=""  F  S SEQ2=$O(PSSOUT2(GCNSEQ,FTYPE,SEQ,SEQ2)) Q:SEQ2=""  D
"RTN","PSSFDBDI",157,0)
 ...F  S SEQ3=$O(PSSOUT2(GCNSEQ,FTYPE,SEQ,SEQ2,SEQ3)) Q:SEQ3=""  D
"RTN","PSSFDBDI",158,0)
 ....S ^TMP($J,"PSSFDBDI",GCNSEQ,FTYPE,SEQ,SEQ2,SEQ3)=PSSOUT2(GCNSEQ,FTYPE,SEQ,SEQ2,SEQ3)  I SEQ2=1,FTYPE="doseRanges" D SETXREF
"RTN","PSSFDBDI",159,0)
 S ^TMP($J,"PSSFDBDI",0)="DOSING INFORMATION FOR A SPECIFIC DRUG^^"_(SEQ3)_"^"_(SEQ3)
"RTN","PSSFDBDI",160,0)
 Q
"RTN","PSSFDBDI",161,0)
 ;
"RTN","PSSFDBDI",162,0)
SETXREF ;
"RTN","PSSFDBDI",163,0)
 Q:FTYPE="minMax"
"RTN","PSSFDBDI",164,0)
 N FLDS,FLD1
"RTN","PSSFDBDI",165,0)
 S (FLDS,FLD3,FLD7,FLD8,FLD1)="",FLDS=PSSOUT2(GCNSEQ,FTYPE,SEQ,SEQ2,SEQ3) F I=1,3,7,8 S @("FLD"_I)=$P(FLDS,"^",I)
"RTN","PSSFDBDI",166,0)
 S ^TMP($J,"PSSFDBDI","A",FLD3,FLD7,FLD8,SEQ)=FLD1
"RTN","PSSFDBDI",167,0)
 S ^TMP($J,"PSSFDBDI","C",FLD7,FLD8,FLD3,SEQ)=FLD1
"RTN","PSSFDBDI",168,0)
 Q
"RTN","PSSFDBDI",169,0)
  ;
"RTN","PSSFDBDI",170,0)
DOSE ; extract list of routes
"RTN","PSSFDBDI",171,0)
 N ID,BNODE,BTOKEN,CTOKEN,CTYPE,ROUTNM,FIELD,OFLDNAM,FLDNAM,FLDDATA,I
"RTN","PSSFDBDI",172,0)
 S FLDNAM=""
"RTN","PSSFDBDI",173,0)
 F  D  Q:(CTOKEN="/doseRange"!(CTOKEN="/minMax"))!(AREADER.EOF)
"RTN","PSSFDBDI",174,0)
 .S BTOKEN=$$GETTOKEN(AREADER)
"RTN","PSSFDBDI",175,0)
 .Q:'$L(BTOKEN)
"RTN","PSSFDBDI",176,0)
 .S CTYPE=$P(BTOKEN,"<>"),CTOKEN=$P(BTOKEN,"<>",2)
"RTN","PSSFDBDI",177,0)
 .I CTOKEN="/doseRange" Q
"RTN","PSSFDBDI",178,0)
 .I (CTOKEN="/minMax") Q
"RTN","PSSFDBDI",179,0)
 .Q:CTYPE="endElement"&(BTOKEN="/"_FLDNAM)
"RTN","PSSFDBDI",180,0)
 .I CTYPE="element" S FLDNAM="",FLDNAM=CTOKEN
"RTN","PSSFDBDI",181,0)
 .I CTYPE="chars" S FLDDATA="",FLDDATA=CTOKEN D SETARRAY
"RTN","PSSFDBDI",182,0)
 Q
"RTN","PSSFDBDI",183,0)
 ;
"RTN","PSSFDBDI",184,0)
SETARRAY ;set dose ranges array
"RTN","PSSFDBDI",185,0)
 N ANODE,APIECE,FILENAME,FILENODE
"RTN","PSSFDBDI",186,0)
 I '$G(MMATR) D  Q
"RTN","PSSFDBDI",187,0)
 .S (FILENAME,APIECE,ANODE)="",FILENODE=$G(PSSDR(FLDNAM)) S:FILENODE'="" ANODE=$P(FILENODE,"^"),APIECE=$P(FILENODE,"^",2)
"RTN","PSSFDBDI",188,0)
 .S:ANODE'="" $P(PSSOUT2(GCNSEQ,FTYPE,PSSSEQ,ANODE,0),"^",APIECE)=FLDDATA
"RTN","PSSFDBDI",189,0)
 I $G(MMATR) D
"RTN","PSSFDBDI",190,0)
 .S (FILENAME,APIECE,ANODE)="",FILENODE=$G(PSSMM(FLDNAM)) S:FILENODE'="" ANODE=$P(FILENODE,"^"),APIECE=$P(FILENODE,"^",2)
"RTN","PSSFDBDI",191,0)
 .S:ANODE'="" $P(PSSOUT2(GCNSEQ,FTYPE,LDAY,HDAY,ANODE),"^",APIECE)=FLDDATA
"RTN","PSSFDBDI",192,0)
 Q
"RTN","PSSFDBDI",193,0)
 ;
"RTN","PSSFDBDI",194,0)
GETTOKEN(READER) ; get a token at a time
"RTN","PSSFDBDI",195,0)
 ;  input: AREADER-%XML.TextReader object
"RTN","PSSFDBDI",196,0)
 ; Output: returns a token
"RTN","PSSFDBDI",197,0)
 ;
"RTN","PSSFDBDI",198,0)
 ;   this is the key to the parsing of the XML stream.
"RTN","PSSFDBDI",199,0)
 ;   each element is parsed with its associated data (if any)
"RTN","PSSFDBDI",200,0)
 ;   the nodetype is concatenated with "<>" with the Token
"RTN","PSSFDBDI",201,0)
 ;   which can be the tag or the data.
"RTN","PSSFDBDI",202,0)
 ;   for example each time is called return one of the following:
"RTN","PSSFDBDI",203,0)
 N TOKEN,NODETYPE,SUBTOKEN,ALLTOKEN
"RTN","PSSFDBDI",204,0)
 S TOKEN="",SUBTOKEN="",NODETYPE="",ALLTOKEN=""
"RTN","PSSFDBDI",205,0)
 D
"RTN","PSSFDBDI",206,0)
 .Q:READER.EOF
"RTN","PSSFDBDI",207,0)
 .D READER.Read()  ; go to first node
"RTN","PSSFDBDI",208,0)
 .Q:READER.EOF     ; try before and after read
"RTN","PSSFDBDI",209,0)
 .;W !,READER.NodeTypeGet()
"RTN","PSSFDBDI",210,0)
 .;S NODETYPE=READER.NodeTypeGet()
"RTN","PSSFDBDI",211,0)
 .I READER.HasAttributes D
"RTN","PSSFDBDI",212,0)
 ..S NODETYPE=READER.Name_"(attributes)"
"RTN","PSSFDBDI",213,0)
 ..S TOKEN=$$GETATTS(READER)
"RTN","PSSFDBDI",214,0)
 .I '$L(TOKEN) S NODETYPE=READER.NodeTypeGet() D
"RTN","PSSFDBDI",215,0)
 ..I NODETYPE="element" S TOKEN=READER.Name Q
"RTN","PSSFDBDI",216,0)
 ..I NODETYPE="chars" S TOKEN=READER.Value Q
"RTN","PSSFDBDI",217,0)
 ..I NODETYPE="endelement" S TOKEN="/"_READER.Name Q
"RTN","PSSFDBDI",218,0)
 ..I NODETYPE="comment" S TOKEN="^"
"RTN","PSSFDBDI",219,0)
 ..I NODETYPE="processinginstruction" S TOKEN=READER.Value Q
"RTN","PSSFDBDI",220,0)
 ..I NODETYPE="ignorablewhitespace" S TOKEN="^" Q
"RTN","PSSFDBDI",221,0)
 ..I NODETYPE="startprefixmapping" S TOKEN=READER.Value Q
"RTN","PSSFDBDI",222,0)
 ..I NODETYPE="warning" S TOKEN=READER.Value Q
"RTN","PSSFDBDI",223,0)
 ..I '$L(TOKEN) S TOKEN="^"
"RTN","PSSFDBDI",224,0)
 ..;
"RTN","PSSFDBDI",225,0)
 .I $L(NODETYPE) S ALLTOKEN=NODETYPE_"<>"_TOKEN
"RTN","PSSFDBDI",226,0)
 ;W !,"TOKEN="_ALLTOKEN
"RTN","PSSFDBDI",227,0)
 Q ALLTOKEN
"RTN","PSSFDBDI",228,0)
 ;
"RTN","PSSFDBDI",229,0)
GETATTS(AREADER) ; get attributes
"RTN","PSSFDBDI",230,0)
 ;  input: AREADER-%XML.TextReader object
"RTN","PSSFDBDI",231,0)
 ; Output: returns the attributes
"RTN","PSSFDBDI",232,0)
 ;
"RTN","PSSFDBDI",233,0)
 N I,INDEX,TOKEN,SUBTOKEN,ATTRB
"RTN","PSSFDBDI",234,0)
 S (TOKEN,SUBTOKEN)=""
"RTN","PSSFDBDI",235,0)
 S INDEX=AREADER.AttributeCountGet()
"RTN","PSSFDBDI",236,0)
 FOR I=1:1:INDEX D
"RTN","PSSFDBDI",237,0)
 .S ATTRB=AREADER.MoveToAttributeIndex(I) D
"RTN","PSSFDBDI",238,0)
 .S SUBTOKEN=AREADER.Name_"="_AREADER.Value
"RTN","PSSFDBDI",239,0)
 .I '$L(TOKEN) S TOKEN=SUBTOKEN Q
"RTN","PSSFDBDI",240,0)
 .S TOKEN=TOKEN_"^"_SUBTOKEN
"RTN","PSSFDBDI",241,0)
 ;W !,"  ATT=",TOKEN
"RTN","PSSFDBDI",242,0)
 Q TOKEN
"RTN","PSSFDBDI",243,0)
 ;
"RTN","PSSFDBDI",244,0)
GETFILE(PSSDR,PSSMM) ;
"RTN","PSSFDBDI",245,0)
 N I,PSSTYPE,PSSFILE,PSSFLD,PSSNODE,PSSPIECE
"RTN","PSSFDBDI",246,0)
 F I=1:1 S PSSFILE=$P($T(FILE+I),";;",2,99) Q:PSSFILE=""  D
"RTN","PSSFDBDI",247,0)
 .S PSSTYPE=$P(PSSFILE,";"),PSSFLD=$P(PSSFILE,";",2),PSSNODE=$P(PSSFILE,";",3),PSSPIECE=$P(PSSFILE,";",4)
"RTN","PSSFDBDI",248,0)
 .I PSSTYPE="" S PSSDR(PSSFLD)=PSSNODE_"^"_PSSPIECE
"RTN","PSSFDBDI",249,0)
 .I PSSTYPE="MM" S PSSMM(PSSFLD)=PSSNODE_"^"_PSSPIECE
"RTN","PSSFDBDI",250,0)
 Q
"RTN","PSSFDBDI",251,0)
 ;
"RTN","PSSFDBDI",252,0)
FILE ;file structure for the temp file for each data field imported from FDB
"RTN","PSSFDBDI",253,0)
 ;;;custom;1;1
"RTN","PSSFDBDI",254,0)
 ;;;category;1;2
"RTN","PSSFDBDI",255,0)
 ;;;doseTypeId;1;3
"RTN","PSSFDBDI",256,0)
 ;;;doseTypeDescription;1;4
"RTN","PSSFDBDI",257,0)
 ;;;doseRouteId;1;5
"RTN","PSSFDBDI",258,0)
 ;;;intlDoseRouteDescription;1;6
"RTN","PSSFDBDI",259,0)
 ;;;ageLowInDays;1;7
"RTN","PSSFDBDI",260,0)
 ;;;ageHighInDays;1;8
"RTN","PSSFDBDI",261,0)
 ;;;hitIndicationId;2;1
"RTN","PSSFDBDI",262,0)
 ;;;hitIndicationDescription;2;2
"RTN","PSSFDBDI",263,0)
 ;;;indicationId;2;3
"RTN","PSSFDBDI",264,0)
 ;;;indicationDescription;2;4
"RTN","PSSFDBDI",265,0)
 ;;;indicationIdType;2;5
"RTN","PSSFDBDI",266,0)
 ;;;resultType;2;6
"RTN","PSSFDBDI",267,0)
 ;;;warningCode;2;7
"RTN","PSSFDBDI",268,0)
 ;;;bsaRequired;3;1
"RTN","PSSFDBDI",269,0)
 ;;;weightRequired;3;2
"RTN","PSSFDBDI",270,0)
 ;;;hepaticImpairment;3;3
"RTN","PSSFDBDI",271,0)
 ;;;renalImpairment;3;4
"RTN","PSSFDBDI",272,0)
 ;;;lowEliminationHalfLife;3;5
"RTN","PSSFDBDI",273,0)
 ;;;highEliminationHalfLife;3;6
"RTN","PSSFDBDI",274,0)
 ;;;halfLifeUnit;3;7
"RTN","PSSFDBDI",275,0)
 ;;;crclThreshold;3;8
"RTN","PSSFDBDI",276,0)
 ;;;crclThresholdUnit;3;9
"RTN","PSSFDBDI",277,0)
 ;;;durationLow;4;1
"RTN","PSSFDBDI",278,0)
 ;;;durationHigh;4;2
"RTN","PSSFDBDI",279,0)
 ;;;maxDuration;4;3
"RTN","PSSFDBDI",280,0)
 ;;;frequencyLow;4;4
"RTN","PSSFDBDI",281,0)
 ;;;frequencyHigh;4;5
"RTN","PSSFDBDI",282,0)
 ;;;doseLow;5;1
"RTN","PSSFDBDI",283,0)
 ;;;doseLowUnit;5;2
"RTN","PSSFDBDI",284,0)
 ;;;doseHigh;5;3
"RTN","PSSFDBDI",285,0)
 ;;;doseHighUnit;5;4
"RTN","PSSFDBDI",286,0)
 ;;;doseFormLow;5;5
"RTN","PSSFDBDI",287,0)
 ;;;doseFormLowUnit;5;6
"RTN","PSSFDBDI",288,0)
 ;;;doseFormHigh;5;7
"RTN","PSSFDBDI",289,0)
 ;;;doseFormHighUnit;5;8
"RTN","PSSFDBDI",290,0)
 ;;;maxSingleDose;6;1
"RTN","PSSFDBDI",291,0)
 ;;;maxSingleDoseUnit;6;2
"RTN","PSSFDBDI",292,0)
 ;;;maxSingleDoseForm;6;3
"RTN","PSSFDBDI",293,0)
 ;;;maxSingleDoseFormUnit;6;4
"RTN","PSSFDBDI",294,0)
 ;;;maxDailyDose6;5
"RTN","PSSFDBDI",295,0)
 ;;;maxDailyDoseUnit;6;6
"RTN","PSSFDBDI",296,0)
 ;;;maxDailyDoseForm;6;7
"RTN","PSSFDBDI",297,0)
 ;;;maxDailyDoseFormUnit;6;8
"RTN","PSSFDBDI",298,0)
 ;;;maxLifetimeDose;7;1
"RTN","PSSFDBDI",299,0)
 ;;;maxLifetimeDoseUnit;7;2
"RTN","PSSFDBDI",300,0)
 ;;;maxLifetimeDoseForm;7;3
"RTN","PSSFDBDI",301,0)
 ;;;maxLifetimeDoseFormUnit;7;4
"RTN","PSSFDBDI",302,0)
 ;;MM;doseLow;1;1
"RTN","PSSFDBDI",303,0)
 ;;MM;doseLowUnit;1;2
"RTN","PSSFDBDI",304,0)
 ;;MM;doseHigh;1;3
"RTN","PSSFDBDI",305,0)
 ;;MM;doseHighUnit;1;4
"RTN","PSSFDBDI",306,0)
 ;;MM;doseFormLow;1;5
"RTN","PSSFDBDI",307,0)
 ;;MM;doseFormLowUnit;1;6
"RTN","PSSFDBDI",308,0)
 ;;MM;doseFormHigh;1;7
"RTN","PSSFDBDI",309,0)
 ;;MM;doseFormHighUnit;1;8
"RTN","PSSFDBDI",310,0)
 ;;MM;maxDailyDose;2;1
"RTN","PSSFDBDI",311,0)
 ;;MM;maxDailyDoseUnit;2;2
"RTN","PSSFDBDI",312,0)
 ;;MM;maxDailyDoseForm;2;3
"RTN","PSSFDBDI",313,0)
 ;;MM;maxDailyDoseFormUnit;2;4
"RTN","PSSFDBDI",314,0)
 ;;MM;resultType;2;5
"RTN","PSSFDBDI",315,0)
 ;;MM;warningCode;2;6
"RTN","PSSFDBDI",316,0)
 ;;MM;bsaRequired;2;7
"RTN","PSSFDBDI",317,0)
 ;;MM;weightRequired;2;8
"RTN","PSSFDBRT")
0^19^B57759107
"RTN","PSSFDBRT",1,0)
PSSFDBRT ;WOIFO/Parviz Ostovari - Sends XML Request to PEPS via HWSC ;09/20/07
"RTN","PSSFDBRT",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**136,160**;9/30/97;Build 76
"RTN","PSSFDBRT",3,0)
 ;
"RTN","PSSFDBRT",4,0)
 ;Reference to PSNDF(50.68 supported by DBIA 3735
"RTN","PSSFDBRT",5,0)
 ; this code is copied and modified from PSZZDI routine.
"RTN","PSSFDBRT",6,0)
 ; this routine is responsible for performing drug information queries against a drug database.
"RTN","PSSFDBRT",7,0)
 ; the architecture parses the XML stream into tokens
"RTN","PSSFDBRT",8,0)
 ;
"RTN","PSSFDBRT",9,0)
 Q
"RTN","PSSFDBRT",10,0)
GROUTE(PSSIEN,PSSOUT) ; get the routes for given drug ien in drug file from PESPS via HWSC
"RTN","PSSFDBRT",11,0)
 ;  input: drug IEN from drug file (#50)
"RTN","PSSFDBRT",12,0)
 ; output: PSSOUT - array containing the list of route names for the given drug.
"RTN","PSSFDBRT",13,0)
 ;             e.g.  error/exception:  PSSOUT(0)= (-1 for database cannot be reached, 0 for exceptions or 1 for successfull call) ^ error or exception message 
"RTN","PSSFDBRT",14,0)
 ;
"RTN","PSSFDBRT",15,0)
 ;                    e.g. successfull:  PSSOUT(0)=1
"RTN","PSSFDBRT",16,0)
 ;                                                PSSOUT("CONTINUOUS INFUSION")=""
"RTN","PSSFDBRT",17,0)
 ;                                                PSSOUT("INTRAOSSEOUS")=""
"RTN","PSSFDBRT",18,0)
 ;  if for any reason can not get the route, it kills the PSSOUT
"RTN","PSSFDBRT",19,0)
 ;
"RTN","PSSFDBRT",20,0)
 N PSSXML,GCNSEQ,BASE,PSSRETR1
"RTN","PSSFDBRT",21,0)
 S BASE=$T(+0)_" GROUTE"
"RTN","PSSFDBRT",22,0)
 S GCNSEQ=$$DRUGGCN(PSSIEN)    ; get the GCN sequence number.
"RTN","PSSFDBRT",23,0)
 I GCNSEQ=0 S PSSOUT(0)="-1^GCN sequence number is not defined." Q  ; no GCN sequence number
"RTN","PSSFDBRT",24,0)
 S PSSXML=$$BLDXML(GCNSEQ)   ; build the xml request
"RTN","PSSFDBRT",25,0)
RETRY ;retry line tag
"RTN","PSSFDBRT",26,0)
 D POST(PSSXML,.PSSOUT)    ; post the request and process the results
"RTN","PSSFDBRT",27,0)
 I '$G(PSSRETR1),$P($G(PSSOUT(0)),"^")=-1 K PSSOUT S PSSRETR1=1 H 3 G RETRY
"RTN","PSSFDBRT",28,0)
 Q
"RTN","PSSFDBRT",29,0)
 ;
"RTN","PSSFDBRT",30,0)
DRUGGCN(DRGIEN) ; for given drug ien return the GCN sequence number.
"RTN","PSSFDBRT",31,0)
 ;  input: drug IEN from drug file (#50)
"RTN","PSSFDBRT",32,0)
 ; output: returns the GCN sequence number
"RTN","PSSFDBRT",33,0)
 ;
"RTN","PSSFDBRT",34,0)
 N GCN,VAPROD
"RTN","PSSFDBRT",35,0)
 S GCN=0  ; default
"RTN","PSSFDBRT",36,0)
 D
"RTN","PSSFDBRT",37,0)
 .S VAPROD=$P($G(^PSDRUG(+DRGIEN,"ND")),U,3) Q:'VAPROD
"RTN","PSSFDBRT",38,0)
 .S GCN=+$P($G(^PSNDF(50.68,+VAPROD,1)),U,5)
"RTN","PSSFDBRT",39,0)
 Q GCN
"RTN","PSSFDBRT",40,0)
 ;
"RTN","PSSFDBRT",41,0)
BLDXML(GCNSEQ) ; build and return the XML request with drug information for given GCN sequence number
"RTN","PSSFDBRT",42,0)
 ;  input: drug IEN from drug file (#50)
"RTN","PSSFDBRT",43,0)
 ; output: returns the XML request for given GCN sequence number
"RTN","PSSFDBRT",44,0)
 ;
"RTN","PSSFDBRT",45,0)
 N PSSXML,DRUGIEN,DRUGTAG,ENDTAG
"RTN","PSSFDBRT",46,0)
 S PSSXML=""
"RTN","PSSFDBRT",47,0)
 D GETHEAD(.PSSXML)
"RTN","PSSFDBRT",48,0)
 D GETREQ(.PSSXML)
"RTN","PSSFDBRT",49,0)
 S DRUGTAG="<drug "
"RTN","PSSFDBRT",50,0)
 S ENDTAG="/>"
"RTN","PSSFDBRT",51,0)
 S PSSXML=PSSXML_DRUGTAG_$$ATRIBUTE^PSSHRCOM("gcnSeqNo",GCNSEQ)_ENDTAG
"RTN","PSSFDBRT",52,0)
 D ENDREQ(.PSSXML)
"RTN","PSSFDBRT",53,0)
 Q PSSXML
"RTN","PSSFDBRT",54,0)
 ;
"RTN","PSSFDBRT",55,0)
POST(XML,PSSOUT) ; post the XML request to PEPS server and return the routes
"RTN","PSSFDBRT",56,0)
 ;  input: XML request
"RTN","PSSFDBRT",57,0)
 ; output: PSSOUT - array containing the list of route names for the given drug.
"RTN","PSSFDBRT",58,0)
 ;
"RTN","PSSFDBRT",59,0)
 N PSS,PSSERR,PSSFDBRT S PSSFDBRT=1
"RTN","PSSFDBRT",60,0)
 N $ETRAP,$ESTACK
"RTN","PSSFDBRT",61,0)
 ; Set error trap
"RTN","PSSFDBRT",62,0)
 SET $ETRAP="DO ERROR^PSSHTTP"
"RTN","PSSFDBRT",63,0)
 K ^TMP($J,"OUT")    ; if exists from previous runs, posting would not execute.
"RTN","PSSFDBRT",64,0)
 ;
"RTN","PSSFDBRT",65,0)
 SET PSS("server")="PEPS"
"RTN","PSSFDBRT",66,0)
 SET PSS("webserviceName")="DRUG_INFO"
"RTN","PSSFDBRT",67,0)
 SET PSS("path")="druginfo"
"RTN","PSSFDBRT",68,0)
 SET PSS("parameterName")="xmlRequest"
"RTN","PSSFDBRT",69,0)
 SET PSS("parameterValue")=XML
"RTN","PSSFDBRT",70,0)
 ;
"RTN","PSSFDBRT",71,0)
 ; get instance of client REST request object
"RTN","PSSFDBRT",72,0)
 SET PSS("restObject")=$$GETREST^XOBWLIB(PSS("webserviceName"),PSS("server"))
"RTN","PSSFDBRT",73,0)
 IF $DATA(^TMP($JOB,"OUT","EXCEPTION"))>0 S PSSOUT(0)="-1^"_^TMP($JOB,"OUT","EXCEPTION") K ^TMP($JOB,"OUT","EXCEPTION") Q PSSOUT
"RTN","PSSFDBRT",74,0)
 ;
"RTN","PSSFDBRT",75,0)
 ; insert XML as parameter
"RTN","PSSFDBRT",76,0)
 DO PSS("restObject").InsertFormData(PSS("parameterName"),PSS("parameterValue"))
"RTN","PSSFDBRT",77,0)
 IF $DATA(^TMP($JOB,"OUT","EXCEPTION"))>0 S PSSOUT(0)="-1^"_^TMP($JOB,"OUT","EXCEPTION") K ^TMP($JOB,"OUT","EXCEPTION") QUIT PSSOUT
"RTN","PSSFDBRT",78,0)
 ;
"RTN","PSSFDBRT",79,0)
 ; execute HTTP Post method
"RTN","PSSFDBRT",80,0)
 SET PSS("postResult")=$$POST^XOBWLIB(PSS("restObject"),PSS("path"),.PSSERR)
"RTN","PSSFDBRT",81,0)
 IF $DATA(^TMP($JOB,"OUT","EXCEPTION"))>0 S PSSOUT(0)="-1^"_^TMP($JOB,"OUT","EXCEPTION") K ^TMP($JOB,"OUT","EXCEPTION") QUIT PSSOUT
"RTN","PSSFDBRT",82,0)
 ;
"RTN","PSSFDBRT",83,0)
 ; error handling
"RTN","PSSFDBRT",84,0)
 DO:'PSS("postResult")
"RTN","PSSFDBRT",85,0)
 . SET PSSOUT(0)=-1_U_"Unable to make http request."
"RTN","PSSFDBRT",86,0)
 . SET PSS("result")=0
"RTN","PSSFDBRT",87,0)
 . QUIT
"RTN","PSSFDBRT",88,0)
 ;
"RTN","PSSFDBRT",89,0)
 ; if every thing is ok parse the returned xml result
"RTN","PSSFDBRT",90,0)
 I PSS("postResult") S PSS("result")=1 D PRSSTRM(PSS("restObject"),.PSSOUT) S PSSOUT(0)=1
"RTN","PSSFDBRT",91,0)
 Q PSS("result")
"RTN","PSSFDBRT",92,0)
 ;
"RTN","PSSFDBRT",93,0)
PRSSTRM(RESTOBJ,PSSOUT) ;  parse the XML into token
"RTN","PSSFDBRT",94,0)
 ;  input: RESTOBJ--a rest object
"RTN","PSSFDBRT",95,0)
 ; output: PSSOUT - array containing the list of route names for the given drug.
"RTN","PSSFDBRT",96,0)
 ;
"RTN","PSSFDBRT",97,0)
 ; parse the XML into tokens. the first part of the token is the type of node being read.
"RTN","PSSFDBRT",98,0)
 ; the second part is the data--either the name of the node, or data. these fields are delimited using "<>".
"RTN","PSSFDBRT",99,0)
 ; if the node is type attribute, each attribute is separated by a caret ("^").
"RTN","PSSFDBRT",100,0)
 ;
"RTN","PSSFDBRT",101,0)
 N AREADER
"RTN","PSSFDBRT",102,0)
 S AREADER=$$GETREADR(RESTOBJ)
"RTN","PSSFDBRT",103,0)
 D PARSXML(AREADER,.PSSOUT)
"RTN","PSSFDBRT",104,0)
 Q
"RTN","PSSFDBRT",105,0)
 ;
"RTN","PSSFDBRT",106,0)
PARSXML(AREADER,PSSOUT) ; extract the list of routes from XML results
"RTN","PSSFDBRT",107,0)
 ;  input: AREADER-%XML.TextReader object.
"RTN","PSSFDBRT",108,0)
 ; output: PSSOUT - array containing the list of route names for the given drug.
"RTN","PSSFDBRT",109,0)
 ;
"RTN","PSSFDBRT",110,0)
 N ATOKEN,NODETYPE,GCNSEQ
"RTN","PSSFDBRT",111,0)
 F  D  Q:AREADER.EOF
"RTN","PSSFDBRT",112,0)
 .S ATOKEN=$$GETTOKEN(AREADER)
"RTN","PSSFDBRT",113,0)
 .I '$L(ATOKEN) Q
"RTN","PSSFDBRT",114,0)
 .S NODETYPE=$P(ATOKEN,"<>"),ATOKEN=$P(ATOKEN,"<>",2)
"RTN","PSSFDBRT",115,0)
 .I NODETYPE["exception" Q
"RTN","PSSFDBRT",116,0)
 .I NODETYPE["drugNotFound" Q  ; nodrug tag
"RTN","PSSFDBRT",117,0)
 .; inside drug attributes
"RTN","PSSFDBRT",118,0)
 .I NODETYPE["drug",ATOKEN["gcnSeqNo" S GCNSEQ=$P(ATOKEN,"=",2)
"RTN","PSSFDBRT",119,0)
 .; if routes token get list of the routes
"RTN","PSSFDBRT",120,0)
 .I ATOKEN="routes",$G(GCNSEQ) D ROUTES(AREADER,GCNSEQ,.PSSOUT)
"RTN","PSSFDBRT",121,0)
 .I ATOKEN="/drug" S GCNSEQ=0
"RTN","PSSFDBRT",122,0)
 Q
"RTN","PSSFDBRT",123,0)
ROUTES(AREADER,GCN,PSSOUT) ; extract list of routes
"RTN","PSSFDBRT",124,0)
 ;  input: AREADER-%XML.TextReader object
"RTN","PSSFDBRT",125,0)
 ;         GCN - GCN sequence number from FDB
"RTN","PSSFDBRT",126,0)
 ; output: PSSOUT - array containing the list of route names for the given drug.
"RTN","PSSFDBRT",127,0)
 ;
"RTN","PSSFDBRT",128,0)
 N ROUTEID,ID,TOKEN,TYPE,ROUTNM
"RTN","PSSFDBRT",129,0)
 F  D  Q:TOKEN="/routes"
"RTN","PSSFDBRT",130,0)
 .S TOKEN=$$GETTOKEN(AREADER)
"RTN","PSSFDBRT",131,0)
 .S TYPE=$P(TOKEN,"<>"),TOKEN=$P(TOKEN,"<>",2)
"RTN","PSSFDBRT",132,0)
 .Q:'$L(TOKEN)
"RTN","PSSFDBRT",133,0)
 .I TOKEN="id" D  Q
"RTN","PSSFDBRT",134,0)
 ..S TOKEN=$$GETTOKEN(AREADER)
"RTN","PSSFDBRT",135,0)
 ..S ROUTEID=$P(TOKEN,"<>",2)
"RTN","PSSFDBRT",136,0)
 .I TOKEN="name" S TOKEN=$$GETTOKEN(AREADER) D
"RTN","PSSFDBRT",137,0)
 ..;S PSSOUT(GCN,ROUTEID)=$P(TOKEN,"<>",2)
"RTN","PSSFDBRT",138,0)
 ..S ROUTNM=$P(TOKEN,"<>",2)
"RTN","PSSFDBRT",139,0)
 ..S:$L(ROUTNM)>0 PSSOUT(ROUTNM)=""
"RTN","PSSFDBRT",140,0)
 Q
"RTN","PSSFDBRT",141,0)
 ;
"RTN","PSSFDBRT",142,0)
GETREADR(RESTOBJ) ; set up and return a Textreader object to be used to parse the XML stream
"RTN","PSSFDBRT",143,0)
 ;  input: RESTOBJ-  REST object
"RTN","PSSFDBRT",144,0)
 ; output: returns a %XML.TextReader object.
"RTN","PSSFDBRT",145,0)
 ;
"RTN","PSSFDBRT",146,0)
 N AREADER
"RTN","PSSFDBRT",147,0)
 S AREADER=##class(%XML.TextReader).%New("%XML.TextReader")
"RTN","PSSFDBRT",148,0)
 D ##class(%XML.TextReader).ParseStream(RESTOBJ.HttpResponse.Data,.AREADER)
"RTN","PSSFDBRT",149,0)
 Q AREADER
"RTN","PSSFDBRT",150,0)
 ;
"RTN","PSSFDBRT",151,0)
GETTOKEN(READER) ; get a token at a time
"RTN","PSSFDBRT",152,0)
 ;  input: AREADER-%XML.TextReader object
"RTN","PSSFDBRT",153,0)
 ; Output: returns a token
"RTN","PSSFDBRT",154,0)
 ;
"RTN","PSSFDBRT",155,0)
 ;   this is the key to the parsing of the XML stream.
"RTN","PSSFDBRT",156,0)
 ;   each element is parsed with its associated data (if any)
"RTN","PSSFDBRT",157,0)
 ;   the nodetype is concatenated with "<>" with the Token
"RTN","PSSFDBRT",158,0)
 ;   which can be the tag or the data.
"RTN","PSSFDBRT",159,0)
 ;   for example each time is called return one of the following:
"RTN","PSSFDBRT",160,0)
 ;     . . .
"RTN","PSSFDBRT",161,0)
 ;     . . .
"RTN","PSSFDBRT",162,0)
 ;     drug(attributes)<>gcnSeqNo=17240
"RTN","PSSFDBRT",163,0)
 ;     element<>routes
"RTN","PSSFDBRT",164,0)
 ;     element<>route
"RTN","PSSFDBRT",165,0)
 ;     element<>id
"RTN","PSSFDBRT",166,0)
 ;     chars<>006
"RTN","PSSFDBRT",167,0)
 ;     endelement<>/id
"RTN","PSSFDBRT",168,0)
 ;     element<>name
"RTN","PSSFDBRT",169,0)
 ;     chars<>CONTINUOUS INFUSION
"RTN","PSSFDBRT",170,0)
 ;     endelement<>/name
"RTN","PSSFDBRT",171,0)
 ;     endelement<>/route
"RTN","PSSFDBRT",172,0)
 ;     . . .
"RTN","PSSFDBRT",173,0)
 ;     . . .
"RTN","PSSFDBRT",174,0)
 ;
"RTN","PSSFDBRT",175,0)
 N TOKEN,NODETYPE,SUBTOKEN,ALLTOKEN
"RTN","PSSFDBRT",176,0)
 S TOKEN="",SUBTOKEN="",NODETYPE="",ALLTOKEN=""
"RTN","PSSFDBRT",177,0)
 D
"RTN","PSSFDBRT",178,0)
 .Q:READER.EOF
"RTN","PSSFDBRT",179,0)
 .D READER.Read()  ; go to first node
"RTN","PSSFDBRT",180,0)
 .Q:READER.EOF     ; try before and after read
"RTN","PSSFDBRT",181,0)
 .;W !,READER.NodeTypeGet()
"RTN","PSSFDBRT",182,0)
 .;S NODETYPE=READER.NodeTypeGet()
"RTN","PSSFDBRT",183,0)
 .I READER.HasAttributes D
"RTN","PSSFDBRT",184,0)
 ..S NODETYPE=READER.Name_"(attributes)"
"RTN","PSSFDBRT",185,0)
 ..S TOKEN=$$GETATTS(READER)
"RTN","PSSFDBRT",186,0)
 .I '$L(TOKEN) S NODETYPE=READER.NodeTypeGet() D
"RTN","PSSFDBRT",187,0)
 ..I NODETYPE="element" S TOKEN=READER.Name Q
"RTN","PSSFDBRT",188,0)
 ..I NODETYPE="chars" S TOKEN=READER.Value Q
"RTN","PSSFDBRT",189,0)
 ..I NODETYPE="endelement" S TOKEN="/"_READER.Name Q
"RTN","PSSFDBRT",190,0)
 ..I NODETYPE="comment" S TOKEN="^"
"RTN","PSSFDBRT",191,0)
 ..I NODETYPE="processinginstruction" S TOKEN=READER.Value Q
"RTN","PSSFDBRT",192,0)
 ..I NODETYPE="ignorablewhitespace" S TOKEN="^" Q
"RTN","PSSFDBRT",193,0)
 ..I NODETYPE="startprefixmapping" S TOKEN=READER.Value Q
"RTN","PSSFDBRT",194,0)
 ..I NODETYPE="warning" S TOKEN=READER.Value Q
"RTN","PSSFDBRT",195,0)
 ..I '$L(TOKEN) S TOKEN="^"
"RTN","PSSFDBRT",196,0)
 ..;
"RTN","PSSFDBRT",197,0)
 .I $L(NODETYPE) S ALLTOKEN=NODETYPE_"<>"_TOKEN
"RTN","PSSFDBRT",198,0)
 ;W !,"TOKEN="_ALLTOKEN
"RTN","PSSFDBRT",199,0)
 Q ALLTOKEN
"RTN","PSSFDBRT",200,0)
 ;
"RTN","PSSFDBRT",201,0)
GETATTS(AREADER) ; get attributes
"RTN","PSSFDBRT",202,0)
 ;  input: AREADER-%XML.TextReader object
"RTN","PSSFDBRT",203,0)
 ; Output: returns the attributes
"RTN","PSSFDBRT",204,0)
 ;
"RTN","PSSFDBRT",205,0)
 N I,INDEX,TOKEN,SUBTOKEN,ATTRB
"RTN","PSSFDBRT",206,0)
 S (TOKEN,SUBTOKEN)=""
"RTN","PSSFDBRT",207,0)
 S INDEX=AREADER.AttributeCountGet()
"RTN","PSSFDBRT",208,0)
 FOR I=1:1:INDEX D
"RTN","PSSFDBRT",209,0)
 .S ATTRB=AREADER.MoveToAttributeIndex(I) D
"RTN","PSSFDBRT",210,0)
 .S SUBTOKEN=AREADER.Name_"="_AREADER.Value
"RTN","PSSFDBRT",211,0)
 .I '$L(TOKEN) S TOKEN=SUBTOKEN Q
"RTN","PSSFDBRT",212,0)
 .S TOKEN=TOKEN_"^"_SUBTOKEN
"RTN","PSSFDBRT",213,0)
 ;W !,"  ATT=",TOKEN
"RTN","PSSFDBRT",214,0)
 Q TOKEN
"RTN","PSSFDBRT",215,0)
 ;
"RTN","PSSFDBRT",216,0)
GETHEAD(PSSXML) ;  return <?xml version="1.0" encoding="utf-8" ?>
"RTN","PSSFDBRT",217,0)
 ;  input: PSSXML string (by ref)
"RTN","PSSFDBRT",218,0)
 ; output: returns the XML header info string
"RTN","PSSFDBRT",219,0)
 ;
"RTN","PSSFDBRT",220,0)
 ;xml header info
"RTN","PSSFDBRT",221,0)
 S PSSXML=PSSXML_$$XMLHDR^MXMLUTL
"RTN","PSSFDBRT",222,0)
 Q
"RTN","PSSFDBRT",223,0)
 ;
"RTN","PSSFDBRT",224,0)
GETREQ(PSSXML) ; build and return the <drugInfoRequest... portion of XML request.
"RTN","PSSFDBRT",225,0)
 ;  input: PSSXML string (by ref)
"RTN","PSSFDBRT",226,0)
 ; output: returns the XML string. for example:
"RTN","PSSFDBRT",227,0)
 ;      <drugInfoRequest  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
"RTN","PSSFDBRT",228,0)
 ;       xsi:schemaLocation="gov/va/med/pharmacy/peps/external/common/preencapsulation/vo/drug/info/request
"RTN","PSSFDBRT",229,0)
 ;       drugInfoSchemaInput.xsd" xmlns="gov/va/med/pharmacy/peps/external/common/preencapsulation/vo/drug/info/request">
"RTN","PSSFDBRT",230,0)
 ;
"RTN","PSSFDBRT",231,0)
 N TAG,SUBXML,SCHEMA,XMLNS,SPACE
"RTN","PSSFDBRT",232,0)
 S SPACE=$C(32)
"RTN","PSSFDBRT",233,0)
 S SCHEMA="gov/va/med/pharmacy/peps/external/common/preencapsulation/vo/drug/info/request drugInfoSchemaInput.xsd"
"RTN","PSSFDBRT",234,0)
 S XMLNS="gov/va/med/pharmacy/peps/external/common/preencapsulation/vo/drug/info/request"
"RTN","PSSFDBRT",235,0)
 S TAG="<drugInfoRequest"_SPACE
"RTN","PSSFDBRT",236,0)
 S SUBXML=TAG
"RTN","PSSFDBRT",237,0)
 ;S SUBXML=SUBXML_$$ATRIBUTE^PSSHRCOM("xmlns",XMLNS
"RTN","PSSFDBRT",238,0)
 S SUBXML=SUBXML_$$ATRIBUTE^PSSHRCOM(SPACE_"xmlns:xsi","http://www.w3.org/2001/XMLSchema-instance")
"RTN","PSSFDBRT",239,0)
 S SUBXML=SUBXML_$$ATRIBUTE^PSSHRCOM(SPACE_"xsi:schemaLocation",SCHEMA)
"RTN","PSSFDBRT",240,0)
 S SUBXML=SUBXML_$$ATRIBUTE^PSSHRCOM(SPACE_"xmlns",XMLNS)
"RTN","PSSFDBRT",241,0)
 S PSSXML=PSSXML_SUBXML_">"
"RTN","PSSFDBRT",242,0)
 Q
"RTN","PSSFDBRT",243,0)
 ;
"RTN","PSSFDBRT",244,0)
ENDREQ(PSSXML) ; return the end tag </drugInfoRequest> portion of XML request
"RTN","PSSFDBRT",245,0)
 ;  input: PSSXML string (by ref)
"RTN","PSSFDBRT",246,0)
 ; output: returns the XML string
"RTN","PSSFDBRT",247,0)
 S PSSXML=PSSXML_"</drugInfoRequest>"
"RTN","PSSFDBRT",248,0)
 Q
"RTN","PSSFDBRT",249,0)
 ;
"RTN","PSSHRQ2")
0^21^B7188596
"RTN","PSSHRQ2",1,0)
PSSHRQ2 ;WOIFO/AV,TS - Makes a request to PEPS and returns as Global ;09/20/07
"RTN","PSSHRQ2",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**136,163,168,160**;9/30/97;Build 76
"RTN","PSSHRQ2",3,0)
 ;
"RTN","PSSHRQ2",4,0)
 ; @authors - Alex Vazquez, Tim Sabat
"RTN","PSSHRQ2",5,0)
 ; @date    - September 19, 2007
"RTN","PSSHRQ2",6,0)
 ; @version - 1.0
"RTN","PSSHRQ2",7,0)
 ;
"RTN","PSSHRQ2",8,0)
 QUIT
"RTN","PSSHRQ2",9,0)
 ;;
"RTN","PSSHRQ2",10,0)
IN(PSSBASE) ;
"RTN","PSSHRQ2",11,0)
 ; @DESC Handles request/response to PEPS
"RTN","PSSHRQ2",12,0)
 ;
"RTN","PSSHRQ2",13,0)
 ; @RETURNS Nothing. Value stored in output global.
"RTN","PSSHRQ2",14,0)
 ;
"RTN","PSSHRQ2",15,0)
 NEW PSS,PSSRESLT,PSSDOC,PSSXML,FDBFLG,PSSRBASE,PSSRBASX,PSSHRTMX,PSSHRTRT
"RTN","PSSHRQ2",16,0)
 ; Cleanup output global
"RTN","PSSHRQ2",17,0)
 ; KILL ^TMP($JOB,PSSBASE,"OUT")  ; PO: commented as requested by Stan Brown on 6/4/09
"RTN","PSSHRQ2",18,0)
 ;
"RTN","PSSHRQ2",19,0)
 ; save "IN" nodes
"RTN","PSSHRQ2",20,0)
 S PSSHRTMX=0
"RTN","PSSHRQ2",21,0)
 K ^TMP($J,"SAVE","IN")
"RTN","PSSHRQ2",22,0)
 M ^TMP($J,"SAVE","IN")=^TMP($J,PSSBASE,"IN") S PSSRBASE=PSSBASE
"RTN","PSSHRQ2",23,0)
 ;
"RTN","PSSHRQ2",24,0)
 ;Check FDB status if an update is occurring
"RTN","PSSHRQ2",25,0)
 S FDBFLG=$$CHKSTAT^PSSDSFDB()
"RTN","PSSHRQ2",26,0)
 ;If FDB update set global and quit
"RTN","PSSHRQ2",27,0)
 I FDBFLG S ^TMP($J,PSSBASE,"OUT",0)=FDBFLG GOTO END   ;QUIT
"RTN","PSSHRQ2",28,0)
 ;
"RTN","PSSHRQ2",29,0)
 ; Validate input global
"RTN","PSSHRQ2",30,0)
 SET PSS("validationResult")=$$DRIVER^PSSHRVAL(PSSBASE)
"RTN","PSSHRQ2",31,0)
 IF PSS("validationResult")=0  DO
"RTN","PSSHRQ2",32,0)
 . ; Check if data written to global, set to 1 if data exist
"RTN","PSSHRQ2",33,0)
 . IF $DATA(^TMP($JOB,PSSBASE,"OUT")) SET ^TMP($JOB,PSSBASE,"OUT",0)=1
"RTN","PSSHRQ2",34,0)
 . ; If no data in output global , set to 0
"RTN","PSSHRQ2",35,0)
 . IF '$DATA(^TMP($JOB,PSSBASE,"OUT")) SET ^TMP($JOB,PSSBASE,"OUT",0)=0
"RTN","PSSHRQ2",36,0)
 . QUIT
"RTN","PSSHRQ2",37,0)
 ; End call if no call to make
"RTN","PSSHRQ2",38,0)
 IF PSS("validationResult")=0 GOTO END   ;QUIT
"RTN","PSSHRQ2",39,0)
 ;
"RTN","PSSHRQ2",40,0)
 ; Create XML request
"RTN","PSSHRQ2",41,0)
 SET PSSXML=$$BLDPREQ^PSSHREQ(PSSBASE)
"RTN","PSSHRQ2",42,0)
 ; Send XML request to PEPS, receive handle to XML in return
"RTN","PSSHRQ2",43,0)
 ;
"RTN","PSSHRQ2",44,0)
RETRY ;Retry entry point if first connection attempt fails
"RTN","PSSHRQ2",45,0)
 SET PSSRESLT=$$PEPSPOST^PSSHTTP(.PSSDOC,PSSXML)
"RTN","PSSHRQ2",46,0)
 ;
"RTN","PSSHRQ2",47,0)
 ; If request unsuccessful go straight to error handling
"RTN","PSSHRQ2",48,0)
 IF +PSSRESLT=0 DO ALTERROR^PSSHRQ2O(PSSBASE)
"RTN","PSSHRQ2",49,0)
 ;
"RTN","PSSHRQ2",50,0)
 ; If request is successful parse response
"RTN","PSSHRQ2",51,0)
 ; and put in results global object.  Also set the last successful run time.
"RTN","PSSHRQ2",52,0)
 IF +PSSRESLT>0 DO OUT^PSSHRQ2O(PSSDOC,PSSBASE),SLASTRUN^PSSHRIT($$NOW^XLFDT())
"RTN","PSSHRQ2",53,0)
 ; 
"RTN","PSSHRQ2",54,0)
 I 'PSSHRTMX S PSSHRTRT=$P($G(^TMP($J,PSSRBASE,"OUT",0)),"^") I PSSHRTRT'=0,PSSHRTRT'=1 K ^TMP($J,PSSRBASE,"OUT",0) D SHG G RETRY
"RTN","PSSHRQ2",55,0)
 ;
"RTN","PSSHRQ2",56,0)
END ; re-store "IN" nodes
"RTN","PSSHRQ2",57,0)
 M ^TMP($J,PSSBASE,"IN")=^TMP($J,"SAVE","IN")
"RTN","PSSHRQ2",58,0)
 K ^TMP($J,"SAVE","IN")
"RTN","PSSHRQ2",59,0)
 S PSSRBASX=$P($G(^TMP($J,PSSRBASE,"OUT",0)),"^") I PSSRBASX'=-1,PSSRBASX'=0,PSSRBASX'=1 D
"RTN","PSSHRQ2",60,0)
 .K ^TMP($J,PSSRBASE,"OUT")
"RTN","PSSHRQ2",61,0)
 .S ^TMP($J,PSSRBASE,"OUT",0)="-1^An unexpected error has occurred."
"RTN","PSSHRQ2",62,0)
 I $P($G(^TMP($J,PSSRBASE,"OUT",0)),"^")'=-1 D CLEXP^PSSHRQ2O
"RTN","PSSHRQ2",63,0)
 QUIT
"RTN","PSSHRQ2",64,0)
 ;;
"RTN","PSSHRQ2",65,0)
 ;
"RTN","PSSHRQ2",66,0)
SHG ;Hang before retry
"RTN","PSSHRQ2",67,0)
 S PSSHRTMX=1
"RTN","PSSHRQ2",68,0)
 I $E(PSSRBASE,1,4)'="PING"!($G(PSSMCHK)="CHECK") H 3 Q
"RTN","PSSHRQ2",69,0)
 H 30
"RTN","PSSHRQ2",70,0)
 Q
"RTN","PSSHRQ21")
0^24^B139673586
"RTN","PSSHRQ21",1,0)
PSSHRQ21 ;WOIFO/AV,TS - Parses a PEPS drugDrugChecks XML element ;09/20/07
"RTN","PSSHRQ21",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**136,160**;9/30/97;Build 76
"RTN","PSSHRQ21",3,0)
 ;
"RTN","PSSHRQ21",4,0)
 ; @authors - Alex Vazquez, Tim Sabat
"RTN","PSSHRQ21",5,0)
 ; @date    - September 19, 2007
"RTN","PSSHRQ21",6,0)
 ; @version - 1.0
"RTN","PSSHRQ21",7,0)
 ;
"RTN","PSSHRQ21",8,0)
 QUIT
"RTN","PSSHRQ21",9,0)
 ;;
"RTN","PSSHRQ21",10,0)
DRUGDRUG(DOCHAND,NODE,BASE) ;
"RTN","PSSHRQ21",11,0)
 ; @DESC Handles putting the drugDrugChecks XML element into
"RTN","PSSHRQ21",12,0)
 ;       the DrugOrderChecks object
"RTN","PSSHRQ21",13,0)
 ;
"RTN","PSSHRQ21",14,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ21",15,0)
 ; @NODE Node associated with XML element
"RTN","PSSHRQ21",16,0)
 ; @PSSHAND Handle to DrugOrderChecks object
"RTN","PSSHRQ21",17,0)
 ;
"RTN","PSSHRQ21",18,0)
 ; @RETURNS Nothing
"RTN","PSSHRQ21",19,0)
 NEW PSS,MSGHASH,DRUGHASH,PSMSGCNT
"RTN","PSSHRQ21",20,0)
 ;
"RTN","PSSHRQ21",21,0)
 SET PSS("child")=0
"RTN","PSSHRQ21",22,0)
 SET PSS("drugCount")=0
"RTN","PSSHRQ21",23,0)
 SET PSMSGCNT=0
"RTN","PSSHRQ21",24,0)
 ;
"RTN","PSSHRQ21",25,0)
 FOR  SET PSS("child")=$$CHILD^MXMLDOM(DOCHAND,NODE,PSS("child")) QUIT:PSS("child")=0  DO
"RTN","PSSHRQ21",26,0)
 . SET PSS("childName")=$$NAME^MXMLDOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ21",27,0)
 . ;xml can have message at the top level of drugDrugCheck as well as within drugDrugChecks
"RTN","PSSHRQ21",28,0)
 . SET:PSS("childName")="message" PSMSGCNT=PSMSGCNT+1
"RTN","PSSHRQ21",29,0)
 . DO:PSS("childName")="message" MSGREAD(DOCHAND,PSS("child"),.MSGHASH,PSMSGCNT)
"RTN","PSSHRQ21",30,0)
 . ;
"RTN","PSSHRQ21",31,0)
 . SET:PSS("childName")="drugDrugCheck" PSS("drugCount")=PSS("drugCount")+1
"RTN","PSSHRQ21",32,0)
 . DO:PSS("childName")="drugDrugCheck" DRUGREAD(DOCHAND,PSS("child"),.DRUGHASH,PSS("drugCount"),.MSGHASH,PSMSGCNT)
"RTN","PSSHRQ21",33,0)
 . QUIT
"RTN","PSSHRQ21",34,0)
 ;
"RTN","PSSHRQ21",35,0)
 ; Write to globals
"RTN","PSSHRQ21",36,0)
 ; MSGHASH is populated within DRUGREAD if a message exists
"RTN","PSSHRQ21",37,0)
 DO MSGWRITE(.MSGHASH,BASE,"DRUGDRUG")
"RTN","PSSHRQ21",38,0)
 DO DRUGWRIT(.DRUGHASH,BASE)
"RTN","PSSHRQ21",39,0)
 QUIT
"RTN","PSSHRQ21",40,0)
 ;;
"RTN","PSSHRQ21",41,0)
MSGREAD(DOCHAND,NODE,HASH,COUNT) ;
"RTN","PSSHRQ21",42,0)
 ; @DESC Handles parsing message section
"RTN","PSSHRQ21",43,0)
 ;
"RTN","PSSHRQ21",44,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ21",45,0)
 ; @NODE Node associated with XML element
"RTN","PSSHRQ21",46,0)
 ; @COUNT Count of message sections
"RTN","PSSHRQ21",47,0)
 ; @HASH Where to store info
"RTN","PSSHRQ21",48,0)
 ;
"RTN","PSSHRQ21",49,0)
 ; @RETURNS Nothing
"RTN","PSSHRQ21",50,0)
 ;
"RTN","PSSHRQ21",51,0)
 ; Parse the message and store in hash
"RTN","PSSHRQ21",52,0)
 DO PARSEMSG^PSSHRCOM(DOCHAND,NODE,.HASH,COUNT)
"RTN","PSSHRQ21",53,0)
 ;
"RTN","PSSHRQ21",54,0)
 QUIT
"RTN","PSSHRQ21",55,0)
 ;;
"RTN","PSSHRQ21",56,0)
MSGWRITE(HASH,BASE,SUB) ;
"RTN","PSSHRQ21",57,0)
 ; @DESC Handles writing message section of the XML document
"RTN","PSSHRQ21",58,0)
 ; @NOTE:Error nodes for drugsnotchecked and for drug dosing messages are set 
"RTN","PSSHRQ21",59,0)
 ; in PSSHRQ23
"RTN","PSSHRQ21",60,0)
 ; @HASH ByRef, Hash used to store response
"RTN","PSSHRQ21",61,0)
 ; @BASE Base of output global
"RTN","PSSHRQ21",62,0)
 ; @SUB Type of message --DRUGDRUG, THERAPY OR DOSE
"RTN","PSSHRQ21",63,0)
 ; @RETURNS Nothing. Stores values in output global.
"RTN","PSSHRQ21",64,0)
 NEW PSS,I,NODE,WARNFLG,NODECNT
"RTN","PSSHRQ21",65,0)
 ;
"RTN","PSSHRQ21",66,0)
 SET I=""
"RTN","PSSHRQ21",67,0)
 FOR  SET I=$ORDER(HASH(I)) QUIT:I=""  DO
"RTN","PSSHRQ21",68,0)
 . ; Create the node to be used with subscript indirection
"RTN","PSSHRQ21",69,0)
 . ;
"RTN","PSSHRQ21",70,0)
 . SET NODE="^TMP($JOB,BASE,""OUT"",SUB,""ERROR"",HASH(I,""orderNumber""))"
"RTN","PSSHRQ21",71,0)
 . ;gets next error number
"RTN","PSSHRQ21",72,0)
 . S NODECNT=$O(@NODE@(":"),-1)+1
"RTN","PSSHRQ21",73,0)
 . SET NODE="^TMP($JOB,BASE,""OUT"",SUB,""ERROR"",HASH(I,""orderNumber""),NODECNT)"
"RTN","PSSHRQ21",74,0)
 . ;Need to $G several hash entries because they are undefined coming from NOTWRITE^PSSHRQ23
"RTN","PSSHRQ21",75,0)
 . I $G(HASH(I,"severity"))="Information" Q   ;If severity="information" don't save
"RTN","PSSHRQ21",76,0)
 . SET @NODE@(0)=HASH(I,"drugName")_"^"_HASH(I,"ien")_"^"_HASH(I,"cprsOrderNumber")_"^"_HASH(I,"package")
"RTN","PSSHRQ21",77,0)
 . SET @NODE@("SEV")=$G(HASH(I,"severity"))
"RTN","PSSHRQ21",78,0)
 . SET @NODE@("TYPE")=$G(HASH(I,"type"))
"RTN","PSSHRQ21",79,0)
 . ;SET @NODE@("NAME")=HASH(I,"drugName")
"RTN","PSSHRQ21",80,0)
 . SET @NODE@("TEXT")=HASH(I,"text")
"RTN","PSSHRQ21",81,0)
 . S WARNFLG=$S($G(HASH(I,"severity"))="Warning":1,1:0)
"RTN","PSSHRQ21",82,0)
 . ;Message node to display to user
"RTN","PSSHRQ21",83,0)
 . S @NODE@("MSG")=$$ERRMSG^PSSHRVL1(SUB,HASH(I,"drugName"),HASH(I,"orderNumber"),WARNFLG)
"RTN","PSSHRQ21",84,0)
 . ;D
"RTN","PSSHRQ21",85,0)
 . ;.I $D(HASH(I,"msg")) S @NODE@("MSG")=HASH(I,"msg") Q
"RTN","PSSHRQ21",86,0)
 . ;.S @NODE@("MSG")=$$ERRMSG^PSSHRVL1(SUB,HASH(I,"drugName"),HASH(I,"orderNumber"),WARNFLG)
"RTN","PSSHRQ21",87,0)
 . QUIT
"RTN","PSSHRQ21",88,0)
 QUIT
"RTN","PSSHRQ21",89,0)
 ;;
"RTN","PSSHRQ21",90,0)
DRUGREAD(DOCHAND,NODE,HASH,COUNT,MSGHASH,MSGCNT) ;
"RTN","PSSHRQ21",91,0)
 ; @DESC Handles parsing and storage of drugDrugCheck element
"RTN","PSSHRQ21",92,0)
 ;
"RTN","PSSHRQ21",93,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ21",94,0)
 ; @NODE Node associated with XML element
"RTN","PSSHRQ21",95,0)
 ; @COUNT Count of message sections
"RTN","PSSHRQ21",96,0)
 ; @HASH Where to store info (by ref)
"RTN","PSSHRQ21",97,0)
 ; @MSGHASH-Where message information is stored (by ref)
"RTN","PSSHRQ21",98,0)
 ; @MSGCNT-counter for messages
"RTN","PSSHRQ21",99,0)
 ; 
"RTN","PSSHRQ21",100,0)
 ; @RETURNS Nothing
"RTN","PSSHRQ21",101,0)
 NEW PSS
"RTN","PSSHRQ21",102,0)
 ;
"RTN","PSSHRQ21",103,0)
 SET PSS("child")=0
"RTN","PSSHRQ21",104,0)
 ;
"RTN","PSSHRQ21",105,0)
 SET PSS("messageCount")=MSGCNT
"RTN","PSSHRQ21",106,0)
 ;
"RTN","PSSHRQ21",107,0)
 FOR  SET PSS("child")=$$CHILD^MXMLDOM(DOCHAND,NODE,PSS("child")) QUIT:PSS("child")=0  DO
"RTN","PSSHRQ21",108,0)
 . SET PSS("childName")=$$NAME^MXMLDOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ21",109,0)
 . ;
"RTN","PSSHRQ21",110,0)
 . I PSS("childName")="message" D  Q
"RTN","PSSHRQ21",111,0)
 . .S PSS("messageCount")=PSS("messageCount")+1
"RTN","PSSHRQ21",112,0)
 . .D MSGREAD(DOCHAND,PSS("child"),.MSGHASH,PSS("messageCount"))
"RTN","PSSHRQ21",113,0)
 . ;
"RTN","PSSHRQ21",114,0)
 . DO:PSS("childName")="interactedDrugList"
"RTN","PSSHRQ21",115,0)
 . . DO DRUGLIST^PSSHRCOM(DOCHAND,PSS("child"),.HASH,COUNT)
"RTN","PSSHRQ21",116,0)
 . . QUIT
"RTN","PSSHRQ21",117,0)
 . DO:PSS("childName")="severity"
"RTN","PSSHRQ21",118,0)
 . . ; Translate the peps severity into a vista specific severity
"RTN","PSSHRQ21",119,0)
 . . SET HASH(COUNT,"severity")=$$TRANSEV($$GETTEXT^PSSHRCOM(DOCHAND,PSS("child")))
"RTN","PSSHRQ21",120,0)
 . . QUIT
"RTN","PSSHRQ21",121,0)
 . DO:PSS("childName")="interaction"
"RTN","PSSHRQ21",122,0)
 . . SET HASH(COUNT,"interaction")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ21",123,0)
 . . QUIT
"RTN","PSSHRQ21",124,0)
 . DO:PSS("childName")="shortText"
"RTN","PSSHRQ21",125,0)
 . . SET HASH(COUNT,"shortText")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ21",126,0)
 . . QUIT
"RTN","PSSHRQ21",127,0)
 . DO:PSS("childName")="professionalMonograph"
"RTN","PSSHRQ21",128,0)
 . . DO MONOGRAF(DOCHAND,PSS("child"),.HASH,"ProfessionalMonograph",COUNT)
"RTN","PSSHRQ21",129,0)
 . . QUIT
"RTN","PSSHRQ21",130,0)
 . DO:PSS("childName")="consumerMonograph"
"RTN","PSSHRQ21",131,0)
 . . DO MONOGRAF(DOCHAND,PSS("child"),.HASH,"ConsumerMonograph",COUNT)
"RTN","PSSHRQ21",132,0)
 . . QUIT
"RTN","PSSHRQ21",133,0)
 . QUIT
"RTN","PSSHRQ21",134,0)
 QUIT
"RTN","PSSHRQ21",135,0)
 ;;
"RTN","PSSHRQ21",136,0)
MONOGRAF(DOCHAND,NODE,HASH,MONOTYPE,COUNT) ;
"RTN","PSSHRQ21",137,0)
 ; @DESC Parses and stores the monograph of the monograph type
"RTN","PSSHRQ21",138,0)
 ;
"RTN","PSSHRQ21",139,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ21",140,0)
 ; @NODE Node associated with XML element
"RTN","PSSHRQ21",141,0)
 ; @HASH Handle to DrugOrderChecks object
"RTN","PSSHRQ21",142,0)
 ; @MONOTYPE Type of monograph either ProfessionalMonograph or ConsumerMonograph
"RTN","PSSHRQ21",143,0)
 ;
"RTN","PSSHRQ21",144,0)
 ; @RETURNS Nothing
"RTN","PSSHRQ21",145,0)
 ;
"RTN","PSSHRQ21",146,0)
 NEW PSS
"RTN","PSSHRQ21",147,0)
 ;
"RTN","PSSHRQ21",148,0)
 SET PSS("child")=0
"RTN","PSSHRQ21",149,0)
 SET PSS("i")=0
"RTN","PSSHRQ21",150,0)
 ;
"RTN","PSSHRQ21",151,0)
 FOR  SET PSS("child")=$$CHILD^MXMLDOM(DOCHAND,NODE,PSS("child")) QUIT:PSS("child")=0  DO
"RTN","PSSHRQ21",152,0)
 . ; Get the sub elements of the monograph type section
"RTN","PSSHRQ21",153,0)
 . SET PSS("childName")=$$NAME^MXMLDOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ21",154,0)
 . I PSS("childName")="monographSource" D  Q
"RTN","PSSHRQ21",155,0)
 . .S HASH(COUNT,"monographSource")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ21",156,0)
 . SET PSS("i")=PSS("i")+1
"RTN","PSSHRQ21",157,0)
 . 
"RTN","PSSHRQ21",158,0)
 . ;if this is references element get reference sub-element.
"RTN","PSSHRQ21",159,0)
 . I PSS("childName")="references" D  Q
"RTN","PSSHRQ21",160,0)
 . . D REF(DOCHAND,PSS("child"),.HASH,MONOTYPE,COUNT)
"RTN","PSSHRQ21",161,0)
 . ; Get text of element
"RTN","PSSHRQ21",162,0)
 . SET PSS("sectionText")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ21",163,0)
 . SET HASH(COUNT,MONOTYPE,PSS("childName"))=PSS("sectionText")
"RTN","PSSHRQ21",164,0)
 . QUIT
"RTN","PSSHRQ21",165,0)
 ;
"RTN","PSSHRQ21",166,0)
 ; Set the total count of monograph sections
"RTN","PSSHRQ21",167,0)
 SET HASH(COUNT,MONOTYPE,0)=PSS("i")
"RTN","PSSHRQ21",168,0)
 ;
"RTN","PSSHRQ21",169,0)
 QUIT
"RTN","PSSHRQ21",170,0)
 ;;
"RTN","PSSHRQ21",171,0)
REF(DOCHAND,NODE,HASH,MONOTYPE,COUNT) ;
"RTN","PSSHRQ21",172,0)
 ; @DESC Parses and stores the reference element of references element.
"RTN","PSSHRQ21",173,0)
 ;
"RTN","PSSHRQ21",174,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ21",175,0)
 ; @NODE Node associated with XML element
"RTN","PSSHRQ21",176,0)
 ; @HASH Handle to DrugOrderChecks object
"RTN","PSSHRQ21",177,0)
 ; @MONOTYPE Type of monograph either ProfessionalMonograph or ConsumerMonograph
"RTN","PSSHRQ21",178,0)
 ;
"RTN","PSSHRQ21",179,0)
 ; @RETURNS Nothing
"RTN","PSSHRQ21",180,0)
 ;
"RTN","PSSHRQ21",181,0)
 NEW PSS
"RTN","PSSHRQ21",182,0)
 ;
"RTN","PSSHRQ21",183,0)
 SET PSS("child")=0
"RTN","PSSHRQ21",184,0)
 SET PSS("i")=0
"RTN","PSSHRQ21",185,0)
 ;
"RTN","PSSHRQ21",186,0)
 FOR  SET PSS("child")=$$CHILD^MXMLDOM(DOCHAND,NODE,PSS("child")) QUIT:PSS("child")=0  DO
"RTN","PSSHRQ21",187,0)
 . ; Get the sub elements of the references type section
"RTN","PSSHRQ21",188,0)
 . SET PSS("childName")=$$NAME^MXMLDOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ21",189,0)
 . I PSS("childName")="reference" D
"RTN","PSSHRQ21",190,0)
 . .S HASH(COUNT,MONOTYPE,"references",PSS("i"))=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ21",191,0)
 . .SET PSS("i")=PSS("i")+1
"RTN","PSSHRQ21",192,0)
 . QUIT
"RTN","PSSHRQ21",193,0)
 S:PSS("i")>0 HASH(COUNT,MONOTYPE,"references")=PSS("i")  ; if >0 means references have reference elements
"RTN","PSSHRQ21",194,0)
 QUIT
"RTN","PSSHRQ21",195,0)
 ;;
"RTN","PSSHRQ21",196,0)
DRUGWRIT(HASH,BASE) ;
"RTN","PSSHRQ21",197,0)
 ; @DESC Handles writing drugDrugChecks drugDrugCheck section of the XML document
"RTN","PSSHRQ21",198,0)
 ;
"RTN","PSSHRQ21",199,0)
 ; @HASH ByRef, Hash used to store response
"RTN","PSSHRQ21",200,0)
 ; @BASE Base of output global
"RTN","PSSHRQ21",201,0)
 ;
"RTN","PSSHRQ21",202,0)
 ; @RETURNS Nothing. Stores values in output global.
"RTN","PSSHRQ21",203,0)
 ;
"RTN","PSSHRQ21",204,0)
 NEW I,PSS,NODE,FIRST,SECOND,SUB,IPMON,L
"RTN","PSSHRQ21",205,0)
 SET SUB="ProfessionalMonograph"
"RTN","PSSHRQ21",206,0)
 ;
"RTN","PSSHRQ21",207,0)
 ; Loop through the drugDrugCheck elements
"RTN","PSSHRQ21",208,0)
 SET I=""
"RTN","PSSHRQ21",209,0)
 FOR  SET I=$ORDER(HASH(I)) QUIT:I=""  DO
"RTN","PSSHRQ21",210,0)
 . ; If Severity equals 0 ignore this drug drug check and move onto next
"RTN","PSSHRQ21",211,0)
 . IF +HASH(I,"severity")=-1 QUIT
"RTN","PSSHRQ21",212,0)
 . S IPMON=16  ; PMON index before starting to write references
"RTN","PSSHRQ21",213,0)
 . ; A profile drug should always take precedent in the subscript over a prospective drug
"RTN","PSSHRQ21",214,0)
 . ; If two prospective or two profile drugs then precedence doesn't matter
"RTN","PSSHRQ21",215,0)
 . ; Set the values to default values
"RTN","PSSHRQ21",216,0)
 . SET FIRST=1
"RTN","PSSHRQ21",217,0)
 . SET SECOND=2
"RTN","PSSHRQ21",218,0)
 . IF $$ISPROF^PSSHRCOM(HASH(I,"drugList",2,"orderNumber"))=1  DO
"RTN","PSSHRQ21",219,0)
 . . SET FIRST=2
"RTN","PSSHRQ21",220,0)
 . . SET SECOND=1
"RTN","PSSHRQ21",221,0)
 . . QUIT
"RTN","PSSHRQ21",222,0)
 . ;
"RTN","PSSHRQ21",223,0)
 . ; Create the node to use with subscript indirection
"RTN","PSSHRQ21",224,0)
 . SET NODE="^TMP($JOB,BASE,""OUT"",""DRUGDRUG"",$$SEVCODE(HASH(I,""severity""))"
"RTN","PSSHRQ21",225,0)
 . SET NODE=NODE_",HASH(I,""drugList"",FIRST,""drugName""),HASH(I,""drugList"",FIRST,""orderNumber""),I)"
"RTN","PSSHRQ21",226,0)
 .
"RTN","PSSHRQ21",227,0)
 . ; Value on right of = should be as follows
"RTN","PSSHRQ21",228,0)
 . ; 2nd Order Number^2nd Drug IEN^1st Drug IEN^2nd Drug Name^CPRS Order Number^Package
"RTN","PSSHRQ21",229,0)
 . SET PSS("value")=HASH(I,"drugList",SECOND,"orderNumber")_"^"_HASH(I,"drugList",SECOND,"ien")_"^"_HASH(I,"drugList",FIRST,"ien")
"RTN","PSSHRQ21",230,0)
 . SET PSS("value")=PSS("value")_"^"_HASH(I,"drugList",SECOND,"drugName")_"^"_HASH(I,"drugList",FIRST,"cprsOrderNumber")_"^"_HASH(I,"drugList",FIRST,"package")
"RTN","PSSHRQ21",231,0)
 . SET @NODE=PSS("value")
"RTN","PSSHRQ21",232,0)
 . ;
"RTN","PSSHRQ21",233,0)
 . I $$CHKHASH(.HASH,I,"severity") SET @NODE@("SEV")=HASH(I,"severity")
"RTN","PSSHRQ21",234,0)
 . I $$CHKHASH(.HASH,I,"shortText") SET @NODE@("SHORT")=HASH(I,"shortText")
"RTN","PSSHRQ21",235,0)
 . I $$CHKHASH(.HASH,I,"interaction") SET @NODE@("INT")=HASH(I,"interaction")
"RTN","PSSHRQ21",236,0)
 . I $$CHKHASH(.HASH,I,SUB,"clinicalEffects") SET @NODE@("CLIN")=HASH(I,"ProfessionalMonograph","clinicalEffects")
"RTN","PSSHRQ21",237,0)
 . ;
"RTN","PSSHRQ21",238,0)
 . ; Write professional monograph
"RTN","PSSHRQ21",239,0)
 . ; Professional monograph MUST be in order specified by code with a single
"RTN","PSSHRQ21",240,0)
 . ; line of space between each section
"RTN","PSSHRQ21",241,0)
 . I $$CHKHASH(.HASH,I,SUB,0) SET @NODE@("PMON")=HASH(I,"ProfessionalMonograph",0)
"RTN","PSSHRQ21",242,0)
 . I $$CHKHASH(.HASH,I,SUB,"disclaimer") D
"RTN","PSSHRQ21",243,0)
 . .SET @NODE@("PMON",1,0)=HASH(I,"ProfessionalMonograph","disclaimer")
"RTN","PSSHRQ21",244,0)
 . .SET @NODE@("PMON",2,0)=""
"RTN","PSSHRQ21",245,0)
 . I $$CHKHASH(.HASH,I,SUB,"monographTitle") D
"RTN","PSSHRQ21",246,0)
 . .SET @NODE@("PMON",3,0)=HASH(I,"ProfessionalMonograph","monographTitle")
"RTN","PSSHRQ21",247,0)
 . .SET @NODE@("PMON",4,0)=""
"RTN","PSSHRQ21",248,0)
 . I $$CHKHASH(.HASH,I,SUB,"severityLevel") D
"RTN","PSSHRQ21",249,0)
 . .SET @NODE@("PMON",5,0)=HASH(I,"ProfessionalMonograph","severityLevel")
"RTN","PSSHRQ21",250,0)
 . .SET @NODE@("PMON",6,0)=""
"RTN","PSSHRQ21",251,0)
 . I $$CHKHASH(.HASH,I,SUB,"mechanismOfAction") D
"RTN","PSSHRQ21",252,0)
 . .SET @NODE@("PMON",7,0)=HASH(I,"ProfessionalMonograph","mechanismOfAction")
"RTN","PSSHRQ21",253,0)
 . .SET @NODE@("PMON",8,0)=""
"RTN","PSSHRQ21",254,0)
 . I $$CHKHASH(.HASH,I,SUB,"clinicalEffects") D
"RTN","PSSHRQ21",255,0)
 . .SET @NODE@("PMON",9,0)=HASH(I,"ProfessionalMonograph","clinicalEffects")
"RTN","PSSHRQ21",256,0)
 . .SET @NODE@("PMON",10,0)=""
"RTN","PSSHRQ21",257,0)
 . I $$CHKHASH(.HASH,I,SUB,"predisposingFactors") D
"RTN","PSSHRQ21",258,0)
 . .SET @NODE@("PMON",11,0)=HASH(I,"ProfessionalMonograph","predisposingFactors")
"RTN","PSSHRQ21",259,0)
 . .SET @NODE@("PMON",12,0)=""
"RTN","PSSHRQ21",260,0)
 . I $$CHKHASH(.HASH,I,SUB,"patientManagement") D
"RTN","PSSHRQ21",261,0)
 . .SET @NODE@("PMON",13,0)=HASH(I,"ProfessionalMonograph","patientManagement")
"RTN","PSSHRQ21",262,0)
 . .SET @NODE@("PMON",14,0)=""
"RTN","PSSHRQ21",263,0)
 . I $$CHKHASH(.HASH,I,SUB,"discussion") D
"RTN","PSSHRQ21",264,0)
 . .SET @NODE@("PMON",15,0)=HASH(I,"ProfessionalMonograph","discussion")
"RTN","PSSHRQ21",265,0)
 . .SET @NODE@("PMON",16,0)=""
"RTN","PSSHRQ21",266,0)
 . I $$CHKHASH(.HASH,I,SUB,"references") D
"RTN","PSSHRQ21",267,0)
 . . S L=""
"RTN","PSSHRQ21",268,0)
 . . F  S L=$O(HASH(I,"ProfessionalMonograph","references",L)) Q:L=""  D
"RTN","PSSHRQ21",269,0)
 . . .S IPMON=IPMON+1
"RTN","PSSHRQ21",270,0)
 . . .S @NODE@("PMON",IPMON,0)=HASH(I,"ProfessionalMonograph","references",L)
"RTN","PSSHRQ21",271,0)
 . . ;
"RTN","PSSHRQ21",272,0)
 . . S IPMON=IPMON+1
"RTN","PSSHRQ21",273,0)
 . . SET @NODE@("PMON",IPMON,0)=""
"RTN","PSSHRQ21",274,0)
 . ;
"RTN","PSSHRQ21",275,0)
 . I $$CHKHASH(.HASH,I,"monographSource") SET IPMON=IPMON+1 SET @NODE@("PMON",IPMON,0)=$$COPYRITE(HASH(I,"monographSource"))
"RTN","PSSHRQ21",276,0)
 . ;
"RTN","PSSHRQ21",277,0)
 . ; Write consumer monograph
"RTN","PSSHRQ21",278,0)
 . ; consumer monograph NOT currently available TODO add when available
"RTN","PSSHRQ21",279,0)
 . QUIT
"RTN","PSSHRQ21",280,0)
 QUIT
"RTN","PSSHRQ21",281,0)
 ;;
"RTN","PSSHRQ21",282,0)
CHKHASH(HASH,CNT,SUB1,SUB2) ;
"RTN","PSSHRQ21",283,0)
 ;CHECKS if hash node has data
"RTN","PSSHRQ21",284,0)
 ;inputs: HASH-ARRAY PASSED IN BY REF
"RTN","PSSHRQ21",285,0)
 ;        CNT-The hash number passed in
"RTN","PSSHRQ21",286,0)
 ;        SUB1--First subscript
"RTN","PSSHRQ21",287,0)
 ;        SUB2 (OPTIONAL)-SECOND SUBSCRIPT
"RTN","PSSHRQ21",288,0)
 ;RETURNS LENGTH OF DATA IN NODE OR 0 IF DOESN'T EXIST
"RTN","PSSHRQ21",289,0)
 N RESULT
"RTN","PSSHRQ21",290,0)
 D
"RTN","PSSHRQ21",291,0)
 .I $L($G(SUB2)) D  Q
"RTN","PSSHRQ21",292,0)
 ..S RESULT=$L($G(HASH(CNT,SUB1,SUB2)))
"RTN","PSSHRQ21",293,0)
 .S RESULT=$L($G(HASH(CNT,SUB1)))
"RTN","PSSHRQ21",294,0)
 Q RESULT
"RTN","PSSHRQ21",295,0)
 ;
"RTN","PSSHRQ21",296,0)
TRANSEV(SEV) ;
"RTN","PSSHRQ21",297,0)
 ; @DESC Translates the severity attribute returned by the XML into
"RTN","PSSHRQ21",298,0)
 ; a VistA specific severity
"RTN","PSSHRQ21",299,0)
 ;
"RTN","PSSHRQ21",300,0)
 ; @SEV Severity returned from the XML
"RTN","PSSHRQ21",301,0)
 ;
"RTN","PSSHRQ21",302,0)
 ; @RETURNS VistA specific severity
"RTN","PSSHRQ21",303,0)
 ;
"RTN","PSSHRQ21",304,0)
 ; DrugDrugChecks with an FDB severity of "Contraindicated Drug Combination"
"RTN","PSSHRQ21",305,0)
 ; will be displayed as "Critical".
"RTN","PSSHRQ21",306,0)
 ; DrugDrugChecks with an FDB severity of "Severe Interaction" will be displayed as "Significant".
"RTN","PSSHRQ21",307,0)
 ; IMPORTANT:
"RTN","PSSHRQ21",308,0)
 ; DrugDrugChecks that are not 'critical' or 'significant' are not included in output global.
"RTN","PSSHRQ21",309,0)
 QUIT $SELECT(SEV="Contraindicated Drug Combination":"Critical",SEV="Severe Interaction":"Significant",1:-1)
"RTN","PSSHRQ21",310,0)
 ;;
"RTN","PSSHRQ21",311,0)
SEVCODE(SEV) ;
"RTN","PSSHRQ21",312,0)
 ; @DESC Returns the proper severity code depending on the VistA specific severity
"RTN","PSSHRQ21",313,0)
 ;
"RTN","PSSHRQ21",314,0)
 ; @SEV VistA specific severity.
"RTN","PSSHRQ21",315,0)
 ;
"RTN","PSSHRQ21",316,0)
 ; @RETURNS Returns severity code. 'C' for Critical. 'S' for Significant.
"RTN","PSSHRQ21",317,0)
 ;
"RTN","PSSHRQ21",318,0)
 QUIT $SELECT(SEV="Critical":"C",SEV="Significant":"S")
"RTN","PSSHRQ21",319,0)
 ;;
"RTN","PSSHRQ21",320,0)
COPYRITE(SOURCE) ;
"RTN","PSSHRQ21",321,0)
 ; @DESC Returns correct copyright disclaimer for FDB OR VA PBM in format
"RTN","PSSHRQ21",322,0)
 ; @Copyright [Current Year] First DataBank, Inc.
"RTN","PSSHRQ21",323,0)
 ; @Information provided by VA PBM-SHG
"RTN","PSSHRQ21",324,0)
 ; @INPUT: source FDB OR Custom
"RTN","PSSHRQ21",325,0)
 ; @RETURNS FDB copyright OR va pbm information
"RTN","PSSHRQ21",326,0)
 ;
"RTN","PSSHRQ21",327,0)
 NEW PSS
"RTN","PSSHRQ21",328,0)
 ;
"RTN","PSSHRQ21",329,0)
 N %I
"RTN","PSSHRQ21",330,0)
 DO NOW^%DTC
"RTN","PSSHRQ21",331,0)
 SET PSS("fileManYear")=%I(3)
"RTN","PSSHRQ21",332,0)
 ; File man years begin at 1700
"RTN","PSSHRQ21",333,0)
 SET PSS("year")=PSS("fileManYear")+1700
"RTN","PSSHRQ21",334,0)
 ;
"RTN","PSSHRQ21",335,0)
 D  ;Case on Source
"RTN","PSSHRQ21",336,0)
 .I SOURCE="Custom" S PSS("source")="Information provided by VA PBM-SHG" Q
"RTN","PSSHRQ21",337,0)
 .S PSS("source")="Copyright "_PSS("year")_" First Databank, Inc."
"RTN","PSSHRQ21",338,0)
 QUIT PSS("source")
"RTN","PSSHRQ21",339,0)
 ;;
"RTN","PSSHRQ21",340,0)
 ;;
"RTN","PSSHRQ2O")
0^22^B48912788
"RTN","PSSHRQ2O",1,0)
PSSHRQ2O ;WOIFO/AV,TS,SG - Handles parsing a PEPS Drug Check Response ;09/20/07
"RTN","PSSHRQ2O",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**136,160**;9/30/97;Build 76
"RTN","PSSHRQ2O",3,0)
 ;
"RTN","PSSHRQ2O",4,0)
 ; @authors - Chris Flegel, Alex Vazquez, Tim Sabat
"RTN","PSSHRQ2O",5,0)
 ; @date    - September 19, 2007
"RTN","PSSHRQ2O",6,0)
 ; @version - 1.0
"RTN","PSSHRQ2O",7,0)
 ;
"RTN","PSSHRQ2O",8,0)
 QUIT
"RTN","PSSHRQ2O",9,0)
 ;;
"RTN","PSSHRQ2O",10,0)
OUT(DOCHAND,BASE) ;
"RTN","PSSHRQ2O",11,0)
 ; @DESC Parses the PEPSResponse XML and stores in object
"RTN","PSSHRQ2O",12,0)
 ;
"RTN","PSSHRQ2O",13,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ2O",14,0)
 ; @BASE Base of output global
"RTN","PSSHRQ2O",15,0)
 ;
"RTN","PSSHRQ2O",16,0)
 NEW PSS,HASH,MESSAGE
"RTN","PSSHRQ2O",17,0)
 ;
"RTN","PSSHRQ2O",18,0)
 SET PSS("rootName")=$$NAME^MXMLDOM(DOCHAND,1)
"RTN","PSSHRQ2O",19,0)
 ;
"RTN","PSSHRQ2O",20,0)
 IF PSS("rootName")="exception" DO
"RTN","PSSHRQ2O",21,0)
 . ; Read error into hash variable
"RTN","PSSHRQ2O",22,0)
 . DO ERREAD(DOCHAND,.HASH)
"RTN","PSSHRQ2O",23,0)
 . ; Write hashed variable to output global
"RTN","PSSHRQ2O",24,0)
 . IF HASH("code")="FDBUPDATE" S MESSAGE="Vendor database updates are being processed."            ; HASH("message")
"RTN","PSSHRQ2O",25,0)
 . ELSE  IF $D(^TMP($J,BASE,"IN","DOSE"))>0 SET MESSAGE="An unexpected error has occurred."
"RTN","PSSHRQ2O",26,0)
 . ELSE  SET MESSAGE="An unexpected error has occurred."
"RTN","PSSHRQ2O",27,0)
 . SET ^TMP($JOB,BASE,"OUT",0)="-1^"_MESSAGE
"RTN","PSSHRQ2O",28,0)
 . ;
"RTN","PSSHRQ2O",29,0)
 . ; Cleanup the out.exception global
"RTN","PSSHRQ2O",30,0)
 . KILL ^TMP($JOB,"OUT","EXCEPTION")
"RTN","PSSHRQ2O",31,0)
 ;
"RTN","PSSHRQ2O",32,0)
 IF PSS("rootName")="PEPSResponse" DO HNDLCK(DOCHAND,BASE)
"RTN","PSSHRQ2O",33,0)
 ;
"RTN","PSSHRQ2O",34,0)
 ; Clean up after using the handle
"RTN","PSSHRQ2O",35,0)
 DO DELETE^MXMLDOM(DOCHAND)
"RTN","PSSHRQ2O",36,0)
 KILL ^TMP($J,"OUT XML")
"RTN","PSSHRQ2O",37,0)
 QUIT
"RTN","PSSHRQ2O",38,0)
 ;
"RTN","PSSHRQ2O",39,0)
HNDLCK(DOCHAND,BASE) ;
"RTN","PSSHRQ2O",40,0)
 ; @DESC This handles the parsing of the PEPSResponse XML element
"RTN","PSSHRQ2O",41,0)
 ;
"RTN","PSSHRQ2O",42,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ2O",43,0)
 ; @BASE Base of output global
"RTN","PSSHRQ2O",44,0)
 ;
"RTN","PSSHRQ2O",45,0)
 ; @RETURNS Nothing
"RTN","PSSHRQ2O",46,0)
 ;
"RTN","PSSHRQ2O",47,0)
 NEW PSS
"RTN","PSSHRQ2O",48,0)
 ;
"RTN","PSSHRQ2O",49,0)
 ; if ping get the vendor database info and exit.
"RTN","PSSHRQ2O",50,0)
 IF $D(^TMP($JOB,BASE,"IN","PING")) SET ^TMP($JOB,BASE,"OUT",0)=0 DO GTDBINFO(DOCHAND,BASE) QUIT
"RTN","PSSHRQ2O",51,0)
 ;
"RTN","PSSHRQ2O",52,0)
 ; Get handle to drugCheck XML element
"RTN","PSSHRQ2O",53,0)
 SET PSS("drugCheck")=$$GTHANDLE(DOCHAND)
"RTN","PSSHRQ2O",54,0)
 SET PSS("child")=0
"RTN","PSSHRQ2O",55,0)
 ; Loop through elements of drugCheck
"RTN","PSSHRQ2O",56,0)
 FOR  SET PSS("child")=$$CHILD^MXMLDOM(DOCHAND,PSS("drugCheck"),PSS("child")) QUIT:PSS("child")=0  DO
"RTN","PSSHRQ2O",57,0)
 . SET PSS("childName")=$$NAME^MXMLDOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ2O",58,0)
 . ;
"RTN","PSSHRQ2O",59,0)
 . ; Build executable string
"RTN","PSSHRQ2O",60,0)
 . SET PSS("tag")=$$SELTAG(PSS("childName"))
"RTN","PSSHRQ2O",61,0)
 . SET PSS("executable")="DO "_PSS("tag")_"(DOCHAND,PSS(""child""),BASE)"
"RTN","PSSHRQ2O",62,0)
 . ;
"RTN","PSSHRQ2O",63,0)
 . XECUTE PSS("executable")
"RTN","PSSHRQ2O",64,0)
 . QUIT
"RTN","PSSHRQ2O",65,0)
 ;
"RTN","PSSHRQ2O",66,0)
 ; Set top level node to 1 or 0
"RTN","PSSHRQ2O",67,0)
 IF $DATA(^TMP($JOB,BASE,"OUT"))>1 SET ^TMP($JOB,BASE,"OUT",0)=1
"RTN","PSSHRQ2O",68,0)
 IF $DATA(^TMP($JOB,BASE,"OUT"))<10 SET ^TMP($JOB,BASE,"OUT",0)=0
"RTN","PSSHRQ2O",69,0)
 QUIT
"RTN","PSSHRQ2O",70,0)
 ;
"RTN","PSSHRQ2O",71,0)
GTDBINFO(DOCHAND,BASE) ; get the Vendor database info. 
"RTN","PSSHRQ2O",72,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ2O",73,0)
 ; @BASE Base of output global
"RTN","PSSHRQ2O",74,0)
 ;
"RTN","PSSHRQ2O",75,0)
 NEW PSS,HEADER
"RTN","PSSHRQ2O",76,0)
 SET PSS("child")=0
"RTN","PSSHRQ2O",77,0)
 SET PSS("childName")=""
"RTN","PSSHRQ2O",78,0)
 ; get <Header> child
"RTN","PSSHRQ2O",79,0)
 FOR  DO  QUIT:PSS("childName")="Header"
"RTN","PSSHRQ2O",80,0)
 . SET PSS("child")=$$CHILD^MXMLDOM(DOCHAND,1,PSS("child"))
"RTN","PSSHRQ2O",81,0)
 . SET PSS("childName")=$$NAME^MXMLDOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ2O",82,0)
 ;
"RTN","PSSHRQ2O",83,0)
 ; get <PEPSVersion> child of <Header> element
"RTN","PSSHRQ2O",84,0)
 SET HEADER=PSS("child")
"RTN","PSSHRQ2O",85,0)
 SET PSS("child")=0
"RTN","PSSHRQ2O",86,0)
 FOR  DO  QUIT:PSS("childName")="PEPSVersion"
"RTN","PSSHRQ2O",87,0)
 . SET PSS("child")=$$CHILD^MXMLDOM(DOCHAND,HEADER,PSS("child"))
"RTN","PSSHRQ2O",88,0)
 . SET PSS("childName")=$$NAME^MXMLDOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ2O",89,0)
 ;
"RTN","PSSHRQ2O",90,0)
 SET ^TMP($JOB,BASE,"OUT","difIssueDate")=$$VALUE^MXMLDOM(DOCHAND,PSS("child"),"difIssueDate")
"RTN","PSSHRQ2O",91,0)
 SET ^TMP($JOB,BASE,"OUT","difBuildVersion")=$$VALUE^MXMLDOM(DOCHAND,PSS("child"),"difBuildVersion")
"RTN","PSSHRQ2O",92,0)
 SET ^TMP($JOB,BASE,"OUT","difDbVersion")=$$VALUE^MXMLDOM(DOCHAND,PSS("child"),"difDbVersion")
"RTN","PSSHRQ2O",93,0)
 SET ^TMP($JOB,BASE,"OUT","customIssueDate")=$$VALUE^MXMLDOM(DOCHAND,PSS("child"),"customIssueDate")
"RTN","PSSHRQ2O",94,0)
 SET ^TMP($JOB,BASE,"OUT","customBuildVersion")=$$VALUE^MXMLDOM(DOCHAND,PSS("child"),"customBuildVersion")
"RTN","PSSHRQ2O",95,0)
 SET ^TMP($JOB,BASE,"OUT","customDbVersion")=$$VALUE^MXMLDOM(DOCHAND,PSS("child"),"customDbVersion")
"RTN","PSSHRQ2O",96,0)
 QUIT
"RTN","PSSHRQ2O",97,0)
 ;
"RTN","PSSHRQ2O",98,0)
GTHANDLE(DOCHAND) ;
"RTN","PSSHRQ2O",99,0)
 ; @DESC Get handle to drugCheck element from PEPSResponse element
"RTN","PSSHRQ2O",100,0)
 ;
"RTN","PSSHRQ2O",101,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ2O",102,0)
 ;
"RTN","PSSHRQ2O",103,0)
 ; @RETURNS Handle to drugCheck XML element
"RTN","PSSHRQ2O",104,0)
 ;
"RTN","PSSHRQ2O",105,0)
 NEW PSS
"RTN","PSSHRQ2O",106,0)
 ;
"RTN","PSSHRQ2O",107,0)
 SET PSS("child")=0
"RTN","PSSHRQ2O",108,0)
 ;
"RTN","PSSHRQ2O",109,0)
 ; Get next child of root element
"RTN","PSSHRQ2O",110,0)
 FOR  SET PSS("child")=$$CHILD^MXMLDOM(DOCHAND,1,PSS("child")) QUIT:PSS("child")=0  DO
"RTN","PSSHRQ2O",111,0)
 . SET PSS("childName")=$$NAME^MXMLDOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ2O",112,0)
 . SET:PSS("childName")="Body" PSS("drugCheckElement")=$$CHILD^MXMLDOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ2O",113,0)
 ;
"RTN","PSSHRQ2O",114,0)
 QUIT PSS("drugCheckElement")
"RTN","PSSHRQ2O",115,0)
 ;
"RTN","PSSHRQ2O",116,0)
SELTAG(NAME) ;
"RTN","PSSHRQ2O",117,0)
 ; @DESC Returns the appropriate tag to handle the XML element
"RTN","PSSHRQ2O",118,0)
 ;
"RTN","PSSHRQ2O",119,0)
 ; @NAME Name of the current XML element
"RTN","PSSHRQ2O",120,0)
 ;
"RTN","PSSHRQ2O",121,0)
 ; @RETURNS Returns the appropriate tag to handle the XML element
"RTN","PSSHRQ2O",122,0)
 ;
"RTN","PSSHRQ2O",123,0)
 QUIT:NAME="drugsNotChecked" "DRGNTCK^PSSHRQ23"
"RTN","PSSHRQ2O",124,0)
 ;
"RTN","PSSHRQ2O",125,0)
 QUIT:NAME="drugDrugChecks" "DRUGDRUG^PSSHRQ21"
"RTN","PSSHRQ2O",126,0)
 ;
"RTN","PSSHRQ2O",127,0)
 QUIT:NAME="drugTherapyChecks" "THERAPY^PSSHRQ22"
"RTN","PSSHRQ2O",128,0)
 ;
"RTN","PSSHRQ2O",129,0)
 QUIT:NAME="drugDoseChecks" "DRGDOSE^PSSHRQ23"
"RTN","PSSHRQ2O",130,0)
 QUIT
"RTN","PSSHRQ2O",131,0)
 ;
"RTN","PSSHRQ2O",132,0)
ALTERROR(BASE) ;
"RTN","PSSHRQ2O",133,0)
 ; @DESC Handles alternate PEPS errors like being unable to
"RTN","PSSHRQ2O",134,0)
 ; connect to PEPS. Reads info from global in format
"RTN","PSSHRQ2O",135,0)
 ;
"RTN","PSSHRQ2O",136,0)
 ; ^TMP($JOB,"OUT","EXCEPTION")=MESSAGE
"RTN","PSSHRQ2O",137,0)
 ;
"RTN","PSSHRQ2O",138,0)
 ; @BASE Base of global to be written to
"RTN","PSSHRQ2O",139,0)
 ;
"RTN","PSSHRQ2O",140,0)
 ; @RETURNS Nothing
"RTN","PSSHRQ2O",141,0)
 ;
"RTN","PSSHRQ2O",142,0)
 SET ^TMP($JOB,BASE,"OUT",0)="-1^Vendor Database cannot be reached."
"RTN","PSSHRQ2O",143,0)
 ;
"RTN","PSSHRQ2O",144,0)
 ; Cleanup the out.exception global
"RTN","PSSHRQ2O",145,0)
 KILL ^TMP($JOB,"OUT","EXCEPTION")
"RTN","PSSHRQ2O",146,0)
 QUIT
"RTN","PSSHRQ2O",147,0)
 ;
"RTN","PSSHRQ2O",148,0)
ERREAD(DOCHAND,HASH) ;
"RTN","PSSHRQ2O",149,0)
 ; @DESC Handles parsing the exception XML element and storing it
"RTN","PSSHRQ2O",150,0)
 ; in a hash variable
"RTN","PSSHRQ2O",151,0)
 ;
"RTN","PSSHRQ2O",152,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ2O",153,0)
 ; @HASH ByRef, Hash variable used to store error info
"RTN","PSSHRQ2O",154,0)
 ;
"RTN","PSSHRQ2O",155,0)
 ; @RETURNS Nothing. Info stored in HASH param.
"RTN","PSSHRQ2O",156,0)
 ;
"RTN","PSSHRQ2O",157,0)
 NEW PSS
"RTN","PSSHRQ2O",158,0)
 ;
"RTN","PSSHRQ2O",159,0)
 SET PSS("child")=0
"RTN","PSSHRQ2O",160,0)
 ;
"RTN","PSSHRQ2O",161,0)
 ; Get next child of root element
"RTN","PSSHRQ2O",162,0)
 FOR  SET PSS("child")=$$CHILD^MXMLDOM(DOCHAND,1,PSS("child")) QUIT:PSS("child")=0  DO
"RTN","PSSHRQ2O",163,0)
 . SET PSS("childName")=$$NAME^MXMLDOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ2O",164,0)
 . SET:PSS("childName")="code" HASH("code")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ2O",165,0)
 . SET:PSS("childName")="message" HASH("message")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ2O",166,0)
 QUIT
"RTN","PSSHRQ2O",167,0)
 ;
"RTN","PSSHRQ2O",168,0)
 ;
"RTN","PSSHRQ2O",169,0)
CLEXP ;Delete Profile drug exceptions for CPRS if all Prospective drugs have exceptions
"RTN","PSSHRQ2O",170,0)
 N PSSPEX1,PSSPEX2,PSSPEXDL
"RTN","PSSHRQ2O",171,0)
 I '$D(^TMP($J,PSSRBASE,"IN","DRUGDRUG")),'$D(^TMP($J,PSSRBASE,"IN","THERAPY")) Q
"RTN","PSSHRQ2O",172,0)
 I '$D(^TMP($J,PSSRBASE,"OUT","EXCEPTIONS")) Q
"RTN","PSSHRQ2O",173,0)
 S PSSPEXDL=0
"RTN","PSSHRQ2O",174,0)
 S PSSPEX1="" F  S PSSPEX1=$O(^TMP($J,PSSRBASE,"IN","PROSPECTIVE",PSSPEX1)) Q:PSSPEX1=""!(PSSPEXDL)  D
"RTN","PSSHRQ2O",175,0)
 .I '$D(^TMP($J,PSSRBASE,"OUT","EXCEPTIONS",PSSPEX1)) S PSSPEXDL=1
"RTN","PSSHRQ2O",176,0)
 I PSSPEXDL D CLPAR Q
"RTN","PSSHRQ2O",177,0)
 S PSSPEX2="" F  S PSSPEX2=$O(^TMP($J,PSSRBASE,"OUT","EXCEPTIONS",PSSPEX2)) Q:PSSPEX2=""  D
"RTN","PSSHRQ2O",178,0)
 .I $P(PSSPEX2,";",3)="PROFILE" K ^TMP($J,PSSRBASE,"OUT","EXCEPTIONS",PSSPEX2)
"RTN","PSSHRQ2O",179,0)
 Q
"RTN","PSSHRQ2O",180,0)
 ;
"RTN","PSSHRQ2O",181,0)
 ;
"RTN","PSSHRQ2O",182,0)
CLPAR ;Some Exceptions exist, but not all prospective drugs have an exception
"RTN","PSSHRQ2O",183,0)
 N PSSPEX3,PSSPEX4,PSSPEX5,PSSPEX6,PSSPEX7,PSSPEX8,PSSPEXAR
"RTN","PSSHRQ2O",184,0)
 S PSSPEX3="" F  S PSSPEX3=$O(^TMP($J,PSSRBASE,"OUT","EXCEPTIONS",PSSPEX3)) Q:PSSPEX3=""  D:$P(PSSPEX3,";",3)="PROSPECTIVE"
"RTN","PSSHRQ2O",185,0)
 .S PSSPEX4="" F  S PSSPEX4=$O(^TMP($J,PSSRBASE,"OUT","EXCEPTIONS",PSSPEX3,PSSPEX4)) Q:PSSPEX4=""  D
"RTN","PSSHRQ2O",186,0)
 ..S PSSPEX5=$P($G(^TMP($J,PSSRBASE,"OUT","EXCEPTIONS",PSSPEX3,PSSPEX4)),"^",3) I PSSPEX5 S PSSPEXAR(PSSPEX5)=""
"RTN","PSSHRQ2O",187,0)
 S PSSPEX6="" F  S PSSPEX6=$O(^TMP($J,PSSRBASE,"OUT","EXCEPTIONS",PSSPEX6)) Q:PSSPEX6=""  D:$P(PSSPEX6,";",3)="PROFILE"
"RTN","PSSHRQ2O",188,0)
 .S PSSPEX7="" F  S PSSPEX7=$O(^TMP($J,PSSRBASE,"OUT","EXCEPTIONS",PSSPEX6,PSSPEX7)) Q:PSSPEX7=""  D
"RTN","PSSHRQ2O",189,0)
 ..S PSSPEX8=$P($G(^TMP($J,PSSRBASE,"OUT","EXCEPTIONS",PSSPEX6,PSSPEX7)),"^",3) I PSSPEX8,$D(PSSPEXAR(PSSPEX8)) D
"RTN","PSSHRQ2O",190,0)
 ...K ^TMP($J,PSSRBASE,"OUT","EXCEPTIONS",PSSPEX6)
"RTN","PSSHRQ2O",191,0)
 Q
"RTN","PSSHRVAL")
0^16^B160566342
"RTN","PSSHRVAL",1,0)
PSSHRVAL ;WOIFO/Alex Vasquez,Timothy Sabat,Steve Gordon - Data Validation routine for drug checks ;01/15/07
"RTN","PSSHRVAL",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**136,160**;9/30/97;Build 76
"RTN","PSSHRVAL",3,0)
 ;
"RTN","PSSHRVAL",4,0)
 ;
"RTN","PSSHRVAL",5,0)
 ;@NOTE: The exception node looks like this.
"RTN","PSSHRVAL",6,0)
 ;PSSHASH("Exception","PROSPECTIVE","DOSE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText
"RTN","PSSHRVAL",7,0)
 ;PSSHASH("Exception","PROSPECTIVE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText
"RTN","PSSHRVAL",8,0)
 ;PSSHASH("Exception","PROFILE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText
"RTN","PSSHRVAL",9,0)
 ;PSSHASH("Exception","PatientIenMissing")=""
"RTN","PSSHRVAL",10,0)
 ;PSSHASH("Message")="Failed Validation"
"RTN","PSSHRVAL",11,0)
 ;PSSHASH("ReasonCode")="Reason Code Not Determined Yet"
"RTN","PSSHRVAL",12,0)
 ;
"RTN","PSSHRVAL",13,0)
 ;
"RTN","PSSHRVAL",14,0)
 ;^TMP GLOBAL DATA=GCNSEQNO^VUID^IEN^NAME^DOSE AMOUNT^DOSE UNIT^DOSE RATE^FREQ^DURATION^DURATION RATE^ROUTE^DOSE TYPE^not used^DOSE FORM FLAG
"RTN","PSSHRVAL",15,0)
 ;
"RTN","PSSHRVAL",16,0)
 ;Business rules:
"RTN","PSSHRVAL",17,0)
 ;1. If a prospective" node does not have a GCNSEQNO, it will be KILLED
"RTN","PSSHRVAL",18,0)
 ;2.If a "profile" node does not have a GCNSEQNO, it will be KILLED
"RTN","PSSHRVAL",19,0)
 ;3.If no prospective nodes exist, DRUGDRUG,THERAPY and DOSE will be killed off
"RTN","PSSHRVAL",20,0)
 ;4.Only checks will be performed for those check nodes that still exist (e.g. DRUGDRUG,
"RTN","PSSHRVAL",21,0)
 ;THERAPY and DOSE)
"RTN","PSSHRVAL",22,0)
 ;If any of the demographics are out of range (age<=0,BSA<0 (or null) or Weight<0 or null) dose node will be killed.
"RTN","PSSHRVAL",23,0)
 ;
"RTN","PSSHRVAL",24,0)
 QUIT
"RTN","PSSHRVAL",25,0)
 ;;
"RTN","PSSHRVAL",26,0)
DRIVER(PSSBASE) ;
"RTN","PSSHRVAL",27,0)
 ;@DRIVER
"RTN","PSSHRVAL",28,0)
 ;@DESC The driver for the validation of drug checks.
"RTN","PSSHRVAL",29,0)
 ;@PSSBASE The base
"RTN","PSSHRVAL",30,0)
 ;
"RTN","PSSHRVAL",31,0)
 NEW PSSHASH
"RTN","PSSHRVAL",32,0)
 ;
"RTN","PSSHRVAL",33,0)
 SET PSSHASH("Base")=PSSBASE
"RTN","PSSHRVAL",34,0)
 SET PSSHASH("ReasonCode")="" ;for version 0.5 version not yet defined.
"RTN","PSSHRVAL",35,0)
 ;
"RTN","PSSHRVAL",36,0)
 DO BUILD(.PSSHASH)
"RTN","PSSHRVAL",37,0)
 ;
"RTN","PSSHRVAL",38,0)
 DO WRITE^PSSHRVL1(.PSSHASH)
"RTN","PSSHRVAL",39,0)
 DO CHKNODES(.PSSHASH)
"RTN","PSSHRVAL",40,0)
 QUIT $$CONTINUE(.PSSHASH)
"RTN","PSSHRVAL",41,0)
 ;
"RTN","PSSHRVAL",42,0)
CHKNODES(PSSHASH) ;
"RTN","PSSHRVAL",43,0)
 ;@DESC Determines which nodes should be killed off or kept
"RTN","PSSHRVAL",44,0)
 ;
"RTN","PSSHRVAL",45,0)
 ;SET DoseValue,"Demo" PSSHASH array to kill off dose node
"RTN","PSSHRVAL",46,0)
 NEW ORDER
"RTN","PSSHRVAL",47,0)
 ;
"RTN","PSSHRVAL",48,0)
 SET ORDER=""
"RTN","PSSHRVAL",49,0)
 IF '$L($O(^TMP($JOB,PSSHASH("Base"),"IN","PROSPECTIVE",ORDER))) DO
"RTN","PSSHRVAL",50,0)
 .;If only send in profile with profile flag OK
"RTN","PSSHRVAL",51,0)
 .I $D(^TMP($JOB,PSSHASH("Base"),"IN","PROFILEVPROFILE"))&($L($O(^TMP($JOB,PSSHASH("Base"),"IN","PROFILE",ORDER)))) Q
"RTN","PSSHRVAL",52,0)
 .DO KILLALL^PSSHRVL1(PSSHASH("Base"))
"RTN","PSSHRVAL",53,0)
 IF $D(PSSHASH("DoseValue","DEMOAGE")) DO
"RTN","PSSHRVAL",54,0)
 .DO KILLCHEK^PSSHRVL1("DOSE",PSSHASH("Base"))
"RTN","PSSHRVAL",55,0)
 QUIT
"RTN","PSSHRVAL",56,0)
 ;
"RTN","PSSHRVAL",57,0)
CONTINUE(PSSHASH) ;
"RTN","PSSHRVAL",58,0)
 ;@DESC Determines whether or not to proceed with checks.
"RTN","PSSHRVAL",59,0)
 ;@RETURNS 1 if you may continue, 0 if not.
"RTN","PSSHRVAL",60,0)
 ;
"RTN","PSSHRVAL",61,0)
 NEW PSS
"RTN","PSSHRVAL",62,0)
 SET PSS("AnyChecksLeft")=0
"RTN","PSSHRVAL",63,0)
 DO:$DATA(^TMP($JOB,PSSHASH("Base"),"IN","DRUGDRUG"))
"RTN","PSSHRVAL",64,0)
  . SET PSS("AnyChecksLeft")=1
"RTN","PSSHRVAL",65,0)
  . QUIT 
"RTN","PSSHRVAL",66,0)
 DO:$DATA(^TMP($JOB,PSSHASH("Base"),"IN","THERAPY"))
"RTN","PSSHRVAL",67,0)
 . SET PSS("AnyChecksLeft")=1
"RTN","PSSHRVAL",68,0)
 . QUIT
"RTN","PSSHRVAL",69,0)
 DO:$DATA(^TMP($JOB,PSSHASH("Base"),"IN","DOSE"))
"RTN","PSSHRVAL",70,0)
 . SET PSS("AnyChecksLeft")=1
"RTN","PSSHRVAL",71,0)
 . QUIT
"RTN","PSSHRVAL",72,0)
 DO:$DATA(^TMP($JOB,PSSHASH("Base"),"IN","PING"))
"RTN","PSSHRVAL",73,0)
  . SET PSS("AnyChecksLeft")=1
"RTN","PSSHRVAL",74,0)
  . QUIT
"RTN","PSSHRVAL",75,0)
 QUIT PSS("AnyChecksLeft")
"RTN","PSSHRVAL",76,0)
 ;
"RTN","PSSHRVAL",77,0)
BUILD(PSSHASH) ;
"RTN","PSSHRVAL",78,0)
 ;@DESC Builds the internal hash used to parse for errors.
"RTN","PSSHRVAL",79,0)
 ;@PSSHASH The internal variables.
"RTN","PSSHRVAL",80,0)
 ;DO CHKINEXP(.PSSHASH)
"RTN","PSSHRVAL",81,0)
 DO CHKINEXP(.PSSHASH) ;CHK FOR "IN" EXCEPTIONS
"RTN","PSSHRVAL",82,0)
 DO DRUGPROS(.PSSHASH)
"RTN","PSSHRVAL",83,0)
 DO DRUGPROF(.PSSHASH)
"RTN","PSSHRVAL",84,0)
 QUIT
"RTN","PSSHRVAL",85,0)
 ;
"RTN","PSSHRVAL",86,0)
CHKINEXP(PSSHASH) ;
"RTN","PSSHRVAL",87,0)
 ;INPUT PSSHASH array
"RTN","PSSHRVAL",88,0)
 ;PSSHASH("Exception",TYPE,"DOSE",PSS("PharmOrderNum"),COUNTER)
"RTN","PSSHRVAL",89,0)
 ;PSSHASH("Exception",TYPE,PSS("PharmOrderNum"),COUNTER)
"RTN","PSSHRVAL",90,0)
 I $D(^TMP($JOB,PSSHASH("Base"),"IN","EXCEPTIONS","OI")) D OIEXP(.PSSHASH)
"RTN","PSSHRVAL",91,0)
 I $D(^TMP($JOB,PSSHASH("Base"),"IN","EXCEPTIONS","DOSE")) D DOSINEXP(.PSSHASH)
"RTN","PSSHRVAL",92,0)
 Q
"RTN","PSSHRVAL",93,0)
 ;
"RTN","PSSHRVAL",94,0)
DRUGPROS(PSSHASH) ;
"RTN","PSSHRVAL",95,0)
 ;@DESC Loops on the prospective drugs
"RTN","PSSHRVAL",96,0)
 ;@PSSHASH The internal variables.
"RTN","PSSHRVAL",97,0)
 ;
"RTN","PSSHRVAL",98,0)
 NEW PSS
"RTN","PSSHRVAL",99,0)
 SET PSS("ProspectiveOrProfile")="PROSPECTIVE"
"RTN","PSSHRVAL",100,0)
 SET PSS("PharmOrderNum")=""
"RTN","PSSHRVAL",101,0)
 ;
"RTN","PSSHRVAL",102,0)
 FOR  SET PSS("PharmOrderNum")=$ORDER(^TMP($JOB,PSSHASH("Base"),"IN","PROSPECTIVE",PSS("PharmOrderNum"))) QUIT:PSS("PharmOrderNum")=""  DO
"RTN","PSSHRVAL",103,0)
  . SET PSS("DrugValue")=^TMP($JOB,PSSHASH("Base"),"IN","PROSPECTIVE",PSS("PharmOrderNum"))
"RTN","PSSHRVAL",104,0)
  . DO CHECKGCN(.PSS,.PSSHASH)
"RTN","PSSHRVAL",105,0)
  . DO CHECKDOS(.PSS,.PSSHASH)
"RTN","PSSHRVAL",106,0)
  . QUIT
"RTN","PSSHRVAL",107,0)
 QUIT
"RTN","PSSHRVAL",108,0)
 ;
"RTN","PSSHRVAL",109,0)
DEMOGRAF(PSS,PSSHASH,PSDRUG) ;
"RTN","PSSHRVAL",110,0)
 ;@DESC Validates the demographic info
"RTN","PSSHRVAL",111,0)
 ;@PSSHASH The hash the demographic info is stored in
"RTN","PSSHRVAL",112,0)
 ;
"RTN","PSSHRVAL",113,0)
 ;Gcn
"RTN","PSSHRVAL",114,0)
 N AGE,WEIGHT,BSA,MESSAGE,ORDER
"RTN","PSSHRVAL",115,0)
 ;
"RTN","PSSHRVAL",116,0)
 SET PSS("T")=$PIECE(PSS("DoseValue"),"^",1)_"^"
"RTN","PSSHRVAL",117,0)
 ;Vuid
"RTN","PSSHRVAL",118,0)
 SET PSS("T")=PSS("T")_$PIECE(PSS("DoseValue"),"^",2)_"^"
"RTN","PSSHRVAL",119,0)
 ;Ien
"RTN","PSSHRVAL",120,0)
 SET PSS("T")=PSS("T")_$PIECE(PSS("DoseValue"),"^",3)_"^"
"RTN","PSSHRVAL",121,0)
 ;DrugName
"RTN","PSSHRVAL",122,0)
 SET PSS("T")=PSS("T")_$PIECE(PSS("DoseValue"),"^",4)_"^"
"RTN","PSSHRVAL",123,0)
 ;CprsOrderNumber
"RTN","PSSHRVAL",124,0)
 SET PSS("T")=PSS("T")_$PIECE(PSS("DoseValue"),"^",5)_"^"
"RTN","PSSHRVAL",125,0)
 ;Package
"RTN","PSSHRVAL",126,0)
 SET PSS("T")=PSS("T")_$PIECE(PSS("DoseValue"),"^",6)_"^"
"RTN","PSSHRVAL",127,0)
 ;Reason
"RTN","PSSHRVAL",128,0)
 ;SET PSS("T")=PSS("T")_PSSHASH("Message")_"^"
"RTN","PSSHRVAL",129,0)
  I $D(^TMP($JOB,PSSHASH("Base"),"IN","DOSE")) D
"RTN","PSSHRVAL",130,0)
  .S AGE=+$G(^TMP($J,PSSHASH("Base"),"IN","DOSE","AGE"))
"RTN","PSSHRVAL",131,0)
  .S WEIGHT=+$G(^TMP($J,PSSHASH("Base"),"IN","DOSE","WT"))
"RTN","PSSHRVAL",132,0)
  .S BSA=+$G(^TMP($J,PSSHASH("Base"),"IN","DOSE","BSA"))
"RTN","PSSHRVAL",133,0)
  . ;Validate age in days exists or BSA or Weight are less than zero.
"RTN","PSSHRVAL",134,0)
  .S MESSAGE=$$DEMOCHK^PSSHRVL1(AGE,BSA,WEIGHT,PSDRUG) Q:'$L(MESSAGE)  ;IF NO ISSUE DON'T GO ANY FURTHER
"RTN","PSSHRVAL",135,0)
  .D SETDSEXP(.PSS,.PSSHASH,MESSAGE,0,1) S PSSNOAGE=1
"RTN","PSSHRVAL",136,0)
  .;This is already looping through all dose nodes from DRUGPROS
"RTN","PSSHRVAL",137,0)
  .;IF BAD DEMOGRAPHIC Set array node below and have CHKNODES tag kill Dose node
"RTN","PSSHRVAL",138,0)
  .S PSSHASH("DoseValue","DEMOAGE")=""
"RTN","PSSHRVAL",139,0)
 KILL PSS("T")
"RTN","PSSHRVAL",140,0)
 QUIT 
"RTN","PSSHRVAL",141,0)
 ;
"RTN","PSSHRVAL",142,0)
CHECKDOS(PSS,PSSHASH) ; 
"RTN","PSSHRVAL",143,0)
 ;@DESC Check if the dose exists.
"RTN","PSSHRVAL",144,0)
 ;@PSS The temp hash
"RTN","PSSHRVAL",145,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVAL",146,0)
 N DOSEVALUE,DOSE,DOSEUNIT,DOSERATE,FREQ,DURATION,DURRATE,ROUTE,DOSETYPE,DRUGNM,MESSAGE,PSSNOAGE
"RTN","PSSHRVAL",147,0)
 DO:$DATA(^TMP($JOB,PSSHASH("Base"),"IN","DOSE",PSS("PharmOrderNum")))
"RTN","PSSHRVAL",148,0)
  .;if prospective killed off then GCN bad-no need to go any further
"RTN","PSSHRVAL",149,0)
  .I '$DATA(^TMP($JOB,PSSHASH("Base"),"IN","PROSPECTIVE",PSS("PharmOrderNum"))) Q
"RTN","PSSHRVAL",150,0)
  . SET PSS("DoseValue")=^TMP($JOB,PSSHASH("Base"),"IN","DOSE",PSS("PharmOrderNum"))
"RTN","PSSHRVAL",151,0)
  . SET PSS("Package")=""
"RTN","PSSHRVAL",152,0)
  . SET PSS("ReasonSource")=$$GETUCI^PSSHRVL1()
"RTN","PSSHRVAL",153,0)
  . ;
"RTN","PSSHRVAL",154,0)
  . ;I '$$DEMOGRAF(.PSS,.PSSHASH) Q  ;Check age and other parameters
"RTN","PSSHRVAL",155,0)
  . ;If this is a "specific" call
"RTN","PSSHRVAL",156,0)
  . ;SET PSS("Package")="N/A"
"RTN","PSSHRVAL",157,0)
  . ;SET PSS("ReasonSource")=$$GETUCI^PSSHRVL1()
"RTN","PSSHRVAL",158,0)
  . ;SET PSS("Message")=PSSHASH("Message")
"RTN","PSSHRVAL",159,0)
  . S DOSEVALUE=PSS("DoseValue")
"RTN","PSSHRVAL",160,0)
  . S DRUGNM=$P(DOSEVALUE,U,4)
"RTN","PSSHRVAL",161,0)
  . S DOSE=$P(DOSEVALUE,U,5),DOSEUNIT=$P(DOSEVALUE,U,6),DOSERATE=$P(DOSEVALUE,U,7)
"RTN","PSSHRVAL",162,0)
  . S FREQ=$P(DOSEVALUE,U,8),DURATION=$P(DOSEVALUE,U,9)
"RTN","PSSHRVAL",163,0)
  . S DURRATE=$P(DOSEVALUE,U,10),ROUTE=$P(DOSEVALUE,U,11),DOSETYPE=$P(DOSEVALUE,U,12)
"RTN","PSSHRVAL",164,0)
  . ;Check piece 12--if not set correctly go no further
"RTN","PSSHRVAL",165,0)
  . S PSSNOAGE=0 D DEMOGRAF(.PSS,.PSSHASH,DRUGNM)  Q:PSSNOAGE  ;Check age and other parameters
"RTN","PSSHRVAL",166,0)
  . S MESSAGE=$$CHKDSTYP^PSSHRVL1(DOSETYPE,DRUGNM) I $L(MESSAGE) D
"RTN","PSSHRVAL",167,0)
  . . D SETDSEXP(.PSS,.PSSHASH,MESSAGE,12,2)
"RTN","PSSHRVAL",168,0)
  . ;set defaults for all possible errors
"RTN","PSSHRVAL",169,0)
  . ;check piece 5 dose
"RTN","PSSHRVAL",170,0)
  . S MESSAGE=$$CHKDOSE^PSSHRVL1(DOSE,DRUGNM) I $L(MESSAGE) D
"RTN","PSSHRVAL",171,0)
  . .D SETDSEXP(.PSS,.PSSHASH,MESSAGE,5)
"RTN","PSSHRVAL",172,0)
  . ;check piece 6-dose units
"RTN","PSSHRVAL",173,0)
  . S MESSAGE=$$CHKUNIT^PSSHRVL1(DOSEUNIT,DRUGNM) I $L(MESSAGE) D
"RTN","PSSHRVAL",174,0)
  . .D SETDSEXP(.PSS,.PSSHASH,MESSAGE,6)
"RTN","PSSHRVAL",175,0)
  . ;Check piece 7--dose rate
"RTN","PSSHRVAL",176,0)
  . S MESSAGE=$$CHKRATE^PSSHRVL1(DOSERATE,"DOSE",DRUGNM) I $L(MESSAGE) D
"RTN","PSSHRVAL",177,0)
  . . D SETDSEXP(.PSS,.PSSHASH,MESSAGE,7)
"RTN","PSSHRVAL",178,0)
  . ;Check Piece 8--frequency
"RTN","PSSHRVAL",179,0)
  . S MESSAGE=$$CHKFREQ^PSSHRVL1(FREQ) I $L(MESSAGE) D
"RTN","PSSHRVAL",180,0)
  . .D SETDSEXP(.PSS,.PSSHASH,MESSAGE,8)
"RTN","PSSHRVAL",181,0)
  . ;Check piece 9-duration
"RTN","PSSHRVAL",182,0)
  . S MESSAGE=$$CHKDRATN^PSSHRVL1(DURATION,DRUGNM) I $L(MESSAGE) D
"RTN","PSSHRVAL",183,0)
  . .D SETDSEXP(.PSS,.PSSHASH,MESSAGE,9)
"RTN","PSSHRVAL",184,0)
  . ;Check piece 10-DURATION RATE
"RTN","PSSHRVAL",185,0)
  . S MESSAGE=$$CHKRATE^PSSHRVL1(DURRATE,"DURATION",DRUGNM,DURATION) I $L(MESSAGE) D
"RTN","PSSHRVAL",186,0)
  . .D SETDSEXP(.PSS,.PSSHASH,MESSAGE,10)
"RTN","PSSHRVAL",187,0)
  . ;PIECE 11-ROUTE
"RTN","PSSHRVAL",188,0)
  . S MESSAGE=$$MEDRTE^PSSHRVL1(ROUTE,DRUGNM) I $L(MESSAGE) D
"RTN","PSSHRVAL",189,0)
  . .D SETDSEXP(.PSS,.PSSHASH,MESSAGE,11,2)
"RTN","PSSHRVAL",190,0)
  . QUIT   ;Checking if dose exists.
"RTN","PSSHRVAL",191,0)
 QUIT
"RTN","PSSHRVAL",192,0)
 ;
"RTN","PSSHRVAL",193,0)
SETDSEXP(PSS,PSSHASH,MESSAGE,DOSPIECE,PSSDBIN) ;
"RTN","PSSHRVAL",194,0)
 ;SET DOSE EXCEPTION
"RTN","PSSHRVAL",195,0)
 ;PSS-ARRAY OF MED PROFILE INFORMATION(BY REF)
"RTN","PSSHRVAL",196,0)
 ;PSSHASH-HOLDS DATA EXCEPTION (BY REF)
"RTN","PSSHRVAL",197,0)
 ;MESSAGE-REASON AND ERROR REASON
"RTN","PSSHRVAL",198,0)
 ;DOSEPIECE-THE OFFENDING PIECE OF DATA FROM DOSING INFORMATON-NOT SENT IF FROM
"RTN","PSSHRVAL",199,0)
 ;DEMOGRAF CALL.
"RTN","PSSHRVAL",200,0)
 ;
"RTN","PSSHRVAL",201,0)
 SET PSS("Counter")=$$NEXTDOS(.PSS,.PSSHASH)
"RTN","PSSHRVAL",202,0)
 SET PSS("ReasonCode")=PSSHASH("ReasonCode")
"RTN","PSSHRVAL",203,0)
 SET PSS("Message")=$P(MESSAGE,U)
"RTN","PSSHRVAL",204,0)
 SET PSS("ReasonText")=$P(MESSAGE,U,2)
"RTN","PSSHRVAL",205,0)
 SET PSS("CprsOrderNumber")=""
"RTN","PSSHRVAL",206,0)
 SET PSSHASH("Exception",PSS("ProspectiveOrProfile"),"DOSE",PSS("PharmOrderNum"),PSS("Counter"))=$$DOSPIECE(.PSS)
"RTN","PSSHRVAL",207,0)
 I $G(DOSPIECE) SET PSSHASH("DoseValue",DOSPIECE)=""
"RTN","PSSHRVAL",208,0)
 D KILLNODE^PSSHRVL1(PSSHASH("Base"),"DOSE",PSS("PharmOrderNum"))
"RTN","PSSHRVAL",209,0)
 D KILLNODE^PSSHRVL1(PSSHASH("Base"),"PROSPECTIVE",PSS("PharmOrderNum"))
"RTN","PSSHRVAL",210,0)
 S $P(PSSDBCAR(PSS("PharmOrderNum")),"^",13)=1 S:$G(PSSDBIN)=1 $P(PSSDBCAR(PSS("PharmOrderNum")),"^",19)=1 S:$G(PSSDBIN)=2 $P(PSSDBCAR(PSS("PharmOrderNum")),"^",23)=1
"RTN","PSSHRVAL",211,0)
 QUIT
"RTN","PSSHRVAL",212,0)
 ;
"RTN","PSSHRVAL",213,0)
DOSINEXP(PSSHASH) ;
"RTN","PSSHRVAL",214,0)
 N ORDERNUM,MESSAGE,REASON,DRUGNM,ERRNUM,TMPNODE,PSS
"RTN","PSSHRVAL",215,0)
 S ORDERNUM=""
"RTN","PSSHRVAL",216,0)
 F  S ORDERNUM=$O(^TMP($JOB,PSSHASH("Base"),"IN","EXCEPTIONS","DOSE",ORDERNUM)) Q:'$L(ORDERNUM)  D
"RTN","PSSHRVAL",217,0)
 .S TMPNODE=$G(^TMP($JOB,PSSHASH("Base"),"IN","EXCEPTIONS","DOSE",ORDERNUM)) Q:'$L(TMPNODE)
"RTN","PSSHRVAL",218,0)
 .S ERRNUM=+TMPNODE  ;ERROR NUMBER
"RTN","PSSHRVAL",219,0)
 .S DRUGNM=$P(TMPNODE,U,2)
"RTN","PSSHRVAL",220,0)
 .S MESSAGE=$$DOSEMSG^PSSHRVL1(DRUGNM)
"RTN","PSSHRVAL",221,0)
 .S REASON=$$INRSON^PSSHRVL1(ERRNUM)
"RTN","PSSHRVAL",222,0)
 .S MESSAGE=MESSAGE_U_REASON
"RTN","PSSHRVAL",223,0)
 .S PSS("PharmOrderNum")=ORDERNUM
"RTN","PSSHRVAL",224,0)
 .S PSS("ProspectiveOrProfile")="PROSPECTIVE"
"RTN","PSSHRVAL",225,0)
 .S PSS("Package")=""
"RTN","PSSHRVAL",226,0)
 .S PSS("DoseValue")=""
"RTN","PSSHRVAL",227,0)
 .S PSS("ReasonSource")=$$GETUCI^PSSHRVL1()
"RTN","PSSHRVAL",228,0)
 .D SETDSEXP(.PSS,.PSSHASH,MESSAGE)
"RTN","PSSHRVAL",229,0)
 Q
"RTN","PSSHRVAL",230,0)
 ;
"RTN","PSSHRVAL",231,0)
OIEXP(PSSHASH) ;
"RTN","PSSHRVAL",232,0)
 N ORDITEM,ERRNUM,MESSAGE,REASON,PSS,ORDERNUM,TMPNODE
"RTN","PSSHRVAL",233,0)
 S ORDITEM=""
"RTN","PSSHRVAL",234,0)
 F  S ORDITEM=$O(^TMP($JOB,PSSHASH("Base"),"IN","EXCEPTIONS","OI",ORDITEM)) Q:'$L(ORDITEM)  D
"RTN","PSSHRVAL",235,0)
 .S TMPNODE=$G(^TMP($JOB,PSSHASH("Base"),"IN","EXCEPTIONS","OI",ORDITEM)) Q:'$L(TMPNODE)
"RTN","PSSHRVAL",236,0)
 .S ERRNUM=+TMPNODE  ;ERROR NUMBER
"RTN","PSSHRVAL",237,0)
 .S ORDERNUM=$P(TMPNODE,U,2)
"RTN","PSSHRVAL",238,0)
 .S MESSAGE=$$OIMSG^PSSHRVL1(ORDITEM,ORDERNUM)
"RTN","PSSHRVAL",239,0)
 .S REASON="" I $E(PSSHASH("Base"),1,2)="PS" S REASON=$$INRSON^PSSHRVL1(ERRNUM,ORDERNUM)
"RTN","PSSHRVAL",240,0)
 .S $P(PSS("I"),U,7)=MESSAGE
"RTN","PSSHRVAL",241,0)
 .S $P(PSS("I"),U,10)=REASON
"RTN","PSSHRVAL",242,0)
 .S PSS("PharmOrderNum")=ORDERNUM
"RTN","PSSHRVAL",243,0)
 .S PSS("ProspectiveOrProfile")=$S($$ISPROF^PSSHRCOM(ORDERNUM):"PROFILE",1:"PROSPECTIVE")
"RTN","PSSHRVAL",244,0)
 .S PSS("Package")=""
"RTN","PSSHRVAL",245,0)
 .S PSS("DoseValue")=""
"RTN","PSSHRVAL",246,0)
 .S PSS("ReasonSource")=$$GETUCI^PSSHRVL1()
"RTN","PSSHRVAL",247,0)
 .S PSS("Counter")=$$NEXTGCN(.PSS,.PSSHASH)
"RTN","PSSHRVAL",248,0)
 .D SETEXCP(.PSS,.PSSHASH)
"RTN","PSSHRVAL",249,0)
 .D HDOSE(ORDERNUM) D KILLNODE^PSSHRVL1(PSSHASH("Base"),PSS("ProspectiveOrProfile"),ORDERNUM)
"RTN","PSSHRVAL",250,0)
 Q
"RTN","PSSHRVAL",251,0)
 ;
"RTN","PSSHRVAL",252,0)
NEXTDOS(PSS,PSSHASH) ;
"RTN","PSSHRVAL",253,0)
 ;@DESC Gets the next dose
"RTN","PSSHRVAL",254,0)
 ;@PSS The temp hash
"RTN","PSSHRVAL",255,0)
 ;@PSSHASH The internal hash ;
"RTN","PSSHRVAL",256,0)
 ;@NOTE PSSHASH looks like this: 
"RTN","PSSHRVAL",257,0)
 ; PSSHASH("Exception","PROSPECTIVE","DOSE",PharmacyOrderNum,Counter
"RTN","PSSHRVAL",258,0)
 ; 
"RTN","PSSHRVAL",259,0)
 N PSNEXT
"RTN","PSSHRVAL",260,0)
 S PSNEXT=":"
"RTN","PSSHRVAL",261,0)
 S PSNEXT=$ORDER(PSSHASH("Exception","PROSPECTIVE","DOSE",PSS("PharmOrderNum"),PSNEXT),-1)
"RTN","PSSHRVAL",262,0)
 Q PSNEXT+1
"RTN","PSSHRVAL",263,0)
 ;
"RTN","PSSHRVAL",264,0)
NEXTGCN(PSS,PSSHASH) ;
"RTN","PSSHRVAL",265,0)
 ;@DESC Gets the next Gcn
"RTN","PSSHRVAL",266,0)
 ;@PSS The temp hash
"RTN","PSSHRVAL",267,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVAL",268,0)
 ;
"RTN","PSSHRVAL",269,0)
 N PSNEXT
"RTN","PSSHRVAL",270,0)
 S PSNEXT=":"
"RTN","PSSHRVAL",271,0)
 S PSNEXT=$ORDER(PSSHASH("Exception",PSS("ProspectiveOrProfile"),PSS("PharmOrderNum"),PSNEXT),-1)
"RTN","PSSHRVAL",272,0)
 Q PSNEXT+1
"RTN","PSSHRVAL",273,0)
 ;
"RTN","PSSHRVAL",274,0)
DOSPIECE(PSS) ;
"RTN","PSSHRVAL",275,0)
 ;@DESC Appends all pre-defined pieces to a temp var
"RTN","PSSHRVAL",276,0)
 ;@PSS The temp hash
"RTN","PSSHRVAL",277,0)
 ;@RETURNS The appended temp var.
"RTN","PSSHRVAL",278,0)
 ;
"RTN","PSSHRVAL",279,0)
 SET PSS("I")=$PIECE(PSS("DoseValue"),"^",1)_"^" ;GCN
"RTN","PSSHRVAL",280,0)
 SET PSS("I")=PSS("I")_$PIECE(PSS("DoseValue"),"^",2)_"^" ;Vuid
"RTN","PSSHRVAL",281,0)
 SET PSS("I")=PSS("I")_$PIECE(PSS("DoseValue"),"^",3)_"^" ;Ien
"RTN","PSSHRVAL",282,0)
 SET PSS("I")=PSS("I")_$PIECE(PSS("DoseValue"),"^",4)_"^" ;DrugName
"RTN","PSSHRVAL",283,0)
 SET PSS("I")=PSS("I")_PSS("CprsOrderNumber")_"^" ;CprsOrderNumber
"RTN","PSSHRVAL",284,0)
 SET PSS("I")=PSS("I")_PSS("Package")_"^" ;Package
"RTN","PSSHRVAL",285,0)
 SET PSS("I")=PSS("I")_PSS("Message")_"^"
"RTN","PSSHRVAL",286,0)
 SET PSS("I")=PSS("I")_PSS("ReasonCode")_"^"
"RTN","PSSHRVAL",287,0)
 SET PSS("I")=PSS("I")_PSS("ReasonSource")_"^"
"RTN","PSSHRVAL",288,0)
 SET PSS("I")=PSS("I")_PSS("ReasonText")
"RTN","PSSHRVAL",289,0)
 QUIT PSS("I")
"RTN","PSSHRVAL",290,0)
 ;
"RTN","PSSHRVAL",291,0)
CHECKGCN(PSS,PSSHASH) ;
"RTN","PSSHRVAL",292,0)
 ;@DESC Checks the GCN for a Drug
"RTN","PSSHRVAL",293,0)
 ;@PSS A temp array
"RTN","PSSHRVAL",294,0)
 ;@PSSHASH The input array
"RTN","PSSHRVAL",295,0)
 ;@ASSERT PSS("DrugValue") exists.
"RTN","PSSHRVAL",296,0)
 ;
"RTN","PSSHRVAL",297,0)
 N DRUGNM,DRUGIEN,MESSAGE,REASON,BADGCN
"RTN","PSSHRVAL",298,0)
 SET PSS("Counter")="0"
"RTN","PSSHRVAL",299,0)
 DO:'$PIECE(PSS("DrugValue"),"^",1)
"RTN","PSSHRVAL",300,0)
  . SET DRUGIEN=$P(PSS("DrugValue"),"^",3)
"RTN","PSSHRVAL",301,0)
  . SET DRUGNM=$P(PSS("DrugValue"),"^",4)
"RTN","PSSHRVAL",302,0)
  . S BADGCN=0
"RTN","PSSHRVAL",303,0)
  . S:$PIECE(PSS("DrugValue"),"^",1)'?1.N BADGCN=-1
"RTN","PSSHRVAL",304,0)
  . SET MESSAGE=$$GCNREASN^PSSHRVL1(DRUGIEN,DRUGNM,PSS("PharmOrderNum"),BADGCN)
"RTN","PSSHRVAL",305,0)
  . I $L(MESSAGE) SET REASON=$P(MESSAGE,U,2,3),MESSAGE=$P(MESSAGE,U)
"RTN","PSSHRVAL",306,0)
  . SET PSS("Counter")=$$NEXTGCN(.PSS,.PSSHASH)
"RTN","PSSHRVAL",307,0)
  . SET PSS("I")="^" ;Gcn
"RTN","PSSHRVAL",308,0)
  . SET PSS("I")=PSS("I")_$PIECE(PSS("DrugValue"),"^",2)_"^" ;Vuid
"RTN","PSSHRVAL",309,0)
  . SET PSS("I")=PSS("I")_$PIECE(PSS("DrugValue"),"^",3)_"^" ;Ien
"RTN","PSSHRVAL",310,0)
  . SET PSS("I")=PSS("I")_$PIECE(PSS("DrugValue"),"^",4)_"^" ;DrugName
"RTN","PSSHRVAL",311,0)
  . SET PSS("I")=PSS("I")_$PIECE(PSS("DrugValue"),"^",5)_"^" ;CprsOrderNumber
"RTN","PSSHRVAL",312,0)
  . SET PSS("I")=PSS("I")_$PIECE(PSS("DrugValue"),"^",6)_"^" ;Package
"RTN","PSSHRVAL",313,0)
  . SET PSS("I")=PSS("I")_MESSAGE_"^"
"RTN","PSSHRVAL",314,0)
  . ;Reason code is null for 0.5
"RTN","PSSHRVAL",315,0)
  . SET PSS("I")=PSS("I")_PSSHASH("ReasonCode")_U
"RTN","PSSHRVAL",316,0)
  . ;Set reason text
"RTN","PSSHRVAL",317,0)
  . SET PSS("I")=PSS("I")_$$GETUCI^PSSHRVL1()_U
"RTN","PSSHRVAL",318,0)
  . SET PSS("I")=PSS("I")_REASON
"RTN","PSSHRVAL",319,0)
  . ;
"RTN","PSSHRVAL",320,0)
  . D SETEXCP(.PSS,.PSSHASH)
"RTN","PSSHRVAL",321,0)
  . D HDOSE(PSS("PharmOrderNum")) D KILLNODE^PSSHRVL1(PSSHASH("Base"),PSS("ProspectiveOrProfile"),PSS("PharmOrderNum"))
"RTN","PSSHRVAL",322,0)
 QUIT
"RTN","PSSHRVAL",323,0)
 ;
"RTN","PSSHRVAL",324,0)
SETEXCP(PSS,PSSHASH) ;
"RTN","PSSHRVAL",325,0)
 SET PSSHASH("Exception",PSS("ProspectiveOrProfile"),PSS("PharmOrderNum"),PSS("Counter"))=PSS("I")
"RTN","PSSHRVAL",326,0)
 Q
"RTN","PSSHRVAL",327,0)
 ;
"RTN","PSSHRVAL",328,0)
DRUGPROF(PSSHASH) ;
"RTN","PSSHRVAL",329,0)
 ;@DESC Checks the profile drugs.
"RTN","PSSHRVAL",330,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVAL",331,0)
 ;
"RTN","PSSHRVAL",332,0)
 NEW PSS
"RTN","PSSHRVAL",333,0)
 SET PSS("ProspectiveOrProfile")="PROFILE"
"RTN","PSSHRVAL",334,0)
 SET PSS("PharmOrderNum")=""
"RTN","PSSHRVAL",335,0)
 FOR  SET PSS("PharmOrderNum")=$ORDER(^TMP($JOB,PSSHASH("Base"),"IN",PSS("ProspectiveOrProfile"),PSS("PharmOrderNum"))) QUIT:PSS("PharmOrderNum")=""  DO
"RTN","PSSHRVAL",336,0)
  . SET PSS("DrugValue")=^TMP($JOB,PSSHASH("Base"),"IN",PSS("ProspectiveOrProfile"),PSS("PharmOrderNum"))
"RTN","PSSHRVAL",337,0)
  . DO CHECKGCN(.PSS,.PSSHASH)
"RTN","PSSHRVAL",338,0)
  . QUIT
"RTN","PSSHRVAL",339,0)
 QUIT
"RTN","PSSHRVAL",340,0)
 ;
"RTN","PSSHRVAL",341,0)
 ;
"RTN","PSSHRVAL",342,0)
HDOSE(PSSDLDOS) ; If it's a Dose Call
"RTN","PSSHRVAL",343,0)
 I '$D(^TMP($J,PSSHASH("Base"),"IN","DOSE",PSSDLDOS)) Q
"RTN","PSSHRVAL",344,0)
 D KILLNODE^PSSHRVL1(PSSHASH("Base"),"DOSE",PSSDLDOS)
"RTN","PSSHRVAL",345,0)
 S $P(PSSDBCAR(PSSDLDOS),"^",13)=1
"RTN","PSSHRVAL",346,0)
 Q
"RTN","PSSHRVL1")
0^17^B221546631
"RTN","PSSHRVL1",1,0)
PSSHRVL1 ;WOIFO/Alex Vasquez, Timothy Sabat, Steve Gordon - Continuation Data Validation routine for drug checks ;01/15/07
"RTN","PSSHRVL1",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**136,160**;9/30/97;Build 76
"RTN","PSSHRVL1",3,0)
 ;
"RTN","PSSHRVL1",4,0)
 ; Reference to ^PSNDF(50.68 GCNSEQNO field is supported by IA #3735 
"RTN","PSSHRVL1",5,0)
 ; 
"RTN","PSSHRVL1",6,0)
NEXTEX(PSS,PSSHASH) ;
"RTN","PSSHRVL1",7,0)
 ;@DESC Gets the next exception
"RTN","PSSHRVL1",8,0)
 ;@PSS The temp hash
"RTN","PSSHRVL1",9,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVL1",10,0)
 ;
"RTN","PSSHRVL1",11,0)
 N PSNEXT
"RTN","PSSHRVL1",12,0)
 S PSNEXT=":"
"RTN","PSSHRVL1",13,0)
 S PSNEXT=$ORDER(^TMP($JOB,PSSHASH("Base"),"OUT","EXCEPTIONS",PSS("PharmOrderNo"),PSNEXT),-1)
"RTN","PSSHRVL1",14,0)
 Q PSNEXT+1
"RTN","PSSHRVL1",15,0)
 ;;
"RTN","PSSHRVL1",16,0)
NEXTEXD(PSS,PSSHASH) ;
"RTN","PSSHRVL1",17,0)
 ;@DESC Gets the next dose exception
"RTN","PSSHRVL1",18,0)
 ;@PSS The temp hash
"RTN","PSSHRVL1",19,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVL1",20,0)
 N PSNEXT
"RTN","PSSHRVL1",21,0)
 S PSNEXT=":"
"RTN","PSSHRVL1",22,0)
 S PSNEXT=$ORDER(^TMP($JOB,PSSHASH("Base"),"OUT","EXCEPTIONS","DOSE",PSS("PharmOrderNo"),PSNEXT),-1)
"RTN","PSSHRVL1",23,0)
 Q PSNEXT+1
"RTN","PSSHRVL1",24,0)
 ;;
"RTN","PSSHRVL1",25,0)
WRITE(PSSHASH) ;
"RTN","PSSHRVL1",26,0)
 ;@Writes a response, based on the list of exceptions stored in Hash
"RTN","PSSHRVL1",27,0)
 ;@NOTE The internal hash looks like this:
"RTN","PSSHRVL1",28,0)
 ;PSSHASH("Exception","PROSPECTIVE","DOSE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText,NoWrite
"RTN","PSSHRVL1",29,0)
 ;PSSHASH("Exception","PROSPECTIVE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText,NoWrite
"RTN","PSSHRVL1",30,0)
 ;PSSHASH("Exception","PROFILE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText,NoWrite
"RTN","PSSHRVL1",31,0)
 ;PSSHASH("Exception","PatientIenMissing")=""
"RTN","PSSHRVL1",32,0)
 ;PSSHASH("Reason")="Failed Validation"
"RTN","PSSHRVL1",33,0)
 ;
"RTN","PSSHRVL1",34,0)
 ;
"RTN","PSSHRVL1",35,0)
 NEW PSS
"RTN","PSSHRVL1",36,0)
 SET PSS("PharmOrderNo")=""
"RTN","PSSHRVL1",37,0)
 SET PSS("I")=""
"RTN","PSSHRVL1",38,0)
 FOR  SET PSS("PharmOrderNo")=$ORDER(PSSHASH("Exception","PROFILE",PSS("PharmOrderNo"))) QUIT:PSS("PharmOrderNo")=""  DO 
"RTN","PSSHRVL1",39,0)
  . FOR  SET PSS("I")=$ORDER(PSSHASH("Exception","PROFILE",PSS("PharmOrderNo"),PSS("I"))) QUIT:PSS("I")=""  DO
"RTN","PSSHRVL1",40,0)
  . . DO WPROFILE(.PSSHASH,.PSS)
"RTN","PSSHRVL1",41,0)
  . . QUIT
"RTN","PSSHRVL1",42,0)
  . QUIT
"RTN","PSSHRVL1",43,0)
 ;
"RTN","PSSHRVL1",44,0)
 SET PSS("PharmOrderNo")=""
"RTN","PSSHRVL1",45,0)
 SET PSS("I")=""
"RTN","PSSHRVL1",46,0)
 FOR  SET PSS("PharmOrderNo")=$ORDER(PSSHASH("Exception","PROSPECTIVE","DOSE",PSS("PharmOrderNo"))) QUIT:PSS("PharmOrderNo")=""  DO 
"RTN","PSSHRVL1",47,0)
  . FOR  SET PSS("I")=$ORDER(PSSHASH("Exception","PROSPECTIVE","DOSE",PSS("PharmOrderNo"),PSS("I"))) QUIT:PSS("I")=""  DO
"RTN","PSSHRVL1",48,0)
  . . DO WDOSE(.PSSHASH,.PSS)
"RTN","PSSHRVL1",49,0)
  . . ;kill off node to prevent next loop from setting PSS("PharmOrderNo") to "DOSE"
"RTN","PSSHRVL1",50,0)
  . . K PSSHASH("Exception","PROSPECTIVE","DOSE",PSS("PharmOrderNo"),PSS("I"))
"RTN","PSSHRVL1",51,0)
  . QUIT
"RTN","PSSHRVL1",52,0)
 ;
"RTN","PSSHRVL1",53,0)
 SET PSS("PharmOrderNo")=""
"RTN","PSSHRVL1",54,0)
 SET PSS("I")=""
"RTN","PSSHRVL1",55,0)
 FOR  SET PSS("PharmOrderNo")=$ORDER(PSSHASH("Exception","PROSPECTIVE",PSS("PharmOrderNo"))) QUIT:PSS("PharmOrderNo")=""  DO 
"RTN","PSSHRVL1",56,0)
  . FOR  SET PSS("I")=$ORDER(PSSHASH("Exception","PROSPECTIVE",PSS("PharmOrderNo"),PSS("I"))) QUIT:PSS("I")=""  DO
"RTN","PSSHRVL1",57,0)
  . . DO WPROSPEC(.PSSHASH,.PSS)
"RTN","PSSHRVL1",58,0)
  . QUIT
"RTN","PSSHRVL1",59,0)
 ;
"RTN","PSSHRVL1",60,0)
 QUIT
"RTN","PSSHRVL1",61,0)
 ;;
"RTN","PSSHRVL1",62,0)
WDOSE(PSSHASH,PSS) ;
"RTN","PSSHRVL1",63,0)
 ;@DESC Writes the dose exceptions out.
"RTN","PSSHRVL1",64,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVL1",65,0)
 ;@PSS The temp hash
"RTN","PSSHRVL1",66,0)
 ;@NOTE The exception hash looks like this.
"RTN","PSSHRVL1",67,0)
 ;PSSHASH("Exception","PROSPECTIVE","DOSE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText
"RTN","PSSHRVL1",68,0)
 ;
"RTN","PSSHRVL1",69,0)
 NEW TYPE,I
"RTN","PSSHRVL1",70,0)
 SET PSS("DoseValue")=$G(^TMP($JOB,PSSHASH("Base"),"IN","DOSE",PSS("PharmOrderNo")))
"RTN","PSSHRVL1",71,0)
 ;Set the next exception
"RTN","PSSHRVL1",72,0)
 D:$P(PSSHASH("Exception","PROSPECTIVE","DOSE",PSS("PharmOrderNo"),PSS("I")),U,11)'=1
"RTN","PSSHRVL1",73,0)
 .S ^TMP($JOB,PSSHASH("Base"),"OUT","EXCEPTIONS","DOSE",PSS("PharmOrderNo"),$$NEXTEXD(.PSS,.PSSHASH))=PSSHASH("Exception","PROSPECTIVE","DOSE",PSS("PharmOrderNo"),PSS("I"))
"RTN","PSSHRVL1",74,0)
 QUIT
"RTN","PSSHRVL1",75,0)
 ;;
"RTN","PSSHRVL1",76,0)
WPROFILE(PSSHASH,PSS) ;
"RTN","PSSHRVL1",77,0)
 ;@DESC Writes the profile drug exceptions out.
"RTN","PSSHRVL1",78,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVL1",79,0)
 ;@PSS The temp hash
"RTN","PSSHRVL1",80,0)
 ;Kill the corresponding profile drug
"RTN","PSSHRVL1",81,0)
 ;KILL ^TMP($JOB,PSSHASH("Base"),"IN","PROFILE",PSS("PharmOrderNo"))
"RTN","PSSHRVL1",82,0)
 ;Set the exception in the global
"RTN","PSSHRVL1",83,0)
 S:$P(PSSHASH("Exception","PROFILE",PSS("PharmOrderNo"),PSS("I")),U,11)'=1 ^TMP($JOB,PSSHASH("Base"),"OUT","EXCEPTIONS",PSS("PharmOrderNo"),$$NEXTEX(.PSS,.PSSHASH))=PSSHASH("Exception","PROFILE",PSS("PharmOrderNo"),PSS("I"))
"RTN","PSSHRVL1",84,0)
 ;If no profile drugs left and the proVpro flag exists, delete it.
"RTN","PSSHRVL1",85,0)
 DO:'$DATA(^TMP($JOB,PSSHASH("Base"),"IN","PROFILE"))
"RTN","PSSHRVL1",86,0)
  . ;KILL ^TMP($JOB,PSSHASH("Base"),"IN","PROFILEVPROFILE")
"RTN","PSSHRVL1",87,0)
  .  D KILLCHEK(PSSHASH("Base"),"PROFILEVPROFILE")
"RTN","PSSHRVL1",88,0)
  . QUIT
"RTN","PSSHRVL1",89,0)
 QUIT
"RTN","PSSHRVL1",90,0)
 ;;
"RTN","PSSHRVL1",91,0)
WPROSPEC(PSSHASH,PSS) ;
"RTN","PSSHRVL1",92,0)
 ;@DESC Writes the prospective drug exceptions out.
"RTN","PSSHRVL1",93,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVL1",94,0)
 ;@PSS The temp hash
"RTN","PSSHRVL1",95,0)
 ;@NOTE Exception Hash Looks Like
"RTN","PSSHRVL1",96,0)
 ;PSSHASH("Exception","PROSPECTIVE","DOSE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText
"RTN","PSSHRVL1",97,0)
 ;PSSHASH("Exception","PROSPECTIVE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText
"RTN","PSSHRVL1",98,0)
 ;
"RTN","PSSHRVL1",99,0)
 ;Set the exception data
"RTN","PSSHRVL1",100,0)
 S:$P(PSSHASH("Exception","PROSPECTIVE",PSS("PharmOrderNo"),PSS("I")),U,11)'=1 ^TMP($JOB,PSSHASH("Base"),"OUT","EXCEPTIONS",PSS("PharmOrderNo"),$$NEXTEX(.PSS,.PSSHASH))=PSSHASH("Exception","PROSPECTIVE",PSS("PharmOrderNo"),PSS("I"))
"RTN","PSSHRVL1",101,0)
 QUIT
"RTN","PSSHRVL1",102,0)
 ;
"RTN","PSSHRVL1",103,0)
KILLALL(BASE) ;
"RTN","PSSHRVL1",104,0)
 ;INPUTS BASE SUBCRIPT
"RTN","PSSHRVL1",105,0)
 ;@DESC Kills the DrugDrug, Therapy, ProfileVProfile, and Dose check nodes.
"RTN","PSSHRVL1",106,0)
 DO KILLCHEK("DRUGDRUG",BASE)
"RTN","PSSHRVL1",107,0)
 DO KILLCHEK("THERAPY",BASE)
"RTN","PSSHRVL1",108,0)
 DO KILLCHEK("PROFILEVPROFILE",BASE)
"RTN","PSSHRVL1",109,0)
 DO KILLCHEK("DOSE",BASE)
"RTN","PSSHRVL1",110,0)
 QUIT
"RTN","PSSHRVL1",111,0)
 ;;
"RTN","PSSHRVL1",112,0)
KILLCHEK(PSSCHECK,BASE) ;
"RTN","PSSHRVL1",113,0)
 ;@DESC Kills the check node specified in parameter
"RTN","PSSHRVL1",114,0)
 ;@PSSCHEK The node to kill
"RTN","PSSHRVL1",115,0)
 ;
"RTN","PSSHRVL1",116,0)
 KILL ^TMP($JOB,BASE,"IN",PSSCHECK)
"RTN","PSSHRVL1",117,0)
 QUIT
"RTN","PSSHRVL1",118,0)
 ;
"RTN","PSSHRVL1",119,0)
 ;
"RTN","PSSHRVL1",120,0)
KILLNODE(BASE,TYPE,ORDER) ;
"RTN","PSSHRVL1",121,0)
 ;
"RTN","PSSHRVL1",122,0)
 ;@DESC KILLS A SINGLE NODE FOR A DRUG
"RTN","PSSHRVL1",123,0)
 ;@BASE--the subscript after $JOB
"RTN","PSSHRVL1",124,0)
 ;@TYPE-Can have 3 possible values: "PROSPECTIVE","PROFILE" or "DOSE"
"RTN","PSSHRVL1",125,0)
 ;@ODRDER-Is the order information to make the node unique
"RTN","PSSHRVL1",126,0)
 KILL ^TMP($JOB,BASE,"IN",TYPE,ORDER)
"RTN","PSSHRVL1",127,0)
 Q
"RTN","PSSHRVL1",128,0)
 ;
"RTN","PSSHRVL1",129,0)
GCNREASN(DRUGIEN,DRUGNM,ORDRNUM,BADGCN) ;
"RTN","PSSHRVL1",130,0)
 ;
"RTN","PSSHRVL1",131,0)
 ;Returns a message and reason on why a drug does not have a GCNSEQNO
"RTN","PSSHRVL1",132,0)
 ;inputs: DRUGIEN-IEN OF DRUG
"RTN","PSSHRVL1",133,0)
 ;DRUGNM-NAME OF DRUG
"RTN","PSSHRVL1",134,0)
 ;ORDRNUM-PHARMACY ORDER NUM
"RTN","PSSHRVL1",135,0)
 ;BADGCN-(OPTIONAL)FLAG IS SET to 1 IF DRUG RETURNED AS NOT FOUND BY SWRI/FDB
"RTN","PSSHRVL1",136,0)
 ;        if set to -1 Missing or invalid GCNSEQNO  from Input node  
"RTN","PSSHRVL1",137,0)
 N VAPROD1,NDNODE,REASON,MESSAGE,VAIEN,PSSVQPAC,PSSVQDOS,PSSVQNOM,PSSVQREM,PSSVQTY1,PSSVQTY2
"RTN","PSSHRVL1",138,0)
 S MESSAGE=$$NOCHKMSG(DRUGNM,ORDRNUM),PSSVQDOS=0,PSSVQPAC=$S($E(PSSHASH("Base"),1,2)="PS":1,1:0) I $T(DS^PSSDSAPI)]"",$$DS^PSSDSAPI S PSSVQDOS=1
"RTN","PSSHRVL1",139,0)
 S REASON="",PSSVQREM=$S($P(ORDRNUM,";")="R":1,1:0)
"RTN","PSSHRVL1",140,0)
 S PSSVQTY1=$P(ORDRNUM,";",3),PSSVQTY1=$$UP^XLFSTR(PSSVQTY1),PSSVQTY2=$S(PSSVQTY1["PROSPECTIVE":1,1:0)
"RTN","PSSHRVL1",141,0)
 ;
"RTN","PSSHRVL1",142,0)
 S VAPROD1=""
"RTN","PSSHRVL1",143,0)
 D  ;Case statement
"RTN","PSSHRVL1",144,0)
 .I $G(BADGCN)=1 S MESSAGE=$$NXCHKMSG(DRUGNM) S PSSVQNOM=$$GCMESS,REASON=$S(PSSVQNOM:"^1",1:"") Q
"RTN","PSSHRVL1",145,0)
 .I '$G(DRUGIEN),'PSSVQREM S REASON="No dispense drug found for Orderable Item" Q
"RTN","PSSHRVL1",146,0)
 .S NDNODE=$G(^PSDRUG(DRUGIEN,"ND"))
"RTN","PSSHRVL1",147,0)
 .;if no ndnode or 3rd piece not populated 
"RTN","PSSHRVL1",148,0)
 .I 'PSSVQREM,'$L(NDNODE)!('$P(NDNODE,U,3)) D  Q
"RTN","PSSHRVL1",149,0)
 ..S REASON="Drug not matched to NDF" D:PSSVQPAC&($D(^TMP($J,PSSHASH("Base"),"IN","DOSE"))) NZMSG I 'PSSVQPAC S MESSAGE=$$NXCHKMSG(DRUGNM),REASON=""
"RTN","PSSHRVL1",150,0)
 .S VAIEN=$S('PSSVQREM:+$P(NDNODE,U,3),1:0)
"RTN","PSSHRVL1",151,0)
 .S:VAIEN VAPROD1=$P($G(^PSNDF(50.68,VAIEN,1)),U,5)    ; Get the GCNSEQNO
"RTN","PSSHRVL1",152,0)
 .I 'VAPROD1!($G(BADGCN)=-1) D
"RTN","PSSHRVL1",153,0)
 ..S MESSAGE=$$NXCHKMSG(DRUGNM) S PSSVQNOM=$$GCMESS,REASON=$S(PSSVQNOM:"^1",1:"")
"RTN","PSSHRVL1",154,0)
 ;
"RTN","PSSHRVL1",155,0)
 Q MESSAGE_U_REASON
"RTN","PSSHRVL1",156,0)
 ;
"RTN","PSSHRVL1",157,0)
NOCHKMSG(DRUGNM,ORDRNUM) ;
"RTN","PSSHRVL1",158,0)
 ;Returns msg that no checks could be performed.
"RTN","PSSHRVL1",159,0)
 ;INPUTS: 
"RTN","PSSHRVL1",160,0)
 ;DRUGNM-Name of drug
"RTN","PSSHRVL1",161,0)
 ;ORDRNUM-PHARMACY ORDER NUMBER
"RTN","PSSHRVL1",162,0)
 N MESSAGE
"RTN","PSSHRVL1",163,0)
 S MESSAGE="Enhanced Order Checks cannot be performed for "_$$LOCORREM(ORDRNUM)_$$OUTPAT(ORDRNUM)_" Drug: "_DRUGNM
"RTN","PSSHRVL1",164,0)
 Q MESSAGE
"RTN","PSSHRVL1",165,0)
 ;
"RTN","PSSHRVL1",166,0)
OUTPAT(ORDRNUM) ;
"RTN","PSSHRVL1",167,0)
 ; Returns " Outpatient" if it is one.
"RTN","PSSHRVL1",168,0)
 ;INPUTS: 
"RTN","PSSHRVL1",169,0)
 ;ORDRNUM-PHARMACY ORDER NUMBER
"RTN","PSSHRVL1",170,0)
 ;PSSBASE - globally defined
"RTN","PSSHRVL1",171,0)
 ;
"RTN","PSSHRVL1",172,0)
 N OUTPAT
"RTN","PSSHRVL1",173,0)
 S OUTPAT=""
"RTN","PSSHRVL1",174,0)
 I $$LOCORREM(ORDRNUM)="Local" D
"RTN","PSSHRVL1",175,0)
 .I $E(ORDRNUM)'="I",$E(ORDRNUM)'="R",ORDRNUM["PROFILE",$G(^TMP($J,PSSBASE,"IN","SOURCE"))="I" S OUTPAT=" Outpatient"
"RTN","PSSHRVL1",176,0)
 Q OUTPAT
"RTN","PSSHRVL1",177,0)
 ;
"RTN","PSSHRVL1",178,0)
OIMSG(OINAME,PSSNOITN) ;
"RTN","PSSHRVL1",179,0)
 ;INPUT: Orderable item name
"RTN","PSSHRVL1",180,0)
 ;       Order number
"RTN","PSSHRVL1",181,0)
 ;RETURNS-ERROR MESSAGE
"RTN","PSSHRVL1",182,0)
 N MESSAGE,PSSNOITP,PSSNOITD,PSSNOIT1,PSSNOIT2
"RTN","PSSHRVL1",183,0)
 S PSSNOITP=$S($E(PSSHASH("Base"),1,2)="PS":0,1:1)
"RTN","PSSHRVL1",184,0)
 S PSSNOITD=0 I $T(DS^PSSDSAPI)]"",$$DS^PSSDSAPI S PSSNOITD=1
"RTN","PSSHRVL1",185,0)
 S PSSNOIT1=$P(PSSNOITN,";",3),PSSNOIT1=$$UP^XLFSTR(PSSNOIT1),PSSNOIT2=$S(PSSNOIT1["PROSPECTIVE":1,1:0)
"RTN","PSSHRVL1",186,0)
 I PSSNOITP D  Q MESSAGE
"RTN","PSSHRVL1",187,0)
 .I $D(^TMP($J,PSSHASH("Base"),"IN","DOSE")) D  Q
"RTN","PSSHRVL1",188,0)
 ..S MESSAGE="Maximum Single Dose Check could not be done for Drug: "_OINAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSHRVL1",189,0)
 .S MESSAGE="Order Checks could not be done for Drug: "_OINAME_", please complete a manual check for Drug Interactions"_$S(PSSNOITD&($G(PSSNOIT2)):", Duplicate Therapy and appropriate Dosing.",1:" and Duplicate Therapy.")
"RTN","PSSHRVL1",190,0)
 S MESSAGE="Enhanced Order Checks cannot be performed for Orderable Item: "_OINAME
"RTN","PSSHRVL1",191,0)
 Q MESSAGE
"RTN","PSSHRVL1",192,0)
 ;
"RTN","PSSHRVL1",193,0)
INRSON(ERRNUM,ORDERNUM) ;
"RTN","PSSHRVL1",194,0)
 ;INPUT-REASON CODE (1,2 OR 3)
"RTN","PSSHRVL1",195,0)
 ;ORDERNUM-(OPTIONAL)-ORDERNUMBER
"RTN","PSSHRVL1",196,0)
 ;OUTPUT-REASON MESSAGE
"RTN","PSSHRVL1",197,0)
 ;
"RTN","PSSHRVL1",198,0)
 N REASON,NONVAFLG
"RTN","PSSHRVL1",199,0)
 S NONVAFLG=0  ;DEFAULT
"RTN","PSSHRVL1",200,0)
 S ORDERNUM=$G(ORDERNUM)
"RTN","PSSHRVL1",201,0)
 I $E(ORDERNUM)="N" S NONVAFLG=1
"RTN","PSSHRVL1",202,0)
 D
"RTN","PSSHRVL1",203,0)
 .I ERRNUM=1 D  Q
"RTN","PSSHRVL1",204,0)
 .. I 'NONVAFLG S REASON="No Dispense Drug found." Q   ; No active Dispense Drug found for Pending order. 
"RTN","PSSHRVL1",205,0)
 .. I NONVAFLG S REASON="No Dispense Drug found."      ; No active Dispense Drug found for Non-VA med order.
"RTN","PSSHRVL1",206,0)
 .I ERRNUM=2 S REASON="Free Text Dosage could not be evaluated." Q
"RTN","PSSHRVL1",207,0)
 .I ERRNUM=3 S REASON="Free Text Infusion Rate could not be evaluated."
"RTN","PSSHRVL1",208,0)
 .I ERRNUM=4 S REASON="No active IV Additive/Solution marked for IV fluid order entry could be found."
"RTN","PSSHRVL1",209,0)
 Q REASON
"RTN","PSSHRVL1",210,0)
 ;
"RTN","PSSHRVL1",211,0)
DEMOCHK(AGE,BSA,WEIGHT,PSDRUG) ;
"RTN","PSSHRVL1",212,0)
 ;Checks age and returns message and error reason
"RTN","PSSHRVL1",213,0)
 ;input: AGE--AGE
"RTN","PSSHRVL1",214,0)
 ;BSA-BSA
"RTN","PSSHRVL1",215,0)
 ;WEIGHT OF THE PATIENT
"RTN","PSSHRVL1",216,0)
 ;output: message and reason strings
"RTN","PSSHRVL1",217,0)
 ;
"RTN","PSSHRVL1",218,0)
 N PSMESSAGE,PSREASON,PSRESULT,TEXT
"RTN","PSSHRVL1",219,0)
 S PSRESULT="",PSREASON="",TEXT=""
"RTN","PSSHRVL1",220,0)
 I AGE'>0 S TEXT=" Age"
"RTN","PSSHRVL1",221,0)
 I $L(TEXT) D
"RTN","PSSHRVL1",222,0)
 .;PASSES IN NULL BECAUSE AT THE TIME OF CALL DO NOT HAVE DRUG NAME
"RTN","PSSHRVL1",223,0)
 .S PSMESSAGE=$$DOSEMSG(PSDRUG)
"RTN","PSSHRVL1",224,0)
 .S PSREASON="One or more required patient parameters unavailable:"_TEXT
"RTN","PSSHRVL1",225,0)
 .S PSRESULT=PSMESSAGE_U_PSREASON
"RTN","PSSHRVL1",226,0)
 Q PSRESULT
"RTN","PSSHRVL1",227,0)
 ;
"RTN","PSSHRVL1",228,0)
MEDRTE(PSROUTE,PSDRUGNM) ;
"RTN","PSSHRVL1",229,0)
 ;Checks route if null
"RTN","PSSHRVL1",230,0)
 ;inputs: ROUTE-MEDICATION ROUTE
"RTN","PSSHRVL1",231,0)
 ;DRUGNM-DRUG NAME
"RTN","PSSHRVL1",232,0)
 ;RETURNS THE ERROR MESSAGE AND ERROR REASON 
"RTN","PSSHRVL1",233,0)
 N PSMESSAGE,PSREASON,PSRESULT
"RTN","PSSHRVL1",234,0)
 S PSRESULT=""
"RTN","PSSHRVL1",235,0)
 I '$L(PSROUTE) D
"RTN","PSSHRVL1",236,0)
 .S PSMESSAGE=$$DOSEMSG(PSDRUGNM)
"RTN","PSSHRVL1",237,0)
 .;S PSREASON="Unmapped Local Medication Route"
"RTN","PSSHRVL1",238,0)
 .S PSREASON="Invalid or Undefined Dose Route"
"RTN","PSSHRVL1",239,0)
 .S PSRESULT=PSMESSAGE_U_PSREASON
"RTN","PSSHRVL1",240,0)
 Q PSRESULT
"RTN","PSSHRVL1",241,0)
 ;
"RTN","PSSHRVL1",242,0)
 ;
"RTN","PSSHRVL1",243,0)
CHKDSTYP(DOSETYP,PSDRUGNM) ;
"RTN","PSSHRVL1",244,0)
 ;inputs: DOSETYP-DOSE TYPE (MAINTENANCE,LOADING)
"RTN","PSSHRVL1",245,0)
 ;PSDRUGNM-DRUG NAME
"RTN","PSSHRVL1",246,0)
 ;RETURNS THE ERROR MESSAGE AND ERROR REASON 
"RTN","PSSHRVL1",247,0)
 N PSREASON,PSRESULT,PSMSG,TEXT,OKFLAG
"RTN","PSSHRVL1",248,0)
 S PSRESULT="",OKFLAG=0
"RTN","PSSHRVL1",249,0)
 F TEXT="LOADING","MAINTENANCE","INITIAL DOSE","INTERMEDIATE DOSE","PROPHYLACTIC","SINGLE DOSE" D  Q:OKFLAG
"RTN","PSSHRVL1",250,0)
 .I DOSETYP=TEXT S OKFLAG=1 Q
"RTN","PSSHRVL1",251,0)
 I '$L(DOSETYP)!'OKFLAG D
"RTN","PSSHRVL1",252,0)
 .S PSMSG=$$DOSEMSG(PSDRUGNM)
"RTN","PSSHRVL1",253,0)
 .;S PSREASON="Undefined Dose Type"
"RTN","PSSHRVL1",254,0)
 .S PSREASON="Invalid or Undefined Dose Type"
"RTN","PSSHRVL1",255,0)
 .S PSRESULT=PSMSG_U_PSREASON
"RTN","PSSHRVL1",256,0)
 Q PSRESULT
"RTN","PSSHRVL1",257,0)
 ;
"RTN","PSSHRVL1",258,0)
CHKDOSE(PSDOSE,PSDRUGNM) ;
"RTN","PSSHRVL1",259,0)
 ;CHECKS THE DOSE OF DRUG DOSE REQUEST
"RTN","PSSHRVL1",260,0)
 ;INPUTS: PSDOSE-ORDERED DOSE OF A DRUG
"RTN","PSSHRVL1",261,0)
 ;PSDRUGNM=NAME OF DRUG
"RTN","PSSHRVL1",262,0)
 ;RETURNS THE ERROR MESSAGE AND ERROR REASON
"RTN","PSSHRVL1",263,0)
 N PSREASON,PSRESULT,PSMSG
"RTN","PSSHRVL1",264,0)
 S PSRESULT=""
"RTN","PSSHRVL1",265,0)
 I PSDOSE'=+PSDOSE D
"RTN","PSSHRVL1",266,0)
 .S PSMSG=$$DOSEMSG(PSDRUGNM)
"RTN","PSSHRVL1",267,0)
 .S PSREASON="Invalid or Undefined Dose"
"RTN","PSSHRVL1",268,0)
 .S PSRESULT=PSMSG_U_PSREASON
"RTN","PSSHRVL1",269,0)
 Q PSRESULT
"RTN","PSSHRVL1",270,0)
 ;
"RTN","PSSHRVL1",271,0)
CHKUNIT(PSUNIT,PSDRUGNM) ;
"RTN","PSSHRVL1",272,0)
 ;CHECKS THE UNITS OF A DOSE-RETURNS ERROR AND REASON
"RTN","PSSHRVL1",273,0)
 ;INPUTS: PSUNIT-UNITS OF THE DRUG
"RTN","PSSHRVL1",274,0)
 ;PSDRUGNM-NAME OF THE DRUG
"RTN","PSSHRVL1",275,0)
 N PSREASON,PSRESULT,PSMSG
"RTN","PSSHRVL1",276,0)
 S PSRESULT=""
"RTN","PSSHRVL1",277,0)
 I '$L(PSUNIT) D
"RTN","PSSHRVL1",278,0)
 .S PSMSG=$$DOSEMSG(PSDRUGNM)
"RTN","PSSHRVL1",279,0)
 .S PSREASON="Invalid or Undefined Dose Unit"
"RTN","PSSHRVL1",280,0)
 .S PSRESULT=PSMSG_U_PSREASON
"RTN","PSSHRVL1",281,0)
 Q PSRESULT
"RTN","PSSHRVL1",282,0)
 ;
"RTN","PSSHRVL1",283,0)
CHKFREQ(PSFREQ) ;
"RTN","PSSHRVL1",284,0)
 ;INPUTS: PSFREQ-HOW OFTEN A DRUG IS ADMINISTRED
"RTN","PSSHRVL1",285,0)
 ;RETURNS-ERROR MESSAGE AND ERROR REASON
"RTN","PSSHRVL1",286,0)
 N PSREASON,PSRESULT,PSMSG
"RTN","PSSHRVL1",287,0)
 S PSMSG="Daily Dosage Range Check could not be performed."
"RTN","PSSHRVL1",288,0)
 S PSRESULT=""
"RTN","PSSHRVL1",289,0)
 D
"RTN","PSSHRVL1",290,0)
 .I '$L(PSFREQ) Q  ;Freq can be null
"RTN","PSSHRVL1",291,0)
 .I '$$VALFREQ^PSSHFREQ(PSFREQ) D
"RTN","PSSHRVL1",292,0)
 ..S PSREASON="Invalid or Undefined Frequency"
"RTN","PSSHRVL1",293,0)
 ..S PSRESULT=PSMSG_U_PSREASON
"RTN","PSSHRVL1",294,0)
 Q PSRESULT
"RTN","PSSHRVL1",295,0)
 ;
"RTN","PSSHRVL1",296,0)
CHKRATE(PSRATE,TYPE,DRUGNM,DURATION) ;
"RTN","PSSHRVL1",297,0)
 ;INPUTS: PSRATE-Can be either dose or duration rate
"RTN","PSSHRVL1",298,0)
 ;TYPE-DOSE OR DURATION
"RTN","PSSHRVL1",299,0)
 ;DRUGNM-DRUG NAME
"RTN","PSSHRVL1",300,0)
 ;DURATION-OPTIONAL DURATION NUMERIC
"RTN","PSSHRVL1",301,0)
 S DURATION=$G(DURATION)
"RTN","PSSHRVL1",302,0)
 ;output: returns error message and reason
"RTN","PSSHRVL1",303,0)
 N OKFLAG,STDRATE,RESULT,REASON,PSMSG
"RTN","PSSHRVL1",304,0)
 S RESULT=""
"RTN","PSSHRVL1",305,0)
 S OKFLAG=0 ;ASSUME BAD
"RTN","PSSHRVL1",306,0)
 D
"RTN","PSSHRVL1",307,0)
 .I '$L(PSRATE),TYPE="DURATION",'$L(DURATION) Q  ;can be null for duration if duration is null
"RTN","PSSHRVL1",308,0)
 .F STDRATE="H","HOUR","MINUTE","MIN","DAY" D  Q:OKFLAG
"RTN","PSSHRVL1",309,0)
 ..I PSRATE=STDRATE S OKFLAG=1
"RTN","PSSHRVL1",310,0)
 .I 'OKFLAG D
"RTN","PSSHRVL1",311,0)
 ..S TYPE=$S(TYPE="DURATION":"Duration",TYPE="DOSE":"DOSE",1:"Duration or Dose")
"RTN","PSSHRVL1",312,0)
 ..S REASON="Invalid or Undefined "_TYPE_" Rate"
"RTN","PSSHRVL1",313,0)
 ..S PSMSG=$$DOSEMSG(DRUGNM)
"RTN","PSSHRVL1",314,0)
 ..S RESULT=PSMSG_U_REASON
"RTN","PSSHRVL1",315,0)
 Q RESULT
"RTN","PSSHRVL1",316,0)
 ;
"RTN","PSSHRVL1",317,0)
CHKDRATN(DURATION,DRUGNM) ;
"RTN","PSSHRVL1",318,0)
 ;INPUTS; DURATION-INTEGER-HOW LONG A DRUG IS TAKEN
"RTN","PSSHRVL1",319,0)
 ;PSMSG-ERROR MESSAGE
"RTN","PSSHRVL1",320,0)
 N RESULT,REASON,PSMSG
"RTN","PSSHRVL1",321,0)
 S RESULT=""
"RTN","PSSHRVL1",322,0)
 ;If not integer error
"RTN","PSSHRVL1",323,0)
 D
"RTN","PSSHRVL1",324,0)
 .I '$L(DURATION) Q  ;can be null OK
"RTN","PSSHRVL1",325,0)
 .;must be an integer > 0
"RTN","PSSHRVL1",326,0)
 .;I (DURATION'=+DURATION)!(DURATION'=(DURATION\1))!(DURATION=0) D
"RTN","PSSHRVL1",327,0)
 . I (DURATION=0)!(DURATION'?1.N) D
"RTN","PSSHRVL1",328,0)
 ..S REASON="Invalid or Undefined Duration"
"RTN","PSSHRVL1",329,0)
 ..S PSMSG=$$DOSEMSG(DRUGNM)
"RTN","PSSHRVL1",330,0)
 ..S RESULT=PSMSG_U_REASON
"RTN","PSSHRVL1",331,0)
 Q RESULT
"RTN","PSSHRVL1",332,0)
 ;
"RTN","PSSHRVL1",333,0)
DOSEMSG(DRUGNAME,TYPE) ;
"RTN","PSSHRVL1",334,0)
 ;INPUTS:DRUGNMAME
"RTN","PSSHRVL1",335,0)
 ;TYPE-either "R" for range or "S" for single or "D" for daily (optional)
"RTN","PSSHRVL1",336,0)
 ;OUTPUT STANDARD DOSAGE ERROR MESSAGE
"RTN","PSSHRVL1",337,0)
 N RETURN
"RTN","PSSHRVL1",338,0)
 S TYPE=$G(TYPE) ;OPTIONAL PARAMETER ONLY CALLED FROM PSSHRQ23
"RTN","PSSHRVL1",339,0)
 D
"RTN","PSSHRVL1",340,0)
 .I TYPE="R" D  Q
"RTN","PSSHRVL1",341,0)
 ..SET RETURN="Daily Dose Range Check could not be performed for Drug: "_DRUGNAME
"RTN","PSSHRVL1",342,0)
 .I TYPE="S" D  Q
"RTN","PSSHRVL1",343,0)
 ..;SET RETURN="Maximum Single Dose Range Check could not be performed for Drug: "_DRUGNAME
"RTN","PSSHRVL1",344,0)
 ..SET RETURN="Maximum Single Dose Check could not be performed for Drug: "_DRUGNAME
"RTN","PSSHRVL1",345,0)
 .I TYPE="D" D  Q
"RTN","PSSHRVL1",346,0)
 ..S RETURN="Daily Dose Check could not be performed for Drug: "_DRUGNAME
"RTN","PSSHRVL1",347,0)
 .;
"RTN","PSSHRVL1",348,0)
 .S RETURN="Maximum Single Dose Check could not be performed for Drug: "_DRUGNAME  ;2.0 Code changed from Dosing Checks..
"RTN","PSSHRVL1",349,0)
 Q RETURN
"RTN","PSSHRVL1",350,0)
 ;
"RTN","PSSHRVL1",351,0)
GETUCI() ;
"RTN","PSSHRVL1",352,0)
 ;RETURNS CURRENT UCI
"RTN","PSSHRVL1",353,0)
 N Y
"RTN","PSSHRVL1",354,0)
 X ^%ZOSF("UCI")
"RTN","PSSHRVL1",355,0)
 Q Y
"RTN","PSSHRVL1",356,0)
 ;
"RTN","PSSHRVL1",357,0)
ERRMSG(TYPE,DRUGNAME,ORDRNUM,WARNING) ;
"RTN","PSSHRVL1",358,0)
 ;Returns standard messages for error nodes
"RTN","PSSHRVL1",359,0)
 ;created from FDB alerts
"RTN","PSSHRVL1",360,0)
 ;inputs:
"RTN","PSSHRVL1",361,0)
 ;TYPE-DRUGDRUG,THERAPY,DOSE
"RTN","PSSHRVL1",362,0)
 ;DRUGNAME-NAME OF DRUG
"RTN","PSSHRVL1",363,0)
 ;WARNING (OPTIONAL) 1 OR 0 IF SET CAME BACKF FROM FDB AS SEVERITY OF WARINING)
"RTN","PSSHRVL1",364,0)
 ;CALLED BY MSGWRITE^PSSHRQ21
"RTN","PSSHRVL1",365,0)
 ;FDB Errors, Input Exceptions and Dose Screening prior to FDB call pass in Null Type
"RTN","PSSHRVL1",366,0)
 N MSG,LOCORREM
"RTN","PSSHRVL1",367,0)
 S WARNING=$G(WARNING)
"RTN","PSSHRVL1",368,0)
 S MSG=""
"RTN","PSSHRVL1",369,0)
 S LOCORREM=$$LOCORREM(ORDRNUM)
"RTN","PSSHRVL1",370,0)
 D
"RTN","PSSHRVL1",371,0)
 .I WARNING D  Q
"RTN","PSSHRVL1",372,0)
 ..I TYPE="DRUGDRUG" S MSG="Drug Interaction Order Check for "_LOCORREM_" Drug: "
"RTN","PSSHRVL1",373,0)
 ..I TYPE="THERAPY" S MSG="Duplicate Therapy Order Check for "_LOCORREM_" Drug: "
"RTN","PSSHRVL1",374,0)
 ..I TYPE="DOSE" S MSG="Maximum Single Dose Check Warning for "_DRUGNAME_":" Q    ; do not execute the next line - and 2.0 change from DOsing Order..
"RTN","PSSHRVL1",375,0)
 ..S MSG=MSG_DRUGNAME_" Warning"
"RTN","PSSHRVL1",376,0)
 .I TYPE="DRUGDRUG" S MSG="Drug Interaction Order Check could not be performed."
"RTN","PSSHRVL1",377,0)
 .I TYPE="THERAPY" S MSG="Duplicate Therapy Order Check could not be performed for "_LOCORREM_" Drug: "_DRUGNAME
"RTN","PSSHRVL1",378,0)
 .I TYPE="DOSE" S MSG=$$DOSEMSG(DRUGNAME)
"RTN","PSSHRVL1",379,0)
 Q MSG
"RTN","PSSHRVL1",380,0)
 ;
"RTN","PSSHRVL1",381,0)
ORDRTYP(ORDERNUM) ;
"RTN","PSSHRVL1",382,0)
 ;RETURNS THE TYPE OF ORDER: OUTPATIENT PROSPECTIVE DRUG, OUTPATIENT, REMOTE OR INPATIENT
"RTN","PSSHRVL1",383,0)
 ;INPUTS: ORDERNUM: TYPE;ORDER NUMBER;DRUG TYPE (PROFILE, PROSPECTIVE, REMOTE);COUNTER
"RTN","PSSHRVL1",384,0)
 N TYPE,C1
"RTN","PSSHRVL1",385,0)
 S TYPE=""
"RTN","PSSHRVL1",386,0)
 S C1=$E(ORDERNUM)
"RTN","PSSHRVL1",387,0)
 D
"RTN","PSSHRVL1",388,0)
 .I ORDERNUM["REMOTE" S TYPE="REMOTE" Q
"RTN","PSSHRVL1",389,0)
 .I C1="O" S TYPE="OUTPATIENT" Q
"RTN","PSSHRVL1",390,0)
 .I C1="Z" S TYPE="OUTPATIENT" Q
"RTN","PSSHRVL1",391,0)
 .I C1="I" S TYPE="INPATIENT" Q
"RTN","PSSHRVL1",392,0)
 .I C1="R" S TYPE="REMOTE" Q
"RTN","PSSHRVL1",393,0)
 Q TYPE
"RTN","PSSHRVL1",394,0)
 ;
"RTN","PSSHRVL1",395,0)
LOCORREM(ORDERNUM) ;
"RTN","PSSHRVL1",396,0)
 ;INPUTS: ORDERNUM: TYPE;ORDER NUMBER;DRUG TYPE (PROFILE, PROSPECTIVE, REMOTE);COUNTER
"RTN","PSSHRVL1",397,0)
 ;OUTPUTS:-String either "local" or "Remote"
"RTN","PSSHRVL1",398,0)
 N ORDRTYP,LOCORREM
"RTN","PSSHRVL1",399,0)
 S ORDRTYP=$$ORDRTYP(ORDERNUM)
"RTN","PSSHRVL1",400,0)
 D
"RTN","PSSHRVL1",401,0)
 .I ORDRTYP="REMOTE" S LOCORREM="Remote" Q
"RTN","PSSHRVL1",402,0)
 .S LOCORREM="Local"
"RTN","PSSHRVL1",403,0)
 Q LOCORREM
"RTN","PSSHRVL1",404,0)
 ;
"RTN","PSSHRVL1",405,0)
STATMSG() ;
"RTN","PSSHRVL1",406,0)
 ;This returns the standard message when an FDB update is being performed.
"RTN","PSSHRVL1",407,0)
 ;
"RTN","PSSHRVL1",408,0)
 N MSG
"RTN","PSSHRVL1",409,0)
 ;S MSG="Enhanced Order checks are unavailable. A Vendor database update is in progress."
"RTN","PSSHRVL1",410,0)
 S MSG="The connection to the vendor database has been disabled."
"RTN","PSSHRVL1",411,0)
 Q MSG
"RTN","PSSHRVL1",412,0)
 ;
"RTN","PSSHRVL1",413,0)
 ;
"RTN","PSSHRVL1",414,0)
GCMESS() ;Get Exclude field
"RTN","PSSHRVL1",415,0)
 N PSSVQND,PSSVQEXC,PSSVQPVP
"RTN","PSSHRVL1",416,0)
 S PSSVQPVP=$P(ORDRNUM,";",3)
"RTN","PSSHRVL1",417,0)
 S PSSVQND=^TMP($J,PSSHASH("Base"),"IN",PSSVQPVP,ORDRNUM)
"RTN","PSSHRVL1",418,0)
 S PSSVQEXC=""
"RTN","PSSHRVL1",419,0)
 D GCNMESX
"RTN","PSSHRVL1",420,0)
 Q PSSVQEXC
"RTN","PSSHRVL1",421,0)
 ;
"RTN","PSSHRVL1",422,0)
 ;
"RTN","PSSHRVL1",423,0)
GCNMESX ;
"RTN","PSSHRVL1",424,0)
 N PSSVQDRG,PSSVQ1,PSSVQ3,PSSVQVUI,PSSVQAR,PSSVQ4
"RTN","PSSHRVL1",425,0)
 S PSSVQDRG=$P(PSSVQND,"^",3) I PSSVQDRG D  Q
"RTN","PSSHRVL1",426,0)
 .S PSSVQ1=$P($G(^PSDRUG(PSSVQDRG,"ND")),"^"),PSSVQ3=$P($G(^PSDRUG(PSSVQDRG,"ND")),"^",3)
"RTN","PSSHRVL1",427,0)
 .I PSSVQ1,PSSVQ3 S PSSVQEXC=$$DDIEX^PSNAPIS(PSSVQ1,PSSVQ3)
"RTN","PSSHRVL1",428,0)
 S PSSVQVUI=$P(PSSVQND,"^",2) I 'PSSVQVUI Q
"RTN","PSSHRVL1",429,0)
 S PSSVQAR="PSSVQARR"
"RTN","PSSHRVL1",430,0)
 D GETIREF^XTID(50.68,.01,PSSVQVUI,PSSVQAR)
"RTN","PSSHRVL1",431,0)
 S PSSVQ4=$O(PSSVQAR(50.68,.01,""))
"RTN","PSSHRVL1",432,0)
 I PSSVQ4 S PSSVQEXC=$$DDIEX^PSNAPIS("",PSSVQ4)
"RTN","PSSHRVL1",433,0)
 Q
"RTN","PSSHRVL1",434,0)
 ;
"RTN","PSSHRVL1",435,0)
 ;
"RTN","PSSHRVL1",436,0)
NXCHKMSG(DRUGNM) ;
"RTN","PSSHRVL1",437,0)
 N MESSAGE
"RTN","PSSHRVL1",438,0)
 I $D(^TMP($J,PSSHASH("Base"),"IN","DOSE")) D  Q MESSAGE
"RTN","PSSHRVL1",439,0)
 .S MESSAGE="Maximum Single Dose Check could not be done for"_$S(PSSVQREM:" Remote",2:"")_" Drug: "_DRUGNM_", please complete a manual check for appropriate Dosing."
"RTN","PSSHRVL1",440,0)
 S MESSAGE="Order Checks could not be done for"
"RTN","PSSHRVL1",441,0)
 S MESSAGE=MESSAGE_$S(PSSVQREM:" Remote",2:"")_" Drug: "_DRUGNM_", please complete a manual check for Drug Interactions"_$S(PSSVQDOS&($G(PSSVQTY2)):", Duplicate Therapy and appropriate Dosing.",1:" and Duplicate Therapy.")
"RTN","PSSHRVL1",442,0)
 Q MESSAGE
"RTN","PSSHRVL1",443,0)
 ;
"RTN","PSSHRVL1",444,0)
 ;
"RTN","PSSHRVL1",445,0)
NZMSG ;Reset Message for Pharmacy Not matched to NDF error for Dosing
"RTN","PSSHRVL1",446,0)
 S MESSAGE="Maximum Single Dose Check could not be performed for Drug: "_DRUGNM
"RTN","PSSHRVL1",447,0)
 Q
"RTN","PSSHTTP")
0^20^B8656729
"RTN","PSSHTTP",1,0)
PSSHTTP ;WOIFO/AV - REENGINERING Sends XML Request to PEPS via HWSC ;09/20/07
"RTN","PSSHTTP",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**136,160**;9/30/97;Build 76
"RTN","PSSHTTP",3,0)
 ;
"RTN","PSSHTTP",4,0)
 ; @author  - Alex Vazquez, Chris Flegel, Timothy Sabat, S Gordon
"RTN","PSSHTTP",5,0)
 ; @date    - September 19, 2007
"RTN","PSSHTTP",6,0)
 ; @version - 1.0
"RTN","PSSHTTP",7,0)
 ;
"RTN","PSSHTTP",8,0)
 QUIT
"RTN","PSSHTTP",9,0)
 ;;
"RTN","PSSHTTP",10,0)
PEPSPOST(DOCHAND,XML) ;
"RTN","PSSHTTP",11,0)
 ; @DESC Sends an HTTP request to PEPS as a POST
"RTN","PSSHTTP",12,0)
 ;
"RTN","PSSHTTP",13,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHTTP",14,0)
 ; @XML XML request as string
"RTN","PSSHTTP",15,0)
 ;
"RTN","PSSHTTP",16,0)
 ; @RETURNS A handle to response XML document
"RTN","PSSHTTP",17,0)
 ;          1 for success, 0 for failure
"RTN","PSSHTTP",18,0)
 ;
"RTN","PSSHTTP",19,0)
 NEW PSS,PSSERR,$ETRAP,$ESTACK
"RTN","PSSHTTP",20,0)
 ;
"RTN","PSSHTTP",21,0)
 ; Set error trap
"RTN","PSSHTTP",22,0)
 SET $ETRAP="DO ERROR^PSSHTTP"
"RTN","PSSHTTP",23,0)
 ;
"RTN","PSSHTTP",24,0)
 SET PSS("server")="PEPS"
"RTN","PSSHTTP",25,0)
 SET PSS("webserviceName")="ORDER_CHECKS"
"RTN","PSSHTTP",26,0)
 SET PSS("path")="ordercheck"
"RTN","PSSHTTP",27,0)
 ;
"RTN","PSSHTTP",28,0)
 SET PSS("parameterName")="xmlRequest"
"RTN","PSSHTTP",29,0)
 SET PSS("parameterValue")=XML
"RTN","PSSHTTP",30,0)
 ;
"RTN","PSSHTTP",31,0)
 ; Get instance of client REST request object
"RTN","PSSHTTP",32,0)
 SET PSS("restObject")=$$GETREST^XOBWLIB(PSS("webserviceName"),PSS("server"))
"RTN","PSSHTTP",33,0)
 IF $DATA(^TMP($JOB,"OUT","EXCEPTION"))>0 QUIT 0
"RTN","PSSHTTP",34,0)
 ;
"RTN","PSSHTTP",35,0)
 ; Insert XML as parameter
"RTN","PSSHTTP",36,0)
 DO PSS("restObject").InsertFormData(PSS("parameterName"),PSS("parameterValue"))
"RTN","PSSHTTP",37,0)
 IF $DATA(^TMP($JOB,"OUT","EXCEPTION"))>0 QUIT 0
"RTN","PSSHTTP",38,0)
 ;
"RTN","PSSHTTP",39,0)
 ; Execute HTTP Post method
"RTN","PSSHTTP",40,0)
 SET PSS("postResult")=$$POST^XOBWLIB(PSS("restObject"),PSS("path"),.PSSERR)
"RTN","PSSHTTP",41,0)
 IF $DATA(^TMP($JOB,"OUT","EXCEPTION"))>0 QUIT 0
"RTN","PSSHTTP",42,0)
 ;
"RTN","PSSHTTP",43,0)
 DO:PSS("postResult")
"RTN","PSSHTTP",44,0)
 . SET PSS("result")=##class(gov.va.med.pre.ws.XMLHandler).getHandleToXmlDoc(PSS("restObject").HttpResponse.Data, .DOCHAND)
"RTN","PSSHTTP",45,0)
 . QUIT
"RTN","PSSHTTP",46,0)
 ;
"RTN","PSSHTTP",47,0)
 DO:'PSS("postResult")
"RTN","PSSHTTP",48,0)
 . SET ^TMP($JOB,"OUT","EXCEPTION")="Unable to make http request."
"RTN","PSSHTTP",49,0)
 . SET PSS("result")=0
"RTN","PSSHTTP",50,0)
 . QUIT
"RTN","PSSHTTP",51,0)
 ;
"RTN","PSSHTTP",52,0)
 QUIT PSS("result")
"RTN","PSSHTTP",53,0)
 ;;
"RTN","PSSHTTP",54,0)
ERROR ;
"RTN","PSSHTTP",55,0)
 ; @DESC Handles error during request to PEPS via webservice.
"RTN","PSSHTTP",56,0)
 ;
"RTN","PSSHTTP",57,0)
 ; Depends on GLOBAL variable PSSERR to be set in previous call.
"RTN","PSSHTTP",58,0)
 ;
"RTN","PSSHTTP",59,0)
 ; @RETURNS Nothing. Value store in global.
"RTN","PSSHTTP",60,0)
 ;
"RTN","PSSHTTP",61,0)
 NEW ERRARRAY
"RTN","PSSHTTP",62,0)
 ;
"RTN","PSSHTTP",63,0)
 ; Get error object from Error Object Factory
"RTN","PSSHTTP",64,0)
 IF $GET(PSSERR)="" SET PSSERR=$$EOFAC^XOBWLIB()
"RTN","PSSHTTP",65,0)
 ; Store the error object in the error array
"RTN","PSSHTTP",66,0)
 DO ERR2ARR^XOBWLIB(PSSERR,.ERRARRAY)
"RTN","PSSHTTP",67,0)
 ;
"RTN","PSSHTTP",68,0)
 ; Parse out the error text and store in global
"RTN","PSSHTTP",69,0)
 SET ^TMP($JOB,"OUT","EXCEPTION")=$$GETTEXT(.ERRARRAY)
"RTN","PSSHTTP",70,0)
 I $G(PSSFDBRT),$D(^TMP($JOB,"OUT","EXCEPTION")) S PSSOUT(0)="-1^"_^TMP($JOB,"OUT","EXCEPTION") K ^TMP($JOB,"OUT","EXCEPTION")
"RTN","PSSHTTP",71,0)
 ;
"RTN","PSSHTTP",72,0)
 ; Set ecode to empty to return to calling function
"RTN","PSSHTTP",73,0)
 SET $ECODE=""
"RTN","PSSHTTP",74,0)
 ;
"RTN","PSSHTTP",75,0)
 QUIT
"RTN","PSSHTTP",76,0)
 ;;
"RTN","PSSHTTP",77,0)
GETTEXT(ERRARRAY) ;
"RTN","PSSHTTP",78,0)
 ; @DESC Gets the error text from the array
"RTN","PSSHTTP",79,0)
 ;
"RTN","PSSHTTP",80,0)
 ; @ERRARRAY Error array stores error in format defined by web service product.
"RTN","PSSHTTP",81,0)
 ;
"RTN","PSSHTTP",82,0)
 ; @RETURNS Error info as a single string
"RTN","PSSHTTP",83,0)
 ;
"RTN","PSSHTTP",84,0)
 NEW PSS
"RTN","PSSHTTP",85,0)
 ;
"RTN","PSSHTTP",86,0)
 ; Loop through the text subscript of error array and concatenate
"RTN","PSSHTTP",87,0)
 SET PSS("errorText")=""
"RTN","PSSHTTP",88,0)
 SET PSS("I")=""
"RTN","PSSHTTP",89,0)
 FOR  SET PSS("I")=$ORDER(ERRARRAY("text",PSS("I"))) QUIT:PSS("I")=""  DO
"RTN","PSSHTTP",90,0)
 . SET PSS("errorText")=PSS("errorText")_ERRARRAY("text",PSS("I"))
"RTN","PSSHTTP",91,0)
 . QUIT
"RTN","PSSHTTP",92,0)
 ;
"RTN","PSSHTTP",93,0)
 QUIT PSS("errorText")
"RTN","PSSHTTP",94,0)
 ;;
"RTN","PSSJEEU")
0^4^B13608450
"RTN","PSSJEEU",1,0)
PSSJEEU ;BIR/CML3,WRT-EXTERNAL ENTRIES UTILITY ; 09/16/97 10:04
"RTN","PSSJEEU",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**24,47,160**;9/30/97;Build 76
"RTN","PSSJEEU",3,0)
 ;
"RTN","PSSJEEU",4,0)
 ;Reference to ^SC(IEN,0 supported by DBIA #10040
"RTN","PSSJEEU",5,0)
 ;
"RTN","PSSJEEU",6,0)
ENSV ; schedule validation
"RTN","PSSJEEU",7,0)
 N PSSPKG
"RTN","PSSJEEU",8,0)
 I $D(PSJPP) K PSSPKG S PSSPKG=$$FIND1^DIC(9.4,"","O",PSJPP,"C")
"RTN","PSSJEEU",9,0)
 K PSJAT,PSJM I $S('$D(PSJPP):1,PSJPP="":1,PSJPP?.E1C.E:1,1:'$G(PSSPKG)) Q
"RTN","PSSJEEU",10,0)
 Q:$D(PSJX)[0  I $D(PSJW),$S('PSJW:1,1:'$D(^SC(PSJW,0))) K PSJW
"RTN","PSSJEEU",11,0)
 N D,DIC,DIE,Q,QX,SDW,SWD,X,X0,X1,X2,XT,Y,Z D EN^PSSJSV Q
"RTN","PSSJEEU",12,0)
 ;
"RTN","PSSJEEU",13,0)
ENSVI ; standard schedule inquire
"RTN","PSSJEEU",14,0)
 N PSSPKG
"RTN","PSSJEEU",15,0)
 I $D(PSJPP) K PSSPKG S PSSPKG=$$FIND1^DIC(9.4,"","O","PSJPP","C")
"RTN","PSSJEEU",16,0)
 Q:$S('$D(PSJPP):1,PSJPP="":1,PSJPP?.E1C.E:1,1:'$G(PSSPKG))  D ENI^PSSJSV0
"RTN","PSSJEEU",17,0)
 Q
"RTN","PSSJEEU",18,0)
 ;
"RTN","PSSJEEU",19,0)
ENSPU ; schedule processor (count)
"RTN","PSSJEEU",20,0)
 K PSJC S PSJC=-1 I $S('$D(PSJAT):1,'$D(PSJM):1,'$D(PSJSCH):1,'$D(PSJSD):1,1:'$D(PSJFD)) Q
"RTN","PSSJEEU",21,0)
 S:'$D(PSJOSD) PSJOSD=PSJSD S:'$D(PSJOFD) PSJOFD=PSJFD N AM,CD,H,HCD,I,J,M,MID,OD,PDL,PLSD,ST,Q,QQ,WD,WDT,WS,WS1,X,X1,X2,XX D EN^PSSJSPU Q
"RTN","PSSJEEU",22,0)
 ;
"RTN","PSSJEEU",23,0)
ENPSJSE ; schedule edit for Inpatient Meds
"RTN","PSSJEEU",24,0)
 S PSJPP="PSJ" N PSSTSVZP,PSSTSVXP,PSSTSVXX,PSSTSVYY,PSSTSVZZ,PSSTSVZ1,PSSTSVX1,PSSTSVX2,PSSTSVY1,PSSTSVZ2
"RTN","PSSJEEU",25,0)
 ;
"RTN","PSSJEEU",26,0)
ENSE ; schedule edit
"RTN","PSSJEEU",27,0)
 N PSSPKG
"RTN","PSSJEEU",28,0)
 I $D(PSJPP) K PSSPKG S PSSPKG=$$FIND1^DIC(9.4,"","O",PSJPP,"C")
"RTN","PSSJEEU",29,0)
 I $S('$D(PSJPP):1,PSJPP="":1,PSJPP?.E1C.E:1,1:'$G(PSSPKG)) Q
"RTN","PSSJEEU",30,0)
 I $D(PSJW),$S('PSJW:1,1:'$D(^SC(PSJW,0))) K PSJW
"RTN","PSSJEEU",31,0)
 F FQ=0:0 K DIC S DIC="^PS(51.1,",DIC(0)="QEASL",DLAYGO=51.1,DIC("DR")="4////"_PSJPP,DIC("W")="D DICW^PSSJSV0",D="AP"_PSJPP W ! D IX^DIC K DIC Q:Y'>0   D
"RTN","PSSJEEU",32,0)
 .S DIE="^PS(51.1,",DA=+Y,DR="[PSSJ "_$S(PSJPP="PSJ":"",1:"EXT ")_"SCHEDULE EDIT]" D ^DIE K DA,DIE,DR,PSJS
"RTN","PSSJEEU",33,0)
 ;* I $D(PSJHLDA) S X=$O(^ORD(101,"B","PS EVSEND SCH",0))_";ORD(101," D:X EN1^XQOR
"RTN","PSSJEEU",34,0)
 I $D(PSJHLDA) D EN2^PSSHLSCH
"RTN","PSSJEEU",35,0)
 K:PSJPP="PSJ" PSJPP K D0,DI,DISYS,DQ,FQ,X,Y Q
"RTN","PSSJEEU",36,0)
 ;
"RTN","PSSJEEU",37,0)
ENDSD ; default start date
"RTN","PSSJEEU",38,0)
 I $S('$D(PSJSCH):1,'$D(PSJAT):1,1:'$D(PSJTS)) S PSJX="" Q
"RTN","PSSJEEU",39,0)
 D ENDSD^PSSJSPU0 Q
"RTN","PSSJEEU",40,0)
 ;
"RTN","PSSJEEU",41,0)
ENPSJSHE ; shift edit for Inpatient Meds
"RTN","PSSJEEU",42,0)
 S PSJPP="PSJ"
"RTN","PSSJEEU",43,0)
 ;
"RTN","PSSJEEU",44,0)
ENSHE ; shift edit
"RTN","PSSJEEU",45,0)
 N PSSPKG
"RTN","PSSJEEU",46,0)
 I $D(PSJPP) K PSSPKG S PSSPKG=$$FIND1^DIC(9.4,"","O",PSJPP,"C")
"RTN","PSSJEEU",47,0)
 I $S('$D(PSJPP):1,PSJPP="":1,PSJPP'?.ANP:1,1:'$G(PSSPKG)) Q
"RTN","PSSJEEU",48,0)
 I $D(PSJW),$S('PSJW:1,1:'$D(^SC(PSJW,0))) K PSJW
"RTN","PSSJEEU",49,0)
 F FQ=0:0 K DIC S DIC="^PS(51.15,",DIC(0)="AEQLS",DLAYGO=51.15,DIC("DR")="4////"_PSJPP,D="AP"_PSJPP W ! D IX^DIC K DIC Q:Y'>0  S DIE="^PS(51.15,",DA=+Y,DR="[PSJ SHIFT EDIT]" D ^DIE K DA,DIE,DR
"RTN","PSSJEEU",50,0)
 K FQ,PSSPKG,X,Y Q
"RTN","PSSJEEU",51,0)
 ;
"RTN","PSSJEEU",52,0)
ENATV ; validate admin times
"RTN","PSSJEEU",53,0)
 D ENCHK^PSSJSV Q
"RTN","PSSJEEU",54,0)
 ;
"RTN","PSSJEEU",55,0)
ENSHV ;
"RTN","PSSJEEU",56,0)
 D ENSHV^PSSJSV
"RTN","PSSJEEU",57,0)
 Q
"RTN","PSSJEEU",58,0)
OTHLAN ;entry point to add translations for another language
"RTN","PSSJEEU",59,0)
 K DIK,DIC,DIRUT,DIE,DA,DR
"RTN","PSSJEEU",60,0)
 S DIE="^PS(59.7,",DA=1,DR="40.2;S:'$G(X) Y=""@1"";40.21:40.45;@1"
"RTN","PSSJEEU",61,0)
 D ^DIE K DIE,DA,X,Y,DR,DIC,D,D0,DDER,DI,DQ,%
"RTN","PSSJEEU",62,0)
 Q
"RTN","PSSJEEU",63,0)
 ;
"RTN","PSSJEEU",64,0)
 ;
"RTN","PSSJEEU",65,0)
TEMSF ;Template saves, called form the PSSJ SCHEDULE EDIT template
"RTN","PSSJEEU",66,0)
 I $D(X) S PSSTSVXX=X
"RTN","PSSJEEU",67,0)
 I $D(Y) S PSSTSVYY=Y
"RTN","PSSJEEU",68,0)
 I $D(PSJS) S PSSTSVZZ=PSJS
"RTN","PSSJEEU",69,0)
 I $D(ZPSJS) S PSSTSVZP=ZPSJS
"RTN","PSSJEEU",70,0)
 I $D(XPSJS) S PSSTSVXP=XPSJS
"RTN","PSSJEEU",71,0)
 Q
"RTN","PSSJEEU",72,0)
 ;
"RTN","PSSJEEU",73,0)
TEMSFR ;Template restores called from the PSSJ SCHEDULE EDIT template
"RTN","PSSJEEU",74,0)
 K X,Y,PSJS,ZPSJS,XPSJS
"RTN","PSSJEEU",75,0)
 I $D(PSSTSVXX) S X=PSSTSVXX
"RTN","PSSJEEU",76,0)
 I $D(PSSTSVYY) S Y=PSSTSVYY
"RTN","PSSJEEU",77,0)
 I $D(PSSTSVZZ) S PSJS=PSSTSVZZ
"RTN","PSSJEEU",78,0)
 I $D(PSSTSVZP) S ZPSJS=PSSTSVZP
"RTN","PSSJEEU",79,0)
 I $D(PSSTSVXP) S XPSJS=PSSTSVXP
"RTN","PSSJEEU",80,0)
 Q
"RTN","PSSJEEU",81,0)
 ;
"RTN","PSSJEEU",82,0)
 ;
"RTN","PSSJEEU",83,0)
TEMSFX ;Template saves, called form the PSSJ SCHEDULE EDIT template
"RTN","PSSJEEU",84,0)
 I $D(X) S PSSTSVX1=X
"RTN","PSSJEEU",85,0)
 I $D(Y) S PSSTSVY1=Y
"RTN","PSSJEEU",86,0)
 I $D(PSJS) S PSSTSVZ1=PSJS
"RTN","PSSJEEU",87,0)
 I $D(ZPSJS) S PSSTSVZ2=ZPSJS
"RTN","PSSJEEU",88,0)
 I $D(XPSJS) S PSSTSVX2=XPSJS
"RTN","PSSJEEU",89,0)
 Q
"RTN","PSSJEEU",90,0)
 ;
"RTN","PSSJEEU",91,0)
TEMSFRX ;Template restores called from the PSSJ SCHEDULE EDIT template
"RTN","PSSJEEU",92,0)
 K X,Y,PSJS,ZPSJS,XPSJS
"RTN","PSSJEEU",93,0)
 I $D(PSSTSVX1) S X=PSSTSVX1
"RTN","PSSJEEU",94,0)
 I $D(PSSTSVY1) S Y=PSSTSVY1
"RTN","PSSJEEU",95,0)
 I $D(PSSTSVZ1) S PSJS=PSSTSVZ1
"RTN","PSSJEEU",96,0)
 I $D(PSSTSVZ2) S ZPSJS=PSSTSVZ2
"RTN","PSSJEEU",97,0)
 I $D(PSSTSVX2) S XPSJS=PSSTSVX2
"RTN","PSSJEEU",98,0)
 Q
"RTN","PSSSCHRP")
0^3^B109553620
"RTN","PSSSCHRP",1,0)
PSSSCHRP ;BIR/RTR-Schedule Report ;07/03/07
"RTN","PSSSCHRP",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**129,160**;9/30/07;Build 76
"RTN","PSSSCHRP",3,0)
 ;
"RTN","PSSSCHRP",4,0)
 ;
"RTN","PSSSCHRP",5,0)
 ;
"RTN","PSSSCHRP",6,0)
EN ;Prompts for Administration File Schedule Report
"RTN","PSSSCHRP",7,0)
 W !!,"This report displays entries from the ADMINISTRATION SCHEDULE (#51.1) File."
"RTN","PSSSCHRP",8,0)
 W !,"It can be run for all Schedules, or only Schedules without a FREQUENCY"
"RTN","PSSSCHRP",9,0)
 W !,"(IN MINUTES). Only schedules with a PSJ Package Prefix will be displayed, since"
"RTN","PSSSCHRP",10,0)
 W !,"they are the only schedules the software will look at when deriving a FREQUENCY"
"RTN","PSSSCHRP",11,0)
 W !,"(IN MINUTES) for the daily dosage checks. If a FREQUENCY (IN MINUTES) cannot",!,"be determined for an order, the daily dosage check cannot occur for that order."
"RTN","PSSSCHRP",12,0)
 N DIR,PSSAFRP,PSSALONG,Y,X,DTOUT,DUOUT,DIRUT,DIROUT,IOP,%ZIS,POP,ZTRTN,ZTDESC,ZTSAVE,ZTSK
"RTN","PSSSCHRP",13,0)
 K DIR,Y S DIR(0)="SO^A:All Schedules;O:Only Schedules with a missing frequency",DIR("A")="Print All Schedules, or Only Schedules without a frequency",DIR("B")="A"
"RTN","PSSSCHRP",14,0)
 S DIR("?")=" ",DIR("?",1)=" ",DIR("?",2)="Enter 'A' to see all Administration Schedules, enter 'O' to see only",DIR("?",3)="those Administration Schedules without data in the FREQUENCY (IN MINUTES)"
"RTN","PSSSCHRP",15,0)
 S DIR("?",4)="(#2) Field. A FREQUENCY (IN MINUTES) must be derived from a Schedule",DIR("?",5)="for the daily dosage check to occur for an order."
"RTN","PSSSCHRP",16,0)
 W ! D ^DIR K DIR I $D(DUOUT)!($D(DTOUT)) D MESS K DIR,Y S DIR(0)="E",DIR("A")="Press Return to continue" D ^DIR K DIR Q
"RTN","PSSSCHRP",17,0)
 I Y'="A",Y'="O" D MESS K DIR,Y S DIR(0)="E",DIR("A")="Press Return to continue" D ^DIR K DIR Q
"RTN","PSSSCHRP",18,0)
 S PSSAFRP=Y
"RTN","PSSSCHRP",19,0)
 K DIR,Y S DIR(0)="SO^80:80 Column;132:132 Column",DIR("A")="Print report in 80 or 132 column format",DIR("B")="80"
"RTN","PSSSCHRP",20,0)
 S DIR("?")=" ",DIR("?",1)="Enter 80 to print the report in an 80 column format,",DIR("?",2)="Enter 132 to print the report in an 132 column format."
"RTN","PSSSCHRP",21,0)
 W ! D ^DIR K DIR I $D(DUOUT)!($D(DTOUT)) D MESS K DIR,Y S DIR(0)="E",DIR("A")="Press Return to continue" D ^DIR K DIR Q
"RTN","PSSSCHRP",22,0)
 I Y'="80",Y'="132" D MESS K DIR,Y S DIR(0)="E",DIR("A")="Press Return to continue" D ^DIR K DIR Q
"RTN","PSSSCHRP",23,0)
 S PSSALONG=Y W !
"RTN","PSSSCHRP",24,0)
 K IOP,%ZIS,POP S %ZIS="QM" D ^%ZIS I $G(POP)>0 D MESS K DIR,Y S DIR(0)="E",DIR("A")="Press Return to continue" D ^DIR K DIR,IOP,%ZIS,POP Q
"RTN","PSSSCHRP",25,0)
 I $D(IO("Q")) S ZTRTN="START^PSSSCHRP",ZTDESC="Administration Schedule Report",ZTSAVE("PSSAFRP")="",ZTSAVE("PSSALONG")="" D ^%ZTLOAD K %ZIS W !!,"Report queued to print.",! K DIR,Y S DIR(0)="E",DIR("A")="Press Return to continue" D ^DIR K DIR Q
"RTN","PSSSCHRP",26,0)
 ;
"RTN","PSSSCHRP",27,0)
 ;
"RTN","PSSSCHRP",28,0)
START ;Print Administration Schedule File report
"RTN","PSSSCHRP",29,0)
 U IO
"RTN","PSSSCHRP",30,0)
 N PSSAFCT,PSSAFOUT,PSSAFDEV,PSSAFLIN,PSSAFQ,PSSAFQEN,PSSAFQS,PSSAFQL,PSSAFQQ,PSSAFQC,PSSAFAA,PSSAFAL,PSSWAS,PSSWASEN,PSSWASNM,PSSWASAD,PSSWASLL,PSSTPE
"RTN","PSSSCHRP",31,0)
 N PSSAFRA,PSSAFRAA,PSSAFROP,PSSAFQL,PSSAFROO,PSSAFRFL,PSSWASX,PSSAFZZZ,PSSAFABC,PSSAFNOF
"RTN","PSSSCHRP",32,0)
 S (PSSAFOUT,PSSAFNOF)=0,PSSAFDEV=$S($E(IOST,1,2)'="C-":"P",1:"C"),PSSAFCT=1
"RTN","PSSSCHRP",33,0)
 K PSSAFLIN S:PSSALONG=132 $P(PSSAFLIN,"-",130)="" S:PSSALONG=80 $P(PSSAFLIN,"-",78)=""
"RTN","PSSSCHRP",34,0)
 D HD
"RTN","PSSSCHRP",35,0)
 S PSSAFQ="" F  S PSSAFQ=$O(^PS(51.1,"B",PSSAFQ)) Q:PSSAFQ=""!(PSSAFOUT)  D
"RTN","PSSSCHRP",36,0)
 .F PSSAFQEN=0:0 S PSSAFQEN=$O(^PS(51.1,"B",PSSAFQ,PSSAFQEN)) Q:'PSSAFQEN!(PSSAFOUT)  D
"RTN","PSSSCHRP",37,0)
 ..K PSSAFRA,PSSAFRAA,PSSAFROP,PSSAFQS,PSSAFROP,PSSAFROO,PSSAFQL,PSSWASX,PSSAFQC,PSSAFQQ
"RTN","PSSSCHRP",38,0)
 ..S PSSAFRA=PSSAFQEN_","
"RTN","PSSSCHRP",39,0)
 ..D GETS^DIQ(51.1,PSSAFRA,".01;1;2;4;8;8.1;9;10","E","PSSAFRAA")
"RTN","PSSSCHRP",40,0)
 ..I $G(PSSAFRAA(51.1,PSSAFRA,4,"E"))'="PSJ" Q
"RTN","PSSSCHRP",41,0)
 ..I PSSAFRP="O",$G(PSSAFRAA(51.1,PSSAFRA,2,"E")) Q
"RTN","PSSSCHRP",42,0)
 ..S PSSAFNOF=1
"RTN","PSSSCHRP",43,0)
 ..W !!,$G(PSSAFRAA(51.1,PSSAFRA,.01,"E"))
"RTN","PSSSCHRP",44,0)
 ..I ($Y+5)>IOSL D HD Q:PSSAFOUT
"RTN","PSSSCHRP",45,0)
 ..S PSSAFQS=$G(PSSAFRAA(51.1,PSSAFRA,1,"E"))
"RTN","PSSSCHRP",46,0)
 ..W !?5,"STANDARD ADMINISTRATION TIMES: " D  K PSSAFAA Q:PSSAFOUT
"RTN","PSSSCHRP",47,0)
 ...Q:PSSAFQS=""
"RTN","PSSSCHRP",48,0)
 ...S PSSAFQL=$L(PSSAFQS)
"RTN","PSSSCHRP",49,0)
 ...I PSSALONG=132 D  Q
"RTN","PSSSCHRP",50,0)
 ....I PSSAFQL<96 D  Q
"RTN","PSSSCHRP",51,0)
 .....W PSSAFQS
"RTN","PSSSCHRP",52,0)
 .....I ($Y+5)>IOSL D HD Q:PSSAFOUT
"RTN","PSSSCHRP",53,0)
 ....K PSSAFAA D FORMAT(PSSAFQS,96)
"RTN","PSSSCHRP",54,0)
 ....S PSSAFRFL=0 F PSSAFAL=0:0 S PSSAFAL=$O(PSSAFAA(PSSAFAL)) Q:'PSSAFAL!(PSSAFOUT)  D
"RTN","PSSSCHRP",55,0)
 .....W:'PSSAFRFL ?36,$G(PSSAFAA(PSSAFAL)) W:PSSAFRFL !?36,$G(PSSAFAA(PSSAFAL)) S PSSAFRFL=1
"RTN","PSSSCHRP",56,0)
 .....I ($Y+5)>IOSL D HD Q:PSSAFOUT
"RTN","PSSSCHRP",57,0)
 ...I PSSAFQL<44 D  Q
"RTN","PSSSCHRP",58,0)
 ....W PSSAFQS
"RTN","PSSSCHRP",59,0)
 ....I ($Y+5)>IOSL D HD Q:PSSAFOUT
"RTN","PSSSCHRP",60,0)
 ...K PSSAFAA D FORMAT(PSSAFQS,44)
"RTN","PSSSCHRP",61,0)
 ...S PSSAFRFL=0 F PSSAFAL=0:0 S PSSAFAL=$O(PSSAFAA(PSSAFAL)) Q:'PSSAFAL!(PSSAFOUT)  D
"RTN","PSSSCHRP",62,0)
 ....W:'PSSAFRFL ?36,$G(PSSAFAA(PSSAFAL)) W:PSSAFRFL !?36,$G(PSSAFAA(PSSAFAL)) S PSSAFRFL=1
"RTN","PSSSCHRP",63,0)
 ....I ($Y+5)>IOSL D HD Q:PSSAFOUT
"RTN","PSSSCHRP",64,0)
 ..I ($Y+5)>IOSL D HD Q:PSSAFOUT
"RTN","PSSSCHRP",65,0)
 ..W !?14,"OUTPATIENT EXPANSION: " D
"RTN","PSSSCHRP",66,0)
 ...S PSSAFROP=$G(PSSAFRAA(51.1,PSSAFRA,8,"E"))
"RTN","PSSSCHRP",67,0)
 ...I PSSALONG=132 D  Q
"RTN","PSSSCHRP",68,0)
 ....I $L(PSSAFROP)<96 W PSSAFROP,! Q
"RTN","PSSSCHRP",69,0)
 ....N X,DIWL,DIWR,DIWF S X=PSSAFROP,DIWL=37,DIWR=131,DIWF="W" K ^UTILITY($J,"W") D ^DIWP D ^DIWW K ^UTILITY($J,"W")
"RTN","PSSSCHRP",70,0)
 ...I $L(PSSAFROP)<44 W PSSAFROP,! Q
"RTN","PSSSCHRP",71,0)
 ...N X,DIWL,DIWR,DIWF S X=PSSAFROP,DIWL=37,DIWR=79,DIWF="W" K ^UTILITY($J,"W") D ^DIWP D ^DIWW K ^UTILITY($J,"W")
"RTN","PSSSCHRP",72,0)
 ..I ($Y+5)>IOSL D HD Q:PSSAFOUT  W !
"RTN","PSSSCHRP",73,0)
 ..W ?10,"OTHER LANGUAGE EXPANSION: " D
"RTN","PSSSCHRP",74,0)
 ...S PSSAFROO=$G(PSSAFRAA(51.1,PSSAFRA,8.1,"E"))
"RTN","PSSSCHRP",75,0)
 ...I PSSALONG=132 D  Q
"RTN","PSSSCHRP",76,0)
 ....I $L(PSSAFROO)<96 W PSSAFROO,! Q
"RTN","PSSSCHRP",77,0)
 ....N X,DIWL,DIWR,DIWF S X=PSSAFROO,DIWL=37,DIWR=131,DIWF="W" K ^UTILITY($J,"W") D ^DIWP D ^DIWW K ^UTILITY($J,"W")
"RTN","PSSSCHRP",78,0)
 ...I $L(PSSAFROO)<44 W PSSAFROO,! Q
"RTN","PSSSCHRP",79,0)
 ...N X,DIWL,DIWR,DIWF S X=PSSAFROO,DIWL=37,DIWR=79,DIWF="W" K ^UTILITY($J,"W") D ^DIWP D ^DIWW K ^UTILITY($J,"W")
"RTN","PSSSCHRP",80,0)
 ..;Set PSSAFZZZ=0 if last write had a line feed, PSSAFZZZ=1 if last write did not have a line feed, to use for Schedule Type
"RTN","PSSSCHRP",81,0)
 ..S PSSAFZZZ=0 I ($Y+5)>IOSL D HD S PSSAFZZZ=0 Q:PSSAFOUT
"RTN","PSSSCHRP",82,0)
 ..S PSSAFRFL=0 F PSSWAS=0:0 S PSSWAS=$O(^PS(51.1,PSSAFQEN,1,PSSWAS)) Q:'PSSWAS!(PSSAFOUT)  D
"RTN","PSSSCHRP",83,0)
 ...S PSSWASEN=$P($G(^PS(51.1,PSSAFQEN,1,PSSWAS,0)),"^") Q:'PSSWASEN
"RTN","PSSSCHRP",84,0)
 ...S PSSWASX=PSSWAS_","_PSSAFQEN_"," S PSSWASNM=$$GET1^DIQ(51.11,PSSWASX,".01") Q:PSSWASNM=""
"RTN","PSSSCHRP",85,0)
 ...;PSSARFRL=0 if last Write ended in Line Feed, =1 if Last Write did not end in line feed, for writing Wards
"RTN","PSSSCHRP",86,0)
 ...W:'PSSAFRFL ?30,"WARD: "_PSSWASNM W:PSSAFRFL !?30,"WARD: "_PSSWASNM S (PSSAFZZZ,PSSAFRFL)=1
"RTN","PSSSCHRP",87,0)
 ...I ($Y+5)>IOSL D HD S (PSSAFZZZ,PSSAFRFL)=0 Q:PSSAFOUT
"RTN","PSSSCHRP",88,0)
 ...W !?9,"WARD ADMINISTRATION TIMES: " S (PSSAFZZZ,PSSAFRFL)=1
"RTN","PSSSCHRP",89,0)
 ...S PSSWASAD=$P($G(^PS(51.1,PSSAFQEN,1,PSSWAS,0)),"^",2)
"RTN","PSSSCHRP",90,0)
 ...Q:PSSWASAD=""
"RTN","PSSSCHRP",91,0)
 ...S (PSSWASLL,PSSAFQL)=$L(PSSWASAD)
"RTN","PSSSCHRP",92,0)
 ...I PSSALONG=132 D  Q
"RTN","PSSSCHRP",93,0)
 ....I PSSWASLL<96 D  Q
"RTN","PSSSCHRP",94,0)
 .....W PSSWASAD S (PSSAFZZZ,PSSAFRFL)=1
"RTN","PSSSCHRP",95,0)
 .....I ($Y+5)>IOSL D HD S (PSSAFZZZ,PSSAFRFL)=0 Q:PSSAFOUT
"RTN","PSSSCHRP",96,0)
 ....K PSSAFAA D FORMAT(PSSWASAD,96)
"RTN","PSSSCHRP",97,0)
 ....S PSSAFABC=0 F PSSAFAL=0:0 S PSSAFAL=$O(PSSAFAA(PSSAFAL)) Q:'PSSAFAL!(PSSAFOUT)  D
"RTN","PSSSCHRP",98,0)
 .....W:'PSSAFABC ?36,$G(PSSAFAA(PSSAFAL)) W:PSSAFABC !?36,$G(PSSAFAA(PSSAFAL)) S PSSAFABC=1 S (PSSAFZZZ,PSSAFRFL)=1
"RTN","PSSSCHRP",99,0)
 .....I ($Y+5)>IOSL D HD S (PSSAFZZZ,PSSAFRFL)=0 Q:PSSAFOUT
"RTN","PSSSCHRP",100,0)
 ...I PSSWASLL<37 D  Q
"RTN","PSSSCHRP",101,0)
 ....W PSSWASAD S (PSSAFZZZ,PSSAFRFL)=1
"RTN","PSSSCHRP",102,0)
 ....I ($Y+5)>IOSL D HD S (PSSAFZZZ,PSSAFRFL)=0 Q:PSSAFOUT
"RTN","PSSSCHRP",103,0)
 ...K PSSAFAA D FORMAT(PSSWASAD,44)
"RTN","PSSSCHRP",104,0)
 ...S PSSAFABC=0 F PSSAFAL=0:0 S PSSAFAL=$O(PSSAFAA(PSSAFAL)) Q:'PSSAFAL!(PSSAFOUT)  D
"RTN","PSSSCHRP",105,0)
 ....W:'PSSAFABC ?36,$G(PSSAFAA(PSSAFAL)) W:PSSAFABC !?36,$G(PSSAFAA(PSSAFAL)) S PSSAFABC=1 S (PSSAFZZZ,PSSAFRFL)=1
"RTN","PSSSCHRP",106,0)
 ....I ($Y+5)>IOSL D HD S (PSSAFZZZ,PSSAFRFL)=0 Q:PSSAFOUT
"RTN","PSSSCHRP",107,0)
 ..Q:PSSAFOUT
"RTN","PSSSCHRP",108,0)
 ..K PSSAFAA
"RTN","PSSSCHRP",109,0)
 ..I ($Y+5)>IOSL D HD S (PSSAFZZZ,PSSAFRFL)=0 Q:PSSAFOUT
"RTN","PSSSCHRP",110,0)
 ..K PSSTPE S PSSTPE=$$GET1^DIQ(51.1,PSSAFQEN_",",5)
"RTN","PSSSCHRP",111,0)
 ..W:'PSSAFZZZ ?21,"SCHEDULE TYPE: "_$G(PSSTPE) W:PSSAFZZZ !?21,"SCHEDULE TYPE: "_$G(PSSTPE)
"RTN","PSSSCHRP",112,0)
 ..I ($Y+5)>IOSL D HD Q:PSSAFOUT
"RTN","PSSSCHRP",113,0)
 ..W !?12,"FREQUENCY (IN MINUTES): "_$G(PSSAFRAA(51.1,PSSAFRA,2,"E"))
"RTN","PSSSCHRP",114,0)
 ..I ($Y+5)>IOSL D HD Q:PSSAFOUT
"RTN","PSSSCHRP",115,0)
 ..W !?6,"EXCLUDE FROM ALL DOSE CHECKS: "_$G(PSSAFRAA(51.1,PSSAFRA,9,"E"))
"RTN","PSSSCHRP",116,0)
 ..I ($Y+5)>IOSL D HD Q:PSSAFOUT
"RTN","PSSSCHRP",117,0)
 ..W !?5,"EXCLUDE FROM DAILY DOSE CHECK: "_$G(PSSAFRAA(51.1,PSSAFRA,10,"E"))
"RTN","PSSSCHRP",118,0)
 ..I ($Y+5)>IOSL D HD Q:PSSAFOUT
"RTN","PSSSCHRP",119,0)
 ;
"RTN","PSSSCHRP",120,0)
END ;
"RTN","PSSSCHRP",121,0)
 I '$G(PSSAFOUT),PSSAFRP="O",'$G(PSSAFNOF) W !!,"No schedules found without frequencies.",!
"RTN","PSSSCHRP",122,0)
 I $G(PSSAFDEV)="P"  W !!,"End of Report.",!
"RTN","PSSSCHRP",123,0)
 I '$G(PSSAFOUT),$G(PSSAFDEV)="C" W !!,"End of Report." K DIR S DIR(0)="E",DIR("A")="Press Return to continue" D ^DIR K DIR
"RTN","PSSSCHRP",124,0)
 I $G(PSSAFDEV)="C" W !
"RTN","PSSSCHRP",125,0)
 E  W @IOF
"RTN","PSSSCHRP",126,0)
 K PSSAFRP,PSSALONG
"RTN","PSSSCHRP",127,0)
 D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","PSSSCHRP",128,0)
 Q
"RTN","PSSSCHRP",129,0)
 ;
"RTN","PSSSCHRP",130,0)
 ;
"RTN","PSSSCHRP",131,0)
HD ;Report Header
"RTN","PSSSCHRP",132,0)
 I $G(PSSAFDEV)="C",$G(PSSAFCT)'=1 W ! K DIR,Y S DIR(0)="E",DIR("A")="Press Return to continue, '^' to exit" D ^DIR K DIR I 'Y S PSSAFOUT=1 Q
"RTN","PSSSCHRP",133,0)
 W @IOF
"RTN","PSSSCHRP",134,0)
 I PSSAFRP="A" W !,"ADMINISTRATION SCHEDULE FILE REPORT (All)"
"RTN","PSSSCHRP",135,0)
 I PSSAFRP="O" W !,"ADMINISTRATION SCHEDULE WITHOUT FREQUENCY REPORT"
"RTN","PSSSCHRP",136,0)
 W ?$S(PSSALONG=80:68,1:120),"PAGE: "_PSSAFCT,!,PSSAFLIN,! S PSSAFCT=PSSAFCT+1
"RTN","PSSSCHRP",137,0)
 Q
"RTN","PSSSCHRP",138,0)
 ;
"RTN","PSSSCHRP",139,0)
 ;
"RTN","PSSSCHRP",140,0)
MESS ;
"RTN","PSSSCHRP",141,0)
 W !!,"Nothing queued to print.",!
"RTN","PSSSCHRP",142,0)
 Q
"RTN","PSSSCHRP",143,0)
 ;
"RTN","PSSSCHRP",144,0)
 ;
"RTN","PSSSCHRP",145,0)
FORMAT(PSSAFQC,PSSAFQQ) ;Format print arrays, breaking on the "-" character
"RTN","PSSSCHRP",146,0)
 ;PSSAFQC = Administration Times text
"RTN","PSSSCHRP",147,0)
 ;PSSAFQQ = Character at which to break
"RTN","PSSSCHRP",148,0)
 N PSSAFAC,PSSAFAB,PSSAFAZ,PSSAFAD,PSSAFAF,PSSAFAX
"RTN","PSSSCHRP",149,0)
 S PSSAFAC=1,PSSAFAZ=0 K PSSAFAB
"RTN","PSSSCHRP",150,0)
 F PSSAFAD=1:1:PSSAFQL I $E(PSSAFQC,PSSAFAD)="-" S PSSAFAB(PSSAFAC)=$P(PSSAFQC,"-",PSSAFAC)_"-" S PSSAFAC=PSSAFAC+1,PSSAFAZ=PSSAFAD+1
"RTN","PSSSCHRP",151,0)
 I PSSAFAZ<PSSAFAD S:PSSAFAZ=0 PSSAFAZ=1 S PSSAFAB(PSSAFAC)=$E(PSSAFQC,PSSAFAZ,PSSAFQL) S PSSAFAC=PSSAFAC+1
"RTN","PSSSCHRP",152,0)
 S PSSAFAF=1
"RTN","PSSSCHRP",153,0)
 F PSSAFAX=1:1:PSSAFAC D
"RTN","PSSSCHRP",154,0)
 .Q:'$D(PSSAFAB(PSSAFAX))
"RTN","PSSSCHRP",155,0)
 .I '$D(PSSAFAA(PSSAFAF)) S PSSAFAA(PSSAFAF)=PSSAFAB(PSSAFAX) Q
"RTN","PSSSCHRP",156,0)
 .I $L(PSSAFAA(PSSAFAF))+$L(PSSAFAB(PSSAFAX))<PSSAFQQ S PSSAFAA(PSSAFAF)=PSSAFAA(PSSAFAF)_PSSAFAB(PSSAFAX) Q
"RTN","PSSSCHRP",157,0)
 .S PSSAFAF=PSSAFAF+1 S PSSAFAA(PSSAFAF)=PSSAFAB(PSSAFAX)
"RTN","PSSSCHRP",158,0)
 Q
"RTN","PSSSCHRP",159,0)
 ;
"RTN","PSSSCHRP",160,0)
 ;
"RTN","PSSSCHRP",161,0)
TRAIL ;Trailing spaces Report
"RTN","PSSSCHRP",162,0)
 W !!,"This report displays active, multi-ingredient entries from the DRUG (#50) File"
"RTN","PSSSCHRP",163,0)
 W !,"with Local Possible Dosages defined, with trailing spaces in the name. Entries"
"RTN","PSSSCHRP",164,0)
 W !,"not matched to National Drug File are also included if there are trailing"
"RTN","PSSSCHRP",165,0)
 W !,"spaces. Trailing spaces can potentially cause the Dose check to fail, and"
"RTN","PSSSCHRP",166,0)
 W !,"also possibly cause the conjunction and drug name to become part of the Dosage.",!
"RTN","PSSSCHRP",167,0)
 N DIR,Y,X,DTOUT,DUOUT,DIRUT,DIROUT,IOP,%ZIS,POP,ZTRTN,ZTDESC,ZTSAVE,ZTSK
"RTN","PSSSCHRP",168,0)
 K IOP,%ZIS,POP S %ZIS="QM" D ^%ZIS I $G(POP)>0 D MESS K DIR,Y S DIR(0)="E",DIR("A")="Press Return to continue" D ^DIR K DIR,IOP,%ZIS,POP Q
"RTN","PSSSCHRP",169,0)
 I $D(IO("Q")) S ZTRTN="STRAIL^PSSSCHRP",ZTDESC="Trailing Spaces Report" D ^%ZTLOAD K %ZIS W !!,"Report queued to print.",! K DIR,Y S DIR(0)="E",DIR("A")="Press Return to continue" D ^DIR K DIR Q
"RTN","PSSSCHRP",170,0)
 ;
"RTN","PSSSCHRP",171,0)
 ;
"RTN","PSSSCHRP",172,0)
STRAIL ;Print Trailing spaces report
"RTN","PSSSCHRP",173,0)
 U IO
"RTN","PSSSCHRP",174,0)
 N PSSTRSOT,PSSTRSLG,PSSTRSFL,PSSTRSDV,PSSTRSPG,PSSTRSAA,PSSTRSBB,PSSTRSNM,PSSTRSIN,PSSTRSST,PSSTRSUN,PSSTRSN1,PSSTRSN3,PSSTRSN9
"RTN","PSSSCHRP",175,0)
 S (PSSTRSOT,PSSTRSFL)=0,PSSTRSDV=$S($E(IOST,1,2)'="C-":"P",1:"C"),PSSTRSPG=1
"RTN","PSSSCHRP",176,0)
 K PSSTRSLG S $P(PSSTRSLG,"-",78)=""
"RTN","PSSSCHRP",177,0)
 D STHD
"RTN","PSSSCHRP",178,0)
 S PSSTRSAA="" F  S PSSTRSAA=$O(^PSDRUG("B",PSSTRSAA)) Q:PSSTRSAA=""!(PSSTRSOT)  D
"RTN","PSSSCHRP",179,0)
 .F PSSTRSBB=0:0 S PSSTRSBB=$O(^PSDRUG("B",PSSTRSAA,PSSTRSBB)) Q:'PSSTRSBB!(PSSTRSOT)  D:$O(^PSDRUG(PSSTRSBB,"DOS2",0))
"RTN","PSSSCHRP",180,0)
 ..S PSSTRSNM=$P($G(^PSDRUG(PSSTRSBB,0)),"^"),PSSTRSIN=$P($G(^PSDRUG(PSSTRSBB,"I")),"^")
"RTN","PSSSCHRP",181,0)
 ..I $E(PSSTRSNM,$L(PSSTRSNM))'=" " Q
"RTN","PSSSCHRP",182,0)
 ..I PSSTRSIN,PSSTRSIN<DT Q
"RTN","PSSSCHRP",183,0)
 ..S PSSTRSN1=$P($G(^PSDRUG(PSSTRSBB,"ND")),"^"),PSSTRSN3=$P($G(^PSDRUG(PSSTRSBB,"ND")),"^",3)
"RTN","PSSSCHRP",184,0)
 ..I 'PSSTRSN1!('PSSTRSN3) W !,PSSTRSNM_"   ("_PSSTRSBB_")" S PSSTRSFL=1 D:($Y+5)>IOSL STHD Q
"RTN","PSSSCHRP",185,0)
 ..S PSSTRSST=$P($G(^PSDRUG(PSSTRSBB,"DOS")),"^"),PSSTRSUN=$P($G(^PSDRUG(PSSTRSBB,"DOS")),"^",2)
"RTN","PSSSCHRP",186,0)
 ..I PSSTRSST'="" Q
"RTN","PSSSCHRP",187,0)
 ..K PSSTRSN9 I PSSTRSST=""!('PSSTRSUN) S PSSTRSN9=$$DFSU^PSNAPIS(PSSTRSN1,PSSTRSN3)
"RTN","PSSSCHRP",188,0)
 ..S PSSTRSST=$P($G(PSSTRSN9),"^",4) I $$STST() Q
"RTN","PSSSCHRP",189,0)
 ..W !,PSSTRSNM_"   ("_PSSTRSBB_")" S PSSTRSFL=1 I ($Y+5)>IOSL D STHD
"RTN","PSSSCHRP",190,0)
 ;
"RTN","PSSSCHRP",191,0)
 ;
"RTN","PSSSCHRP",192,0)
STEND ;
"RTN","PSSSCHRP",193,0)
 I '$G(PSSTRSOT),'$G(PSSTRSFL) W !!,"No drug names found.",!
"RTN","PSSSCHRP",194,0)
 I $G(PSSTRSDV)="P"  W !!,"End of Report.",!
"RTN","PSSSCHRP",195,0)
 I '$G(PSSTRSOT),$G(PSSTRSDV)="C" W !!,"End of Report." K DIR S DIR(0)="E",DIR("A")="Press Return to continue" D ^DIR K DIR
"RTN","PSSSCHRP",196,0)
 I $G(PSSTRSDV)="C" W !
"RTN","PSSSCHRP",197,0)
 E  W @IOF
"RTN","PSSSCHRP",198,0)
 D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","PSSSCHRP",199,0)
 Q
"RTN","PSSSCHRP",200,0)
 ;
"RTN","PSSSCHRP",201,0)
 ;
"RTN","PSSSCHRP",202,0)
STHD ;Report Header
"RTN","PSSSCHRP",203,0)
 I $G(PSSTRSDV)="C",$G(PSSTRSPG)'=1 W ! K DIR,Y S DIR(0)="E",DIR("A")="Press Return to continue, '^' to exit" D ^DIR K DIR I 'Y S PSSTRSOT=1 Q
"RTN","PSSSCHRP",204,0)
 W @IOF
"RTN","PSSSCHRP",205,0)
 W !,"DRUG NAME TRAILING SPACES REPORT"
"RTN","PSSSCHRP",206,0)
 W ?68,"PAGE: "_PSSTRSPG,!,PSSTRSLG,! S PSSTRSPG=PSSTRSPG+1
"RTN","PSSSCHRP",207,0)
 Q
"RTN","PSSSCHRP",208,0)
 ;
"RTN","PSSSCHRP",209,0)
 ;
"RTN","PSSSCHRP",210,0)
STST() ;Is strength numeric
"RTN","PSSSCHRP",211,0)
 I PSSTRSST="" Q 0 
"RTN","PSSSCHRP",212,0)
 I PSSTRSST'?.N&(PSSTRSST'?.N1".".N) Q 0
"RTN","PSSSCHRP",213,0)
 Q 1
"UP",59.7,59.782,-1)
59.7^82
"UP",59.7,59.782,0)
59.782
"VER")
8.0^22.0
"^DD",51.1,51.1,9,0)
EXCLUDE FROM ALL DOSING CHECKS^S^0:NO;1:YES;^0;9^Q
"^DD",51.1,51.1,9,3)
 Enter '1' or 'Yes' to exclude medication orders with this schedule from all dosing checks.
"^DD",51.1,51.1,9,21,0)
^^4^4^3101228^
"^DD",51.1,51.1,9,21,1,0)
If this field is set to '1' or 'Yes', no dosing checks will be performed
"^DD",51.1,51.1,9,21,2,0)
for any medication orders entered in Computerized Patient Record System
"^DD",51.1,51.1,9,21,3,0)
(CPRS), Inpatient Medications, or Outpatient Pharmacy, that contain this
"^DD",51.1,51.1,9,21,4,0)
schedule.
"^DD",51.1,51.1,9,"DT")
3101228
"^DD",51.1,51.1,10,0)
EXCLUDE FROM DAILY DOSE CHECK^S^0:NO;1:YES;^0;10^Q
"^DD",51.1,51.1,10,3)
Enter '1' or 'Yes' to exclude medication orders with this schedule from the daily dose check.
"^DD",51.1,51.1,10,21,0)
^^4^4^3101228^
"^DD",51.1,51.1,10,21,1,0)
If this field is set to '1' or 'Yes', a daily dose range check will not be
"^DD",51.1,51.1,10,21,2,0)
performed for any medication orders entered in Computerized Patient Record
"^DD",51.1,51.1,10,21,3,0)
System (CPRS), Inpatient Medications, or Outpatient Pharmacy, that contain
"^DD",51.1,51.1,10,21,4,0)
this schedule.
"^DD",51.1,51.1,10,"DT")
3101228
"^DD",51.24,51.24,0)
FIELD^^3^8
"^DD",51.24,51.24,0,"DDA")
N
"^DD",51.24,51.24,0,"DT")
3081001
"^DD",51.24,51.24,0,"IX","AREPLACETERM",51.24,99.97)

"^DD",51.24,51.24,0,"IX","AVUID",51.24,99.99)

"^DD",51.24,51.24,0,"IX","B",51.24,.01)

"^DD",51.24,51.24,0,"IX","C",51.24,1)

"^DD",51.24,51.24,0,"IX","D",51.242,.01)

"^DD",51.24,51.24,0,"NM","DOSE UNITS")

"^DD",51.24,51.24,0,"PT",50.0904,4)

"^DD",51.24,51.24,0,"PT",51.24,99.97)

"^DD",51.24,51.24,0,"VRPK")
PSS
"^DD",51.24,51.24,.01,0)
NAME^RFX^^0;1^K:$L(X)>30!($L(X)<1)!($E(X,1)=" ")!($E(X,$L(X))=" ")!(X["  ")!(X'?.ANP)!'(X'?1P.E) X
"^DD",51.24,51.24,.01,1,0)
^.1
"^DD",51.24,51.24,.01,1,1,0)
51.24^B
"^DD",51.24,51.24,.01,1,1,1)
S ^PS(51.24,"B",$E(X,1,30),DA)=""
"^DD",51.24,51.24,.01,1,1,2)
K ^PS(51.24,"B",$E(X,1,30),DA)
"^DD",51.24,51.24,.01,3)
Answer must be 1-30 characters in length, comprised of upper and lower case letters, numerics, and punctuation, but no leading punctuation, and contain no leading, trailing, or consecutive spaces.
"^DD",51.24,51.24,.01,7.5)
I $G(DIC(0))["L",'$D(XUMF) K X D EN^DDIOL("Entries must be edited via the Master File Server (MFS).","","!?5")
"^DD",51.24,51.24,.01,9)
^
"^DD",51.24,51.24,.01,21,0)
^.001^5^5^3080404^^
"^DD",51.24,51.24,.01,21,1,0)
This is the name of the Dose Unit. Local Possible Dosages entries in the
"^DD",51.24,51.24,.01,21,2,0)
DRUG (#50) File will be mapped to entries in this file. This mapping will
"^DD",51.24,51.24,.01,21,3,0)
enable the software to derive a First DataBank Dose Unit, also in this
"^DD",51.24,51.24,.01,21,4,0)
file, that can be passed into the Dose API for Dose checks for medication
"^DD",51.24,51.24,.01,21,5,0)
orders.
"^DD",51.24,51.24,.01,"DEL",1,0)
D:'$D(XUMF) EN^DDIOL("Entries must be inactivated via the Master File Server(MFS).","","!?5") I '$D(XUMF)
"^DD",51.24,51.24,.01,"DT")
3080126
"^DD",51.24,51.24,.01,"LAYGO",1,0)
D:'$D(XUMF) EN^DDIOL("Entries must be added via the Master File Server(MFS).","","!?5") I $D(XUMF)
"^DD",51.24,51.24,1,0)
FIRST DATABANK DOSE UNIT^FX^^0;2^K:$L(X)>30!($L(X)<1)!($E(X,1)=" ")!($E(X,$L(X))=" ")!(X["  ")!(X'?.ANP) X
"^DD",51.24,51.24,1,1,0)
^.1
"^DD",51.24,51.24,1,1,1,0)
51.24^C
"^DD",51.24,51.24,1,1,1,1)
S ^PS(51.24,"C",$E(X,1,30),DA)=""
"^DD",51.24,51.24,1,1,1,2)
K ^PS(51.24,"C",$E(X,1,30),DA)
"^DD",51.24,51.24,1,1,1,"%D",0)
^^3^3^3080126^
"^DD",51.24,51.24,1,1,1,"%D",1,0)
This cross reference is a regular cross reference on the FIRST DATABANK 
"^DD",51.24,51.24,1,1,1,"%D",2,0)
DOSE UNIT field. It sets the global: PS(51.24,"C",FIRST DATABANK DOSE 
"^DD",51.24,51.24,1,1,1,"%D",3,0)
UNIT, Internal Entry Number)="".
"^DD",51.24,51.24,1,1,1,"DT")
3080126
"^DD",51.24,51.24,1,3)
Answer must be 1-30 characters in length, comprised of upper and lower case letters, numerics, and punctuation, and contain no leading, trailing, or consecutive spaces.
"^DD",51.24,51.24,1,9)
^
"^DD",51.24,51.24,1,21,0)
^^3^3^3080331^
"^DD",51.24,51.24,1,21,1,0)
This field provides the mapping from the Vista Dose Unit to the First
"^DD",51.24,51.24,1,21,2,0)
DataBank Dose Unit. The First DataBank Dose Unit will be used when
"^DD",51.24,51.24,1,21,3,0)
processing the dosage checks provided by First DataBank.
"^DD",51.24,51.24,1,"DT")
3080126
"^DD",51.24,51.24,2,0)
SYNONYM^51.242^^1;0
"^DD",51.24,51.24,2,9)
^
"^DD",51.24,51.24,3,0)
DOSE FORM INDICATOR^RS^0:NO;1:YES;^0;3^Q
"^DD",51.24,51.24,3,3)
Enter 'Yes' if this Dose Unit should be considered a Dose Form type by First DataBank for the Dosing Check API. This determines the values used to compose the general dosing information message.
"^DD",51.24,51.24,3,9)
^
"^DD",51.24,51.24,3,21,0)
^.001^4^4^3081001^^^^
"^DD",51.24,51.24,3,21,1,0)
This field indicates whether the Dose Unit is considered by First 
"^DD",51.24,51.24,3,21,2,0)
DataBank (FDB) as a Dose Form type of Dose Unit when returning data for 
"^DD",51.24,51.24,3,21,3,0)
the Dosing Check API. It determines what values should be used to compose 
"^DD",51.24,51.24,3,21,4,0)
the general dosing information message.
"^DD",51.24,51.24,3,"DT")
3081001
"^DD",51.24,51.24,99.97,0)
REPLACED BY VHA STANDARD TERM^P51.24'^PS(51.24,^VUID;3^Q
"^DD",51.24,51.24,99.97,1,0)
^.1
"^DD",51.24,51.24,99.97,1,1,0)
51.24^AREPLACETERM
"^DD",51.24,51.24,99.97,1,1,1)
S ^PS(51.24,"AREPLACETERM",$E(X,1,30),DA)=""
"^DD",51.24,51.24,99.97,1,1,2)
K ^PS(51.24,"AREPLACETERM",$E(X,1,30),DA)
"^DD",51.24,51.24,99.97,1,1,"%D",0)
^^2^2^3080103^
"^DD",51.24,51.24,99.97,1,1,"%D",1,0)
This cross-reference can be used to identify the replacement entries 
"^DD",51.24,51.24,99.97,1,1,"%D",2,0)
associated with a Term/Concept.
"^DD",51.24,51.24,99.97,1,1,"DT")
3080103
"^DD",51.24,51.24,99.97,9)
^
"^DD",51.24,51.24,99.97,21,0)
^^4^4^3071227^
"^DD",51.24,51.24,99.97,21,1,0)
This field is populated when one Term/Concept replaces another 
"^DD",51.24,51.24,99.97,21,2,0)
Term/Concept.  This field is controlled by standardization and should 
"^DD",51.24,51.24,99.97,21,3,0)
only be changed by standardization processes.  This field contains a 
"^DD",51.24,51.24,99.97,21,4,0)
pointer to a VHA standard term that replaces this entry.
"^DD",51.24,51.24,99.97,"DT")
3080301
"^DD",51.24,51.24,99.98,0)
MASTER ENTRY FOR VUID^RSI^0:NO;1:YES;^VUID;2^Q
"^DD",51.24,51.24,99.98,9)
^
"^DD",51.24,51.24,99.98,21,0)
^^2^2^3050210^
"^DD",51.24,51.24,99.98,21,1,0)
This field identifies the Master entry for a VUID associated with a 
"^DD",51.24,51.24,99.98,21,2,0)
Term/Concept.
"^DD",51.24,51.24,99.98,"DT")
3080126
"^DD",51.24,51.24,99.99,0)
VUID^RFXI^^VUID;1^S X=+X K:$L(X)>20!($L(X)<1)!'(X?1.20N) X
"^DD",51.24,51.24,99.99,1,0)
^.1
"^DD",51.24,51.24,99.99,1,1,0)
51.24^AVUID
"^DD",51.24,51.24,99.99,1,1,1)
S ^PS(51.24,"AVUID",$E(X,1,30),DA)=""
"^DD",51.24,51.24,99.99,1,1,2)
K ^PS(51.24,"AVUID",$E(X,1,30),DA)
"^DD",51.24,51.24,99.99,1,1,3)
This cross-reference is by VUID.
"^DD",51.24,51.24,99.99,1,1,"%D",0)
^^1^1^3051026^
"^DD",51.24,51.24,99.99,1,1,"%D",1,0)
This cross-reference is by VUID.
"^DD",51.24,51.24,99.99,1,1,"DT")
3041223
"^DD",51.24,51.24,99.99,3)
Answer must be 1-20 digits in length.
"^DD",51.24,51.24,99.99,9)
^
"^DD",51.24,51.24,99.99,21,0)
^.001^2^2^3050210^^
"^DD",51.24,51.24,99.99,21,1,0)
VHA Unique ID (VUID). A unique meaningless integer assigned to reference
"^DD",51.24,51.24,99.99,21,2,0)
terms VHA wide.
"^DD",51.24,51.24,99.99,"DT")
3080126
"^DD",51.24,51.24,99.991,0)
EFFECTIVE DATE/TIME^51.2499DA^^TERMSTATUS;0
"^DD",51.24,51.24,99.991,9)
^
"^DD",51.24,51.24,99.991,21,0)
^^1^1^3050201^
"^DD",51.24,51.24,99.991,21,1,0)
Describes the pair Status and Effective Date/Time for each reference term.
"^DD",51.24,51.24,99.991,"DT")
3080126
"^DD",51.24,51.242,0)
SYNONYM SUB-FIELD^^.01^1
"^DD",51.24,51.242,0,"DT")
3071031
"^DD",51.24,51.242,0,"IX","B",51.242,.01)

"^DD",51.24,51.242,0,"NM","SYNONYM")

"^DD",51.24,51.242,0,"UP")
51.24
"^DD",51.24,51.242,.01,0)
SYNONYM^MFX^^0;1^K:$L(X)>30!($L(X)<1)!($E(X,1)=" ")!($E(X,$L(X))=" ")!(X["  ")!(X'?.ANP) X
"^DD",51.24,51.242,.01,1,0)
^.1
"^DD",51.24,51.242,.01,1,1,0)
51.242^B
"^DD",51.24,51.242,.01,1,1,1)
S ^PS(51.24,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",51.24,51.242,.01,1,1,2)
K ^PS(51.24,DA(1),1,"B",$E(X,1,30),DA)
"^DD",51.24,51.242,.01,1,2,0)
51.24^D
"^DD",51.24,51.242,.01,1,2,1)
S ^PS(51.24,"D",$E(X,1,30),DA(1),DA)=""
"^DD",51.24,51.242,.01,1,2,2)
K ^PS(51.24,"D",$E(X,1,30),DA(1),DA)
"^DD",51.24,51.242,.01,1,2,"%D",0)
^^3^3^3080331^
"^DD",51.24,51.242,.01,1,2,"%D",1,0)
This is a whole file cross reference on the SYNONYM (#.01) Field of the 
"^DD",51.24,51.242,.01,1,2,"%D",2,0)
SYNONYM (#51.242) Subfile. It sets the global
"^DD",51.24,51.242,.01,1,2,"%D",3,0)
PS(51.24,"D",SYNONYM,DA(1),DA)="".
"^DD",51.24,51.242,.01,1,2,"DT")
3080331
"^DD",51.24,51.242,.01,3)
Answer must be 1-30 characters in length, comprised of upper and lower case letters, numerics, and punctuation, and contain no leading, trailing, or consecutive spaces.
"^DD",51.24,51.242,.01,9)
^
"^DD",51.24,51.242,.01,21,0)
^.001^1^1^3080123^^^^
"^DD",51.24,51.242,.01,21,1,0)
This is a synonym for the NAME field, which is the name of the DOSE UNIT.
"^DD",51.24,51.242,.01,"DT")
3080331
"^DD",51.24,51.2499,0)
EFFECTIVE DATE/TIME SUB-FIELD^^.02^2
"^DD",51.24,51.2499,0,"DT")
3050201
"^DD",51.24,51.2499,0,"IX","B",51.2499,.01)

"^DD",51.24,51.2499,0,"NM","EFFECTIVE DATE/TIME")
 
"^DD",51.24,51.2499,0,"UP")
51.24
"^DD",51.24,51.2499,.01,0)
EFFECTIVE DATE/TIME^RDI^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",51.24,51.2499,.01,1,0)
^.1
"^DD",51.24,51.2499,.01,1,1,0)
51.2499^B
"^DD",51.24,51.2499,.01,1,1,1)
S ^PS(51.24,DA(1),"TERMSTATUS","B",$E(X,1,30),DA)=""
"^DD",51.24,51.2499,.01,1,1,2)
K ^PS(51.24,DA(1),"TERMSTATUS","B",$E(X,1,30),DA)
"^DD",51.24,51.2499,.01,1,1,"%D",0)
^^1^1^3050201^
"^DD",51.24,51.2499,.01,1,1,"%D",1,0)
This cross-reference is by Effective Date/Time.
"^DD",51.24,51.2499,.01,9)
^
"^DD",51.24,51.2499,.01,21,0)
^^2^2^3050201^
"^DD",51.24,51.2499,.01,21,1,0)
This is the date/time when the Status of the reference term was 
"^DD",51.24,51.2499,.01,21,2,0)
established.
"^DD",51.24,51.2499,.01,"DT")
3080126
"^DD",51.24,51.2499,.02,0)
STATUS^RSI^1:ACTIVE;0:INACTIVE;^0;2^Q
"^DD",51.24,51.2499,.02,9)
^
"^DD",51.24,51.2499,.02,21,0)
^^4^4^3050201^
"^DD",51.24,51.2499,.02,21,1,0)
The Status of a reference term is either 'ACTIVE' or 'INACTIVE'. If 
"^DD",51.24,51.2499,.02,21,2,0)
'ACTIVE', then the term will be accessible by end-users to document a 
"^DD",51.24,51.2499,.02,21,3,0)
particular patient event. If 'INACTIVE', then the term will only be 
"^DD",51.24,51.2499,.02,21,4,0)
accessible by the application to display legacy data.
"^DD",51.24,51.2499,.02,"DT")
3080126
"^DD",59.7,59.7,82,0)
DOSING ACTIVITY DATE AND TIME^59.782D^^82;0
"^DD",59.7,59.7,82,9)
^
"^DD",59.7,59.7,95,0)
DOSING ON/OFF^SI^0:OFF;1:ON;^81;1^Q
"^DD",59.7,59.7,95,3)
Enter '1' to turn Dosing order checks on, enter '0' to turn Dosing order checks off.
"^DD",59.7,59.7,95,9)
^
"^DD",59.7,59.7,95,21,0)
^.001^5^5^3120726^^
"^DD",59.7,59.7,95,21,1,0)
This field determines whether Dosing order checks will be part of the 
"^DD",59.7,59.7,95,21,2,0)
medication ordering process in Inpatient Medications, Outpatient Pharmacy 
"^DD",59.7,59.7,95,21,3,0)
and Computerized Patient Record System (CPRS). A '1' indicates Dosing 
"^DD",59.7,59.7,95,21,4,0)
order checks will occur, a '0' indicates Dosing order checks will not
"^DD",59.7,59.7,95,21,5,0)
occur.
"^DD",59.7,59.7,95,"DT")
3120725
"^DD",59.7,59.782,0)
DOSING ACTIVITY DATE AND TIME SUB-FIELD^^2^3
"^DD",59.7,59.782,0,"DT")
3120726
"^DD",59.7,59.782,0,"IX","B",59.782,.01)

"^DD",59.7,59.782,0,"NM","DOSING ACTIVITY DATE AND TIME")

"^DD",59.7,59.782,0,"UP")
59.7
"^DD",59.7,59.782,.01,0)
DOSING ACTIVITY DATE AND TIME^MRDI^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",59.7,59.782,.01,1,0)
^.1
"^DD",59.7,59.782,.01,1,1,0)
59.782^B
"^DD",59.7,59.782,.01,1,1,1)
S ^PS(59.7,DA(1),82,"B",$E(X,1,30),DA)=""
"^DD",59.7,59.782,.01,1,1,2)
K ^PS(59.7,DA(1),82,"B",$E(X,1,30),DA)
"^DD",59.7,59.782,.01,3)
This is the date and time Dosing order checks were enabled or disabled by an edit to the DOSING ON/OFF (#95) Field.
"^DD",59.7,59.782,.01,9)
^
"^DD",59.7,59.782,.01,21,0)
^.001^2^2^3120726^^
"^DD",59.7,59.782,.01,21,1,0)
This is the date and time the Dosing order checks were either enabled or 
"^DD",59.7,59.782,.01,21,2,0)
disabled. It is set when the DOSING ON/OFF (#95) Field is edited.
"^DD",59.7,59.782,.01,"DT")
3120720
"^DD",59.7,59.782,1,0)
PERSON MAKING CHANGE^P200'I^VA(200,^0;2^Q
"^DD",59.7,59.782,1,3)
This is the person making the change to the DOSING ON/OFF (#95) Field.
"^DD",59.7,59.782,1,9)
^
"^DD",59.7,59.782,1,21,0)
^.001^2^2^3120726^^^
"^DD",59.7,59.782,1,21,1,0)
This is the person making the change to the DOSING ON/OFF (#95) Field.
"^DD",59.7,59.782,1,21,2,0)
This field will be null if the change was made by an automated process.
"^DD",59.7,59.782,1,"DT")
3120720
"^DD",59.7,59.782,2,0)
ENABLE/DISABLE^RSI^0:DISABLE;1:ENABLE;^0;3^Q
"^DD",59.7,59.782,2,3)
A '0' indicates the Dosing order checks were disabled, a '1' indicates the Dosing order checks were enabled.
"^DD",59.7,59.782,2,9)
^
"^DD",59.7,59.782,2,21,0)
^.001^1^1^3120726^^^^
"^DD",59.7,59.782,2,21,1,0)
This field indicates what change was made to the DOSING ON/OFF (#95) Field.
"^DD",59.7,59.782,2,"DT")
3120726
"^DIC",51.24,51.24,0)
DOSE UNITS^51.24
"^DIC",51.24,51.24,0,"GL")
^PS(51.24,
"^DIC",51.24,51.24,"%",0)
^1.005^^0
"^DIC",51.24,51.24,"%D",0)
^1.001^14^14^3081010^^^^
"^DIC",51.24,51.24,"%D",1,0)
Per VHA Directive 2005-044, this file has been "locked down" by Data 
"^DIC",51.24,51.24,"%D",2,0)
Standardization (DS).  The file definition (i.e. data dictionary) shall 
"^DIC",51.24,51.24,"%D",3,0)
not be modified.  All additions, changes and deletions to entries in the 
"^DIC",51.24,51.24,"%D",4,0)
file shall be done by Enterprise Reference Terminology (ERT) using the 
"^DIC",51.24,51.24,"%D",5,0)
Master File Server (MFS), provided by Common Services (CS).  Creating 
"^DIC",51.24,51.24,"%D",6,0)
and/or editing locally defined fields in the file are not permitted.  Use 
"^DIC",51.24,51.24,"%D",7,0)
of locally defined fields that were created prior to the VHA Directive's 
"^DIC",51.24,51.24,"%D",8,0)
2005-044 effective date shall not be supported.
"^DIC",51.24,51.24,"%D",9,0)
 
"^DIC",51.24,51.24,"%D",10,0)
This file contains a list of Standard Dose Units, associated synonyms, and
"^DIC",51.24,51.24,"%D",11,0)
a corresponding FIRST DATABANK Dose Unit for every Standard Dose Unit. 
"^DIC",51.24,51.24,"%D",12,0)
The associated FIRST DATABANK Dose Unit will be used for the Dosage 
"^DIC",51.24,51.24,"%D",13,0)
Checks provided by FIRST DATABANK. Updates cannot be made at a local
"^DIC",51.24,51.24,"%D",14,0)
facility.
"^DIC",51.24,"B","DOSE UNITS",51.24)

**END**
**END**
