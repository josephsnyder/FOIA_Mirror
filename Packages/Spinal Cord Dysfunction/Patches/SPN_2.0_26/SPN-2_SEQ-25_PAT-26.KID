Released SPN*2*26 SEQ #25
Extracted from mail message
**KIDS**:SPN*2.0*26^

**INSTALL NAME**
SPN*2.0*26
"BLD",8046,0)
SPN*2.0*26^SPINAL CORD DYSFUNCTION^0^3100510^y
"BLD",8046,1,0)
^^1^1^3091109^
"BLD",8046,1,1,0)
ADD UNIQUE IDENTIFIER TO OUTGOING HL7 FIM MESSAGE
"BLD",8046,4,0)
^9.64PA^^
"BLD",8046,6.3)
7
"BLD",8046,"INI")
CHECK^SPNP26
"BLD",8046,"INID")
^n^n
"BLD",8046,"INIT")
POST^SPNP26
"BLD",8046,"KRN",0)
^9.67PA^779.2^20
"BLD",8046,"KRN",.4,0)
.4
"BLD",8046,"KRN",.4,"NM",0)
^9.68A^^
"BLD",8046,"KRN",.401,0)
.401
"BLD",8046,"KRN",.402,0)
.402
"BLD",8046,"KRN",.403,0)
.403
"BLD",8046,"KRN",.5,0)
.5
"BLD",8046,"KRN",.84,0)
.84
"BLD",8046,"KRN",3.6,0)
3.6
"BLD",8046,"KRN",3.8,0)
3.8
"BLD",8046,"KRN",3.8,"NM",0)
^9.68A^^0
"BLD",8046,"KRN",9.2,0)
9.2
"BLD",8046,"KRN",9.8,0)
9.8
"BLD",8046,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",8046,"KRN",9.8,"NM",1,0)
SPNHL2^^0^B21713902
"BLD",8046,"KRN",9.8,"NM",2,0)
SPNHL7^^0^B11181819
"BLD",8046,"KRN",9.8,"NM",3,0)
SPNP26^^0^B16072798
"BLD",8046,"KRN",9.8,"NM","B","SPNHL2",1)

"BLD",8046,"KRN",9.8,"NM","B","SPNHL7",2)

"BLD",8046,"KRN",9.8,"NM","B","SPNP26",3)

"BLD",8046,"KRN",19,0)
19
"BLD",8046,"KRN",19,"NM",0)
^9.68A^^
"BLD",8046,"KRN",19.1,0)
19.1
"BLD",8046,"KRN",101,0)
101
"BLD",8046,"KRN",409.61,0)
409.61
"BLD",8046,"KRN",771,0)
771
"BLD",8046,"KRN",779.2,0)
779.2
"BLD",8046,"KRN",870,0)
870
"BLD",8046,"KRN",8989.51,0)
8989.51
"BLD",8046,"KRN",8989.52,0)
8989.52
"BLD",8046,"KRN",8994,0)
8994
"BLD",8046,"KRN","B",.4,.4)

"BLD",8046,"KRN","B",.401,.401)

"BLD",8046,"KRN","B",.402,.402)

"BLD",8046,"KRN","B",.403,.403)

"BLD",8046,"KRN","B",.5,.5)

"BLD",8046,"KRN","B",.84,.84)

"BLD",8046,"KRN","B",3.6,3.6)

"BLD",8046,"KRN","B",3.8,3.8)

"BLD",8046,"KRN","B",9.2,9.2)

"BLD",8046,"KRN","B",9.8,9.8)

"BLD",8046,"KRN","B",19,19)

"BLD",8046,"KRN","B",19.1,19.1)

"BLD",8046,"KRN","B",101,101)

"BLD",8046,"KRN","B",409.61,409.61)

"BLD",8046,"KRN","B",771,771)

"BLD",8046,"KRN","B",779.2,779.2)

"BLD",8046,"KRN","B",870,870)

"BLD",8046,"KRN","B",8989.51,8989.51)

"BLD",8046,"KRN","B",8989.52,8989.52)

"BLD",8046,"KRN","B",8994,8994)

"BLD",8046,"QDEF")
^^^^YES^^^^NO^^NO
"BLD",8046,"QUES",0)
^9.62^^
"BLD",8046,"REQB",0)
^9.611^1^1
"BLD",8046,"REQB",1,0)
SPN*2.0*24^1
"BLD",8046,"REQB","B","SPN*2.0*24",1)

"INI")
CHECK^SPNP26
"INIT")
POST^SPNP26
"MBREQ")
0
"PKG",373,-1)
1^1
"PKG",373,0)
SPINAL CORD DYSFUNCTION^SPN^SPINAL CORD DYSFUNCTION, FIELD COMPONENT
"PKG",373,20,0)
^9.402P^^
"PKG",373,22,0)
^9.49I^1^1
"PKG",373,22,1,0)
2.0^2961206^2970214^1556
"PKG",373,22,1,"PAH",1,0)
26^3100510
"PKG",373,22,1,"PAH",1,1,0)
^^1^1^3100510
"PKG",373,22,1,"PAH",1,1,1,0)
ADD UNIQUE IDENTIFIER TO OUTGOING HL7 FIM MESSAGE
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","SPNHL2")
0^1^B21713902^B18092839
"RTN","SPNHL2",1,0)
SPNHL2 ;WDE/SAN-DIEGO;Build the hl7 segment for file data 154.1;DEC 03,2009
"RTN","SPNHL2",2,0)
 ;;2.0;Spinal Cord Dysfunction;**10,11,12,14,19,20,26**;01/02/97;Build 7
"RTN","SPNHL2",3,0)
EN(SPNFD0) ;
"RTN","SPNHL2",4,0)
 ;
"RTN","SPNHL2",5,0)
 ;Reference to API $$KSP^XUPARAM supported by IA# 2541
"RTN","SPNHL2",6,0)
 ;
"RTN","SPNHL2",7,0)
 ;11/04/09 - JAS - This was originally a SPN 2.0 routine that needed updated
"RTN","SPNHL2",8,0)
 ;           to fix a long-existing issue. Remedy #354716      
"RTN","SPNHL2",9,0)
 ;
"RTN","SPNHL2",10,0)
 ;this routine is called from spnhl71 spnhl71 is called from the
"RTN","SPNHL2",11,0)
 ;edit screen
"RTN","SPNHL2",12,0)
 ; spndd is the field name located in the dd
"RTN","SPNHL2",13,0)
 ; x is the field number from file 154.1
"RTN","SPNHL2",14,0)
 ;  this routine is used to build the ORU segment in chapter 7 of
"RTN","SPNHL2",15,0)
 ;  hl7 manual 2.3  (page 7-14)
"RTN","SPNHL2",16,0)
 ;-------------------------------------------------------------------
"RTN","SPNHL2",17,0)
 ;build the msh and pid segment
"RTN","SPNHL2",18,0)
 S SPNFDFN=$$GET1^DIQ(154.1,SPNFD0_",",.01,"I")
"RTN","SPNHL2",19,0)
 Q:SPNFDFN=""
"RTN","SPNHL2",20,0)
 ;build the msh & pid segments
"RTN","SPNHL2",21,0)
 S SPNOBR="OBR",$P(SPNOBR,"|",7)="|"
"RTN","SPNHL2",22,0)
 S $P(SPNOBR,"|",2)=1
"RTN","SPNHL2",23,0)
 S $P(SPNOBR,"|",5)="FUNCTIONAL STATUS OBR"
"RTN","SPNHL2",24,0)
 S SPNRDT=$$GET1^DIQ(154.1,SPNFD0_",",.04,"I")
"RTN","SPNHL2",25,0)
 Q:SPNRDT=""  S SPNRDT=$$HLDATE^HLFNC(SPNRDT,"TS")
"RTN","SPNHL2",26,0)
 S $P(SPNOBR,"|",8)=SPNRDT K SPNRDT
"RTN","SPNHL2",27,0)
 S SPLINE="",SPLINE=$O(SPMSG(SPLINE),-1)+1
"RTN","SPNHL2",28,0)
 S SPMSG(SPLINE)=SPNOBR S SPLINE=SPLINE+1
"RTN","SPNHL2",29,0)
 K SPNOBR
"RTN","SPNHL2",30,0)
 S OBXCNT=1
"RTN","SPNHL2",31,0)
 ;11/04/09 - JAS - Remedy 354716 (Add unique identifier to Outcomes Message)
"RTN","SPNHL2",32,0)
 S LOCDA=$$GET1^DIQ(154.1,SPNFD0_",",.023)
"RTN","SPNHL2",33,0)
 I LOCDA="" S LOCDA=$$KSP^XUPARAM("INST")
"RTN","SPNHL2",34,0)
 S SPDATA=LOCDA_"_"_SPNFD0 K LOCDA
"RTN","SPNHL2",35,0)
 S SPNDD="UNIQUE OUTCOMES IDENTIFIER"
"RTN","SPNHL2",36,0)
 S SPMSG(SPLINE)="OBX|"_OBXCNT_"|ST|"_""_"^"_SPNDD_"||"_SPDATA
"RTN","SPNHL2",37,0)
 S SPLINE=SPLINE+1,OBXCNT=OBXCNT+1,SPNDD="",SPDATA=""
"RTN","SPNHL2",38,0)
 ;check for date of death if so get it
"RTN","SPNHL2",39,0)
 S SPDATA=$$GET1^DIQ(2,SPNFDFN_",",.351,"I") I $G(SPDATA)'="" D
"RTN","SPNHL2",40,0)
 . S SPDATA=$$HLDATE^HLFNC(SPDATA,"TS")
"RTN","SPNHL2",41,0)
 . S SPMSG(SPLINE)="OBX|"_OBXCNT_"|TS|"_".351"_"^"_"DATE OF DEATH"_"||"_SPDATA
"RTN","SPNHL2",42,0)
 . S SPLINE=SPLINE+1,OBXCNT=OBXCNT+1,SPNDD="",SPDATA=""
"RTN","SPNHL2",43,0)
 ;
"RTN","SPNHL2",44,0)
 ;build obx from STRING  values
"RTN","SPNHL2",45,0)
 F X=.05,.06,.07,.08,.09,.1,.11,.12,.13,.14,.15,.16,.161,.17,.18,.181,.19,.191,.2,.21,.22,2.01,2.02,2.03,2.04,2.05,2.06,2.07,2.08,999.03,999.04,999.05,999.06,999.08 D
"RTN","SPNHL2",46,0)
 . S SPDATA=$$GET1^DIQ(154.1,SPNFD0_",",X) I SPDATA'="" D
"RTN","SPNHL2",47,0)
 .. S SPNDD=$G(^DD(154.1,X,0)),SPNDD=$P(SPNDD,U,1) S:SPNDD="" SPNDD="ERROR"
"RTN","SPNHL2",48,0)
 .. S SPMSG(SPLINE)="OBX|"_OBXCNT_"|ST|"_X_"^"_SPNDD_"||"_SPDATA S SPLINE=SPLINE+1,OBXCNT=OBXCNT+1,SPNDD=""
"RTN","SPNHL2",49,0)
 ;
"RTN","SPNHL2",50,0)
 ;build the ASIA data values  (new for patch 12)
"RTN","SPNHL2",51,0)
 F X=.021,.023,.024,7.01,7.02,7.03,7.04,7.05,7.06,7.07,7.08,7.09,7.1,7.11,7.12,7.13,7.14 D
"RTN","SPNHL2",52,0)
 . S SPDATA=$$GET1^DIQ(154.1,SPNFD0_",",X) I SPDATA'="" D
"RTN","SPNHL2",53,0)
 .. S SPNDD=$G(^DD(154.1,X,0)),SPNDD=$P(SPNDD,U,1) S:SPNDD="" SPNDD="ERROR"
"RTN","SPNHL2",54,0)
 .. S SPMSG(SPLINE)="OBX|"_OBXCNT_"|ST|"_X_"^"_SPNDD_"||"_SPDATA S SPLINE=SPLINE+1,OBXCNT=OBXCNT+1,SPNDD=""
"RTN","SPNHL2",55,0)
 ;
"RTN","SPNHL2",56,0)
 F X=1001,1002 D
"RTN","SPNHL2",57,0)
 . S SPDATA=$$GET1^DIQ(154.1,SPNFD0_",",X,"I") I SPDATA'="" D
"RTN","SPNHL2",58,0)
 .. S SPDATA=$$HLDATE^HLFNC(SPDATA,"TS")
"RTN","SPNHL2",59,0)
 .. S SPNDD=$G(^DD(154.1,X,0)),SPNDD=$P(SPNDD,U,1) S:SPNDD="" SPNDD="ERROR"
"RTN","SPNHL2",60,0)
 .. S SPMSG(SPLINE)="OBX|"_OBXCNT_"|TS|"_X_"^"_SPNDD_"||"_SPDATA
"RTN","SPNHL2",61,0)
 .. S SPLINE=SPLINE+1,OBXCNT=OBXCNT+1,SPNDD="",SPDATA=""
"RTN","SPNHL2",62,0)
 ; get ms data only the numbers
"RTN","SPNHL2",63,0)
 F X=3.1,3.2,3.3,3.4,3.5,3.6,3.7,3.8,3.9  D
"RTN","SPNHL2",64,0)
 . S SPDATA=$$GET1^DIQ(154.1,SPNFD0_",",X,"I") I SPDATA'="" D
"RTN","SPNHL2",65,0)
 .. S SPDATA=$$GET1^DIQ(154.2,SPDATA_",",.01)
"RTN","SPNHL2",66,0)
 .. S SPNDD=$G(^DD(154.1,X,0)),SPNDD=$P(SPNDD,U,1) S:SPNDD="" SPNDD="ERROR"
"RTN","SPNHL2",67,0)
 .. S SPMSG(SPLINE)="OBX|"_OBXCNT_"|NU|"_X_"^"_SPNDD_"||"_SPDATA S SPLINE=SPLINE+1,OBXCNT=OBXCNT+1,SPNDD="",SPDATA=""
"RTN","SPNHL2",68,0)
 ;
"RTN","SPNHL2",69,0)
 ;
"RTN","SPNHL2",70,0)
 F X=4.1,4.2,4.3,4.4,4.5,4.6,6.01,6.02,2.09,2.13 D
"RTN","SPNHL2",71,0)
 . S SPDATA=$$GET1^DIQ(154.1,SPNFD0_",",X) I SPDATA'="" D
"RTN","SPNHL2",72,0)
 .. S SPNDD=$G(^DD(154.1,X,0)),SPNDD=$P(SPNDD,U,1) S:SPNDD="" SPNDD="ERROR"
"RTN","SPNHL2",73,0)
 .. S SPMSG(SPLINE)="OBX|"_OBXCNT_"|NU|"_X_"^"_SPNDD_"||"_SPDATA
"RTN","SPNHL2",74,0)
 .. S SPLINE=SPLINE+1,OBXCNT=OBXCNT+1,SPNDD=""
"RTN","SPNHL2",75,0)
 ;
"RTN","SPNHL2",76,0)
 ;
"RTN","SPNHL2",77,0)
 F X=5.01,5.02,5.03,5.04,5.05,5.06,5.07,5.08,5.09,5.1,5.11,5.12 D
"RTN","SPNHL2",78,0)
 . S SPDATA=$$GET1^DIQ(154.1,SPNFD0_",",X,"I") I SPDATA'="" D
"RTN","SPNHL2",79,0)
 .. S SPDATA=$$GET1^DIQ(154.11,SPDATA_",",.02)
"RTN","SPNHL2",80,0)
 .. S SPNDD=$G(^DD(154.1,X,0)),SPNDD=$P(SPNDD,U,1) S:SPNDD="" SPNDD="ERROR"
"RTN","SPNHL2",81,0)
 .. S SPMSG(SPLINE)="OBX|"_OBXCNT_"|ST|"_X_"^"_SPNDD_"||"_SPDATA
"RTN","SPNHL2",82,0)
 .. S SPLINE=SPLINE+1,OBXCNT=OBXCNT+1,SPNDD=""
"RTN","SPNHL2",83,0)
 F X=.02,.03,1003 D
"RTN","SPNHL2",84,0)
 . S SPDATA=$$GET1^DIQ(154.1,SPNFD0_",",X) I SPDATA'="" D
"RTN","SPNHL2",85,0)
 .. S SPNTBL=$S(X=.02:"^VA501",X=.03:"^VA502",1:"")
"RTN","SPNHL2",86,0)
 .. S SPNDD=$G(^DD(154.1,X,0)),SPNDD=$P(SPNDD,U,1) S:SPNDD="" SPNDD="ERROR"
"RTN","SPNHL2",87,0)
 .. S SPMSG(SPLINE)="OBX|"_OBXCNT_"|ST|"_X_"^"_SPNDD_SPNTBL_"||"_SPDATA
"RTN","SPNHL2",88,0)
 .. S SPLINE=SPLINE+1,OBXCNT=OBXCNT+1,SPNDD="",SPDATA=""
"RTN","SPNHL2",89,0)
 ;get the clinician its a multiple but we will only record the first one 
"RTN","SPNHL2",90,0)
 ;
"RTN","SPNHL2",91,0)
 S SPNTMP=""
"RTN","SPNHL2",92,0)
 D GETS^DIQ(154.1,SPNFD0_",","1.01*","","SPNTMP")
"RTN","SPNHL2",93,0)
 S SPNDD=$G(^DD(154.1,1.01,0)),SPNDD=$P(SPNDD,U,1)  ;Get dd field name
"RTN","SPNHL2",94,0)
 S SPNET=0,SPNET=$O(SPNTMP(154.101,SPNET))
"RTN","SPNHL2",95,0)
 I SPNET'="" S CL=0,CL=$O(SPNTMP(154.101,SPNET,CL)) S SPNDOC=$G(SPNTMP(154.101,SPNET,CL))
"RTN","SPNHL2",96,0)
 I SPNET'="" I SPNDOC'="" S SPMSG(SPLINE)="OBX|"_OBXCNT_"|ST|154.101^"_SPNDD_"||"_$G(SPNDOC)
"RTN","SPNHL2",97,0)
 K SPNET,CL,SPNDOC,SPNDD,SPDATA,SPNTBL
"RTN","SPNHL7")
0^2^B11181819^B8407471
"RTN","SPNHL7",1,0)
SPNHL7 ;WDE/SAN-DIEGO;validate then build the z segment
"RTN","SPNHL7",2,0)
 ;;2.0;Spinal Cord Dysfunction;**10,24,26**;01/02/97;Build 7
"RTN","SPNHL7",3,0)
CHK(SPNFDFN) ;
"RTN","SPNHL7",4,0)
 ;       ifn is the record number in SPN(154 it's dinumed to dpt
"RTN","SPNHL7",5,0)
 ;--------------------------------------------------------------------
"RTN","SPNHL7",6,0)
 ;check registration date
"RTN","SPNHL7",7,0)
 S SPNCHK=$$GET1^DIQ(154,SPNFDFN_",",.02)
"RTN","SPNHL7",8,0)
 I $G(SPNCHK)="" D ZAP Q
"RTN","SPNHL7",9,0)
 ;check registration status
"RTN","SPNHL7",10,0)
 S SPNCHK=$$GET1^DIQ(154,SPNFDFN_",",.03)
"RTN","SPNHL7",11,0)
 I $G(SPNCHK)="" D ZAP Q
"RTN","SPNHL7",12,0)
 ;check VA SCI STATUS
"RTN","SPNHL7",13,0)
 ;S SPNCHK=$$GET1^DIQ(154,SPNFDFN_",",2.6)
"RTN","SPNHL7",14,0)
 ;I $G(SPNCHK)="" D ZAP Q
"RTN","SPNHL7",15,0)
 ;check for etiology
"RTN","SPNHL7",16,0)
 ;D GETS^DIQ(154,SPNFDFN_",","4*","","SPNCHK")
"RTN","SPNHL7",17,0)
 ;I $D(SPNCHK)=0 D ZAP Q
"RTN","SPNHL7",18,0)
 ;the record passed the test and we want it
"RTN","SPNHL7",19,0)
CREATE ;this label is also called from the tag auto
"RTN","SPNHL7",20,0)
 K SPMSG
"RTN","SPNHL7",21,0)
 D INIT
"RTN","SPNHL7",22,0)
 I HLDAP="" D ZAP Q  ;cant find the hl7 application
"RTN","SPNHL7",23,0)
 I $P($G(^HL(771,HLDAP,0)),U,2)'="a" D ZAP Q  ;test for active/on
"RTN","SPNHL7",24,0)
 D EN^SPNHPID(SPNFDFN)
"RTN","SPNHL7",25,0)
 D EN^SPNHL1(SPNFDFN)
"RTN","SPNHL7",26,0)
 ;at this point we have the HL7 message in the msg arrary!
"RTN","SPNHL7",27,0)
 D SEND  ;send will send the message off to the hl7 sftw
"RTN","SPNHL7",28,0)
ZAP ;
"RTN","SPNHL7",29,0)
 K SPMSG,X,Y,SPTMP,OBXCNT,SPLINE,DATA,CL,SPNOBR
"RTN","SPNHL7",30,0)
 K HL,HLA,SPNTMP,HLARYTYP,HLECH,HLFORMAT,HLFS,HLMTIEN,HLSAN,HLN,HLQ,HLRESLT
"RTN","SPNHL7",31,0)
 Q
"RTN","SPNHL7",32,0)
AUTO ;this tag is used for loading the AUSTIN system from a server request
"RTN","SPNHL7",33,0)
 ;this should never be ran from a site unless informed to.
"RTN","SPNHL7",34,0)
 S SPNIFN=0 F  S SPNIFN=$O(^SPNL(154,SPNIFN)) Q:(SPNIFN="")!('+SPNIFN)  D
"RTN","SPNHL7",35,0)
 . D CHK(SPNIFN) I $D(SPNCHK) D AUTO^SPNHL71
"RTN","SPNHL7",36,0)
 . K SPNCHK
"RTN","SPNHL7",37,0)
 . Q
"RTN","SPNHL7",38,0)
 Q
"RTN","SPNHL7",39,0)
 ;
"RTN","SPNHL7",40,0)
 ;
"RTN","SPNHL7",41,0)
NEWAUTO ;Added in SPN*2.0*27
"RTN","SPNHL7",42,0)
 ;This is diffent then AUTO^SPNHL7 in that it requires a start date.
"RTN","SPNHL7",43,0)
 ;It also uses the end date, but it is optional.
"RTN","SPNHL7",44,0)
 ;
"RTN","SPNHL7",45,0)
 ;this tag is used for loading the AUSTIN system from a server request
"RTN","SPNHL7",46,0)
 ;this should never be ran from a site unless informed to.
"RTN","SPNHL7",47,0)
 ;
"RTN","SPNHL7",48,0)
 ;
"RTN","SPNHL7",49,0)
 N START,END,NODE
"RTN","SPNHL7",50,0)
 S START=$G(SPNPARM("STARTDATE"))
"RTN","SPNHL7",51,0)
 S END=$G(SPNPARM("ENDATE"))
"RTN","SPNHL7",52,0)
 Q:'START
"RTN","SPNHL7",53,0)
 ;
"RTN","SPNHL7",54,0)
 S SPNIFN=0 F  S SPNIFN=$O(^SPNL(154,SPNIFN)) Q:(SPNIFN="")!('+SPNIFN)  D
"RTN","SPNHL7",55,0)
 .S NODE=$G(^SPNL(154,SPNIFN,0))
"RTN","SPNHL7",56,0)
 .Q:$P(NODE,"^",5)<START
"RTN","SPNHL7",57,0)
 .I END Q:($P(NODE,"^",5)>END)
"RTN","SPNHL7",58,0)
 . D CHK(SPNIFN) I $D(SPNCHK) D AUTO^SPNHL71
"RTN","SPNHL7",59,0)
 . K SPNCHK
"RTN","SPNHL7",60,0)
 . Q
"RTN","SPNHL7",61,0)
 Q
"RTN","SPNHL7",62,0)
INIT ;
"RTN","SPNHL7",63,0)
 ;
"RTN","SPNHL7",64,0)
 S HLDAP=$O(^HL(771,"B","SPN-HL7-APP",0))
"RTN","SPNHL7",65,0)
 Q:HLDAP=""  ;cant find the hl7 application
"RTN","SPNHL7",66,0)
 Q:$P($G(^HL(771,HLDAP,0)),U,2)'="a"  ;test for active/on
"RTN","SPNHL7",67,0)
 S HL="HL"
"RTN","SPNHL7",68,0)
 S PEIN=$O(^ORD(101,"B","SPN-HL7-SERVER",0))
"RTN","SPNHL7",69,0)
 D INIT^HLFNC2(PEIN,.HL,0)
"RTN","SPNHL7",70,0)
 S HLCOMP=$E(HL("ECH"),1),HLREP=$E(HL("ECH"),2),HLSUB=$E(HL("ECH"),4),HLFS=HL("FS"),HLQ=HL("Q"),HLECH=HL("ECH")
"RTN","SPNHL7",71,0)
 Q
"RTN","SPNHL7",72,0)
 ;-------------------------------------------------------------------
"RTN","SPNHL7",73,0)
SEND ;
"RTN","SPNHL7",74,0)
 S HLARYTYP="LM",HLFORMAT=1,HLMTIEN="",HLRESLT=""
"RTN","SPNHL7",75,0)
 S P=0 F  S P=$O(SPMSG(P)) Q:P=""  S HLA("HLS",P)=SPMSG(P)
"RTN","SPNHL7",76,0)
 D GENERATE^HLMA(PEIN,HLARYTYP,HLFORMAT,.HLRESLT,HLMTIEN,.HLP)
"RTN","SPNHL7",77,0)
 Q
"RTN","SPNHL7",78,0)
EXIT ;Exit point to clean up all var's
"RTN","SPNHL7",79,0)
 K CL,DATA,ETDAT,ETDATE,HL,HLA,HLARYTYP,HLDAP,HLDAP,HLECH,HLFORMAT,HLFS,HLMTIEN,HLN,HLP,HLQ,HLREP,HLRESLT,HLSAN,HLSUB,INJURY,INJURY,OBXCNT,PEIN,SPD,SPDATA,SPDD,SPDT,SPDTYPE,SPLINE,SPMSG,SPNCAUSE,SPNCHK,SPND,SPND1,SPNDD
"RTN","SPNHL7",80,0)
 K SPNDOC,SPNDT,SPNET,SPNETIOL,SPNFREQ,SPNLDT,SPNLET,SPNLEXAM,SPNLFAC,SPNLFAM,SPNLSEEN,SPNOBR,SPNRDT,SPNTBL,SPNTMP,SPTMP,SPX
"RTN","SPNP26")
0^3^B16072798^n/a
"RTN","SPNP26",1,0)
SPNP26 ;ALB/CJM; Pre-Install for SPN*2.0*26
"RTN","SPNP26",2,0)
 ;;2.0;Spinal Cord Dysfunction;**26**;01/02/97;Build 7
"RTN","SPNP26",3,0)
 ;
"RTN","SPNP26",4,0)
CHECK ;
"RTN","SPNP26",5,0)
 ;
"RTN","SPNP26",6,0)
 I '$O(^DIC(4.2,"B","Q-FMZ.MED.VA.GOV",0)) D ABORT
"RTN","SPNP26",7,0)
 Q
"RTN","SPNP26",8,0)
ABORT ;
"RTN","SPNP26",9,0)
 S XPDABORT=1
"RTN","SPNP26",10,0)
 D BMES^XPDUTL("Please follow the instructions in patch XM*DBA*174 for installing the")
"RTN","SPNP26",11,0)
 D MES^XPDUTL("Q-FMZ.MED.VA.GOV domain before installing patch SPN*2.0*26.")
"RTN","SPNP26",12,0)
 Q
"RTN","SPNP26",13,0)
 ;
"RTN","SPNP26",14,0)
RESEED ;entry point to queue the reseeding
"RTN","SPNP26",15,0)
 N ZTIO,COMPLETE
"RTN","SPNP26",16,0)
 S COMPLETE=$G(^XTMP("SPN*2.0*26 RESEEDING","COMPLETED"))
"RTN","SPNP26",17,0)
 I COMPLETE W !,"The reseeding was already completed on ",COMPLETE,"!" W !,"If you need to reseed again the old results must be cleared first." Q
"RTN","SPNP26",18,0)
  
"RTN","SPNP26",19,0)
 S ZTIO=""
"RTN","SPNP26",20,0)
 S ZTRTN="AUTO^SPNP26",ZTDESC="SPN RESEEDING BY PATCH SPN*2.0*26"
"RTN","SPNP26",21,0)
 D ^%ZTLOAD
"RTN","SPNP26",22,0)
 W !,$S($D(ZTSK):"REQUEST QUEUED; TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","SPNP26",23,0)
 Q
"RTN","SPNP26",24,0)
 ;
"RTN","SPNP26",25,0)
AUTO ;
"RTN","SPNP26",26,0)
 N SPNARY,SPIFN
"RTN","SPNP26",27,0)
 S SPARY="^XTMP(""SPN*2.0*26 RESEEDING"")"
"RTN","SPNP26",28,0)
 I $G(@SPARY@("COMPLETED")) Q
"RTN","SPNP26",29,0)
 S @SPARY@(0)=$$FMADD^XLFDT($$DT^XLFDT,180)_"^"_$$DT^XLFDT_"^Spinal Cord Dysfunction Reseeding Results"
"RTN","SPNP26",30,0)
 S SPNIFN=+$G(@SPARY@("LAST IEN"))
"RTN","SPNP26",31,0)
 F  S SPNIFN=$O(^SPNL(154,SPNIFN)) Q:(SPNIFN="")!('+SPNIFN)  D
"RTN","SPNP26",32,0)
 .N SPNCHK
"RTN","SPNP26",33,0)
 .D CHK^SPNHL7(SPNIFN) I $D(SPNCHK) D AUTO^SPNHL71 S @SPARY@("TOTAL")=1+$G(@SPARY@("TOTAL"))
"RTN","SPNP26",34,0)
 .S @SPARY@("LAST IEN")=SPNIFN
"RTN","SPNP26",35,0)
 S @SPARY@("COMPLETED")=$$NOW^XLFDT
"RTN","SPNP26",36,0)
 D ALERT($G(@SPARY@("TOTAL")))
"RTN","SPNP26",37,0)
 Q
"RTN","SPNP26",38,0)
 ;
"RTN","SPNP26",39,0)
ALERT(COUNT) ;
"RTN","SPNP26",40,0)
 N XMY,XMTEXT,XMSUB,SITE,DIFROM,TEXT
"RTN","SPNP26",41,0)
 S SITE=$$SITE^VASITE()
"RTN","SPNP26",42,0)
 S TEXT(1)="Completed reseeding by patch SPN*2.0*26"
"RTN","SPNP26",43,0)
 S TEXT(2)="  Site:   "_$P(SITE,"^",2)_" #"_$P(SITE,"^",3)
"RTN","SPNP26",44,0)
 S TEXT(2)="  Total Patient Count: "_COUNT
"RTN","SPNP26",45,0)
 S XMSUB="RESEEDING COMPLETED@"_$P(SITE,"^",2)_" #"_$P(SITE,"^",3)
"RTN","SPNP26",46,0)
 S XMDUZ=.5
"RTN","SPNP26",47,0)
 S XMTEXT="TEXT("
"RTN","SPNP26",48,0)
 S XMY("G.TESTINGTESTING@PUGET-SOUND.MED.VA.GOV")=""
"RTN","SPNP26",49,0)
 S XMY("G.SPNL SCD COORDINATOR")=""
"RTN","SPNP26",50,0)
 D ^XMD
"RTN","SPNP26",51,0)
 Q
"RTN","SPNP26",52,0)
POST ; post-install, edits the mail group
"RTN","SPNP26",53,0)
 N GROUP,IEN,SUBIEN
"RTN","SPNP26",54,0)
 S GROUP="SCD-NAT-DATABASE"
"RTN","SPNP26",55,0)
 S IEN=$O(^XMB(3.8,"B",GROUP,0))
"RTN","SPNP26",56,0)
 I 'IEN S XPDABORT=1 D BMES^XPDUTL("Failed to add XXX@Q-FMZ.MED.VA.GOV as a remote memeber to the SCD-NAT-DATABASE mail group") Q
"RTN","SPNP26",57,0)
 S SUBIEN=$O(^XMB(3.8,IEN,6,"B","XXX@Q-SCD.MED.VA.GOV",0))
"RTN","SPNP26",58,0)
 I SUBIEN D
"RTN","SPNP26",59,0)
 .N DA
"RTN","SPNP26",60,0)
 .S DA=SUBIEN,DA(1)=IEN D DELETE(3.812,.DA)
"RTN","SPNP26",61,0)
 S SUBIEN=$O(^XMB(3.8,IEN,6,"B","XXX@Q-FMZ.MED.VA.GOV",0))
"RTN","SPNP26",62,0)
 I 'SUBIEN D
"RTN","SPNP26",63,0)
 .N DA,DATA,ERROR
"RTN","SPNP26",64,0)
 .S DA(1)=IEN
"RTN","SPNP26",65,0)
 .S DATA(.01)="XXX@Q-FMZ.MED.VA.GOV"
"RTN","SPNP26",66,0)
 .I '$$ADD(3.812,.DA,.DATA,.ERROR) S XPDABORT=1 D BMES^XPDUTL("Failed to add XXX@Q-FMZ.MED.VA.GOV as a remote memeber to the SCD-NAT-DATABASE mail group")
"RTN","SPNP26",67,0)
 Q
"RTN","SPNP26",68,0)
 ;
"RTN","SPNP26",69,0)
ADD(FILE,DA,DATA,ERROR,IEN) ;
"RTN","SPNP26",70,0)
 N FDA,FIELD,IENA,IENS,ERRORS
"RTN","SPNP26",71,0)
 S DA="+1"
"RTN","SPNP26",72,0)
 S IENS=$$IENS^DILF(.DA)
"RTN","SPNP26",73,0)
 S FIELD=0
"RTN","SPNP26",74,0)
 F  S FIELD=$O(DATA(FIELD)) Q:'FIELD  D
"RTN","SPNP26",75,0)
 .S FDA(FILE,IENS,FIELD)=$G(DATA(FIELD))
"RTN","SPNP26",76,0)
 I $G(IEN) S IENA(1)=IEN
"RTN","SPNP26",77,0)
 D UPDATE^DIE("","FDA","IENA","ERRORS(1)")
"RTN","SPNP26",78,0)
 I +$G(DIERR) D
"RTN","SPNP26",79,0)
 .S ERROR=$G(ERRORS(1,"DIERR",1,"TEXT",1))
"RTN","SPNP26",80,0)
 .S IEN=""
"RTN","SPNP26",81,0)
 E  D
"RTN","SPNP26",82,0)
 .S IEN=IENA(1)
"RTN","SPNP26",83,0)
 .S ERROR=""
"RTN","SPNP26",84,0)
 D CLEAN^DILF
"RTN","SPNP26",85,0)
 S DA=IEN
"RTN","SPNP26",86,0)
 Q IEN
"RTN","SPNP26",87,0)
 ;
"RTN","SPNP26",88,0)
DELETE(FILE,DA,ERROR) ;Delete an existing record.
"RTN","SPNP26",89,0)
 N DATA
"RTN","SPNP26",90,0)
 S DATA(.01)="@"
"RTN","SPNP26",91,0)
 Q $$UPD(FILE,.DA,.DATA,.ERROR)
"RTN","SPNP26",92,0)
 Q
"RTN","SPNP26",93,0)
UPD(FILE,DA,DATA,ERROR) ;File data into an existing record.
"RTN","SPNP26",94,0)
 I '$G(DA) S ERROR="IEN OF RECORD TO BE UPDATED NOT SPECIFIED" Q 0
"RTN","SPNP26",95,0)
 S IENS=$$IENS^DILF(.DA)
"RTN","SPNP26",96,0)
 S FIELD=0
"RTN","SPNP26",97,0)
 F  S FIELD=$O(DATA(FIELD)) Q:'FIELD  D
"RTN","SPNP26",98,0)
 .S FDA(FILE,IENS,FIELD)=$G(DATA(FIELD))
"RTN","SPNP26",99,0)
 D FILE^DIE("","FDA","ERRORS(1)")
"RTN","SPNP26",100,0)
 I +$G(DIERR) D
"RTN","SPNP26",101,0)
 .S ERROR=$G(ERRORS(1,"DIERR",1,"TEXT",1))
"RTN","SPNP26",102,0)
 E  D
"RTN","SPNP26",103,0)
 .S ERROR=""
"RTN","SPNP26",104,0)
 ;
"RTN","SPNP26",105,0)
 D CLEAN^DILF
"RTN","SPNP26",106,0)
 Q $S(+$G(DIERR):0,1:1)
"VER")
8.0^22.0
"BLD",8046,6)
^25
**END**
**END**
