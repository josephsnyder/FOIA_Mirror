Released PSO*7*341 SEQ #297
Extracted from mail message
**KIDS**:PSO*7.0*341^

**INSTALL NAME**
PSO*7.0*341
"BLD",7559,0)
PSO*7.0*341^OUTPATIENT PHARMACY^0^3100503^y
"BLD",7559,1,0)
^^4^4^3091120^^^^
"BLD",7559,1,1,0)
This patch resolves an UNDEFINED error in routine PSO52PAI.  
"BLD",7559,1,2,0)
This error occurred while users were loading IB patch IB*2*400.
"BLD",7559,1,3,0)
The error resulted from processing invalid ePharmacy data in
"BLD",7559,1,4,0)
the Pharmacy file (#52).
"BLD",7559,4,0)
^9.64PA^^
"BLD",7559,6.3)
8
"BLD",7559,"ABPKG")
n
"BLD",7559,"INID")
^n
"BLD",7559,"INIT")
PSO7P341
"BLD",7559,"KRN",0)
^9.67PA^779.2^20
"BLD",7559,"KRN",.4,0)
.4
"BLD",7559,"KRN",.401,0)
.401
"BLD",7559,"KRN",.402,0)
.402
"BLD",7559,"KRN",.403,0)
.403
"BLD",7559,"KRN",.5,0)
.5
"BLD",7559,"KRN",.84,0)
.84
"BLD",7559,"KRN",3.6,0)
3.6
"BLD",7559,"KRN",3.8,0)
3.8
"BLD",7559,"KRN",9.2,0)
9.2
"BLD",7559,"KRN",9.8,0)
9.8
"BLD",7559,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",7559,"KRN",9.8,"NM",1,0)
PSOBPSU2^^0^B33237601
"BLD",7559,"KRN",9.8,"NM",2,0)
PSOREJU2^^0^B48298222
"BLD",7559,"KRN",9.8,"NM","B","PSOBPSU2",1)

"BLD",7559,"KRN",9.8,"NM","B","PSOREJU2",2)

"BLD",7559,"KRN",19,0)
19
"BLD",7559,"KRN",19,"NM",0)
^9.68A^^
"BLD",7559,"KRN",19.1,0)
19.1
"BLD",7559,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",7559,"KRN",101,0)
101
"BLD",7559,"KRN",101,"NM",0)
^9.68A^^
"BLD",7559,"KRN",409.61,0)
409.61
"BLD",7559,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",7559,"KRN",771,0)
771
"BLD",7559,"KRN",771,"NM",0)
^9.68A^^
"BLD",7559,"KRN",779.2,0)
779.2
"BLD",7559,"KRN",779.2,"NM",0)
^9.68A^^
"BLD",7559,"KRN",870,0)
870
"BLD",7559,"KRN",870,"NM",0)
^9.68A^^
"BLD",7559,"KRN",8989.51,0)
8989.51
"BLD",7559,"KRN",8989.51,"NM",0)
^9.68A^^
"BLD",7559,"KRN",8989.52,0)
8989.52
"BLD",7559,"KRN",8989.52,"NM",0)
^9.68A^^
"BLD",7559,"KRN",8994,0)
8994
"BLD",7559,"KRN",8994,"NM",0)
^9.68A^^
"BLD",7559,"KRN","B",.4,.4)

"BLD",7559,"KRN","B",.401,.401)

"BLD",7559,"KRN","B",.402,.402)

"BLD",7559,"KRN","B",.403,.403)

"BLD",7559,"KRN","B",.5,.5)

"BLD",7559,"KRN","B",.84,.84)

"BLD",7559,"KRN","B",3.6,3.6)

"BLD",7559,"KRN","B",3.8,3.8)

"BLD",7559,"KRN","B",9.2,9.2)

"BLD",7559,"KRN","B",9.8,9.8)

"BLD",7559,"KRN","B",19,19)

"BLD",7559,"KRN","B",19.1,19.1)

"BLD",7559,"KRN","B",101,101)

"BLD",7559,"KRN","B",409.61,409.61)

"BLD",7559,"KRN","B",771,771)

"BLD",7559,"KRN","B",779.2,779.2)

"BLD",7559,"KRN","B",870,870)

"BLD",7559,"KRN","B",8989.51,8989.51)

"BLD",7559,"KRN","B",8989.52,8989.52)

"BLD",7559,"KRN","B",8994,8994)

"BLD",7559,"QUES",0)
^9.62^^
"BLD",7559,"REQB",0)
^9.611^2^2
"BLD",7559,"REQB",1,0)
PSO*7.0*287^2
"BLD",7559,"REQB",2,0)
PSO*7.0*289^2
"BLD",7559,"REQB","B","PSO*7.0*287",1)

"BLD",7559,"REQB","B","PSO*7.0*289",2)

"INIT")
PSO7P341
"MBREQ")
0
"PKG",141,-1)
1^1
"PKG",141,0)
OUTPATIENT PHARMACY^PSO^OUTPATIENT LABELS, PROFILE, INVENTORY, PRESCRIPTIONS
"PKG",141,20,0)
^9.402P^^
"PKG",141,22,0)
^9.49I^1^1
"PKG",141,22,1,0)
7.0^2971216^2980917^11712
"PKG",141,22,1,"PAH",1,0)
341^3100503
"PKG",141,22,1,"PAH",1,1,0)
^^4^4^3100503
"PKG",141,22,1,"PAH",1,1,1,0)
This patch resolves an UNDEFINED error in routine PSO52PAI.  
"PKG",141,22,1,"PAH",1,1,2,0)
This error occurred while users were loading IB patch IB*2*400.
"PKG",141,22,1,"PAH",1,1,3,0)
The error resulted from processing invalid ePharmacy data in
"PKG",141,22,1,"PAH",1,1,4,0)
the Pharmacy file (#52).
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","PSO7P341")
0^^B9919037^n/a
"RTN","PSO7P341",1,0)
PSO7P341 ;BAY PINES-CIOFO/TN - Patch 341 Post Install routine;9/9/09 5:06pm ; 10/22/09 10:50am
"RTN","PSO7P341",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**341**;DEC 1997;Build 8
"RTN","PSO7P341",3,0)
 ;
"RTN","PSO7P341",4,0)
 NEW ZTIO,ZTRTN,ZTDESC
"RTN","PSO7P341",5,0)
 S ZTIO="",ZTRTN="START^PSO7P341",ZTDESC="PSO*7*341 post-int process"
"RTN","PSO7P341",6,0)
 D ^%ZTLOAD
"RTN","PSO7P341",7,0)
 W !!,$S($D(ZTSK):"PSO*7*341 post-init has been queued - Task number ")
"RTN","PSO7P341",8,0)
 W ZTSK KILL ZTSK
"RTN","PSO7P341",9,0)
 QUIT
"RTN","PSO7P341",10,0)
 ;
"RTN","PSO7P341",11,0)
 ;--------------------------------------------------------------
"RTN","PSO7P341",12,0)
START KILL ^TMP("PSO7P341")
"RTN","PSO7P341",13,0)
 ;
"RTN","PSO7P341",14,0)
 S ^TMP("PSO7P341")="0^0"
"RTN","PSO7P341",15,0)
 S IEN=0
"RTN","PSO7P341",16,0)
 ;
"RTN","PSO7P341",17,0)
START1 I $G(RESTART) S IEN=$P($G(^TMP("PSO7P341")),U)
"RTN","PSO7P341",18,0)
 ;
"RTN","PSO7P341",19,0)
 F  S IEN=$O(^PSRX(IEN)) Q:'IEN  D
"RTN","PSO7P341",20,0)
 . S REFILL=0,$P(^TMP("PSO7P341"),U)=IEN
"RTN","PSO7P341",21,0)
 . S RX=$P($G(^PSRX(IEN,0)),U) I RX="" Q
"RTN","PSO7P341",22,0)
 . F  S REFILL=$O(^PSRX(IEN,1,REFILL)) Q:'REFILL  D
"RTN","PSO7P341",23,0)
 . . ;
"RTN","PSO7P341",24,0)
 . . ;Check "EPH" Node
"RTN","PSO7P341",25,0)
 . . I $D(^PSRX(IEN,1,REFILL,"EPH")),'$D(^PSRX(IEN,1,REFILL,0)) D
"RTN","PSO7P341",26,0)
 . . . KILL ^PSRX(IEN,1,REFILL,"EPH")
"RTN","PSO7P341",27,0)
 . . . S $P(^TMP("PSO7P341"),U,2)=$P(^TMP("PSO7P341"),U,2)+1
"RTN","PSO7P341",28,0)
 . . . S ^TMP("PSO7P341",RX,REFILL)=""
"RTN","PSO7P341",29,0)
 ;
"RTN","PSO7P341",30,0)
 D EMAIL:$G(DUZ)
"RTN","PSO7P341",31,0)
 ;
"RTN","PSO7P341",32,0)
 KILL IEN,REFILL,RESTART,^TMP("PSO7P341")
"RTN","PSO7P341",33,0)
 QUIT
"RTN","PSO7P341",34,0)
 ;-------------------------------------------------------------
"RTN","PSO7P341",35,0)
EMAIL NEW XMSUB,XMTEXT,XMY,XMDUZ,PSOMSG,PSONAME,PSOCNT,PSOCNT1
"RTN","PSO7P341",36,0)
 NEW PSOIEN,PSOFILL S PSOIEN=""
"RTN","PSO7P341",37,0)
 S PSONAME="PSO*7*341 Post-Init"
"RTN","PSO7P341",38,0)
 S PSOMSG(1)=PSONAME_" has completed"
"RTN","PSO7P341",39,0)
 S PSOMSG(2)="Number of invalid EPH nodes killed is "
"RTN","PSO7P341",40,0)
 S PSOMSG(2)=PSOMSG(2)_$P($G(^TMP("PSO7P341")),U,2)
"RTN","PSO7P341",41,0)
 S PSOMSG(3)="                                                 "
"RTN","PSO7P341",42,0)
 S XMSUB=PSONAME
"RTN","PSO7P341",43,0)
 S XMDUZ="OUTPATIENT PHARMACY"
"RTN","PSO7P341",44,0)
 S XMTEXT="PSOMSG("
"RTN","PSO7P341",45,0)
 S XMY(DUZ)=""
"RTN","PSO7P341",46,0)
 S PSOCNT=0,PSOCNT1=4
"RTN","PSO7P341",47,0)
 F  S PSOIEN=$O(^TMP("PSO7P341",PSOIEN)) Q:PSOIEN=""  D
"RTN","PSO7P341",48,0)
 . S PSOFILL=""
"RTN","PSO7P341",49,0)
 . F  S PSOFILL=$O(^TMP("PSO7P341",PSOIEN,PSOFILL)) Q:PSOFILL=""  D
"RTN","PSO7P341",50,0)
 . . S PSOCNT1=PSOCNT1+1,PSOCNT=PSOCNT+1
"RTN","PSO7P341",51,0)
 . . S PSOMSG(PSOCNT1)=$E(100000+PSOCNT,2,99)
"RTN","PSO7P341",52,0)
 . . S PSOMSG(PSOCNT1)=PSOMSG(PSOCNT1)_"    RX:"_PSOIEN_"    "
"RTN","PSO7P341",53,0)
 . . S PSOMSG(PSOCNT1)=PSOMSG(PSOCNT1)_"INVALID FILL#:"_PSOFILL
"RTN","PSO7P341",54,0)
 D ^XMD
"RTN","PSO7P341",55,0)
 Q
"RTN","PSO7P341",56,0)
 ;-------------------------------------------------------------
"RTN","PSO7P341",57,0)
RESTART NEW ZTSAVE,ZTIO,ZTRTN,ZTDESC
"RTN","PSO7P341",58,0)
 S ZTSAVE("RESTART")=1
"RTN","PSO7P341",59,0)
 S ZTIO="",ZTRTN="START1^PSO7P341",ZTDESC="PSO*7*341 Post-init"
"RTN","PSO7P341",60,0)
 D ^%ZTLOAD
"RTN","PSO7P341",61,0)
 W !!,$S($D(ZTSK):"PSO*7*341 post-init (RESTARTED) - Task number ")
"RTN","PSO7P341",62,0)
 W ZTSK KILL ZTSK
"RTN","PSO7P341",63,0)
 Q
"RTN","PSO7P341",64,0)
 ;
"RTN","PSO7P341",65,0)
TEST ;Create entries and stop compile to test restart
"RTN","PSO7P341",66,0)
 ;Call routine at RESTART^PSO7P341 to restart
"RTN","PSO7P341",67,0)
 ;This subroutine is for testing only
"RTN","PSO7P341",68,0)
 ;
"RTN","PSO7P341",69,0)
 NEW STOP,IEN,REFILL,RX
"RTN","PSO7P341",70,0)
 KILL ^TMP("PSO7P341")
"RTN","PSO7P341",71,0)
 S ^TMP("PSO7P341")="0^0"
"RTN","PSO7P341",72,0)
 S IEN=0
"RTN","PSO7P341",73,0)
 F  S IEN=$O(^PSRX(IEN)) Q:'IEN  Q:$G(STOP)  D
"RTN","PSO7P341",74,0)
 . S REFILL=0,$P(^TMP("PSO7P341"),U)=IEN
"RTN","PSO7P341",75,0)
 . S RX=$P($G(^PSRX(IEN,0)),U) I RX="" Q
"RTN","PSO7P341",76,0)
 . F  S REFILL=$O(^PSRX(IEN,1,REFILL)) Q:'REFILL  D
"RTN","PSO7P341",77,0)
 . . S $P(^TMP("PSO7P341"),U,2)=$P(^TMP("PSO7P341"),U,2)+1
"RTN","PSO7P341",78,0)
 . . S ^TMP("PSO7P341",RX,REFILL)=""
"RTN","PSO7P341",79,0)
 . . I $P($G(^TMP("PSO7P341")),U,2)>12 S STOP=1
"RTN","PSO7P341",80,0)
 I $G(STOP) D
"RTN","PSO7P341",81,0)
 . W !,"Test compile completed."
"RTN","PSO7P341",82,0)
 . W !,"Type D RESTART^PSO7P341 to test restart",!
"RTN","PSO7P341",83,0)
 QUIT
"RTN","PSOBPSU2")
0^1^B33237601^B32851035
"RTN","PSOBPSU2",1,0)
PSOBPSU2 ;BIRM/MFR - BPS (ECME) Utilities 2 ; 5/3/10 12:41pm
"RTN","PSOBPSU2",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**260,287,289,341**;DEC 1997;Build 8
"RTN","PSOBPSU2",3,0)
 ;Reference to File 200 - NEW PERSON supported by IA 10060
"RTN","PSOBPSU2",4,0)
 ;Reference to DUR1^BPSNCPD3 supported by IA 4560
"RTN","PSOBPSU2",5,0)
 ;Reference to $$NCPDPQTY^PSSBPSUT supported by IA 4992
"RTN","PSOBPSU2",6,0)
 ; 
"RTN","PSOBPSU2",7,0)
MWC(RX,RFL) ; Returns whether a prescription is (M)ail, (W)indow or (C)MOP
"RTN","PSOBPSU2",8,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSU2",9,0)
 ;       (o) RFL  - Refill #  (Default: most recent)
"RTN","PSOBPSU2",10,0)
 ;Output: "M": MAIL / "W": WINDOW / "C": CMOP
"RTN","PSOBPSU2",11,0)
 ;
"RTN","PSOBPSU2",12,0)
 N MWC
"RTN","PSOBPSU2",13,0)
 ;
"RTN","PSOBPSU2",14,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSU2",15,0)
 ;
"RTN","PSOBPSU2",16,0)
 ; - MAIL/WINDOW fields (Original and Refill)
"RTN","PSOBPSU2",17,0)
 I RFL S MWC=$$GET1^DIQ(52.1,RFL_","_RX,2,"I")
"RTN","PSOBPSU2",18,0)
 E  S MWC=$$GET1^DIQ(52,RX,11,"I")
"RTN","PSOBPSU2",19,0)
 S:MWC="" MWC="W"
"RTN","PSOBPSU2",20,0)
 ;
"RTN","PSOBPSU2",21,0)
 ; - Checking the RX SUSPENSE file (#52.5)
"RTN","PSOBPSU2",22,0)
 I $$GET1^DIQ(52,RX,100,"I")=5 D
"RTN","PSOBPSU2",23,0)
 . N RXS S RXS=+$O(^PS(52.5,"B",RX,0)) Q:'RXS
"RTN","PSOBPSU2",24,0)
 . I $$GET1^DIQ(52.5,RXS,3,"I")'="" S MWC="C" Q
"RTN","PSOBPSU2",25,0)
 . S MWC="M"
"RTN","PSOBPSU2",26,0)
 ;
"RTN","PSOBPSU2",27,0)
 ; - Checking the CMOP EVENT sub-file (#52.01)
"RTN","PSOBPSU2",28,0)
 I MWC'="C" D
"RTN","PSOBPSU2",29,0)
 . N CMP S CMP=0
"RTN","PSOBPSU2",30,0)
 . F  S CMP=$O(^PSRX(RX,4,CMP)) Q:'CMP  D  I MWC="C" Q
"RTN","PSOBPSU2",31,0)
 . . I $$GET1^DIQ(52.01,CMP_","_RX,2,"I")=RFL S MWC="C"
"RTN","PSOBPSU2",32,0)
 ;
"RTN","PSOBPSU2",33,0)
 Q MWC
"RTN","PSOBPSU2",34,0)
 ;
"RTN","PSOBPSU2",35,0)
RXACT(RX,RFL,COMM,TYPE,USR) ; - Add an Activity to the ECME Activity Log (PRESCRIPTION file)
"RTN","PSOBPSU2",36,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSU2",37,0)
 ;       (o) RFL  - Refill #  (Default: most recent)
"RTN","PSOBPSU2",38,0)
 ;       (r) COMM - Comments (up to 75 characters)
"RTN","PSOBPSU2",39,0)
 ;       (r) TYPE - Comments type: (M-ECME,E-Edit, etc...) See file #52 DD for all values
"RTN","PSOBPSU2",40,0)
 ;       (o) USR  - User logging the comments (Default: DUZ)
"RTN","PSOBPSU2",41,0)
 ;
"RTN","PSOBPSU2",42,0)
 S:'$D(RFL) RFL=$$LSTRFL^PSOBPSU1(RX) S:'$D(USR) USR=DUZ
"RTN","PSOBPSU2",43,0)
 S:'$D(^VA(200,+USR,0)) USR=DUZ S COMM=$E($G(COMM),1,75)
"RTN","PSOBPSU2",44,0)
 ;
"RTN","PSOBPSU2",45,0)
 I COMM="" Q
"RTN","PSOBPSU2",46,0)
 I '$D(^PSRX(RX)) Q
"RTN","PSOBPSU2",47,0)
 ;
"RTN","PSOBPSU2",48,0)
 N PSOTRIC S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(RX,RFL,PSOTRIC)
"RTN","PSOBPSU2",49,0)
 I $E(COMM,1,7)'="TRICARE",PSOTRIC S COMM=$E("TRICARE-"_COMM,1,75)
"RTN","PSOBPSU2",50,0)
 N X,DIC,DA,DD,DO,DR,DINUM,Y,DLAYGO
"RTN","PSOBPSU2",51,0)
 S DA(1)=RX,DIC="^PSRX("_RX_",""A"",",DLAYGO=52.3,DIC(0)="L"
"RTN","PSOBPSU2",52,0)
 S DIC("DR")=".02///"_TYPE_";.03////"_USR_";.04///"_$S(TYPE'="M"&(RFL>5):RFL+1,1:RFL)_";.05///"_COMM
"RTN","PSOBPSU2",53,0)
 S X=$$NOW^XLFDT() D FILE^DICN
"RTN","PSOBPSU2",54,0)
 Q
"RTN","PSOBPSU2",55,0)
 ;
"RTN","PSOBPSU2",56,0)
ECMENUM(RX) ; Returns the ECME number for a specific prescription
"RTN","PSOBPSU2",57,0)
 N ECMENUM,STS,RF
"RTN","PSOBPSU2",58,0)
 S ECMENUM=$E(10000000+RX,2,8)
"RTN","PSOBPSU2",59,0)
 S STS=$$STATUS^PSOBPSUT(RX,0)
"RTN","PSOBPSU2",60,0)
 I STS="" D
"RTN","PSOBPSU2",61,0)
 . S RF=0 F  S RF=$O(^PSRX(RX,RF)) Q:'RF  D  I STS'="" Q
"RTN","PSOBPSU2",62,0)
 . . S STS=$$STATUS^PSOBPSUT(RX,RF)
"RTN","PSOBPSU2",63,0)
 I STS="" Q ""
"RTN","PSOBPSU2",64,0)
 Q ECMENUM
"RTN","PSOBPSU2",65,0)
 ;
"RTN","PSOBPSU2",66,0)
RXNUM(ECME) ; Returns the Rx number for a specific ECME number
"RTN","PSOBPSU2",67,0)
 ;
"RTN","PSOBPSU2",68,0)
 N RXNUM,FOUND,MAX,LFT,RAD,I,DIR,RX
"RTN","PSOBPSU2",69,0)
 S MAX=$O(^PSRX(999999999999),-1),LFT=0 I $L(MAX)>7 S LFT=$E(MAX,1,$L(MAX)-7)
"RTN","PSOBPSU2",70,0)
 S FOUND=0
"RTN","PSOBPSU2",71,0)
 F RAD=LFT:-1:0 D
"RTN","PSOBPSU2",72,0)
 . S RX=RAD*10000000+ECME I $D(^PSRX(RX,0)),$$ECMENUM(RX)=ECME S FOUND=FOUND+1,FOUND(FOUND)=RX
"RTN","PSOBPSU2",73,0)
 ;
"RTN","PSOBPSU2",74,0)
 I FOUND<2 D
"RTN","PSOBPSU2",75,0)
 . I FOUND=0 S FOUND=-1 Q
"RTN","PSOBPSU2",76,0)
 . S FOUND=FOUND(1)
"RTN","PSOBPSU2",77,0)
 E  D
"RTN","PSOBPSU2",78,0)
 . W ! F I=1:1:FOUND W !?5,I,". ",$$GET1^DIQ(52,FOUND(I),.01),?25,$$GET1^DIQ(52,FOUND(I),6)
"RTN","PSOBPSU2",79,0)
 . W ! S DIR(0)="NA^1:"_FOUND,DIR("A")="Select one: ",DIR("B")=1
"RTN","PSOBPSU2",80,0)
 . D ^DIR I $D(DIRUT) S FOUND=-1 Q
"RTN","PSOBPSU2",81,0)
 . S FOUND=FOUND(Y)
"RTN","PSOBPSU2",82,0)
 ;
"RTN","PSOBPSU2",83,0)
 Q FOUND
"RTN","PSOBPSU2",84,0)
 ;
"RTN","PSOBPSU2",85,0)
ELIG(RX,RFL,PSOELIG) ;Stores eligibility flag
"RTN","PSOBPSU2",86,0)
 I RFL>0,'$D(^PSRX(RX,1,RFL,0)) QUIT
"RTN","PSOBPSU2",87,0)
 N DA,DIE,X,Y,PSOTRIC
"RTN","PSOBPSU2",88,0)
 I RFL=0 S DA=RX,DIE="^PSRX(",DR="85///"_PSOELIG D ^DIE
"RTN","PSOBPSU2",89,0)
 E  S DA=RFL,DA(1)=RX,DIE="^PSRX("_DA(1)_",1,",DR="85///"_PSOELIG D ^DIE
"RTN","PSOBPSU2",90,0)
 Q
"RTN","PSOBPSU2",91,0)
 ;
"RTN","PSOBPSU2",92,0)
 ;Description: 
"RTN","PSOBPSU2",93,0)
 ;Input: RX = Prescription file #52 IEN
"RTN","PSOBPSU2",94,0)
 ; RFL = Refill number
"RTN","PSOBPSU2",95,0)
 ;Returns: A value of 0 (zero) will be returned when reject codes M6, M8,
"RTN","PSOBPSU2",96,0)
 ;NN, and 99 are present OR if on susp hold which means the prescription should not 
"RTN","PSOBPSU2",97,0)
 ;be printed from suspense. Otherwise, a value of 1(one) will be returned.
"RTN","PSOBPSU2",98,0)
DUR(RX,RFL) ;
"RTN","PSOBPSU2",99,0)
 N REJ,IDX,TXT,CODE,SHOLD,SHCODE,SHDT
"RTN","PSOBPSU2",100,0)
 S SHOLD=1,IDX=""
"RTN","PSOBPSU2",101,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSU2",102,0)
 S SHDT=$$SHDT(RX,RFL) ; Get suspense hold date for rx/refill
"RTN","PSOBPSU2",103,0)
 ; Add one day to compare to prevent from running just after midnight problem.
"RTN","PSOBPSU2",104,0)
 I SHDT>$$FMADD^XLFDT(DT,1) Q 0 ; Quit with 0 since still on hold
"RTN","PSOBPSU2",105,0)
 D DUR1^BPSNCPD3(RX,RFL,.REJ) ; Get reject list from last submission
"RTN","PSOBPSU2",106,0)
 F  S IDX=$O(REJ(IDX)) Q:IDX=""  D  Q:'SHOLD
"RTN","PSOBPSU2",107,0)
 . S TXT=$G(REJ(IDX,"REJ CODE LST"))
"RTN","PSOBPSU2",108,0)
 . F I=1:1:$L(TXT,",") S CODE=$P(TXT,",",I) D  Q:'SHOLD
"RTN","PSOBPSU2",109,0)
 . . F SHCODE="M6","M8","NN",99 D  Q:'SHOLD
"RTN","PSOBPSU2",110,0)
 . . . I CODE=SHCODE D
"RTN","PSOBPSU2",111,0)
 . . . . I SHDT="" S SHOLD=0 D SHDTLOG(RX,RFL) Q  ; No previous Susp Hold Date or log entry - Create it.
"RTN","PSOBPSU2",112,0)
 Q SHOLD
"RTN","PSOBPSU2",113,0)
 ;
"RTN","PSOBPSU2",114,0)
 ;Description: This subroutine sets the EPHARMACY SUSPENSE HOLD DATE field
"RTN","PSOBPSU2",115,0)
 ;for the rx or refill to tomorrow and adds an entry to the SUSPENSE Activity Log.
"RTN","PSOBPSU2",116,0)
 ;Input: RX = Prescription File IEN
"RTN","PSOBPSU2",117,0)
 ; RFL = Refill
"RTN","PSOBPSU2",118,0)
SHDTLOG(RX,RFL) ;
"RTN","PSOBPSU2",119,0)
 N DA,DIE,DR,COMM,SHDT
"RTN","PSOBPSU2",120,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSU2",121,0)
 S SHDT=$$FMADD^XLFDT(DT,1)
"RTN","PSOBPSU2",122,0)
 S COMM="SUSPENSE HOLD until "_$$FMTE^XLFDT(SHDT,"2D")_" due to host reject error."
"RTN","PSOBPSU2",123,0)
 I RFL=0 S DA=RX,DIE="^PSRX(",DR="86///"_SHDT D ^DIE
"RTN","PSOBPSU2",124,0)
 E  S DA=RFL,DA(1)=RX,DIE="^PSRX("_DA(1)_",1,",DR="86///"_SHDT D ^DIE
"RTN","PSOBPSU2",125,0)
 D RXACT(RX,RFL,COMM,"S",+$G(DUZ)) ; Create Activity Log entry
"RTN","PSOBPSU2",126,0)
 Q
"RTN","PSOBPSU2",127,0)
 ;
"RTN","PSOBPSU2",128,0)
 ;Description: This function returns the EPHARMACY SUSPENSE HOLD DATE field
"RTN","PSOBPSU2",129,0)
 ;for the rx or refill
"RTN","PSOBPSU2",130,0)
 ;Input: RX = Prescription File IEN
"RTN","PSOBPSU2",131,0)
 ; RFL = Refill
"RTN","PSOBPSU2",132,0)
SHDT(RX,RFL) ;
"RTN","PSOBPSU2",133,0)
 N FILE,IENS
"RTN","PSOBPSU2",134,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSU2",135,0)
 S FILE=$S(RFL=0:52,1:52.1),IENS=$S(RFL=0:RX_",",1:RFL_","_RX_",")
"RTN","PSOBPSU2",136,0)
 Q $$GET1^DIQ(FILE,IENS,86,"I")
"RTN","PSOBPSU2",137,0)
 ;
"RTN","PSOBPSU2",138,0)
ELOG(RESP) ; - due to size of PSOBPSU1 exceeding limit 
"RTN","PSOBPSU2",139,0)
 ; -Logs an ECME Activity Log if Rx Qty is different than Billing Qty
"RTN","PSOBPSU2",140,0)
 I '$G(RESP),$T(NCPDPQTY^PSSBPSUT)'="" D
"RTN","PSOBPSU2",141,0)
 . N DRUG,RXQTY,BLQTY,BLDU,Z
"RTN","PSOBPSU2",142,0)
 . S DRUG=$$GET1^DIQ(52,RX,6,"I")
"RTN","PSOBPSU2",143,0)
 . S RXQTY=$S('RFL:$$GET1^DIQ(52,RX,7,"I"),1:$$GET1^DIQ(52.1,RFL_","_RX,1))/1
"RTN","PSOBPSU2",144,0)
 . S Z=$$NCPDPQTY^PSSBPSUT(DRUG,RXQTY),BLQTY=Z/1,BLDU=$P(Z,"^",2)
"RTN","PSOBPSU2",145,0)
 . I RXQTY'=BLQTY D
"RTN","PSOBPSU2",146,0)
 . . D RXACT(RX,RFL,"BILLING QUANTITY submitted: "_$J(BLQTY,0,$L($P(BLQTY,".",2)))_" ("_BLDU_")","M",DUZ)
"RTN","PSOBPSU2",147,0)
 Q
"RTN","PSOBPSU2",148,0)
 ;
"RTN","PSOBPSU2",149,0)
UPDFL(RXREC,SUB,INDT) ;update fill date with release date when NDC changes at CMOP and OPAI auto-release
"RTN","PSOBPSU2",150,0)
 ;Input: RXREC = Prescription File IEN
"RTN","PSOBPSU2",151,0)
 ;         SUB = Refill
"RTN","PSOBPSU2",152,0)
 ;        INDT = Release date
"RTN","PSOBPSU2",153,0)
 N DA,DIE,DR,PSOX,SFN,DEAD,SUB,XOK,OLD,X,II,EXDAT,OFILLD,COM,CNT,RFCNT,RF
"RTN","PSOBPSU2",154,0)
 S DEAD=0,SFN=""
"RTN","PSOBPSU2",155,0)
 S EXDAT=INDT I EXDAT["." S EXDAT=$P(EXDAT,".")
"RTN","PSOBPSU2",156,0)
 I '$D(SUB) S SUB=0 F II=0:0 S II=$O(^PSRX(RXREC,1,II)) Q:'II  S SUB=+II
"RTN","PSOBPSU2",157,0)
 I 'SUB S OFILLD=$$GET1^DIQ(52,RXREC,22,"I") Q:OFILLD=EXDAT  D
"RTN","PSOBPSU2",158,0)
 .S (X,OLD)=$P(^PSRX(RXREC,2),"^",2),DA=RXREC,DR="22///"_EXDAT_";101///"_EXDAT,DIE=52
"RTN","PSOBPSU2",159,0)
 .D ^DIE K DIE,DA
"RTN","PSOBPSU2",160,0)
 I SUB S (OLD,X)=+$P($G(^PSRX(RXREC,1,SUB,0)),"^"),DA(1)=RXREC,DA=SUB,OFILLD=$$GET1^DIQ(52.1,DA_","_RXREC,.01,"I") Q:OFILLD=EXDAT  D
"RTN","PSOBPSU2",161,0)
 . S DIE="^PSRX("_DA(1)_",1,",DR=".01///"_EXDAT D ^DIE K DIE S $P(^PSRX(RXREC,3),"^")=EXDAT
"RTN","PSOBPSU2",162,0)
 Q:$D(DTOUT)!($D(DUOUT))
"RTN","PSOBPSU2",163,0)
 S DA=RXREC
"RTN","PSOBPSU2",164,0)
 D AREC^PSOSUCH1
"RTN","PSOBPSU2",165,0)
FIN ;
"RTN","PSOBPSU2",166,0)
 Q
"RTN","PSOREJU2")
0^2^B48298222^B47862203
"RTN","PSOREJU2",1,0)
PSOREJU2 ;BIRM/MFR - BPS (ECME) - Clinical Rejects Utilities (1) ; 5/3/10 12:43pm
"RTN","PSOREJU2",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,260,287,341**;DEC 1997;Build 8
"RTN","PSOREJU2",3,0)
 ;Reference to $$NABP^BPSBUTL supported by IA 4719
"RTN","PSOREJU2",4,0)
 ;Reference to File 9002313.23 - BPS NCPDP REASON FOR SERVICE CODE supported by IA 4714
"RTN","PSOREJU2",5,0)
 ;
"RTN","PSOREJU2",6,0)
GET(RX,RFL,REJDATA,REJID,OKCL,CODE) ;
"RTN","PSOREJU2",7,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOREJU2",8,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOREJU2",9,0)
 ;         (r) REJDATA(REJECT IEN,FIELD) - Array where these Reject fields will be returned:
"RTN","PSOREJU2",10,0)
 ;                       "CODE" - Reject Code (79 or 88)
"RTN","PSOREJU2",11,0)
 ;                       "DATE/TIME" - DATE/TIME Reject was detected
"RTN","PSOREJU2",12,0)
 ;                       "PAYER MESSAGE" - Message returned by the payer
"RTN","PSOREJU2",13,0)
 ;                       "REASON" - Reject Reason description (from payer)
"RTN","PSOREJU2",14,0)
 ;                       "INSURANCE NAME" - Patient's Insurance Company Name
"RTN","PSOREJU2",15,0)
 ;                       "GROUP NAME" - Patient's Insurance Group Name
"RTN","PSOREJU2",16,0)
 ;                       "GROUP NUMBER" - Patient's Insurance Group Number
"RTN","PSOREJU2",17,0)
 ;                       "CARDHOLDER ID" - Patient's Insurance Cardholder ID
"RTN","PSOREJU2",18,0)
 ;                       "PLAN CONTACT" - Plan's Contact (eg., "1-800-...")
"RTN","PSOREJU2",19,0)
 ;                       "PLAN PREVIOUS FILL DATE" - Last time Rx was paid by payer
"RTN","PSOREJU2",20,0)
 ;                       "STATUS" - REJECTS status ("OPEN/UNRESOLVED" or "CLOSED/RESOLVED")
"RTN","PSOREJU2",21,0)
 ;                       "DUR TEXT" - Payer's DUR description
"RTN","PSOREJU2",22,0)
 ;                       "OTHER REJECTS" - Other Rejects on the same response
"RTN","PSOREJU2",23,0)
 ;                       "REASON SVC CODE" - Reason for Service Code
"RTN","PSOREJU2",24,0)
 ;                  If REJECT is closed, the following fields will be returned:
"RTN","PSOREJU2",25,0)
 ;                       "CLA CODE" - Clarification Code submitted
"RTN","PSOREJU2",26,0)
 ;                       "PRIOR AUTH TYPE" - Prior Authorization Type
"RTN","PSOREJU2",27,0)
 ;                       "PRIOR AUTH NUMBER" - Prior Authorization Type
"RTN","PSOREJU2",28,0)
 ;                       "CLOSED DATE/TIME" - DATE/TIME Reject was closed
"RTN","PSOREJU2",29,0)
 ;                       "CLOSED BY" - Name of the user responsible for closing Reject
"RTN","PSOREJU2",30,0)
 ;                       "CLOSE REASON" - Reason for closing Reject (text)
"RTN","PSOREJU2",31,0)
 ;                       "CLOSE COMMENTS" - User entered comments at close
"RTN","PSOREJU2",32,0)
 ;         (o) REJID - REJECT IEN in the PRESCRIPTION file for retrieve this REJECT
"RTN","PSOREJU2",33,0)
 ;         (o) OKCL - If set to 1, CLOSED REJECTs will also be returned
"RTN","PSOREJU2",34,0)
 ;         (o) CODE - Only REJECTs with this CODE should be returned
"RTN","PSOREJU2",35,0)
 ;
"RTN","PSOREJU2",36,0)
 N REJS,ARRAY,REJFLD,IDX,COM,Z
"RTN","PSOREJU2",37,0)
 ;
"RTN","PSOREJU2",38,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJU2",39,0)
 ;
"RTN","PSOREJU2",40,0)
 K REJDATA
"RTN","PSOREJU2",41,0)
 I '$O(^PSRX(RX,"REJ",0)) Q
"RTN","PSOREJU2",42,0)
 ;
"RTN","PSOREJU2",43,0)
 K REJS S RFL=+$G(RFL)
"RTN","PSOREJU2",44,0)
 I $G(REJID) D
"RTN","PSOREJU2",45,0)
 . I +$P($G(^PSRX(RX,"REJ",REJID,0)),"^",4)'=RFL Q
"RTN","PSOREJU2",46,0)
 . I '$G(OKCL),$P($G(^PSRX(RX,"REJ",REJID,0)),"^",5) Q
"RTN","PSOREJU2",47,0)
 . S REJS(REJID)=""
"RTN","PSOREJU2",48,0)
 E  D
"RTN","PSOREJU2",49,0)
 . S IDX=999
"RTN","PSOREJU2",50,0)
 . F  S IDX=$O(^PSRX(RX,"REJ",IDX),-1) Q:'IDX  D
"RTN","PSOREJU2",51,0)
 . . I +$P($G(^PSRX(RX,"REJ",IDX,0)),"^",4)'=RFL Q
"RTN","PSOREJU2",52,0)
 . . I '$G(OKCL),$P($G(^PSRX(RX,"REJ",IDX,0)),"^",5) Q
"RTN","PSOREJU2",53,0)
 . . S REJS(IDX)=""
"RTN","PSOREJU2",54,0)
 I '$D(REJS) Q
"RTN","PSOREJU2",55,0)
 ;
"RTN","PSOREJU2",56,0)
 S IDX=0
"RTN","PSOREJU2",57,0)
 F  S IDX=$O(REJS(IDX)) Q:'IDX  D
"RTN","PSOREJU2",58,0)
 . K ARRAY D GETS^DIQ(52.25,IDX_","_RX_",","*","","ARRAY")
"RTN","PSOREJU2",59,0)
 . K REJFLD M REJFLD=ARRAY(52.25,IDX_","_RX_",")
"RTN","PSOREJU2",60,0)
 . I $G(CODE),REJFLD(.01)'=CODE Q
"RTN","PSOREJU2",61,0)
 . S REJDATA(IDX,"CODE")=$G(REJFLD(.01))
"RTN","PSOREJU2",62,0)
 . S REJDATA(IDX,"DATE/TIME")=$G(REJFLD(1))
"RTN","PSOREJU2",63,0)
 . S REJDATA(IDX,"PAYER MESSAGE")=$G(REJFLD(2))
"RTN","PSOREJU2",64,0)
 . S REJDATA(IDX,"REASON")=$G(REJFLD(3))
"RTN","PSOREJU2",65,0)
 . S REJDATA(IDX,"PHARMACIST")=$G(REJFLD(4))
"RTN","PSOREJU2",66,0)
 . S REJDATA(IDX,"INSURANCE NAME")=$G(REJFLD(20))
"RTN","PSOREJU2",67,0)
 . S REJDATA(IDX,"GROUP NAME")=$G(REJFLD(6))
"RTN","PSOREJU2",68,0)
 . S REJDATA(IDX,"GROUP NUMBER")=$G(REJFLD(21))
"RTN","PSOREJU2",69,0)
 . S REJDATA(IDX,"CARDHOLDER ID")=$G(REJFLD(22))
"RTN","PSOREJU2",70,0)
 . S REJDATA(IDX,"PLAN CONTACT")=$G(REJFLD(7))
"RTN","PSOREJU2",71,0)
 . S REJDATA(IDX,"PLAN PREVIOUS FILL DATE")=$G(REJFLD(8))
"RTN","PSOREJU2",72,0)
 . S REJDATA(IDX,"STATUS")=$G(REJFLD(9))
"RTN","PSOREJU2",73,0)
 . S REJDATA(IDX,"OTHER REJECTS")=$G(REJFLD(17))
"RTN","PSOREJU2",74,0)
 . S REJDATA(IDX,"DUR TEXT")=$G(REJFLD(18))
"RTN","PSOREJU2",75,0)
 . S REJDATA(IDX,"REASON SVC CODE")=$G(REJFLD(14))
"RTN","PSOREJU2",76,0)
 . S REJDATA(IDX,"RESPONSE IEN")=$G(REJFLD(16))
"RTN","PSOREJU2",77,0)
 . I '$G(OKCL) Q
"RTN","PSOREJU2",78,0)
 . S REJDATA(IDX,"CLOSED DATE/TIME")=$G(REJFLD(10))
"RTN","PSOREJU2",79,0)
 . S REJDATA(IDX,"CLOSED BY")=$G(REJFLD(11))
"RTN","PSOREJU2",80,0)
 . S REJDATA(IDX,"CLOSE REASON")=$G(REJFLD(12))
"RTN","PSOREJU2",81,0)
 . S REJDATA(IDX,"CLOSE COMMENTS")=$G(REJFLD(13))
"RTN","PSOREJU2",82,0)
 . S REJDATA(IDX,"COD1")=$G(REJFLD(14))
"RTN","PSOREJU2",83,0)
 . S REJDATA(IDX,"COD2")=$G(REJFLD(15))
"RTN","PSOREJU2",84,0)
 . S REJDATA(IDX,"COD3")=$G(REJFLD(19))
"RTN","PSOREJU2",85,0)
 . S REJDATA(IDX,"CLA CODE")=$G(REJFLD(24))
"RTN","PSOREJU2",86,0)
 . S REJDATA(IDX,"PRIOR AUTH TYPE")=$G(REJFLD(25))
"RTN","PSOREJU2",87,0)
 . S REJDATA(IDX,"PRIOR AUTH NUMBER")=$G(REJFLD(26))
"RTN","PSOREJU2",88,0)
 . S COM=0 F  S COM=$O(^PSRX(RX,"REJ",IDX,"COM",COM)) Q:'COM  D
"RTN","PSOREJU2",89,0)
 . . S Z=^PSRX(RX,"REJ",IDX,"COM",COM,0)
"RTN","PSOREJU2",90,0)
 . . S REJDATA(IDX,"COMMENTS",COM,"DATE/TIME")=$P(Z,"^")
"RTN","PSOREJU2",91,0)
 . . S REJDATA(IDX,"COMMENTS",COM,"USER")=$P(Z,"^",2)
"RTN","PSOREJU2",92,0)
 . . S REJDATA(IDX,"COMMENTS",COM,"COMMENTS")=$P(Z,"^",3)
"RTN","PSOREJU2",93,0)
 Q
"RTN","PSOREJU2",94,0)
 ;
"RTN","PSOREJU2",95,0)
HELP(OPTS) ; Display the Help Text for the DUR handling options (OVERRIDE/IGNORE/STOP/QUIT)
"RTN","PSOREJU2",96,0)
 ;
"RTN","PSOREJU2",97,0)
 I OPTS["O" D
"RTN","PSOREJU2",98,0)
 . W !?1,"(O)verride - This option will provide the prompts for the code sets needed to"
"RTN","PSOREJU2",99,0)
 . W !?1,"             override this reject and get a payable 3rd party claim. Before"
"RTN","PSOREJU2",100,0)
 . W !?1,"             you select this option, you may need to call the 3rd party payer"
"RTN","PSOREJU2",101,0)
 . W !?1,"             to determine which code sets are needed to override a particular"
"RTN","PSOREJU2",102,0)
 . W !?1,"             reject. Once the proper override is accepted the label will print"
"RTN","PSOREJU2",103,0)
 . W !?1,"             and the prescription can be filled."
"RTN","PSOREJU2",104,0)
 ;
"RTN","PSOREJU2",105,0)
 I OPTS["I" D
"RTN","PSOREJU2",106,0)
 . W !?1,"(I)gnore   - Choosing Ignore will by-pass 3rd party processing and will allow"
"RTN","PSOREJU2",107,0)
 . W !?1,"             you to print a label and fill the prescription. This essentially"
"RTN","PSOREJU2",108,0)
 . W !?1,"             ignores the clinical safety issues suggested by the 3rd party"
"RTN","PSOREJU2",109,0)
 . W !?1,"             payer and will NOT result in a payable claim."
"RTN","PSOREJU2",110,0)
 ;           
"RTN","PSOREJU2",111,0)
 I OPTS["Q" D
"RTN","PSOREJU2",112,0)
 . W !?1,"(Q)uit     - Choosing Quit will postpone the processing of this prescription"
"RTN","PSOREJU2",113,0)
 . W !?1,"             until this 3rd party reject is resolved. A label will not be"
"RTN","PSOREJU2",114,0)
 . W !?1,"             printed for this prescription and it can not be filled/dispensed"
"RTN","PSOREJU2",115,0)
 . W !?1,"             until this reject is resolved. Rejects can be resolved through"
"RTN","PSOREJU2",116,0)
 . W !?1,"             the Worklist option under the ePharmacy menu."
"RTN","PSOREJU2",117,0)
 Q
"RTN","PSOREJU2",118,0)
 ;
"RTN","PSOREJU2",119,0)
DVINFO(RX,RFL,LM) ; Returns header displayable Division Information
"RTN","PSOREJU2",120,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOREJU2",121,0)
 ;       (o) RFL  - Refill # (Default: most recent)
"RTN","PSOREJU2",122,0)
 ;       (o) LM   - ListManager format? (1 - Yes / 0 - No) - Default: 0
"RTN","PSOREJU2",123,0)
 N TXT,DVINFO,NCPNPI
"RTN","PSOREJU2",124,0)
 S DVINFO="Division : "_$$GET1^DIQ(59,+$$RXSITE^PSOBPSUT(RX,RFL),.01)
"RTN","PSOREJU2",125,0)
 S NCPNPI=$P($$NABP^BPSBUTL(RX,RFL)," ")
"RTN","PSOREJU2",126,0)
 S $E(DVINFO,$S($G(LM):58,1:51))=$S($L(NCPNPI)=7:"NCPDP",1:"  NPI")_"#: "_NCPNPI
"RTN","PSOREJU2",127,0)
 Q DVINFO
"RTN","PSOREJU2",128,0)
 ;
"RTN","PSOREJU2",129,0)
PTINFO(RX,LM) ; Returns header displayable Patient Information
"RTN","PSOREJU2",130,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOREJU2",131,0)
 ;       (o) LM   - ListManager format? (1 - Yes / 0 - No) - Default: 0
"RTN","PSOREJU2",132,0)
 N DFN,VADM,PTINFO
"RTN","PSOREJU2",133,0)
 S DFN=$$GET1^DIQ(52,RX,2,"I") D DEM^VADPT
"RTN","PSOREJU2",134,0)
 S PTINFO="Patient  : "_$E($G(VADM(1)),1,$S($G(LM):24,1:20))_"("_$P($G(VADM(2)),"^",2)_")"
"RTN","PSOREJU2",135,0)
 S PTINFO=PTINFO_"  Sex: "_$P($G(VADM(5)),"^")
"RTN","PSOREJU2",136,0)
 S $E(PTINFO,$S($G(LM):61,1:54))="DOB: "_$P($G(VADM(3)),"^",2)_"("_$P($G(VADM(4)),"^")_")"
"RTN","PSOREJU2",137,0)
 Q PTINFO
"RTN","PSOREJU2",138,0)
 ;
"RTN","PSOREJU2",139,0)
RETRXF(RX,RFL,ONOFF) ; - Set/Reset the Re-transmission flag
"RTN","PSOREJU2",140,0)
 ;Input: (r) RX    - Rx IEN (#52)
"RTN","PSOREJU2",141,0)
 ;       (r) RFL   - Refill IEN (#52.1)
"RTN","PSOREJU2",142,0)
 ;       (o) ONOFF - Turn flag ON or OFF (1 - ON / 0 - OFF) (Default: OFF) 
"RTN","PSOREJU2",143,0)
 I RFL>0,'$D(^PSRX(RX,1,RFL,0)) QUIT
"RTN","PSOREJU2",144,0)
 N DA,DIE,DR
"RTN","PSOREJU2",145,0)
 S DR="82///"_$S($G(ONOFF):"YES",1:"@")
"RTN","PSOREJU2",146,0)
 I 'RFL S DA=RX,DIE="^PSRX("
"RTN","PSOREJU2",147,0)
 I RFL S DA(1)=RX,DA=RFL,DIE="^PSRX("_RX_",1,"
"RTN","PSOREJU2",148,0)
 D ^DIE
"RTN","PSOREJU2",149,0)
 Q
"RTN","PSOREJU2",150,0)
 ;
"RTN","PSOREJU2",151,0)
REASON(TXT) ; Extracts the Reason for service code from the REASON text field
"RTN","PSOREJU2",152,0)
 ; Input: (r) TXT  - Reason text (e.g., NN Reason for Service Code Text)
"RTN","PSOREJU2",153,0)
 ;Output:   REASON - NN (if on valid and on file (#9002313.23), null otherwise)
"RTN","PSOREJU2",154,0)
 N REASON,DIC,X,Y
"RTN","PSOREJU2",155,0)
 S REASON=$P(TXT," ") I $L(REASON)'=2 Q ""
"RTN","PSOREJU2",156,0)
 S DIC=9002313.23,X=REASON D ^DIC I Y<0 Q ""
"RTN","PSOREJU2",157,0)
 Q REASON
"RTN","PSOREJU2",158,0)
 ;
"RTN","PSOREJU2",159,0)
SETOPN(RX,REJ) ; - Set the Reject RE-OPENED flag to YES
"RTN","PSOREJU2",160,0)
 ;Input: (r) RX    - Rx IEN (#52)
"RTN","PSOREJU2",161,0)
 ;       (r) REJ   - Reject IEN (#52.25)
"RTN","PSOREJU2",162,0)
 ;       
"RTN","PSOREJU2",163,0)
 I '$D(^PSRX(RX,"REJ",REJ)) Q
"RTN","PSOREJU2",164,0)
 N DIE,DA,DR
"RTN","PSOREJU2",165,0)
 S DIE="^PSRX("_RX_",""REJ"",",DA(1)=RX,DA=REJ,DR="23///YES" D ^DIE
"RTN","PSOREJU2",166,0)
 Q
"RTN","PSOREJU2",167,0)
 ;
"RTN","PSOREJU2",168,0)
PRT(FIELD,P,L) ; Sets the lines for fields that require text wrapping
"RTN","PSOREJU2",169,0)
 ;Input: FIELD - Subscript name from the DATA(REJ,FIELD) array
"RTN","PSOREJU2",170,0)
 ;         P   - Position where the content should be printed
"RTN","PSOREJU2",171,0)
 ;         L   - Lenght of the text on each line
"RTN","PSOREJU2",172,0)
 N TXT,I
"RTN","PSOREJU2",173,0)
 S TXT=DATA(REJ,FIELD) I $L(TXT)'>L W ?P,TXT Q
"RTN","PSOREJU2",174,0)
 F I=1:1 Q:TXT=""  D
"RTN","PSOREJU2",175,0)
 . I I=1 W ?P,$E(TXT,1,L),! S TXT=$E(TXT,L+1,999) Q
"RTN","PSOREJU2",176,0)
 . W ?P,$E(TXT,1,L) S TXT=$E(TXT,L+1,999) W:TXT'="" !
"RTN","PSOREJU2",177,0)
 Q
"RTN","PSOREJU2",178,0)
 ;
"RTN","PSOREJU2",179,0)
PA() ; - Ask for Prior Authorization Type and Number
"RTN","PSOREJU2",180,0)
 ;Output:(PAT^PAN) PAT - Prior Authorization Type (See DD File#52,
"RTN","PSOREJU2",181,0)
 ;                         Sub-file#52.25,field#25 for possible values)
"RTN","PSOREJU2",182,0)
 ;                 PAN - Prior Authorization Number (11 digits)
"RTN","PSOREJU2",183,0)
 ;        
"RTN","PSOREJU2",184,0)
 N DIR,Y,DIRUT,DIROUT,PAT,PAN
"RTN","PSOREJU2",185,0)
 S DIR(0)="52.25,25",DIR("A")="  Prior Authorization Type",DIR("B")="0"
"RTN","PSOREJU2",186,0)
 S (DIR("?"),DIR("??"))="^D PAHLP^PSOREJU2"
"RTN","PSOREJU2",187,0)
 D ^DIR I $D(DIRUT)!$D(DIROUT) Q "^"
"RTN","PSOREJU2",188,0)
 S PAT=Y
"RTN","PSOREJU2",189,0)
 K DIR S DIR(0)="52.25,26",DIR("A")="Prior Authorization Number"
"RTN","PSOREJU2",190,0)
 S DIR("?")="^D PANHLP^PSOREJU2",DIR("??")=""
"RTN","PSOREJU2",191,0)
 D ^DIR I (Y["^")!$D(DIROUT) Q "^"
"RTN","PSOREJU2",192,0)
 S PAN=Y
"RTN","PSOREJU2",193,0)
 Q (PAT_"^"_PAN)
"RTN","PSOREJU2",194,0)
 ;
"RTN","PSOREJU2",195,0)
PAHLP ; Prior Authorization Type Help
"RTN","PSOREJU2",196,0)
 W !?9,"EPSDT - Early Periodic Screening Diagnosis Treatment"
"RTN","PSOREJU2",197,0)
 W !?9,"AFDC  - Aid to Family with Dependent Children"
"RTN","PSOREJU2",198,0)
 Q
"RTN","PSOREJU2",199,0)
 ;
"RTN","PSOREJU2",200,0)
PANHLP ; Prior Authorization Number Help
"RTN","PSOREJU2",201,0)
 W "OR you may leave it blank if the claim does not require a number."
"RTN","PSOREJU2",202,0)
 Q
"VER")
8.0^22.0
"BLD",7559,6)
^297
**END**
**END**
