Released PSU*4*16 SEQ #14
Extracted from mail message
**KIDS**:PSU*4.0*16^

**INSTALL NAME**
PSU*4.0*16
"BLD",6971,0)
PSU*4.0*16^PHARMACY BENEFITS MANAGEMENT^0^3100111^y
"BLD",6971,1,0)
^^28^28^3100111^
"BLD",6971,1,1,0)
Currently, the Pharmacy Benefits Management (PBM) extract blocks the
"BLD",6971,1,2,0)
transmission of chemistry lab results for "Employee Veteran" and
"BLD",6971,1,3,0)
"Employee Non-Veteran." This patch addresses the New Service Request (NSR)
"BLD",6971,1,4,0)
#20080810 to transmit the chemistry lab results for "Employee Veteran"
"BLD",6971,1,5,0)
via Health Level 7 (HL7) messaging to the PBM extract database while
"BLD",6971,1,6,0)
continuing to block the chemistry lab results for "Employee Non-Veteran."
"BLD",6971,1,7,0)
 
"BLD",6971,1,8,0)
This patch also addresses the following.
"BLD",6971,1,9,0)
 
"BLD",6971,1,10,0)
Problem:
"BLD",6971,1,11,0)
========
"BLD",6971,1,12,0)
Several facilities were reporting that selected laboratory tests were not
"BLD",6971,1,13,0)
present in the Structured Query Language (SQL) database used by PBM to
"BLD",6971,1,14,0)
perform medication use safety surveillance, while the source data was
"BLD",6971,1,15,0)
clearly available in local VistA and Computerized Patient Record
"BLD",6971,1,16,0)
System (CPRS). Upon further investigation, it was discovered that the
"BLD",6971,1,17,0)
laboratory results did transmit as expected, but the lab test name did
"BLD",6971,1,18,0)
not, resulting in database search failures.
"BLD",6971,1,19,0)
 
"BLD",6971,1,20,0)
Resolution:
"BLD",6971,1,21,0)
===========
"BLD",6971,1,22,0)
The source of the error was traced to laboratory tests with a National
"BLD",6971,1,23,0)
Lab Test (NLT) Name containing a tilde (~) character. This character
"BLD",6971,1,24,0)
is also used as the delimiter in HL7 message processing, and the extra
"BLD",6971,1,25,0)
tilde caused the routines that parse the transmitted data to be offset by
"BLD",6971,1,26,0)
one data element. The correction is to translate any tilde characters in
"BLD",6971,1,27,0)
the NLT name into an underscore (_) character, so that any remaining
"BLD",6971,1,28,0)
tilde characters are solely present as the expected HL7 delimiters.
"BLD",6971,4,0)
^9.64PA^^
"BLD",6971,6.3)
3
"BLD",6971,"ABPKG")
n
"BLD",6971,"KRN",0)
^9.67PA^779.2^20
"BLD",6971,"KRN",.4,0)
.4
"BLD",6971,"KRN",.401,0)
.401
"BLD",6971,"KRN",.402,0)
.402
"BLD",6971,"KRN",.403,0)
.403
"BLD",6971,"KRN",.5,0)
.5
"BLD",6971,"KRN",.84,0)
.84
"BLD",6971,"KRN",3.6,0)
3.6
"BLD",6971,"KRN",3.8,0)
3.8
"BLD",6971,"KRN",9.2,0)
9.2
"BLD",6971,"KRN",9.8,0)
9.8
"BLD",6971,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",6971,"KRN",9.8,"NM",1,0)
PSULRHL1^^0^B40583556
"BLD",6971,"KRN",9.8,"NM","B","PSULRHL1",1)

"BLD",6971,"KRN",19,0)
19
"BLD",6971,"KRN",19.1,0)
19.1
"BLD",6971,"KRN",101,0)
101
"BLD",6971,"KRN",409.61,0)
409.61
"BLD",6971,"KRN",771,0)
771
"BLD",6971,"KRN",779.2,0)
779.2
"BLD",6971,"KRN",870,0)
870
"BLD",6971,"KRN",8989.51,0)
8989.51
"BLD",6971,"KRN",8989.52,0)
8989.52
"BLD",6971,"KRN",8994,0)
8994
"BLD",6971,"KRN","B",.4,.4)

"BLD",6971,"KRN","B",.401,.401)

"BLD",6971,"KRN","B",.402,.402)

"BLD",6971,"KRN","B",.403,.403)

"BLD",6971,"KRN","B",.5,.5)

"BLD",6971,"KRN","B",.84,.84)

"BLD",6971,"KRN","B",3.6,3.6)

"BLD",6971,"KRN","B",3.8,3.8)

"BLD",6971,"KRN","B",9.2,9.2)

"BLD",6971,"KRN","B",9.8,9.8)

"BLD",6971,"KRN","B",19,19)

"BLD",6971,"KRN","B",19.1,19.1)

"BLD",6971,"KRN","B",101,101)

"BLD",6971,"KRN","B",409.61,409.61)

"BLD",6971,"KRN","B",771,771)

"BLD",6971,"KRN","B",779.2,779.2)

"BLD",6971,"KRN","B",870,870)

"BLD",6971,"KRN","B",8989.51,8989.51)

"BLD",6971,"KRN","B",8989.52,8989.52)

"BLD",6971,"KRN","B",8994,8994)

"BLD",6971,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",6971,"QUES",0)
^9.62^^
"BLD",6971,"REQB",0)
^9.611^1^1
"BLD",6971,"REQB",1,0)
PSU*4.0*11^2
"BLD",6971,"REQB","B","PSU*4.0*11",1)

"MBREQ")
0
"PKG",367,-1)
1^1
"PKG",367,0)
PHARMACY BENEFITS MANAGEMENT^PSU^PHARMACY BENEFITS MANAGEMENT
"PKG",367,20,0)
^9.402P^^
"PKG",367,22,0)
^9.49I^1^1
"PKG",367,22,1,0)
4.0^3050620^3050831^10000000012
"PKG",367,22,1,"PAH",1,0)
16^3100111
"PKG",367,22,1,"PAH",1,1,0)
^^28^28^3100111
"PKG",367,22,1,"PAH",1,1,1,0)
Currently, the Pharmacy Benefits Management (PBM) extract blocks the
"PKG",367,22,1,"PAH",1,1,2,0)
transmission of chemistry lab results for "Employee Veteran" and
"PKG",367,22,1,"PAH",1,1,3,0)
"Employee Non-Veteran." This patch addresses the New Service Request (NSR)
"PKG",367,22,1,"PAH",1,1,4,0)
#20080810 to transmit the chemistry lab results for "Employee Veteran"
"PKG",367,22,1,"PAH",1,1,5,0)
via Health Level 7 (HL7) messaging to the PBM extract database while
"PKG",367,22,1,"PAH",1,1,6,0)
continuing to block the chemistry lab results for "Employee Non-Veteran."
"PKG",367,22,1,"PAH",1,1,7,0)
 
"PKG",367,22,1,"PAH",1,1,8,0)
This patch also addresses the following.
"PKG",367,22,1,"PAH",1,1,9,0)
 
"PKG",367,22,1,"PAH",1,1,10,0)
Problem:
"PKG",367,22,1,"PAH",1,1,11,0)
========
"PKG",367,22,1,"PAH",1,1,12,0)
Several facilities were reporting that selected laboratory tests were not
"PKG",367,22,1,"PAH",1,1,13,0)
present in the Structured Query Language (SQL) database used by PBM to
"PKG",367,22,1,"PAH",1,1,14,0)
perform medication use safety surveillance, while the source data was
"PKG",367,22,1,"PAH",1,1,15,0)
clearly available in local VistA and Computerized Patient Record
"PKG",367,22,1,"PAH",1,1,16,0)
System (CPRS). Upon further investigation, it was discovered that the
"PKG",367,22,1,"PAH",1,1,17,0)
laboratory results did transmit as expected, but the lab test name did
"PKG",367,22,1,"PAH",1,1,18,0)
not, resulting in database search failures.
"PKG",367,22,1,"PAH",1,1,19,0)
 
"PKG",367,22,1,"PAH",1,1,20,0)
Resolution:
"PKG",367,22,1,"PAH",1,1,21,0)
===========
"PKG",367,22,1,"PAH",1,1,22,0)
The source of the error was traced to laboratory tests with a National
"PKG",367,22,1,"PAH",1,1,23,0)
Lab Test (NLT) Name containing a tilde (~) character. This character
"PKG",367,22,1,"PAH",1,1,24,0)
is also used as the delimiter in HL7 message processing, and the extra
"PKG",367,22,1,"PAH",1,1,25,0)
tilde caused the routines that parse the transmitted data to be offset by
"PKG",367,22,1,"PAH",1,1,26,0)
one data element. The correction is to translate any tilde characters in
"PKG",367,22,1,"PAH",1,1,27,0)
the NLT name into an underscore (_) character, so that any remaining
"PKG",367,22,1,"PAH",1,1,28,0)
tilde characters are solely present as the expected HL7 delimiters.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","PSULRHL1")
0^1^B40583556^B40012684
"RTN","PSULRHL1",1,0)
PSULRHL1 ;HCIOFO/BH/RDC - Process real time HL7 Lab messages ;8/1/07 11:26am
"RTN","PSULRHL1",2,0)
 ;;4.0;PHARMACY BENEFITS MANAGEMENT;**3,11,16**;MARCH, 2005;Build 3
"RTN","PSULRHL1",3,0)
 ;
"RTN","PSULRHL1",4,0)
 ; DBIA 3565 to subscribe to the LR7O ALL EVSEND RESULTS protocol
"RTN","PSULRHL1",5,0)
 ; DBIA 998 to dig through ^DPT(i,"LR" go get the ien to file #63
"RTN","PSULRHL1",6,0)
 ; DBIA 91-A to dig through ^LAB(60 to get the name of the test
"RTN","PSULRHL1",7,0)
 ; DBIA 3630 to call the HL7 PID builder
"RTN","PSULRHL1",8,0)
 ; DBIA 4727 to call EN^HLOCNRT
"RTN","PSULRHL1",9,0)
 ; DBIA 3646 to call API: $$EMPL^DGSEC4
"RTN","PSULRHL1",10,0)
 ; DBIA 4658 to call API: $$TSTRES^LRRPU
"RTN","PSULRHL1",11,0)
 ;
"RTN","PSULRHL1",12,0)
 ; This program is called when a lab test is verified. If it is for a
"RTN","PSULRHL1",13,0)
 ; chemistry test, and patient is a Veteran, an HL7 message will
"RTN","PSULRHL1",14,0)
 ; be created and sent to the national PBM Lab database.
"RTN","PSULRHL1",15,0)
 ;
"RTN","PSULRHL1",16,0)
 ;
"RTN","PSULRHL1",17,0)
HL7 ; Entry point for PBM processing - triggered by lab protocol 
"RTN","PSULRHL1",18,0)
 ; LR7O ALL EVSEND RESULTS.
"RTN","PSULRHL1",19,0)
 ;
"RTN","PSULRHL1",20,0)
 N ARR,FIRST,LRDFN,PSUEXT,PSUHLFS,PSUHLECH,PSUHLCS
"RTN","PSULRHL1",21,0)
 ;
"RTN","PSULRHL1",22,0)
 ;  OREMSG is the pointer reference to the global that contains the
"RTN","PSULRHL1",23,0)
 ;  lab data and is passed in by the LR7O ALL EVSEND RESULTS protocol.
"RTN","PSULRHL1",24,0)
 ;  
"RTN","PSULRHL1",25,0)
 I '$D(@OREMSG) Q
"RTN","PSULRHL1",26,0)
 ;
"RTN","PSULRHL1",27,0)
 ; Get Lab parameters
"RTN","PSULRHL1",28,0)
 ;
"RTN","PSULRHL1",29,0)
 D INIT^HLFNC2("PSU-SITE-DRIVER",.PSUHL)
"RTN","PSULRHL1",30,0)
 ;
"RTN","PSULRHL1",31,0)
 ; Set up CS delimeter for the Pharmacy message
"RTN","PSULRHL1",32,0)
 ;
"RTN","PSULRHL1",33,0)
 S PSUHL("CS")=$E(PSUHL("ECH"),1)
"RTN","PSULRHL1",34,0)
 ;
"RTN","PSULRHL1",35,0)
 ; Set up segment processing parameters 
"RTN","PSULRHL1",36,0)
 ;
"RTN","PSULRHL1",37,0)
 S PSUEXT("PSUBUF")=$NA(^TMP("HLS",$J))
"RTN","PSULRHL1",38,0)
 S PSUEXT("PSUPTR")=0
"RTN","PSULRHL1",39,0)
 ;
"RTN","PSULRHL1",40,0)
 ; Get the delimiters that the passed in lab data is using
"RTN","PSULRHL1",41,0)
 ;
"RTN","PSULRHL1",42,0)
 D PARAMS
"RTN","PSULRHL1",43,0)
 S PSUHLECH=$G(ARR("PSUHLECH"),"^~\&")
"RTN","PSULRHL1",44,0)
 S PSUHLCS=$E(PSUHLECH,1)
"RTN","PSULRHL1",45,0)
 ;
"RTN","PSULRHL1",46,0)
 ; Quit if no DFN
"RTN","PSULRHL1",47,0)
 ;
"RTN","PSULRHL1",48,0)
 I '$D(ARR) Q
"RTN","PSULRHL1",49,0)
 I ARR("DFN")=0!(ARR("DFN")="") Q
"RTN","PSULRHL1",50,0)
 ;
"RTN","PSULRHL1",51,0)
 ; *16 - Quit if patient is an employee & Non-Veteran 
"RTN","PSULRHL1",52,0)
 ;
"RTN","PSULRHL1",53,0)
 N DFN,VAEL S DFN=ARR("DFN") D ELIG^VADPT
"RTN","PSULRHL1",54,0)
 I $$EMPL^DGSEC4(DFN,"PS"),'VAEL(4) Q
"RTN","PSULRHL1",55,0)
 ;
"RTN","PSULRHL1",56,0)
 ; Get Lab's equivalent of a DFN (LRDFN)
"RTN","PSULRHL1",57,0)
 ;
"RTN","PSULRHL1",58,0)
 S LRDFN=$P(^DPT(ARR("DFN"),"LR"),"^")  ; DBIA 998 to get file #63 ien
"RTN","PSULRHL1",59,0)
 ;
"RTN","PSULRHL1",60,0)
 ; Loop through the lab data 
"RTN","PSULRHL1",61,0)
 ;
"RTN","PSULRHL1",62,0)
 S FIRST=1
"RTN","PSULRHL1",63,0)
 D LOOP
"RTN","PSULRHL1",64,0)
 ;
"RTN","PSULRHL1",65,0)
 ; Generate an HL7 if data exists to be sent
"RTN","PSULRHL1",66,0)
 ;
"RTN","PSULRHL1",67,0)
 I 'FIRST D GENERATE
"RTN","PSULRHL1",68,0)
 ;
"RTN","PSULRHL1",69,0)
 K PSUHL,ERR,OPTNS,ERR
"RTN","PSULRHL1",70,0)
 ;
"RTN","PSULRHL1",71,0)
 Q
"RTN","PSULRHL1",72,0)
 ;
"RTN","PSULRHL1",73,0)
LOOP ;
"RTN","PSULRHL1",74,0)
 N CNT,LRIDT,LRSS,PREV1,PREV2,QUIT1,QUIT2,REC,REC1,REC2,SEG,SEG1,SEG2,STR1
"RTN","PSULRHL1",75,0)
 K ^TMP("HLS",$J)
"RTN","PSULRHL1",76,0)
 S CNT=0
"RTN","PSULRHL1",77,0)
 F  Q:CNT=""  S CNT=$O(@OREMSG@(CNT)) Q:'CNT  D
"RTN","PSULRHL1",78,0)
 . S REC=@OREMSG@(CNT)
"RTN","PSULRHL1",79,0)
 . S REC=$$STRING(REC,CNT)
"RTN","PSULRHL1",80,0)
 . S SEG=$P(REC,PSUHLFS,1)
"RTN","PSULRHL1",81,0)
 . I SEG'="ORC" Q
"RTN","PSULRHL1",82,0)
 . S STR1=$P(REC,PSUHLFS,4)
"RTN","PSULRHL1",83,0)
 . S STR1=$P(STR1,PSUHLCS,1)
"RTN","PSULRHL1",84,0)
 . S LRSS=$P(STR1,";",4)
"RTN","PSULRHL1",85,0)
 . ;
"RTN","PSULRHL1",86,0)
 . ; Quit if data is not for Chemistry
"RTN","PSULRHL1",87,0)
 . ;
"RTN","PSULRHL1",88,0)
 . I LRSS'="CH" Q
"RTN","PSULRHL1",89,0)
 . S LRIDT=$P(STR1,";",5)
"RTN","PSULRHL1",90,0)
 . S QUIT1=0
"RTN","PSULRHL1",91,0)
 . F  Q:QUIT1!(CNT="")  S PREV1=CNT,CNT=$O(@OREMSG@(CNT)) Q:'CNT  D
"RTN","PSULRHL1",92,0)
 . . S REC1=@OREMSG@(CNT)
"RTN","PSULRHL1",93,0)
 . . S REC1=$$STRING(REC1,CNT)
"RTN","PSULRHL1",94,0)
 . . S SEG1=$P(REC1,PSUHLFS,1)
"RTN","PSULRHL1",95,0)
 . . I SEG1="ORC" S CNT=PREV1,QUIT1=1 Q
"RTN","PSULRHL1",96,0)
 . . I SEG1'="OBR" Q
"RTN","PSULRHL1",97,0)
 . . ; If this is the first OBR being processed i.e. this is valid 
"RTN","PSULRHL1",98,0)
 . . ; chemistry data set the PID segment
"RTN","PSULRHL1",99,0)
 . . I FIRST D PID S FIRST=0
"RTN","PSULRHL1",100,0)
 . . D OBR(REC1)
"RTN","PSULRHL1",101,0)
 . . S QUIT2=0
"RTN","PSULRHL1",102,0)
 . . F  Q:QUIT2  S PREV2=CNT,CNT=$O(@OREMSG@(CNT)) Q:'CNT  D
"RTN","PSULRHL1",103,0)
 . . . S REC2=@OREMSG@(CNT)
"RTN","PSULRHL1",104,0)
 . . . S REC2=$$STRING(REC2,CNT)
"RTN","PSULRHL1",105,0)
 . . . S SEG2=$P(REC2,PSUHLFS,1)
"RTN","PSULRHL1",106,0)
 . . . I SEG2="OBR"!(SEG2="ORC") S CNT=PREV2,QUIT2=1 Q
"RTN","PSULRHL1",107,0)
 . . . I SEG2'="OBX" Q
"RTN","PSULRHL1",108,0)
 . . . D OBX(REC2)
"RTN","PSULRHL1",109,0)
 Q
"RTN","PSULRHL1",110,0)
 ;
"RTN","PSULRHL1",111,0)
PID ;  Create the PID segment using the standard builder
"RTN","PSULRHL1",112,0)
 ;
"RTN","PSULRHL1",113,0)
 N K1,NEWSEG,SEG
"RTN","PSULRHL1",114,0)
 S SEG="SEG"
"RTN","PSULRHL1",115,0)
 D BLDPID^VAFCQRY(ARR("DFN"),1,"1,2,3",.SEG,.PSUHL,.ERR)
"RTN","PSULRHL1",116,0)
 ;
"RTN","PSULRHL1",117,0)
 ; Loop through the returned array just in case the data is spread over
"RTN","PSULRHL1",118,0)
 ; more than one node
"RTN","PSULRHL1",119,0)
 ;
"RTN","PSULRHL1",120,0)
 S K1="",NEWSEG=""
"RTN","PSULRHL1",121,0)
 F  S K1=$O(SEG(K1)) Q:'K1  D
"RTN","PSULRHL1",122,0)
 . S NEWSEG=NEWSEG_SEG(K1)
"RTN","PSULRHL1",123,0)
 ;
"RTN","PSULRHL1",124,0)
 ; Set the data string into the PBM HL7 array
"RTN","PSULRHL1",125,0)
 ;
"RTN","PSULRHL1",126,0)
 D SETSEG(NEWSEG)
"RTN","PSULRHL1",127,0)
 ;
"RTN","PSULRHL1",128,0)
 Q
"RTN","PSULRHL1",129,0)
 ;
"RTN","PSULRHL1",130,0)
OBR(REC) ;  Re-forms lab OBR to only send required data
"RTN","PSULRHL1",131,0)
 ;
"RTN","PSULRHL1",132,0)
 N OBRSEG,SITE,SPECDATE
"RTN","PSULRHL1",133,0)
 S OBRSEG="OBR"
"RTN","PSULRHL1",134,0)
 S SPECDATE=$P(REC,PSUHLFS,8)
"RTN","PSULRHL1",135,0)
 S SITE=$P(REC,PSUHLFS,16)
"RTN","PSULRHL1",136,0)
 S SITE=$TR(SITE,PSUHLCS,PSUHL("CS"))
"RTN","PSULRHL1",137,0)
 ;
"RTN","PSULRHL1",138,0)
 ; Create new OBR Segment and pass to SETSEG
"RTN","PSULRHL1",139,0)
 ;
"RTN","PSULRHL1",140,0)
 S $P(OBRSEG,PSUHL("FS"),8)=SPECDATE
"RTN","PSULRHL1",141,0)
 S $P(OBRSEG,PSUHL("FS"),16)=SITE
"RTN","PSULRHL1",142,0)
 ;
"RTN","PSULRHL1",143,0)
 ; Set the data string into the PBM HL7 array
"RTN","PSULRHL1",144,0)
 ;
"RTN","PSULRHL1",145,0)
 D SETSEG(OBRSEG)
"RTN","PSULRHL1",146,0)
 ;
"RTN","PSULRHL1",147,0)
 Q
"RTN","PSULRHL1",148,0)
 ;
"RTN","PSULRHL1",149,0)
OBX(REC) ;  Reforms lab OBX to only send the data needed
"RTN","PSULRHL1",150,0)
 N CODES,HRANGE,LABS,LNAME,LR60,LRANGE,LRDN,LOINC,LOINCS,P2,P3,P12,RANGE,RES,RESULTS,SEG,UNITS
"RTN","PSULRHL1",151,0)
 ;
"RTN","PSULRHL1",152,0)
 S P2=$P(REC,PSUHLFS,2)
"RTN","PSULRHL1",153,0)
 S P3=$P(REC,PSUHLFS,3)
"RTN","PSULRHL1",154,0)
 S P12=$P(REC,PSUHLFS,12)
"RTN","PSULRHL1",155,0)
 S RESULTS=$P(REC,PSUHLFS,6)
"RTN","PSULRHL1",156,0)
 S UNITS=$P(REC,PSUHLFS,7)
"RTN","PSULRHL1",157,0)
 S LABS=$TR($P(REC,PSUHLFS,4),"~","_")
"RTN","PSULRHL1",158,0)
 S LR60=$P(LABS,"^",4)
"RTN","PSULRHL1",159,0)
 I LR60']"" Q
"RTN","PSULRHL1",160,0)
 S LRDN=$G(^LAB(60,LR60,0))
"RTN","PSULRHL1",161,0)
 S LRDN=$P($P(LRDN,"^",5),";",2)   ;  DBIA 91 for data name
"RTN","PSULRHL1",162,0)
 ;
"RTN","PSULRHL1",163,0)
 ; Make the call to LRRPU to get the LOINC code for this test
"RTN","PSULRHL1",164,0)
 ;
"RTN","PSULRHL1",165,0)
 I LRDN']"" Q
"RTN","PSULRHL1",166,0)
 S RES=$$TSTRES^LRRPU(LRDFN,LRSS,LRIDT,LRDN,LR60,1)
"RTN","PSULRHL1",167,0)
 ;
"RTN","PSULRHL1",168,0)
 S CODES=$P(RES,U,8),LOINCS=$P(CODES,"!",3)
"RTN","PSULRHL1",169,0)
 S LOINC=$P(LOINCS,";",1),LNAME=$P(LOINCS,";",2)
"RTN","PSULRHL1",170,0)
 S LRANGE=$P(RES,U,3),HRANGE=$P(RES,U,4)
"RTN","PSULRHL1",171,0)
 S RANGE=LRANGE_"-"_HRANGE I RANGE="-" S RANGE=""
"RTN","PSULRHL1",172,0)
 ;
"RTN","PSULRHL1",173,0)
 ; Use the Pharmacy HL7 delimeters
"RTN","PSULRHL1",174,0)
 ;
"RTN","PSULRHL1",175,0)
 S LABS=$TR(LABS,PSUHLCS,PSUHL("CS"))
"RTN","PSULRHL1",176,0)
 ;
"RTN","PSULRHL1",177,0)
 ; Add LOINC to the list of Labs if it exists
"RTN","PSULRHL1",178,0)
 ;
"RTN","PSULRHL1",179,0)
 I LOINC'="" D
"RTN","PSULRHL1",180,0)
 . ;
"RTN","PSULRHL1",181,0)
 . ; Append the LOINC data using the pharmacy delimiters
"RTN","PSULRHL1",182,0)
 . S LABS=LABS_PSUHL("CS")_LOINC_PSUHL("CS")_LNAME_PSUHL("CS")_"99LN"
"RTN","PSULRHL1",183,0)
 ;
"RTN","PSULRHL1",184,0)
 ; Put the data in the string
"RTN","PSULRHL1",185,0)
 ;
"RTN","PSULRHL1",186,0)
 S SEG="OBX"
"RTN","PSULRHL1",187,0)
 S $P(SEG,PSUHL("FS"),2)=P2
"RTN","PSULRHL1",188,0)
 S $P(SEG,PSUHL("FS"),3)=P3
"RTN","PSULRHL1",189,0)
 S $P(SEG,PSUHL("FS"),4)=LABS
"RTN","PSULRHL1",190,0)
 S $P(SEG,PSUHL("FS"),6)=RESULTS
"RTN","PSULRHL1",191,0)
 S $P(SEG,PSUHL("FS"),7)=UNITS
"RTN","PSULRHL1",192,0)
 S $P(SEG,PSUHL("FS"),8)=RANGE
"RTN","PSULRHL1",193,0)
 S $P(SEG,PSUHL("FS"),12)=P12
"RTN","PSULRHL1",194,0)
 ;
"RTN","PSULRHL1",195,0)
 ; Put the string into the PBM HL7 global
"RTN","PSULRHL1",196,0)
 ;
"RTN","PSULRHL1",197,0)
 D SETSEG(SEG)
"RTN","PSULRHL1",198,0)
 ;
"RTN","PSULRHL1",199,0)
 Q
"RTN","PSULRHL1",200,0)
 ;
"RTN","PSULRHL1",201,0)
STRING(HLSTR,CNT) ;  Loops through sub nodes to create a full data string
"RTN","PSULRHL1",202,0)
 N J
"RTN","PSULRHL1",203,0)
 S J=""
"RTN","PSULRHL1",204,0)
 F  S J=$O(@OREMSG@(CNT,J))  Q:J=""  S HLSTR=HLSTR_@OREMSG@(CNT,J)
"RTN","PSULRHL1",205,0)
 Q HLSTR
"RTN","PSULRHL1",206,0)
 ;
"RTN","PSULRHL1",207,0)
PARAMS ; Get the delimiters used in the lab data
"RTN","PSULRHL1",208,0)
 ;
"RTN","PSULRHL1",209,0)
 N CNT,ID,QUIT,REC,RES
"RTN","PSULRHL1",210,0)
 K ARR
"RTN","PSULRHL1",211,0)
 S (QUIT,CNT)=0,RES=""
"RTN","PSULRHL1",212,0)
 F  S CNT=$O(@OREMSG@(CNT)) Q:'CNT!(QUIT=2)  D
"RTN","PSULRHL1",213,0)
 . S REC=@OREMSG@(CNT)
"RTN","PSULRHL1",214,0)
 . I $E(REC,1,3)="MSH" D  Q
"RTN","PSULRHL1",215,0)
 . . S PSUHLFS=$E(REC,4,4)
"RTN","PSULRHL1",216,0)
 . . S ARR("PSUHLECH")=$P(REC,PSUHLFS,2),QUIT=QUIT+1
"RTN","PSULRHL1",217,0)
 . I $P(REC,PSUHLFS,1)="PID" D  Q
"RTN","PSULRHL1",218,0)
 . . S ARR("DFN")=$P(REC,PSUHLFS,4)
"RTN","PSULRHL1",219,0)
 . . S QUIT=QUIT+1
"RTN","PSULRHL1",220,0)
 Q
"RTN","PSULRHL1",221,0)
 ;
"RTN","PSULRHL1",222,0)
GENERATE ; Generate HL7 message
"RTN","PSULRHL1",223,0)
 ;
"RTN","PSULRHL1",224,0)
 ; D GENERATE^HLMA("PSU-SITE-DRIVER","GM",1,.RESULT,"",.OPTNS)
"RTN","PSULRHL1",225,0)
 S OPTNS("QUEUE")="PBM LAB"
"RTN","PSULRHL1",226,0)
 S RESULT=$$EN^HLOCNRT("PSU-SITE-DRIVER","GM",.OPTNS)
"RTN","PSULRHL1",227,0)
 I +RESULT'=RESULT D
"RTN","PSULRHL1",228,0)
 . S ^XTMP("PBM/HLO",DT,$J)=RESULT
"RTN","PSULRHL1",229,0)
 K ^TMP("HLS",$J)
"RTN","PSULRHL1",230,0)
 Q
"RTN","PSULRHL1",231,0)
 ;
"RTN","PSULRHL1",232,0)
 ;
"RTN","PSULRHL1",233,0)
SETSEG(SEG) ;
"RTN","PSULRHL1",234,0)
 ;
"RTN","PSULRHL1",235,0)
 ;***** STORES THE SEGMENT INTO THE ^TMP("HLS",$J) BUFFER
"RTN","PSULRHL1",236,0)
 ;
"RTN","PSULRHL1",237,0)
 ; SEG           HL7 segment
"RTN","PSULRHL1",238,0)
 ;
"RTN","PSULRHL1",239,0)
 ; The SETSEG procedure stores the HL7 segment into the
"RTN","PSULRHL1",240,0)
 ; standard HL7 buffer ^TMP("HLS",$J). The <TAB>, <CR> and <LF>
"RTN","PSULRHL1",241,0)
 ; characters are replaced with spaces. Long segments are split among 
"RTN","PSULRHL1",242,0)
 ; sub-nodes of the main segment node.
"RTN","PSULRHL1",243,0)
 ;
"RTN","PSULRHL1",244,0)
 ; The PSUEXT array must be initialized before
"RTN","PSULRHL1",245,0)
 ; calling this function.
"RTN","PSULRHL1",246,0)
 ;
"RTN","PSULRHL1",247,0)
 N I1,I2,MAXLEN,NODE,PTR,PTR1,SID,SL
"RTN","PSULRHL1",248,0)
 S NODE=PSUEXT("PSUBUF"),PTR=$G(PSUEXT("PSUPTR"))+1
"RTN","PSULRHL1",249,0)
 S SL=$L(SEG),MAXLEN=245  K @NODE@(PTR)
"RTN","PSULRHL1",250,0)
 ;--- Store the segment
"RTN","PSULRHL1",251,0)
 S @NODE@(PTR)=$TR($E(SEG,1,MAXLEN),$C(9,10,13),"   ")
"RTN","PSULRHL1",252,0)
 ;
"RTN","PSULRHL1",253,0)
 ;--- Split the segment into sub-nodes if necessary
"RTN","PSULRHL1",254,0)
 D:SL>MAXLEN
"RTN","PSULRHL1",255,0)
 . S I2=MAXLEN
"RTN","PSULRHL1",256,0)
 . F PTR1=1:1  S I1=I2+1,I2=I1+MAXLEN-1  Q:I1>SL  D
"RTN","PSULRHL1",257,0)
 . . S @NODE@(PTR,PTR1)=$TR($E(SEG,I1,I2),$C(9,10,13),"   ")
"RTN","PSULRHL1",258,0)
 ;--- Save the pointer
"RTN","PSULRHL1",259,0)
 S PSUEXT("PSUPTR")=PTR
"RTN","PSULRHL1",260,0)
 Q
"VER")
8.0^22.0
"BLD",6971,6)
^14
**END**
**END**
