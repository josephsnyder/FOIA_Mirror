Released RA*5*93 SEQ #86
Extracted from mail message
**KIDS**:RA*5.0*93^

**INSTALL NAME**
RA*5.0*93
"BLD",7055,0)
RA*5.0*93^RADIOLOGY/NUCLEAR MEDICINE^0^3090105^y
"BLD",7055,1,0)
^^1^1^3080811^
"BLD",7055,1,1,0)
INCOMPLETE EXM REP PRT ISSUE, ALERT TEXT CHG, DIK CALL CHG
"BLD",7055,4,0)
^9.64PA^^
"BLD",7055,6.3)
3
"BLD",7055,"KRN",0)
^9.67PA^8989.52^19
"BLD",7055,"KRN",.4,0)
.4
"BLD",7055,"KRN",.401,0)
.401
"BLD",7055,"KRN",.402,0)
.402
"BLD",7055,"KRN",.403,0)
.403
"BLD",7055,"KRN",.5,0)
.5
"BLD",7055,"KRN",.84,0)
.84
"BLD",7055,"KRN",3.6,0)
3.6
"BLD",7055,"KRN",3.8,0)
3.8
"BLD",7055,"KRN",9.2,0)
9.2
"BLD",7055,"KRN",9.8,0)
9.8
"BLD",7055,"KRN",9.8,"NM",0)
^9.68A^7^6
"BLD",7055,"KRN",9.8,"NM",1,0)
RADLQ3^^0^B19143902
"BLD",7055,"KRN",9.8,"NM",2,0)
RAUTL00^^0^B8352310
"BLD",7055,"KRN",9.8,"NM",3,0)
RAEDCN1^^0^B14134766
"BLD",7055,"KRN",9.8,"NM",4,0)
RAREG1^^0^B30150241
"BLD",7055,"KRN",9.8,"NM",5,0)
RAREG2^^0^B43905852
"BLD",7055,"KRN",9.8,"NM",7,0)
RARIC1^^0^B12590477
"BLD",7055,"KRN",9.8,"NM","B","RADLQ3",1)

"BLD",7055,"KRN",9.8,"NM","B","RAEDCN1",3)

"BLD",7055,"KRN",9.8,"NM","B","RAREG1",4)

"BLD",7055,"KRN",9.8,"NM","B","RAREG2",5)

"BLD",7055,"KRN",9.8,"NM","B","RARIC1",7)

"BLD",7055,"KRN",9.8,"NM","B","RAUTL00",2)

"BLD",7055,"KRN",19,0)
19
"BLD",7055,"KRN",19.1,0)
19.1
"BLD",7055,"KRN",101,0)
101
"BLD",7055,"KRN",409.61,0)
409.61
"BLD",7055,"KRN",771,0)
771
"BLD",7055,"KRN",870,0)
870
"BLD",7055,"KRN",8989.51,0)
8989.51
"BLD",7055,"KRN",8989.52,0)
8989.52
"BLD",7055,"KRN",8994,0)
8994
"BLD",7055,"KRN","B",.4,.4)

"BLD",7055,"KRN","B",.401,.401)

"BLD",7055,"KRN","B",.402,.402)

"BLD",7055,"KRN","B",.403,.403)

"BLD",7055,"KRN","B",.5,.5)

"BLD",7055,"KRN","B",.84,.84)

"BLD",7055,"KRN","B",3.6,3.6)

"BLD",7055,"KRN","B",3.8,3.8)

"BLD",7055,"KRN","B",9.2,9.2)

"BLD",7055,"KRN","B",9.8,9.8)

"BLD",7055,"KRN","B",19,19)

"BLD",7055,"KRN","B",19.1,19.1)

"BLD",7055,"KRN","B",101,101)

"BLD",7055,"KRN","B",409.61,409.61)

"BLD",7055,"KRN","B",771,771)

"BLD",7055,"KRN","B",870,870)

"BLD",7055,"KRN","B",8989.51,8989.51)

"BLD",7055,"KRN","B",8989.52,8989.52)

"BLD",7055,"KRN","B",8994,8994)

"BLD",7055,"QUES",0)
^9.62^^
"BLD",7055,"REQB",0)
^9.611^4^4
"BLD",7055,"REQB",1,0)
RA*5.0*21^2
"BLD",7055,"REQB",2,0)
RA*5.0*23^2
"BLD",7055,"REQB",3,0)
RA*5.0*45^2
"BLD",7055,"REQB",4,0)
RA*5.0*87^2
"BLD",7055,"REQB","B","RA*5.0*21",1)

"BLD",7055,"REQB","B","RA*5.0*23",2)

"BLD",7055,"REQB","B","RA*5.0*45",3)

"BLD",7055,"REQB","B","RA*5.0*87",4)

"MBREQ")
0
"PKG",18,-1)
1^1
"PKG",18,0)
RADIOLOGY/NUCLEAR MEDICINE^RA^REGISTERS PATIENTS,RECORDS EXAMS,PROFILES,AMIS REPORTS
"PKG",18,20,0)
^9.402P^^
"PKG",18,22,0)
^9.49I^1^1
"PKG",18,22,1,0)
5.0^3051109^2980407^50
"PKG",18,22,1,"PAH",1,0)
93^3090105
"PKG",18,22,1,"PAH",1,1,0)
^^1^1^3090105
"PKG",18,22,1,"PAH",1,1,1,0)
INCOMPLETE EXM REP PRT ISSUE, ALERT TEXT CHG, DIK CALL CHG
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","RADLQ3")
0^1^B19143902^B18603453
"RTN","RADLQ3",1,0)
RADLQ3 ;HISC/GJC-Delq Status/Incomplete Rpt's ;5/7/97  15:58
"RTN","RADLQ3",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**87,93**;Mar 16, 1998;Build 3
"RTN","RADLQ3",3,0)
 ; 11/15/07 BAY/KAM RA*5*87 Rem Call 217642 change pat ssn to display last four
"RTN","RADLQ3",4,0)
 ; 05/09/08 BAY/KAM RA*5*93 Rem Call 246868 correct printing of *** OUTPATIENT ***
"RTN","RADLQ3",5,0)
DISPXAM ; Display exam statuses for selected Imaging Types.  These exam
"RTN","RADLQ3",6,0)
 ; statuses need the 'DELINQUENT STATUS REPORT?' field tripped to
"RTN","RADLQ3",7,0)
 ; 'yes' in file 72.
"RTN","RADLQ3",8,0)
 N RA,RAHD,UNDRLN,X,Y,Z
"RTN","RADLQ3",9,0)
 S RAHD(0)="The entries printed for this report will be based only"
"RTN","RADLQ3",10,0)
 S RAHD(1)="on exams that are in one of the following statuses:"
"RTN","RADLQ3",11,0)
 I '$D(RALL) D
"RTN","RADLQ3",12,0)
 . W !!?(IOM-$L(RAHD(0))\2),RAHD(0)
"RTN","RADLQ3",13,0)
 . W !?(IOM-$L(RAHD(1))\2),RAHD(1)
"RTN","RADLQ3",14,0)
 . Q
"RTN","RADLQ3",15,0)
 S X="" F  S X=$O(^TMP($J,"RA I-TYPE",X)) Q:X']""  D  Q:RAXIT
"RTN","RADLQ3",16,0)
 . I $D(^RA(72,"AA",X)) S Y="" K UNDRLN D
"RTN","RADLQ3",17,0)
 .. I '$D(RALL),($Y>(IOSL-4)) S RAXIT=$$EOS^RAUTL5() Q:RAXIT  W @IOF
"RTN","RADLQ3",18,0)
 .. I '$D(RALL) S $P(UNDRLN,"-",($L(X)+1))="" W !!?10,X,!?10,UNDRLN
"RTN","RADLQ3",19,0)
 .. F  S Y=$O(^RA(72,"AA",X,Y)) Q:Y']""  D  Q:RAXIT
"RTN","RADLQ3",20,0)
 ... S Z=0 F  S Z=+$O(^RA(72,"AA",X,Y,Z)) Q:'Z  D  Q:RAXIT
"RTN","RADLQ3",21,0)
 .... S RA(0)=$G(^RA(72,Z,0)),RA(.3)=$G(^RA(72,Z,.3))
"RTN","RADLQ3",22,0)
 .... S RA(.3,15)=$P(RA(.3),"^",15)
"RTN","RADLQ3",23,0)
 .... I RA(0)]"",(RA(.3)]""),(RA(.3,15)]""),("Yy"[RA(.3,15)) D
"RTN","RADLQ3",24,0)
 ..... S RACRT(Z)=""
"RTN","RADLQ3",25,0)
 ..... I '$D(RALL),($Y>(IOSL-4)) S RAXIT=$$EOS^RAUTL5() Q:RAXIT  D
"RTN","RADLQ3",26,0)
 ...... W @IOF,!?10,X,!?10,UNDRLN
"RTN","RADLQ3",27,0)
 ...... Q
"RTN","RADLQ3",28,0)
 ..... W:'$D(RALL) !?15,$P(RA(0),"^")
"RTN","RADLQ3",29,0)
 ..... Q
"RTN","RADLQ3",30,0)
 .... Q
"RTN","RADLQ3",31,0)
 ... Q
"RTN","RADLQ3",32,0)
 .. Q
"RTN","RADLQ3",33,0)
 . Q
"RTN","RADLQ3",34,0)
 Q
"RTN","RADLQ3",35,0)
OUTPUT ; Print out the results
"RTN","RADLQ3",36,0)
 N RAEOS I $D(RAVAR(0)),(RAVAR(0)'=RAVAR) S RAEOS=6
"RTN","RADLQ3",37,0)
 E  S RAEOS=4
"RTN","RADLQ3",38,0)
 F I=1:1:$L(RANODE,"^") D
"RTN","RADLQ3",39,0)
 . S @$P("RACN^RAPRC^RAST^RADT^RAWHE^RARP^RASSN^RAVRFIED^RAIPHY^RATECH","^",I)=$P(RANODE,"^",I)
"RTN","RADLQ3",40,0)
 . Q
"RTN","RADLQ3",41,0)
 I $Y>(IOSL-RAEOS) D  Q:RAXIT
"RTN","RADLQ3",42,0)
 . S RAXIT=$$EOS^RAUTL5() D:'RAXIT HDR^RADLQ2
"RTN","RADLQ3",43,0)
 . Q
"RTN","RADLQ3",44,0)
 ; 05/09/08 BAY/KAM RA*5*93 Rem Call 246868 Added RAVAR Check to next
"RTN","RADLQ3",45,0)
 ;                                          line
"RTN","RADLQ3",46,0)
 I RAEOS=6,RAVAR="O" D
"RTN","RADLQ3",47,0)
 . N RASTR S RASTR="*** OUTPATIENT ***"
"RTN","RADLQ3",48,0)
 . S RASTR(0)=$$REPEAT^XLFSTR(" ",((IOM-($L(RASTR)*3))\2))
"RTN","RADLQ3",49,0)
 . S RASTR(1)=RASTR_RASTR(0)_RASTR_RASTR(0)_RASTR
"RTN","RADLQ3",50,0)
 . W !!,RASTR(1)
"RTN","RADLQ3",51,0)
 . Q
"RTN","RADLQ3",52,0)
 ; Note: Inform the user that the following data will be for outpatients.
"RTN","RADLQ3",53,0)
 ;       Since only inpatient and outpatient is possibly stored, any
"RTN","RADLQ3",54,0)
 ;       change in the variable RAVAR will be a change to 'outpatient'.
"RTN","RADLQ3",55,0)
 ; 11/15/07 BAY/KAM RA*5*87 Rem Call 217642 Added next line
"RTN","RADLQ3",56,0)
 S RASSN=$E(RASSN,8,11)
"RTN","RADLQ3",57,0)
 I IOM=132 D  ;132 column format
"RTN","RADLQ3",58,0)
 . W !,RANME,?RATAB(1),RACN,?RATAB(2),RASSN,?RATAB(3),RADT,?RATAB(4)
"RTN","RADLQ3",59,0)
 . W $E(RAWHE,1,25),?RATAB(5),RAVRFIED
"RTN","RADLQ3",60,0)
 . W !?RATAB(6),$E(RAPRC,1,30),?RATAB(7),$E(RAST,1,30)
"RTN","RADLQ3",61,0)
 . W ?RATAB(8),RARP,?RATAB(9),$E(RAIPHY,1,20),?RATAB(10),RATECH
"RTN","RADLQ3",62,0)
 . Q
"RTN","RADLQ3",63,0)
 E  D  ;default to 80 column
"RTN","RADLQ3",64,0)
 . W !,$E(RANME,1,20),?RATAB(1),RACN,?RATAB(2),RASSN,?RATAB(3),RADT
"RTN","RADLQ3",65,0)
 . W ?RATAB(4),$E(RAWHE,1,15),?RATAB(5),RAVRFIED
"RTN","RADLQ3",66,0)
 . W !?RATAB(6),$E(RAPRC,1,20),?RATAB(7),$E(RAST,1,11)
"RTN","RADLQ3",67,0)
 . W ?RATAB(8),RARP,?RATAB(9),$E(RAIPHY,1,15),?RATAB(10),RATECH
"RTN","RADLQ3",68,0)
 . Q
"RTN","RADLQ3",69,0)
 W !,RALN1
"RTN","RADLQ3",70,0)
 S RAVAR(0)=RAVAR ; track the patient status: inpatient -or- outpatient
"RTN","RADLQ3",71,0)
 Q
"RTN","RADLQ3",72,0)
CHECK(DUZ) ; Check for the existence of RACCESS.  Pass in user's DUZ!
"RTN","RADLQ3",73,0)
 S RAPSTX="" D SETVARS^RAPSET1(0)
"RTN","RADLQ3",74,0)
 Q
"RTN","RADLQ3",75,0)
LIST ; List divisions and I-Types
"RTN","RADLQ3",76,0)
 N A,B S A=""
"RTN","RADLQ3",77,0)
 F  S A=$O(^TMP($J,"RADLQ",A)) Q:A']""  D
"RTN","RADLQ3",78,0)
 . W !!,"Division: ",$P($G(^DIC(4,A,0)),"^"),!?3,"Imaging Type(s): "
"RTN","RADLQ3",79,0)
 . S B="" F  S B=$O(^TMP($J,"RADLQ",A,B)) Q:B']""  D  Q:RAXIT
"RTN","RADLQ3",80,0)
 .. I $Y>(IOSL-4) S RAXIT=$$EOS^RAUTL5() D:'RAXIT HDR^RADLQ2 Q:RAXIT
"RTN","RADLQ3",81,0)
 .. W:$X>(IOM-30) !?($X+$L("Imaging Type(s): ")+3) W B,?($X+3)
"RTN","RADLQ3",82,0)
 .. Q
"RTN","RADLQ3",83,0)
 . Q
"RTN","RADLQ3",84,0)
 I $Y>(IOSL-4) S RAXIT=$$EOS^RAUTL5() D:'RAXIT HDR^RADLQ2 Q:RAXIT
"RTN","RADLQ3",85,0)
 W !!?RATAB(6),"Total Over All Divisions: ",+$G(^TMP($J,"RADLQ"))
"RTN","RADLQ3",86,0)
 Q
"RTN","RADLQ3",87,0)
EXIT ; Kill and quit
"RTN","RADLQ3",88,0)
 K %DT,BEGDATE,DIROUT,DIRUT,DTOUT,DUOUT,ENDDATE,I,INVMAXDT,RA,RA1,RA2
"RTN","RADLQ3",89,0)
 K RABEG,RACN,RACNI,RACRT,RADFN,RADIV,RADIVNM,RADT,RADTE,RADTI,RAEND
"RTN","RADLQ3",90,0)
 K RAEXAM,RAFLAG,RAHD,RAHEAD,RAIPHY,RAITYPE,RALN1,RALN2,RAMES,RANME
"RTN","RADLQ3",91,0)
 K RANODE,RAPAT,RAPG,RAPOP,RAPRC,RAQUIT,RAREGEX,RARP,RASORT1,RASORT2
"RTN","RADLQ3",92,0)
 K RASSN,RAST,RASTI,RASV,RATAB,RATECH,RAVAR,RAVRFIED,RAWHE,RAXIT
"RTN","RADLQ3",93,0)
 K X,Y,ZTDESC,ZTRTN,ZTSAVE
"RTN","RADLQ3",94,0)
 K ^TMP($J,"RA D-TYPE"),^TMP($J,"RA I-TYPE"),^TMP($J,"RADLQ")
"RTN","RADLQ3",95,0)
 K:$D(RAPSTX) RACCESS,RAPSTX D CLOSE^RAUTL
"RTN","RADLQ3",96,0)
 K DISYS,I,POP
"RTN","RADLQ3",97,0)
 Q
"RTN","RADLQ3",98,0)
ZEROUT(SUB) ; Zero out the ^TMP($J global.
"RTN","RADLQ3",99,0)
 N X,Y,Z
"RTN","RADLQ3",100,0)
 S X="" F  S X=$O(RACCESS(DUZ,"DIV-IMG",X)) Q:X']""  D
"RTN","RADLQ3",101,0)
 . Q:'$D(^TMP($J,"RA D-TYPE",X))  S Y=0
"RTN","RADLQ3",102,0)
 . F  S Y=+$O(^TMP($J,"RA D-TYPE",X,Y)) Q:'Y  D 
"RTN","RADLQ3",103,0)
 .. S ^TMP($J,SUB,Y)=0,Z=""
"RTN","RADLQ3",104,0)
 .. F  S Z=$O(RACCESS(DUZ,"DIV-IMG",X,Z)) Q:Z']""  D
"RTN","RADLQ3",105,0)
 ... Q:'$D(^TMP($J,"RA I-TYPE",Z))  S ^TMP($J,SUB,Y,Z)=0
"RTN","RADLQ3",106,0)
 ... I SUB="RADLQ" D
"RTN","RADLQ3",107,0)
 .... S:RASORT1'="B" ^TMP($J,SUB,Y,Z,RASORT1)=0
"RTN","RADLQ3",108,0)
 .... S:RASORT1="B" ^TMP($J,SUB,Y,Z,"I")=0,^TMP($J,SUB,Y,Z,"O")=0
"RTN","RADLQ3",109,0)
 .... Q
"RTN","RADLQ3",110,0)
 ... Q
"RTN","RADLQ3",111,0)
 .. Q
"RTN","RADLQ3",112,0)
 . Q
"RTN","RADLQ3",113,0)
 Q
"RTN","RAEDCN1")
0^3^B14134766^B13671032
"RTN","RAEDCN1",1,0)
RAEDCN1 ;HISC/GJC-Utility routine for RAEDCN ;9/18/97  13:49
"RTN","RAEDCN1",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**18,45,93**;Mar 16, 1998;Build 3
"RTN","RAEDCN1",3,0)
 ; last modif by SS for P18
"RTN","RAEDCN1",4,0)
 ; 07/15/2008 BAY/KAM rem call 249750 RA*5*93 Correct DIK Calls
"RTN","RAEDCN1",5,0)
UNDEF ; Message for undefined imaging types
"RTN","RAEDCN1",6,0)
 I '+$G(RAMLC) D  Q
"RTN","RAEDCN1",7,0)
 . W !?5,"Imaging Location data is not defined, "
"RTN","RAEDCN1",8,0)
 . W "contact IRM.",$C(7)
"RTN","RAEDCN1",9,0)
 . Q
"RTN","RAEDCN1",10,0)
 W !?5,"An Imaging Type was not defined for the following Imaging"
"RTN","RAEDCN1",11,0)
 W !?5,"Location: "_$P(^SC($P($G(^RA(79.1,+RAMLC,0)),U),0),U)_"."
"RTN","RAEDCN1",12,0)
 Q
"RTN","RAEDCN1",13,0)
STUB(RARPT) ; Determine if this is an imaging stub report.
"RTN","RAEDCN1",14,0)
 ; Input: RARPT-ien of the report record
"RTN","RAEDCN1",15,0)
 ; Output: 1 if an imaging stub rpt, else 0
"RTN","RAEDCN1",16,0)
 N RA0 S RA0=$O(^RARPT(RARPT,"L",""),-1) ; most recent activity on rpt
"RTN","RAEDCN1",17,0)
 I RA0>0,$P($G(^RARPT(RARPT,"L",RA0,0)),U,2)="C",$P(^RARPT(RARPT,0),U,5)="",$O(^RARPT(RARPT,2005,0)),'$D(^RARPT(RARPT,"I")),'$D(^("P")),'$D(^("R")) Q 1 ; rpt is an image stub
"RTN","RAEDCN1",18,0)
 Q 0 ; (non-stub rpt record)
"RTN","RAEDCN1",19,0)
 ;
"RTN","RAEDCN1",20,0)
PSET(RADFN,RADTI,RACNI) ; Determine if this exam is part of a printset.
"RTN","RAEDCN1",21,0)
 ; Input: RADFN-patient dfn <-> RADTI-exam timestamp <-> RACNI-exam ien
"RTN","RAEDCN1",22,0)
 ; Output: 1 if part of a printset, else 0
"RTN","RAEDCN1",23,0)
 Q $S($P($G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0)),"^",25)=2:1,1:0)
"RTN","RAEDCN1",24,0)
 ;
"RTN","RAEDCN1",25,0)
CKREASON(X) ;check file 75.2 ; P18 moved it from RAEDCN because the routine's length exceeded limit
"RTN","RAEDCN1",26,0)
 ; 0=OKAY, 1=BAD
"RTN","RAEDCN1",27,0)
 ; don't check for var RAOREA, because it's not set this early
"RTN","RAEDCN1",28,0)
 I X="C",$O(^RA(75.2,"B","EXAM CANCELLED",0)) Q 0
"RTN","RAEDCN1",29,0)
 I X="D",$O(^RA(75.2,"B","EXAM DELETED",0)) Q 0
"RTN","RAEDCN1",30,0)
 W !!?5,$S(X="C":"Cancellation",1:"Deletion")," cannot be done, because your file #75.2,"
"RTN","RAEDCN1",31,0)
 W !?5,"RAD/NUC MED REASON, does not have ""EXAM ",$S(X="C":"CANCELLED",1:"DELETED"),"""","."
"RTN","RAEDCN1",32,0)
 W !!?5,"Please notify your ADPAC.",!
"RTN","RAEDCN1",33,0)
 K DIR S DIR(0)="E",DIR("A")="Press RETURN for menu options" D ^DIR K DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RAEDCN1",34,0)
 Q 1
"RTN","RAEDCN1",35,0)
 ;
"RTN","RAEDCN1",36,0)
DEL ; 'Exam Deletion' option (RA DELETEXAM)
"RTN","RAEDCN1",37,0)
 D SETVARS^RAEDCN Q:'($D(RACCESS(DUZ))\10)!('$D(RAIMGTY))
"RTN","RAEDCN1",38,0)
 S RAXIT=$$CKREASON^RAEDCN1("D") I RAXIT K RAXIT Q  ;P18
"RTN","RAEDCN1",39,0)
DEL1 D ^RACNLU G Q^RAEDCN:X="^"
"RTN","RAEDCN1",40,0)
 I RARPT W !?3,$C(7),"A report has been filed for this case. Therefore deletion is not allowed!" G DEL1
"RTN","RAEDCN1",41,0)
ASKDEL R !!,"Do you wish to delete this exam? NO// ",X:DTIME S:'$T!(X="")!(X["^") X="N" G DEL1:"Nn"[$E(X) I "Yy"'[$E(X) W:X'["?" $C(7) W !!,"Enter 'YES' to delete this exam, or 'NO' not to." G ASKDEL
"RTN","RAEDCN1",42,0)
 L +^RADPT(RADFN,"DT",RADTI):1 I '$T W !,$C(7),"Someone else is editing an exam for this patient on the date/time",!,"you selected. Please try Later" G DEL1
"RTN","RAEDCN1",43,0)
 S RADELFLG="" D ^RAORDC
"RTN","RAEDCN1",44,0)
 ; trigger RA CANCEL protocol on xam delete if xam not already cancelled
"RTN","RAEDCN1",45,0)
 S RA7003=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0)),X=+$P(RA7003,"^",3)
"RTN","RAEDCN1",46,0)
 ; no rpt filed, xam status exists & not cancelled -OR- xam status
"RTN","RAEDCN1",47,0)
 ; non-existent.
"RTN","RAEDCN1",48,0)
 I $P($G(^RA(72,X,0)),U,3)'=0 D
"RTN","RAEDCN1",49,0)
 . K RAIENS,RAERR S RAIENS=""_RACNI_","_RADTI_","_RADFN_","_"",RAFDA(70.03,RAIENS,3)="CANCELLED" D FILE^DIE("KSE","RAFDA","RAERR") K RAIENS,RAERR,RAFDA D CANCEL^RAHLRPC
"RTN","RAEDCN1",50,0)
 . Q
"RTN","RAEDCN1",51,0)
 K RA7003 S RABULL="",DA(2)=RADFN,DA(1)=RADTI,DA=RACNI
"RTN","RAEDCN1",52,0)
 ;S DIK="^RADPT(DA(2),""DT"",DA(1),""P""," D ^DIK
"RTN","RAEDCN1",53,0)
 S DIK="^RADPT("_DA(2)_",""DT"","_DA(1)_",""P""," D ^DIK
"RTN","RAEDCN1",54,0)
 W !?10,"...deletion of exam complete."
"RTN","RAEDCN1",55,0)
 K %,D,D0,D1,D2,DA,DIC,DIK,RADELFLG,RABULL,RAPRTZ,RAAFTER,RABEFORE
"RTN","RAEDCN1",56,0)
 ; Check if one exam or multiple exams exists below "DT" node.
"RTN","RAEDCN1",57,0)
 ; If no exams are present, delete "DT" node.
"RTN","RAEDCN1",58,0)
 I '+$O(^RADPT(RADFN,"DT",RADTI,"P",0)) D
"RTN","RAEDCN1",59,0)
 . K DA,DIK S DA(1)=RADFN,DA=RADTI
"RTN","RAEDCN1",60,0)
 . ; S DIK="^RADPT(DA(1),""DT""," D ^DIK
"RTN","RAEDCN1",61,0)
 . S DIK="^RADPT("_DA(1)_",""DT""," D ^DIK
"RTN","RAEDCN1",62,0)
 . K DA,DIK Q
"RTN","RAEDCN1",63,0)
 L -^RADPT(RADFN,"DT",RADTI)
"RTN","RAEDCN1",64,0)
 G DEL1
"RTN","RAEDCN1",65,0)
 ;
"RTN","RAEDCN1",66,0)
VIEW ; 'View Exam by Case No.' option (RA VIEWCN)
"RTN","RAEDCN1",67,0)
 D SETVARS^RAEDCN Q:'($D(RACCESS(DUZ))\10)!('$D(RAIMGTY))
"RTN","RAEDCN1",68,0)
 S RAVW="" D ^RACNLU G Q^RAEDCN:X="^" K RAFL D ^RAPROD D Q^RAEDCN G VIEW
"RTN","RAEDCN1",69,0)
 ;
"RTN","RAREG1")
0^4^B30150241^B29277878
"RTN","RAREG1",1,0)
RAREG1 ;HISC/CAH,FPT,DAD AISC/MJK,RMO-Register Patient ;10/15/97  09:34
"RTN","RAREG1",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**7,21,93**;Mar 16, 1998;Build 3
"RTN","RAREG1",3,0)
 ; 07/15/2008 BAY/KAM rem call 249750 RA*5*93 Correct DIK Calls
"RTN","RAREG1",4,0)
ASKORD I $D(RAVSTFLG),$G(YY)]"",$P(YY,U,5) D ASET G PACS
"RTN","RAREG1",5,0)
 ; radparfl = 1 if user chose detail-to-parent conversion
"RTN","RAREG1",6,0)
 ; radparpr = ien of file 74 of parent proc to replace detail proc
"RTN","RAREG1",7,0)
 K RADPARPR,RADPARFL
"RTN","RAREG1",8,0)
 S RAOLP=0,RAOVSTS="3;5;8" W ! D ^RAORDS G Q1:$D(RAOUT) G EXAM:$D(RAORDS)
"RTN","RAREG1",9,0)
 S RARD("A")="Do you want to Request an Exam for "_RANME_"? ",RARD(0)="S",RARD(1)="Yes^enter a request.",RARD(2)="No^not enter a request.",RARD("B")=2 D SET^RARD K RARD G Q1:$E(X)'="Y"
"RTN","RAREG1",10,0)
 W !!?3,"...requesting an exam for ",RANME,"...",! D ^RAORD1
"RTN","RAREG1",11,0)
EXAM ;
"RTN","RAREG1",12,0)
 ; block mixture of single proc with parent procedures
"RTN","RAREG1",13,0)
 N RA6,RA7,RA8 S RA6="",RA7=0,RA8=0
"RTN","RAREG1",14,0)
 F  S RA6=$O(RAORDS(RA6)) Q:'RA6  S:$P($G(^RAMIS(71,$P(^RAO(75.1,+RAORDS(RA6),0),U,2),0)),U,6)="P" RA7=1 S:$P($G(^RAMIS(71,$P(^RAO(75.1,+RAORDS(RA6),0),U,2),0)),U,6)'="P" RA8=1
"RTN","RAREG1",15,0)
 I RA7,RA8 W !!?7,*7,"You may not register a mixture of single and parent procedures.",! G Q1
"RTN","RAREG1",16,0)
 ;
"RTN","RAREG1",17,0)
 I $G(RADPARFL) D  G:Y<1 Q1 ; process detail-to-parent
"RTN","RAREG1",18,0)
 . D PSETPNT^RAREG4
"RTN","RAREG1",19,0)
 . Q
"RTN","RAREG1",20,0)
 S RAPARENT=+$P($G(^RADPT(RADFN,"DT",RADTI,0)),U,5)
"RTN","RAREG1",21,0)
 K ^TMP($J,"RAREG1") S (RAEXIT,RAQUIT,RASKIPIT,RACNICNT)=0
"RTN","RAREG1",22,0)
 D RSBIT^RAREG3
"RTN","RAREG1",23,0)
 F RAOLP=1:1 S RAOIFN=$G(RAORDS(RAOLP)) Q:'RAOIFN!RAEXIT!RAQUIT  D
"RTN","RAREG1",24,0)
 . D PROCESS^RAREG4
"RTN","RAREG1",25,0)
 . Q
"RTN","RAREG1",26,0)
 I RAEXIT,RAPARENT D EXAMDEL^RAREG2
"RTN","RAREG1",27,0)
 I $D(^TMP($J,"RAREG1")) D UOSM^RAREG2
"RTN","RAREG1",28,0)
PACS I $D(^TMP($J,"RAREG1")) S RACNT=0 F  S RACNT=$O(^TMP($J,"RAREG1",RACNT)) Q:'RACNT  D
"RTN","RAREG1",29,0)
 .S RAREGTMP=$G(^TMP($J,"RAREG1",RACNT)),RADFN=$P(RAREGTMP,U,1),RADTI=$P(RAREGTMP,U,2),RACNI=$P(RAREGTMP,U,3)
"RTN","RAREG1",30,0)
 .D REG^RAHLRPC
"RTN","RAREG1",31,0)
 .Q
"RTN","RAREG1",32,0)
 K RAREGTMP
"RTN","RAREG1",33,0)
 D:$D(RADPARFL) CKDUPORD^RAREG2 ; ck for dupl procs in outstndg orders
"RTN","RAREG1",34,0)
Q I '$D(RAREC) W !!?3,*7,"No exams entered for this visit. Must delete..." S DA(1)=RADFN,DA=RADTI,DIK="^RADPT("_DA(1)_",""DT""," D ^DIK W "...deletion complete!" K RAPX
"RTN","RAREG1",35,0)
 D LABEL^RAREG3
"RTN","RAREG1",36,0)
Q1 D Q4^RAREG4
"RTN","RAREG1",37,0)
 G PAT^RAREG
"RTN","RAREG1",38,0)
 ;
"RTN","RAREG1",39,0)
 ;CN entry point is called every time a new case number is assigned.
"RTN","RAREG1",40,0)
 ;The next available CN and last date CN's were "recycled" is stored in
"RTN","RAREG1",41,0)
 ;^RA(79.2,1,"CN")=Next availabe CN ^ date last recycled.
"RTN","RAREG1",42,0)
 ;This routine uses the next available CN unless it has been used for
"RTN","RAREG1",43,0)
 ;the same exam date before (DUP checks for duplicate case/date pair).
"RTN","RAREG1",44,0)
 ;Then the next available CN is calculated and written to the first
"RTN","RAREG1",45,0)
 ;piece of ^RA(79.2,1,"CN").  The node is locked during this transaction.
"RTN","RAREG1",46,0)
CN ;VARIABLES RATYPE,RADT AND RASET MUST EXIST AT THIS POINT
"RTN","RAREG1",47,0)
 ; 11/05/2008 BAY/KAM rem call 273496 RA*5*93 Add lock timeout to next line
"RTN","RAREG1",48,0)
 L +^RA(79.2,RATYPE,"CN"):$S($G(DILOCKTM)>0:DILOCKTM,1:3) D CAL:'$D(^RA(79.2,RATYPE,"CN")),CAL:DT>$P(^("CN"),"^",2),CAL:+^("CN")>99999 S RAX=+^RA(79.2,RATYPE,"CN") D DUP
"RTN","RAREG1",49,0)
 ; need recalculate if DUP returns an over 99999 value
"RTN","RAREG1",50,0)
 I RAX>99999 D CAL S RAX=+^RA(79.2,RATYPE,"CN") D DUP
"RTN","RAREG1",51,0)
 I 'RASET S X=RAX G CNQ
"RTN","RAREG1",52,0)
 I $D(X),X'="N",X'=RAX W !!,*7,"New case number must be equal to '",RAX,"'. OK? YES// " R RANS:DTIME K X I RANS["N"!(RANS["n")!('$T) G CNQ
"RTN","RAREG1",53,0)
 S X=RAX
"RTN","RAREG1",54,0)
 ; get next available short case number for future registration
"RTN","RAREG1",55,0)
 ; re-set "CN" node if future short case number >99999
"RTN","RAREG1",56,0)
 ; NOTE1: find and store next free case number for future use 091300
"RTN","RAREG1",57,0)
 F RAJ=(^RA(79.2,RATYPE,"CN")+1):1 I '$D(^RADPT("AE",RAJ)) S ^("CN")=RAJ_"^"_$P(^RA(79.2,RATYPE,"CN"),"^",2) Q
"RTN","RAREG1",58,0)
 ; if the next free case no. for future use is >99999, need recalculate
"RTN","RAREG1",59,0)
 I +^RA(79.2,RATYPE,"CN")>99999 D CAL
"RTN","RAREG1",60,0)
CNQ L -^RA(79.2,RATYPE,"CN")
"RTN","RAREG1",61,0)
 I $D(X),X>99999 W !!?3,*7,"You have reached the maximum limit for case numbers (99,999).",!?3,"You must first complete/purge your old exams before you can proceed." K X
"RTN","RAREG1",62,0)
 K RAJ,RATYPE,RASET,RAX,RANS,RADT Q
"RTN","RAREG1",63,0)
DUP ;Check to prevent use of same case number/date pair ;ch
"RTN","RAREG1",64,0)
 ; both short and long case numbers will be checked for duplicates 091500
"RTN","RAREG1",65,0)
 S RADTE99=$S('$D(RADTE):"",1:$E(RADTE,4,5)_$E(RADTE,6,7)_$E(RADTE,2,3))
"RTN","RAREG1",66,0)
 I '$D(^RADPT("AE",RAX)),'$D(^RADPT("ADC",RADTE99_"-"_RAX)) G DUPQ
"RTN","RAREG1",67,0)
 ; also check ADC xref while searching for next available number 08/15/00
"RTN","RAREG1",68,0)
 ; note2: even though the current available case number is being
"RTN","RAREG1",69,0)
 ;        stored, the next free case number for future use will be
"RTN","RAREG1",70,0)
 ;        found and stored later, see note1 above     091300
"RTN","RAREG1",71,0)
 F RAJ=(^RA(79.2,RATYPE,"CN")+1):1 I '$D(^RADPT("AE",RAJ)),'$D(^RADPT("ADC",RADTE99_"-"_RAJ)) S ^("CN")=RAJ_"^"_$P(^RA(79.2,RATYPE,"CN"),"^",2) S RAX=+^RA(79.2,RATYPE,"CN") Q
"RTN","RAREG1",72,0)
DUPQ K RADTE99 Q
"RTN","RAREG1",73,0)
 ;
"RTN","RAREG1",74,0)
 ; the CAL section is called if :
"RTN","RAREG1",75,0)
 ;       there isn't a ^RA(79.2,RATYPE,"CN")
"RTN","RAREG1",76,0)
 ;   or  today's date is after the date in ^RA(79.2,RATYPE,"CN") piece 2
"RTN","RAREG1",77,0)
 ;   or  ^RA(79.2,RATYPE,"CN") piece 1 is > 99999, this is
"RTN","RAREG1",78,0)
 ;       checked in two places :
"RTN","RAREG1",79,0)
 ;         before using this piece 1 as the next case number
"RTN","RAREG1",80,0)
 ;         and after calculating future free case number
"RTN","RAREG1",81,0)
 ;   or  DUP section returns a case number > 99999
"RTN","RAREG1",82,0)
 ; 
"RTN","RAREG1",83,0)
 ; the first calculation starts from today's date and finds the date
"RTN","RAREG1",84,0)
 ; for the next Saturday
"RTN","RAREG1",85,0)
 ;      %Y=day of week, 6 being Saturday
"RTN","RAREG1",86,0)
 ;
"RTN","RAREG1",87,0)
 ; the second calculation starts from ^RADPT("AE",1 and finds the
"RTN","RAREG1",88,0)
 ; lowest  n  where  ^RADPT("AE",n) doesn't exist anymore.
"RTN","RAREG1",89,0)
 ;
"RTN","RAREG1",90,0)
 ; then the results are used to replace ^RA(79.2,RATYPE,"CN")
"RTN","RAREG1",91,0)
 ;     where
"RTN","RAREG1",92,0)
 ;       piece  1  is the next free case number
"RTN","RAREG1",93,0)
 ;       piece  2  is the date for next Saturday
"RTN","RAREG1",94,0)
 ;       RATYPE is always  1   by design
"RTN","RAREG1",95,0)
 ;
"RTN","RAREG1",96,0)
CAL K RAXX S:$D(X) RAXX=X S RAX=DT F RAII=0:0 S X1=RAX,X2=1 D C^%DTC S RAX=X D H^%DTC Q:%Y=6
"RTN","RAREG1",97,0)
 D YMD^%DTC F RAJ=1:1 I '$D(^RADPT("AE",RAJ)) S ^RA(79.2,RATYPE,"CN")=RAJ_"^"_X S:$D(RAXX) X=RAXX Q
"RTN","RAREG1",98,0)
 K RAJ,RAXX,RAX,RAII Q
"RTN","RAREG1",99,0)
PROC(Y) Q $P($G(^RAMIS(71,+Y,0)),U)
"RTN","RAREG1",100,0)
ASET ; register extra cases for a exam/print set that has no VALID report yet
"RTN","RAREG1",101,0)
 ; there may be a stub report from imaging for this set
"RTN","RAREG1",102,0)
 S RAREC="" ; prevent Q  from deleting the exam at "DT" level
"RTN","RAREG1",103,0)
 S (RAEXIT,RAQUIT,RASKIPIT,RACNICNT)=0 K ^TMP($J,"RAREG1")
"RTN","RAREG1",104,0)
 N RAFIRST S RAFIRST=$O(^RADPT(RADFN,"DT",RADTI,"P",0)) Q:'RAFIRST
"RTN","RAREG1",105,0)
 S RAOIFN=$P(^RADPT(RADFN,"DT",RADTI,"P",RAFIRST,0),"^",11) ;imagg order ien
"RTN","RAREG1",106,0)
 N DIR
"RTN","RAREG1",107,0)
PS1 S DIR(0)="Y",DIR("A")="For "_RANME_"'s exam set -- register another descendent exam (Y/N)"
"RTN","RAREG1",108,0)
 W ! D ^DIR Q:'Y
"RTN","RAREG1",109,0)
 N RAPARENT S RAPARENT=1 D ORDER^RAREG2 ;preserve EXAM SET stored data
"RTN","RAREG1",110,0)
 Q:RAQUIT  ;6/18/96
"RTN","RAREG1",111,0)
 K RAPRC S RAPARENT=1 D EXAMLOOP^RAREG2 ;prevent undef RAPROC in EXAMLOOP
"RTN","RAREG1",112,0)
 ; RACNI is set by edit tmpl that's used in EXAMLOOP^RAREG2
"RTN","RAREG1",113,0)
 ; quit if registration was incomplete <-- rareg2 deleted entire case
"RTN","RAREG1",114,0)
 Q:'$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0))
"RTN","RAREG1",115,0)
 S RAPROC=$P($G(^RAO(75.1,+$G(RAOIFN),0)),U,2) ;ien of parent procedure
"RTN","RAREG1",116,0)
 ; set value of MEMBER OF SET
"RTN","RAREG1",117,0)
 ;    can't call memset^rareg2 to set MEMBER OF SET, due possiblity of
"RTN","RAREG1",118,0)
 ;    orig. proc being a single procedure that got converted to printset
"RTN","RAREG1",119,0)
 N RA25 S RA25=$P($G(^RADPT(RADFN,"DT",RADTI,"P",RAFIRST,0)),U,25)
"RTN","RAREG1",120,0)
 I RA25 N D,D0,DA,DI,DIC,DIE,DQ,DR,X,Y S DA(2)=RADFN,DA(1)=RADTI,DA=RACNI,DR="25///"_RA25,DIE="^RADPT("_RADFN_",""DT"","_RADTI_",""P""," D ^DIE
"RTN","RAREG1",121,0)
 G:RA25'=2 PS1
"RTN","RAREG1",122,0)
 ; combined report need more processing
"RTN","RAREG1",123,0)
 G:'$G(RA17) PS1 G:'$D(^RARPT(+$G(RA17),0))#2 PS1
"RTN","RAREG1",124,0)
 ; since there's a stub rpt from imaging (RA17), set piece 17
"RTN","RAREG1",125,0)
 D SET17^RAREG2(RADFN,RADTI,RACNI)
"RTN","RAREG1",126,0)
 ; copy over any dx/res/staff
"RTN","RAREG1",127,0)
 D COPYFROM^RAREG2(RACNI)
"RTN","RAREG1",128,0)
 ; insert rec in 74.05
"RTN","RAREG1",129,0)
 N RARPT,RARPTN,RA1,RAFDA,RAIEN,RAMSG,RAERR,RAXIT
"RTN","RAREG1",130,0)
 S RARPT=RA17,RARPTN=$P(^RARPT(RARPT,0),U),RA1=$P($G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0)),U)
"RTN","RAREG1",131,0)
 D:RA1 INSERT^RARTE2
"RTN","RAREG1",132,0)
 G PS1
"RTN","RAREG2")
0^5^B43905852^B42484505
"RTN","RAREG2",1,0)
RAREG2 ;HISC/CAH,FPT,DAD,SS AISC/MJK,RMO-Register Patient ;1/12/98  16:08
"RTN","RAREG2",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**13,18,93**;Mar 16, 1998;Build 3
"RTN","RAREG2",3,0)
 ;last modif. JULY 5,00 by SS 
"RTN","RAREG2",4,0)
 ; 07/15/2008 BAY/KAM rem call 249750 RA*5*93 Correct DIK Calls
"RTN","RAREG2",5,0)
ORDER ; Get data from ordered procedure for registration
"RTN","RAREG2",6,0)
 K RACLNC,RALIFN,RALOC,RAPIFN,RAPRC,RARDTE,RARSH,RASHA
"RTN","RAREG2",7,0)
 S Y=^RAO(75.1,+RAOIFN,0),RAPRC=$S($D(^RAMIS(71,+$P(Y,"^",2),0)):$P(^(0),"^"),1:"") S:$D(RADPARFL) RAPRC=RADPARPR ;may not need to redefine raprc ?
"RTN","RAREG2",8,0)
 S RACAT=$S('$D(RAWARD):$P($P(^DD(75.1,4,0),$P(Y,"^",4)_":",2),";"),1:RACAT)
"RTN","RAREG2",9,0)
 D SL^RAREG3 Q:RAQUIT
"RTN","RAREG2",10,0)
 S:"CS"[$E(RACAT)&($D(^DIC(34,+$P(Y,"^",9),0))) RASHA=$P(^(0),"^") S:"R"[$E(RACAT)&($D(^RAO(75.1,+RAOIFN,"R"))) RARSH=^("R")
"RTN","RAREG2",11,0)
 S:$D(^VA(200,+$P(Y,"^",14),0)) RAPIFN=+$P(Y,"^",14) S:$P(Y,"^",21) RARDTE=$P(Y,"^",21) S:$D(^SC(+$P(Y,"^",22),0)) RALIFN=+$P(Y,"^",22)
"RTN","RAREG2",12,0)
 I '$D(RAWARD),$D(RALIFN),$P(^SC(RALIFN,0),"^",3)="C" S RALOC=$P(^(0),"^") S RACLNC=$S('$D(^("SL")):RALOC,$D(^SC(+$P(^("SL"),"^",5),0)):$P(^(0),"^"),1:RALOC)
"RTN","RAREG2",13,0)
 ;check nodes ahead 6/18/96
"RTN","RAREG2",14,0)
 N RAAHEAD
"RTN","RAREG2",15,0)
 S RAAHEAD=$O(^RADPT(RADFN,"DT","B",RADTE))
"RTN","RAREG2",16,0)
 I RAAHEAD[RADTE W *7,!!?5,"Someone else has already started editing a record for this",!?5,"patient at this time, please try a few minutes later." S RAQUIT=1 R !!,"Press RETURN to continue :",RAAHEAD:DTIME
"RTN","RAREG2",17,0)
 Q
"RTN","RAREG2",18,0)
EXAMLOOP ; register the exam
"RTN","RAREG2",19,0)
 N REM ;this is used by the edit template
"RTN","RAREG2",20,0)
 S DA=RADFN,RACN="N",DIE("NO^")="OUTOK",DR="[RA REGISTER]",DIE="^RADPT(" D ^DIE K DIE("NO^"),DE,DQ
"RTN","RAREG2",21,0)
 K RAPOP,RAFM,RAFM1,RAI,RAMOD,RASTI,RACMTHOD,RANMFLG,RAIEN702 ;moved from edit template
"RTN","RAREG2",22,0)
 S RACNICNT=RACNICNT+1
"RTN","RAREG2",23,0)
 S ^TMP($J,"RAREG1",RACNICNT)=RADFN_U_RADTI_U_RACNI_U_RAOIFN
"RTN","RAREG2",24,0)
 I '$D(RAFIN) D  Q
"RTN","RAREG2",25,0)
 . W !?3,*7,"Exam entry not complete. Must delete..."
"RTN","RAREG2",26,0)
 . S DA(2)=RADFN,DA(1)=RADTI,DA=RACNI
"RTN","RAREG2",27,0)
 . ; Modified the next line for rem call 249750
"RTN","RAREG2",28,0)
 . S DIK="^RADPT("_DA(2)_",""DT"","_DA(1)_",""P""," D ^DIK
"RTN","RAREG2",29,0)
 . K ^TMP($J,"RAREG1",RACNICNT)
"RTN","RAREG2",30,0)
 . K RAPX  ; added in RA*5*13 to stop labels & flash cards in RAREG1
"RTN","RAREG2",31,0)
 . Q
"RTN","RAREG2",32,0)
 S RAPARENT=$S($G(RAPARENT):RAPARENT,$P($G(^RAMIS(71,RAPROC,0)),U,6)="P":1,1:+$G(RAPARENT))
"RTN","RAREG2",33,0)
 I $D(^RAO(75.1,+RAOIFN,"H")) S:$D(^("H",0)) ^RADPT(RADFN,"DT",RADTI,"P",RACNI,"H",0)=^(0) F I=1:1 Q:'$D(^RAO(75.1,+RAOIFN,"H",I,0))  S ^RADPT(RADFN,"DT",RADTI,"P",RACNI,"H",I,0)=^(0)
"RTN","RAREG2",34,0)
 S ^DISV($S($D(DUZ)#2:DUZ,1:0),"RA","CASE #")=RADFN_"^"_RADTI_"^"_RACNI,RAREC=""
"RTN","RAREG2",35,0)
 S:$D(RADPARFL) ^TMP($J,"PRO-REG",RAPROCI,RAOIFN)=""
"RTN","RAREG2",36,0)
 K RAFIN,DR
"RTN","RAREG2",37,0)
 K RACLNC,RALIFN,RALOC,RAOSTS,RAPHY,RAPRC,RARDTE,RARSH,RASHA
"RTN","RAREG2",38,0)
 Q
"RTN","RAREG2",39,0)
EXAMDEL ; Delete examset if incomplete
"RTN","RAREG2",40,0)
 W !!?3,*7,"Exam entry not complete. Must delete all descendent exams..."
"RTN","RAREG2",41,0)
 S RATMP=0
"RTN","RAREG2",42,0)
 F  S RATMP=$O(^TMP($J,"RAREG1",RATMP)) Q:RATMP'>0  D
"RTN","RAREG2",43,0)
 . S RA=^TMP($J,"RAREG1",RATMP)
"RTN","RAREG2",44,0)
 . S RAOIFN=$P(RA,U,4),(RADFN,DA(2))=$P(RA,U)
"RTN","RAREG2",45,0)
 . S (RADTI,DA(1))=$P(RA,U,2),(RACNI,DA)=$P(RA,U,3)
"RTN","RAREG2",46,0)
 . ; Modified the next line for rem call 249750
"RTN","RAREG2",47,0)
 . S DIK="^RADPT("_DA(2)_",""DT"","_DA(1)_",""P""," D ^DIK
"RTN","RAREG2",48,0)
 . K ^TMP($J,"RAREG1",RATMP),RAPX(RATMP)
"RTN","RAREG2",49,0)
 . K DIE,DR S DIE="^RAO(75.1,",DA=RAOIFN,DR="5///5" D ^DIE K DIE,DR
"RTN","RAREG2",50,0)
 . Q
"RTN","RAREG2",51,0)
 W !?3,"Deletion complete!",!
"RTN","RAREG2",52,0)
 Q
"RTN","RAREG2",53,0)
XTRADESC ; Ask extra descendent procedures for a parent
"RTN","RAREG2",54,0)
 N RASKIPIT S RASKIPIT=0
"RTN","RAREG2",55,0)
 F  D  Q:RASKIPIT!RAEXIT!RAQUIT
"RTN","RAREG2",56,0)
 . N DIR S DIR(0)="Y"
"RTN","RAREG2",57,0)
 . S DIR("A")="Register another descendent exam for "_RANME_" (Y/N)"
"RTN","RAREG2",58,0)
 . W ! D ^DIR
"RTN","RAREG2",59,0)
 . S RAEXIT=$S($D(DTOUT)!$D(DUOUT):1,1:0),RASKIPIT='Y
"RTN","RAREG2",60,0)
 . I RASKIPIT!RAEXIT Q
"RTN","RAREG2",61,0)
 . D ORDER K RAPRC Q:RAQUIT
"RTN","RAREG2",62,0)
 . D EXAMLOOP,MEMSET(RADFN,RADTI,RACNI)
"RTN","RAREG2",63,0)
 . Q
"RTN","RAREG2",64,0)
 Q
"RTN","RAREG2",65,0)
EXAMSET ; Set the EXAM SET field if a parent is registered
"RTN","RAREG2",66,0)
 N DA,DIE,DR,Y
"RTN","RAREG2",67,0)
 S DIE="^RADPT("_RADFN_",""DT"","
"RTN","RAREG2",68,0)
 S DA(1)=RADFN,DA=RADTI
"RTN","RAREG2",69,0)
 S DR="5///^S X=$S($G(RAPARENT):''RAPARENT,1:""@"")"
"RTN","RAREG2",70,0)
 D ^DIE
"RTN","RAREG2",71,0)
 Q
"RTN","RAREG2",72,0)
MEMSET(RAX,RAY,RAZ) ; Set 'MEMBER OF SET' field on the exam node
"RTN","RAREG2",73,0)
 ; if the procedure is a descendant procedure.
"RTN","RAREG2",74,0)
 ; Var List:   RAX <-> RADFN : RAY <-> RADTI : RAZ <-> RACNI
"RTN","RAREG2",75,0)
 Q:$G(^RADPT(RAX,"DT",RAY,"P",RAZ,0))']""
"RTN","RAREG2",76,0)
 N D,D0,DA,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RAREG2",77,0)
 S DIE="^RADPT("_RAX_",""DT"","_RAY_",""P"","
"RTN","RAREG2",78,0)
 S DA(2)=RAX,DA(1)=RAY,DA=RAZ,DR="25///"_$S($P($G(^RAMIS(71,+RAPROC,0)),"^",18)="Y":2,1:1) D ^DIE ;2=combined report, 1=separate reports
"RTN","RAREG2",79,0)
 Q
"RTN","RAREG2",80,0)
SET17(RAX,RAY,RAZ) ; Set piece 17 on exam node
"RTN","RAREG2",81,0)
 Q:$G(^RADPT(RAX,"DT",RAY,"P",RAZ,0))']""
"RTN","RAREG2",82,0)
 N D,D0,DA,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RAREG2",83,0)
 S DIE="^RADPT("_RAX_",""DT"","_RAY_",""P"","
"RTN","RAREG2",84,0)
 S DA(2)=RAX,DA(1)=RAY,DA=RAZ,DR="17///"_RA17 D ^DIE
"RTN","RAREG2",85,0)
 Q
"RTN","RAREG2",86,0)
UOSM ; called from RAREG1
"RTN","RAREG2",87,0)
 ; update order status and send OE v3.0 message
"RTN","RAREG2",88,0)
 ; This code will $O through the ^TMP($J,"RAREG1" global and make
"RTN","RAREG2",89,0)
 ; just one call per order/request number to ^RAORDU to update the
"RTN","RAREG2",90,0)
 ; status in File 75.1. One call to ^RAORDU per order/request number
"RTN","RAREG2",91,0)
 ; means only one HL7 type message per order/request will be sent to 
"RTN","RAREG2",92,0)
 ; OE v3.0.
"RTN","RAREG2",93,0)
 ;
"RTN","RAREG2",94,0)
 Q:'$D(^TMP($J,"RAREG1"))
"RTN","RAREG2",95,0)
 N RACNT,RAORDNUM,RATMPNDE
"RTN","RAREG2",96,0)
 S RACNT=0
"RTN","RAREG2",97,0)
 F  S RACNT=$O(^TMP($J,"RAREG1",RACNT)) Q:RACNT'>0  D
"RTN","RAREG2",98,0)
 .S RATMPNDE=$G(^TMP($J,"RAREG1",RACNT))
"RTN","RAREG2",99,0)
 .S RAOIFN=$P(RATMPNDE,U,4) I RAOIFN D
"RTN","RAREG2",100,0)
 ..Q:$D(RAORDNUM(RAOIFN))
"RTN","RAREG2",101,0)
 ..S RAPROC=$P(^RAO(75.1,+RAOIFN,0),U,2)
"RTN","RAREG2",102,0)
 ..N RA18PCHG S RA18PCHG=$$EN1^RAO7XX(RAOIFN) ;P18 - if the proc changed, sends XX mess, sets RA18PCHG=1 for RAORDU
"RTN","RAREG2",103,0)
 ..S RAOSTS=6 D ^RAORDU
"RTN","RAREG2",104,0)
 ..S RAORDNUM(RAOIFN)=""
"RTN","RAREG2",105,0)
 ..Q
"RTN","RAREG2",106,0)
 .Q
"RTN","RAREG2",107,0)
 Q
"RTN","RAREG2",108,0)
CKDUPORD ; ck for dupl procedures in outstanding orders
"RTN","RAREG2",109,0)
 S RA6="",RA8=0
"RTN","RAREG2",110,0)
CKD1 S RA6=$O(^TMP($J,"PRO-REG",RA6)) Q:'RA6
"RTN","RAREG2",111,0)
 S RA7=$O(^TMP($J,"PRO-REG",RA6,0)) G:'RA7 CKD1
"RTN","RAREG2",112,0)
 K ^TMP($J,"PRO-ORD",RA6,RA7) ; kill hook for order of regist'd proc
"RTN","RAREG2",113,0)
 G:'$O(^TMP($J,"PRO-ORD",RA6,0)) CKD1
"RTN","RAREG2",114,0)
 W:'RA8 !!?5,"Of the procedures you just registered,",!?5,"the following procedure(s) are still in outstanding order(s) :",*7,!
"RTN","RAREG2",115,0)
 S RA8=1
"RTN","RAREG2",116,0)
 S RA7=""
"RTN","RAREG2",117,0)
 F  S RA7=$O(^TMP($J,"PRO-ORD",RA6,RA7)) Q:'RA7  W !?5,$P(^RAMIS(71,RA6,0),U) W:^TMP($J,"PRO-ORD",RA6,RA7)="DESC" ?35,"(parent=",$P(^RAMIS(71,$P($G(^RAO(75.1,RA7,0)),U,2),0),U),")"
"RTN","RAREG2",118,0)
 G CKD1
"RTN","RAREG2",119,0)
COPYFROM(RAZ) ;called by RAREG1 if add exam shd copy dx/staff/resident
"RTN","RAREG2",120,0)
 ;RAZ is "P"-node's ien of newly added case of set
"RTN","RAREG2",121,0)
 Q:'$D(RAFIRST)#2  ;RAFIRST is "P"-node's ien of first case of set
"RTN","RAREG2",122,0)
 Q:$G(^RADPT(RADFN,"DT",RADTI,"P",RAZ,0))']""
"RTN","RAREG2",123,0)
 Q:$G(^RADPT(RADFN,"DT",RADTI,"P",RAFIRST,0))']""
"RTN","RAREG2",124,0)
 N RA,RA2,RA3,RA5 S RA5=0
"RTN","RAREG2",125,0)
 ; RA is a dummy var
"RTN","RAREG2",126,0)
 ; RA2 is used by data server call in RARTE2
"RTN","RAREG2",127,0)
 ; RA3 is used by COPYn^RARTE2 as a dummy var
"RTN","RAREG2",128,0)
 ; RA5=1 if any data got copied over to the new case
"RTN","RAREG2",129,0)
 N RA1PR,RA1PS ; prim res/staff
"RTN","RAREG2",130,0)
 N RA1SR,RA1SS ; sec res/staff arrays
"RTN","RAREG2",131,0)
 N RA1PD,RA1SD ; prim diag, then sec diags arrays
"RTN","RAREG2",132,0)
 N RAFDA,RAIEN,RAMSG,RAXIT
"RTN","RAREG2",133,0)
 S RAXIT=0
"RTN","RAREG2",134,0)
 S RA2=RAZ_","_RADTI_","_RADFN
"RTN","RAREG2",135,0)
 ; get data from first case of set
"RTN","RAREG2",136,0)
 S RA1PR=$P(^RADPT(RADFN,"DT",RADTI,"P",RAFIRST,0),U,12),RA1PS=$P(^(0),U,15),RA1PD=$P(^(0),U,13)
"RTN","RAREG2",137,0)
 I $D(^RADPT(RADFN,"DT",RADTI,"P",RAFIRST,"SRR",0)) S RA=0 F  S RA=$O(^RADPT(RADFN,"DT",RADTI,"P",RAFIRST,"SRR",RA)) Q:+RA'=RA  S RA1SR(RA)=+(^(RA,0))
"RTN","RAREG2",138,0)
 I $D(^RADPT(RADFN,"DT",RADTI,"P",RAFIRST,"SSR",0)) S RA=0 F  S RA=$O(^RADPT(RADFN,"DT",RADTI,"P",RAFIRST,"SSR",RA)) Q:+RA'=RA  S RA1SS(RA)=+(^(RA,0))
"RTN","RAREG2",139,0)
 I $D(^RADPT(RADFN,"DT",RADTI,"P",RAFIRST,"DX",0)) S RA=0 F  S RA=$O(^RADPT(RADFN,"DT",RADTI,"P",RAFIRST,"DX",RA)) Q:+RA'=RA  S RA1SD(RA)=+(^(RA,0))
"RTN","RAREG2",140,0)
 ; copy data from first case of set to new case
"RTN","RAREG2",141,0)
 S:RA1PR $P(^RADPT(RADFN,"DT",RADTI,"P",RAZ,0),U,12)=RA1PR,RA5=1
"RTN","RAREG2",142,0)
 S:RA1PS $P(^RADPT(RADFN,"DT",RADTI,"P",RAZ,0),U,15)=RA1PS,RA5=1
"RTN","RAREG2",143,0)
 S:RA1PD $P(^RADPT(RADFN,"DT",RADTI,"P",RAZ,0),U,13)=RA1PD,RA5=1
"RTN","RAREG2",144,0)
 I $O(RA1SR("")) S RA3="" D COPY3^RARTE2 S RA5=1
"RTN","RAREG2",145,0)
 I $O(RA1SS("")) S RA3="" D COPY4^RARTE2 S RA5=1
"RTN","RAREG2",146,0)
 I $O(RA1SD("")) S RA3="" D COPY5^RARTE2 S RA5=1
"RTN","RAREG2",147,0)
 Q:'RA5
"RTN","RAREG2",148,0)
 ; set xref for this new case only
"RTN","RAREG2",149,0)
 S DIK="^RADPT("_RADFN_",""DT"","_RADTI_",""P"","
"RTN","RAREG2",150,0)
 S DA(2)=RADFN,DA(1)=RADTI,DA=RAZ
"RTN","RAREG2",151,0)
 D IX1^DIK
"RTN","RAREG2",152,0)
 Q
"RTN","RARIC1")
0^7^B12590477^B12340782
"RTN","RARIC1",1,0)
RARIC1 ;HISC/GJC-Check to see if Imaging package exists ;3/4/96  15:43
"RTN","RARIC1",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**23,93**;Mar 16, 1998;Build 3
"RTN","RARIC1",3,0)
 ; 07/15/2008 BAY/KAM rem call 249750 RA*5*93 Correct DIK Calls
"RTN","RARIC1",4,0)
 ;
"RTN","RARIC1",5,0)
 ; API's STUFPHY and DELIMGPT are supported by DBIA#3317
"RTN","RARIC1",6,0)
 ;
"RTN","RARIC1",7,0)
IMAGE() ; check to see if Imaging package exists
"RTN","RARIC1",8,0)
 ; called from RACNLU, RAPTLU and RART1
"RTN","RARIC1",9,0)
 ; 1 = exists
"RTN","RARIC1",10,0)
 ; 0 = doesn't exist
"RTN","RARIC1",11,0)
 S X="MAGBAPI" X ^%ZOSF("TEST") I '$T Q 0
"RTN","RARIC1",12,0)
 S X="MAGGTIA" X ^%ZOSF("TEST") I '$T Q 0
"RTN","RARIC1",13,0)
 Q $S($O(^MAG(2005,0)):1,1:0)
"RTN","RARIC1",14,0)
 ;
"RTN","RARIC1",15,0)
 ;
"RTN","RARIC1",16,0)
STUFPHY(RAVERF,RASR,RARTN) ; stuff physician duz
"RTN","RARIC1",17,0)
 ;RASR should be rtn MAGJUPD1's RIST, =15 if staff, =12 if resident
"RTN","RARIC1",18,0)
 ;RAVERF=duz of physician (primary staff or primary resident)
"RTN","RARIC1",19,0)
 S RARTN="STUFPHY called"
"RTN","RARIC1",20,0)
 I '$D(DA(2))!'$D(DA(1))!'($D(DA)#2) S RARTN="Missing DA references" Q
"RTN","RARIC1",21,0)
 I 'RASR S RARTN="Missing RASR value" Q
"RTN","RARIC1",22,0)
 N RAERR,RAFLD,RAMDIV,RAMDV,RAMLC,RAESIG,RACOD
"RTN","RARIC1",23,0)
 ;
"RTN","RARIC1",24,0)
 ; check loc access
"RTN","RARIC1",25,0)
 S RACOD=$S(RASR=15:"S",RASR=12:"R",1:"")
"RTN","RARIC1",26,0)
 I RACOD="" S RARTN="Can't determine staff/resident code" Q
"RTN","RARIC1",27,0)
 I '$$SCRN^RAUTL8(.DA,RACOD,RAVERF,"PRI") S RARTN="Failed loc access" Q
"RTN","RARIC1",28,0)
 ;
"RTN","RARIC1",29,0)
 ; check verifier access
"RTN","RARIC1",30,0)
 I $D(^RADPT(DA(2),"DT",DA(1),0)) S RAMDIV=^(0),RAMLC=+$P(RAMDIV,"^",4),RAMDIV=+$P(RAMDIV,"^",3),RAMDV=$S($D(^RA(79,RAMDIV,.1)):^(.1),1:""),RAMDV=$S(RAMDV="":RAMDV,1:$TR(RAMDV,"YyNn",1100))
"RTN","RARIC1",31,0)
 I '$D(RAMDV) S RARTN="Can't determine RAMDV" Q
"RTN","RARIC1",32,0)
 D VERCHK^RAHLO3 ;returns RAERR text string
"RTN","RARIC1",33,0)
 I $G(RAERR)]"" S RARTN="Failed verifier: "_RAERR Q
"RTN","RARIC1",34,0)
 ;
"RTN","RARIC1",35,0)
 ; stuff data
"RTN","RARIC1",36,0)
 S DIE="^RADPT("_DA(2)_",""DT"","_DA(1)_",""P"","
"RTN","RARIC1",37,0)
 S DR=RASR_"////"_RAVERF D ^DIE K DI,DIC,DE,DQ,DIE,DR
"RTN","RARIC1",38,0)
 S RARTN=1
"RTN","RARIC1",39,0)
 ;
"RTN","RARIC1",40,0)
 ;delete 2nd staff/resident if it matches the primary staff/resident
"RTN","RARIC1",41,0)
 S RAFLD=$S(RASR=15:60,RASR=12:70,1:"")
"RTN","RARIC1",42,0)
 I 'RAFLD K DA Q  ;can't determine secondary field to check/delete
"RTN","RARIC1",43,0)
 D EN^RAUTL8(RAVERF,RAFLD,.DA)
"RTN","RARIC1",44,0)
 K DA
"RTN","RARIC1",45,0)
 Q
"RTN","RARIC1",46,0)
DELIMGPT(RAIE74,RAIE2005) ;delete imaging pointer
"RTN","RARIC1",47,0)
 ;input RAIE74 is File 74's ien
"RTN","RARIC1",48,0)
 ;input RAIE2005  is File 2005's ien
"RTN","RARIC1",49,0)
 ; quit if either input value is 0 or null or non-numeric
"RTN","RARIC1",50,0)
 Q:'RAIE74  Q:'RAIE2005
"RTN","RARIC1",51,0)
 ; quit if report doesn't have this RAIE2005 value
"RTN","RARIC1",52,0)
 N DA,DIK
"RTN","RARIC1",53,0)
 S DA=$O(^RARPT(RAIE74,2005,"B",RAIE2005,0))
"RTN","RARIC1",54,0)
 Q:'DA
"RTN","RARIC1",55,0)
 ; delete this 2005 pointer record
"RTN","RARIC1",56,0)
 ;07/17/2008 modified setting DIK in next line
"RTN","RARIC1",57,0)
 S DA(1)=RAIE74,DIK="^RARPT("_DA(1)_",2005," D ^DIK
"RTN","RARIC1",58,0)
 Q
"RTN","RARIC1",59,0)
EHVC ; Executable Help for File 72's VISTARAD CATEGORY field
"RTN","RARIC1",60,0)
 N RATXT,I
"RTN","RARIC1",61,0)
 F I=1:1:12 S RATXT(I)=$P($T(EHVCTXT+I),";;",2)
"RTN","RARIC1",62,0)
 D EN^DDIOL(.RATXT)
"RTN","RARIC1",63,0)
 Q
"RTN","RARIC1",64,0)
EHVCTXT ;
"RTN","RARIC1",65,0)
 ;;This field is only needed for sites that will be using VistaRad for soft-copy
"RTN","RARIC1",66,0)
 ;;reading of images.  This information is used by VistaRad software to prepare
"RTN","RARIC1",67,0)
 ;;the various types of exam lists that are displayed on the VistaRad workstation,
"RTN","RARIC1",68,0)
 ;;and to properly manage exam locking for the radiologists.
"RTN","RARIC1",69,0)
 ;;
"RTN","RARIC1",70,0)
 ;;If this Examination Status is to be used for exams that will be
"RTN","RARIC1",71,0)
 ;;read with VistaRad, then enter a value that corresponds to it
"RTN","RARIC1",72,0)
 ;;from the following list.  Note that not all status codes should
"RTN","RARIC1",73,0)
 ;;be assigned a VistaRad Category value, but only those that apply.
"RTN","RARIC1",74,0)
 ;;  
"RTN","RARIC1",75,0)
 ;;All other Exam Status codes that may be defined in the Radiology
"RTN","RARIC1",76,0)
 ;;Exam Status file should NOT be entered into this field.
"RTN","RARIC1",77,0)
 Q
"RTN","RAUTL00")
0^2^B8352310^B8023638
"RTN","RAUTL00",1,0)
RAUTL00 ;HIRMFO/GJC-Utility Routine (linked to RAUTL0) ;11/14/97  12:01
"RTN","RAUTL00",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**93**;Mar 16, 1998;Build 3
"RTN","RAUTL00",3,0)
 ;
"RTN","RAUTL00",4,0)
 ; 07/14/2008 BAY/KAM Rem Call 257549 Mod request for alert text
"RTN","RAUTL00",5,0)
OENOTE ; Fire off OE/RR notification for [abnormal, amended] rad results
"RTN","RAUTL00",6,0)
 ; back door fires off this notif. regardless of oe/rr version
"RTN","RAUTL00",7,0)
 ; because oe/rr doesn't get abnormal/amended info in HL7 msgs
"RTN","RAUTL00",8,0)
 I $$ORVR^RAORDU()=2.5 D
"RTN","RAUTL00",9,0)
 . N RAWITCH S X1=$S($D(^RAMIS(71,+$P(X,"^",2),0)):$P(^(0),"^"),1:"")
"RTN","RAUTL00",10,0)
 . S ORBPMSG=$S($D(RAAB):"Abnormal ",1:"")_"Imaging Results: "
"RTN","RAUTL00",11,0)
 . S:$D(^RAO(75.1,+$P(X,"^",11),0)) ORIFN=+$P(^(0),"^",7)
"RTN","RAUTL00",12,0)
 . S RAWITCH=$$OE1009() ; determine OE/RR Notification
"RTN","RAUTL00",13,0)
 . Q:RAWITCH=-1  ; invalid OE/RR Notification, quit!
"RTN","RAUTL00",14,0)
 . I RAWITCH=53!(+$O(^RARPT(RARPT,"ERR",0))) D
"RTN","RAUTL00",15,0)
 .. S:$D(RAAB) ORBPMSG="Amended/"_ORBPMSG
"RTN","RAUTL00",16,0)
 .. S:'$D(RAAB) ORBPMSG="Amended "_ORBPMSG
"RTN","RAUTL00",17,0)
 .. Q
"RTN","RAUTL00",18,0)
 . N RAVAR S RAVAR=$L(ORBPMSG),RAVAR=70-RAVAR
"RTN","RAUTL00",19,0)
 . S ORBPMSG=ORBPMSG_$E(X1,1,RAVAR)
"RTN","RAUTL00",20,0)
 . S ORNOTE(RAWITCH)=$S($D(ORIFN):1,1:"") D NOTE^ORX3
"RTN","RAUTL00",21,0)
 . Q
"RTN","RAUTL00",22,0)
 I $$ORVR^RAORDU()'<3 D
"RTN","RAUTL00",23,0)
 . ; Recall RADFN, RADTI & RACNI from the RASAVE array
"RTN","RAUTL00",24,0)
 . S RADFN=$G(RASAVE("RADFN")),RADTI=$G(RASAVE("RADTI"))
"RTN","RAUTL00",25,0)
 . S RACNI=$G(RASAVE("RACNI"))
"RTN","RAUTL00",26,0)
 . D OE3(RADFN,RADTI,RACNI,X)
"RTN","RAUTL00",27,0)
 . Q
"RTN","RAUTL00",28,0)
 Q
"RTN","RAUTL00",29,0)
OE1009() ; Determine the notification informing OE/RR
"RTN","RAUTL00",30,0)
 ; Output: OE/RR Notification [ ien for ^ORD(100.9, ]
"RTN","RAUTL00",31,0)
 N RANOTY ; used to identify type of OE/RR Notification
"RTN","RAUTL00",32,0)
 S RANOTY=-1 ; initalize to error condition
"RTN","RAUTL00",33,0)
 I $D(RAAB) S RANOTY=25 ; Abnormal Imaging Results
"RTN","RAUTL00",34,0)
 E  D
"RTN","RAUTL00",35,0)
 . I '+$O(^RARPT(RARPT,"ERR",0))  S RANOTY=22 ; Imaging Results V'fied
"RTN","RAUTL00",36,0)
 . E  S RANOTY=$S($$ORVR^RAORDU'<3:53,1:22) ; Imaging Result Amended
"RTN","RAUTL00",37,0)
 . Q
"RTN","RAUTL00",38,0)
 Q RANOTY
"RTN","RAUTL00",39,0)
 ;
"RTN","RAUTL00",40,0)
OE3(RADFN,RADTI,RACNI,X) ; Fire off oe/rr notifications, version 3.0+
"RTN","RAUTL00",41,0)
 ; Input: 'RADFN': Patient DFN   <->   'RADTI': exam timestamp (inverse)
"RTN","RAUTL00",42,0)
 ;        'RACNI': Exam ien      <->   'X'    : exam zero node
"RTN","RAUTL00",43,0)
 ; *** 'RARPT' is assumed to exist and be a valid ien in file 74. ***
"RTN","RAUTL00",44,0)
 N RA751,RAIENS,RAMSG,RANOTE,RAOIFN,RAREQPHY,X1
"RTN","RAUTL00",45,0)
 S X1=$S($D(^RAMIS(71,+$P(X,"^",2),0)):$P(^(0),"^"),1:"")
"RTN","RAUTL00",46,0)
 S RA751=$G(^RAO(75.1,+$P(X,"^",11),0))
"RTN","RAUTL00",47,0)
 S RAIENS=RADTI_"~"_RACNI
"RTN","RAUTL00",48,0)
 I $D(RAAB) D  ; abnormal Dx code associated with report
"RTN","RAUTL00",49,0)
 . S:'+$O(^RARPT(RARPT,"ERR",0)) RANOTE="25^Abnl Imaging Reslt, Needs Attn: "_$E(X1,1,25)
"RTN","RAUTL00",50,0)
 . S:+$O(^RARPT(RARPT,"ERR",0)) RANOTE="53^Amended/Abnormal Imaging Results: "_$E(X1,1,20)
"RTN","RAUTL00",51,0)
 . Q
"RTN","RAUTL00",52,0)
 I '$D(RAAB)  D  ; no abnormal Dx code with this report
"RTN","RAUTL00",53,0)
 . S:'+$O(^RARPT(RARPT,"ERR",0)) RANOTE="22^Imaging Results,Non Critical: "_$E(X1,1,30)
"RTN","RAUTL00",54,0)
 . S:+$O(^RARPT(RARPT,"ERR",0)) RANOTE="53^Amended Imaging Results: "_$E(X1,1,25)
"RTN","RAUTL00",55,0)
 . Q
"RTN","RAUTL00",56,0)
 S RAMSG=$P($G(RANOTE),"^",2),RAOIFN=$P(RA751,"^",7),RAREQPHY(+$P(X,"^",14))=""
"RTN","RAUTL00",57,0)
 D EN^ORB3(+$G(RANOTE),RADFN,RAOIFN,.RAREQPHY,RAMSG,RAIENS)
"RTN","RAUTL00",58,0)
 Q
"VER")
8.0^22.0
"BLD",7055,6)
^86
**END**
**END**
