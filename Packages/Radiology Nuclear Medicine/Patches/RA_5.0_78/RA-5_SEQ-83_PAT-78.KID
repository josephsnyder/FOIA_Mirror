Released RA*5*78 SEQ #83
Extracted from mail message
**KIDS**:RA*5.0*78^

**INSTALL NAME**
RA*5.0*78
"BLD",7085,0)
RA*5.0*78^RADIOLOGY/NUCLEAR MEDICINE^0^3090330^y
"BLD",7085,1,0)
^^3^3^3090317^^^^
"BLD",7085,1,1,0)
Patch seventy-eight for the Radiology/Nuclear Medicine 5.0 software.
"BLD",7085,1,2,0)
Please review the Description and Installation Instructions for RA*5.0*78
"BLD",7085,1,3,0)
before installing this patch.
"BLD",7085,4,0)
^9.64PA^^0
"BLD",7085,6.3)
5
"BLD",7085,"INID")
^
"BLD",7085,"INIT")

"BLD",7085,"KRN",0)
^9.67PA^779.2^20
"BLD",7085,"KRN",.4,0)
.4
"BLD",7085,"KRN",.401,0)
.401
"BLD",7085,"KRN",.402,0)
.402
"BLD",7085,"KRN",.403,0)
.403
"BLD",7085,"KRN",.5,0)
.5
"BLD",7085,"KRN",.84,0)
.84
"BLD",7085,"KRN",3.6,0)
3.6
"BLD",7085,"KRN",3.8,0)
3.8
"BLD",7085,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",7085,"KRN",3.8,"NM",1,0)
RAD HL7 MESSAGES^^0
"BLD",7085,"KRN",3.8,"NM","B","RAD HL7 MESSAGES",1)

"BLD",7085,"KRN",9.2,0)
9.2
"BLD",7085,"KRN",9.8,0)
9.8
"BLD",7085,"KRN",9.8,"NM",0)
^9.68A^5^3
"BLD",7085,"KRN",9.8,"NM",1,0)
RAHL23Q^^0^B131709576
"BLD",7085,"KRN",9.8,"NM",2,0)
RAHL23Q1^^0^B125594612
"BLD",7085,"KRN",9.8,"NM",5,0)
RAHL23QU^^0^B19520551
"BLD",7085,"KRN",9.8,"NM","B","RAHL23Q",1)

"BLD",7085,"KRN",9.8,"NM","B","RAHL23Q1",2)

"BLD",7085,"KRN",9.8,"NM","B","RAHL23QU",5)

"BLD",7085,"KRN",19,0)
19
"BLD",7085,"KRN",19.1,0)
19.1
"BLD",7085,"KRN",101,0)
101
"BLD",7085,"KRN",101,"NM",0)
^9.68A^^0
"BLD",7085,"KRN",409.61,0)
409.61
"BLD",7085,"KRN",771,0)
771
"BLD",7085,"KRN",771,"NM",0)
^9.68A^^0
"BLD",7085,"KRN",779.2,0)
779.2
"BLD",7085,"KRN",779.2,"NM",0)
^9.68A^2^2
"BLD",7085,"KRN",779.2,"NM",1,0)
RA-NTP-QUERY^^0
"BLD",7085,"KRN",779.2,"NM",2,0)
RA-NTP-RSP^^0
"BLD",7085,"KRN",779.2,"NM","B","RA-NTP-QUERY",1)

"BLD",7085,"KRN",779.2,"NM","B","RA-NTP-RSP",2)

"BLD",7085,"KRN",870,0)
870
"BLD",7085,"KRN",8989.51,0)
8989.51
"BLD",7085,"KRN",8989.52,0)
8989.52
"BLD",7085,"KRN",8994,0)
8994
"BLD",7085,"KRN","B",.4,.4)

"BLD",7085,"KRN","B",.401,.401)

"BLD",7085,"KRN","B",.402,.402)

"BLD",7085,"KRN","B",.403,.403)

"BLD",7085,"KRN","B",.5,.5)

"BLD",7085,"KRN","B",.84,.84)

"BLD",7085,"KRN","B",3.6,3.6)

"BLD",7085,"KRN","B",3.8,3.8)

"BLD",7085,"KRN","B",9.2,9.2)

"BLD",7085,"KRN","B",9.8,9.8)

"BLD",7085,"KRN","B",19,19)

"BLD",7085,"KRN","B",19.1,19.1)

"BLD",7085,"KRN","B",101,101)

"BLD",7085,"KRN","B",409.61,409.61)

"BLD",7085,"KRN","B",771,771)

"BLD",7085,"KRN","B",779.2,779.2)

"BLD",7085,"KRN","B",870,870)

"BLD",7085,"KRN","B",8989.51,8989.51)

"BLD",7085,"KRN","B",8989.52,8989.52)

"BLD",7085,"KRN","B",8994,8994)

"BLD",7085,"QUES",0)
^9.62^^
"BLD",7085,"REQB",0)
^9.611^1^1
"BLD",7085,"REQB",1,0)
RA*5.0*84^2
"BLD",7085,"REQB","B","RA*5.0*84",1)

"KRN",3.8,208,-1)
0^1
"KRN",3.8,208,0)
RAD HL7 MESSAGES^PR^^^^^
"KRN",3.8,208,2,0)
^3.801^3^3^3090330^^^^
"KRN",3.8,208,2,1,0)
This mail group is used to inform radiology users about issues regarding 
"KRN",3.8,208,2,2,0)
the HL7 interface between the VistA Radiology/Nuclear Medicine application
"KRN",3.8,208,2,3,0)
and Commercial Off The Shelf (COTS) applications.
"KRN",3.8,208,3)

"KRN",779.2,12,-1)
0^1
"KRN",779.2,12,0)
RA-NTP-QUERY^^RA-NTP-QRY_R02
"KRN",779.2,12,1,0)
^779.21^1^1
"KRN",779.2,12,1,1,0)
QRY^R02^^RCVQRY^RAHL23Q^2.3
"KRN",779.2,12,1,"B","QRY",1)

"KRN",779.2,12,1,"D","QRY","R02",2.3,1)

"KRN",779.2,12,2)
RADIOLOGY/NUCLEAR MEDICINE
"KRN",779.2,13,-1)
0^2
"KRN",779.2,13,0)
RA-NTP-RSP
"KRN",779.2,13,1,0)
^779.21^1^1
"KRN",779.2,13,1,1,0)
ORF^R04
"KRN",779.2,13,1,"B","ORF",1)

"KRN",779.2,13,1,"C","ORF","R04",1)

"KRN",779.2,13,2)
RADIOLOGY/NUCLEAR MEDICINE
"MBREQ")
0
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",22,779.2)
779.2;22;1;;HLOAP^XPDTA1;;HLOE^XPDIA1;;;
"ORD",22,779.2,0)
HLO APPLICATION REGISTRY
"PKG",18,-1)
1^1
"PKG",18,0)
RADIOLOGY/NUCLEAR MEDICINE^RA^REGISTERS PATIENTS,RECORDS EXAMS,PROFILES,AMIS REPORTS
"PKG",18,20,0)
^9.402P^^
"PKG",18,22,0)
^9.49I^1^1
"PKG",18,22,1,0)
5.0^3051109^2980407^50
"PKG",18,22,1,"PAH",1,0)
78^3090330
"PKG",18,22,1,"PAH",1,1,0)
^^3^3^3090330
"PKG",18,22,1,"PAH",1,1,1,0)
Patch seventy-eight for the Radiology/Nuclear Medicine 5.0 software.
"PKG",18,22,1,"PAH",1,1,2,0)
Please review the Description and Installation Instructions for RA*5.0*78
"PKG",18,22,1,"PAH",1,1,3,0)
before installing this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","RAHL23Q")
0^1^B131709576^n/a
"RTN","RAHL23Q",1,0)
RAHL23Q ;HINES OIFO/GJC process query message/event type (QRY/R02) ; 15 Aug 2008  2:27 PM
"RTN","RAHL23Q",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**78**;Mar 16, 1998;Build 5
"RTN","RAHL23Q",3,0)
 ;
"RTN","RAHL23Q",4,0)
 ;Integration Agreements
"RTN","RAHL23Q",5,0)
 ;----------------------
"RTN","RAHL23Q",6,0)
 ;%ZTLOAD(10063), $$FIND1^DIC(2051), $$NEWMSG^HLOAPI(4716), $$SENDONE^HLOAPI1(4717)
"RTN","RAHL23Q",7,0)
 ;$$GET^HLOPRS(4718), $$NEXTSEG^HLOPRS(4718), $$STARTMSG^HLOPRS(4718), $$FMADD^XLFDT(10103)
"RTN","RAHL23Q",8,0)
 ;$$HL7TFM^XLFDT(10103), $$NOW^XLFDT(10103), XMD(10070)
"RTN","RAHL23Q",9,0)
 ;
"RTN","RAHL23Q",10,0)
RCVQRY ;receive & process the inbound query
"RTN","RAHL23Q",11,0)
 S:$G(U)'="^" U="^" ;under development
"RTN","RAHL23Q",12,0)
 N HL,HLA,HLSTART,RAQFC,RAQPRI,RAQID,RAQDRT,RAQDRDT,RAQWHO,RAQWHAT,RAQDEPT
"RTN","RAHL23Q",13,0)
 N RAQWHERE,RAQSTRT,RAQEND,RAQUANT,RAQUNIT
"RTN","RAHL23Q",14,0)
 N RACNTRL,RACS,RADFN,RAECH,RAEDT,RAEND,RAERR,RAESC,RAFS,RAI,RAJ,RAK,RAMSH,RAPRIO,RARPT
"RTN","RAHL23Q",15,0)
 N RARS,RASCS,RASDT,RASEG,RATXT,RAX
"RTN","RAHL23Q",16,0)
 ;Please be aware that when using HLO the database where the message headers and
"RTN","RAHL23Q",17,0)
 ;message bodies are filed have changed.
"RTN","RAHL23Q",18,0)
 ;legacy VistA HL7                  optimized VistA HL7 (HLO)
"RTN","RAHL23Q",19,0)
 ;-----------------------------------------------------
"RTN","RAHL23Q",20,0)
 ;HL7 MESSAGE TEXT (#772)           HLO MESSAGE BODY (#777)
"RTN","RAHL23Q",21,0)
 ;HL7 MESSAGE ADMINISTRATION (#773) HLO MESSAGES (#778)
"RTN","RAHL23Q",22,0)
 ;
"RTN","RAHL23Q",23,0)
MSH ;Parse the header and return individual values
"RTN","RAHL23Q",24,0)
 I '$$STARTMSG^HLOPRS(.HLMSTATE,HLMSGIEN,.RAMSH) D  Q
"RTN","RAHL23Q",25,0)
 .S RATXT(1)="Error processing the NTP query used to return radiology results."
"RTN","RAHL23Q",26,0)
 .S RATXT(2)="",RATXT(3)="Contact the VistA Radiology/Nuclear Medicine development team."
"RTN","RAHL23Q",27,0)
 .D ERR(.RATXT) Q
"RTN","RAHL23Q",28,0)
 ;
"RTN","RAHL23Q",29,0)
 ;RAHDR array elements defined
"RTN","RAHL23Q",30,0)
 ;----------------------------
"RTN","RAHL23Q",31,0)
 ;RAMSH("SEGMENT TYPE")="MSH"                 RAMSH("DT/TM OF MESSAGE")
"RTN","RAHL23Q",32,0)
 ;RAMSH("FIELD SEPARATOR")                    RAMSH("SECURITY")
"RTN","RAHL23Q",33,0)
 ;RAMSH("COMPONENT SEPARATOR")                RAMSH("MESSAGE TYPE")
"RTN","RAHL23Q",34,0)
 ;RAMSH("SUBCOMPONENT SEPARATOR")             RAMSH("EVENT")
"RTN","RAHL23Q",35,0)
 ;RAMSH("REPETITION SEPARATOR")               RAMSH("MESSAGE STRUCTURE")
"RTN","RAHL23Q",36,0)
 ;RAMSH("ESCAPE CHARACTER")                   RAMSH("MESSAGE CONTROL ID")
"RTN","RAHL23Q",37,0)
 ;RAMSH("SENDING APPLICATION")                RAMSH("PROCESSING ID")
"RTN","RAHL23Q",38,0)
 ;RAMSH("SENDING FACILITY",1) 1st component   RAMSH("PROCESSING MODE")
"RTN","RAHL23Q",39,0)
 ;RAMSH("SENDING FACILITY",2) 2nd component   RAMSH("VERSION")
"RTN","RAHL23Q",40,0)
 ;RAMSH("SENDING FACILITY",3) 3rd component   RAMSH("CONTINUATION POINTER")
"RTN","RAHL23Q",41,0)
 ;RAMSH("RECEIVING APPLICATION")              RAMSH("ACCEPT ACK TYPE")
"RTN","RAHL23Q",42,0)
 ;RAMSH("RECEIVING FACILITY",1) 1st component RAMSH("APP ACK TYPE")
"RTN","RAHL23Q",43,0)
 ;RAMSH("RECEIVING FACILITY",2) 2nd component RAMSH("COUNTRY")
"RTN","RAHL23Q",44,0)
 ;RAMSH("RECEIVING FACILITY",3) 3rd component
"RTN","RAHL23Q",45,0)
 ;
"RTN","RAHL23Q",46,0)
 S RACNTRL=RAMSH("MESSAGE CONTROL ID")
"RTN","RAHL23Q",47,0)
 ;
"RTN","RAHL23Q",48,0)
 ;perform some sanity checks...
"RTN","RAHL23Q",49,0)
 ;
"RTN","RAHL23Q",50,0)
 I RAMSH("MESSAGE TYPE")'="QRY"!(RAMSH("EVENT")'="R02") D  Q
"RTN","RAHL23Q",51,0)
 .N X,X1
"RTN","RAHL23Q",52,0)
 .S X=$S(RAMSH("MESSAGE TYPE")'="QRY":"HL7 MESSAGE TYPE",1:"HL7 EVENT TYPE")
"RTN","RAHL23Q",53,0)
 .S X1=$S(RAMSH("MESSAGE TYPE")'="QRY":"(QRY)",1:"(R02)")
"RTN","RAHL23Q",54,0)
 .S RATXT(1)="The "_X_" expected "_X1_" differs from the "_X
"RTN","RAHL23Q",55,0)
 .S RATXT(2)="received: "_$S(RAMSH("MESSAGE TYPE")'="QRY":RAMSH("MESSAGE TYPE"),1:RAMSH("MESSAGE TYPE"))
"RTN","RAHL23Q",56,0)
 .S RATXT(3)="",RATXT(4)="Contact the VistA Radiology/Nuclear Medicine development team."
"RTN","RAHL23Q",57,0)
 .S RATXT(5)="",RATXT(6)="MESSAGE CONTROL ID: "
"RTN","RAHL23Q",58,0)
 .D ERR(.RATXT) Q
"RTN","RAHL23Q",59,0)
 ;
"RTN","RAHL23Q",60,0)
 ;namespace other RA* variables to their RAHDR() equivalent (save keys strokes)
"RTN","RAHL23Q",61,0)
 S RAECH=RAMSH("ENCODING CHARACTERS")
"RTN","RAHL23Q",62,0)
 S RAFS=RAMSH("FIELD SEPARATOR")
"RTN","RAHL23Q",63,0)
 S RACS=RAMSH("COMPONENT SEPARATOR")
"RTN","RAHL23Q",64,0)
 S RARS=RAMSH("REPETITION SEPARATOR")
"RTN","RAHL23Q",65,0)
 S RAESC=RAMSH("ESCAPE CHARACTER")
"RTN","RAHL23Q",66,0)
 S RASCS=RAMSH("SUBCOMPONENT SEPARATOR")
"RTN","RAHL23Q",67,0)
 ;
"RTN","RAHL23Q",68,0)
SEG ;parse the body of the message (segments)
"RTN","RAHL23Q",69,0)
 F  Q:'$$NEXTSEG^HLOPRS(.HLMSTATE,.RASEG)  D  Q:$D(RAERR)#2
"RTN","RAHL23Q",70,0)
 .;get the fields and set the proper local variables...
"RTN","RAHL23Q",71,0)
 .I $$GET^HLOPRS(.RASEG,RAFS,RACS,RASCS,RARS)
"RTN","RAHL23Q",72,0)
 .;the data is in this format: SEG(FIELD #,REP,COMP,SUBCOMP)
"RTN","RAHL23Q",73,0)
 .D @RASEG(0)
"RTN","RAHL23Q",74,0)
 .Q
"RTN","RAHL23Q",75,0)
 ;
"RTN","RAHL23Q",76,0)
 ;I $D(RAERR)#2 D  Q
"RTN","RAHL23Q",77,0)
 ;.S RATXT(1)="Error processing the NTP query used to return radiology results."
"RTN","RAHL23Q",78,0)
 ;.S RATXT(2)="",RATXT(3)="Error: "_$G(RAERR),RATXT(4)=""
"RTN","RAHL23Q",79,0)
 ;.S RATXT(5)="Contact the VistA Radiology/Nuclear Medicine development team."
"RTN","RAHL23Q",80,0)
 ;.D ERR(.RATXT) Q
"RTN","RAHL23Q",81,0)
 ;
"RTN","RAHL23Q",82,0)
 D TASK
"RTN","RAHL23Q",83,0)
 Q
"RTN","RAHL23Q",84,0)
 ;
"RTN","RAHL23Q",85,0)
QRD ;Analyze data from the QRD segment from Non-VistA System
"RTN","RAHL23Q",86,0)
 ;
"RTN","RAHL23Q",87,0)
 ; Local Variable & value                 HL7 segment-field
"RTN","RAHL23Q",88,0)
 ;---------------------------------------------------------
"RTN","RAHL23Q",89,0)
 ;RAQDT   = Query Date/Time                      QRD-1
"RTN","RAHL23Q",90,0)
 ;RAQFC   = Query Format code                    QRD-2 
"RTN","RAHL23Q",91,0)
 ;RAQPRI  = Query Priority                       QRD-3
"RTN","RAHL23Q",92,0)
 ;RAQID   = Query ID                             QRD-4
"RTN","RAHL23Q",93,0)
 ;RAQDRT   = Deferred Resp. Type                 QRD-5
"RTN","RAHL23Q",94,0)
 ;RAQDRDT  = Deferred Resp. Date/Time            QRD-6
"RTN","RAHL23Q",95,0)
 ;RAQUANT = Quantity Limited Request             QRD-7
"RTN","RAHL23Q",96,0)
 ;RAQWHO  = Who Subject Filter (patient SSN)     QRD-8
"RTN","RAHL23Q",97,0)
 ;RAQWHAT = What Subject Filter                  QRD-9
"RTN","RAHL23Q",98,0)
 ;RAQDEPT = What Dept. Data Code (accession)     QRD-10
"RTN","RAHL23Q",99,0)
 ;
"RTN","RAHL23Q",100,0)
 ;RAQUANT (QRD-7) Quantity Limited Request has two components: 1st=quantity, 2nd=units
"RTN","RAHL23Q",101,0)
 ;
"RTN","RAHL23Q",102,0)
 S RAQDT=$G(RASEG(1,1,1,1)),RAQFC=$G(RASEG(2,1,1,1)),RAQPRI=$G(RASEG(3,1,1,1))
"RTN","RAHL23Q",103,0)
 S RAQID=$G(RASEG(4,1,1,1)),RAQDRT=$G(RASEG(5,1,1,1)),RAQDRDT=$G(RASEG(6,1,1,1))
"RTN","RAHL23Q",104,0)
 S RAQUANT=$G(RASEG(7,1,1,1)),RAQUNIT=$G(RASEG(7,1,2,1)),RAQWHO=$G(RASEG(8,1,1,1))
"RTN","RAHL23Q",105,0)
 S RAQWHAT=$G(RASEG(9,1,1,1)),RAQDEPT=$G(RASEG(10,1,1,1))
"RTN","RAHL23Q",106,0)
 ;
"RTN","RAHL23Q",107,0)
 S RAQWHO=$TR(RAQWHO,"-","") ;strip out the dashes in the SSN
"RTN","RAHL23Q",108,0)
 ;
"RTN","RAHL23Q",109,0)
 ;We need to know the type of query: patient or accession
"RTN","RAHL23Q",110,0)
 ;RAQDEPT denotes an accession based query; RAQWHO denotes a patient based query
"RTN","RAHL23Q",111,0)
 ;Both query types require QRD-1, QRD-2, QRD-3, QRD-4, QRD-7, & QRD-9
"RTN","RAHL23Q",112,0)
 ;
"RTN","RAHL23Q",113,0)
 I RAQDT="" S RAERR="Missing Query Date/Time (QRD-1)" Q
"RTN","RAHL23Q",114,0)
 I RAQFC="" S RAERR="Missing Query Format Code (QRD-2)" Q
"RTN","RAHL23Q",115,0)
 I RAQPRI="" S RAERR="Missing Query Priority (QRD-3)" Q
"RTN","RAHL23Q",116,0)
 I RAQID="" S RAERR="Missing Query ID (QRD-4)" Q
"RTN","RAHL23Q",117,0)
 ;
"RTN","RAHL23Q",118,0)
 ;-if the number of reports to return is less than zero default to one
"RTN","RAHL23Q",119,0)
 ;-if the number of reports to return is greater than one hundred default
"RTN","RAHL23Q",120,0)
 ; to one hundred
"RTN","RAHL23Q",121,0)
 S:RAQUANT'>0 RAQUANT=1 S:RAQUANT>1000 RAQUANT=1000
"RTN","RAHL23Q",122,0)
 ;
"RTN","RAHL23Q",123,0)
 I RAQUNIT="" S RAERR="Missing Quantity Limited Request (units QRD-7.2)" Q
"RTN","RAHL23Q",124,0)
 I RAQWHAT="" S RAERR="Missing What Subject Filter (QRD-9)" Q
"RTN","RAHL23Q",125,0)
 I RAQWHO="",(RAQDEPT="") S RAERR="Indeterminable query type" Q
"RTN","RAHL23Q",126,0)
 I $L(RAQWHO),($L(RAQDEPT)) S RAERR="Indeterminable query type" Q
"RTN","RAHL23Q",127,0)
 ;
"RTN","RAHL23Q",128,0)
 ;Who Subject Filter (passed as a SSN, convert to the DFN of the patient)
"RTN","RAHL23Q",129,0)
 ;I $$FIND1^DIC(2,"","","`"_RAQWHO)'>0 S RAERR="Invalid patient identifier; no match in PATIENT (#2) file" Q
"RTN","RAHL23Q",130,0)
 S RADFN=$$FIND1^DIC(2,,"X",RAQWHO,"SSN")
"RTN","RAHL23Q",131,0)
 I RADFN'>0 S RAERR="Invalid patient SSN identifier; no match in PATIENT (#2) file"
"RTN","RAHL23Q",132,0)
 ;
"RTN","RAHL23Q",133,0)
 ;Note: if RAQUANT=1 then there will be not need to implement
"RTN","RAHL23Q",134,0)
 ;a continuation pointer.
"RTN","RAHL23Q",135,0)
 ;
"RTN","RAHL23Q",136,0)
 Q
"RTN","RAHL23Q",137,0)
 ;
"RTN","RAHL23Q",138,0)
QRF ;Analyze data from the QRF segment from Non-VistA System
"RTN","RAHL23Q",139,0)
 ;
"RTN","RAHL23Q",140,0)
 ; Local Variable & value                                  HL7 segment-field
"RTN","RAHL23Q",141,0)
 ;--------------------------------------------------------------------------
"RTN","RAHL23Q",142,0)
 ;RAQWHERE = Where Subject Filter (which department/system)      QRF-1
"RTN","RAHL23Q",143,0)
 ;RAQSTART = When Data Start Date/Time                           QRF-2
"RTN","RAHL23Q",144,0)
 ;  RAQEND = When Data End Date/Time                             QRF-3
"RTN","RAHL23Q",145,0)
 ;
"RTN","RAHL23Q",146,0)
 S RAQWHERE=$G(RASEG(1,1,1,1)),RAQSTART=$G(RASEG(2,1,1,1)),RAQEND=$G(RASEG(3,1,1,1))
"RTN","RAHL23Q",147,0)
 I RAQWHERE="" S RAERR="Missing Where(department/system) Subject Filter (QRF-1)" Q
"RTN","RAHL23Q",148,0)
 I RAQEND="" S RAERR="Missing When Data End Date/Time (QRF-3)" Q
"RTN","RAHL23Q",149,0)
 ;
"RTN","RAHL23Q",150,0)
 ;A patient based query requires 'When Data Start Date/Time' & 'When Data End Date/Time' data
"RTN","RAHL23Q",151,0)
 ;
"RTN","RAHL23Q",152,0)
 I $G(RADFN),(RAQSTART="") S RAERR="Missing When Data Start Date/Time (QRF-2)" Q
"RTN","RAHL23Q",153,0)
 ;check for valid HL7 date/time data
"RTN","RAHL23Q",154,0)
 ;set RAEDT=FileMan end date & RASDT=FileMan START date
"RTN","RAHL23Q",155,0)
 I $L(RAQSTART) D
"RTN","RAHL23Q",156,0)
 .S RASDT=$E($$HL7TFM^XLFDT(RAQSTART),1,12) ;to the minute...
"RTN","RAHL23Q",157,0)
 .S:RASDT=-1 RAERR="Invalid When Data Start Date/Time (QRF-2)"
"RTN","RAHL23Q",158,0)
 .Q
"RTN","RAHL23Q",159,0)
 S RAEDT=$E($$HL7TFM^XLFDT(RAQEND),1,12) ;to the minute...
"RTN","RAHL23Q",160,0)
 S:RAEDT=-1 RAERR="Invalid When Data End Date/Time (QRF-3)"
"RTN","RAHL23Q",161,0)
 Q
"RTN","RAHL23Q",162,0)
 ;
"RTN","RAHL23Q",163,0)
TASK ;look up the the results (verified) for a specific patient over a specific time frame
"RTN","RAHL23Q",164,0)
 ;this is a tasked process
"RTN","RAHL23Q",165,0)
 ;
"RTN","RAHL23Q",166,0)
 ;If RADEBUG is defined then DO NOT task off the HL7 message building process fall right
"RTN","RAHL23Q",167,0)
 ;through to the START subroutine.
"RTN","RAHL23Q",168,0)
 ;  
"RTN","RAHL23Q",169,0)
 I '($D(RADEBUG)#2) D  Q
"RTN","RAHL23Q",170,0)
 .S ZTRTN="START^RAHL23Q",ZTDESC="RA ORF/R04 - return observed radiology results to NTP"
"RTN","RAHL23Q",171,0)
 .S ZTSAVE("RA*")="",ZTIO="",ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,0,0,0,10)
"RTN","RAHL23Q",172,0)
 .D ^%ZTLOAD
"RTN","RAHL23Q",173,0)
 .Q
"RTN","RAHL23Q",174,0)
 ;
"RTN","RAHL23Q",175,0)
START ;begin the process of replying to the client side query QRY/R02
"RTN","RAHL23Q",176,0)
 ;
"RTN","RAHL23Q",177,0)
 ;Identify the type of the client side query
"RTN","RAHL23Q",178,0)
 ;------------------------------------------
"RTN","RAHL23Q",179,0)
 ; -I $D(RADFN) then the query is patient based (over time; the # results may be capped)
"RTN","RAHL23Q",180,0)
 ; -Else the query is accession based and one result is all that is asked for.
"RTN","RAHL23Q",181,0)
 ;
"RTN","RAHL23Q",182,0)
 ;if there is an error because of the query parameters passed from the
"RTN","RAHL23Q",183,0)
 ;client fire off the negative acknowledgement and exit this process.
"RTN","RAHL23Q",184,0)
 N RACNT S RACNT=0 I $D(RAERR)#2 D NAK,XIT Q
"RTN","RAHL23Q",185,0)
 ;attempt to build the query response. If there are no results to be passed
"RTN","RAHL23Q",186,0)
 ;(RACNT=0) fire off a negative acknowledgement
"RTN","RAHL23Q",187,0)
 I $D(RADFN)#2 D
"RTN","RAHL23Q",188,0)
 .N RACNI,RACONST,RADTE,RADTI,RAIEDT,RAISDT,RARPT,RAESTAT,RAY2,RAY3 S RACONST=9999999.9999
"RTN","RAHL23Q",189,0)
 .S RAZISDT=$$FMADD^XLFDT(RASDT,0,0,-1,0) ;subtract a minute from the start date
"RTN","RAHL23Q",190,0)
 .S RAZIEDT=(RAEDT\1)+.2359 ;the end date must go to the end of the day
"RTN","RAHL23Q",191,0)
 .S RAISDT=RACONST-RAZISDT,(RADTI,RAIEDT)=RACONST-RAZIEDT K RAZIEDT,RAZISDT
"RTN","RAHL23Q",192,0)
 .F  S RADTI=$O(^RADPT(RADFN,"DT",RADTI)) Q:RADTI'>0!(RADTI>RAISDT)  D  Q:RACNT>RAQUANT
"RTN","RAHL23Q",193,0)
 ..S RACNI=0,RADTE=RACONST-RADTI,RAY2=$G(^RADPT(RADFN,"DT",RADTI,0))
"RTN","RAHL23Q",194,0)
 ..F  S RACNI=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI)) Q:RACNI'>0  D  Q:RACNT>RAQUANT
"RTN","RAHL23Q",195,0)
 ...I ($D(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0))#2) S RAY3=^(0) D
"RTN","RAHL23Q",196,0)
 ....;what is the status of the exam? cancelled exams (RAESTAT=0) are ignored...
"RTN","RAHL23Q",197,0)
 ....S RAESTAT=$P($G(^RA(72,+$P(RAY3,U,3),0)),U,3) Q:RAESTAT=0
"RTN","RAHL23Q",198,0)
 ....S RARPT=+$P(RAY3,U,17) Q:'RARPT  S RARPT(0)=$G(^RARPT(RARPT,0))
"RTN","RAHL23Q",199,0)
 ....I $P(RARPT(0),U,5)="V" S RACNT=RACNT+1 Q:RACNT>RAQUANT  D
"RTN","RAHL23Q",200,0)
 .....D INIT^RAHL23QU,SENDMSG
"RTN","RAHL23Q",201,0)
 .....K RAI,RAY,RAZCPT,RAZDAYCS,RAZPIMG,RAZPRC
"RTN","RAHL23Q",202,0)
 .....Q
"RTN","RAHL23Q",203,0)
 ....Q
"RTN","RAHL23Q",204,0)
 ...Q
"RTN","RAHL23Q",205,0)
 ..Q
"RTN","RAHL23Q",206,0)
 .;I 'RACNT S RAERR="No results are available for this patient" D NAK
"RTN","RAHL23Q",207,0)
 .Q
"RTN","RAHL23Q",208,0)
 E  D  ;lookup by accession
"RTN","RAHL23Q",209,0)
 .N RACN,RACNI,RACONST,RADFN,RADTE,RAINDX,RARPT,RAX,RAY2,RAY3
"RTN","RAHL23Q",210,0)
 .;the accession number may be in two formats:
"RTN","RAHL23Q",211,0)
 .;station # prefix-mm/dd/yy-case # -OR- mm/dd/yy-case #
"RTN","RAHL23Q",212,0)
 .;the format identifies the cross-referece we need to look up on
"RTN","RAHL23Q",213,0)
 .S RAX=$L(RAQDEPT,"-"),RACONST=9999999.9999
"RTN","RAHL23Q",214,0)
 .;if RAX=2 the index is "ADC"; if RAX=3 the index is "ADC1"
"RTN","RAHL23Q",215,0)
 .;if RAX is any other value that set RAERR & QUIT
"RTN","RAHL23Q",216,0)
 .I RAX'=2,(RAX'=3) S RAERR="Invalid Accession Number format" Q
"RTN","RAHL23Q",217,0)
 .;
"RTN","RAHL23Q",218,0)
 .;define the core variables: RADFN, RADTI, & RACNI...
"RTN","RAHL23Q",219,0)
 .S RAINDX=$S(RAX=2:$NA(^RADPT("ADC")),1:$NA(^RADPT("ADC1")))
"RTN","RAHL23Q",220,0)
 .S RADFN=$O(@RAINDX@(RAQDEPT,0)),RADTI=$O(@RAINDX@(RAQDEPT,RADFN,0))
"RTN","RAHL23Q",221,0)
 .S RACNI=$O(@RAINDX@(RAQDEPT,RADFN,RADTI,0))
"RTN","RAHL23Q",222,0)
 .S:RADFN'>0 RAERR="Invalid Accession Number - RADFN" Q:$D(RAERR)#2
"RTN","RAHL23Q",223,0)
 .S:RADTI'>0 RAERR="Invalid Accession Number - RADTI" Q:$D(RAERR)#2
"RTN","RAHL23Q",224,0)
 .S:RACNI'>0 RAERR="Invalid Accession Number - RACNI" Q:$D(RAERR)#2
"RTN","RAHL23Q",225,0)
 .;
"RTN","RAHL23Q",226,0)
 .;build the zero nodes of 70.02 & 70.03
"RTN","RAHL23Q",227,0)
 .S RAY2=$G(^RADPT(RADFN,"DT",RADTI,0)),RAY3=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0))
"RTN","RAHL23Q",228,0)
 .;get the report pointer...
"RTN","RAHL23Q",229,0)
 .S RARPT=$P(RAY3,U,17)
"RTN","RAHL23Q",230,0)
 .I RARPT="" S RAERR="No report on file for this accession." Q
"RTN","RAHL23Q",231,0)
 .S RARPT(0)=$G(^RARPT(RARPT,0))
"RTN","RAHL23Q",232,0)
 .I RARPT(0)="" S RAERR="Corrupted record #: "_RARPT_" in RAD/NUC MED REPORTS file." Q
"RTN","RAHL23Q",233,0)
 .I $P(RARPT(0),U,5)'="V" S RAERR="Accession: "_RAQDEPT_" is linked to a non-verified report" Q
"RTN","RAHL23Q",234,0)
 .S RADTE=$P(RARPT(0),U,3),RACN=$P(RARPT(0),U,4)
"RTN","RAHL23Q",235,0)
 .I $P(RARPT(0),U,2)'=RADFN S RAERR="Patient DFN mismatch" Q
"RTN","RAHL23Q",236,0)
 .I (RACONST-RADTI)'=RADTE S RAERR="Exam Date/Time mismatch" Q
"RTN","RAHL23Q",237,0)
 .I $P(RAY3,U)'=RACN S RAERR="Case Number mismatch" Q
"RTN","RAHL23Q",238,0)
 .;
"RTN","RAHL23Q",239,0)
 .S RACNT=RACNT+1 ;will be a max of 1
"RTN","RAHL23Q",240,0)
 .D INIT^RAHL23QU D SENDMSG
"RTN","RAHL23Q",241,0)
 .K RAZCPT,RAZDAYCS,RAZPIMG,RAZPRC
"RTN","RAHL23Q",242,0)
 .Q
"RTN","RAHL23Q",243,0)
 D XIT
"RTN","RAHL23Q",244,0)
 Q
"RTN","RAHL23Q",245,0)
 ;
"RTN","RAHL23Q",246,0)
ERR(RATXT) ;inform the radiology users via an email message
"RTN","RAHL23Q",247,0)
 ;that the query was negatively acknowledged.
"RTN","RAHL23Q",248,0)
 ;Input: RATXT=error text as it is displayed to the user
"RTN","RAHL23Q",249,0)
 N XMDUN,XMDUZ,XMSUB,XMTEXT,XMY,XMZ
"RTN","RAHL23Q",250,0)
 S XMY(DUZ)="",XMY("G.RAD HL7 MESSAGES")="",XMDUZ=.5
"RTN","RAHL23Q",251,0)
 S XMSUB="VistA Radiology HL7 query alert error",XMTEXT="RATXT("
"RTN","RAHL23Q",252,0)
 S RATXT($O(RATXT($C(32)),-1)+1)="MESSAGE CONTROL ID: "_RACNTRL
"RTN","RAHL23Q",253,0)
 D ^XMD Q
"RTN","RAHL23Q",254,0)
 ;
"RTN","RAHL23Q",255,0)
XIT ;exit the process. Fire off a negative acknowledgement if necessary.
"RTN","RAHL23Q",256,0)
 S:$D(ZTQUEUED)#2 ZTREQ="@"
"RTN","RAHL23Q",257,0)
 Q
"RTN","RAHL23Q",258,0)
 ;
"RTN","RAHL23Q",259,0)
NAK ;negatively acknowledge the QRY/R02 client side query
"RTN","RAHL23Q",260,0)
 ;the query is NAK'ed if the variable RAERR is defined.
"RTN","RAHL23Q",261,0)
 ;
"RTN","RAHL23Q",262,0)
 ;first alert the radiology users that a messages was NAK'ed
"RTN","RAHL23Q",263,0)
 S RAERR(1)=RAERR D ERR(.RAERR) K RAERR(1)
"RTN","RAHL23Q",264,0)
 ;then continue on to build & broadcast the NAK'ed
"RTN","RAHL23Q",265,0)
 ;
"RTN","RAHL23Q",266,0)
SENDMSG ;broadcast the HL7 message. The message/event type is: ORF/R04
"RTN","RAHL23Q",267,0)
 ;Define the message parameters COUNTRY, FIELD SEPARATOR, & ENCODING CHARACTERS
"RTN","RAHL23Q",268,0)
 ;are set to their default values for self documentation.
"RTN","RAHL23Q",269,0)
 N HLECH,HLFS,HLQ,RAERROR,RAPARAM,RATXT,RAWHO,RAX
"RTN","RAHL23Q",270,0)
 S RAPARAM("COUNTRY")="USA",(HLFS,RAPARAM("FIELD SEPARATOR"))="|",HLQ=""
"RTN","RAHL23Q",271,0)
 S (HLECH,RAPARAM("ENCODING CHARACTERS"))="^~\&",RAPARAM("VERSION")=2.3
"RTN","RAHL23Q",272,0)
 S RAPARAM("MESSAGE TYPE")="ORF",RAPARAM("EVENT")="R04"
"RTN","RAHL23Q",273,0)
 ;
"RTN","RAHL23Q",274,0)
 ;Create the new message (builds the MSH segment)
"RTN","RAHL23Q",275,0)
 I '$$NEWMSG^HLOAPI(.RAPARAM,.HLMSTATE,.RAERROR) D  Q
"RTN","RAHL23Q",276,0)
 .S RATXT(1)="An error occurred in the process of building a "_$S($D(RAERR)#2:"negative",1:"positive")
"RTN","RAHL23Q",277,0)
 .S RATXT(2)="acknowledgment to NTP's query." D ERR(.RATXT)
"RTN","RAHL23Q",278,0)
 .Q
"RTN","RAHL23Q",279,0)
 ;if RAX=0 then the MSH segment building function failed.
"RTN","RAHL23Q",280,0)
 ;
"RTN","RAHL23Q",281,0)
 ;build the MSA segment
"RTN","RAHL23Q",282,0)
 S RAX=$$MSA^RAHL23Q1($G(RAERR))
"RTN","RAHL23Q",283,0)
 D:'RAX SEGERR("MSA")
"RTN","RAHL23Q",284,0)
 ;
"RTN","RAHL23Q",285,0)
 ;build the QRD segment
"RTN","RAHL23Q",286,0)
 S RAX=$$BLDQRD^RAHL23Q1() D:'RAX SEGERR("QRD") Q:'RAX
"RTN","RAHL23Q",287,0)
 ;
"RTN","RAHL23Q",288,0)
 ;build the QRF segment
"RTN","RAHL23Q",289,0)
 S RAX=$$BLDQRF^RAHL23Q1() D:'RAX SEGERR("QRF") Q:'RAX
"RTN","RAHL23Q",290,0)
 ;
"RTN","RAHL23Q",291,0)
 ;if the ORF/R04 message is a positive acknowledgement then build the
"RTN","RAHL23Q",292,0)
 ;PID, OBR, & multiple OBX segments. The DSC segment may be created
"RTN","RAHL23Q",293,0)
 ;iff RAQUANT>1
"RTN","RAHL23Q",294,0)
 I '($D(RAERR)#2) D  Q:'RAX
"RTN","RAHL23Q",295,0)
 .S RAX=$$PID^RAHL23Q1() D:'RAX SEGERR("PID") Q:'RAX
"RTN","RAHL23Q",296,0)
 .S RAX=$$OBR^RAHL23Q1() D:'RAX SEGERR("OBR") Q:'RAX
"RTN","RAHL23Q",297,0)
 .S RAX=$$OBXPRC^RAHL23Q1() D:'RAX SEGERR("OBX (Procedure)") Q:'RAX
"RTN","RAHL23Q",298,0)
 .S RAX=$$OBXIMP^RAHL23Q1() D:'RAX SEGERR("OBX (Impression Text)") Q:'RAX
"RTN","RAHL23Q",299,0)
 .S RAX=$$OBXDIA^RAHL23Q1() D:'RAX SEGERR("OBX (Primary Dx. Codes)") Q:'RAX
"RTN","RAHL23Q",300,0)
 .;
"RTN","RAHL23Q",301,0)
 .I $O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"DX",0)) D  Q:'RAX
"RTN","RAHL23Q",302,0)
 ..S RAX=$$OBXDIA2^RAHL23Q1() D:'RAX SEGERR("OBX (Secondary Dx. Codes)") Q
"RTN","RAHL23Q",303,0)
 .;
"RTN","RAHL23Q",304,0)
 .S RAX=$$OBXRPT^RAHL23Q1() D:'RAX SEGERR("OBX (Report Text)") Q:'RAX
"RTN","RAHL23Q",305,0)
 .S RAX=$$OBXPMOD^RAHL23Q1() D:'RAX SEGERR("OBX (Procedure Modifiers)") Q:'RAX
"RTN","RAHL23Q",306,0)
 .S RAX=$$OBXCMOD^RAHL23Q1() D:'RAX SEGERR("OBX (CPT Modifiers)") Q:'RAX
"RTN","RAHL23Q",307,0)
 .S RAX=$$OBXTCM^RAHL23Q1() D:'RAX SEGERR("OBX (Tech. Comments)") Q:'RAX
"RTN","RAHL23Q",308,0)
 .I RAQUANT>1 S RAX=$$DSC^RAHL23Q1() D:'RAX SEGERR("DSC")
"RTN","RAHL23Q",309,0)
 .Q
"RTN","RAHL23Q",310,0)
 ;Define sending and receiving application parameters
"RTN","RAHL23Q",311,0)
 S RAPARAM("SENDING APPLICATION")="RA-NTP-QUERY",RAPARAM("QUEUE")="RA-NTP-ORF_R04"
"RTN","RAHL23Q",312,0)
 S RAPARAM("ACCEPT ACK TYPE")="AL",RAPARAM("APP ACK TYPE")="NE"
"RTN","RAHL23Q",313,0)
 S RAPARAM("ACCEPT ACK RESPONSE")="ACCEPT^RAHL23QU"
"RTN","RAHL23Q",314,0)
 ;
"RTN","RAHL23Q",315,0)
 ;name the outbound queue that is responsible for our query replies
"RTN","RAHL23Q",316,0)
 S RAWHO("RECEIVING APPLICATION")="RA-NTP-RSP",RAWHO("FACILITY LINK NAME")="RA-SCIMAGE"
"RTN","RAHL23Q",317,0)
 ;Send the message
"RTN","RAHL23Q",318,0)
 S RAX=$$SENDONE^HLOAPI1(.HLMSTATE,.RAPARAM,.RAWHO,.RAERROR)
"RTN","RAHL23Q",319,0)
 I $D(RAERROR)#2 D
"RTN","RAHL23Q",320,0)
 .S RATXT(1)="An error was encountered when broadcasting/sending the ORF/R04"
"RTN","RAHL23Q",321,0)
 .S RATXT(2)="HL7 message." D ERR(.RATXT)
"RTN","RAHL23Q",322,0)
 .Q
"RTN","RAHL23Q",323,0)
 Q
"RTN","RAHL23Q",324,0)
 ;
"RTN","RAHL23Q",325,0)
SEGERR(X) ; build the error dialog used whenever the building of a HL7
"RTN","RAHL23Q",326,0)
 ;segment fails.
"RTN","RAHL23Q",327,0)
 ;Input: X=the specific segment that failed: MSA, QRD, QRF, PID, OBR,
"RTN","RAHL23Q",328,0)
 ;OBX, or DSC. 
"RTN","RAHL23Q",329,0)
 N RATXT S RATXT(1)="An error was encountered when building the ORF/R04 HL7 message."
"RTN","RAHL23Q",330,0)
 S RATXT(2)="HL7 segment: "_X D ERR(.RATXT)
"RTN","RAHL23Q",331,0)
 Q
"RTN","RAHL23Q",332,0)
 ;
"RTN","RAHL23Q1")
0^2^B125594612^n/a
"RTN","RAHL23Q1",1,0)
RAHL23Q1 ;HINES OIFO/GJC process query message/event type (QRY/R02)
"RTN","RAHL23Q1",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**78**;Mar 16, 1998;Build 5
"RTN","RAHL23Q1",3,0)
 ;
"RTN","RAHL23Q1",4,0)
 ;Integration Agreements
"RTN","RAHL23Q1",5,0)
 ;----------------------
"RTN","RAHL23Q1",6,0)
 ;$$GET1^DIQ(), $$HLDATE^HLFNC(10106), $$ADDSEG^HLOAPI(4716), SET^HLOAPI(4716)
"RTN","RAHL23Q1",7,0)
 ;$$EN^VAFHLPID(263), $$FMTHL7^XLFDT(10103), STDNAME^XLFNAME(3065)
"RTN","RAHL23Q1",8,0)
 ;WARD LOCATION file (10039), HOSPITAL LOCATION file (10040), INSTITUTION FILE (10090)
"RTN","RAHL23Q1",9,0)
 ;
"RTN","RAHL23Q1",10,0)
 ;Routine: SET^HLOAPI(SEG,VALUE,FIELD,COMP,SUBCOMP,REP)
"RTN","RAHL23Q1",11,0)
 ;Description: This API is used to set a value into a segment that is in the
"RTN","RAHL23Q1",12,0)
 ;process of being built.
"RTN","RAHL23Q1",13,0)
 ;Input Definition
"RTN","RAHL23Q1",14,0)
 ;-------------------------------------------------------------------------------------
"RTN","RAHL23Q1",15,0)
 ;SEG (Required) The array where the segment is being built
"RTN","RAHL23Q1",16,0)
 ;VALUE (Required) The individual value to be set into the segment
"RTN","RAHL23Q1",17,0)
 ;FIELD (Optional) The field number (defaults to 0)
"RTN","RAHL23Q1",18,0)
 ;COMP (Optional) The component number(defaults to 1)
"RTN","RAHL23Q1",19,0)
 ;SUBCOMP (Optional) The subcomponent number that (defaults to 1)
"RTN","RAHL23Q1",20,0)
 ;REP (Optional) The occurrence number (defaults to 1)
"RTN","RAHL23Q1",21,0)
 ;
"RTN","RAHL23Q1",22,0)
 ;Note: FIELD=0 is used to denote the segment type.
"RTN","RAHL23Q1",23,0)
 ;      $$ADDSEG^HLOAPI(.HLMSTATE,.RASEG) return 1 if successful, 0 on an error.
"RTN","RAHL23Q1",24,0)
 ;
"RTN","RAHL23Q1",25,0)
PID() ;build a HL7 specific PID segment
"RTN","RAHL23Q1",26,0)
 N C,DFN,RAB,RAC,RAFLDATA,RAFLDS,RALRAX,RASEG,RAX
"RTN","RAHL23Q1",27,0)
 D SET^HLOAPI(.RASEG,"PID",0) S DFN=RADFN,RAFLDS="2,3,5,7,8,19"
"RTN","RAHL23Q1",28,0)
 ;RAX is the HL7 segment; RAFLDS defines which fields of that segment are requested
"RTN","RAHL23Q1",29,0)
 S RAX=$$EN^VAFHLPID(DFN,RAFLDS)
"RTN","RAHL23Q1",30,0)
 ;RACS, RAFS, RASCS, & RARS are all defined ahead of time...
"RTN","RAHL23Q1",31,0)
 ;strip off the "PID|" (first four characters)
"RTN","RAHL23Q1",32,0)
 S RAX=$E(RAX,5,$L(RAX)),RALRAX=$L(RAX,RAFS)
"RTN","RAHL23Q1",33,0)
 ;RALRAX = # of fields of the parent HL7 segment
"RTN","RAHL23Q1",34,0)
 ;RAB = the specific instance of a field: first, second, third, etc...
"RTN","RAHL23Q1",35,0)
 F RAB=1:1:RALRAX S RAFLDATA=$P(RAX,RAFS,RAB) D:RAFLDATA'=""
"RTN","RAHL23Q1",36,0)
 .;RAC = the specific instance of a repeat: first, second, third, etc... (usually one)
"RTN","RAHL23Q1",37,0)
 .F RAC=1:1:$L(RAFLDATA,RARS) D PARSE($P(RAFLDATA,RARS,RAC))
"RTN","RAHL23Q1",38,0)
 .Q
"RTN","RAHL23Q1",39,0)
 Q $$ADDSEG^HLOAPI(.HLMSTATE,.RASEG)
"RTN","RAHL23Q1",40,0)
 ;
"RTN","RAHL23Q1",41,0)
OBR() ;build a HL7 V2.3 OBR segment
"RTN","RAHL23Q1",42,0)
 N RASEG,RAX,RAX1,RAX2 D SET^HLOAPI(.RASEG,"OBR",0)
"RTN","RAHL23Q1",43,0)
 ;OBR-2 = inv. date/time exam-internal exam record #
"RTN","RAHL23Q1",44,0)
 ;OBR-3 (accession) = mm/dd/yy-case #
"RTN","RAHL23Q1",45,0)
 S RAX=RADTI_"-"_RACNI
"RTN","RAHL23Q1",46,0)
 D SET^HLOAPI(.RASEG,RAX,2),SET^HLOAPI(.RASEG,RAZDAYCS,3)
"RTN","RAHL23Q1",47,0)
 ;OBR-4 Universal Service ID (six components)
"RTN","RAHL23Q1",48,0)
 D SET^HLOAPI(.RASEG,$$ESCAPE^RAHLRU($P(RAZCPT(0),U)),4,1)
"RTN","RAHL23Q1",49,0)
 D SET^HLOAPI(.RASEG,$$ESCAPE^RAHLRU($P(RAZCPT(0),U,2)),4,2)
"RTN","RAHL23Q1",50,0)
 D SET^HLOAPI(.RASEG,"C4",4,3),SET^HLOAPI(.RASEG,RAZPRC,4,4)
"RTN","RAHL23Q1",51,0)
 D SET^HLOAPI(.RASEG,$$ESCAPE^RAHLRU($P(RAZPRC(0),U)),4,5),SET^HLOAPI(.RASEG,"99RAP",4,6)
"RTN","RAHL23Q1",52,0)
 ;
"RTN","RAHL23Q1",53,0)
 ;OBR-7 Observ. Date/Time
"RTN","RAHL23Q1",54,0)
 D SET^HLOAPI(.RASEG,$$HLDATE^HLFNC(RADTE),7)
"RTN","RAHL23Q1",55,0)
 ;
"RTN","RAHL23Q1",56,0)
 ;OBR-16 ordering provider (components one & two) from Req. Physician (70.03;14)
"RTN","RAHL23Q1",57,0)
 K RAX S RAX=$$GET1^DIQ(200,+$P(RAY3,"^",14),.01)
"RTN","RAHL23Q1",58,0)
 D:$L(RAX) STDNAME^XLFNAME(.RAX,"C")
"RTN","RAHL23Q1",59,0)
 D SET^HLOAPI(.RASEG,+$P(RAY3,U,14),16,1)
"RTN","RAHL23Q1",60,0)
 D SET^HLOAPI(.RASEG,$G(RAX("FAMILY")),16,2)
"RTN","RAHL23Q1",61,0)
 D SET^HLOAPI(.RASEG,$G(RAX("GIVEN")),16,3)
"RTN","RAHL23Q1",62,0)
 D SET^HLOAPI(.RASEG,$G(RAX("MIDDLE")),16,4)
"RTN","RAHL23Q1",63,0)
 ;
"RTN","RAHL23Q1",64,0)
 ;OBR-18 Placer field 1 - ward(70.03;6)/hospital location(70.03;8)
"RTN","RAHL23Q1",65,0)
 K RAX S RAX=$$ESCAPE^RAHLRU($S($D(^DIC(42,+$P(RAY3,U,6),0)):$P(^(0),U),$D(^SC(+$P(RAY3,U,8),0)):$P(^(0),U),1:"Unknown"))
"RTN","RAHL23Q1",66,0)
 D SET^HLOAPI(.RASEG,RAX,18)
"RTN","RAHL23Q1",67,0)
 ;
"RTN","RAHL23Q1",68,0)
 ;OBR-20 (components 1-4) formated as follows:
"RTN","RAHL23Q1",69,0)
 ;Comp 1: ptr to file 79.1, Comp 2: HOSPITAL LOCATION NAME (#44; .01), Comp 3: ptr to file 79
"RTN","RAHL23Q1",70,0)
 ;Comp 4: INSTITUTION NAME (#4; .01)
"RTN","RAHL23Q1",71,0)
 K RAX S RAX=+$G(^RA(79.1,+$P(RAY2,U,4),0)) ;attribute is a pointer to the HOSPITAL LOCATION file
"RTN","RAHL23Q1",72,0)
 D SET^HLOAPI(.RASEG,$P(RAY2,U,4),20,1)
"RTN","RAHL23Q1",73,0)
 D SET^HLOAPI(.RASEG,$$ESCAPE^RAHLRU($P($G(^SC(RAX,0)),U)),20,2,2)
"RTN","RAHL23Q1",74,0)
 D SET^HLOAPI(.RASEG,$P(RAY2,U,3),20,3)
"RTN","RAHL23Q1",75,0)
 D SET^HLOAPI(.RASEG,$$ESCAPE^RAHLRU($$GET1^DIQ(4,+$P(RAY2,U,3),.01)),20,4)
"RTN","RAHL23Q1",76,0)
 ;
"RTN","RAHL23Q1",77,0)
 ;OBR-22 Results Rpt/Status Chng - Verified Date (74;7)
"RTN","RAHL23Q1",78,0)
 D SET^HLOAPI(.RASEG,$$HLDATE^HLFNC($P(RARPT(0),U,7)),22)
"RTN","RAHL23Q1",79,0)
 ;
"RTN","RAHL23Q1",80,0)
 ;OBR-25 Report Status - Report Status (74;5)
"RTN","RAHL23Q1",81,0)
 K RAX S RAX=$S($P(RARPT(0),U,5)="V":"F",1:"R")
"RTN","RAHL23Q1",82,0)
 D SET^HLOAPI(.RASEG,RAX,25)
"RTN","RAHL23Q1",83,0)
 ;
"RTN","RAHL23Q1",84,0)
 ;OBR-32 Principal Result Interpreter components one & two
"RTN","RAHL23Q1",85,0)
 ;Verifying Physician (74;9)
"RTN","RAHL23Q1",86,0)
 I $P(RARPT(0),U,9) D
"RTN","RAHL23Q1",87,0)
 .K RAX S RAX=$$GET1^DIQ(200,$P(RARPT(0),U,9),.01) Q:RAX=""
"RTN","RAHL23Q1",88,0)
 .D STDNAME^XLFNAME(.RAX,"C")
"RTN","RAHL23Q1",89,0)
 .D SET^HLOAPI(.RASEG,$P(RARPT(0),U,9),32,1)
"RTN","RAHL23Q1",90,0)
 .D SET^HLOAPI(.RASEG,$G(RAX("FAMILY")),32,2)
"RTN","RAHL23Q1",91,0)
 .D SET^HLOAPI(.RASEG,$G(RAX("GIVEN")),32,3)
"RTN","RAHL23Q1",92,0)
 .D SET^HLOAPI(.RASEG,$G(RAX("MIDDLE")),32,4)
"RTN","RAHL23Q1",93,0)
 .Q
"RTN","RAHL23Q1",94,0)
 ;
"RTN","RAHL23Q1",95,0)
 ;OBR-33 Assistant Result Interpreter either Staff (70.03;15) or Resident (70.03;12)
"RTN","RAHL23Q1",96,0)
 I $P(RAY3,"^",15) D
"RTN","RAHL23Q1",97,0)
 .K RAX S RAX=$$GET1^DIQ(200,$P(RAY3,"^",15),.01) Q:RAX=""
"RTN","RAHL23Q1",98,0)
 .D STDNAME^XLFNAME(.RAX,"C")
"RTN","RAHL23Q1",99,0)
 .D SET^HLOAPI(.RASEG,$P(RAY3,"^",15),33,1)
"RTN","RAHL23Q1",100,0)
 .D SET^HLOAPI(.RASEG,$G(RAX("FAMILY")),33,2)
"RTN","RAHL23Q1",101,0)
 .D SET^HLOAPI(.RASEG,$G(RAX("GIVEN")),33,3)
"RTN","RAHL23Q1",102,0)
 .D SET^HLOAPI(.RASEG,$G(RAX("MIDDLE")),33,4)
"RTN","RAHL23Q1",103,0)
 .Q
"RTN","RAHL23Q1",104,0)
 E  I $P(RAY3,"^",12) D
"RTN","RAHL23Q1",105,0)
 .K RAX S RAX=$$GET1^DIQ(200,$P(RAY3,"^",12),.01) Q:RAX=""
"RTN","RAHL23Q1",106,0)
 .D STDNAME^XLFNAME(.RAX,"C")
"RTN","RAHL23Q1",107,0)
 .D SET^HLOAPI(.RASEG,$P(RAY3,"^",12),33,1)
"RTN","RAHL23Q1",108,0)
 .D SET^HLOAPI(.RASEG,$G(RAX("FAMILY")),33,2)
"RTN","RAHL23Q1",109,0)
 .D SET^HLOAPI(.RASEG,$G(RAX("GIVEN")),33,3)
"RTN","RAHL23Q1",110,0)
 .D SET^HLOAPI(.RASEG,$G(RAX("MIDDLE")),33,4)
"RTN","RAHL23Q1",111,0)
 .Q
"RTN","RAHL23Q1",112,0)
 ;
"RTN","RAHL23Q1",113,0)
 ;OBR-34 Technician (Technologist - (70.03;175) multiple (get first record only)
"RTN","RAHL23Q1",114,0)
 I $O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"TC",0)) D
"RTN","RAHL23Q1",115,0)
 .N RAX1,RAX2 S RAX1=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"TC",0)) Q:'RAX1
"RTN","RAHL23Q1",116,0)
 .S RAX2=$P($G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"TC",RAX1,0)),U) Q:'RAX2
"RTN","RAHL23Q1",117,0)
 .K RAX S RAX=$$GET1^DIQ(200,RAX2,.01) Q:RAX=""
"RTN","RAHL23Q1",118,0)
 .D STDNAME^XLFNAME(.RAX,"C")
"RTN","RAHL23Q1",119,0)
 .D SET^HLOAPI(.RASEG,RAX2,34,1)
"RTN","RAHL23Q1",120,0)
 .D SET^HLOAPI(.RASEG,$G(RAX("FAMILY")),34,2)
"RTN","RAHL23Q1",121,0)
 .D SET^HLOAPI(.RASEG,$G(RAX("GIVEN")),34,3)
"RTN","RAHL23Q1",122,0)
 .D SET^HLOAPI(.RASEG,$G(RAX("MIDDLE")),34,4)
"RTN","RAHL23Q1",123,0)
 .Q
"RTN","RAHL23Q1",124,0)
 ;
"RTN","RAHL23Q1",125,0)
 ;OBR-35 Transcriptionist - Transcriptionist (74;11) 
"RTN","RAHL23Q1",126,0)
 S RAX1=$G(^RARPT(RARPT,"T")) D:$P(RAX1,U)
"RTN","RAHL23Q1",127,0)
 .K RAX S RAX=$$GET1^DIQ(200,$P(RAX1,U),.01) Q:RAX=""
"RTN","RAHL23Q1",128,0)
 .D SET^HLOAPI(.RASEG,$P(RAX1,U),35,1)
"RTN","RAHL23Q1",129,0)
 .D SET^HLOAPI(.RASEG,$G(RAX("FAMILY")),35,2)
"RTN","RAHL23Q1",130,0)
 .D SET^HLOAPI(.RASEG,$G(RAX("GIVEN")),35,3)
"RTN","RAHL23Q1",131,0)
 .D SET^HLOAPI(.RASEG,$G(RAX("MIDDLE")),35,4)
"RTN","RAHL23Q1",132,0)
 .Q
"RTN","RAHL23Q1",133,0)
 ;
"RTN","RAHL23Q1",134,0)
 ;OBR-36 Scheduled Date/Time RAZDTE=(9999999.9999-RADTI) Exam Date (70.02;.01 DINUM'ed)
"RTN","RAHL23Q1",135,0)
 ;HL7 TS datatype w/offset Ex: 200807101437-0500
"RTN","RAHL23Q1",136,0)
 D SET^HLOAPI(.RASEG,$$FMTHL7^XLFDT(RADTE),36)
"RTN","RAHL23Q1",137,0)
 ;
"RTN","RAHL23Q1",138,0)
 ;add the OBR segment to our HL7 message
"RTN","RAHL23Q1",139,0)
 Q $$ADDSEG^HLOAPI(.HLMSTATE,.RASEG)
"RTN","RAHL23Q1",140,0)
 ;
"RTN","RAHL23Q1",141,0)
OBXDIA() ;Compile 'OBX' Segment for Diagnostic Code
"RTN","RAHL23Q1",142,0)
 N RAX S RAX=$P($G(^RA(78.3,+$P(RAY3,U,13),0)),U) Q:RAX="" 1
"RTN","RAHL23Q1",143,0)
 D SET^HLOAPI(.RASEG,"OBX",0),SET^HLOAPI(.RASEG,1,1) ;set id
"RTN","RAHL23Q1",144,0)
 D SET^HLOAPI(.RASEG,"CE",2,1),SET^HLOAPI(.RASEG,"D",3,1)
"RTN","RAHL23Q1",145,0)
 D SET^HLOAPI(.RASEG,"DIAGNOSTIC CODE",3,2),SET^HLOAPI(.RASEG,"L",3,3)
"RTN","RAHL23Q1",146,0)
 D SET^HLOAPI(.RASEG,$$ESCAPE^RAHLRU(RAX),5,1)
"RTN","RAHL23Q1",147,0)
 D SET^HLOAPI(.RASEG,"F",11,1)
"RTN","RAHL23Q1",148,0)
 Q $$ADDSEG^HLOAPI(.HLMSTATE,.RASEG)
"RTN","RAHL23Q1",149,0)
 ;
"RTN","RAHL23Q1",150,0)
OBXDIA2() ;Compile 'OBX' segment for secondary Diagnostic Code
"RTN","RAHL23Q1",151,0)
 Q:'$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"DX",0)) 1
"RTN","RAHL23Q1",152,0)
 N RAERROR,RACNT,RAX,RAY S (RACNT,RAY)=0
"RTN","RAHL23Q1",153,0)
 F  S RAY=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"DX",RAY)) Q:'RAY  D  Q:'RAERROR
"RTN","RAHL23Q1",154,0)
 .S RAY(0)=+$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"DX",RAY,0))
"RTN","RAHL23Q1",155,0)
 .S RAX=$P($G(^RA(78.3,+RAY(0),0)),U) Q:RAX=""
"RTN","RAHL23Q1",156,0)
 .D SET^HLOAPI(.RASEG,"OBX",0) S RACNT=RACNT+1 D SET^HLOAPI(.RASEG,RACNT,1)
"RTN","RAHL23Q1",157,0)
 .D SET^HLOAPI(.RASEG,"CE",2,1),SET^HLOAPI(.RASEG,"D",3,1)
"RTN","RAHL23Q1",158,0)
 .D SET^HLOAPI(.RASEG,"DIAGNOSTIC CODE",3,2),SET^HLOAPI(.RASEG,"L",3,3)
"RTN","RAHL23Q1",159,0)
 .D SET^HLOAPI(.RASEG,$$ESCAPE^RAHLRU(RAX),5,1)
"RTN","RAHL23Q1",160,0)
 .D SET^HLOAPI(.RASEG,"F",11,1)
"RTN","RAHL23Q1",161,0)
 .S RAERROR=$$ADDSEG^HLOAPI(.HLMSTATE,.RASEG)
"RTN","RAHL23Q1",162,0)
 .Q
"RTN","RAHL23Q1",163,0)
 Q RAERROR
"RTN","RAHL23Q1",164,0)
 ;
"RTN","RAHL23Q1",165,0)
OBXIMP() ;Compile 'OBX' segment for Impression
"RTN","RAHL23Q1",166,0)
 N RAERROR D SET^HLOAPI(.RASEG,"OBX",0)
"RTN","RAHL23Q1",167,0)
 I '$O(^RARPT(RARPT,"I",0)) D  ;no impression text
"RTN","RAHL23Q1",168,0)
 .D SET^HLOAPI(.RASEG,1,1) ;set id
"RTN","RAHL23Q1",169,0)
 .D SET^HLOAPI(.RASEG,"TX",2,1),SET^HLOAPI(.RASEG,"I",3,1)
"RTN","RAHL23Q1",170,0)
 .D SET^HLOAPI(.RASEG,"IMPRESSION",3,2),SET^HLOAPI(.RASEG,"L",3,3)
"RTN","RAHL23Q1",171,0)
 .D SET^HLOAPI(.RASEG,"None Entered",5,1)
"RTN","RAHL23Q1",172,0)
 .D SET^HLOAPI(.RASEG,"F",11,1)
"RTN","RAHL23Q1",173,0)
 .S RAERROR=$$ADDSEG^HLOAPI(.HLMSTATE,.RASEG)
"RTN","RAHL23Q1",174,0)
 .Q
"RTN","RAHL23Q1",175,0)
 E  D
"RTN","RAHL23Q1",176,0)
 .N RACNT,RAI,RAX S (RACNT,RAI)=0
"RTN","RAHL23Q1",177,0)
 .F  S RAI=$O(^RARPT(RARPT,"I",RAI)) Q:'RAI  D  Q:'RAERROR
"RTN","RAHL23Q1",178,0)
 ..S RAX=$G(^RARPT(RARPT,"I",RAI,0)) D SET^HLOAPI(.RASEG,"OBX",0)
"RTN","RAHL23Q1",179,0)
 ..S RACNT=RACNT+1 D SET^HLOAPI(.RASEG,RACNT,1)
"RTN","RAHL23Q1",180,0)
 ..D SET^HLOAPI(.RASEG,"TX",2,1),SET^HLOAPI(.RASEG,"I",3,1)
"RTN","RAHL23Q1",181,0)
 ..D SET^HLOAPI(.RASEG,"IMPRESSION",3,2),SET^HLOAPI(.RASEG,"L",3,3)
"RTN","RAHL23Q1",182,0)
 ..D SET^HLOAPI(.RASEG,$$ESCAPE^RAHLRU(RAX),5,1)
"RTN","RAHL23Q1",183,0)
 ..D SET^HLOAPI(.RASEG,"F",11,1)
"RTN","RAHL23Q1",184,0)
 ..S RAERROR=$$ADDSEG^HLOAPI(.HLMSTATE,.RASEG)
"RTN","RAHL23Q1",185,0)
 ..Q
"RTN","RAHL23Q1",186,0)
 .Q
"RTN","RAHL23Q1",187,0)
 Q RAERROR
"RTN","RAHL23Q1",188,0)
 ;
"RTN","RAHL23Q1",189,0)
OBXPMOD() ;Compile 'OBX' segment for procedure modifiers
"RTN","RAHL23Q1",190,0)
 Q:'$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"M",0)) 1
"RTN","RAHL23Q1",191,0)
 N RAERROR,RACNT,RAI,RAX,RAY
"RTN","RAHL23Q1",192,0)
 D SET^HLOAPI(.RASEG,"OBX",0) S (RACNT,RAI)=0
"RTN","RAHL23Q1",193,0)
 F  S RAI=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"M",RAI)) Q:'RAI  D  Q:'RAERROR
"RTN","RAHL23Q1",194,0)
 .S RAY=$P($G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"M",RAI,0)),U)
"RTN","RAHL23Q1",195,0)
 .S RAX=$P($G(^RAMIS(71.2,RAY,0)),U) Q:RAX=""  D SET^HLOAPI(.RASEG,"OBX",0)
"RTN","RAHL23Q1",196,0)
 .S RACNT=RACNT+1 D SET^HLOAPI(.RASEG,RACNT,1)
"RTN","RAHL23Q1",197,0)
 .D SET^HLOAPI(.RASEG,"TX",2,1),SET^HLOAPI(.RASEG,"M",3,1)
"RTN","RAHL23Q1",198,0)
 .D SET^HLOAPI(.RASEG,"MODIFIERS",3,2),SET^HLOAPI(.RASEG,"L",3,3)
"RTN","RAHL23Q1",199,0)
 .D SET^HLOAPI(.RASEG,$$ESCAPE^RAHLRU(RAX),5,1)
"RTN","RAHL23Q1",200,0)
 .D SET^HLOAPI(.RASEG,"F",11,1)
"RTN","RAHL23Q1",201,0)
 .S RAERROR=$$ADDSEG^HLOAPI(.HLMSTATE,.RASEG)
"RTN","RAHL23Q1",202,0)
 .Q
"RTN","RAHL23Q1",203,0)
 Q RAERROR
"RTN","RAHL23Q1",204,0)
 ;
"RTN","RAHL23Q1",205,0)
OBXCMOD() ;Compile 'OBX' segment for CPT Modifiers
"RTN","RAHL23Q1",206,0)
 Q:'$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"CMOD",0)) 1
"RTN","RAHL23Q1",207,0)
 N RAERROR,RACNT,RAI,RAX,RAY D SET^HLOAPI(.RASEG,"OBX",0) S (RACNT,RAI)=0
"RTN","RAHL23Q1",208,0)
 F  S RAI=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"CMOD",RAI)) Q:'RAI  D  Q:'RAERROR
"RTN","RAHL23Q1",209,0)
 .S RAY=$P($G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"CMOD",RAI,0)),U)
"RTN","RAHL23Q1",210,0)
 .S RAX=$$BASICMOD^RACPTMSC(RAY,DT) Q:RAX=""  D SET^HLOAPI(.RASEG,"OBX",0)
"RTN","RAHL23Q1",211,0)
 .S RACNT=RACNT+1 D SET^HLOAPI(.RASEG,RACNT,1)
"RTN","RAHL23Q1",212,0)
 .D SET^HLOAPI(.RASEG,"CE",2,1),SET^HLOAPI(.RASEG,"C4",3,1)
"RTN","RAHL23Q1",213,0)
 .D SET^HLOAPI(.RASEG,"CPT MODIFIERS",3,2),SET^HLOAPI(.RASEG,"C4",3,3)
"RTN","RAHL23Q1",214,0)
 .D SET^HLOAPI(.RASEG,$$ESCAPE^RAHLRU($P(RAX,U,2)),5,1)
"RTN","RAHL23Q1",215,0)
 .D SET^HLOAPI(.RASEG,$$ESCAPE^RAHLRU($P(RAX,U,3)),5,2)
"RTN","RAHL23Q1",216,0)
 .D SET^HLOAPI(.RASEG,"C4",5,3)
"RTN","RAHL23Q1",217,0)
 .D SET^HLOAPI(.RASEG,"F",11,1)
"RTN","RAHL23Q1",218,0)
 .S RAERROR=$$ADDSEG^HLOAPI(.HLMSTATE,.RASEG)
"RTN","RAHL23Q1",219,0)
 .Q
"RTN","RAHL23Q1",220,0)
 Q RAERROR
"RTN","RAHL23Q1",221,0)
 ;
"RTN","RAHL23Q1",222,0)
OBXPRC() ;Compile 'OBX' segment for procedure
"RTN","RAHL23Q1",223,0)
 D SET^HLOAPI(.RASEG,"OBX",0),SET^HLOAPI(.RASEG,1,1) ;set id
"RTN","RAHL23Q1",224,0)
 D SET^HLOAPI(.RASEG,"CE",2,1),SET^HLOAPI(.RASEG,"P",3,1)
"RTN","RAHL23Q1",225,0)
 D SET^HLOAPI(.RASEG,"PROCEDURE",3,2),SET^HLOAPI(.RASEG,"L",3,3)
"RTN","RAHL23Q1",226,0)
 D SET^HLOAPI(.RASEG,$P(RAY3,U,2),5,1)
"RTN","RAHL23Q1",227,0)
 D SET^HLOAPI(.RASEG,$$ESCAPE^RAHLRU($P(RAZPRC(0),U)),5,2)
"RTN","RAHL23Q1",228,0)
 D SET^HLOAPI(.RASEG,"L",5,3)
"RTN","RAHL23Q1",229,0)
 D SET^HLOAPI(.RASEG,"F",11,1)
"RTN","RAHL23Q1",230,0)
 Q $$ADDSEG^HLOAPI(.HLMSTATE,.RASEG)
"RTN","RAHL23Q1",231,0)
 ;
"RTN","RAHL23Q1",232,0)
OBXTCM() ;Compile 'OBX' segment for tech comments
"RTN","RAHL23Q1",233,0)
 ;$$GETTCOM^RAUTL11 returns the last TECH COMMENT associated with the exam
"RTN","RAHL23Q1",234,0)
 N RAX S RAX=$$GETTCOM^RAUTL11(RADFN,RADTI,RACNI) Q:RAX="" 1
"RTN","RAHL23Q1",235,0)
 D SET^HLOAPI(.RASEG,"OBX",0),SET^HLOAPI(.RASEG,1,1) ;set id
"RTN","RAHL23Q1",236,0)
 D SET^HLOAPI(.RASEG,"TX",2,1),SET^HLOAPI(.RASEG,"TCM",3,1)
"RTN","RAHL23Q1",237,0)
 D SET^HLOAPI(.RASEG,"TECH COMMENT",3,2),SET^HLOAPI(.RASEG,"L",3,3)
"RTN","RAHL23Q1",238,0)
 D SET^HLOAPI(.RASEG,$$ESCAPE^RAHLRU(RAX),5,1)
"RTN","RAHL23Q1",239,0)
 D SET^HLOAPI(.RASEG,"F",11,1)
"RTN","RAHL23Q1",240,0)
 Q $$ADDSEG^HLOAPI(.HLMSTATE,.RASEG)
"RTN","RAHL23Q1",241,0)
 ;
"RTN","RAHL23Q1",242,0)
OBXRPT() ;Compile 'OBX' Segment for Radiology Report Text
"RTN","RAHL23Q1",243,0)
 ;If there is no REPORT TEXT do... 
"RTN","RAHL23Q1",244,0)
 N RAERROR D SET^HLOAPI(.RASEG,"OBX",0)
"RTN","RAHL23Q1",245,0)
 I '$O(^RARPT(RARPT,"R",0)) D
"RTN","RAHL23Q1",246,0)
 .D SET^HLOAPI(.RASEG,1,1) ;set id
"RTN","RAHL23Q1",247,0)
 .D SET^HLOAPI(.RASEG,"TX",2,1),SET^HLOAPI(.RASEG,"R",3,1)
"RTN","RAHL23Q1",248,0)
 .D SET^HLOAPI(.RASEG,"REPORT",3,2),SET^HLOAPI(.RASEG,"L",3,3)
"RTN","RAHL23Q1",249,0)
 .D SET^HLOAPI(.RASEG,"None Entered",5,1)
"RTN","RAHL23Q1",250,0)
 .D SET^HLOAPI(.RASEG,"F",11,1)
"RTN","RAHL23Q1",251,0)
 .S RAERROR=$$ADDSEG^HLOAPI(.HLMSTATE,.RASEG)
"RTN","RAHL23Q1",252,0)
 .Q
"RTN","RAHL23Q1",253,0)
 ;and if there is REPORT TEXT do...
"RTN","RAHL23Q1",254,0)
 E  D
"RTN","RAHL23Q1",255,0)
 .N RACNT,RAI,RAX S (RACNT,RAI)=0
"RTN","RAHL23Q1",256,0)
 .F  S RAI=$O(^RARPT(RARPT,"R",RAI)) Q:'RAI  D  Q:'RAERROR
"RTN","RAHL23Q1",257,0)
 ..S RAX=$G(^RARPT(RARPT,"R",RAI,0)) D SET^HLOAPI(.RASEG,"OBX",0)
"RTN","RAHL23Q1",258,0)
 ..S RACNT=RACNT+1 D SET^HLOAPI(.RASEG,RACNT,1)
"RTN","RAHL23Q1",259,0)
 ..D SET^HLOAPI(.RASEG,"TX",2,1),SET^HLOAPI(.RASEG,"R",3,1)
"RTN","RAHL23Q1",260,0)
 ..D SET^HLOAPI(.RASEG,"REPORT",3,2),SET^HLOAPI(.RASEG,"L",3,3)
"RTN","RAHL23Q1",261,0)
 ..D SET^HLOAPI(.RASEG,$$ESCAPE^RAHLRU(RAX),5,1)
"RTN","RAHL23Q1",262,0)
 ..D SET^HLOAPI(.RASEG,"F",11,1)
"RTN","RAHL23Q1",263,0)
 ..S RAERROR=$$ADDSEG^HLOAPI(.HLMSTATE,.RASEG)
"RTN","RAHL23Q1",264,0)
 ..Q
"RTN","RAHL23Q1",265,0)
 .Q
"RTN","RAHL23Q1",266,0)
 Q RAERROR
"RTN","RAHL23Q1",267,0)
 ;
"RTN","RAHL23Q1",268,0)
MSA(RAERR) ;generate the MSA segment
"RTN","RAHL23Q1",269,0)
 N RACKCODE,RASEG S RACKCODE=$S($L(RAERR):"AE",1:"AA")
"RTN","RAHL23Q1",270,0)
 D SET^HLOAPI(.RASEG,"MSA",0),SET^HLOAPI(.RASEG,RACKCODE,1)
"RTN","RAHL23Q1",271,0)
 D SET^HLOAPI(.RASEG,RACNTRL,2),SET^HLOAPI(.RASEG,$G(RAERR),3)
"RTN","RAHL23Q1",272,0)
 Q $$ADDSEG^HLOAPI(.HLMSTATE,.RASEG)
"RTN","RAHL23Q1",273,0)
 ;
"RTN","RAHL23Q1",274,0)
DSC() ;build the continuation pointer segment. The format is the message ID of the query
"RTN","RAHL23Q1",275,0)
 ;message concatenated (by a dash) to the record number count value (RACNT)
"RTN","RAHL23Q1",276,0)
 N RASEG,RAX S RAX=RACNTRL_"-"_RACNT
"RTN","RAHL23Q1",277,0)
 D SET^HLOAPI(.RASEG,"DSC",0),SET^HLOAPI(.RASEG,RAX,1)
"RTN","RAHL23Q1",278,0)
 Q $$ADDSEG^HLOAPI(.HLMSTATE,.RASEG)
"RTN","RAHL23Q1",279,0)
 ;
"RTN","RAHL23Q1",280,0)
BLDQRD() ;build the QRD segment
"RTN","RAHL23Q1",281,0)
 N RAI,RAK,RASEG,RAX S RAI=0 D SET^HLOAPI(.RASEG,"QRD",0)
"RTN","RAHL23Q1",282,0)
 S RAX=$E(RAQWHO,1,3)_"-"_$E(RAQWHO,4,5)_"-"_$E(RAQWHO,6,9) ;put back the delimiters
"RTN","RAHL23Q1",283,0)
 F RAK="RAQDT","RAQFC","RAQPRI","RAQID","RAQDRT","RAQDRDT","RAQUANT","RAX","RAQWHAT","RAQDEPT" D
"RTN","RAHL23Q1",284,0)
 .S RAI=RAI+1 Q:'($D(@RAK)#2)
"RTN","RAHL23Q1",285,0)
 .I RAI=7 D
"RTN","RAHL23Q1",286,0)
 ..D SET^HLOAPI(.RASEG,RAQUANT,RAI,1),SET^HLOAPI(.RASEG,RAQUNIT,RAI,2)
"RTN","RAHL23Q1",287,0)
 ..Q
"RTN","RAHL23Q1",288,0)
 .E  D SET^HLOAPI(.RASEG,@RAK,RAI)
"RTN","RAHL23Q1",289,0)
 .Q
"RTN","RAHL23Q1",290,0)
 Q $$ADDSEG^HLOAPI(.HLMSTATE,.RASEG)
"RTN","RAHL23Q1",291,0)
 ;
"RTN","RAHL23Q1",292,0)
BLDQRF() ;build the QRF segment
"RTN","RAHL23Q1",293,0)
 N RAI,RAK,RASEG S RAI=0 D SET^HLOAPI(.RASEG,"QRF",0)
"RTN","RAHL23Q1",294,0)
 F RAK="RAQWHERE","RAQSTART","RAQEND" D
"RTN","RAHL23Q1",295,0)
 .S RAI=RAI+1 Q:'($D(@RAK)#2)
"RTN","RAHL23Q1",296,0)
 .D SET^HLOAPI(.RASEG,@RAK,RAI)
"RTN","RAHL23Q1",297,0)
 .Q
"RTN","RAHL23Q1",298,0)
 Q $$ADDSEG^HLOAPI(.HLMSTATE,.RASEG)
"RTN","RAHL23Q1",299,0)
 ;
"RTN","RAHL23Q1",300,0)
PARSE(RAFLDATA) ;parse the string down to the component/sub-component
"RTN","RAHL23Q1",301,0)
 N RACOMP,RAD,RAE,RASCOMP
"RTN","RAHL23Q1",302,0)
 ;RAB & RAC passed globally
"RTN","RAHL23Q1",303,0)
 ;RAFLDATA is the field value (may be part of a repetition passed from PID)
"RTN","RAHL23Q1",304,0)
 ;RACOMP = is the specific component of a specific HL7 field
"RTN","RAHL23Q1",305,0)
 ;RAD = the specific instance of a component: first, second, third, etc...
"RTN","RAHL23Q1",306,0)
 F RAD=1:1:$L(RAFLDATA,RACS) S RACOMP=$P(RAFLDATA,RACS,RAD) D:RACOMP'=""
"RTN","RAHL23Q1",307,0)
 .;RAE = the specific instance of a sub-component: first, second, third, etc...
"RTN","RAHL23Q1",308,0)
 .;RASCOMP = the specific sub-component within a component
"RTN","RAHL23Q1",309,0)
 .F RAE=1:1:$L(RACOMP,RASCS) S RASCOMP=$P(RACOMP,RASCS,RAE) D:RASCOMP'=""
"RTN","RAHL23Q1",310,0)
 ..;now we have the # of: repetitions, components, & sub-components
"RTN","RAHL23Q1",311,0)
 ..;call SET^HLOAPI. paramters: SET(SEG,VALUE,FIELD,COMP,SUBCOMP,REP)
"RTN","RAHL23Q1",312,0)
 ..D SET^HLOAPI(.RASEG,RASCOMP,RAB,RAD,RAE,RAC)
"RTN","RAHL23Q1",313,0)
 ..Q
"RTN","RAHL23Q1",314,0)
 .Q
"RTN","RAHL23Q1",315,0)
 Q
"RTN","RAHL23Q1",316,0)
 ;
"RTN","RAHL23QU")
0^5^B19520551^n/a
"RTN","RAHL23QU",1,0)
RAHL23QU ;HINES OIFO/GJC query message/event type utilities
"RTN","RAHL23QU",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**78**;Mar 16, 1998;Build 5
"RTN","RAHL23QU",3,0)
 ;
"RTN","RAHL23QU",4,0)
 ;Integration Agreements
"RTN","RAHL23QU",5,0)
 ;----------------------
"RTN","RAHL23QU",6,0)
 ;$$STARTMSG^HLOPRS(4718), XMD(10070)
"RTN","RAHL23QU",7,0)
 ;
"RTN","RAHL23QU",8,0)
INIT ;initialize variables
"RTN","RAHL23QU",9,0)
 ;RADTE, RAY3 defined in RAHL23Q
"RTN","RAHL23QU",10,0)
 S RAZDAYCS=$E(RADTE,4,7)_$E(RADTE,2,3)_"-"_+RAY3,RAZPRC=+$P(RAY3,U,2)
"RTN","RAHL23QU",11,0)
 S RAZPIMG=+$P($G(^RAMIS(71,RAZPRC,0)),U,12),RAZPIMG=$P($G(^RA(79.2,RAZPIMG,0)),U)
"RTN","RAHL23QU",12,0)
 S RAZPRC(0)=$G(^RAMIS(71,+RAZPRC,0)),RAZCPT=+$P(RAZPRC(0),U,9)
"RTN","RAHL23QU",13,0)
 S RAZCPT(0)=$$NAMCODE^RACPTMSC(RAZCPT,DT)
"RTN","RAHL23QU",14,0)
 Q
"RTN","RAHL23QU",15,0)
 ;
"RTN","RAHL23QU",16,0)
GETFLD(SEG,FLD) ;get the data from a particular HL7 segment.
"RTN","RAHL23QU",17,0)
 ;Input : SEG - Array with the segment header and first field separator included.
"RTN","RAHL23QU",18,0)
 ;              SEG is either the lead segment or in the case that the segment is
"RTN","RAHL23QU",19,0)
 ;              over 245 characters in length, all of the sibling segments.
"RTN","RAHL23QU",20,0)
 ;      : FLD - Get data from a HL7 specific field
"RTN","RAHL23QU",21,0)
 ;Output: XDX - Return data from a specific HL7 field
"RTN","RAHL23QU",22,0)
 ;HLFS=fld separator is required
"RTN","RAHL23QU",23,0)
 Q:FLD'>0 ""
"RTN","RAHL23QU",24,0)
 N SUB,XDX S SUB=$O(SEG(0))
"RTN","RAHL23QU",25,0)
 I SUB D
"RTN","RAHL23QU",26,0)
 .;since the header in included in the string the true piece on the string 
"RTN","RAHL23QU",27,0)
 .;to be returned is offset by one. Take this into account by adding one to
"RTN","RAHL23QU",28,0)
 .;FLD (FLD=FLD+1)  
"RTN","RAHL23QU",29,0)
 .N HDR,LEN,X S FLD=FLD+1
"RTN","RAHL23QU",30,0)
 .S X=$G(SEG(SUB)),HDR=$E(X,1,3),LEN=$L(X,HLFS)
"RTN","RAHL23QU",31,0)
 .I FLD<LEN S XDX=$P(X,HLFS,FLD) Q
"RTN","RAHL23QU",32,0)
 .I FLD=LEN S XDX=$P(X,HLFS,FLD) D  Q
"RTN","RAHL23QU",33,0)
 ..;is there a sibling segment? If so the 1st piece
"RTN","RAHL23QU",34,0)
 ..;of that segment is part of the data.
"RTN","RAHL23QU",35,0)
 ..N SUB2 S SUB2=$O(SEG(SUB,0)) Q:'SUB2
"RTN","RAHL23QU",36,0)
 ..S XDX=XDX_$P(SEG(SUB,SUB2),HLFS)
"RTN","RAHL23QU",37,0)
 ..Q
"RTN","RAHL23QU",38,0)
 .;
"RTN","RAHL23QU",39,0)
 .E  D  ;the field requested is on a sibling segment.
"RTN","RAHL23QU",40,0)
 .;The initial segment has 'LEN' pieces. Check the sibling
"RTN","RAHL23QU",41,0)
 .;segments. Remember that each sibling segment might not
"RTN","RAHL23QU",42,0)
 .;break cleanly on a field separator.
"RTN","RAHL23QU",43,0)
 .N SUB2,X S SUB2=0 F  S SUB2=$O(SEG(SUB,SUB2)) Q:'SUB2  D  Q:$D(XDX)#2
"RTN","RAHL23QU",44,0)
 ..;
"RTN","RAHL23QU",45,0)
 ..;define X - we need to strip off any partial field data that would
"RTN","RAHL23QU",46,0)
 ..;throw off our # of fields count.
"RTN","RAHL23QU",47,0)
 ..;
"RTN","RAHL23QU",48,0)
 ..;if X=data1_FS_data2_FS... set X=data2_FS...
"RTN","RAHL23QU",49,0)
 ..;if X=FS_data1_FS_data2_FS... set X=data1_FS_data2_FS...
"RTN","RAHL23QU",50,0)
 ..;
"RTN","RAHL23QU",51,0)
 ..S X=$G(SEG(SUB,SUB2)),X=$E(X,$F(X,HLFS),$L(X)) ;discard all char left
"RTN","RAHL23QU",52,0)
 ..;of the field separator including the field separator.
"RTN","RAHL23QU",53,0)
 ..;
"RTN","RAHL23QU",54,0)
 ..;with each sibling segment we add to the total number of fields
"RTN","RAHL23QU",55,0)
 ..;(LEN+NEWLEN) checked. The result of the HL7 field we require data
"RTN","RAHL23QU",56,0)
 ..;from subtracted from the total number of fields checked indicates
"RTN","RAHL23QU",57,0)
 ..;the piece (Y) on the current string that we're after. 
"RTN","RAHL23QU",58,0)
 ..S NEWLEN=$L(X,HLFS),Y=FLD-LEN
"RTN","RAHL23QU",59,0)
 ..I Y'>NEWLEN D
"RTN","RAHL23QU",60,0)
 ...S XDX=$P(X,HLFS,Y) Q:Y<NEWLEN
"RTN","RAHL23QU",61,0)
 ...;do we want the last piece of the current segment
"RTN","RAHL23QU",62,0)
 ...;(Y=NEWLEN)? is there another sibling segment?
"RTN","RAHL23QU",63,0)
 ...;If so the 1st piece of that segment is part of the data.
"RTN","RAHL23QU",64,0)
 ...N SUB3 S SUB3=$O(SEG(SUB,SUB2)) Q:'SUB3
"RTN","RAHL23QU",65,0)
 ...S XDX=XDX_$P(SEG(SUB,SUB3),HLFS)
"RTN","RAHL23QU",66,0)
 ...Q
"RTN","RAHL23QU",67,0)
 ..S LEN=LEN+NEWLEN
"RTN","RAHL23QU",68,0)
 ..Q
"RTN","RAHL23QU",69,0)
 .Q
"RTN","RAHL23QU",70,0)
 Q $S($D(XDX)#2:XDX,1:"")
"RTN","RAHL23QU",71,0)
 ;
"RTN","RAHL23QU",72,0)
ACCEPT ;Come here when a accept ack is received from the vendor.
"RTN","RAHL23QU",73,0)
 ;Send an email message to the local HL7 mail group if the response
"RTN","RAHL23QU",74,0)
 ;from the receiving system is not a Accept Acknowledgment ("CA").
"RTN","RAHL23QU",75,0)
 ;
"RTN","RAHL23QU",76,0)
 ;Note: The mail group must be populated and Postmaster must be
"RTN","RAHL23QU",77,0)
 ;a member of the mail group in order for messages to flow.
"RTN","RAHL23QU",78,0)
 ;
"RTN","RAHL23QU",79,0)
 ;Input : HLMSGIEN & HLMSTATE are defined globally
"RTN","RAHL23QU",80,0)
 ;Output: RASEG ($$NEXTSEG^HLOPRS) is the HL7 segment broken out
"RTN","RAHL23QU",81,0)
 ;        by field components
"RTN","RAHL23QU",82,0)
 ;  
"RTN","RAHL23QU",83,0)
 N RAERR,RAFS,RAMSA,RAMSH,RASEG
"RTN","RAHL23QU",84,0)
 ;
"RTN","RAHL23QU",85,0)
 ;RAERR is the error flag. Two parts: first piece is the error indicator which is Boolean.
"RTN","RAHL23QU",86,0)
 ;One for an error; zero for no error. If error; error text can be found in the second piece
"RTN","RAHL23QU",87,0)
 ;RAERR. RAERR has a default value that indicates an error is present.
"RTN","RAHL23QU",88,0)
 S RAERR=1
"RTN","RAHL23QU",89,0)
 ;
"RTN","RAHL23QU",90,0)
 I '$$STARTMSG^HLOPRS(.HLMSTATE,HLMSGIEN,.RAMSH) D  D CAERR QUIT
"RTN","RAHL23QU",91,0)
 .S $P(RAERR,U,2)="The commit acknowledgment message cannot be evaluated." Q
"RTN","RAHL23QU",92,0)
 ;
"RTN","RAHL23QU",93,0)
 ;where RAFS  = HLMSTATE("HDR","FIELD SEPARATOR")=field_separator (usually the "|" or "^")
"RTN","RAHL23QU",94,0)
 ;where RAMSA = HLMSTATE("STATUS","ACCEPT ACK MSA")=MSA|CA|message_id
"RTN","RAHL23QU",95,0)
 ;
"RTN","RAHL23QU",96,0)
 S RAFS=$G(HLMSTATE("HDR","FIELD SEPARATOR")),RAMSA=$G(HLMSTATE("STATUS","ACCEPT ACK MSA"))
"RTN","RAHL23QU",97,0)
 ;
"RTN","RAHL23QU",98,0)
 S:$P(RAMSA,RAFS,2)="CA" RAERR=0
"RTN","RAHL23QU",99,0)
 Q:RAERR=0
"RTN","RAHL23QU",100,0)
 ;
"RTN","RAHL23QU",101,0)
 ;We're missing the "CA"; set RAERR to the correct error text and email the users.
"RTN","RAHL23QU",102,0)
 ;
"RTN","RAHL23QU",103,0)
 S $P(RAERR,U,2)="The inbound HL7 message is not a successful commit acknowledgment."
"RTN","RAHL23QU",104,0)
 ;
"RTN","RAHL23QU",105,0)
CAERR ;Come here on an error (+RAERR>0). This function will send an email
"RTN","RAHL23QU",106,0)
 ;to a local MailMan group if MSA-1 didn't exist or was not set to "CA".
"RTN","RAHL23QU",107,0)
 ;
"RTN","RAHL23QU",108,0)
 N DIFROM,RATXT S XMSUB="VistA teleradiology (RA) HL7 error",XMDUZ=.5
"RTN","RAHL23QU",109,0)
 S RATXT(1)="VistA Radiology NTP HL7 message notification event."
"RTN","RAHL23QU",110,0)
 S RATXT(2)=" "
"RTN","RAHL23QU",111,0)
 S RATXT(3)="HL7 Message ID: "_$G(RAMSH("MESSAGE CONTROL ID"),"Unknown")
"RTN","RAHL23QU",112,0)
 S RATXT(4)="VistA global root w/IEN = ^HLB("_$G(HLMSGIEN,"Unknown")
"RTN","RAHL23QU",113,0)
 S RATXT(5)=" "
"RTN","RAHL23QU",114,0)
 S RATXT(6)="Error: "_$P($G(RAERR),U,2)
"RTN","RAHL23QU",115,0)
 S XMY("G.RAD HL7 MESSAGES")="",XMTEXT="RATXT("
"RTN","RAHL23QU",116,0)
 D ^XMD K XMSUB,XMY,XMTEXT,XMZ,XMDUZ QUIT
"RTN","RAHL23QU",117,0)
 ;
"VER")
8.0^22.0
"BLD",7085,6)
^83
**END**
**END**
